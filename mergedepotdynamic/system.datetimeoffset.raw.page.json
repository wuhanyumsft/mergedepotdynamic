{"content":"    \r\n    <h1 id=\"System_DateTimeOffset\">\r\n      <span class=\"lang-csharp\">DateTimeOffset</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct DateTimeOffset : IComparable, IComparable&lt;DateTimeOffset&gt;, IEquatable&lt;DateTimeOffset&gt;, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DateTimeOffset</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DateTimeOffset structure includes a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, together with an <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property that defines the difference between the current DateTimeOffset instance&#39;s date and time and Coordinated Universal Time (UTC). Because it exactly defines a date and time relative to UTC, the DateTimeOffset structure does not include a <code>Kind</code> member, as the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure does. It represents dates and times with values whose UTC ranges from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era), to 11:59:59 P.M., December 31, 9999 A.D. (C.E.).  </p>\n<p> The time component of a DateTimeOffset value is measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> calendar. A DateTimeOffset value is always expressed in the context of an explicit or default calendar. Ticks that are attributable to leap seconds are not included in the total number of ticks.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerDay\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerDay</a>, <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerHour\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerHour</a>, <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerMinute\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerMinute</a>, <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerSecond\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerSecond</a>, or <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerMillisecond\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerMillisecond</a> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Second_\" data-linktype=\"relative-path\">Second</a> component of a DateTimeOffset value, you can use the expression <code>dateValue.Second + nTicks/Timespan.TicksPerSecond</code>.  </p>\n</div>\n<p> Although a DateTimeOffset value includes an offset, it is not a fully time zone-aware data structure. While an offset from UTC is one characteristic of a time zone, it does not unambiguously identify a time zone. Not only do multiple time zones share the same offset from UTC, but the offset of a single time zone changes if it observes daylight saving time. This means that, as soon as a DateTimeOffset value is disassociated from its time zone, it can no longer be unambiguously linked back to its original time zone.  </p>\n<p> Because DateTimeOffset is a structure, a DateTimeOffset object that has been declared but not otherwise initialized contains the default values for each of its member fields. This means that its <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_DateTime_\" data-linktype=\"relative-path\">DateTime</a> property is set to <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">System.DateTimeOffset.MinValue</a> and its <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property is set to <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a>.  </p>\n<p> You can create a new DateTimeOffset value by calling any of the overloads of its constructor, which are similar to the overloaded constructors for the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure. You can also create a new DateTimeOffset value by assigning it a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value. This is an implicit conversion; it does not require a casting operator (in C#) or call to a conversion method (in Visual Basic). You can also initialize a DateTimeOffset value from the string representation of a date and time by calling a number of static string parsing methods, which include <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_\" data-linktype=\"relative-path\">Parse</a>, <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a>, <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_TryParse_\" data-linktype=\"relative-path\">TryParse</a>, and <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a>.  </p>\n<p> The members of the DateTimeOffset structure provide functionality in the following areas:  </p>\n<ul>\n<li><p>Date and time arithmetic.  </p>\n<p> You can add or subtract either dates or time intervals from a particular DateTimeOffset value. Arithmetic operations with DateTimeOffset values, unlike those with <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values, adjust for differences in time offsets when returning a result. For example, the following code uses <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> variables to subtract the current local time from the current UTC time. The code then uses DateTimeOffset variables to perform the same operation. The subtraction with <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values returns the local time zone&#39;s difference from UTC, while the subtraction with DateTimeOffset values returns <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Type#1\">Module DateArithmetic\n   Public Sub Main()\n      Dim date1, date2 As Date\n      Dim dateOffset1, dateOffset2 As DateTimeOffset\n      Dim difference As TimeSpan\n      \n      &#39; Find difference between Date.Now and Date.UtcNow\n      date1 = Date.Now\n      date2 = Date.UtcNow\n      difference = date1 - date2\n      Console.WriteLine(&quot;{0} - {1} = {2}&quot;, date1, date2, difference)\n      \n      &#39; Find difference between Now and UtcNow using DateTimeOffset\n      dateOffset1 = date.Now\n      dateOffset2 = date.UtcNow\n      difference = dateOffset1 - dateOffset2\n      Console.WriteLine(&quot;{0} - {1} = {2}&quot;, _\n                        dateOffset1, dateOffset2, difference)\n      &#39; If run in the Pacific Standard time zone on 4/2/2007, the example\n      &#39; displays the following output to the console:\n      &#39;    4/2/2007 7:23:57 PM - 4/3/2007 2:23:57 AM = -07:00:00\n      &#39;    4/2/2007 7:23:57 PM -07:00 - 4/3/2007 2:23:57 AM +00:00 = 00:00:00                        \n   End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Type#1\">using System;\n\npublic class DateArithmetic\n{\n   public static void Main()\n   {\n      DateTime date1, date2;\n      DateTimeOffset dateOffset1, dateOffset2;\n      TimeSpan difference;\n      \n      // Find difference between Date.Now and Date.UtcNow\n      date1 = DateTime.Now;\n      date2 = DateTime.UtcNow;\n      difference = date1 - date2;\n      Console.WriteLine(&quot;{0} - {1} = {2}&quot;, date1, date2, difference);\n      \n      // Find difference between Now and UtcNow using DateTimeOffset\n      dateOffset1 = DateTimeOffset.Now;\n      dateOffset2 = DateTimeOffset.UtcNow;\n      difference = dateOffset1 - dateOffset2;\n      Console.WriteLine(&quot;{0} - {1} = {2}&quot;, \n                        dateOffset1, dateOffset2, difference);\n      // If run in the Pacific Standard time zone on 4/2/2007, the example\n      // displays the following output to the console:\n      //    4/2/2007 7:23:57 PM - 4/3/2007 2:23:57 AM = -07:00:00\n      //    4/2/2007 7:23:57 PM -07:00 - 4/3/2007 2:23:57 AM +00:00 = 00:00:00                        \n   }\n}\n</code></pre></li>\n<li><p>Type conversion operations.  </p>\n<p> You can convert DateTimeOffset values to <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_DateTime_\" data-linktype=\"relative-path\">DateTime</a> values and vice versa.  </p>\n</li>\n<li><p>Time manipulation and extraction operations.  </p>\n<p> You can extract either the date or the time of a DateTimeOffset value. You can also retrieve the value of a particular DateTimeOffset component, such as its year or its month.  </p>\n</li>\n<li><p>Date and time conversion.  </p>\n<p> You can convert any DateTimeOffset value to another DateTimeOffset value that represents the same point in time in another time zone. However, a time zone&#39;s adjustment rules are applied only in the case of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToLocalTime_\" data-linktype=\"relative-path\">ToLocalTime</a> method, which converts a DateTimeOffset value to the date and time in the local system zone.  </p>\n</li>\n<li><p>Date and time comparison.  </p>\n<p> You can determine whether any particular DateTimeOffset value is earlier than, the same as, or later than another DateTimeOffset value. Before the comparison is performed, all values are converted to UTC.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset__ctor_System_DateTime_\" data-linktype=\"self-bookmark\">DateTimeOffset(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset__ctor_System_DateTime_System_TimeSpan_\" data-linktype=\"self-bookmark\">DateTimeOffset(DateTime,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value and offset.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset__ctor_System_Int64_System_TimeSpan_\" data-linktype=\"self-bookmark\">DateTimeOffset(Int64,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified number of ticks and offset.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_TimeSpan_\" data-linktype=\"self-bookmark\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified year, month, day, hour, minute, second, and offset.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_TimeSpan_\" data-linktype=\"self-bookmark\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_TimeSpan_\" data-linktype=\"self-bookmark\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_MaxValue\" data-linktype=\"self-bookmark\">MaxValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the greatest possible value of <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_MinValue\" data-linktype=\"self-bookmark\">MinValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents the earliest possible <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Date\" data-linktype=\"self-bookmark\">Date</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the date component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_DateTime\" data-linktype=\"self-bookmark\">DateTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Day\" data-linktype=\"self-bookmark\">Day</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the day of the month represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_DayOfWeek\" data-linktype=\"self-bookmark\">DayOfWeek</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the day of the week represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_DayOfYear\" data-linktype=\"self-bookmark\">DayOfYear</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the day of the year represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Hour\" data-linktype=\"self-bookmark\">Hour</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the hour component of the time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_LocalDateTime\" data-linktype=\"self-bookmark\">LocalDateTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the local date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Millisecond\" data-linktype=\"self-bookmark\">Millisecond</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the millisecond component of the time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Minute\" data-linktype=\"self-bookmark\">Minute</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the minute component of the time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Month\" data-linktype=\"self-bookmark\">Month</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the month component of the date represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Now\" data-linktype=\"self-bookmark\">Now</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that is set to the current date and time on the current computer, with the offset set to the local time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Offset\" data-linktype=\"self-bookmark\">Offset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Second\" data-linktype=\"self-bookmark\">Second</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the second component of the clock time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Ticks\" data-linktype=\"self-bookmark\">Ticks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of ticks that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in clock time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_TimeOfDay\" data-linktype=\"self-bookmark\">TimeOfDay</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the time of day for the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_UtcDateTime\" data-linktype=\"self-bookmark\">UtcDateTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the Coordinated Universal Time (UTC) date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_UtcNow\" data-linktype=\"self-bookmark\">UtcNow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">Zero</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_UtcTicks\" data-linktype=\"self-bookmark\">UtcTicks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of ticks that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Year\" data-linktype=\"self-bookmark\">Year</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the year component of the date represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Add_System_TimeSpan_\" data-linktype=\"self-bookmark\">Add(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified time interval to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddDays_System_Double_\" data-linktype=\"self-bookmark\">AddDays(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional days to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddHours_System_Double_\" data-linktype=\"self-bookmark\">AddHours(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional hours to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddMilliseconds_System_Double_\" data-linktype=\"self-bookmark\">AddMilliseconds(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of milliseconds to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddMinutes_System_Double_\" data-linktype=\"self-bookmark\">AddMinutes(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional minutes to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddMonths_System_Int32_\" data-linktype=\"self-bookmark\">AddMonths(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of months to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddSeconds_System_Double_\" data-linktype=\"self-bookmark\">AddSeconds(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional seconds to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddTicks_System_Int64_\" data-linktype=\"self-bookmark\">AddTicks(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of ticks to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_AddYears_System_Int32_\" data-linktype=\"self-bookmark\">AddYears(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of years to the value of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Compare_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">Compare(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_CompareTo_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">CompareTo(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and indicates whether the current object is earlier than, the same as, or later than the second <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Equals_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">Equals(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object represents the same point in time as a specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object represents the same point in time as a specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Equals_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">Equals(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same point in time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_EqualsExact_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">EqualsExact(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object represents the same time and has the same offset as a specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_FromFileTime_System_Int64_\" data-linktype=\"self-bookmark\">FromFileTime(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified Windows file time to an equivalent local time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_FromUnixTimeMilliseconds_System_Int64_\" data-linktype=\"self-bookmark\">FromUnixTimeMilliseconds(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_FromUnixTimeSeconds_System_Int64_\" data-linktype=\"self-bookmark\">FromUnixTimeSeconds(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Parse_System_String_\" data-linktype=\"self-bookmark\">Parse(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date, time, and offset to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Parse_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">Parse(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified culture-specific format information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"self-bookmark\">Parse(String,IFormatProvider,DateTimeStyles)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified culture-specific format information and formatting style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ParseExact_System_String_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ParseExact(String,String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"self-bookmark\">ParseExact(String,String,IFormatProvider,DateTimeStyles)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ParseExact_System_String_System_String___System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"self-bookmark\">ParseExact(String,String[],IFormatProvider,DateTimeStyles)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Subtract_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">Subtract(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Subtracts a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value that represents a specific date and time from the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_Subtract_System_TimeSpan_\" data-linktype=\"self-bookmark\">Subtract(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Subtracts a specified time interval from the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToFileTime\" data-linktype=\"self-bookmark\">ToFileTime()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a Windows file time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToLocalTime\" data-linktype=\"self-bookmark\">ToLocalTime()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that represents the local time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToOffset_System_TimeSpan_\" data-linktype=\"self-bookmark\">ToOffset(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to the date and time specified by an offset value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToString_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation using the specified culture-specific formatting information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"self-bookmark\">ToString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation using the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToString_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation using the specified format and culture-specific format information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToUniversalTime\" data-linktype=\"self-bookmark\">ToUniversalTime()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value that represents the Coordinated Universal Time (UTC).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToUnixTimeMilliseconds\" data-linktype=\"self-bookmark\">ToUnixTimeMilliseconds()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_ToUnixTimeSeconds\" data-linktype=\"self-bookmark\">ToUnixTimeSeconds()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_TryParse_System_String_System_DateTimeOffset__\" data-linktype=\"self-bookmark\">TryParse(String,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tries to converts a specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_TryParse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTimeOffset__\" data-linktype=\"self-bookmark\">TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tries to convert a specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_TryParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTimeOffset__\" data-linktype=\"self-bookmark\">TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_TryParseExact_System_String_System_String___System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTimeOffset__\" data-linktype=\"self-bookmark\">TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_Addition_System_DateTimeOffset_System_TimeSpan_\" data-linktype=\"self-bookmark\">op_Addition(DateTimeOffset,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a specified time interval to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that has a specified date and time, and yields a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that has new a date and time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_Equality_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_Equality(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same point in time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_GreaterThan_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_GreaterThan(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is greater than (or later than) a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_GreaterThanOrEqual_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is greater than or equal to a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_Implicit_System_DateTime_\" data-linktype=\"self-bookmark\">op_Implicit(DateTime)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_Inequality_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_Inequality(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects refer to different points in time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_LessThan_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_LessThan(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is less than a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_LessThanOrEqual_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is less than a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_Subtraction_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">op_Subtraction(DateTimeOffset,DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Subtracts one <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object from another and yields a time interval.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_op_Subtraction_System_DateTimeOffset_System_TimeSpan_\" data-linktype=\"self-bookmark\">op_Subtraction(DateTimeOffset,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Subtracts a specified time interval from a specified date and time, and yields a new date and time.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_System_IComparable_CompareTo_System_Object_\" data-linktype=\"self-bookmark\">IComparable.CompareTo(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object with another object of the same type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">IDeserializationCallback.OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs when the deserialization of an object has been completed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_DateTimeOffset_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data required to serialize the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset__ctor_System_DateTime_\">\r\n    \r\n            <a id=\"System_DateTimeOffset__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeOffset(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The Coordinated Universal Time (UTC) date and time that results from applying the offset is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a>.  </p>\n<p> -or-  </p>\n<p> The UTC date and time that results from applying the offset is later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor&#39;s behavior depends on the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter:  </p>\n<ul>\n<li><p>If the value of <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_DateTime_\" data-linktype=\"relative-path\">DateTime</a> property of the new instance is set equal to <code>dateTime</code>, and the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property is set equal to <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">Zero</a>.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_DateTime_\" data-linktype=\"relative-path\">DateTime</a> property of the new instance is set equal to <code>dateTime</code>, and the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property is set equal to the offset of the local system&#39;s current time zone.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates how the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter affects the date and time value that is returned by this constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#1\">      Dim localNow As Date = Date.Now\n      Dim localOffset As New DateTimeOffset(localNow)\n      Console.WriteLine(localOffset.ToString())\n      \n      Dim utcNow As Date = Date.UtcNow\n      Dim utcOffset As New DateTimeOffset(utcNow)\n      Console.WriteLine(utcOffset.ToString())\n      \n      Dim unspecifiedNow As Date = Date.SpecifyKind(Date.Now, _\n                                        DateTimeKind.Unspecified)\n      Dim unspecifiedOffset As New DateTimeOffset(unspecifiedNow)\n      Console.WriteLine(unspecifiedOffset.ToString())\n      &#39;\n      &#39; The code produces the following output if run on Feb. 23, 2007, on\n      &#39; a system 8 hours earlier than UTC:\n      &#39;    2/23/2007 4:21:58 PM -08:00\n      &#39;    2/24/2007 12:21:58 AM +00:00\n      &#39;    2/23/2007 4:21:58 PM -08:00      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#1\">      DateTime localNow = DateTime.Now;\n      DateTimeOffset localOffset = new DateTimeOffset(localNow);\n      Console.WriteLine(localOffset.ToString());\n      \n      DateTime utcNow = DateTime.UtcNow;\n      DateTimeOffset utcOffset = new DateTimeOffset(utcNow);\n      Console.WriteLine(utcOffset.ToString());\n      \n      DateTime unspecifiedNow = DateTime.SpecifyKind(DateTime.Now, \n                                     DateTimeKind.Unspecified);\n      DateTimeOffset unspecifiedOffset = new DateTimeOffset(unspecifiedNow);\n      Console.WriteLine(unspecifiedOffset.ToString());\n      //\n      // The code produces the following output if run on Feb. 23, 2007, on\n      // a system 8 hours earlier than UTC:\n      //   2/23/2007 4:21:58 PM -08:00\n      //   2/24/2007 12:21:58 AM +00:00\n      //   2/23/2007 4:21:58 PM -08:00      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset__ctor_System_DateTime_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeOffset(DateTime,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value and offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset (DateTime dateTime, TimeSpan offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>dateTime.Kind</code> equals <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and <code>offset</code> does not equal zero.  </p>\n<p> -or-  </p>\n<p> <code>dateTime.Kind</code> equals <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and <code>offset</code> does not equal the offset of the system&#39;s local time zone.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> is not specified in whole minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> is less than -14 hours or greater than 14 hours.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> is less than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor&#39;s behavior depends in part on the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the <code>dateTime</code> parameter:  </p>\n<ul>\n<li><p>If the value of <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the value of the <code>offset</code> parameter must be 0 or an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the value of the <code>offset</code> parameter must be equal to the local time zone&#39;s offset from Coordinated Universal Time (UTC) for that particular date or an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n</li>\n<li><p>If the value of <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, the <code>offset</code> parameter can have any valid value.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to initialize a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object with a date and time and the offset of the local time zone when that time zone is not known in advance.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#3\">      Dim localTime As Date = #07/12/2007 6:32AM#\n      Dim dateAndOffset As New DateTimeOffset(localTime, _\n                               TimeZoneInfo.Local.GetUtcOffset(localTime))\n      Console.WriteLine(dateAndOffset)\n      &#39; The code produces the following output:\n      &#39;    7/12/2007 6:32:00 AM -07:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#3\">      DateTime localTime = new DateTime(2007, 07, 12, 06, 32, 00); \n      DateTimeOffset dateAndOffset = new DateTimeOffset(localTime, \n                               TimeZoneInfo.Local.GetUtcOffset(localTime));\n      Console.WriteLine(dateAndOffset);\n      // The code produces the following output:\n      //    7/12/2007 6:32:00 AM -07:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset__ctor_System_Int64_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeOffset(Int64,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified number of ticks and offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset (long ticks, TimeSpan offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ticks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A date and time expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> is not specified in whole minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> property is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a> or later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.  </p>\n<p> -or-  </p>\n<p> <code>ticks</code> is less than <code>DateTimeOffset.MinValue.Ticks</code> or greater than <code>DateTimeOffset.MaxValue.Ticks</code>.  </p>\n<p> -or-  </p>\n<p> <code>Offset</code> s less than -14 hours or greater than 14 hours.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Ordinarily, trying to call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset__ctor_\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor to instantiate a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value with a local time and an offset other than that of the local time zone throws an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>. You can use this overload of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor to work around this limitation. The following example uses the local time&#39;s number of ticks to instantiate a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value whose offset does not necessarily represent that of the local time:  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#4\">      Dim localTime As Date = Date.Now\n      Dim nonLocalDateWithOffset As New DateTimeOffset(localTime.Ticks, _\n                                        New TimeSpan(2, 0, 0))\n      Console.WriteLine(nonLocalDateWithOffset)                                        \n      &#39;\n      &#39; The code produces the following output if run on Feb. 23, 2007:\n      &#39;    2/23/2007 4:37:50 PM +02:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#4\">      DateTime localTime = DateTime.Now;\n      DateTimeOffset nonLocalDateWithOffset = new DateTimeOffset(localTime.Ticks, \n                                        new TimeSpan(2, 0, 0));\n      Console.WriteLine(nonLocalDateWithOffset); \n      //\n      // The code produces the following output if run on Feb. 23, 2007:\n      //    2/23/2007 4:37:50 PM +02:00\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example initializes a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object by using the number of ticks in an arbitrary date (in this case, July 16, 2007, at 1:32 PM) with an offset of -5.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#2\">      Dim dateWithoutOffset As Date = #07/16/2007 1:32PM#\n      Dim timeFromTicks As New DateTimeOffset(datewithoutOffset.Ticks, _\n                               New TimeSpan(-5, 0, 0))\n      Console.WriteLine(timeFromTicks.ToString())\n      &#39; The code produces the following output:\n      &#39;    7/16/2007 1:32:00 PM -05:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#2\">      DateTime dateWithoutOffset = new DateTime(2007, 7, 16, 13, 32, 00);\n      DateTimeOffset timeFromTicks = new DateTimeOffset(dateWithoutOffset.Ticks, \n                                     new TimeSpan(-5, 0, 0));\n      Console.WriteLine(timeFromTicks.ToString());\n      // The code produces the following output:\n      //    7/16/2007 1:32:00 PM -05:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified year, month, day, hour, minute, second, and offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>year</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The year (1 through 9999).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>month</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The month (1 through 12).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>day</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hour</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The hours (0 through 23).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>minute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The minutes (0 through 59).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>second</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The seconds (0 through 59).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> does not represent whole minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>year</code> is less than one or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than one or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than one or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than zero or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> is less than -14 hours or greater than 14 hours.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> property is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a> or later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor interprets <code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_TimeSpan_\" data-linktype=\"relative-path\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example instantiates a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object by using the DateTimeOffset constructor overload.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#5\">         Dim specificDate As Date = #5/1/2008 6:32AM#\n         Dim offsetDate As New DateTimeOffset(specificDate.Year, _\n                                              specificDate.Month, _\n                                              specificDate.Day, _\n                                              specificDate.Hour, _\n                                              specificDate.Minute, _\n                                              specificDate.Second, _\n                                              New TimeSpan(-5, 0, 0))\n         Console.WriteLine(&quot;Current time: {0}&quot;, offsetDate)\n         Console.WriteLine(&quot;Corresponding UTC time: {0}&quot;, offsetDate.UtcDateTime)                                              \n      &#39; The code produces the following output:\n      &#39;    Current time: 5/1/2008 6:32:00 AM -05:00\n      &#39;    Corresponding UTC time: 5/1/2008 11:32:00 AM      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#5\">         DateTime specificDate = new DateTime(2008, 5, 1, 06, 32, 00); \n         DateTimeOffset offsetDate = new DateTimeOffset(specificDate.Year, \n                                         specificDate.Month, \n                                         specificDate.Day, \n                                         specificDate.Hour, \n                                         specificDate.Minute, \n                                         specificDate.Second, \n                                         new TimeSpan(-5, 0, 0));\n         Console.WriteLine(&quot;Current time: {0}&quot;, offsetDate);\n         Console.WriteLine(&quot;Corresponding UTC time: {0}&quot;, offsetDate.UtcDateTime);                                              \n      // The code produces the following output:\n      //    Current time: 5/1/2008 6:32:00 AM -05:00\n      //    Corresponding UTC time: 5/1/2008 11:32:00 AM      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified year, month, day, hour, minute, second, millisecond, and offset.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>year</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The year (1 through 9999).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>month</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The month (1 through 12).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>day</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hour</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The hours (0 through 23).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>minute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The minutes (0 through 59).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>second</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The seconds (0 through 59).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecond</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The milliseconds (0 through 999).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> does not represent whole minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>year</code> is less than one or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than one or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than one or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than zero or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>millisecond</code> is less than 0 or greater than 999.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> is less than -14 or greater than 14.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> property is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a> or later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor interprets <code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_TimeSpan_\" data-linktype=\"relative-path\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)</a> constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example instantiates a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object by using the DateTimeOffset constructor overload.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#7\">      Dim fmt As String = &quot;dd MMM yyyy HH:mm:ss&quot;\n      Dim thisDate As DateTime = New Date(2007, 06, 12, 19, 00, 14, 16)\n      Dim offsetDate As New DateTimeOffset(thisDate.Year, _\n                                           thisDate.Month, _\n                                           thisDate.Day, _\n                                           thisDate.Hour, _\n                                           thisDate.Minute, _\n                                           thisDate.Second, _\n                                           thisDate.Millisecond, _ \n                                           New TimeSpan(2, 0, 0))  \n      Console.WriteLine(&quot;Current time: {0}:{1}&quot;, offsetDate.ToString(fmt), _ \n                                                 offsetDate.Millisecond)\n      &#39; The code produces the following output:\n      &#39;    Current time: 12 Jun 2007 19:00:14:16      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#7\">      string fmt = &quot;dd MMM yyyy HH:mm:ss&quot;;\n      DateTime thisDate = new DateTime(2007, 06, 12, 19, 00, 14, 16);\n      DateTimeOffset offsetDate = new DateTimeOffset(thisDate.Year, \n                                                     thisDate.Month, \n                                                     thisDate.Day, \n                                                     thisDate.Hour,\n                                                     thisDate.Minute,\n                                                     thisDate.Second,\n                                                     thisDate.Millisecond, \n                                                     new TimeSpan(2, 0, 0));  \n      Console.WriteLine(&quot;Current time: {0}:{1}&quot;, offsetDate.ToString(fmt), offsetDate.Millisecond);\n      // The code produces the following output:\n      //    Current time: 12 Jun 2007 19:00:14:16      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure using the specified year, month, day, hour, minute, second, millisecond, and offset of a specified calendar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>year</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The year.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>month</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The month (1 through 12).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>day</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hour</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The hours (0 through 23).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>minute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The minutes (0 through 59).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>second</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The seconds (0 through 59).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>millisecond</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The milliseconds (0 through 999).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>calendar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> does not represent whole minutes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>calendar</code> cannot be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>year</code> is less than the <code>calendar</code> parameter&#39;s <code>MinSupportedDateTime.Year</code> or greater than <code>MaxSupportedDateTime.Year</code>.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is either less than or greater than the number of months in <code>year</code> in the <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than one or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than zero or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>millisecond</code> is less than 0 or greater than 999.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> is less than -14 hours or greater than 14 hours.  </p>\n<p> -or-  </p>\n<p> The <code>year</code>, <code>month</code>, and <code>day</code> parameters cannot be represented as a date and time value.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> property is earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a> or later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> parameters all reflect values expressed in the calendar specified by the <code>calendar</code> parameter. An exception is thrown if these values form a date and time that cannot be expressed by using this calendar.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses instances of both the <a class=\"xref\" href=\"system.globalization.hebrewcalendar\" data-linktype=\"relative-path\">HebrewCalendar</a> class and the <a class=\"xref\" href=\"system.globalization.hijricalendar\" data-linktype=\"relative-path\">HijriCalendar</a> class to instantiate a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value. That date is then displayed to the console using the respective calendars and the Gregorian calendar.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Constructors#8\">      Dim fmt As CultureInfo\n      Dim year As Integer\n      Dim cal As Calendar\n      Dim dateInCal As DateTimeOffset\n      \n      &#39; Instantiate DateTimeOffset with Hebrew calendar\n      year = 5770\n      cal = New HebrewCalendar()\n      fmt = New CultureInfo(&quot;he-IL&quot;)\n      fmt.DateTimeFormat.Calendar = cal      \n      dateInCal = New DateTimeOffset(year, 7, 12, _\n                                     15, 30, 0, 0, _\n                                     cal, _\n                                     New TimeSpan(2, 0, 0))\n      &#39; Display the date in the Hebrew calendar\n      Console.WriteLine(&quot;Date in Hebrew Calendar: {0:g}&quot;, _\n                         dateInCal.ToString(fmt))\n      &#39; Display the date in the Gregorian calendar                         \n      Console.WriteLine(&quot;Date in Gregorian Calendar: {0:g}&quot;, dateInCal)\n      Console.WriteLine()\n\n      &#39; Instantiate DateTimeOffset with Hijri calendar\n      year = 1431\n      cal = New HijriCalendar()\n      fmt = New CultureInfo(&quot;ar-SA&quot;)\n      fmt.DateTimeFormat.Calendar = cal\n      dateInCal = New DateTimeOffset(year, 7, 12, _\n                                     15, 30, 0, 0, _\n                                     cal, _\n                                     New TimeSpan(2, 0, 0))\n      &#39; Display the date in the Hijri calendar\n      Console.WriteLine(&quot;Date in Hijri Calendar: {0:g}&quot;, _\n                         dateInCal.ToString(fmt))\n      &#39; Display the date in the Gregorian calendar                         \n      Console.WriteLine(&quot;Date in Gregorian Calendar: {0:g}&quot;, dateInCal)\n      Console.WriteLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Constructors#8\">      CultureInfo fmt;\n      int year; \n      Calendar cal;\n      DateTimeOffset dateInCal;\n      \n      // Instantiate DateTimeOffset with Hebrew calendar\n      year = 5770;\n      cal = new HebrewCalendar();\n      fmt = new CultureInfo(&quot;he-IL&quot;);\n      fmt.DateTimeFormat.Calendar = cal;      \n      dateInCal = new DateTimeOffset(year, 7, 12, \n                                     15, 30, 0, 0, \n                                     cal, \n                                     new TimeSpan(2, 0, 0));\n      // Display the date in the Hebrew calendar\n      Console.WriteLine(&quot;Date in Hebrew Calendar: {0:g}&quot;, \n                         dateInCal.ToString(fmt));\n      // Display the date in the Gregorian calendar                         \n      Console.WriteLine(&quot;Date in Gregorian Calendar: {0:g}&quot;, dateInCal);\n      Console.WriteLine();\n\n      // Instantiate DateTimeOffset with Hijri calendar\n      year = 1431;\n      cal = new HijriCalendar();\n      fmt = new CultureInfo(&quot;ar-SA&quot;);\n      fmt.DateTimeFormat.Calendar = cal;\n      dateInCal = new DateTimeOffset(year, 7, 12, \n                                     15, 30, 0, 0, \n                                     cal, \n                                     new TimeSpan(2, 0, 0));\n      // Display the date in the Hijri calendar\n      Console.WriteLine(&quot;Date in Hijri Calendar: {0:g}&quot;, \n                         dateInCal.ToString(fmt));\n      // Display the date in the Gregorian calendar                         \n      Console.WriteLine(&quot;Date in Gregorian Calendar: {0:g}&quot;, dateInCal);\n      Console.WriteLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_MaxValue\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxValue</div>        \r\n          </div>\r\n    \r\n            <p>Represents the greatest possible value of <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly DateTimeOffset MaxValue;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a> is outside the range of the current or specified culture&#39;s default calendar.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this constant is 12/31/9999 11:59:59 PM +00:00.  </p>\n<p> The MaxValue property is used to determine whether the value of a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object or the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value returned by an arithmetic operation is the same as or earlier than this maximum range value. If it is not, the method throws an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>. Any <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is converted to Coordinated Universal Time (UTC) before the method compares it with MaxValue.  This means that a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value whose date and time are close to the maximum range, but whose offset is negative, may throw an exception. For example, the value 12/31/9999 11:00 PM -02:00 is out of range because it is one hour later than MaxValue when it is converted to UTC.  </p>\n<p> Some calendars, such as the <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a>, support an upper date range that is earlier than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>. In these cases, trying to access <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a> in variable assignments or formatting and parsing operations can throw an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>. Instead of retrieving the value of <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, you can retrieve the value of the specified culture&#39;s latest valid date value from the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_MaxSupportedDateTime_\" data-linktype=\"relative-path\">MaxSupportedDateTime</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_MinValue\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinValue</div>        \r\n          </div>\r\n    \r\n            <p>Represents the earliest possible <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly DateTimeOffset MinValue;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of this constant is 1/1/0001 12:00:00 AM +00:00.  </p>\n<p> The MinValue property is used to determine whether the value of a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object or the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value returned by an arithmetic operation is the same as or later than this minimum range value. If it is not, the method throws an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>. Any <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is converted to Coordinated Universal Time (UTC) before the method performs the comparison with MinValue.  This means that a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value whose date and time are close to the minimum range, but whose offset is positive, may throw an exception. For example, the value 1/1/0001 1:00:00 AM +02:00 is out of range because it is one hour earlier than MinValue when it is converted to UTC.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Date\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Date_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Date</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the date component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime Date { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the date component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property removes any significant part of the time component from a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and returns only its significant date component. For example, if the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object has a date and time value of &quot;1/12/07 4:01pm +7:30&quot;, the property returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value of &quot;1/12/07 12:00:00 AM&quot;. The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value can then be displayed by using any of the standard or custom format specifiers that display dates only. (See the Example section for an illustration.)  </p>\n<p> The value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is always <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. It is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> To display a date without its time component, you can also use the &quot;D&quot; or &quot;d&quot; format specifiers; for an illustration, see the Example section.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves the value of the Date property for a specific date. It then displays that value to the console using some standard and custom date-only format specifiers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#1\">      &#39; Illustrate Date property and date formatting\n      Dim thisDate As New DateTimeOffset(#3/17/2008 1:32AM#, New TimeSpan(-5, 0, 0))\n      Dim fmt As String                    &#39; format specifier\n      &#39; Display date only using &quot;D&quot; format specifier\n      &#39; For en-us culture, displays:\n      &#39;   &#39;D&#39; format specifier: Monday, March 17, 2008\n      fmt = &quot;D&quot;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;, _ \n                        fmt, thisDate.Date.ToString(fmt))\n      \n      &#39; Display date only using &quot;d&quot; format specifier\n      &#39; For en-us culture, displays:\n      &#39;   &#39;d&#39; format specifier: 3/17/2008\n      fmt = &quot;d&quot;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;, _ \n                        fmt, thisDate.Date.ToString(fmt))\n      \n      &#39; Display date only using &quot;Y&quot; (or &quot;y&quot;) format specifier\n      &#39; For en-us culture, displays:\n      &#39;   &#39;Y&#39; format specifier: March, 2008\n      fmt = &quot;Y&quot;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;, _ \n                        fmt, thisDate.Date.ToString(fmt))\n                        \n      &#39; Display date only using custom format specifier\n      &#39; For en-us culture, displays:\n      &#39;   &#39;dd MMM yyyy&#39; format specifier: 17 Mar 2008\n      fmt = &quot;dd MMM yyyy&quot;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;, _ \n                        fmt, thisDate.Date.ToString(fmt))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#1\">      // Illustrate Date property and date formatting\n      DateTimeOffset thisDate = new DateTimeOffset(2008, 3, 17, 1, 32, 0, new TimeSpan(-5, 0, 0));\n      string fmt;                      // format specifier\n\n      // Display date only using &quot;D&quot; format specifier\n      // For en-us culture, displays:\n      //   &#39;D&#39; format specifier: Monday, March 17, 2008\n      fmt = &quot;D&quot;;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;,  \n                        fmt, thisDate.Date.ToString(fmt));\n      \n      // Display date only using &quot;d&quot; format specifier\n      // For en-us culture, displays:\n      //   &#39;d&#39; format specifier: 3/17/2008\n      fmt = &quot;d&quot;;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;,  \n                        fmt, thisDate.Date.ToString(fmt));\n      \n      // Display date only using &quot;Y&quot; (or &quot;y&quot;) format specifier\n      // For en-us culture, displays:\n      //   &#39;Y&#39; format specifier: March, 2008\n      fmt = &quot;Y&quot;;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;,  \n                        fmt, thisDate.Date.ToString(fmt));\n                        \n      // Display date only using custom format specifier\n      // For en-us culture, displays:\n      //   &#39;dd MMM yyyy&#39; format specifier: 17 Mar 2008\n      fmt = &quot;dd MMM yyyy&quot;;\n      Console.WriteLine(&quot;&#39;{0}&#39; format specifier: {1}&quot;,  \n                        fmt, thisDate.Date.ToString(fmt));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_DateTime\">\r\n    \r\n            <a id=\"System_DateTimeOffset_DateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime DateTime { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DateTime property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> This property returns both the date and the time component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, which makes it useful for performing <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> conversion. For example, if the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object has a date and time value of &quot;1/12/07 4:01pm + 7:30&quot;, the property returns a date of &quot;1/12/07 4:01pm&quot;.  </p>\n<p> The value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the use of the DateTime property to convert the time returned by the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Now_\" data-linktype=\"relative-path\">Now</a> and <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_UtcNow_\" data-linktype=\"relative-path\">UtcNow</a> properties to <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#2\">      Dim offsetDate As DateTimeOffset \n      Dim regularDate As Date\n      \n      offsetDate = DateTimeOffset.Now\n      regularDate = offsetDate.DateTime\n      Console.WriteLine(&quot;{0} converts to {1}, Kind {2}.&quot;, _\n                        offsetDate.ToString(), _\n                        regularDate, _ \n                        regularDate.Kind)\n                     \n      offsetDate = DateTimeOffset.UtcNow\n      regularDate = offsetDate.DateTime\n      Console.WriteLine(&quot;{0} converts to {1}, Kind {2}.&quot;, _\n                        offsetDate.ToString(), _\n                        regularDate, _\n                        regularDate.Kind)\n      &#39; If run on 3/6/2007 at 17:11, produces the following output:\n      &#39;\n      &#39;   3/6/2007 5:11:22 PM -08:00 converts to 3/6/2007 5:11:22 PM, Kind Unspecified.\n      &#39;   3/7/2007 1:11:22 AM +00:00 converts to 3/7/2007 1:11:22 AM, Kind Unspecified.                        \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#2\">      DateTimeOffset offsetDate; \n      DateTime regularDate;\n      \n      offsetDate = DateTimeOffset.Now;\n      regularDate = offsetDate.DateTime;\n      Console.WriteLine(&quot;{0} converts to {1}, Kind {2}.&quot;, \n                        offsetDate.ToString(), \n                        regularDate,  \n                        regularDate.Kind);\n                     \n      offsetDate = DateTimeOffset.UtcNow;\n      regularDate = offsetDate.DateTime;\n      Console.WriteLine(&quot;{0} converts to {1}, Kind {2}.&quot;, \n                        offsetDate.ToString(), \n                        regularDate, \n                        regularDate.Kind);\n      // If run on 3/6/2007 at 17:11, produces the following output:\n      //\n      //   3/6/2007 5:11:22 PM -08:00 converts to 3/6/2007 5:11:22 PM, Kind Unspecified.\n      //   3/7/2007 1:11:22 AM +00:00 converts to 3/7/2007 1:11:22 AM, Kind Unspecified.                        \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Day\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Day_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Day</div>        \r\n          </div>\r\n    \r\n            <p>Gets the day of the month represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Day { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The day component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as a value between 1 and 31.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Day property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s day component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;d&quot; or &quot;dd&quot; custom format specifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the day component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in three different ways:  </p>\n<ul>\n<li><p>By retrieving the value of the Day property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;d&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;dd&quot; format specifier.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#10\">      Dim theTime As New DateTimeOffset(#5/1/2007 4:35PM#, _\n                                             DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;The day component of {0} is {1}.&quot;, _\n                        theTime, theTime.Day)\n\n      Console.WriteLine(&quot;The day component of {0} is{1}.&quot;, _\n                        theTime, theTime.ToString(&quot; d&quot;))\n\n      Console.WriteLine(&quot;The day component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;dd&quot;))\n      &#39; The example produces the following output:\n      &#39;    The day component of 5/1/2007 4:35:00 PM -08:00 is 1.\n      &#39;    The day component of 5/1/2007 4:35:00 PM -08:00 is 1.\n      &#39;    The day component of 5/1/2007 4:35:00 PM -08:00 is 01.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#10\">      DateTimeOffset theTime = new DateTimeOffset(2007, 5, 1, 16, 35, 0, \n                                                  DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;The day component of {0} is {1}.&quot;, \n                        theTime, theTime.Day);\n\n      Console.WriteLine(&quot;The day component of {0} is{1}.&quot;, \n                        theTime, theTime.ToString(&quot; d&quot;));\n\n      Console.WriteLine(&quot;The day component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;dd&quot;));\n      // The example produces the following output:\n      //    The day component of 5/1/2007 4:35:00 PM -08:00 is 1.\n      //    The day component of 5/1/2007 4:35:00 PM -08:00 is 1.\n      //    The day component of 5/1/2007 4:35:00 PM -08:00 is 01.\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_DayOfWeek\">\r\n    \r\n            <a id=\"System_DateTimeOffset_DayOfWeek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DayOfWeek</div>        \r\n          </div>\r\n    \r\n            <p>Gets the day of the week represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DayOfWeek DayOfWeek { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">DayOfWeek</a></div>\r\n                  </div>\r\n                  <p>One of the enumeration values that indicates the day of the week of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the constants in the <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">DayOfWeek</a> enumeration ranges from <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a> to <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a>. If cast to an integer, its value ranges from zero (which indicates <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a>) to six (which indicates <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a>).  </p>\n<p> You can also display the weekday name of a particular date by using the &quot;D&quot; format specifier or the &quot;dddd&quot; custom format specifier. For example:  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#4\">      Dim displayDate As New DateTimeOffset(#1/1/2008 1:18PM#, _\n                                            DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;{0:D}&quot;, displayDate)    &#39; Output: Tuesday, January 01, 2008                     \n      Console.WriteLine(&quot;{0:d} is a {0:dddd}.&quot;, _\n                        displayDate)             &#39; Output: 1/1/2008 is a Tuesday.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#4\">      DateTimeOffset displayDate = new DateTimeOffset(2008, 1, 1, 13, 18, 00, \n                                                      DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;{0:D}&quot;, displayDate);  // Output: Tuesday, January 01, 2008                     \n      Console.WriteLine(&quot;{0:d} is a {0:dddd}.&quot;, \n                        displayDate);           // Output: 1/1/2008 is a Tuesday.\n</code></pre><p> Note that the string returned by calling the <code>ToString</code> method of the <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">DayOfWeek</a> enumeration member that is returned by this property is not localized. To extract a string that contains the weekday name of the current culture or of a specific culture, call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;dddd&quot; custom format specifier. For example, the following code displays the weekday name for a date using the <code>fr-fr</code> culture.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#5\">      Dim thisDate As New DateTimeOffset(#6/1/2007 6:15AM#, _\n                                            DateTimeOffset.Now.Offset)\n      Dim weekdayName As String = thisDate.ToString(&quot;dddd&quot;, _\n                                  New CultureInfo(&quot;fr-fr&quot;)) \n      Console.WriteLine(weekdayName)                        &#39; Displays vendredi     \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#5\">      DateTimeOffset thisDate = new DateTimeOffset(2007, 6, 1, 6, 15, 0, \n                                                   DateTimeOffset.Now.Offset);\n      string weekdayName = thisDate.ToString(&quot;dddd&quot;, \n                                             new CultureInfo(&quot;fr-fr&quot;)); \n      Console.WriteLine(weekdayName);                  // Displays vendredi     \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the weekday name of the first day of each month of the year 2008.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#3\">      Dim startOfMonth As New DateTimeOffset(#1/1/2008#, _\n                                            DateTimeOffset.Now.Offset)\n      Dim year As Integer = startOfMonth.Year\n      Do While startOfMonth.Year = year\n         Console.WriteLine(&quot;{0:MMM d, yyyy} is a {1}.&quot;, _\n                           startOfMonth, startOfMonth.DayOfWeek)\n         startOfMonth = startOfMonth.AddMonths(1)                   \n      Loop      \n      &#39; This example writes the following output to the console:\n      &#39;    Jan 1, 2008 is a Tuesday.\n      &#39;    Feb 1, 2008 is a Friday.\n      &#39;    Mar 1, 2008 is a Saturday.\n      &#39;    Apr 1, 2008 is a Tuesday.\n      &#39;    May 1, 2008 is a Thursday.\n      &#39;    Jun 1, 2008 is a Sunday.\n      &#39;    Jul 1, 2008 is a Tuesday.\n      &#39;    Aug 1, 2008 is a Friday.\n      &#39;    Sep 1, 2008 is a Monday.\n      &#39;    Oct 1, 2008 is a Wednesday.\n      &#39;    Nov 1, 2008 is a Saturday.\n      &#39;    Dec 1, 2008 is a Monday.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#3\">      DateTimeOffset startOfMonth = new DateTimeOffset(2008, 1, 1, 0, 0, 0, \n                                               DateTimeOffset.Now.Offset);\n      int year = startOfMonth.Year;\n      do \n      {\n         Console.WriteLine(&quot;{0:MMM d, yyyy} is a {1}.&quot;, startOfMonth, startOfMonth.DayOfWeek);\n         startOfMonth = startOfMonth.AddMonths(1);\n      }\n      while (startOfMonth.Year == year);\n      // This example writes the following output to the console:\n      //    Jan 1, 2008 is a Tuesday.\n      //    Feb 1, 2008 is a Friday.\n      //    Mar 1, 2008 is a Saturday.\n      //    Apr 1, 2008 is a Tuesday.\n      //    May 1, 2008 is a Thursday.\n      //    Jun 1, 2008 is a Sunday.\n      //    Jul 1, 2008 is a Tuesday.\n      //    Aug 1, 2008 is a Friday.\n      //    Sep 1, 2008 is a Monday.\n      //    Oct 1, 2008 is a Wednesday.\n      //    Nov 1, 2008 is a Saturday.\n      //    Dec 1, 2008 is a Monday.      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_DayOfYear\">\r\n    \r\n            <a id=\"System_DateTimeOffset_DayOfYear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DayOfYear</div>        \r\n          </div>\r\n    \r\n            <p>Gets the day of the year represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int DayOfYear { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The day of the year of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as a value between 1 and 366.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Hour\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Hour_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Hour</div>        \r\n          </div>\r\n    \r\n            <p>Gets the hour component of the time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Hour { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hour component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. This property uses a 24-hour clock; the value ranges from 0 to 23.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Hour property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s hour component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;H&quot;, or &quot;HH&quot; custom format specifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the hour component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in three different ways:  </p>\n<ul>\n<li><p>By retrieving the value of the Hour property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;H&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;HH&quot; format specifier.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#6\">      Dim theTime As New DateTimeOffset(#3/1/2008 2:15PM#, _\n                                             DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;The hour component of {0} is {1}.&quot;, _\n                        theTime, theTime.Hour)\n\n      Console.WriteLine(&quot;The hour component of {0} is{1}.&quot;, _\n                        theTime, theTime.ToString(&quot; H&quot;))\n\n      Console.WriteLine(&quot;The hour component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;HH&quot;))\n      &#39; The example produces the following output:\n      &#39;    The hour component of 3/1/2008 2:15:00 PM -08:00 is 14.\n      &#39;    The hour component of 3/1/2008 2:15:00 PM -08:00 is 14.\n      &#39;    The hour component of 3/1/2008 2:15:00 PM -08:00 is 14.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#6\">      DateTimeOffset theTime = new DateTimeOffset(2008, 3, 1, 14, 15, 00, \n                                             DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;The hour component of {0} is {1}.&quot;, \n                        theTime, theTime.Hour);\n\n      Console.WriteLine(&quot;The hour component of {0} is{1}.&quot;, \n                        theTime, theTime.ToString(&quot; H&quot;));\n\n      Console.WriteLine(&quot;The hour component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;HH&quot;));\n      // The example produces the following output:\n      //    The hour component of 3/1/2008 2:15:00 PM -08:00 is 14.\n      //    The hour component of 3/1/2008 2:15:00 PM -08:00 is 14.\n      //    The hour component of 3/1/2008 2:15:00 PM -08:00 is 14.\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_LocalDateTime\">\r\n    \r\n            <a id=\"System_DateTimeOffset_LocalDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalDateTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the local date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime LocalDateTime { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The local date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If necessary, the LocalDateTime property converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s date and time to the local system&#39;s date and time. The conversion is a two-step operation:  </p>\n<ol>\n<li><p>The property converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s time to Coordinated Universal Time (UTC).  </p>\n</li>\n<li><p>The property then converts UTC to local time.  </p>\n<p>There are no invalid times and ambiguous times are mapped to the local zone&#39;s standard time. (However, the conversion can create an anomaly: if a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value that is derived from the local computer reflects an ambiguous date and time, that value can be converted to UTC and then back to a local time that differs from the original time.)  The property applies any adjustment rules in the local time zone when it performs this conversion.  </p>\n<p>This property returns both the date and the time component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, which makes it useful for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> conversion. In addition to performing any necessary time conversion, this property differs from the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_DateTime_\" data-linktype=\"relative-path\">DateTime</a> property by setting the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates several conversions of <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> values to local times in the U.S. Pacific Standard Time zone. Note that the last three times are all ambiguous; the property maps all of them to a single date and time in the Pacific Standard Time zone.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#7\">      Dim dto As DateTimeOffset\n\n      &#39; Current time\n      dto = DateTimeOffset.Now\n      Console.WriteLine(dto.LocalDateTime)\n      &#39; UTC time\n      dto = DateTimeOffset.UtcNow\n      Console.WriteLine(dto.LocalDateTime)\n\n     &#39; Transition to DST in local time zone occurs on 3/11/2007 at 2:00 AM\n      dto = New DateTimeOffset(#03/11/2007 3:30AM#, New Timespan(-7, 0, 0))      \n      Console.WriteLine(dto.LocalDateTime)\n      dto = New DateTimeOffset(#03/11/2007 2:30AM#, New Timespan(-7, 0, 0))\n      Console.WriteLine(dto.LocalDateTime)\n      &#39; Invalid time in local time zone\n      dto = New DateTimeOffset(#03/11/2007 2:30AM#, New Timespan(-8, 0, 0))\n      Console.WriteLine(TimeZoneInfo.Local.IsInvalidTime(dto.DateTime))\n      Console.WriteLine(dto.LocalDateTime)\n\n      &#39; Transition from DST in local time zone occurs on 11/4/07 at 2:00 AM\n      &#39; This is an ambiguous time\n      dto = New DateTimeOffset(#11/4/2007 1:30AM#, New TimeSpan(-7, 0, 0))\n      Console.WriteLine(TimeZoneInfo.Local.IsAmbiguousTime(dto))\n      Console.WriteLine(dto.LocalDateTime)\n      dto = New DateTimeOffset(#11/4/2007 2:30AM#, New TimeSpan(-7, 0, 0))           \n      Console.WriteLine(TimeZoneInfo.Local.IsAmbiguousTime(dto))\n      Console.WriteLine(dto.LocalDateTime)\n      &#39; This is also an ambiguous time\n      dto = New DateTimeOffset(#11/4/2007 1:30AM#, New TimeSpan(-8, 0, 0))           \n      Console.WriteLine(TimeZoneInfo.Local.IsAmbiguousTime(dto))\n      Console.WriteLine(dto.LocalDateTime)\n      &#39; If run on 3/8/2007 at 4:56 PM, the code produces the following\n      &#39; output:\n      &#39;    3/8/2007 4:56:03 PM\n      &#39;    3/8/2007 4:56:03 PM\n      &#39;    3/11/2007 3:30:00 AM\n      &#39;    3/11/2007 1:30:00 AM\n      &#39;    True\n      &#39;    3/11/2007 3:30:00 AM\n      &#39;    True\n      &#39;    11/4/2007 1:30:00 AM\n      &#39;    11/4/2007 1:30:00 AM\n      &#39;    True\n      &#39;    11/4/2007 1:30:00 AM      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#7\">      DateTimeOffset dto;\n\n      // Current time\n      dto = DateTimeOffset.Now;\n      Console.WriteLine(dto.LocalDateTime);\n      // UTC time\n      dto = DateTimeOffset.UtcNow;\n      Console.WriteLine(dto.LocalDateTime);\n\n     // Transition to DST in local time zone occurs on 3/11/2007 at 2:00 AM\n      dto = new DateTimeOffset(2007, 3, 11, 3, 30, 0, new TimeSpan(-7, 0, 0));      \n      Console.WriteLine(dto.LocalDateTime);\n      dto = new DateTimeOffset(2007, 3, 11, 2, 30, 0, new TimeSpan(-7, 0, 0));\n      Console.WriteLine(dto.LocalDateTime);\n      // Invalid time in local time zone\n      dto = new DateTimeOffset(2007, 3, 11, 2, 30, 0, new TimeSpan(-8, 0, 0));\n      Console.WriteLine(TimeZoneInfo.Local.IsInvalidTime(dto.DateTime));\n      Console.WriteLine(dto.LocalDateTime);\n\n      // Transition from DST in local time zone occurs on 11/4/07 at 2:00 AM\n      // This is an ambiguous time\n      dto = new DateTimeOffset(2007, 11, 4, 1, 30, 0, new TimeSpan(-7, 0, 0));\n      Console.WriteLine(TimeZoneInfo.Local.IsAmbiguousTime(dto));\n      Console.WriteLine(dto.LocalDateTime);\n      dto = new DateTimeOffset(2007, 11, 4, 2, 30, 0, new TimeSpan(-7, 0, 0));           \n      Console.WriteLine(TimeZoneInfo.Local.IsAmbiguousTime(dto));\n      Console.WriteLine(dto.LocalDateTime);\n      // This is also an ambiguous time\n      dto = new DateTimeOffset(2007, 11, 4, 1, 30, 0, new TimeSpan(-8, 0, 0));           \n      Console.WriteLine(TimeZoneInfo.Local.IsAmbiguousTime(dto));\n      Console.WriteLine(dto.LocalDateTime);\n      // If run on 3/8/2007 at 4:56 PM, the code produces the following\n      // output:\n      //    3/8/2007 4:56:03 PM\n      //    3/8/2007 4:56:03 PM\n      //    3/11/2007 3:30:00 AM\n      //    3/11/2007 1:30:00 AM\n      //    True\n      //    3/11/2007 3:30:00 AM\n      //    True\n      //    11/4/2007 1:30:00 AM\n      //    11/4/2007 1:30:00 AM\n      //    True\n      //    11/4/2007 1:30:00 AM      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Millisecond\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Millisecond_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Millisecond</div>        \r\n          </div>\r\n    \r\n            <p>Gets the millisecond component of the time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Millisecond { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The millisecond component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as an integer between 0 and 999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s millisecond component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;fff&quot; custom format specifier.  </p>\n<p> If you rely on properties such as <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Now_\" data-linktype=\"relative-path\">Now</a> or <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_UtcNow_\" data-linktype=\"relative-path\">UtcNow</a> to accurately track the number of elapsed milliseconds, the precision of the time&#39;s millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock&#39;s resolution is approximately 10-15 milliseconds.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the number of milliseconds of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object by using a custom format specifier and by directly accessing the Millisecond property.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#12\">      Dim date1 As New DateTimeOffset(2008, 3, 5, 5, 45, 35, 649, _\n                                      New TimeSpan(-7, 0, 0))\n      Console.WriteLine(&quot;Milliseconds value of {0} is {1}.&quot;, _\n                        date1.ToString(&quot;MM/dd/yyyy hh:mm:ss.fff&quot;), _\n                        date1.Millisecond)\n      &#39; The example produces the following output:\n      &#39;\n      &#39; Milliseconds value of 03/05/2008 05:45:35.649 is 649.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#12\">      DateTimeOffset date1 = new DateTimeOffset(2008, 3, 5, 5, 45, 35, 649, \n                                      new TimeSpan(-7, 0, 0));\n      Console.WriteLine(&quot;Milliseconds value of {0} is {1}.&quot;, \n                        date1.ToString(&quot;MM/dd/yyyy hh:mm:ss.fff&quot;), \n                        date1.Millisecond);\n      // The example produces the following output:\n      //\n      // Milliseconds value of 03/05/2008 05:45:35.649 is 649.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Minute\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Minute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Minute</div>        \r\n          </div>\r\n    \r\n            <p>Gets the minute component of the time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Minute { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The minute component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as an integer between 0 and 59.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Minute property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s minute component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;m&quot;, or &quot;mm&quot; custom format specifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the minute component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in three different ways:  </p>\n<ul>\n<li><p>By retrieving the value of the Minute property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;m&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;mm&quot; format specifier.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#8\">      Dim theTime As New DateTimeOffset(#5/1/2008 10:03AM#, _\n                                             DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;The minute component of {0} is {1}.&quot;, _\n                        theTime, theTime.Minute)\n\n      Console.WriteLine(&quot;The minute component of {0} is{1}.&quot;, _\n                        theTime, theTime.ToString(&quot; m&quot;))\n\n      Console.WriteLine(&quot;The minute component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;mm&quot;))\n      &#39; The example produces the following output:\n      &#39;    The minute component of 5/1/2008 10:03:00 AM -08:00 is 3.\n      &#39;    The minute component of 5/1/2008 10:03:00 AM -08:00 is 3.\n      &#39;    The minute component of 5/1/2008 10:03:00 AM -08:00 is 03.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#8\">      DateTimeOffset theTime = new DateTimeOffset(2008, 5, 1, 10, 3, 0, \n                                                 DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;The minute component of {0} is {1}.&quot;, \n                        theTime, theTime.Minute);\n\n      Console.WriteLine(&quot;The minute component of {0} is{1}.&quot;, \n                        theTime, theTime.ToString(&quot; m&quot;));\n\n      Console.WriteLine(&quot;The minute component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;mm&quot;));\n      // The example produces the following output:\n      //    The minute component of 5/1/2008 10:03:00 AM -08:00 is 3.\n      //    The minute component of 5/1/2008 10:03:00 AM -08:00 is 3.\n      //    The minute component of 5/1/2008 10:03:00 AM -08:00 is 03.\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Month\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Month_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Month</div>        \r\n          </div>\r\n    \r\n            <p>Gets the month component of the date represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Month { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The month component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as an integer between 1 and 12.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Month property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s month component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;M&quot; or &quot;MM&quot; custom format specifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the month component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value in three different ways:  </p>\n<ul>\n<li><p>By retrieving the value of the Month property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;M&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;MM&quot; format specifier.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#9\">      Dim theTime As New DateTimeOffset(#9/7/2008 11:25AM#, _\n                                             DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;The month component of {0} is {1}.&quot;, _\n                        theTime, theTime.Month)\n\n      Console.WriteLine(&quot;The month component of {0} is{1}.&quot;, _\n                        theTime, theTime.ToString(&quot; M&quot;))\n\n      Console.WriteLine(&quot;The month component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;MM&quot;))\n      &#39; The example produces the following output:\n      &#39;    The month component of 9/7/2008 11:25:00 AM -08:00 is 9.\n      &#39;    The month component of 9/7/2008 11:25:00 AM -08:00 is 9.\n      &#39;    The month component of 9/7/2008 11:25:00 AM -08:00 is 09.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#9\">      DateTimeOffset theTime = new DateTimeOffset(2008, 9, 7, 11, 25, 0, \n                                             DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;The month component of {0} is {1}.&quot;, \n                        theTime, theTime.Month);\n\n      Console.WriteLine(&quot;The month component of {0} is{1}.&quot;, \n                        theTime, theTime.ToString(&quot; M&quot;));\n\n      Console.WriteLine(&quot;The month component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;MM&quot;));\n      // The example produces the following output:\n      //    The month component of 9/7/2008 11:25:00 AM -08:00 is 9.\n      //    The month component of 9/7/2008 11:25:00 AM -08:00 is 9.\n      //    The month component of 9/7/2008 11:25:00 AM -08:00 is 09.      \n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Now\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Now_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Now</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that is set to the current date and time on the current computer, with the offset set to the local time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset Now { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object whose date and time is the current local time and whose offset is the local time zone&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The precision of the current local time&#39;s millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock&#39;s resolution is approximately 10-15 milliseconds.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Now property to retrieve the current date and time and displays it by using each of the <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">standard date and time format strings</a> supported by the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> type.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Now#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String[] fmtStrings = { &quot;d&quot;, &quot;D&quot;, &quot;f&quot;, &quot;F&quot;, &quot;g&quot;, &quot;G&quot;, &quot;M&quot;, \n                              &quot;R&quot;, &quot;s&quot;, &quot;t&quot;, &quot;T&quot;, &quot;u&quot;, &quot;y&quot; };\n      \n      DateTimeOffset value = DateTimeOffset.Now;\n      // Display date in default format.\n      Console.WriteLine(value);\n      Console.WriteLine();\n            \n      // Display date using each of the specified formats.\n      foreach (var fmtString in fmtStrings)\n         Console.WriteLine(&quot;{0} --&gt; {1}&quot;, \n                           fmtString, value.ToString(fmtString));\n   }\n}\n// The example displays output similar to the following:\n//    11/19/2012 10:57:11 AM -08:00\n//    \n//    d --&gt; 11/19/2012\n//    D --&gt; Monday, November 19, 2012\n//    f --&gt; Monday, November 19, 2012 10:57 AM\n//    F --&gt; Monday, November 19, 2012 10:57:11 AM\n//    g --&gt; 11/19/2012 10:57 AM\n//    G --&gt; 11/19/2012 10:57:11 AM\n//    M --&gt; November 19\n//    R --&gt; Mon, 19 Nov 2012 18:57:11 GMT\n//    s --&gt; 2012-11-19T10:57:11\n//    t --&gt; 10:57 AM\n//    T --&gt; 10:57:11 AM\n//    u --&gt; 2012-11-19 18:57:11Z\n//    y --&gt; November, 2012\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Now#1\">Module Example\n   Public Sub Main()\n      Dim fmtStrings() As String = { &quot;d&quot;, &quot;D&quot;, &quot;f&quot;, &quot;F&quot;, &quot;g&quot;, &quot;G&quot;, \n                                     &quot;M&quot;, &quot;R&quot;, &quot;s&quot;, &quot;t&quot;, &quot;T&quot;, &quot;u&quot;,\n                                     &quot;y&quot; }\n      \n      Dim value As DateTimeOffset = DateTimeOffset.Now\n      &#39; Display date in default format.\n      Console.WriteLine(value)\n      Console.WriteLine()\n            \n      &#39; Display date using each of the specified formats.\n      For Each fmtString in fmtStrings\n         Console.WriteLine(&quot;{0} --&gt; {1}&quot;, \n                           fmtString, value.ToString(fmtString))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays output similar to the following:\n&#39;    11/19/2012 10:57:11 AM -08:00\n&#39;    \n&#39;    d --&gt; 11/19/2012\n&#39;    D --&gt; Monday, November 19, 2012\n&#39;    f --&gt; Monday, November 19, 2012 10:57 AM\n&#39;    F --&gt; Monday, November 19, 2012 10:57:11 AM\n&#39;    g --&gt; 11/19/2012 10:57 AM\n&#39;    G --&gt; 11/19/2012 10:57:11 AM\n&#39;    M --&gt; November 19\n&#39;    R --&gt; Mon, 19 Nov 2012 18:57:11 GMT\n&#39;    s --&gt; 2012-11-19T10:57:11\n&#39;    t --&gt; 10:57 AM\n&#39;    T --&gt; 10:57:11 AM\n&#39;    u --&gt; 2012-11-19 18:57:11Z\n&#39;    y --&gt; November, 2012\n</code></pre><p> The following example uses the Now and <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Millisecond_\" data-linktype=\"relative-path\">Millisecond</a> properties to determine the resolution of the system clock. It displays the time only when the value of its millisecond component has changed.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#11\">      Dim dto As DateTimeOffset\n      Dim ctr As Integer\n      Dim ms As Integer\n      Do\n         dto = DateTimeOffset.Now\n         If dto.Millisecond &lt;&gt; ms Then\n            ms = dto.Millisecond\n            Console.WriteLine(&quot;{0}:{1:d3} ms. {2}&quot;, _\n                              dto.ToString(&quot;M/d/yyyy h:mm:ss&quot;), _\n                              ms, dto.ToString(&quot;zzz&quot;))\n            ctr += 1\n         End If\n      Loop While ctr &lt; 100\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#11\">      DateTimeOffset dto;\n      int ctr = 0;\n      int ms = 0;\n      do {\n         dto = DateTimeOffset.Now;\n         if (dto.Millisecond != ms)\n         {\n            ms = dto.Millisecond;\n            Console.WriteLine(&quot;{0}:{1:d3} ms. {2}&quot;, \n                              dto.ToString(&quot;M/d/yyyy h:mm:ss&quot;), \n                              ms, dto.ToString(&quot;zzz&quot;));\n            ctr++;\n         }\n      } while (ctr &lt; 100);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Offset\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Offset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Offset</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time&#39;s offset from Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan Offset { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The difference between the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s time value and Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Hours_\" data-linktype=\"relative-path\">Hours</a> property of the returned <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object can range from -14 hours to 14 hours.  </p>\n<p> The value of the Offset property is precise to the minute.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Offset property to display the local time&#39;s difference from Coordinated Universal Time (UTC).  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#13\">      Dim localTime As DateTimeOffset = DateTimeOffset.Now\n      Console.WriteLine(&quot;The local time zone is {0} hours and {1} minutes {2} than UTC.&quot;, _\n                        Math.Abs(localTime.Offset.Hours), _\n                        localTime.Offset.Minutes, _\n                        IIf(localTime.Offset.Hours &lt; 0, &quot;earlier&quot;, &quot;later&quot;))\n      &#39; If run on a system whose local time zone is U.S. Pacific Standard Time,\n      &#39; the example displays output similar to the following:\n      &#39;       The local time zone is 8 hours and 0 minutes earlier than UTC.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#13\">      DateTimeOffset localTime = DateTimeOffset.Now;\n      Console.WriteLine(&quot;The local time zone is {0} hours and {1} minutes {2} than UTC.&quot;, \n                        Math.Abs(localTime.Offset.Hours), \n                        localTime.Offset.Minutes, \n                        localTime.Offset.Hours &lt; 0 ? &quot;earlier&quot; : &quot;later&quot;);\n      // The example displays output similar to the following for a system in the\n      // U.S. Pacific Standard Time zone: \n      //       The local time zone is 8 hours and 0 minutes earlier than UTC.      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Second\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Second_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Second</div>        \r\n          </div>\r\n    \r\n            <p>Gets the second component of the clock time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Second { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The second component of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as an integer value between 0 and 59.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Second property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s second component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;s&quot;, or &quot;ss&quot; custom format specifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the second component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in three different ways:  </p>\n<ul>\n<li><p>By retrieving the value of the Second property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;s&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;ss&quot; format specifier.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#14\">      Dim theTime As New DateTimeOffset(#6/12/2008 9:16:32PM#, _\n                                             DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;The second component of {0} is {1}.&quot;, _\n                        theTime, theTime.Second)\n\n      Console.WriteLine(&quot;The second component of {0} is{1}.&quot;, _\n                        theTime, theTime.ToString(&quot; s&quot;))\n\n      Console.WriteLine(&quot;The second component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;ss&quot;))\n      &#39; The example produces the following output:\n      &#39;    The second component of 6/12/2008 9:16:32 PM -07:00 is 32.\n      &#39;    The second component of 6/12/2008 9:16:32 PM -07:00 is 32.\n      &#39;    The second component of 6/12/2008 9:16:32 PM -07:00 is 32.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#14\">      DateTimeOffset theTime = new DateTimeOffset(2008, 6, 12, 21, 16, 32, \n                                   DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;The second component of {0} is {1}.&quot;, \n                        theTime, theTime.Second);\n\n      Console.WriteLine(&quot;The second component of {0} is{1}.&quot;, \n                        theTime, theTime.ToString(&quot; s&quot;));\n\n      Console.WriteLine(&quot;The second component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;ss&quot;));\n      // The example produces the following output:\n      //    The second component of 6/12/2008 9:16:32 PM -07:00 is 32.\n      //    The second component of 6/12/2008 9:16:32 PM -07:00 is 32.\n      //    The second component of 6/12/2008 9:16:32 PM -07:00 is 32.\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Ticks\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Ticks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Ticks</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of ticks that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in clock time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long Ticks { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number of ticks in the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s clock time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Ticks property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> The value of the Ticks property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the Ticks property ranges from <code>DateTimeOffset.MinValue.Ticks</code> to <code>DateTimeOffset.MaxValue.Ticks</code>.  </p>\n<p> You can assign the number of ticks to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object by using the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset__ctor_System_Int64_System_TimeSpan_\" data-linktype=\"relative-path\">DateTimeOffset(Int64,TimeSpan)</a> constructor overload.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example initializes a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object by approximating the number of ticks in the date July 1, 2008 1:23:07. It then displays the date and the number of ticks represented by that date to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#15\">      &#39; Attempt to initialize date to number of ticks\n      &#39; in July 1, 2008 1:23:07.      \n      &#39;\n      &#39; There are 10,000,000 100-nanosecond intervals in a second\n      Const NSPerSecond As Long = 10000000\n      Dim ticks As Long\n      ticks = 7 * NSPerSecond                         &#39; Ticks in a 7 seconds \n      ticks += 23 * 60 * NSPerSecond                  &#39; Ticks in 23 minutes\n      ticks += 1 * 60 * 60 * NSPerSecond              &#39; Ticks in 1 hour\n      ticks += 60 * 60 * 24 * NSPerSecond             &#39; Ticks in 1 day\n      ticks += 181 * 60 * 60 * 24 * NSPerSecond       &#39; Ticks in 6 months \n      ticks += 2007 * 60 * 60 * 24 * 365l * NSPerSecond   &#39; Ticks in 2007 years \n      ticks += 486 * 60 * 60 * 24 * NSPerSecond       &#39; Adjustment for leap years      \n      Dim dto As DateTimeOffset = New DateTimeOffset( _\n                                  ticks, _\n                                  DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;There are {0:n0} ticks in {1}.&quot;, _\n                        dto.Ticks, _\n                        dto.ToString())\n      &#39; The example displays the following output:\n      &#39;       There are 633,504,721,870,000,000 ticks in 7/1/2008 1:23:07 AM -08:00.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#15\">      // Attempt to initialize date to number of ticks\n      // in July 1, 2008 1:23:07.      \n      //\n      // There are 10,000,000 100-nanosecond intervals in a second\n      const long NSPerSecond = 10000000;\n      long ticks; \n      ticks = 7 * NSPerSecond;                        // Ticks in a 7 seconds \n      ticks += 23 * 60 * NSPerSecond;                 // Ticks in 23 minutes\n      ticks += 1 * 60 * 60 * NSPerSecond;             // Ticks in 1 hour\n      ticks += 60 * 60 * 24 * NSPerSecond;            // Ticks in 1 day\n      ticks += 181 * 60 * 60 * 24 * NSPerSecond;      // Ticks in 6 months \n      ticks += 2007 * 60 * 60 * 24 * 365L * NSPerSecond;   // Ticks in 2007 years \n      ticks += 486 * 60 * 60 * 24 * NSPerSecond;      // Adjustment for leap years      \n      DateTimeOffset dto = new DateTimeOffset( \n                               ticks, \n                               DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;There are {0:n0} ticks in {1}.&quot;, \n                        dto.Ticks, \n                        dto.ToString());\n      // The example displays the following output:\n      //       There are 633,504,721,870,000,000 ticks in 7/1/2008 1:23:07 AM -08:00.      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_TimeOfDay\">\r\n    \r\n            <a id=\"System_DateTimeOffset_TimeOfDay_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeOfDay</div>        \r\n          </div>\r\n    \r\n            <p>Gets the time of day for the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan TimeOfDay { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The time interval of the current date that has elapsed since midnight.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TimeOfDay property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> The TimeOfDay property returns the time component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in the form of a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object. It is equivalent to the <a class=\"xref\" href=\"system.datetime#System_DateTime_TimeOfDay_\" data-linktype=\"relative-path\">TimeOfDay</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the TimeOfDay property to extract the time and display it to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#16\">      Dim currentDate As New DateTimeOffset(#5/10/2008 5:32:16AM#, _\n                                            DateTimeOffset.Now.Offset) \n      Dim currentTime As TimeSpan = currentDate.TimeOfDay\n      Console.WriteLine(&quot;The current time is {0}.&quot;, currentTime.ToString())\n      &#39; The example produces the following output: \n      &#39;       The current time is 05:32:16.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#16\">      DateTimeOffset currentDate = new DateTimeOffset(2008, 5, 10, 5, 32, 16, \n                                            DateTimeOffset.Now.Offset); \n      TimeSpan currentTime = currentDate.TimeOfDay;\n      Console.WriteLine(&quot;The current time is {0}.&quot;, currentTime.ToString());\n      // The example produces the following output: \n      //       The current time is 05:32:16.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_UtcDateTime\">\r\n    \r\n            <a id=\"System_DateTimeOffset_UtcDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UtcDateTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the Coordinated Universal Time (UTC) date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime UtcDateTime { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The Coordinated Universal Time (UTC) date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UtcDateTime property performs a dual conversion:  </p>\n<ul>\n<li><p>It converts the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to Coordinated Universal Time (UTC). The conversion is performed by subtracting the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property from the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.  </p>\n</li>\n<li><p>It converts the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.  </p>\n<p>The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_DateTime_\" data-linktype=\"relative-path\">DateTime</a> value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p>Retrieving the value of the UtcDateTime property is equivalent to calling the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s <code>ToUniversalTime.DateTime</code> property, except that the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the latter <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use of the UtcDateTime property to display a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value and its corresponding UTC time.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#17\">      Dim offsetTime As New DateTimeOffset(#11/25/2007 11:14AM#, _\n                        New TimeSpan(3, 0, 0))\n      Console.WriteLine(&quot;{0} is equivalent to {1} {2}&quot;, _\n                        offsetTime.ToString(), _\n                        offsetTime.UtcDateTime.ToString(), _\n                        offsetTime.UtcDateTime.Kind.ToString())      \n      &#39; The example displays the following output:\n      &#39;       11/25/2007 11:14:00 AM +03:00 is equivalent to 11/25/2007 8:14:00 AM Utc      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#17\">      DateTimeOffset offsetTime = new DateTimeOffset(2007, 11, 25, 11, 14, 00, \n                                  new TimeSpan(3, 0, 0));\n      Console.WriteLine(&quot;{0} is equivalent to {1} {2}&quot;, \n                        offsetTime.ToString(), \n                        offsetTime.UtcDateTime.ToString(), \n                        offsetTime.UtcDateTime.Kind.ToString());      \n      // The example displays the following output:\n      //       11/25/2007 11:14:00 AM +03:00 is equivalent to 11/25/2007 8:14:00 AM Utc      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_UtcNow\">\r\n    \r\n            <a id=\"System_DateTimeOffset_UtcNow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UtcNow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object whose date and time are set to the current Coordinated Universal Time (UTC) date and time and whose offset is <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">Zero</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset UtcNow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose date and time is the current Coordinated Universal Time (UTC) and whose offset is <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">Zero</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UtcNow property computes the current Universal Coordinated Time (UTC) based on the local system&#39;s clock time and an offset defined by the local system&#39;s time zone.  </p>\n<p> The precision of the current UTC time&#39;s millisecond component depends on the resolution of the system clock. On Windows NT 3.5 and later, and Windows Vista operating systems, the clock&#39;s resolution is approximately 10-15 milliseconds.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the relationship between Coordinated Universal Time (UTC) and local time.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#18\">      Dim localTime As DateTimeOffset = DateTimeOffset.Now\n      Dim utcTime As DateTimeOffset = DateTimeOffset.UtcNow\n      \n      Console.WriteLine(&quot;Local Time:          {0}&quot;, localTime.ToString(&quot;T&quot;))\n      Console.WriteLine(&quot;Difference from UTC: {0}&quot;, localTime.Offset.ToString())\n      Console.WriteLine(&quot;UTC:                 {0}&quot;, utcTime.ToString(&quot;T&quot;))\n      &#39; If run on a particular date at 1:19 PM, the example produces\n      &#39; the following output:\n      &#39;    Local Time:          1:19:43 PM\n      &#39;    Difference from UTC: -07:00:00\n      &#39;    UTC:                 8:19:43 PM      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#18\">      DateTimeOffset localTime = DateTimeOffset.Now;\n      DateTimeOffset utcTime = DateTimeOffset.UtcNow;\n      \n      Console.WriteLine(&quot;Local Time:          {0}&quot;, localTime.ToString(&quot;T&quot;));\n      Console.WriteLine(&quot;Difference from UTC: {0}&quot;, localTime.Offset.ToString());\n      Console.WriteLine(&quot;UTC:                 {0}&quot;, utcTime.ToString(&quot;T&quot;));\n      // If run on a particular date at 1:19 PM, the example produces\n      // the following output:\n      //    Local Time:          1:19:43 PM\n      //    Difference from UTC: -07:00:00\n      //    UTC:                 8:19:43 PM      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_UtcTicks\">\r\n    \r\n            <a id=\"System_DateTimeOffset_UtcTicks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UtcTicks</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of ticks that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object in Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long UtcTicks { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number of ticks in the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the UtcTicks property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001 (the value of <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a>). It does not include ticks that would be added by leap seconds. A nanosecond is one billionth of a second; there are ten million ticks in a second. The value of the UtcTicks property ranges from <code>DateTimeOffset.MinValue.Ticks</code> to <code>DateTimeOffset.MaxValue.Ticks</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Year\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Year_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Year</div>        \r\n          </div>\r\n    \r\n            <p>Gets the year component of the date represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Year { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The year component of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as an integer value between 0 and 9999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Year property is not affected by the value of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> You can also create a string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s year component by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_\" data-linktype=\"relative-path\">ToString</a> method with the &quot;y&quot;, &quot;yy&quot;, or &quot;yyyy&quot; custom format specifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the year component of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value in four different ways:  </p>\n<ul>\n<li><p>By retrieving the value of the Year property.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;y&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;yy&quot; format specifier.  </p>\n</li>\n<li><p>By calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method with the &quot;yyyy&quot; format specifier.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Properties#19\">      Dim theTime As New DateTimeOffset(#2/17/2008 9:00AM#, _\n                                        DateTimeOffset.Now.Offset)\n      Console.WriteLine(&quot;The year component of {0} is {1}.&quot;, _\n                        theTime, theTime.Year)\n\n      Console.WriteLine(&quot;The year component of {0} is{1}.&quot;, _\n                        theTime, theTime.ToString(&quot; y&quot;))\n\n      Console.WriteLine(&quot;The year component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;yy&quot;))\n                        \n      Console.WriteLine(&quot;The year component of {0} is {1}.&quot;, _\n                        theTime, theTime.ToString(&quot;yyyy&quot;))\n      &#39; The example produces the following output:\n      &#39;    The year component of 2/17/2008 9:00:00 AM -07:00 is 2008.\n      &#39;    The year component of 2/17/2008 9:00:00 AM -07:00 is 8.\n      &#39;    The year component of 2/17/2008 9:00:00 AM -07:00 is 08.\n      &#39;    The year component of 2/17/2008 9:00:00 AM -07:00 is 2008.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Properties#19\">      DateTimeOffset theTime = new DateTimeOffset(2008, 2, 17, 9, 0, 0, \n                                   DateTimeOffset.Now.Offset);\n      Console.WriteLine(&quot;The year component of {0} is {1}.&quot;, \n                        theTime, theTime.Year);\n\n      Console.WriteLine(&quot;The year component of {0} is{1}.&quot;, \n                        theTime, theTime.ToString(&quot; y&quot;));\n\n      Console.WriteLine(&quot;The year component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;yy&quot;));\n                        \n      Console.WriteLine(&quot;The year component of {0} is {1}.&quot;, \n                        theTime, theTime.ToString(&quot;yyyy&quot;));\n      // The example produces the following output:\n      //    The year component of 2/17/2008 9:00:00 AM -07:00 is 2008.\n      //    The year component of 2/17/2008 9:00:00 AM -07:00 is 8.\n      //    The year component of 2/17/2008 9:00:00 AM -07:00 is 08.\n      //    The year component of 2/17/2008 9:00:00 AM -07:00 is 2008.\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Add_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified time interval to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset Add (TimeSpan timeSpan);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeSpan</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that represents a positive or a negative time interval.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the time interval represented by <code>timeSpan</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Add method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method&#39;s behavior is identical to the addition operator. The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure also supports specialized addition methods (such as <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_AddDays_\" data-linktype=\"relative-path\">AddDays</a>, <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_AddHours_\" data-linktype=\"relative-path\">AddHours</a>, and <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_AddMinutes_\" data-linktype=\"relative-path\">AddMinutes</a>) for each time interval.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>timeSpan</code> to its date and time.  </p>\n</div>\n<p> The Add method does not affect the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property.  </p>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the Add method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.  </p>\n<p> If the <code>timeSpan</code> parameter is <code>null</code>, this method returns the value of the original <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object unchanged.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an array of <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> objects that represent the flight times between destinations. The Add method then adds these times to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that represents a flight&#39;s initial takeoff time. The result reflects the scheduled arrival time at each destination.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#1\">      Dim takeOff As New DateTimeOffset(#6/1/2007 7:55AM#, _\n                                        New TimeSpan(-5, 0, 0))\n      Dim currentTime As DateTimeOffset = takeOff\n      Dim flightTimes() As TimeSpan = New TimeSpan() _\n                        {New TimeSpan(2, 25, 0), New TimeSpan(1, 48, 0)}\n      Console.WriteLine(&quot;Takeoff is scheduled for {0:d} at {0:T}.&quot;, _\n                        takeOff)\n      For ctr As Integer = flightTimes.GetLowerBound(0) To _\n                           flightTimes.GetUpperBound(0)\n         currentTime = currentTime.Add(flightTimes(ctr))\n         Console.WriteLine(&quot;Destination #{0} at {1}.&quot;, ctr + 1, currentTime)\n      Next\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#1\">      DateTimeOffset takeOff = new DateTimeOffset(2007, 6, 1, 7, 55, 0, \n                                   new TimeSpan(-5, 0, 0));\n      DateTimeOffset currentTime = takeOff;\n      TimeSpan[] flightTimes = new TimeSpan[]\n                        {new TimeSpan(2, 25, 0), new TimeSpan(1, 48, 0)};\n      Console.WriteLine(&quot;Takeoff is scheduled for {0:d} at {0:T}.&quot;, \n                        takeOff);\n      for (int ctr = flightTimes.GetLowerBound(0); \n           ctr &lt;= flightTimes.GetUpperBound(0); ctr++)\n      {\n         currentTime = currentTime.Add(flightTimes[ctr]);\n         Console.WriteLine(&quot;Destination #{0} at {1}.&quot;, ctr + 1, currentTime);\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddDays_System_Double_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddDays_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddDays(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional days to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddDays (double days);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>days</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of whole and fractional days. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of days represented by <code>days</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The fractional part of the <code>days</code> parameter is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds. The <code>days</code> parameter is rounded to the nearest millisecond.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>days</code> to its date and time.  </p>\n</div>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the AddDays method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.  </p>\n<p> Converting time intervals of less than a day to a fraction can involve a loss of precision. If this is problematic, you can use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Add_\" data-linktype=\"relative-path\">Add</a> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a day.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the AddDays method to list the dates that fall on Monday, the start of the work week, in March 2008.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#2\">      Dim workDay As New DateTimeOffset(#3/1/2008 9:00AM#, _\n                         DateTimeOffset.Now.Offset)\n      Dim month As Integer = workDay.Month\n      &#39; Start with the first Monday of the month\n      If workDay.DayOfWeek &lt;&gt; DayOfWeek.Monday Then\n         If workDay.DayOfWeek = DayOfWeek.Sunday Then\n            workDay = workDay.AddDays(1)\n         Else   \n            workDay = workDay.AddDays(8 - CInt(workDay.DayOfWeek))\n         End If\n      End If\n      Console.WriteLine(&quot;Beginning of Work Week In {0:MMMM} {0:yyyy}:&quot;, workDay)\n      &#39; Add one week to the current date \n      Do While workDay.Month = month\n         Console.WriteLine(&quot;   {0:dddd}, {0:MMMM}{0: d}&quot;, workDay)\n         workDay = workDay.AddDays(7)\n      Loop        \n      &#39; The example produces the following output:\n      &#39;    Beginning of Work Week In March 2008:\n      &#39;       Monday, March 3\n      &#39;       Monday, March 10\n      &#39;       Monday, March 17\n      &#39;       Monday, March 24\n      &#39;       Monday, March 31             \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#2\">      DateTimeOffset workDay = new DateTimeOffset(2008, 3, 1, 9, 0, 0, \n                         DateTimeOffset.Now.Offset);\n      int month = workDay.Month;\n      // Start with the first Monday of the month\n      if (workDay.DayOfWeek != DayOfWeek.Monday)\n      {\n         if (workDay.DayOfWeek == DayOfWeek.Sunday)\n            workDay = workDay.AddDays(1);\n         else   \n            workDay = workDay.AddDays(8 - (int)workDay.DayOfWeek);\n      }\n      Console.WriteLine(&quot;Beginning of Work Week In {0:MMMM} {0:yyyy}:&quot;, workDay);\n      // Add one week to the current date \n      do    \n      {\n         Console.WriteLine(&quot;   {0:dddd}, {0:MMMM}{0: d}&quot;, workDay);\n         workDay = workDay.AddDays(7);\n      } while (workDay.Month == month); \n      // The example produces the following output:\n      //    Beginning of Work Week In March 2008:\n      //       Monday, March 3\n      //       Monday, March 10\n      //       Monday, March 17\n      //       Monday, March 24\n      //       Monday, March 31             \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddHours_System_Double_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddHours_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddHours(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional hours to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddHours (double hours);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hours</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of whole and fractional hours. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of hours represented by <code>hours</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The fractional part of the <code>hours</code> parameter is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds. The <code>hours</code> parameter is rounded to the nearest millisecond.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>hours</code> to its date and time.  </p>\n</div>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the AddHours method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.  </p>\n<p> Converting time intervals of less than an hour to a fraction can involve a loss of precision. (For example, one minute is 0.01666 of an hour.) If this is problematic, you can use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Add_\" data-linktype=\"relative-path\">Add</a> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the AddHours method to list the start times of work shifts for a particular week at an office that has two eight-hour shifts per day.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#3\">      Const SHIFT_LENGTH As Integer = 8\n      \n      Dim startTime As New DateTimeOffset(#8/6/2007 12:00:00AM#, _\n                           DateTimeOffset.Now.Offset)\n      Dim startOfShift As DateTimeOffset = startTime.AddHours(SHIFT_LENGTH)\n      \n      Console.WriteLine(&quot;Shifts for the week of {0:D}&quot;, startOfShift)                           \n      Do \n         &#39; Exclude third shift\n         If startOfShift.Hour &gt; 6 Then _\n            Console.WriteLine(&quot;   {0:d} at {0:T}&quot;, startOfShift)\n\n         startOfShift = startOfShift.AddHours(SHIFT_LENGTH)\n      Loop While startOfShift.DayOfWeek &lt;&gt; DayOfWeek.Saturday And _\n                 startOfShift.DayOfWeek &lt;&gt; DayOfWeek.Sunday\n                \n      &#39; The example produces the following output:\n      &#39;\n      &#39;    Shifts for the week of Monday, August 06, 2007\n      &#39;       8/6/2007 at 8:00:00 AM\n      &#39;       8/6/2007 at 4:00:00 PM\n      &#39;       8/7/2007 at 8:00:00 AM\n      &#39;       8/7/2007 at 4:00:00 PM\n      &#39;       8/8/2007 at 8:00:00 AM\n      &#39;       8/8/2007 at 4:00:00 PM\n      &#39;       8/9/2007 at 8:00:00 AM\n      &#39;       8/9/2007 at 4:00:00 PM\n      &#39;       8/10/2007 at 8:00:00 AM\n      &#39;       8/10/2007 at 4:00:00 PM                 \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#3\">      const int SHIFT_LENGTH = 8;\n      \n      DateTimeOffset startTime = new DateTimeOffset(2007, 8, 6, 0, 0, 0, \n                           DateTimeOffset.Now.Offset);\n      DateTimeOffset startOfShift = startTime.AddHours(SHIFT_LENGTH);\n      \n      Console.WriteLine(&quot;Shifts for the week of {0:D}&quot;, startOfShift);\n      do\n      { \n         // Exclude third shift\n         if (startOfShift.Hour &gt; 6)\n            Console.WriteLine(&quot;   {0:d} at {0:T}&quot;, startOfShift);\n\n         startOfShift = startOfShift.AddHours(SHIFT_LENGTH);\n      } while (startOfShift.DayOfWeek != DayOfWeek.Saturday &amp;\n                 startOfShift.DayOfWeek != DayOfWeek.Sunday);\n      // The example produces the following output:\n      //\n      //    Shifts for the week of Monday, August 06, 2007\n      //       8/6/2007 at 8:00:00 AM\n      //       8/6/2007 at 4:00:00 PM\n      //       8/7/2007 at 8:00:00 AM\n      //       8/7/2007 at 4:00:00 PM\n      //       8/8/2007 at 8:00:00 AM\n      //       8/8/2007 at 4:00:00 PM\n      //       8/9/2007 at 8:00:00 AM\n      //       8/9/2007 at 4:00:00 PM\n      //       8/10/2007 at 8:00:00 AM\n      //       8/10/2007 at 4:00:00 PM                 \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddMilliseconds_System_Double_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddMilliseconds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddMilliseconds(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of milliseconds to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddMilliseconds (double milliseconds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>milliseconds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of whole and fractional milliseconds. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of whole milliseconds represented by <code>milliseconds</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The fractional part of the <code>milliseconds</code> parameter is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond equals 10,000 ticks. However, <code>milliseconds</code> is rounded to the nearest millisecond; all values of .5 or greater are rounded up.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>milliseconds</code> to its date and time.  </p>\n</div>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the AddMilliseconds method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddMinutes_System_Double_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddMinutes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddMinutes(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional minutes to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddMinutes (double minutes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>minutes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of whole and fractional minutes. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of minutes represented by <code>minutes</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The fractional part of the <code>minutes</code> parameter is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds. The <code>minutes</code> parameter is rounded to the nearest millisecond.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>minutes</code> to its date and time.  </p>\n</div>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the AddMinutes method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.  </p>\n<p> Converting time intervals of less than a minute to a fraction can involve a loss of precision. (For example, one second is 0.01666 of a minute.) If this is problematic, you can use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Add_\" data-linktype=\"relative-path\">Add</a> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of a minute.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddMonths_System_Int32_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddMonths_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddMonths(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of months to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddMonths (int months);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>months</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of whole months. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of months represented by <code>months</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, AddMonths does not enable you to add fractional parts of a month. To add a time that consists of other time units in addition to months to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Add_\" data-linktype=\"relative-path\">Add</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>months</code> to its date and time.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the AddMonths method to display the start date of each quarter of the year 2007.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#4\">      Dim quarterDate As New DateTimeOffset(#01/01/2007#, DateTimeOffset.Now.Offset)\n      For ctr As Integer = 1 To 4\n         Console.WriteLine(&quot;Quarter {0}: {1:MMMM d}&quot;, ctr, quarterDate)\n         quarterDate = quarterDate.AddMonths(3)\n      Next   \n      &#39; This example produces the following output:\n      &#39;       Quarter 1: January 1\n      &#39;       Quarter 2: April 1\n      &#39;       Quarter 3: July 1\n      &#39;       Quarter 4: October 1      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#4\">      DateTimeOffset quarterDate = new DateTimeOffset(2007, 1, 1, 0, 0, 0, \n                                       DateTimeOffset.Now.Offset);\n      for (int ctr = 1; ctr &lt;= 4; ctr++)\n      {\n         Console.WriteLine(&quot;Quarter {0}: {1:MMMM d}&quot;, ctr, quarterDate);\n         quarterDate = quarterDate.AddMonths(3);\n      }   \n      // This example produces the following output:\n      //       Quarter 1: January 1\n      //       Quarter 2: April 1\n      //       Quarter 3: July 1\n      //       Quarter 4: October 1      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddSeconds_System_Double_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddSeconds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSeconds(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of whole and fractional seconds to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddSeconds (double seconds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>seconds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of whole and fractional seconds. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of seconds represented by <code>seconds</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The fractional part of the <code>seconds</code> parameter is the fractional part of a second. The value of fractional parts of a second are shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Second value</th>\n<th>Equivalent</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.1 second</td>\n<td>100 milliseconds</td>\n</tr>\n<tr>\n<td>.01 second</td>\n<td>10 milliseconds</td>\n</tr>\n<tr>\n<td>.001 second</td>\n<td>1 millisecond</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>seconds</code> parameter is rounded to the nearest millisecond.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>minutes</code> to its date and time.  </p>\n</div>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the AddSeconds method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddTicks_System_Int64_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddTicks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddTicks(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of ticks to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddTicks (long ticks);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ticks</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of 100-nanosecond ticks. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of ticks represented by <code>ticks</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A tick represents 100 nanoseconds, or one-ten millionth of a second. Because a tick is a very small and precise time interval, any larger time unit can be expressed as a number of ticks without a loss of precision.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>minutes</code> to its date and time.  </p>\n</div>\n<p> The following table lists the number of ticks in a particular time interval.  </p>\n<table>\n<thead>\n<tr>\n<th>Time interval</th>\n<th>Number of ticks</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Second</td>\n<td>10,000,000</td>\n</tr>\n<tr>\n<td>Minute</td>\n<td>600,000,000</td>\n</tr>\n<tr>\n<td>Hour</td>\n<td>36,000,000,000</td>\n</tr>\n<tr>\n<td>Day</td>\n<td>864,000,000,000</td>\n</tr>\n<tr>\n<td>Week</td>\n<td>6,048,000,000,000</td>\n</tr>\n<tr>\n<td>Month</td>\n<td>Depends on number of days in the month.</td>\n</tr>\n<tr>\n<td>Non-leap year</td>\n<td>315,360,000,000,000</td>\n</tr>\n<tr>\n<td>Leap year</td>\n<td>316,224,000,000,000</td>\n</tr>\n</tbody>\n</table>\n<p> Because a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the AddTicks method does not consider a particular time zone&#39;s adjustment rules when it performs date and time arithmetic.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_AddYears_System_Int32_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_AddYears_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddYears(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that adds a specified number of years to the value of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset AddYears (int years);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>years</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A number of years. The number can be negative or positive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the number of years represented by <code>years</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike most of the other methods that add a single time interval unit (such as minutes or days) to a date and time value, AddYears does not enable you to add fractional parts of a year. To add a time that consists of other time units in addition to years to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Add_\" data-linktype=\"relative-path\">Add</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>months</code> to its date and time.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the United States, driver&#39;s licenses cannot be issued to persons under 16 years of age. The following example displays the latest possible date on which a person must be born in order to legally be issued a driver&#39;s license.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#6\">      Const minimumAge As Integer = 16\n      Dim dateToday As DateTimeOffset = DateTimeOffset.Now\n      Dim latestBirthday As DateTimeOffset = dateToday.AddYears(-1 * minimumAge)\n      Console.WriteLine(&quot;To possess a driver&#39;s license, you must have been born on or before {0:d}.&quot;, _\n                        latestBirthday)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#6\">      const int minimumAge = 16;\n      DateTimeOffset dateToday = DateTimeOffset.Now;\n      DateTimeOffset latestBirthday = dateToday.AddYears(-1 * minimumAge);\n      Console.WriteLine(&quot;To possess a driver&#39;s license, you must have been born on or before {0:d}.&quot;, \n                        latestBirthday);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Compare_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects and indicates whether the first is earlier than the second, equal to the second, or later than the second.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Compare (DateTimeOffset first, DateTimeOffset second);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>first</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>second</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed integer that indicates whether the value of the <code>first</code> parameter is earlier than, later than, or the same time as the value of the <code>second</code> parameter, as the following table shows.  </p>\n <table><thead><tr><th> Return value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>first</code> is earlier than <code>second</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>first</code> is equal to <code>second</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>first</code> is later than <code>second</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In performing the comparison, the method converts both the <code>first</code> and the <code>second</code> parameters to Coordinated Universal Time (UTC) before it performs the comparison. The method is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#1\">      return DateTime.Compare(first.UtcDateTime, second.UtcDateTime);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#1\">      Return DateTime.Compare(first.UtcDateTime, second.UtcDateTime)\n</code></pre><p> In other words, the Compare method determines whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent a single point in time. It directly compares neither dates and times nor offsets.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates calls to the Compare method to compare <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#7\">using System;\n\npublic class CompareTimes\n{\n   private enum TimeComparison\n   { \n      Earlier = -1,\n      Same = 0,\n      Later = 1\n   };\n   \n   public static void Main()\n   {\n      DateTimeOffset firstTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                                 new TimeSpan(-7, 0, 0));\n\n      DateTimeOffset secondTime = firstTime;\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        (TimeComparison) DateTimeOffset.Compare(firstTime, secondTime));\n\n      secondTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                       new TimeSpan(-6, 0, 0));      \n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       (TimeComparison) DateTimeOffset.Compare(firstTime, secondTime));\n   \n      secondTime = new DateTimeOffset(2007, 9, 1, 8, 45, 0, \n                       new TimeSpan(-5, 0, 0));\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       (TimeComparison) DateTimeOffset.Compare(firstTime, secondTime));\n      // The example displays the following output to the console:\n      //       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -07:00: Same\n      //       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -06:00: Later\n      //       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 8:45:00 AM -05:00: Same         \n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#7\">Module CompareTimes\n   Private Enum TimeComparison As Integer\n      Earlier = -1\n      Same = 0\n      Later = 1\n   End Enum\n      \n   Public Sub Main()\n      Dim firstTime As New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-7, 0, 0))\n  \n      Dim secondTime As DateTimeOffset = firstTime\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        CType(DateTimeOffset.Compare(firstTime, secondTime), _\n                              TimeComparison))\n\n      secondTime = New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-6, 0, 0))      \n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       CType(DateTimeOffset.Compare(firstTime, secondTime), _\n                             TimeComparison))\n      \n      secondTime = New DateTimeOffset(#09/01/2007 8:45:00AM#, _\n                       New TimeSpan(-5, 0, 0))\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       CType(DateTimeOffset.Compare(firstTime, secondTime), _\n                             TimeComparison))\n      &#39; The example displays the following output to the console:\n      &#39;       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -07:00: Same\n      &#39;       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -06:00: Later\n      &#39;       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 8:45:00 AM -05:00: Same      \n   End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_CompareTo_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompareTo(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Compares the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and indicates whether the current object is earlier than, the same as, or later than the second <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CompareTo (DateTimeOffset other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare with the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed integer that indicates the relationship between the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and <code>other</code>, as the following table shows.  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> The current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is earlier than <code>other</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> The current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is the same as <code>other</code>.<br>\n </td></tr><tr><td> Greater than zero.<br>\n </td><td> The current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is later than <code>other</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method compares <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects by comparing their <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_UtcDateTime_\" data-linktype=\"relative-path\">UtcDateTime</a> values; that is, it determines whether the two objects represent a single point in time, and indicates whether the current object is earlier than, later than, or the same as the <code>other</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates calls to the CompareTo method to compare <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#8\">using System;\n\npublic class CompareTimes\n{\n   private enum TimeComparison\n   { \n      Earlier = -1,\n      Same = 0,\n      Later = 1\n   };\n   \n   public static void Main()\n   {\n      DateTimeOffset firstTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                                 new TimeSpan(-7, 0, 0));\n\n      DateTimeOffset secondTime = firstTime;\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        (TimeComparison) firstTime.CompareTo(secondTime));\n\n      secondTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                       new TimeSpan(-6, 0, 0));      \n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       (TimeComparison) firstTime.CompareTo(secondTime));\n   \n      secondTime = new DateTimeOffset(2007, 9, 1, 8, 45, 0, \n                       new TimeSpan(-5, 0, 0));\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       (TimeComparison) firstTime.CompareTo(secondTime));\n      // The example displays the following output to the console:\n      //       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -07:00: Same\n      //       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -06:00: Later\n      //       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 8:45:00 AM -05:00: Same         \n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#8\">Module CompareTimes\n   Private Enum TimeComparison As Integer\n      Earlier = -1\n      Same = 0\n      Later = 1\n   End Enum\n      \n   Public Sub Main()\n      Dim firstTime As New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-7, 0, 0))\n  \n      Dim secondTime As DateTimeOffset = firstTime\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        CType(firstTime.CompareTo(secondTime), _\n                              TimeComparison))\n\n      secondTime = New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-6, 0, 0))      \n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       CType(firstTime.CompareTo(secondTime), _\n                             TimeComparison))\n      \n      secondTime = New DateTimeOffset(#09/01/2007 8:45:00AM#, _\n                       New TimeSpan(-5, 0, 0))\n      Console.WriteLine(&quot;Comparing {0} and {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       CType(firstTime.CompareTo(secondTime), _\n                             TimeComparison))\n      &#39; The example displays the following output to the console:\n      &#39;       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -07:00: Same\n      &#39;       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 6:45:00 AM -06:00: Later\n      &#39;       Comparing 9/1/2007 6:45:00 AM -07:00 and 9/1/2007 8:45:00 AM -05:00: Same      \n   End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Equals_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object represents the same point in time as a specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (DateTimeOffset other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to compare to the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if both <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects have the same <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before it performs the comparison, this method converts the values of both <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#2\">      return this.UtcDateTime == other.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#2\">      Return Me.UtcDateTime = other.UtcDateTime\n</code></pre><p> In other words, the Equals method determines whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same time and have the same offset value, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_EqualsExact_\" data-linktype=\"relative-path\">EqualsExact</a> method.  </p>\n<p> A <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that is not <code>null</code> is considered to be later (or greater) than one that is <code>null</code>.  </p>\n<p> This overload of the Equals method implements the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method. It offers slightly better performance than the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Equals_System_Object_\" data-linktype=\"relative-path\">System.DateTimeOffset.Equals(Object)</a> overload because the <code>other</code> parameter does not have to be converted from an object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates calls to the Equals method to test <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects for equality with the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#9\">      Dim firstTime As New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-7, 0, 0))\n  \n      Dim secondTime As DateTimeOffset = firstTime\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        firstTime.Equals(secondTime))\n\n      secondTime = New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-6, 0, 0))      \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       firstTime.Equals(secondTime))\n      \n      secondTime = New DateTimeOffset(#09/01/2007 8:45:00AM#, _\n                       New TimeSpan(-5, 0, 0))\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       firstTime.Equals(secondTime))\n      &#39; The example displays the following output to the console:\n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -07:00: True\n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -06:00: False\n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 8:45:00 AM -05:00: True\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#9\">   private static void CompareForEquality1()\n   {\n      DateTimeOffset firstTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                                 new TimeSpan(-7, 0, 0));\n\n      DateTimeOffset secondTime = firstTime;\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        firstTime.Equals(secondTime));\n\n      secondTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                       new TimeSpan(-6, 0, 0));      \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       firstTime.Equals(secondTime));\n   \n      secondTime = new DateTimeOffset(2007, 9, 1, 8, 45, 0, \n                       new TimeSpan(-5, 0, 0));\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       firstTime.Equals(secondTime));\n      // The example displays the following output to the console:\n      //      9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -07:00: True\n      //      9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -06:00: False\n      //      9/1/2007 6:45:00 AM -07:00 = 9/1/2007 8:45:00 AM -05:00: True       \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object represents the same point in time as a specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare to the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>obj</code> parameter is a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and represents the same point in time as the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before it performs the comparison, this method converts the values of both the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the <code>obj</code> parameter to Coordinated Universal Time (UTC). The method is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#3\">      return this.UtcDateTime == ((DateTimeOffset) obj).UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#3\">      Return Me.UtcDateTime = DirectCast(obj, DatetimeOffset).UtcDateTime\n</code></pre><p> In other words, the Equals method determines whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and a specified object represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same time and have the same offset value, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_EqualsExact_\" data-linktype=\"relative-path\">EqualsExact</a> method.  </p>\n<p> If <code>obj</code> is <code>null</code>, or if the run-time type of <code>obj</code> is not <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, the method returns <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example indicates whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is equal to several other <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects, as well as to a null reference and a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#10\">      Dim firstTime As New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-7, 0, 0))\n  \n      Dim secondTime As Object = firstTime\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        firstTime.Equals(secondTime))\n\n      secondTime = New DateTimeOffset(#09/01/2007 6:45:00AM#, _\n                       New TimeSpan(-6, 0, 0))      \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       firstTime.Equals(secondTime))\n      \n      secondTime = New DateTimeOffset(#09/01/2007 8:45:00AM#, _\n                       New TimeSpan(-5, 0, 0))\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       firstTime.Equals(secondTime))\n                       \n      secondTime = Nothing\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       firstTime.Equals(secondTime))\n\n      secondTime = #9/1/2007 6:45AM#\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                       firstTime, secondTime, _\n                       firstTime.Equals(secondTime))\n                                   \n      &#39; The example displays the following output to the console:\n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -07:00: True  \n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -06:00: False \n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 8:45:00 AM -05:00: True  \n      &#39;       9/1/2007 6:45:00 AM -07:00 = : False                           \n      &#39;       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM: False          \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#10\">   private static void CompareForEquality2()\n   {\n      DateTimeOffset firstTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                                 new TimeSpan(-7, 0, 0));\n\n      object secondTime = firstTime;\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        firstTime.Equals(secondTime));\n\n      secondTime = new DateTimeOffset(2007, 9, 1, 6, 45, 0, \n                       new TimeSpan(-6, 0, 0));      \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       firstTime.Equals(secondTime));\n   \n      secondTime = new DateTimeOffset(2007, 9, 1, 8, 45, 0, \n                       new TimeSpan(-5, 0, 0));\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       firstTime.Equals(secondTime));\n                       \n      secondTime = null;\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       firstTime.Equals(secondTime));\n\n      secondTime = new DateTime(2007, 9, 1, 6, 45, 00);                       \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                       firstTime, secondTime, \n                       firstTime.Equals(secondTime));\n      // The example displays the following output to the console:\n      //       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -07:00: True  \n      //       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM -06:00: False \n      //       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 8:45:00 AM -05:00: True  \n      //       9/1/2007 6:45:00 AM -07:00 = : False                           \n      //       9/1/2007 6:45:00 AM -07:00 = 9/1/2007 6:45:00 AM: False          \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Equals_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same point in time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Equals (DateTimeOffset first, DateTimeOffset second);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>first</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>second</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects have the same <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before it performs the comparison, this method converts both <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects to Coordinated Universal Time (UTC). The method is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#4\">      return first.UtcDateTime == second.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#4\">      Return first.UtcDateTime = second.UtcDateTime\n</code></pre><p> In other words, the Equals method determines whether the two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same time and have the same offset value, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_EqualsExact_\" data-linktype=\"relative-path\">EqualsExact</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates calls to the Equals method to test various pairs of <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects for equality.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#11\">      Dim firstTime As New DateTimeOffset(#11/15/2007 11:35AM#, _\n                                          DateTimeOffset.Now.Offset)\n      Dim secondTime As DateTimeOffset = firstTime\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        DateTimeOffset.Equals(firstTime, secondTime))\n\n      &#39; The value of firstTime remains unchanged\n      secondTime = New DateTimeOffset(firstTime.DateTime, _\n                   TimeSpan.FromHours(firstTime.Offset.Hours + 1))      \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        DateTimeOffset.Equals(firstTime, secondTime))\n      \n      &#39; value of firstTime remains unchanged\n      secondTime = New DateTimeOffset(firstTime.DateTime + TimeSpan.FromHours(1), _\n                                      TimeSpan.FromHours(firstTime.Offset.Hours + 1))\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        firstTime, secondTime, _\n                        DateTimeOffset.Equals(firstTime, secondTime))\n       &#39; The example produces the following output:\n       &#39;       11/15/2007 11:35:00 AM -07:00 = 11/15/2007 11:35:00 AM -07:00: True\n       &#39;       11/15/2007 11:35:00 AM -07:00 = 11/15/2007 11:35:00 AM -06:00: False\n       &#39;       11/15/2007 11:35:00 AM -07:00 = 11/15/2007 12:35:00 PM -06:00: True       \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#11\">      DateTimeOffset firstTime = new DateTimeOffset(2007, 11, 15, 11, 35, 00, \n                                          DateTimeOffset.Now.Offset);\n      DateTimeOffset secondTime = firstTime;\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        DateTimeOffset.Equals(firstTime, secondTime));\n\n      // The value of firstTime remains unchanged\n      secondTime = new DateTimeOffset(firstTime.DateTime, \n                   TimeSpan.FromHours(firstTime.Offset.Hours + 1));      \n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        DateTimeOffset.Equals(firstTime, secondTime));\n                              \n      // value of firstTime remains unchanged\n      secondTime = new DateTimeOffset(firstTime.DateTime + TimeSpan.FromHours(1), \n                                      TimeSpan.FromHours(firstTime.Offset.Hours + 1));\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        firstTime, secondTime, \n                        DateTimeOffset.Equals(firstTime, secondTime));\n       // The example produces the following output:\n       //       11/15/2007 11:35:00 AM -07:00 = 11/15/2007 11:35:00 AM -07:00: True\n       //       11/15/2007 11:35:00 AM -07:00 = 11/15/2007 11:35:00 AM -06:00: False\n       //       11/15/2007 11:35:00 AM -07:00 = 11/15/2007 12:35:00 PM -06:00: True       \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_EqualsExact_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_EqualsExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EqualsExact(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object represents the same time and has the same offset as a specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EqualsExact (DateTimeOffset other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare to the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and <code>other</code> have the same date and time value and the same <span class=\"xref\">stem.DateTimeOffset.Offset*</span> value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because multiple time zones share a single offset, a return value of <code>true</code> does not guarantee that the current and the <code>other</code> object represent times in the same time zone.  </p>\n<p> Unlike the EqualsExact method, the overloads of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Equals_\" data-linktype=\"relative-path\">Equals</a> method determine only whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> values represent a single point in time. They do not indicate that two values have the same date and time as well as the same offset.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the use of the EqualsExact method to compare similar <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#12\">      Dim instanceTime As New DateTimeOffset(#10/31/2007 12:00AM#, _\n                                             DateTimeOffset.Now.Offset)\n      \n      Dim otherTime As DateTimeOffset = instanceTime\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        instanceTime, otherTime, _\n                        instanceTime.EqualsExact(otherTime))\n                        \n      otherTime = New DateTimeOffset(instanceTime.DateTime, _\n                                     TimeSpan.FromHours(instanceTime.Offset.Hours + 1))\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        instanceTime, otherTime, _\n                        instanceTime.EqualsExact(otherTime))\n                        \n      otherTime = New DateTimeOffset(instanceTime.DateTime + TimeSpan.FromHours(1), _\n                                      TimeSpan.FromHours(instanceTime.Offset.Hours + 1))\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        instanceTime, otherTime, _\n                        instanceTime.EqualsExact(otherTime))\n      &#39; The example produces the following output:\n      &#39;       10/31/2007 12:00:00 AM -07:00 = 10/31/2007 12:00:00 AM -07:00: True\n      &#39;       10/31/2007 12:00:00 AM -07:00 = 10/31/2007 12:00:00 AM -06:00: False\n      &#39;       10/31/2007 12:00:00 AM -07:00 = 10/31/2007 1:00:00 AM -06:00: False       \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#12\">      DateTimeOffset instanceTime = new DateTimeOffset(2007, 10, 31, 0, 0, 0, \n                                    DateTimeOffset.Now.Offset);\n      \n      DateTimeOffset otherTime = instanceTime;\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        instanceTime, otherTime, \n                        instanceTime.EqualsExact(otherTime));\n                        \n      otherTime = new DateTimeOffset(instanceTime.DateTime, \n                  TimeSpan.FromHours(instanceTime.Offset.Hours + 1));\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        instanceTime, otherTime, \n                        instanceTime.EqualsExact(otherTime));\n                        \n      otherTime = new DateTimeOffset(instanceTime.DateTime + TimeSpan.FromHours(1), \n                      TimeSpan.FromHours(instanceTime.Offset.Hours + 1));\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        instanceTime, otherTime,\n                        instanceTime.EqualsExact(otherTime));\n      // The example produces the following output:\n      //       10/31/2007 12:00:00 AM -07:00 = 10/31/2007 12:00:00 AM -07:00: True\n      //       10/31/2007 12:00:00 AM -07:00 = 10/31/2007 12:00:00 AM -06:00: False\n      //       10/31/2007 12:00:00 AM -07:00 = 10/31/2007 1:00:00 AM -06:00: False       \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_FromFileTime_System_Int64_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_FromFileTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromFileTime(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified Windows file time to an equivalent local time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset FromFileTime (long fileTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Windows file time, expressed in ticks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that represents the date and time of <code>fileTime</code> with the offset set to the local time offset.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>filetime</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>filetime</code> is greater than <code>DateTimeOffset.MaxValue.Ticks</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  </p>\n<p> A Windows file time is directly accessible through the Windows API by calling the <code>GetFileTime</code> function, which returns a <code>FILETIME</code> structure. The single function parameter is the handle of the file whose file time information is to be retrieved. The file handle is retrieved by calling the <code>CreateFile</code> function. The <code>FILETIME</code> structure&#39;s <code>dwHighDateTime</code> member contains the four high-order bytes of the file time, and its <code>dwLowDateTime</code> member contains the four low-order bytes. The example that follows illustrates how to retrieve Windows file time values and convert them to <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> values.  </p>\n<p> Windows file time values can also be created from <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToFileTime_\" data-linktype=\"relative-path\">ToFileTime</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_ToFileTimeUtc_\" data-linktype=\"relative-path\">ToFileTimeUtc</a> methods, and from <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> values by calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToFileTime_\" data-linktype=\"relative-path\">ToFileTime</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Windows API to retrieve the Windows file times for the WordPad executable.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.FromFileTime#1\">using System;\nusing System.IO;\nusing System.Runtime.InteropServices;\n\npublic struct FileTime\n{\n   public uint dwLowDateTime;\n   public uint dwHighDateTime;\n\n   public static implicit operator long(FileTime fileTime)\n   {\n      long returnedLong;\n      // Convert 4 high-order bytes to a byte array\n      byte[] highBytes = BitConverter.GetBytes(fileTime.dwHighDateTime);\n      // Resize the array to 8 bytes (for a Long)\n      Array.Resize(ref highBytes, 8); \n\n      // Assign high-order bytes to first 4 bytes of Long\n      returnedLong = BitConverter.ToInt64(highBytes, 0); \n      // Shift high-order bytes into position\n      returnedLong = returnedLong &lt;&lt; 32;\n      // Or with low-order bytes\n      returnedLong = returnedLong | fileTime.dwLowDateTime;\n      // Return long \n      return returnedLong;\n   }\n}\n\npublic class FileTimes\n{\n   private const int OPEN_EXISTING = 3;\n   private const int INVALID_HANDLE_VALUE = -1;\n      \n   [DllImport(&quot;Kernel32.dll&quot;, CharSet = CharSet.Unicode)]\n   private static extern int CreateFile(string lpFileName, \n                                       int dwDesiredAccess, \n                                       int dwShareMode, \n                                       int lpSecurityAttributes, \n                                       int dwCreationDisposition, \n                                       int dwFlagsAndAttributes, \n                                       int hTemplateFile);\n\n   [DllImport(&quot;Kernel32.dll&quot;)]\n   private static extern bool GetFileTime(int hFile, \n                                          out FileTime lpCreationTime, \n                                          out FileTime lpLastAccessTime, \n                                          out FileTime lpLastWriteTime);\n\n   [DllImport(&quot;Kernel32.dll&quot;)]\n   private static extern bool CloseHandle(int hFile); \n\n   public static void Main()\n   {\n      // Open file %windir%\\write.exe\n      string winDir = Environment.SystemDirectory; \n      if (! (winDir.EndsWith(Path.DirectorySeparatorChar.ToString())))\n         winDir += Path.DirectorySeparatorChar; \n      winDir += &quot;write.exe&quot;;\n\n      // Get file time using Windows API\n      //\n      // Open file\n      int hFile = CreateFile(winDir, 0, 0, 0, OPEN_EXISTING, 0, 0);\n      if (hFile == INVALID_HANDLE_VALUE)\n      {\n         Console.WriteLine(&quot;Unable to access {0}.&quot;, winDir);\n      }   \n      else\n      {\n         FileTime creationTime, accessTime, writeTime;\n         if (GetFileTime(hFile, out creationTime, out accessTime, out writeTime)) \n         {\n            CloseHandle(hFile);\n            long fileCreationTime = (long) creationTime;\n            long fileAccessTime = accessTime;\n            long fileWriteTime = (long) writeTime;\n\n            Console.WriteLine(&quot;File {0} Retrieved Using the Windows API:&quot;, winDir);\n            Console.WriteLine(&quot;   Created:     {0:d}&quot;, DateTimeOffset.FromFileTime(fileCreationTime).ToString());\n            Console.WriteLine(&quot;   Last Access: {0:d}&quot;, DateTimeOffset.FromFileTime(fileAccessTime).ToString());\n            Console.WriteLine(&quot;   Last Write:  {0:d}&quot;, DateTimeOffset.FromFileTime(fileWriteTime).ToString());\n            Console.WriteLine();\n         }   \n      }\n      \n      // Get date and time, convert to file time, then convert back\n      FileInfo fileInfo = new FileInfo(winDir);\n      DateTimeOffset infoCreationTime, infoAccessTime, infoWriteTime;\n      long ftCreationTime, ftAccessTime, ftWriteTime;\n      \n      // Get dates and times of file creation, last access, and last write\n      infoCreationTime = fileInfo.CreationTime;\n      infoAccessTime = fileInfo.LastAccessTime;\n      infoWriteTime = fileInfo.LastWriteTime;\n      // Convert values to file times\n      ftCreationTime = infoCreationTime.ToFileTime();\n      ftAccessTime = infoAccessTime.ToFileTime();\n      ftWriteTime = infoWriteTime.ToFileTime();\n      \n      // Convert file times back to DateTimeOffset values\n      Console.WriteLine(&quot;File {0} Retrieved Using a FileInfo Object:&quot;, winDir);\n      Console.WriteLine(&quot;   Created:     {0:d}&quot;, DateTimeOffset.FromFileTime(ftCreationTime).ToString());\n      Console.WriteLine(&quot;   Last Access: {0:d}&quot;, DateTimeOffset.FromFileTime(ftAccessTime).ToString());\n      Console.WriteLine(&quot;   Last Write:  {0:d}&quot;, DateTimeOffset.FromFileTime(ftWriteTime).ToString()); \n   }\n}\n// The example produces the following output:\n//    File C:\\WINDOWS\\system32\\write.exe Retrieved Using the Windows API:\n//       Created:     10/13/2005 5:26:59 PM -07:00\n//       Last Access: 3/20/2007 2:07:00 AM -07:00\n//       Last Write:  8/4/2004 5:00:00 AM -07:00\n//    \n//    File C:\\WINDOWS\\system32\\write.exe Retrieved Using a FileInfo Object:\n//       Created:     10/13/2005 5:26:59 PM -07:00\n//       Last Access: 3/20/2007 2:07:00 AM -07:00\n//       Last Write:  8/4/2004 5:00:00 AM -07:00\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.FromFileTime#1\">Imports System.IO\n\nPublic Structure FileTime\n   Public dwLowDateTime As UInteger\n   Public dwHighDateTime As UInteger\n\n   Public Shared Widening Operator CType(fileTime As FileTime) As Long\n      Dim returnedLong As Long\n      &#39; Convert 4 high-order bytes to a byte array\n      Dim highBytes() As Byte = BitConverter.GetBytes(fileTime.dwHighDateTime)\n      &#39; Resize the array to 8 bytes (for a Long)\n      ReDim Preserve highBytes(7)\n\n      &#39; Assign high-order bytes to first 4 bytes of Long\n      returnedLong = BitConverter.ToInt64(highBytes, 0) \n      &#39; Shift high-order bytes into position\n      returnedLong = returnedLong &lt;&lt; 32\n      &#39; Or with low-order bytes\n      returnedLong = returnedLong Or fileTime.dwLowDateTime\n      &#39; Return Long \n      return returnedLong\n   End Operator\nEnd Structure\n\nModule modMain\n   Private Const OPEN_EXISTING As Integer = 3\n   \n   Private Const INVALID_HANDLE_VALUE As Integer = -1\n      \n   Private Declare Function CreateFile Lib &quot;kernel32&quot; Alias &quot;CreateFileA&quot; ( _\n                            ByVal lpFileName As String, _\n                            ByVal dwDesiredAccess As Integer, _\n                            ByVal dwShareMode As Integer, _\n                            ByVal lpSecurityAttributes As Integer, _\n                            ByVal dwCreationDisposition As Integer, _\n                            ByVal dwFlagsAndAttributes As Integer, _\n                            ByVal hTemplateFile As Integer) _\n           As Integer\n\n   Private Declare Function GetFileTime Lib &quot;Kernel32&quot;( _\n                            hFile As Integer, _\n                            ByRef lpCreationTime As FileTime, _\n                            ByRef lpLastAccessTime As FileTime, _\n                            ByRef lpLastWriteTime As FileTime) _\n            As Boolean \n\n   Private Declare Function CloseHandle Lib &quot;Kernel32&quot; ( _\n                            hFile As Integer) _\n           As Boolean\n                        \n   Public Sub Main()\n      &#39; Open file %windir%\\write.exe\n      Dim winDir As String = Environment.SystemDirectory \n      If Not winDir.EndsWith(Path.DirectorySeparatorChar) Then _\n         winDir += Path.DirectorySeparatorChar \n      windir += &quot;write.exe&quot;\n\n      &#39; Get file time using Windows API\n      &#39;\n      &#39; Open file\n      Dim hFile As Integer = CreateFile(winDir, 0, 0, 0, _\n                                       OPEN_EXISTING, 0, 0)\n      If hFile = INVALID_HANDLE_VALUE Then\n         Console.WriteLine(&quot;Unable to access {0}.&quot;, winDir)\n      Else\n         Dim creationTime, accessTime, writeTime As FileTime\n         If GetFileTime(hFile, creationTime, accessTime, writeTime) Then\n            CloseHandle(hFile)\n            Dim fileCreationTime As Long = CType(creationTime, Long)\n            Dim fileAccessTime As Long = CType(accessTime, Long)\n            Dim fileWriteTime As Long = CType(writeTime, Long)\n\n            Console.WriteLine(&quot;File {0} Retrieved Using the Windows API:&quot;, winDir)\n            Console.WriteLine(&quot;   Created:     {0:d}&quot;, DateTimeOffset.FromFileTime(fileCreationTime).ToString())\n            Console.WriteLine(&quot;   Last Access: {0:d}&quot;, DateTimeOffset.FromFileTime(fileAccessTime).ToString())\n            Console.WriteLine(&quot;   Last Write:  {0:d}&quot;, DateTimeOffset.FromFileTime(fileWriteTime).ToString())\n            Console.WriteLine() \n         End If   \n      End If\n      \n      &#39; Get date and time, convert to file time, then convert back\n      Dim fileInfo As New FileInfo(winDir)\n      Dim infoCreationTime, infoAccessTime, infoWriteTime As DateTimeOffset\n      Dim ftCreationTime, ftAccessTime, ftWriteTime As Long\n      \n      &#39; Get dates and times of file creation, last access, and last write\n      infoCreationTime = fileInfo.CreationTime\n      infoAccessTime = fileInfo.LastAccessTime\n      infoWriteTime = fileInfo.LastWriteTime\n      &#39; Convert values to file times\n      ftCreationTime = infoCreationTime.ToFileTime()\n      ftAccessTime = infoAccessTime.ToFileTime()\n      ftWriteTime = infoWriteTime.ToFileTime()\n      \n      &#39; Convert file times back to DateTimeOffset values\n      Console.WriteLine(&quot;File {0} Retrieved Using a FileInfo Object:&quot;, winDir)\n      Console.WriteLine(&quot;   Created:     {0:d}&quot;, DateTimeOffset.FromFileTime(ftCreationTime).ToString())\n      Console.WriteLine(&quot;   Last Access: {0:d}&quot;, DateTimeOffset.FromFileTime(ftAccessTime).ToString())\n      Console.WriteLine(&quot;   Last Write:  {0:d}&quot;, DateTimeOffset.FromFileTime(ftWriteTime).ToString()) \n   End Sub\nEnd Module\n&#39; The example produces the following output:\n&#39;    File C:\\WINDOWS\\system32\\write.exe Retrieved Using the Windows API:\n&#39;       Created:     10/13/2005 5:26:59 PM -07:00\n&#39;       Last Access: 3/20/2007 2:07:00 AM -07:00\n&#39;       Last Write:  8/4/2004 5:00:00 AM -07:00\n&#39;    \n&#39;    File C:\\WINDOWS\\system32\\write.exe Retrieved Using a FileInfo Object:\n&#39;       Created:     10/13/2005 5:26:59 PM -07:00\n&#39;       Last Access: 3/20/2007 2:07:00 AM -07:00\n&#39;       Last Write:  8/4/2004 5:00:00 AM -07:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_FromUnixTimeMilliseconds_System_Int64_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_FromUnixTimeMilliseconds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromUnixTimeMilliseconds(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a Unix time expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>milliseconds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Unix time, expressed as the number of milliseconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>A date and time value that represents the same moment in time as the Unix time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>milliseconds</code> is less than  -62,135,596,800,000.  </p>\n<p> -or-  </p>\n<p> <code>milliseconds</code> is greater than 253,402,300,799,999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property value of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> instance is <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTimeOffset_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTime(DateTimeOffset,TimeZoneInfo)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_FromUnixTimeSeconds_System_Int64_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_FromUnixTimeSeconds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromUnixTimeSeconds(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a Unix time expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset FromUnixTimeSeconds (long seconds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>seconds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Unix time, expressed as the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). For Unix times before this date, its value is negative.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>A date and time value that represents the same moment in time as the Unix time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>seconds</code> is less than  -62,135,596,800.  </p>\n<p> -or-  </p>\n<p> <code>seconds</code> is greater than 253,402,300,799.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property value of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> instance is <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a>, which represents Coordinated Universal Time. You can convert it to the time in a specific time zone by calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTimeOffset_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTime(DateTimeOffset,TimeZoneInfo)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_GetHashCode\">\r\n    \r\n            <a id=\"System_DateTimeOffset_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Parse_System_String_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date, time, and offset to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset Parse (string input);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equivalent to the date and time that is contained in <code>input</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The offset is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> does not contain a valid string representation of a date and time.  </p>\n<p> -or-  </p>\n<p> <code>input</code> contains the string representation of an offset value without a date or time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Parse parses a string with three elements that can appear in any order and are delimited by white space. These three elements are as shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;Date&gt;</td>\n<td>&quot;2/10/2007&quot;</td>\n</tr>\n<tr>\n<td>&lt;Time&gt;</td>\n<td>&quot;1:02:03 PM&quot;</td>\n</tr>\n<tr>\n<td>&lt;Offset&gt;</td>\n<td>&quot;-7:30&quot;</td>\n</tr>\n</tbody>\n</table>\n<p> Although each of these elements is optional, &lt;Offset&gt; cannot appear by itself. It must be provided together with either &lt;Date&gt; or &lt;Time&gt;. If &lt;Date&gt; is missing, its default value is the current day. If &lt;Time&gt; is missing, its default value is 12:00:00 AM. If &lt;Date&gt; is present but its year component consists of only two digits, it is converted to a year in the current culture&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. If &lt;Offset&gt; is missing, its default value is the offset of the local time zone. &lt;Offset&gt; can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, &lt;Offset&gt; must include a sign symbol.  </p>\n<p> The <code>input</code> string is parsed by using the formatting information in a <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that is initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to the formatting of the current culture, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a> method and provide a format specifier.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the Parse method to parse several date and time strings. The example includes output from March 22, 2007, on a system whose culture is en-us.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Parse#1\">      Dim dateString As String\n      Dim offsetDate As DateTimeOffset\n\n      &#39; String with date only\n      dateString = &quot;05/01/2008&quot;\n      offsetDate = DateTimeOffset.Parse(dateString)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 5/1/2008 12:00:00 AM -07:00  \n\n      &#39; String with time only\n      dateString = &quot;11:36 PM&quot;\n      offsetDate = DateTimeOffset.Parse(dateString)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 3/26/2007 11:36:00 PM -07:00\n\n      &#39; String with date and offset \n      dateString = &quot;05/01/2008 +7:00&quot;\n      offsetDate = DateTimeOffset.Parse(dateString)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 5/1/2008 12:00:00 AM +07:00\n\n      &#39; String with day abbreviation\n      dateString = &quot;Thu May 01, 2008&quot;\n      offsetDate = DateTimeOffset.Parse(dateString)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 5/1/2008 12:00:00 AM -07:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Parse#1\">      string dateString;\n      DateTimeOffset offsetDate; \n\n      // String with date only\n      dateString = &quot;05/01/2008&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString);\n      Console.WriteLine(offsetDate.ToString());\n\n      // String with time only\n      dateString = &quot;11:36 PM&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString);\n      Console.WriteLine(offsetDate.ToString());\n\n      // String with date and offset \n      dateString = &quot;05/01/2008 +1:00&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString);\n      Console.WriteLine(offsetDate.ToString());\n\n      // String with day abbreviation\n      dateString = &quot;Thu May 01, 2008&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString);\n      Console.WriteLine(offsetDate.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Parse_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified culture-specific format information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that provides culture-specific format information about <code>input</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equivalent to the date and time that is contained in <code>input</code>, as specified by <code>formatProvider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The offset is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> does not contain a valid string representation of a date and time.  </p>\n<p> -or-  </p>\n<p> <code>input</code> contains the string representation of an offset value without a date or time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;Date&gt;</td>\n<td>&quot;2/10/2007&quot;</td>\n</tr>\n<tr>\n<td>&lt;Time&gt;</td>\n<td>&quot;1:02:03 PM&quot;</td>\n</tr>\n<tr>\n<td>&lt;Offset&gt;</td>\n<td>&quot;-7:30&quot;</td>\n</tr>\n</tbody>\n</table>\n<p> Although each of these elements is optional, &lt;Offset&gt; cannot appear by itself. It must be provided together with either &lt;Date&gt; or &lt;Time&gt;. If &lt;Date&gt; is missing, its default value is the current day. If &lt;Date&gt; is present but its year component consists of only two digits, it is converted to a year in the <code>provider</code> parameter&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. If &lt;Time&gt; is missing, its default value is 12:00:00 AM. If &lt;Offset&gt; is missing, its default value is the offset of the local time zone. &lt;Offset&gt; can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, &lt;Offset&gt; must include a sign symbol.  </p>\n<p> The format of these three elements is defined by the <code>formatProvider</code> parameter, which can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting is used in the <code>input</code> parameter. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting used in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The positive or negative sign used in &lt;Offset&gt; must be either + or -. It is not defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a> or <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> properties of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object of the <code>formatProvider</code> parameter.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example parses date and time strings that are formatted for the fr-fr culture and displays them using the local system&#39;s default en-us culture.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Parse#2\">      Dim fmt As DateTimeFormatInfo = New CultureInfo(&quot;fr-fr&quot;).DateTimeFormat\n      Dim dateString As String\n      Dim offsetDate As DateTimeOffset\n      \n      dateString = &quot;03-12-07&quot;\n      offsetDate = DateTimeOffset.Parse(dateString, fmt)\n      Console.WriteLine(&quot;{0} returns {1}&quot;, _\n                        dateString, _\n                        offsetDate.ToString())\n      \n      dateString = &quot;15/09/07 08:45:00 +1:00&quot;\n      offsetDate = DateTimeOffset.Parse(dateString, fmt)\n      Console.WriteLine(&quot;{0} returns {1}&quot;, _\n                        dateString, _\n                        offsetDate.ToString())\n      \n      dateString = &quot;mar. 1 janvier 2008 1:00:00 +1:00&quot; \n      offsetDate = DateTimeOffset.Parse(dateString, fmt)\n      Console.WriteLine(&quot;{0} returns {1}&quot;, _\n                        dateString, _\n                        offsetDate.ToString())\n      &#39; The example displays the following output to the console:\n      &#39;    03-12-07 returns 12/3/2007 12:00:00 AM -08:00\n      &#39;    15/09/07 08:45:00 +1:00 returns 9/15/2007 8:45:00 AM +01:00\n      &#39;    mar. 1 janvier 2008 1:00:00 +1:00 returns 1/1/2008 1:00:00 AM +01:00                              \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Parse#2\">      DateTimeFormatInfo fmt = new CultureInfo(&quot;fr-fr&quot;).DateTimeFormat;\n      string dateString;\n      DateTimeOffset offsetDate;\n      \n      dateString = &quot;03-12-07&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString, fmt);\n      Console.WriteLine(&quot;{0} returns {1}&quot;, \n                        dateString, \n                        offsetDate.ToString());\n      \n      dateString = &quot;15/09/07 08:45:00 +1:00&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString, fmt);\n      Console.WriteLine(&quot;{0} returns {1}&quot;, \n                        dateString, \n                        offsetDate.ToString());\n      \n      dateString = &quot;mar. 1 janvier 2008 1:00:00 +1:00&quot;; \n      offsetDate = DateTimeOffset.Parse(dateString, fmt);\n      Console.WriteLine(&quot;{0} returns {1}&quot;, \n                        dateString, \n                        offsetDate.ToString());\n      // The example displays the following output to the console:\n      //    03-12-07 returns 12/3/2007 12:00:00 AM -08:00\n      //    15/09/07 08:45:00 +1:00 returns 9/15/2007 8:45:00 AM +01:00\n      //    mar. 1 janvier 2008 1:00:00 +1:00 returns 1/1/2008 1:00:00 AM +01:00                              \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String,IFormatProvider,DateTimeStyles)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified culture-specific format information and formatting style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that provides culture-specific format information about <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>styles</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>formatProvider</code> and <code>styles</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The offset is greater than 14 hours or less than -14 hours.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> is not a valid <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> includes an unsupported <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values that cannot be used together.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> does not contain a valid string representation of a date and time.  </p>\n<p> -or-  </p>\n<p> <code>input</code> contains the string representation of an offset value without a date or time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;Date&gt;</td>\n<td>&quot;2/10/2007&quot;</td>\n</tr>\n<tr>\n<td>&lt;Time&gt;</td>\n<td>&quot;1:02:03 PM&quot;</td>\n</tr>\n<tr>\n<td>&lt;Offset&gt;</td>\n<td>&quot;-7:30&quot;</td>\n</tr>\n</tbody>\n</table>\n<p> Although each of these elements is optional, &lt;Offset&gt; cannot appear by itself. It must be provided together with either &lt;Date&gt; or &lt;Time&gt;. If &lt;Date&gt; is missing, its default value is the current day. If &lt;Date&gt; is present but its year component consists of only two digits, it is converted to a year in the <code>provider</code> parameter&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. If &lt;Time&gt; is missing, its default value is 12:00:00 AM. If &lt;Offset&gt; is missing, its default value is the offset of the local time zone, or <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a> if either the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> or <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> value is specified in the <code>styles</code> parameter. If &lt;Offset&gt; is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, &lt;Offset&gt; must include a sign symbol.  </p>\n<p> The format of these three elements is defined by the <code>formatProvider</code> parameter, which can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting is used in the <code>input</code> parameter. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting used in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>Each element can also be enclosed by leading or trailing white space, and the &lt;Date&gt; and &lt;Time&gt; elements can include inner white space (such as 6:   00:00). Only the &lt;Offset&gt; component cannot include inner white space.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The positive or negative sign used in &lt;Offset&gt; must be either + or -. It is not defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a> or <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> properties of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object returned by the <code>formatProvider</code> parameter.  </p>\n<p>The following table shows the members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> enumeration that are supported.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses the string represented by <code>input</code> and, if necessary, converts it to UTC. It is equivalent to parsing a string and then calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Inner white space is permitted in the &lt;Date&gt; and &lt;Time&gt; elements.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Leading white space is permitted in front of each component in the parsed string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Trailing white space is permitted in front of each component in the parsed string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>This is the default behavior. It cannot be overridden by supplying a more restrictive <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration value, such as <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that, if the <code>input</code> parameter lacks an &lt;Offset&gt; element, the offset of the local time zone should be provided. This is the default behavior of the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_\" data-linktype=\"relative-path\">Parse</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that, if the <code>input</code> parameter lacks an &lt;Offset&gt; element, the UTC offset (00:00) should be provided.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored and has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Because the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure does not include a <code>Kind</code> property, this value has no effect.</td>\n</tr>\n</tbody>\n</table>\n<p> Only the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> value is not supported. An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown if this value is included in the <code>styles</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the effect of passing the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a>, <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a>, and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> values to the <code>styles</code> parameter of the Parse method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Parse#3\">      Dim dateString As String\n      Dim offsetDate As DateTimeOffset\n\n      dateString = &quot;05/01/2008 6:00:00&quot;\n      &#39; Assume time is local \n      offsetDate = DateTimeOffset.Parse(dateString, Nothing, DateTimeStyles.AssumeLocal)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 5/1/2008 6:00:00 AM -07:00\n\n      &#39; Assume time is UTC\n      offsetDate = DateTimeOffset.Parse(dateString, Nothing, DateTimeStyles.AssumeUniversal)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 5/1/2008 6:00:00 AM +00:00\n\n      &#39; Parse and convert to UTC \n      dateString = &quot;05/01/2008 6:00:00AM +5:00&quot;\n      offsetDate = DateTimeOffset.Parse(dateString, Nothing, DateTimeStyles.AdjustToUniversal)\n      Console.WriteLine(offsetDate.ToString())   &#39; Displays 5/1/2008 1:00:00 AM +00:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Parse#3\">      string dateString;\n      DateTimeOffset offsetDate;\n\n      dateString = &quot;05/01/2008 6:00:00&quot;;\n      // Assume time is local \n      offsetDate = DateTimeOffset.Parse(dateString, null, DateTimeStyles.AssumeLocal);\n      Console.WriteLine(offsetDate.ToString());   // Displays 5/1/2008 6:00:00 AM -07:00\n\n      // Assume time is UTC\n      offsetDate = DateTimeOffset.Parse(dateString, null, DateTimeStyles.AssumeUniversal);\n      Console.WriteLine(offsetDate.ToString());   // Displays 5/1/2008 6:00:00 AM +00:00\n\n      // Parse and convert to UTC \n      dateString = &quot;05/01/2008 6:00:00AM +5:00&quot;;\n      offsetDate = DateTimeOffset.Parse(dateString, null, DateTimeStyles.AdjustToUniversal);\n      Console.WriteLine(offsetDate.ToString());   // Displays 5/1/2008 1:00:00 AM +00:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ParseExact_System_String_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParseExact(String,String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format specifier that defines the expected format of <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>input</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equivalent to the date and time that is contained in <code>input</code> as specified by <code>format</code> and <code>formatProvider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The offset is greater than 14 hours or less than -14 hours.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>format</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>input</code> does not contain a valid string representation of a date and time.  </p>\n<p> -or-  </p>\n<p> <code>format</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> The hour component and the AM/PM designator in <code>input</code> do not agree.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ParseExact method parses the string representation of a date, which must be in the format defined by the <code>format</code> parameter. It also requires that the &lt;Date&gt;, &lt;Time&gt;, and &lt;Offset&gt; elements of the string representation of a date and time appear in the order specified by <code>format</code>. If the <code>input</code> string does not match this <code>format</code> parameter, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  In contrast, the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTimeOffset.Parse(String,IFormatProvider)</a> method parses the string representation of a date in any one of the formats recognized by the format provider&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_\" data-linktype=\"relative-path\">Parse</a> also allows the &lt;Date&gt;, &lt;Time&gt;, and &lt;Offset&gt; elements of the string representation of a date and time to appear in any order.  </p>\n<p> The <code>format</code> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required format of the <code>input</code> parameter. For details about valid formatting codes, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> and <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>. If <code>format</code> includes the <code>z</code>, <code>zz</code>, or <code>zzz</code> custom format specifiers to indicate that an offset must be present in <code>input</code>, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<p> If <code>format</code> requires that <code>input</code> contain a date but not a time, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned a time of midnight (0:00:00). If <code>format</code> requires that <code>input</code> contain a time but not a date, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned the current date on the local system. If <code>format</code> does not require that <code>input</code> contain an offset, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned the time zone offset of the local system.  </p>\n<p> The particular date and time symbols and strings used in <code>input</code> are defined by the <code>formatProvider</code> parameter, as is the precise format of <code>input</code> if <code>format</code> is a standard format specifier string. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture based on which <code>input</code> is interpreted. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ParseExact method with standard and custom format specifiers and the invariant culture to parse several date and time strings.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ParseExact#1\">      Dim dateString, format As String  \n      Dim result As DateTimeOffset\n      Dim provider As CultureInfo = CultureInfo.InvariantCulture\n      \n      &#39; Parse date-only value with invariant culture.\n      dateString = &quot;06/15/2008&quot;\n      format = &quot;d&quot;\n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider)\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString)\n      End Try \n      \n      &#39; Parse date-only value without leading zero in month using &quot;d&quot; format.\n      &#39; Should throw a FormatException because standard short date pattern of \n      &#39; invariant culture requires two-digit month.\n      dateString = &quot;6/15/2008&quot;\n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider)\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString)\n      End Try \n\n      &#39; Parse date and time with custom specifier.\n      dateString = &quot;Sun 15 Jun 2008 8:30 AM -06:00&quot;\n      format = &quot;ddd dd MMM yyyy h:mm tt zzz&quot;        \n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider)\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString)\n      End Try \n      \n      &#39; Parse date and time with offset without offset&#39;s minutes.\n      &#39; Should throw a FormatException because &quot;zzz&quot; specifier requires leading  \n      &#39; zero in hours.\n      dateString = &quot;Sun 15 Jun 2008 8:30 AM -06&quot;\n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider)\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString)\n      End Try \n      &#39; The example displays the following output:\n      &#39;    06/15/2008 converts to 6/15/2008 12:00:00 AM -07:00.\n      &#39;    6/15/2008 is not in the correct format.\n      &#39;    Sun 15 Jun 2008 8:30 AM -06:00 converts to 6/15/2008 8:30:00 AM -06:00.\n      &#39;    Sun 15 Jun 2008 8:30 AM -06 is not in the correct format.                     \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ParseExact#1\">      string dateString, format;  \n      DateTimeOffset result;\n      CultureInfo provider = CultureInfo.InvariantCulture;\n      \n      // Parse date-only value with invariant culture.\n      dateString = &quot;06/15/2008&quot;;\n      format = &quot;d&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider);\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString());\n      }   \n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString);\n      } \n      \n      // Parse date-only value without leading zero in month using &quot;d&quot; format.\n      // Should throw a FormatException because standard short date pattern of \n      // invariant culture requires two-digit month.\n      dateString = &quot;6/15/2008&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider);\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString());\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString);\n      } \n\n      // Parse date and time with custom specifier.\n      dateString = &quot;Sun 15 Jun 2008 8:30 AM -06:00&quot;;\n      format = &quot;ddd dd MMM yyyy h:mm tt zzz&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider);\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString());\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString);\n      } \n      \n      // Parse date and time with offset without offset//s minutes.\n      // Should throw a FormatException because &quot;zzz&quot; specifier requires leading  \n      // zero in hours.\n      dateString = &quot;Sun 15 Jun 2008 8:30 AM -06&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider);\n         Console.WriteLine(&quot;{0} converts to {1}.&quot;, dateString, result.ToString());\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;{0} is not in the correct format.&quot;, dateString);\n      } \n      // The example displays the following output:\n      //    06/15/2008 converts to 6/15/2008 12:00:00 AM -07:00.\n      //    6/15/2008 is not in the correct format.\n      //    Sun 15 Jun 2008 8:30 AM -06:00 converts to 6/15/2008 8:30:00 AM -06:00.\n      //    Sun 15 Jun 2008 8:30 AM -06 is not in the correct format.                     \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParseExact(String,String,IFormatProvider,DateTimeStyles)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format specifier that defines the expected format of <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>styles</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>format</code>, <code>formatProvider</code>, and <code>styles</code> parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The offset is greater than 14 hours or less than -14 hours.  </p>\n<p> -or-  </p>\n<p> The <code>styles</code> parameter includes an unsupported value.  </p>\n<p> -or-  </p>\n<p> The <code>styles</code> parameter contains <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values that cannot be used together.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>format</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>input</code> does not contain a valid string representation of a date and time.  </p>\n<p> -or-  </p>\n<p> <code>format</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> The hour component and the AM/PM designator in <code>input</code> do not agree.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ParseExact method parses the string representation of a date, which must be in the format defined by the <code>format</code> parameter. It also requires that the &lt;Date&gt;, &lt;Time&gt;, and &lt;Offset&gt; elements of the string representation of a date and time appear in the order specified by <code>format</code>. If the <code>input</code> string does not match the pattern of the <code>format</code> parameter, with any variations defined by the <code>styles</code> parameter, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  In contrast, the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)</a> method parses the string representation of a date in any one of the formats recognized by the format provider&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_\" data-linktype=\"relative-path\">Parse</a> also allows the &lt;Date&gt;, &lt;Time&gt;, and &lt;Offset&gt; elements of the string representation of a date and time to appear in any order.  </p>\n<p> The <code>format</code> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of the <code>input</code> parameter. For details about valid formatting codes, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> and <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>. If <code>format</code> includes the <code>z</code>, <code>zz</code>, or <code>zzz</code> custom format specifiers to indicate that an offset must be present in <code>input</code>, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<p> If <code>format</code> requires that <code>input</code> contain a date but not a time, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned a time of midnight (0:00:00). If <code>format</code> requires that <code>input</code> contain a time but not a date, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned the current date on the local system. If <code>format</code> does not require that <code>input</code> contain an offset, the offset of the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object depends on the value of the <code>styles</code> parameter. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the offset of the local time zone is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If neither value is specified, the offset of the local time zone is used.  </p>\n<p> The particular date and time symbols and strings used in <code>input</code> are defined by the <code>formatProvider</code> parameter. The same is true for the precise format of <code>input</code>, if <code>format</code> is a standard format specifier string. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture based on which <code>input</code> is interpreted. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The <code>styles</code> parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration are supported except <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>. The following table lists the effect of each supported member.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><code>DateTimeStyles</code> member</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>input</code> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>format</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the offset of the local time zone. This is the default value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>format</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the UTC offset (+00:00).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include inner white space not specified by <code>format</code>. Extra white space can appear between date and time components and within individual components, and is ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading spaces not specified by <code>format</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include trailing spaces not specified by <code>format</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading, trailing, and inner spaces not specified by <code>format</code>. All extra white-space characters not specified in <code>format</code> are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that additional white space is not permitted in <code>input</code>. White space must appear exactly as specified in <code>format</code>. This is the default behavior.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Has no effect because the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure does not include a <code>Kind</code> property.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ParseExact method with standard and custom format specifiers, the invariant culture, and various <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values to parse several date and time strings.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ParseExact#2\">      Dim dateString, format As String  \n      Dim result As DateTimeOffset\n      Dim provider As CultureInfo = CultureInfo.InvariantCulture\n      \n      &#39; Parse date-only value with invariant culture and assume time is UTC.\n      dateString = &quot;06/15/2008&quot;\n      format = &quot;d&quot;\n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider, _\n                                            DateTimeStyles.AssumeUniversal)\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End Try \n      \n      &#39; Parse date-only value with leading white space.\n      &#39; Should throw a FormatException because only trailing whitespace is  \n      &#39; specified in method call.\n      dateString = &quot; 06/15/2008&quot;\n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider, _\n                                            DateTimeStyles.AllowTrailingWhite)\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End Try \n\n      &#39; Parse date and time value, and allow all white space.\n      dateString = &quot; 06/15/   2008  15:15    -05:00&quot;\n      format = &quot;MM/dd/yyyy H:mm zzz&quot;\n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider, _\n                                            DateTimeStyles.AllowWhiteSpaces)\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End Try \n      \n      &#39; Parse date and time and convert to UTC.\n      dateString = &quot;  06/15/2008 15:15:30 -05:00&quot;   \n      format = &quot;MM/dd/yyyy H:mm:ss zzz&quot;       \n      Try\n         result = DateTimeOffset.ParseExact(dateString, format, provider, _\n                                            DateTimeStyles.AllowWhiteSpaces Or _\n                                            DateTimeStyles.AdjustToUniversal)\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Catch e As FormatException\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End Try \n      &#39; The example displays the following output:\n      &#39;    &#39;06/15/2008&#39; converts to 6/15/2008 12:00:00 AM +00:00.\n      &#39;    &#39; 06/15/2008&#39; is not in the correct format.\n      &#39;    &#39; 06/15/   2008  15:15    -05:00&#39; converts to 6/15/2008 3:15:00 PM -05:00.\n      &#39;    &#39;  06/15/2008 15:15:30 -05:00&#39; converts to 6/15/2008 8:15:30 PM +00:00.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ParseExact#2\">      string dateString, format;  \n      DateTimeOffset result;\n      CultureInfo provider = CultureInfo.InvariantCulture;\n      \n      // Parse date-only value with invariant culture and assume time is UTC.\n      dateString = &quot;06/15/2008&quot;;\n      format = &quot;d&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider, \n                                            DateTimeStyles.AssumeUniversal);\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      } \n      \n      // Parse date-only value with leading white space.\n      // Should throw a FormatException because only trailing whitespace is  \n      // specified in method call.\n      dateString = &quot; 06/15/2008&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider, \n                                            DateTimeStyles.AllowTrailingWhite);\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      }   \n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      } \n\n      // Parse date and time value, and allow all white space.\n      dateString = &quot; 06/15/   2008  15:15    -05:00&quot;;\n      format = &quot;MM/dd/yyyy H:mm zzz&quot;;\n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider, \n                                            DateTimeStyles.AllowWhiteSpaces);\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      }   \n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      } \n      \n      // Parse date and time and convert to UTC.\n      dateString = &quot;  06/15/2008 15:15:30 -05:00&quot;;\n      format = &quot;MM/dd/yyyy H:mm:ss zzz&quot;; \n      try\n      {\n         result = DateTimeOffset.ParseExact(dateString, format, provider, \n                                            DateTimeStyles.AllowWhiteSpaces |\n                                            DateTimeStyles.AdjustToUniversal);\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      }\n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      } \n      // The example displays the following output:\n      //    &#39;06/15/2008&#39; converts to 6/15/2008 12:00:00 AM +00:00.\n      //    &#39; 06/15/2008&#39; is not in the correct format.\n      //    &#39; 06/15/   2008  15:15    -05:00&#39; converts to 6/15/2008 3:15:00 PM -05:00.\n      //    &#39;  06/15/2008 15:15:30 -05:00&#39; converts to 6/15/2008 8:15:30 PM +00:00.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ParseExact_System_String_System_String___System_IFormatProvider_System_Globalization_DateTimeStyles_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParseExact(String,String[],IFormatProvider,DateTimeStyles)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formats</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of format specifiers that define the expected formats of <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>styles</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equivalent to the date and time that is contained in the <code>input</code> parameter, as specified by the <code>formats</code>, <code>formatProvider</code>, and <code>styles</code> parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The offset is greater than 14 hours or less than -14 hours.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> includes an unsupported value.  </p>\n<p> -or-  </p>\n<p> The <code>styles</code> parameter contains <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values that cannot be used together.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>input</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>input</code> does not contain a valid string representation of a date and time.  </p>\n<p> -or-  </p>\n<p> No element of <code>formats</code> contains a valid format specifier.  </p>\n<p> -or-  </p>\n<p> The hour component and the AM/PM designator in <code>input</code> do not agree.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ParseExact method parses the string representation of a date that matches any one of the patterns assigned to the <code>formats</code> parameter. If the <code>input</code> string does not match any one of these patterns with any of the variations defined by the <code>styles</code> parameter, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>. Aside from comparing <code>input</code> to multiple formatting patterns, this overload behaves identically to the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)</a> method.  </p>\n<p> The <code>formats</code> parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of the <code>input</code> parameter. When the method is called, <code>input</code> must match one of these patterns. For details about valid formatting codes, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> and <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>. If the matched element in <code>formats</code> includes the <code>z</code>, <code>zz</code>, or <code>zzz</code> custom format specifiers to indicate that an offset must be present in <code>input</code>, that offset must include either a negative sign or a positive sign. If the sign is missing, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Using the <code>formats</code> parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  </p>\n</div>\n<p> If the matched element in <code>formats</code> requires that <code>input</code> contain a date but not a time, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned a time of midnight (0:00:00). If the matched element in <code>formats</code> requires that <code>input</code> contain a time but not a date, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned the current date on the local system. If the matched element in <code>formats</code> does not require that <code>input</code> contain an offset, the offset of the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object depends on the value of the <code>styles</code> parameter. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the offset of the local time zone is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If neither value is specified, the offset of the local time zone is used.  </p>\n<p> The particular date and time symbols and strings used in <code>input</code> are defined by the <code>formatProvider</code> parameter. The same is true for the precise format of <code>input</code>, if the matching element of <code>formats</code> is a standard format specifier string. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture based on which <code>input</code> is interpreted. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The <code>styles</code> parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration are supported except <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>. The following table lists the effect of each supported member.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><code>DateTimeStyles</code> member</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>input</code> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If the matched element in <code>formats</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the offset of the local time zone. This is the default value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If the matched element in <code>formats</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the UTC offset (+00:00).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include inner white space not specified by <code>format</code>. Extra white space can appear between date and time components and within individual components (except the offset), and is ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading spaces not specified by <code>formats</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include trailing spaces not specified by <code>formats</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading, trailing, and inner spaces not specified by <code>formats</code>. All extra white-space characters not specified in the matched element in <code>formats</code> are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that additional white space is not permitted in <code>input</code>. White space must appear exactly as specified in a particular element of <code>formats</code> for a match to occur. This is the default behavior.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Has no effect because the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure does not include a <code>Kind</code> property.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the ParseExact method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ParseExact#3\">      Dim conIn As TextReader = Console.In\n      Dim conOut As TextWriter = Console.Out\n      Dim tries As Integer = 0\n      Dim input As String = String.Empty\n      Dim formats() As String = {&quot;M/dd/yyyy HH:m zzz&quot;, &quot;MM/dd/yyyy HH:m zzz&quot;, _\n                                 &quot;M/d/yyyy HH:m zzz&quot;, &quot;MM/d/yyyy HH:m zzz&quot;, _\n                                 &quot;M/dd/yy HH:m zzz&quot;, &quot;MM/dd/yy HH:m zzz&quot;, _\n                                 &quot;M/d/yy HH:m zzz&quot;, &quot;MM/d/yy HH:m zzz&quot;, _                                 \n                                 &quot;M/dd/yyyy H:m zzz&quot;, &quot;MM/dd/yyyy H:m zzz&quot;, _\n                                 &quot;M/d/yyyy H:m zzz&quot;, &quot;MM/d/yyyy H:m zzz&quot;, _\n                                 &quot;M/dd/yy H:m zzz&quot;, &quot;MM/dd/yy H:m zzz&quot;, _\n                                 &quot;M/d/yy H:m zzz&quot;, &quot;MM/d/yy H:m zzz&quot;, _                               \n                                 &quot;M/dd/yyyy HH:mm zzz&quot;, &quot;MM/dd/yyyy HH:mm zzz&quot;, _\n                                 &quot;M/d/yyyy HH:mm zzz&quot;, &quot;MM/d/yyyy HH:mm zzz&quot;, _\n                                 &quot;M/dd/yy HH:mm zzz&quot;, &quot;MM/dd/yy HH:mm zzz&quot;, _\n                                 &quot;M/d/yy HH:mm zzz&quot;, &quot;MM/d/yy HH:mm zzz&quot;, _                                 \n                                 &quot;M/dd/yyyy H:mm zzz&quot;, &quot;MM/dd/yyyy H:mm zzz&quot;, _\n                                 &quot;M/d/yyyy H:mm zzz&quot;, &quot;MM/d/yyyy H:mm zzz&quot;, _\n                                 &quot;M/dd/yy H:mm zzz&quot;, &quot;MM/dd/yy H:mm zzz&quot;, _\n                                 &quot;M/d/yy H:mm zzz&quot;, &quot;MM/d/yy H:mm zzz&quot;}   \n      Dim provider As IFormatProvider = CultureInfo.InvariantCulture.DateTimeFormat\n      Dim result As DateTimeOffset\n     \n      Do \n         conOut.WriteLine(&quot;Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),&quot;)\n         conOut.Write(&quot;Then press Enter: &quot;)\n         input = conIn.ReadLine()\n         conOut.WriteLine() \n         Try\n            result = DateTimeOffset.ParseExact(input, formats, provider, _\n                                               DateTimeStyles.AllowWhiteSpaces)\n            Exit Do\n         Catch e As FormatException\n            Console.WriteLine(&quot;Unable to parse {0}.&quot;, input)      \n            tries += 1\n         End Try\n      Loop While tries &lt; 3\n      If tries &gt;= 3 Then\n         Console.WriteLine(&quot;Exiting application without parsing {0}&quot;, input)\n      Else\n         Console.WriteLine(&quot;{0} was converted to {1}&quot;, input, result.ToString())                                                     \n      End If \n      &#39; Some successful sample interactions with the user might appear as follows:\n      &#39;    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      &#39;    Then press Enter: 12/08/2007 6:54 -6:00\n      &#39;    \n      &#39;    12/08/2007 6:54 -6:00 was converted to 12/8/2007 6:54:00 AM -06:00         \n      &#39;    \n      &#39;    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      &#39;    Then press Enter: 12/8/2007 06:54 -06:00\n      &#39;    \n      &#39;    12/8/2007 06:54 -06:00 was converted to 12/8/2007 6:54:00 AM -06:00\n      &#39;    \n      &#39;    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      &#39;    Then press Enter: 12/5/07 6:54 -6:00\n      &#39;    \n      &#39;    12/5/07 6:54 -6:00 was converted to 12/5/2007 6:54:00 AM -06:00 \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ParseExact#3\">      TextReader conIn = Console.In;\n      TextWriter conOut = Console.Out;\n      int tries = 0;\n      string input = String.Empty;\n      string[] formats = new string[] {@&quot;@M/dd/yyyy HH:m zzz&quot;, @&quot;MM/dd/yyyy HH:m zzz&quot;, \n                                       @&quot;M/d/yyyy HH:m zzz&quot;, @&quot;MM/d/yyyy HH:m zzz&quot;, \n                                       @&quot;M/dd/yy HH:m zzz&quot;, @&quot;MM/dd/yy HH:m zzz&quot;, \n                                       @&quot;M/d/yy HH:m zzz&quot;, @&quot;MM/d/yy HH:m zzz&quot;,                             \n                                       @&quot;M/dd/yyyy H:m zzz&quot;, @&quot;MM/dd/yyyy H:m zzz&quot;, \n                                       @&quot;M/d/yyyy H:m zzz&quot;, @&quot;MM/d/yyyy H:m zzz&quot;, \n                                       @&quot;M/dd/yy H:m zzz&quot;, @&quot;MM/dd/yy H:m zzz&quot;, \n                                       @&quot;M/d/yy H:m zzz&quot;, @&quot;MM/d/yy H:m zzz&quot;,                               \n                                       @&quot;M/dd/yyyy HH:mm zzz&quot;, @&quot;MM/dd/yyyy HH:mm zzz&quot;, \n                                       @&quot;M/d/yyyy HH:mm zzz&quot;, @&quot;MM/d/yyyy HH:mm zzz&quot;, \n                                       @&quot;M/dd/yy HH:mm zzz&quot;, @&quot;MM/dd/yy HH:mm zzz&quot;, \n                                       @&quot;M/d/yy HH:mm zzz&quot;, @&quot;MM/d/yy HH:mm zzz&quot;,                                 \n                                       @&quot;M/dd/yyyy H:mm zzz&quot;, @&quot;MM/dd/yyyy H:mm zzz&quot;, \n                                       @&quot;M/d/yyyy H:mm zzz&quot;, @&quot;MM/d/yyyy H:mm zzz&quot;, \n                                       @&quot;M/dd/yy H:mm zzz&quot;, @&quot;MM/dd/yy H:mm zzz&quot;, \n                                       @&quot;M/d/yy H:mm zzz&quot;, @&quot;MM/d/yy H:mm zzz&quot;};\n      IFormatProvider provider = CultureInfo.InvariantCulture.DateTimeFormat;\n      DateTimeOffset result = new DateTimeOffset();\n     \n      do { \n         conOut.WriteLine(&quot;Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),&quot;);\n         conOut.Write(&quot;Then press Enter: &quot;);\n         input = conIn.ReadLine();\n         conOut.WriteLine();\n         try\n         {\n            result = DateTimeOffset.ParseExact(input, formats, provider, \n                                               DateTimeStyles.AllowWhiteSpaces);\n            break;\n         }\n         catch (FormatException)\n         {\n            Console.WriteLine(&quot;Unable to parse {0}.&quot;, input);      \n            tries++;\n         }\n      } while (tries &lt; 3);\n      if (tries &gt;= 3)\n         Console.WriteLine(&quot;Exiting application without parsing {0}&quot;, input);\n      else\n         Console.WriteLine(&quot;{0} was converted to {1}&quot;, input, result.ToString());                                                     \n      // Some successful sample interactions with the user might appear as follows:\n      //    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      //    Then press Enter: 12/08/2007 6:54 -6:00\n      //    \n      //    12/08/2007 6:54 -6:00 was converted to 12/8/2007 6:54:00 AM -06:00         \n      //    \n      //    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      //    Then press Enter: 12/8/2007 06:54 -06:00\n      //    \n      //    12/8/2007 06:54 -06:00 was converted to 12/8/2007 6:54:00 AM -06:00\n      //    \n      //    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      //    Then press Enter: 12/5/07 6:54 -6:00\n      //    \n      //    12/5/07 6:54 -6:00 was converted to 12/5/2007 6:54:00 AM -06:00 \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Subtract_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Subtract_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Subtract(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Subtracts a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value that represents a specific date and time from the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan Subtract (DateTimeOffset value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that represents the value to subtract.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>An object that specifies the interval between the two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method converts both <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects to Coordinated Universal Time (UTC) before calculating the time interval that separates them. This removes any effect that different offsets from UTC may have on the comparison.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For languages that support custom operators, you can also perform date and time subtraction by using the subtraction operator. For details, see the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_op_Subtraction_\" data-linktype=\"relative-path\">op_Subtraction</a> method.  </p>\n</div>\n<p> Because neither the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object nor the <code>value</code> parameter represent the date and time in a specific time zone, the Subtract method does not consider a particular time zone&#39;s adjustment rules when it subtracts dates and times.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates subtraction that uses the Subtract method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#13\">      Dim firstDate As New DateTimeOffset(#3/25/2008 6:00PM#, _\n                                          New TimeSpan(-7, 0, 0))\n      Dim secondDate As New DateTimeOffset(#3/25/2008 6:00PM#, _\n                                           New TimeSpan(-5, 0, 0))\n      Dim thirdDate As New DateTimeOffset(#2/28/2008 9:00AM#, _\n                                          New TimeSpan(-7, 0, 0))\n      Dim difference As TimeSpan\n      \n      difference = firstDate.Subtract(secondDate)\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, _\n                        firstDate.ToString(), _\n                        secondDate.ToString(), _\n                        difference.Days, _\n                        difference.Hours, _\n                        difference.Minutes)      \n      difference = firstDate.Subtract(thirdDate)\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, _\n                        firstDate.ToString(), _\n                        secondDate.ToString(), _\n                        difference.Days, _\n                        difference.Hours, _\n                        difference.Minutes) \n      &#39; The example produces the following output:\n      &#39;    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 0 days, 2:00\n      &#39;    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 26 days, 9:00                                 \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#13\">      DateTimeOffset firstDate = new DateTimeOffset(2008, 3, 25, 18, 0, 0, \n                                                    new TimeSpan(-7, 0, 0));\n      DateTimeOffset secondDate = new DateTimeOffset(2008, 3, 25, 18, 0, 0, \n                                                     new TimeSpan(-5, 0, 0));\n      DateTimeOffset thirdDate = new DateTimeOffset(2008, 2, 28, 9, 0, 0, \n                                                    new TimeSpan(-7, 0, 0));\n      TimeSpan difference;\n      \n      difference = firstDate.Subtract(secondDate);\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, \n                        firstDate.ToString(), \n                        secondDate.ToString(), \n                        difference.Days, \n                        difference.Hours, \n                        difference.Minutes);      \n      \n      difference = firstDate.Subtract(thirdDate);\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, \n                        firstDate.ToString(), \n                        secondDate.ToString(), \n                        difference.Days, \n                        difference.Hours, \n                        difference.Minutes); \n      // The example produces the following output:\n      //    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 0 days, 2:00\n      //    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 26 days, 9:00                                 \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_Subtract_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_Subtract_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Subtract(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Subtracts a specified time interval from the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset Subtract (TimeSpan value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time interval to subtract.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equal to the date and time represented by the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, minus the time interval represented by <code>value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Subtract method to subtract more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. Its behavior is identical to the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_op_Subtraction_System_DateTimeOffset_System_TimeSpan_\" data-linktype=\"relative-path\">op_Subtraction(DateTimeOffset,TimeSpan)</a> method, which defines the subtraction operator. The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure also supports specialized addition methods (such as <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_AddDays_\" data-linktype=\"relative-path\">AddDays</a>, <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_AddHours_\" data-linktype=\"relative-path\">AddHours</a>, and <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_AddMinutes_\" data-linktype=\"relative-path\">AddMinutes</a>) that allow you to perform subtraction by assigning a negative value to the method parameter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method returns a new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. It does not modify the value of the current object by adding <code>timeSpan</code> to its date and time.  </p>\n</div>\n<p> The Subtract method does not affect the value of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property. The returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object has the same offset as the original object.  </p>\n<p> Because the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object does not represent the date and time in a specific time zone, the Subtract method does not consider a particular time zone&#39;s adjustment rules when it performs the subtraction.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates subtraction that uses the Subtract method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#14\">      Dim offsetDate As New DateTimeOffset(#12/3/2007 11:30AM#, _\n                                     New TimeSpan(-8, 0, 0)) \n      Dim duration As New TimeSpan(7, 18, 0, 0)\n      Console.WriteLine(offsetDate.Subtract(duration))    &#39; Displays 11/25/2007 5:30:00 PM -08:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#14\">      DateTimeOffset offsetDate = new DateTimeOffset(2007, 12, 3, 11, 30, 0, \n                                     new TimeSpan(-8, 0, 0)); \n      TimeSpan duration = new TimeSpan(7, 18, 0, 0);\n      Console.WriteLine(offsetDate.Subtract(duration).ToString());  // Displays 11/25/2007 5:30:00 PM -08:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToFileTime\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToFileTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToFileTime()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a Windows file time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long ToFileTime ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, expressed as a Windows file time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting file time would represent a date and time before midnight on January 1, 1601 C.E. Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  </p>\n<p> The ToFileTime method converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s date and time to UTC before it performs the conversion. In other words, calling the ToFileTime method is equivalent to the following method call:  </p>\n<p> [C#]  </p>\n<pre><code>this.ToUtcDateTime().ToFileTime();  \n</code></pre><p> [Visual Basic]  </p>\n<pre><code>Me.ToUtcDateTime().ToFileTime()  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToLocalTime\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToLocalTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToLocalTime()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that represents the local time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset ToLocalTime ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object converted to local time.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In performing the conversion to local time, the method first converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object&#39;s date and time to Coordinated Universal Time (UTC) by subtracting the offset from the time. It then converts the UTC date and time to local time by adding the local time zone offset. In doing this, it takes account of any adjustment rules for the local time zone.  </p>\n<p> Both the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the value of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object returned by the method call represent the same point in time. That is, if both are passed to the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Equals_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"relative-path\">System.DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)</a> method, the method will return <code>true</code>.  </p>\n<p> If the conversion causes a time that is out of range of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> type, the ToLocalTime method returns a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that has the date and time set to either <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a> or <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a> and the offset set to the local time zone offset.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ToLocalTime method to convert a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to local time in the Pacific Standard Time zone. It also illustrates the method&#39;s support for the local time zone&#39;s adjustment rules.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#15\">      &#39; Local time changes on 3/11/2007 at 2:00 AM\n      Dim originalTime, localTime As DateTimeOffset\n      \n      originalTime = New DateTimeOffset(#03/11/2007 3:00AM#, _\n                                        New TimeSpan(-6, 0, 0))\n      localTime = originalTime.ToLocalTime()\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), _\n                                                 localTime.ToString())       \n\n      originalTime = New DateTimeOffset(#03/11/2007 4:00AM#, _\n                                        New TimeSpan(-6, 0, 0))\n      localTime = originalTime.ToLocalTime()\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), _\n                                                 localTime.ToString())       \n\n      &#39; Define a summer UTC time\n      originalTime = New DateTimeOffset(#6/15/2007 8:00AM#, _\n                                        TimeSpan.Zero)\n      localTime = originalTime.ToLocalTime()\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), _\n                                                 localTime.ToString())       \n\n      &#39; Define a winter time\n      originalTime = New DateTimeOffset(#11/30/2007 2:00PM#, _\n                                        New TimeSpan(3, 0, 0))\n      localTime = originalTime.ToLocalTime()\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), _\n                                                 localTime.ToString())   \n      &#39; The example produces the following output:\n      &#39;    Converted 3/11/2007 3:00:00 AM -06:00 to 3/11/2007 1:00:00 AM -08:00.\n      &#39;    Converted 3/11/2007 4:00:00 AM -06:00 to 3/11/2007 3:00:00 AM -07:00.\n      &#39;    Converted 6/15/2007 8:00:00 AM +00:00 to 6/15/2007 1:00:00 AM -07:00.\n      &#39;    Converted 11/30/2007 2:00:00 PM +03:00 to 11/30/2007 3:00:00 AM -08:00.                                                           \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#15\">      // Local time changes on 3/11/2007 at 2:00 AM\n      DateTimeOffset originalTime, localTime;\n      \n      originalTime = new DateTimeOffset(2007, 3, 11, 3, 0, 0, \n                                        new TimeSpan(-6, 0, 0));\n      localTime = originalTime.ToLocalTime();\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), \n                                                 localTime.ToString());   \n\n      originalTime = new DateTimeOffset(2007, 3, 11, 4, 0, 0, \n                                        new TimeSpan(-6, 0, 0));\n      localTime = originalTime.ToLocalTime();\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), \n                                                 localTime.ToString());    \n\n      // Define a summer UTC time\n      originalTime = new DateTimeOffset(2007, 6, 15, 8, 0, 0, \n                                        TimeSpan.Zero);\n      localTime = originalTime.ToLocalTime();\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(),\n                                                 localTime.ToString());    \n\n      // Define a winter time\n      originalTime = new DateTimeOffset(2007, 11, 30, 14, 0, 0, \n                                        new TimeSpan(3, 0, 0));\n      localTime = originalTime.ToLocalTime();\n      Console.WriteLine(&quot;Converted {0} to {1}.&quot;, originalTime.ToString(), \n                                                 localTime.ToString());\n      // The example produces the following output:\n      //    Converted 3/11/2007 3:00:00 AM -06:00 to 3/11/2007 1:00:00 AM -08:00.\n      //    Converted 3/11/2007 4:00:00 AM -06:00 to 3/11/2007 3:00:00 AM -07:00.\n      //    Converted 6/15/2007 8:00:00 AM +00:00 to 6/15/2007 1:00:00 AM -07:00.\n      //    Converted 11/30/2007 2:00:00 PM +03:00 to 11/30/2007 3:00:00 AM -08:00.                                                           \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToOffset_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToOffset(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to the date and time specified by an offset value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset ToOffset (TimeSpan offset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The offset to convert the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equal to the original <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object (that is, their <span class=\"xref\">stem.DateTimeOffset.ToUniversalTime*</span> methods return identical points in time) but whose <span class=\"xref\">stem.DateTimeOffset.Offset*</span> property is set to <code>offset</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object has a <span class=\"xref\">stem.DateTimeOffset.DateTime*</span> value earlier than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MinValue\" data-linktype=\"relative-path\">MinValue</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object has a <span class=\"xref\">stem.DateTimeOffset.DateTime*</span> value later than <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> is less than -14 hours.  </p>\n<p> -or-  </p>\n<p> <code>offset</code> is greater than 14 hours.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ToOffset method is an alternative to calling the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_System_DateTimeOffset_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTime(DateTimeOffset,TimeZoneInfo)</a> method. It can be useful for performing simple conversions from one time zone to another when the time zones&#39; offsets from Coordinated Universal Time (UTC) are known. However, because neither the original <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object nor the new <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object returned by the method call are unambiguously related to a particular time zone, the method does not apply any time zone adjustment rules in the conversion.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates how to use the ToOffset method to convert a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object with a different offset.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ToOffset#1\">Module DateTimeOffsetConversion\n   Private sourceTime As New DateTimeOffset(#9/1/2007 9:30AM#, _\n                                            New TimeSpan(-5, 0, 0))\n   \n   Public Sub Main()\n      Dim targetTime As DateTimeOffset\n      \n      &#39; Convert to same time (return sourceTime unchanged)\n      targetTime = sourceTime.ToOffset(New TimeSpan(-5, 0, 0))\n      ShowDateAndTimeInfo(targetTime)\n      \n      &#39; Convert to UTC (0 offset)\n      targetTime = sourceTime.ToOffset(TimeSpan.Zero)\n      ShowDateAndTimeInfo(targetTime)\n      \n      &#39; Convert to 8 hours behind UTC\n      targetTime = sourceTime.ToOffset(New TimeSpan(-8, 0, 0))\n      ShowDateAndTimeInfo(targetTime)\n      \n      &#39; Convert to 3 hours ahead of UTC\n      targetTime = sourceTime.ToOffset(New TimeSpan(3, 0, 0))\n      ShowDateAndTimeInfo(targetTime)\n   End Sub\n   \n   Private Sub ShowDateAndTimeInfo(newTime As DateTimeOffset)\n      Console.WriteLine(&quot;{0} converts to {1}&quot;, sourceTime, newTime)\n      Console.WriteLine(&quot;{0} and {1} are equal: {2}&quot;, _\n                        sourceTime, newTime, sourceTime.Equals(newTime))\n      Console.WriteLine(&quot;{0} and {1} are identical: {2}&quot;, _\n                        sourceTime, newTime, _\n                        sourceTime.EqualsExact(newTime)) \n      Console.WriteLine()\n   End Sub\nEnd Module\n&#39;\n&#39; The example displays the following output:\n&#39;    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 9:30:00 AM -05:00\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 9:30:00 AM -05:00 are equal: True\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 9:30:00 AM -05:00 are identical: True\n&#39;    \n&#39;    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 2:30:00 PM +00:00\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 2:30:00 PM +00:00 are equal: True\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 2:30:00 PM +00:00 are identical: False\n&#39;    \n&#39;    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 6:30:00 AM -08:00\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 6:30:00 AM -08:00 are equal: True\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 6:30:00 AM -08:00 are identical: False\n&#39;    \n&#39;    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 5:30:00 PM +03:00\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 5:30:00 PM +03:00 are equal: True\n&#39;    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 5:30:00 PM +03:00 are identical: False\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ToOffset#1\">using System;\n\npublic class DateTimeOffsetConversion\n{\n   private static DateTimeOffset sourceTime; \n   \n   public static void Main()\n   {\n      DateTimeOffset targetTime;\n      sourceTime = new DateTimeOffset(2007, 9, 1, 9, 30, 0, \n                                      new TimeSpan(-5, 0, 0));\n                                            \n      // Convert to same time (return sourceTime unchanged)\n      targetTime = sourceTime.ToOffset(new TimeSpan(-5, 0, 0));\n      ShowDateAndTimeInfo(targetTime);\n      \n      // Convert to UTC (0 offset)\n      targetTime = sourceTime.ToOffset(TimeSpan.Zero);\n      ShowDateAndTimeInfo(targetTime);\n      \n      // Convert to 8 hours behind UTC\n      targetTime = sourceTime.ToOffset(new TimeSpan(-8, 0, 0));\n      ShowDateAndTimeInfo(targetTime);\n      \n      // Convert to 3 hours ahead of UTC\n      targetTime = sourceTime.ToOffset(new TimeSpan(3, 0, 0));\n      ShowDateAndTimeInfo(targetTime);\n   }\n\n   private static void ShowDateAndTimeInfo(DateTimeOffset newTime)\n   {\n      Console.WriteLine(&quot;{0} converts to {1}&quot;, sourceTime, newTime);\n      Console.WriteLine(&quot;{0} and {1} are equal: {2}&quot;, \n                        sourceTime, newTime, sourceTime.Equals(newTime));\n      Console.WriteLine(&quot;{0} and {1} are identical: {2}&quot;, \n                        sourceTime, newTime, \n                        sourceTime.EqualsExact(newTime)); \n      Console.WriteLine();\n   }\n}\n//\n// The example displays the following output:\n//    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 9:30:00 AM -05:00\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 9:30:00 AM -05:00 are equal: True\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 9:30:00 AM -05:00 are identical: True\n//    \n//    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 2:30:00 PM +00:00\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 2:30:00 PM +00:00 are equal: True\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 2:30:00 PM +00:00 are identical: False\n//    \n//    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 6:30:00 AM -08:00\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 6:30:00 AM -08:00 are equal: True\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 6:30:00 AM -08:00 are identical: False\n//    \n//    9/1/2007 9:30:00 AM -05:00 converts to 9/1/2007 5:30:00 PM +03:00\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 5:30:00 PM +03:00 are equal: True\n//    9/1/2007 9:30:00 AM -05:00 and 9/1/2007 5:30:00 PM +03:00 are identical: False\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToString\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that includes the offset appended at the end of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The date and time is outside the range of dates supported by the calendar used by the current culture.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value of this method is identical to that of the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString\" data-linktype=\"relative-path\">System.DateTime.ToString()</a> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the <code>zzz</code> custom format string, with each element separated from the previous element by a space. For example, if <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString\" data-linktype=\"relative-path\">System.DateTime.ToString()</a> returns a value of 1/12/2008 6:15:50 PM, ToString returns a value of 1/12/2008 6:15:50 PM -08:00 for a time that is eight hours behind Coordinated Universal Time (UTC).  </p>\n<p> This method uses formatting information derived from the current culture. For more information, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>. Other overloads of the ToString method enable you to specify the culture whose formatting to use, and to define the output pattern of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates calls to the ToString method and displays its output on a system whose current culture is en-us.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ToString#1\">      DateTimeOffset thisDate;\n      \n      // Show output for UTC time\n      thisDate = DateTimeOffset.UtcNow;\n      Console.WriteLine(thisDate.ToString());  // Displays 3/28/2007 7:13:50 PM +00:00\n      \n      // Show output for local time \n      thisDate = DateTimeOffset.Now;\n      Console.WriteLine(thisDate.ToString());  // Displays 3/28/2007 12:13:50 PM -07:00\n      \n      // Show output for arbitrary time offset\n      thisDate = thisDate.ToOffset(new TimeSpan(-5, 0, 0));\n      Console.WriteLine(thisDate.ToString());  // Displays 3/28/2007 2:13:50 PM -05:00\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ToString#1\">      Dim thisDate As DateTimeOffset\n      \n      &#39; Show output for UTC time\n      thisDate = DateTimeOffset.UtcNow\n      Console.WriteLine(thisDate.ToString())  &#39; Displays 3/28/2007 7:13:50 PM +00:00\n      \n      &#39; Show output for local time \n      thisDate = DateTimeOffset.Now\n      Console.WriteLine(thisDate.ToString())  &#39; Displays 3/28/2007 12:13:50 PM -07:00\n      \n      &#39; Show output for arbitrary time offset\n      thisDate = thisDate.ToOffset(new TimeSpan(-5, 0, 0))\n      Console.WriteLine(thisDate.ToString())  &#39; Displays 3/28/2007 2:13:50 PM -05:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToString_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation using the specified culture-specific formatting information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (IFormatProvider formatProvider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, as specified by <code>formatProvider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value of this method is identical to that of its equivalent overload of the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method, except that it includes a space followed by the offset appended at the end of the string. In other words, it formats output using the short date pattern, the long time pattern, and the <code>zzz</code> custom format string, with each element separated from the previous element by a space.  </p>\n<p> The format of these three elements is defined by the <code>formatProvider</code> parameter. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting conventions are applied to the returned string. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting of the returned string.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatProvider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object associated with the current culture is used (see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>).</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object using <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> objects that represent the invariant culture, as well as four other cultures.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ToString#2\">      CultureInfo[] cultures = new CultureInfo[] {CultureInfo.InvariantCulture, \n                                                 new CultureInfo(&quot;en-us&quot;), \n                                                 new CultureInfo(&quot;fr-fr&quot;), \n                                                 new CultureInfo(&quot;de-DE&quot;), \n                                                 new CultureInfo(&quot;es-ES&quot;)};\n\n      DateTimeOffset thisDate = new DateTimeOffset(2007, 5, 1, 9, 0, 0, \n                                                   TimeSpan.Zero);                                            \n \n      foreach (CultureInfo culture in cultures)\n      {\n         string cultureName; \n         if (string.IsNullOrEmpty(culture.Name))\n            cultureName = culture.NativeName;\n         else\n            cultureName = culture.Name;\n\n         Console.WriteLine(&quot;In {0}, {1}&quot;, \n                           cultureName, thisDate.ToString(culture));\n      }                                            \n      // The example produces the following output:\n      //    In Invariant Language (Invariant Country), 05/01/2007 09:00:00 +00:00\n      //    In en-US, 5/1/2007 9:00:00 AM +00:00\n      //    In fr-FR, 01/05/2007 09:00:00 +00:00\n      //    In de-DE, 01.05.2007 09:00:00 +00:00\n      //    In es-ES, 01/05/2007 9:00:00 +00:00\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ToString#2\">      Dim cultures() As CultureInfo = {CultureInfo.InvariantCulture, _\n                                       New CultureInfo(&quot;en-us&quot;), _\n                                       New CultureInfo(&quot;fr-fr&quot;), _\n                                       New CultureInfo(&quot;de-DE&quot;), _\n                                       New CultureInfo(&quot;es-ES&quot;)}\n\n      Dim thisDate As New DateTimeOffset(#5/1/2007 9:00AM#, TimeSpan.Zero)                                            \n \n      For Each culture As CultureInfo In cultures\n         Dim cultureName As String \n         If String.IsNullOrEmpty(culture.Name) Then\n            cultureName = culture.NativeName\n         Else\n            cultureName = culture.Name\n         End If\n         Console.WriteLine(&quot;In {0}, {1}&quot;, _\n                           cultureName, thisDate.ToString(culture))\n      Next                                            \n      &#39; The example produces the following output:\n      &#39;    In Invariant Language (Invariant Country), 05/01/2007 09:00:00 +00:00\n      &#39;    In en-US, 5/1/2007 9:00:00 AM +00:00\n      &#39;    In fr-FR, 01/05/2007 09:00:00 +00:00\n      &#39;    In de-DE, 01.05.2007 09:00:00 +00:00\n      &#39;    In es-ES, 01/05/2007 9:00:00 +00:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToString_System_String_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation using the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, as specified by <code>format</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a>.  </p>\n<p> -or-  </p>\n<p> <code>format</code> does not contain a valid custom format pattern.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The date and time is outside the range of dates supported by the calendar used by the current culture.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>format</code> parameter should contain either a single format specifier character (see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>) or a custom format pattern (see <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>) that defines the format of the returned string. If <code>format</code> is a null or empty string (&quot;&quot;), the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is output using the default format.  </p>\n<p> The following table shows the exact operation of certain format specifiers when used with <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, which differs from their behavior when used with <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Existing format specifier</th>\n<th>New behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&quot;K&quot;</td>\n<td>Designed to round-trip a date and time. With <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, maps to &quot;zzz&quot; (the offset is always displayed with hours and minutes). Note that &quot;K&quot; is a custom format specifier; it cannot appear as the single character in <code>format</code>.</td>\n</tr>\n<tr>\n<td>&quot;U&quot;</td>\n<td>Not supported.</td>\n</tr>\n<tr>\n<td>&quot;r&quot;</td>\n<td>Converts the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to Coordinated Universal Time (UTC) and outputs it using the custom format string <code>ddd, dd MMM yyyy HH:mm:ss GMT</code>.</td>\n</tr>\n<tr>\n<td>&quot;u&quot;</td>\n<td>Converts the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to UTC and outputs it using the format <code>yyyy-MM-dd HH:mm:ssZ</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> The remaining standard date and time format specifiers behave the same with the ToString method as they do with the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method.  </p>\n<p> This method uses formatting information derived from the current culture. For more information, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to the console using each of the standard date and time format specifiers. The output is formatted by using the en-us culture.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ToString#3\">      DateTimeOffset outputDate = new DateTimeOffset(2007, 10, 31, 21, 0, 0, \n                                           new TimeSpan(-8, 0, 0));\n      string specifier; \n            \n      // Output date using each standard date/time format specifier\n      specifier = &quot;d&quot;;\n      // Displays   d: 10/31/2007\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n      \n      specifier = &quot;D&quot;;\n      // Displays   D: Wednesday, October 31, 2007\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;t&quot;;\n      // Displays   t: 9:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;T&quot;;\n      // Displays   T: 9:00:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;f&quot;;\n      // Displays   f: Wednesday, October 31, 2007 9:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;F&quot;;\n      // Displays   F: Wednesday, October 31, 2007 9:00:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;g&quot;;\n      // Displays   g: 10/31/2007 9:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;G&quot;;\n      // Displays   G: 10/31/2007 9:00:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;M&quot;;           // &#39;m&#39; is identical\n      // Displays   M: October 31\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n      \n      specifier = &quot;R&quot;;           // &#39;r&#39; is identical\n      // Displays   R: Thu, 01 Nov 2007 05:00:00 GMT\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n      \n      specifier = &quot;s&quot;;\n      // Displays   s: 2007-10-31T21:00:00\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      specifier = &quot;u&quot;;\n      // Displays   u: 2007-11-01 05:00:00Z\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n\n      // Specifier is not supported\n      specifier = &quot;U&quot;;\n      try\n      {\n         Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier));\n      }    \n      catch (FormatException)\n      {\n         Console.WriteLine(&quot;{0}: Not supported.&quot;, specifier);   \n      }\n\n      specifier = &quot;Y&quot;;         // &#39;y&#39; is identical\n      // Displays   Y: October, 2007\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)); \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ToString#3\">      Dim outputDate As New DateTimeOffset(#10/31/2007 9:00PM#, _\n                                           New TimeSpan(-8, 0, 0))\n      Dim specifier As String \n            \n      &#39; Output date using each standard date/time format specifier\n      specifier = &quot;d&quot;\n      &#39; Displays   d: 10/31/2007\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n      \n      specifier = &quot;D&quot;\n      &#39; Displays   D: Wednesday, October 31, 2007\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;t&quot;\n      &#39; Displays   t: 9:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;T&quot;\n      &#39; Displays   T: 9:00:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;f&quot;\n      &#39; Displays   f: Wednesday, October 31, 2007 9:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;F&quot;\n      &#39; Displays   F: Wednesday, October 31, 2007 9:00:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;g&quot;\n      &#39; Displays   g: 10/31/2007 9:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;G&quot;\n      &#39; Displays   G: 10/31/2007 9:00:00 PM\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;M&quot;           &#39; &#39;m&#39; is identical\n      &#39; Displays   M: October 31\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n      \n      specifier = &quot;R&quot;           &#39; &#39;r&#39; is identical\n      &#39; Displays   R: Thu, 01 Nov 2007 05:00:00 GMT\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n      \n      specifier = &quot;s&quot;\n      &#39; Displays   s: 2007-10-31T21:00:00\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      specifier = &quot;u&quot;\n      &#39; Displays   u: 2007-11-01 05:00:00Z\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n\n      &#39; Specifier is not supported\n      specifier = &quot;U&quot;\n      Try\n         Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n      Catch e As FormatException\n         Console.WriteLine(&quot;{0}: Not supported.&quot;, specifier)   \n      End Try\n\n      specifier = &quot;Y&quot;         &#39; &#39;y&#39; is identical\n      &#39; Displays   Y: October, 2007\n      Console.WriteLine(&quot;{0}: {1}&quot;, specifier, outputDate.ToString(specifier)) \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToString_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to its equivalent string representation using the specified format and culture-specific format information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (string format, IFormatProvider formatProvider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object, as specified by <code>format</code> and <code>provider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The length of <code>format</code> is one, and it is not one of the standard format specifier characters defined for <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a>.  </p>\n<p> -or-  </p>\n<p> <code>format</code> does not contain a valid custom format pattern.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The date and time is outside the range of dates supported by the calendar used by <code>formatProvider</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>format</code> parameter should contain either a single format specifier character (see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>) or a custom format pattern (see <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>). If <code>format</code> is a null or empty string (&quot;&quot;), the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is output using the default format.  </p>\n<p> The following table shows the exact operation of certain format specifiers when used with <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, which differs from their behavior when used with <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Existing format specifier</th>\n<th>New behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&quot;K&quot;</td>\n<td>Designed to round-trip a date and time. With <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, maps to &quot;zzz&quot; (the offset is always displayed with hours and minutes). Note that &quot;K&quot; is a custom format specifier; it cannot appear as the single character in <code>format</code>.</td>\n</tr>\n<tr>\n<td>&quot;U&quot;</td>\n<td>Not supported.</td>\n</tr>\n<tr>\n<td>&quot;r&quot;</td>\n<td>Converts the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to Coordinated Universal Time (UTC) and outputs it using the custom format string <code>ddd, dd MMM yyyy HH:mm:ss GMT</code>.</td>\n</tr>\n<tr>\n<td>&quot;u&quot;</td>\n<td>Converts the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to UTC and outputs it using the format <code>yyyy-MM-dd HH:mm:ssZ</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> The remaining standard date and time format specifiers behave the same with the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method as they do with the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method.  </p>\n<p> The pattern that corresponds to standard format specifiers, as well as the symbols and names of date and time components, is defined by the <code>formatProvider</code> parameter. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting is used in <code>input</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting used in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatProvider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object associated with the current culture is used (see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>).</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ToString method to display a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object using a custom format string for several different cultures.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ToString#4\">      DateTimeOffset outputDate = new DateTimeOffset(2007, 11, 1, 9, 0, 0, \n                                           new TimeSpan(-7, 0, 0)); \n      string format = &quot;dddd, MMM dd yyyy HH:mm:ss zzz&quot;;\n      \n      // Output date and time using custom format specification\n      Console.WriteLine(outputDate.ToString(format, null as DateTimeFormatInfo));\n      Console.WriteLine(outputDate.ToString(format, CultureInfo.InvariantCulture));\n      Console.WriteLine(outputDate.ToString(format, \n                                            new CultureInfo(&quot;fr-FR&quot;)));\n      Console.WriteLine(outputDate.ToString(format, \n                                            new CultureInfo(&quot;es-ES&quot;)));\n      // The example displays the following output to the console:\n      //    Thursday, Nov 01 2007 09:00:00 -07:00\n      //    Thursday, Nov 01 2007 09:00:00 -07:00\n      //    jeudi, nov. 01 2007 09:00:00 -07:00\n      //    jueves, nov 01 2007 09:00:00 -07:00\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ToString#4\">      Dim outputDate As New DateTimeOffset(#11/1/2007 9:00AM#, _\n                                           New TimeSpan(-7, 0, 0)) \n      Dim format As String = &quot;dddd, MMM dd yyyy HH:mm:ss zzz&quot;\n      \n      &#39; Output date and time using custom format specification\n      Console.WriteLine(outputDate.ToString(format, Nothing))\n      Console.WriteLine(outputDate.ToString(format, CultureInfo.InvariantCulture))\n      Console.WriteLine(outputDate.ToString(format, _\n                                            New CultureInfo(&quot;fr-FR&quot;)))\n      Console.WriteLine(outputDate.ToString(format, _\n                                            New CultureInfo(&quot;es-ES&quot;)))\n      &#39; The example displays the following output to the console:\n      &#39;    Thursday, Nov 01 2007 09:00:00 -07:00\n      &#39;    Thursday, Nov 01 2007 09:00:00 -07:00\n      &#39;    jeudi, nov. 01 2007 09:00:00 -07:00\n      &#39;    jueves, nov 01 2007 09:00:00 -07:00\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToUniversalTime\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToUniversalTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUniversalTime()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value that represents the Coordinated Universal Time (UTC).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTimeOffset ToUniversalTime ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that represents the date and time of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object converted to Coordinated Universal Time (UTC).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object whose <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Offset_\" data-linktype=\"relative-path\">Offset</a> property is set to zero.  </p>\n<p> Both the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object and the value of the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object returned by the method call represent the same point in time. That is, if both are passed to the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Equals_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"relative-path\">System.DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)</a> method, the method will return <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the ToUniversalTime method to convert a local time and several other times to Coordinated Universal Time (UTC).  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Methods#16\">      Dim localTime, otherTime, universalTime As DateTimeOffset\n       \n      &#39; Define local time in local time zone\n      localTime = New DateTimeOffset(#6/15/2007 12:00:00PM#)\n      Console.WriteLine(&quot;Local time: {0}&quot;, localTime)\n      Console.WriteLine()\n      \n      &#39; Convert local time to offset 0 and assign to otherTime\n      otherTime = localTime.ToOffset(TimeSpan.Zero)\n      Console.WriteLine(&quot;Other time: {0}&quot;, otherTime)\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        localTime, otherTime, _\n                        localTime.Equals(otherTime))\n      Console.WriteLine(&quot;{0} exactly equals {1}: {2}&quot;, _ \n                        localTime, otherTime, _\n                        localTime.EqualsExact(otherTime))\n      Console.WriteLine()\n                        \n      &#39; Convert other time to UTC\n      universalTime = localTime.ToUniversalTime() \n      Console.WriteLine(&quot;Universal time: {0}&quot;, universalTime)\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        otherTime, universalTime, _ \n                        universalTime.Equals(otherTime))\n      Console.WriteLine(&quot;{0} exactly equals {1}: {2}&quot;, _ \n                        otherTime, universalTime, _\n                        universalTime.EqualsExact(otherTime))\n      Console.WriteLine()\n      &#39; The example produces the following output to the console:\n      &#39;    Local time: 6/15/2007 12:00:00 PM -07:00\n      &#39;    \n      &#39;    Other time: 6/15/2007 7:00:00 PM +00:00\n      &#39;    6/15/2007 12:00:00 PM -07:00 = 6/15/2007 7:00:00 PM +00:00: True\n      &#39;    6/15/2007 12:00:00 PM -07:00 exactly equals 6/15/2007 7:00:00 PM +00:00: False\n      &#39;    \n      &#39;    Universal time: 6/15/2007 7:00:00 PM +00:00\n      &#39;    6/15/2007 7:00:00 PM +00:00 = 6/15/2007 7:00:00 PM +00:00: True\n      &#39;    6/15/2007 7:00:00 PM +00:00 exactly equals 6/15/2007 7:00:00 PM +00:00: True   \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Methods#16\">      DateTimeOffset localTime, otherTime, universalTime;\n       \n      // Define local time in local time zone\n      localTime = new DateTimeOffset(new DateTime(2007, 6, 15, 12, 0, 0));\n      Console.WriteLine(&quot;Local time: {0}&quot;, localTime);\n      Console.WriteLine();\n      \n      // Convert local time to offset 0 and assign to otherTime\n      otherTime = localTime.ToOffset(TimeSpan.Zero);\n      Console.WriteLine(&quot;Other time: {0}&quot;, otherTime);\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        localTime, otherTime, \n                        localTime.Equals(otherTime));\n      Console.WriteLine(&quot;{0} exactly equals {1}: {2}&quot;, \n                        localTime, otherTime, \n                        localTime.EqualsExact(otherTime));\n      Console.WriteLine();\n                        \n      // Convert other time to UTC\n      universalTime = localTime.ToUniversalTime(); \n      Console.WriteLine(&quot;Universal time: {0}&quot;, universalTime);\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        otherTime, universalTime, \n                        universalTime.Equals(otherTime));\n      Console.WriteLine(&quot;{0} exactly equals {1}: {2}&quot;, \n                        otherTime, universalTime, \n                        universalTime.EqualsExact(otherTime));\n      Console.WriteLine();\n      // The example produces the following output to the console:\n      //    Local time: 6/15/2007 12:00:00 PM -07:00\n      //    \n      //    Other time: 6/15/2007 7:00:00 PM +00:00\n      //    6/15/2007 12:00:00 PM -07:00 = 6/15/2007 7:00:00 PM +00:00: True\n      //    6/15/2007 12:00:00 PM -07:00 exactly equals 6/15/2007 7:00:00 PM +00:00: False\n      //    \n      //    Universal time: 6/15/2007 7:00:00 PM +00:00\n      //    6/15/2007 7:00:00 PM +00:00 = 6/15/2007 7:00:00 PM +00:00: True\n      //    6/15/2007 7:00:00 PM +00:00 exactly equals 6/15/2007 7:00:00 PM +00:00: True   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToUnixTimeMilliseconds\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToUnixTimeMilliseconds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUnixTimeMilliseconds()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long ToUnixTimeMilliseconds ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number of milliseconds that have elapsed since 1970-01-01T00:00:00.000Z.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account. This method returns the number of milliseconds in Unix time.  </p>\n<p> This method first converts the current instance to UTC before returning the number of milliseconds in its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_ToUnixTimeSeconds\">\r\n    \r\n            <a id=\"System_DateTimeOffset_ToUnixTimeSeconds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUnixTimeSeconds()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the number of seconds that have elapsed since 1970-01-01T00:00:00Z.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long ToUnixTimeSeconds ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The number of seconds that have elapsed since 1970-01-01T00:00:00Z.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unix time represents the number of seconds that have elapsed since 1970-01-01T00:00:00Z (January 1, 1970, at 12:00 AM UTC). It does not take leap seconds into account.  </p>\n<p> This method first converts the current instance to UTC before returning its Unix time. For date and time values before 1970-01-01T00:00:00Z, this method returns a negative value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the ToUnixTimeSeconds method to return the Unix time of values that are equal to, shortly before, and shortly after 1970-01-01T00:00:00Z.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.ToUnixTimeSeconds#1\">Module Example\n   Public Sub Main()\n      Dim dto As DateTimeOffset = New DateTimeOffset(1970, 1, 1, 0, 0, 0, TimeSpan.Zero)\n      Console.WriteLine(&quot;{0} --&gt; Unix Seconds: {1}&quot;, dto, dto.ToUnixTimeSeconds())\n\n      dto = New DateTimeOffset(1969, 12, 31, 23, 59, 0, TimeSpan.Zero)\n      Console.WriteLine(&quot;{0} --&gt; Unix Seconds: {1}&quot;, dto, dto.ToUnixTimeSeconds())\n\n      dto = New DateTimeOffset(1970, 1, 1, 0, 1, 0, TimeSpan.Zero)\n      Console.WriteLine(&quot;{0} --&gt; Unix Seconds: {1}&quot;, dto, dto.ToUnixTimeSeconds())\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       1/1/1970 12:00:00 AM +00:00 --&gt; Unix Seconds: 0\n&#39;       12/31/1969 11:59:00 PM +00:00 --&gt; Unix Seconds: -60\n&#39;       1/1/1970 12:01:00 AM +00:00 --&gt; Unix Seconds: 60\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.ToUnixTimeSeconds#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      DateTimeOffset dto = new DateTimeOffset(1970, 1, 1, 0, 0, 0, TimeSpan.Zero);\n      Console.WriteLine(&quot;{0} --&gt; Unix Seconds: {1}&quot;, dto, dto.ToUnixTimeSeconds());\n\n      dto = new DateTimeOffset(1969, 12, 31, 23, 59, 0, TimeSpan.Zero);\n      Console.WriteLine(&quot;{0} --&gt; Unix Seconds: {1}&quot;, dto, dto.ToUnixTimeSeconds());\n\n      dto = new DateTimeOffset(1970, 1, 1, 0, 1, 0, TimeSpan.Zero);\n      Console.WriteLine(&quot;{0} --&gt; Unix Seconds: {1}&quot;, dto, dto.ToUnixTimeSeconds());\n   }\n}\n// The example displays the following output:\n//    1/1/1970 12:00:00 AM +00:00 --&gt; Unix Seconds: 0\n//    12/31/1969 11:59:00 PM +00:00 --&gt; Unix Seconds: -60\n//    1/1/1970 12:01:00 AM +00:00 --&gt; Unix Seconds: 60\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_TryParse_System_String_System_DateTimeOffset__\">\r\n    \r\n            <a id=\"System_DateTimeOffset_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Tries to converts a specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string input, out DateTimeOffset result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When the method returns, contains the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, if the conversion failed. The conversion fails if the <code>input</code> parameter is <code>null</code> or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>input</code> parameter is successfully converted; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the TryParse method is like the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_System_String_\" data-linktype=\"relative-path\">System.DateTimeOffset.Parse(String)</a> method, except that it does not throw an exception if the conversion fails. It parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;Date&gt;</td>\n<td>&quot;2/10/2007&quot;</td>\n</tr>\n<tr>\n<td>&lt;Time&gt;</td>\n<td>&quot;1:02:03 PM&quot;</td>\n</tr>\n<tr>\n<td>&lt;Offset&gt;</td>\n<td>&quot;-7:30&quot;</td>\n</tr>\n</tbody>\n</table>\n<p> Although each of these elements is optional, &lt;Offset&gt; cannot appear by itself. It must be provided together with either &lt;Date&gt; or &lt;Time&gt;. If &lt;Date&gt; is missing, its default value is the current day. If &lt;Date&gt; is present but its year component consists of only two digits, it is converted to a year in the current culture&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. If &lt;Time&gt; is missing, its default value is 12:00:00 AM. If &lt;Offset&gt; is missing, its default value is the offset of the local time zone. If &lt;Offset&gt; is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, &lt;Offset&gt; must include a sign symbol or the method returns <code>false</code>.  </p>\n<p> The <code>input</code> string is parsed by using the formatting information in a <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object initialized for the current culture. To parse a string that contains designated formatting that does not necessarily correspond to that of the current culture, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> method and provide a format specifier.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the TryParse method to parse several strings with various date and time formats.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.TryParse#1\">      Dim parsedDate As DateTimeOffset\n      Dim dateString As String\n      \n      &#39; String with date only\n      dateString = &quot;05/01/2008&quot;\n      If DateTimeOffset.TryParse(dateString, parsedDate) Then _\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, _\n                           dateString, parsedDate)\n\n      &#39; String with time only\n      dateString = &quot;11:36 PM&quot;\n      If DateTimeOffset.TryParse(dateString, parsedDate) Then _\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, _\n                           dateString, parsedDate)\n\n      &#39; String with date and offset \n      dateString = &quot;05/01/2008 +7:00&quot;\n      If DateTimeOffset.TryParse(dateString, parsedDate) Then _\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, _\n                           dateString, parsedDate)\n\n      &#39; String with day abbreviation\n      dateString = &quot;Thu May 01, 2008&quot;\n      If DateTimeOffset.TryParse(dateString, parsedDate) Then _\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, _\n                           dateString, parsedDate)\n\n      &#39; String with date, time with AM/PM designator, and offset\n      dateString = &quot;5/1/2008 10:00 AM -07:00&quot;\n      If DateTimeOffset.TryParse(dateString, parsedDate) Then _\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, _\n                           dateString, parsedDate)\n      &#39; If run on 3/29/07, the example displays the following output\n      &#39; to the console:\n      &#39;    05/01/2008 was converted to to 5/1/2008 12:00:00 AM -07:00.\n      &#39;    11:36 PM was converted to to 3/29/2007 11:36:00 PM -07:00.\n      &#39;    05/01/2008 +7:00 was converted to to 5/1/2008 12:00:00 AM +07:00.\n      &#39;    Thu May 01, 2008 was converted to to 5/1/2008 12:00:00 AM -07:00.\n      &#39;    5/1/2008 10:00 AM -07:00 was converted to to 5/1/2008 10:00:00 AM -07:00.                                 \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.TryParse#1\">      DateTimeOffset parsedDate;\n      string dateString;\n      \n      // String with date only\n      dateString = &quot;05/01/2008&quot;;\n      if (DateTimeOffset.TryParse(dateString, out parsedDate))\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, \n                           dateString, parsedDate);\n\n      // String with time only\n      dateString = &quot;11:36 PM&quot;;\n      if (DateTimeOffset.TryParse(dateString, out parsedDate))\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, \n                           dateString, parsedDate);\n\n      // String with date and offset \n      dateString = &quot;05/01/2008 +7:00&quot;;\n      if (DateTimeOffset.TryParse(dateString, out parsedDate))\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, \n                           dateString, parsedDate);\n\n      // String with day abbreviation\n      dateString = &quot;Thu May 01, 2008&quot;;\n      if (DateTimeOffset.TryParse(dateString, out parsedDate))\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, \n                           dateString, parsedDate);\n\n      // String with date, time with AM/PM designator, and offset\n      dateString = &quot;5/1/2008 10:00 AM -07:00&quot;;\n      if (DateTimeOffset.TryParse(dateString, out parsedDate))\n         Console.WriteLine(&quot;{0} was converted to to {1}.&quot;, \n                           dateString, parsedDate);\n      // if (run on 3/29/07, the example displays the following output\n      // to the console:\n      //    05/01/2008 was converted to to 5/1/2008 12:00:00 AM -07:00.\n      //    11:36 PM was converted to to 3/29/2007 11:36:00 PM -07:00.\n      //    05/01/2008 +7:00 was converted to to 5/1/2008 12:00:00 AM +07:00.\n      //    Thu May 01, 2008 was converted to to 5/1/2008 12:00:00 AM -07:00.\n      //    5/1/2008 10:00 AM -07:00 was converted to to 5/1/2008 10:00:00 AM -07:00.                                 \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_TryParse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTimeOffset__\">\r\n    \r\n            <a id=\"System_DateTimeOffset_TryParse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Tries to convert a specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent, and returns a value that indicates whether the conversion succeeded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that provides culture-specific formatting information about <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>styles</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When the method returns, contains the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, if the conversion failed. The conversion fails if the <code>input</code> parameter is <code>null</code> or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>input</code> parameter is successfully converted; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>styles</code> includes an undefined <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> is not supported.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> includes mutually exclusive <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the TryParse method is like the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)</a> method, except that it does not throw an exception if the conversion fails. The method parses a string with three elements that can appear in any order and are delimited by white space. These three elements are shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Element</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;Date&gt;</td>\n<td>&quot;2/10/2007&quot;</td>\n</tr>\n<tr>\n<td>&lt;Time&gt;</td>\n<td>&quot;1:02:03 PM&quot;</td>\n</tr>\n<tr>\n<td>&lt;Offset&gt;</td>\n<td>&quot;-7:30&quot;</td>\n</tr>\n</tbody>\n</table>\n<p> Although each of these elements is optional, &lt;Offset&gt; cannot appear by itself. It must be provided together with either &lt;Date&gt; or &lt;Time&gt;. If &lt;Date&gt; is missing, its default value is the current day. If &lt;Date&gt; is present but its year component consists of only two digits, it is converted to a year in the <code>provider</code> parameter&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. If &lt;Time&gt; is missing, its default value is 12:00:00 AM. If &lt;Offset&gt; is missing, its default value is the offset of the local time zone, or <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">Zero</a> if either the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> or <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> value is specified in <code>styles</code>. If &lt;Offset&gt; is present, it can represent either a negative or a positive offset from Coordinated Universal Time (UTC). In either case, &lt;Offset&gt; must include a sign symbol or the method returns <code>false</code>.  </p>\n<p> The <code>input</code> string is parsed by using the culture-specific formatting information in a <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object supplied by the <code>formatProvider</code> parameter. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting is used in <code>input</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the format that is used in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>In addition, each element can be delimited by leading or trailing white space, and the &lt;Date&gt; and &lt;Time&gt; components can include inner white space (such as 6:   00:00). Only the &lt;Offset&gt; component cannot include inner white space.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The positive or negative sign used in &lt;Offset&gt; must be either + or -. It is not defined by the <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_PositiveSign_\" data-linktype=\"relative-path\">PositiveSign</a> or <a class=\"xref\" href=\"system.globalization.numberformatinfo#System_Globalization_NumberFormatInfo_NegativeSign_\" data-linktype=\"relative-path\">NegativeSign</a> properties of the <a class=\"xref\" href=\"system.globalization.numberformatinfo\" data-linktype=\"relative-path\">NumberFormatInfo</a> object returned by the <code>formatprovider</code> parameter&#39;s <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_NumberFormat_\" data-linktype=\"relative-path\">NumberFormat</a> property.  </p>\n<p>The following members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration are supported:  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles Member</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses the string represented by <code>input</code> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the returned object&#39;s <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime\" data-linktype=\"relative-path\">ToUniversalTime()</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Inner white space is allowed in the &lt;Date&gt; and &lt;Time&gt; components.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Leading white space is allowed in front of each component in the parsed string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Trailing white space is allowed in front of each component in the parsed string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>This is the default behavior. It cannot be overridden by supplying a more restrictive <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration value, such as <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that, if the <code>input</code> parameter lacks an &lt;Offset&gt; element, the offset of the local time zone should be provided. This is the default behavior of the TryParse method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that, if the <code>input</code> parameter lacks an &lt;Offset&gt; element, the UTC offset (00:00) should be provided.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored and has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Because the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure does not include a <code>Kind</code> property, this value has no effect.</td>\n</tr>\n</tbody>\n</table>\n<p> Only the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> value is not supported. An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown if this value is included in the <code>styles</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the TryParse method with a variety of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values to parse some strings with various date and time formats.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.TryParse#2\">      Dim dateString As String\n      Dim parsedDate As DateTimeOffset\n\n      dateString = &quot;05/01/2008 6:00:00&quot;\n      &#39; Assume time is local \n      If DateTimeOffset.TryParse(dateString, Nothing, _\n                                 DateTimeStyles.AssumeLocal, _\n                                 parsedDate) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; was converted to to {1}.&quot;, _\n                           dateString, parsedDate.ToString())\n      Else\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, dateString)    \n      End If\n      \n      &#39; Assume time is UTC\n      If DateTimeOffset.TryParse(dateString, Nothing, _\n                                 DateTimeStyles.AssumeUniversal, _\n                                 parsedDate) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; was converted to to {1}.&quot;, _\n                           dateString, parsedDate.ToString())\n      Else\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, dateString)    \n      End If\n\n      &#39; Parse and convert to UTC \n      dateString = &quot;05/01/2008 6:00:00AM +5:00&quot;\n      If DateTimeOffset.TryParse(dateString, Nothing, _\n                                 DateTimeStyles.AdjustToUniversal, _\n                                 parsedDate) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; was converted to to {1}.&quot;, _\n                           dateString, parsedDate.ToString())\n      Else\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, dateString)    \n      End If\n      &#39; The example displays the following output to the console:\n      &#39;    &#39;05/01/2008 6:00:00&#39; was converted to to 5/1/2008 6:00:00 AM -07:00.\n      &#39;    &#39;05/01/2008 6:00:00&#39; was converted to to 5/1/2008 6:00:00 AM +00:00.\n      &#39;    &#39;05/01/2008 6:00:00AM +5:00&#39; was converted to to 5/1/2008 1:00:00 AM +00:00.      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.TryParse#2\">      string dateString;\n      DateTimeOffset parsedDate;\n\n      dateString = &quot;05/01/2008 6:00:00&quot;;\n      // Assume time is local \n      if (DateTimeOffset.TryParse(dateString, null as IFormatProvider, \n                                  DateTimeStyles.AssumeLocal, \n                                  out parsedDate))\n         Console.WriteLine(&quot;&#39;{0}&#39; was converted to to {1}.&quot;, \n                           dateString, parsedDate.ToString());\n      else\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, dateString);    \n      \n      // Assume time is UTC\n      if (DateTimeOffset.TryParse(dateString, null as IFormatProvider, \n                                  DateTimeStyles.AssumeUniversal, \n                                  out parsedDate))\n         Console.WriteLine(&quot;&#39;{0}&#39; was converted to to {1}.&quot;, \n                           dateString, parsedDate.ToString());\n      else\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, dateString);    \n\n      // Parse and convert to UTC \n      dateString = &quot;05/01/2008 6:00:00AM +5:00&quot;;\n      if (DateTimeOffset.TryParse(dateString, null as IFormatProvider, \n                                 DateTimeStyles.AdjustToUniversal, \n                                 out parsedDate))\n         Console.WriteLine(&quot;&#39;{0}&#39; was converted to to {1}.&quot;, \n                           dateString, parsedDate.ToString());\n      else\n         Console.WriteLine(&quot;Unable to parse &#39;{0}&#39;.&quot;, dateString);    \n      // The example displays the following output to the console:\n      //    &#39;05/01/2008 6:00:00&#39; was converted to to 5/1/2008 6:00:00 AM -07:00.\n      //    &#39;05/01/2008 6:00:00&#39; was converted to to 5/1/2008 6:00:00 AM +00:00.\n      //    &#39;05/01/2008 6:00:00AM +5:00&#39; was converted to to 5/1/2008 1:00:00 AM +00:00.      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_TryParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTimeOffset__\">\r\n    \r\n            <a id=\"System_DateTimeOffset_TryParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A format specifier that defines the required format of <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>styles</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is <code>None</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When the method returns, contains the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, if the conversion failed. The conversion fails if the <code>input</code> parameter is <code>null</code>, or does not contain a valid string representation of a date and time in the expected format defined by <code>format</code> and <code>provider</code>. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>input</code> parameter is successfully converted; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>styles</code> includes an undefined <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> is not supported.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> includes mutually exclusive <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of the TryParseExact method is like the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)</a> method, except that this method does not throw an exception if the conversion fails. It parses the string representation of a date and time that must exactly match the pattern specified by the <code>format</code> parameter. If the <code>input</code> string does not match this pattern, with some possible variations in white space defined by the <code>styles</code> parameter, the parsing operation fails and the method returns <code>false</code>.  </p>\n<p> The <code>format</code> parameter is a string that contains either a single standard format specifier or one or more custom format specifiers that define the required pattern of <code>input</code>. For details about valid formatting codes, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> and <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>. If <code>format</code> includes the <code>z</code>, <code>zz</code>, or <code>zzz</code> custom format specifiers to indicate that an offset must be present in <code>input</code>, that offset must include either a negative sign or a positive sign. If the sign is missing, the parsing operation fails and the method returns <code>false</code>.  </p>\n<p> If <code>format</code> requires that <code>input</code> contain a date but not a time, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned a time of midnight (0:00:00). If <code>format</code> requires that <code>input</code> contain a time but not a date, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned the current date on the local system. If <code>format</code> does not require that <code>input</code> contain an offset, the offset of the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object depends on the value of the <code>styles</code> parameter. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the offset of the local time zone is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If neither value is specified, the offset of the local time zone is used.  </p>\n<p> The particular date and time symbols and strings used in <code>input</code> are defined by the <code>formatProvider</code> parameter. The same is true for the precise pattern of <code>input</code> if <code>format</code> is a standard format specifier string. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture based on which <code>input</code> is interpreted. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and standard formats allowed in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The <code>styles</code> parameter defines whether white space is allowed in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration are supported except <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>. The following table lists the effect of each supported member.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><code>DateTimeStyles</code> member</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>input</code> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>format</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the offset of the local time zone. This is the default behavior.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>format</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the UTC offset (+00:00).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include inner white space not specified by format. Extra white space can appear between date and time components and within individual components, other than the offset, and is ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading spaces not specified by <code>format</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include trailing spaces not specified by <code>format</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading, trailing, and inner spaces not specified by <code>format</code>. All extra white-space characters not specified in <code>format</code> are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that additional white space is not permitted in <code>input</code>. White space must appear exactly as specified in <code>format</code>. This is the default behavior.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Has no effect, because the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure does not include a <code>Kind</code> property.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the TryParseExact method with standard and custom format specifiers, the invariant culture, and various <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values to parse several date and time strings.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.TryParseExact#1\">      Dim dateString, format As String  \n      Dim result As DateTimeOffset\n      Dim provider As CultureInfo = CultureInfo.InvariantCulture\n      \n      &#39; Parse date-only value with invariant culture and assume time is UTC.\n      dateString = &quot;06/15/2008&quot;\n      format = &quot;d&quot;\n      If DateTimeOffset.TryParseExact(dateString, format, provider, _\n                                         DateTimeStyles.AssumeUniversal, _\n                                         result) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End If \n      \n      &#39; Parse date-only value with leading white space.\n      &#39; Should return False because only trailing whitespace is  \n      &#39; specified in method call.\n      dateString = &quot; 06/15/2008&quot;\n      If DateTimeOffset.TryParseExact(dateString, format, provider, _\n                                      DateTimeStyles.AllowTrailingWhite, _\n                                      result) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End If \n\n      &#39; Parse date and time value, and allow all white space.\n      dateString = &quot; 06/15/   2008  15:15    -05:00&quot;\n      format = &quot;MM/dd/yyyy H:mm zzz&quot;\n      If DateTimeOffset.TryParseExact(dateString, format, provider, _\n                                      DateTimeStyles.AllowWhiteSpaces, _\n                                      result) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End If \n      \n      &#39; Parse date and time and convert to UTC.\n      dateString = &quot;  06/15/2008 15:15:30 -05:00&quot;   \n      format = &quot;MM/dd/yyyy H:mm:ss zzz&quot;       \n      If DateTimeOffset.TryParseExact(dateString, format, provider, _\n                                      DateTimeStyles.AllowWhiteSpaces Or _\n                                      DateTimeStyles.AdjustToUniversal, _\n                                      result) Then\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString())\n      Else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString)\n      End If \n      &#39; The example displays the following output:\n      &#39;    &#39;06/15/2008&#39; converts to 6/15/2008 12:00:00 AM +00:00.\n      &#39;    &#39; 06/15/2008&#39; is not in the correct format.\n      &#39;    &#39; 06/15/   2008  15:15    -05:00&#39; converts to 6/15/2008 3:15:00 PM -05:00.\n      &#39;    &#39;  06/15/2008 15:15:30 -05:00&#39; converts to 6/15/2008 8:15:30 PM +00:00.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.TryParseExact#1\">      string dateString, format;  \n      DateTimeOffset result;\n      IFormatProvider provider = CultureInfo.InvariantCulture;\n      \n      // Parse date-only value with invariant culture and assume time is UTC.\n      dateString = &quot;06/15/2008&quot;;\n      format = &quot;d&quot;;\n      if (DateTimeOffset.TryParseExact(dateString, format, provider, \n                                       DateTimeStyles.AssumeUniversal, \n                                       out result))\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      \n      // Parse date-only value with leading white space.\n      // Should return False because only trailing whitespace is  \n      // specified in method call.\n      dateString = &quot; 06/15/2008&quot;;\n      if (DateTimeOffset.TryParseExact(dateString, format, provider, \n                                       DateTimeStyles.AllowTrailingWhite, \n                                       out result))\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n\n      // Parse date and time value, and allow all white space.\n      dateString = &quot; 06/15/   2008  15:15    -05:00&quot;;\n      format = &quot;MM/dd/yyyy H:mm zzz&quot;;\n      if (DateTimeOffset.TryParseExact(dateString, format, provider, \n                                       DateTimeStyles.AllowWhiteSpaces, \n                                       out result))\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      \n      // Parse date and time and convert to UTC.\n      dateString = &quot;  06/15/2008 15:15:30 -05:00&quot;;   \n      format = &quot;MM/dd/yyyy H:mm:ss zzz&quot;;       \n      if (DateTimeOffset.TryParseExact(dateString, format, provider, \n                                      DateTimeStyles.AllowWhiteSpaces | \n                                      DateTimeStyles.AdjustToUniversal, \n                                      out result))\n         Console.WriteLine(&quot;&#39;{0}&#39; converts to {1}.&quot;, dateString, result.ToString());\n      else\n         Console.WriteLine(&quot;&#39;{0}&#39; is not in the correct format.&quot;, dateString);\n      // The example displays the following output:\n      //    &#39;06/15/2008&#39; converts to 6/15/2008 12:00:00 AM +00:00.\n      //    &#39; 06/15/2008&#39; is not in the correct format.\n      //    &#39; 06/15/   2008  15:15    -05:00&#39; converts to 6/15/2008 3:15:00 PM -05:00.\n      //    &#39;  06/15/2008 15:15:30 -05:00&#39; converts to 6/15/2008 8:15:30 PM +00:00.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_TryParseExact_System_String_System_String___System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTimeOffset__\">\r\n    \r\n            <a id=\"System_DateTimeOffset_TryParseExact_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match one of the specified formats exactly.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>input</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that contains a date and time to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formats</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array that defines the expected formats of <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that supplies culture-specific formatting information about <code>input</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>styles</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of enumeration values that indicates the permitted format of input. A typical value to specify is <code>None</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When the method returns, contains the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent to the date and time of <code>input</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>, if the conversion failed. The conversion fails if the <code>input</code> does not contain a valid string representation of a date and time, or does not contain the date and time in the expected format defined by <code>format</code>, or if <code>formats</code> is <code>null</code>. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>input</code> parameter is successfully converted; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>styles</code> includes an undefined <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> is not supported.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> includes mutually exclusive <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryParseExact method parses the string representation of a date that matches any one of the patterns assigned to the <code>formats</code> array. If the <code>input</code> string does not match any one of these patterns with any variations defined by the <code>styles</code> parameter, the parsing operation fails and the method returns <code>false</code>. Aside from comparing <code>input</code> to multiple strings that contain format specifiers, this overload behaves identically to the [DateTimeOffset.ParseExact(String, String&lt;xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt; method.  </p>\n<p> The <code>formats</code> parameter is a string array whose elements contain either a single standard format specifier or one or more custom format specifiers that define the possible pattern of <code>input</code>. For details about valid formatting codes, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> and <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>. If the matched element in <code>formats</code> includes the <code>z</code>, <code>zz</code>, or <code>zzz</code> custom format specifiers to indicate that an offset must be present in <code>input</code>, that offset must include either a negative sign or a positive sign. If the sign is missing, the parse operation fails and the method returns <code>false</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Using the <code>formats</code> parameter of this overload to specify multiple formats can help reduce the frustration many users experience when they enter dates and times. In particular, the ability to define multiple input patterns enables an application to handle date and time representations that can either include or lack leading zeros in months, days, hours, minutes, and seconds. The example provides an illustration of this.  </p>\n</div>\n<p> If the matched element in <code>formats</code> requires that <code>input</code> contain a date but not a time, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned a time of midnight (0:00:00). If the matched element in <code>formats</code> requires that input contain a time but not a date, the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is assigned the current date on the local system. If the matched element in <code>formats</code> does not require that <code>input</code> contain an offset, the offset of the resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object depends on the value of the <code>styles</code> parameter. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the offset of the local time zone is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If <code>styles</code> includes <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>, the Coordinated Universal Time (UTC) offset, or +00:00, is assigned to the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object. If neither value is specified, the offset of the local time zone is used.  </p>\n<p> The particular date and time symbols and strings used in <code>input</code> are defined by the <code>formatProvider</code> parameter. The same is true for the precise pattern of <code>input</code> if the matching element of <code>formats</code> is a standard format specifier string. The <code>formatProvider</code> parameter can be either of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture based on which <code>input</code> is interpreted. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>input</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n<p>If <code>formatprovider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The <code>styles</code> parameter defines whether white space is permitted in the input string, indicates how strings without an explicit offset component are parsed, and supports UTC conversion as part of the parsing operation. All members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration are supported except <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>. The following table lists the effect of each supported member.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><code>DateTimeStyles</code> member</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>input</code> and, if necessary, converts it to UTC. It is equivalent to parsing a string, and then calling the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method of the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If the matched element in <code>formats</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the offset of the local time zone. This is the default value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If the matched element in <code>formats</code> does not require that <code>input</code> contain an offset value, the returned <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is given the UTC offset (+00:00).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include inner white space not specified by the elements in <code>formats</code>. Extra white space can appear between date and time components and within individual components (except for the offset) and is ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading spaces not specified by the elements in <code>formats</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include trailing spaces not specified by the elements in <code>formats</code>. These are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Allows <code>input</code> to include leading, trailing, and inner spaces not specified by the elements in <code>formats</code>. All extra white-space characters not specified in the matched element in <code>formats</code> are ignored when parsing the string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Indicates that additional white space is not permitted in <code>input</code>. White space must appear exactly as specified in a particular element in <code>formats</code> for a successful match to occur. This is the default behavior.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Has no effect because the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure does not include a <code>Kind</code> property.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines multiple input formats for the string representation of a date and time and offset value, and then passes the string that is entered by the user to the TryParseExact method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.TryParseExact#2\">      Dim conIn As TextReader = Console.In\n      Dim conOut As TextWriter = Console.Out\n      Dim tries As Integer = 0\n      Dim input As String = String.Empty\n      Dim formats() As String = {&quot;M/dd/yyyy HH:m zzz&quot;, &quot;MM/dd/yyyy HH:m zzz&quot;, _\n                                 &quot;M/d/yyyy HH:m zzz&quot;, &quot;MM/d/yyyy HH:m zzz&quot;, _\n                                 &quot;M/dd/yy HH:m zzz&quot;, &quot;MM/dd/yy HH:m zzz&quot;, _\n                                 &quot;M/d/yy HH:m zzz&quot;, &quot;MM/d/yy HH:m zzz&quot;, _                                 \n                                 &quot;M/dd/yyyy H:m zzz&quot;, &quot;MM/dd/yyyy H:m zzz&quot;, _\n                                 &quot;M/d/yyyy H:m zzz&quot;, &quot;MM/d/yyyy H:m zzz&quot;, _\n                                 &quot;M/dd/yy H:m zzz&quot;, &quot;MM/dd/yy H:m zzz&quot;, _\n                                 &quot;M/d/yy H:m zzz&quot;, &quot;MM/d/yy H:m zzz&quot;, _                               \n                                 &quot;M/dd/yyyy HH:mm zzz&quot;, &quot;MM/dd/yyyy HH:mm zzz&quot;, _\n                                 &quot;M/d/yyyy HH:mm zzz&quot;, &quot;MM/d/yyyy HH:mm zzz&quot;, _\n                                 &quot;M/dd/yy HH:mm zzz&quot;, &quot;MM/dd/yy HH:mm zzz&quot;, _\n                                 &quot;M/d/yy HH:mm zzz&quot;, &quot;MM/d/yy HH:mm zzz&quot;, _                                 \n                                 &quot;M/dd/yyyy H:mm zzz&quot;, &quot;MM/dd/yyyy H:mm zzz&quot;, _\n                                 &quot;M/d/yyyy H:mm zzz&quot;, &quot;MM/d/yyyy H:mm zzz&quot;, _\n                                 &quot;M/dd/yy H:mm zzz&quot;, &quot;MM/dd/yy H:mm zzz&quot;, _\n                                 &quot;M/d/yy H:mm zzz&quot;, &quot;MM/d/yy H:mm zzz&quot;}   \n      Dim provider As IFormatProvider = CultureInfo.InvariantCulture.DateTimeFormat\n      Dim result As DateTimeOffset\n     \n      Do \n         conOut.WriteLine(&quot;Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),&quot;)\n         conOut.Write(&quot;Then press Enter: &quot;)\n         input = conIn.ReadLine()\n         conOut.WriteLine() \n         If DateTimeOffset.TryParseExact(input, formats, provider, _\n                                         DateTimeStyles.AllowWhiteSpaces, _\n                                         result) Then\n            Exit Do\n         Else\n            Console.WriteLine(&quot;Unable to parse {0}.&quot;, input)      \n            tries += 1\n         End If\n      Loop While tries &lt; 3\n      If tries &gt;= 3 Then\n         Console.WriteLine(&quot;Exiting application without parsing {0}&quot;, input)\n      Else\n         Console.WriteLine(&quot;{0} was converted to {1}&quot;, input, result.ToString())                                                     \n      End If \n      &#39; Some successful sample interactions with the user might appear as follows:\n      &#39;    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      &#39;    Then press Enter: 12/08/2007 6:54 -6:00\n      &#39;    \n      &#39;    12/08/2007 6:54 -6:00 was converted to 12/8/2007 6:54:00 AM -06:00         \n      &#39;    \n      &#39;    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      &#39;    Then press Enter: 12/8/2007 06:54 -06:00\n      &#39;    \n      &#39;    12/8/2007 06:54 -06:00 was converted to 12/8/2007 6:54:00 AM -06:00\n      &#39;    \n      &#39;    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      &#39;    Then press Enter: 12/5/07 6:54 -6:00\n      &#39;    \n      &#39;    12/5/07 6:54 -6:00 was converted to 12/5/2007 6:54:00 AM -06:00 \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.TryParseExact#2\">      TextReader conIn = Console.In;\n      TextWriter conOut = Console.Out;\n      int tries = 0;\n      string input = String.Empty;\n\n      string[] formats = new string[] {&quot;M/dd/yyyy HH:m zzz&quot;, &quot;MM/dd/yyyy HH:m zzz&quot;, \n                                       &quot;M/d/yyyy HH:m zzz&quot;, &quot;MM/d/yyyy HH:m zzz&quot;, \n                                       &quot;M/dd/yy HH:m zzz&quot;, &quot;MM/dd/yy HH:m zzz&quot;, \n                                       &quot;M/d/yy HH:m zzz&quot;, &quot;MM/d/yy HH:m zzz&quot;,                                 \n                                       &quot;M/dd/yyyy H:m zzz&quot;, &quot;MM/dd/yyyy H:m zzz&quot;, \n                                       &quot;M/d/yyyy H:m zzz&quot;, &quot;MM/d/yyyy H:m zzz&quot;, \n                                       &quot;M/dd/yy H:m zzz&quot;, &quot;MM/dd/yy H:m zzz&quot;, \n                                       &quot;M/d/yy H:m zzz&quot;, &quot;MM/d/yy H:m zzz&quot;,                               \n                                       &quot;M/dd/yyyy HH:mm zzz&quot;, &quot;MM/dd/yyyy HH:mm zzz&quot;, \n                                       &quot;M/d/yyyy HH:mm zzz&quot;, &quot;MM/d/yyyy HH:mm zzz&quot;, \n                                       &quot;M/dd/yy HH:mm zzz&quot;, &quot;MM/dd/yy HH:mm zzz&quot;, \n                                       &quot;M/d/yy HH:mm zzz&quot;, &quot;MM/d/yy HH:mm zzz&quot;,                                 \n                                       &quot;M/dd/yyyy H:mm zzz&quot;, &quot;MM/dd/yyyy H:mm zzz&quot;, \n                                       &quot;M/d/yyyy H:mm zzz&quot;, &quot;MM/d/yyyy H:mm zzz&quot;, \n                                       &quot;M/dd/yy H:mm zzz&quot;, &quot;MM/dd/yy H:mm zzz&quot;, \n                                       &quot;M/d/yy H:mm zzz&quot;, &quot;MM/d/yy H:mm zzz&quot;};   \n      IFormatProvider provider = CultureInfo.InvariantCulture.DateTimeFormat;\n      DateTimeOffset result;\n     \n      do {\n         conOut.WriteLine(&quot;Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),&quot;);\n         conOut.Write(&quot;Then press Enter: &quot;);\n         input = conIn.ReadLine();\n         conOut.WriteLine(); \n         if (DateTimeOffset.TryParseExact(input, formats, provider, \n                                         DateTimeStyles.AllowWhiteSpaces, \n                                         out result))\n         {                                          \n            break;\n         }\n         else\n         {  \n            Console.WriteLine(&quot;Unable to parse {0}.&quot;, input);      \n            tries++;\n         }\n      } while (tries &lt; 3);\n      if (tries &gt;= 3)\n         Console.WriteLine(&quot;Exiting application without parsing {0}&quot;, input);\n      else\n         Console.WriteLine(&quot;{0} was converted to {1}&quot;, input, result.ToString());                                                     \n      // Some successful sample interactions with the user might appear as follows:\n      //    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      //    Then press Enter: 12/08/2007 6:54 -6:00\n      //    \n      //    12/08/2007 6:54 -6:00 was converted to 12/8/2007 6:54:00 AM -06:00         \n      //    \n      //    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      //    Then press Enter: 12/8/2007 06:54 -06:00\n      //    \n      //    12/8/2007 06:54 -06:00 was converted to 12/8/2007 6:54:00 AM -06:00\n      //    \n      //    Enter a date, time, and offset (MM/DD/YYYY HH:MM +/-HH:MM),\n      //    Then press Enter: 12/5/07 6:54 -6:00\n      //    \n      //    12/5/07 6:54 -6:00 was converted to 12/5/2007 6:54:00 AM -06:00 \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_Addition_System_DateTimeOffset_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_Addition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Addition(DateTimeOffset,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a specified time interval to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that has a specified date and time, and yields a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object that has new a date and time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset op_Addition (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeTz</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeSpan</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time interval to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object whose value is the sum of the values of <code>dateTimeTz</code> and <code>timeSpan</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.  </p>\n<p> -or-  </p>\n<p> The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Addition method defines the addition operation for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> values. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#1\">      DateTimeOffset date1 = new DateTimeOffset(2008, 1, 1, 13, 32, 45, \n                             new TimeSpan(-5, 0, 0)); \n      TimeSpan interval1 = new TimeSpan(202, 3, 30, 0);\n      TimeSpan interval2 = new TimeSpan(5, 0, 0, 0);      \n      DateTimeOffset date2; \n      \n      Console.WriteLine(date1);         // Displays 1/1/2008 1:32:45 PM -05:00\n      date2 = date1 + interval1;\n      Console.WriteLine(date2);         // Displays 7/21/2008 5:02:45 PM -05:00\n      date2 += interval2;\n      Console.WriteLine(date2);         // Displays 7/26/2008 5:02:45 PM -05:00     \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#1\">      Dim date1 As New DateTimeOffset(#1/1/2008 1:32:45PM#, _\n                   New TimeSpan(-5, 0, 0)) \n      Dim interval1 As New TimeSpan(202, 3, 30, 0)\n      Dim interval2 As New TimeSpan(5, 0, 0, 0)      \n      Dim date2 As DateTimeOffset \n      \n      Console.WriteLine(date1)         &#39; Displays 1/1/2008 1:32:45 PM -05:00\n      date2 = date1 + interval1\n      Console.WriteLine(date2)         &#39; Displays 7/21/2008 5:02:45 PM -05:00\n      date2 += interval2\n      Console.WriteLine(date2)         &#39; Displays 7/26/2008 5:02:45 PM -05:00     \n</code></pre><p> Languages that do not support custom operators and operator overloading can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Add_\" data-linktype=\"relative-path\">Add</a> method instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_Equality_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same point in time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if both <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects have the same <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Equality method defines the operation of the equality operator for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#2\">      DateTimeOffset date1 = new DateTimeOffset(2007, 6, 3, 14, 45, 0, \n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date2 = new DateTimeOffset(2007, 6, 3, 15, 45, 0,\n                   new TimeSpan(-6, 0, 0));\n      DateTimeOffset date3 = new DateTimeOffset(date1.DateTime, \n                   new TimeSpan(-6, 0, 0));\n      Console.WriteLine(date1 == date2);        // Displays True\n      Console.WriteLine(date1 == date3);        // Displays False \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#2\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Console.WriteLine(date1 = date2)        &#39; Displays True\n      Console.WriteLine(date1 = date3)        &#39; Displays False\n</code></pre><p> Before evaluating the <code>left</code> and <code>right</code> operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#4\">      return first.UtcDateTime == second.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#4\">      Return first.UtcDateTime = second.UtcDateTime\n</code></pre><p> In other words, the Equality method determines whether the two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent a single point in time. It directly compares neither dates and times nor offsets. To determine whether two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent the same time and have the same offset value, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_EqualsExact_\" data-linktype=\"relative-path\">EqualsExact</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_GreaterThan_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_GreaterThan_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_GreaterThan(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is greater than (or later than) a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_GreaterThan (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>left</code> is later than the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>right</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GreaterThan method defines the operation of the greater than operator for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#3\">      DateTimeOffset date1 = new DateTimeOffset(2007, 6, 3, 14, 45, 0, \n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date2 = new DateTimeOffset(2007, 6, 3, 15, 45, 0,\n                   new TimeSpan(-6, 0, 0));\n      DateTimeOffset date3 = new DateTimeOffset(date1.DateTime, \n                   new TimeSpan(-6, 0, 0));\n      Console.WriteLine(date1 &gt; date2);        // Displays False\n      Console.WriteLine(date1 &gt; date3);        // Displays True \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#3\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Console.WriteLine(date1 &gt; date2)        &#39; Displays False\n      Console.WriteLine(date1 &gt; date3)        &#39; Displays True\n</code></pre><p> Languages that do not support custom operators can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Compare_\" data-linktype=\"relative-path\">Compare</a> method instead. They can also call the GreaterThan method directly, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#4\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Console.WriteLine(DateTimeOffset.op_GreaterThan(date1, date2))  &#39; Displays False\n      Console.WriteLine(DateTimeOffset.op_GreaterThan(date1, date3))  &#39; Displays True\n</code></pre><p> Before evaluating the <code>left</code> and <code>right</code> operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#5\">      return left.UtcDateTime &gt; right.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#5\">      Return left.UtcDateTime &gt; right.UtcDateTime\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_GreaterThanOrEqual_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_GreaterThanOrEqual_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is greater than or equal to a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_GreaterThanOrEqual (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>left</code> is the same as or later than the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>right</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_op_GreaterThan_\" data-linktype=\"relative-path\">op_GreaterThan</a> method defines the operation of the greater than or equal to operator for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#5\">      DateTimeOffset date1 = new DateTimeOffset(2007, 6, 3, 14, 45, 0, \n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date2 = new DateTimeOffset(2007, 6, 3, 15, 45, 0,\n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date3 = new DateTimeOffset(date1.DateTime, \n                   new TimeSpan(-6, 0, 0));\n      DateTimeOffset date4 = date1;\n      Console.WriteLine(date1 &gt;= date2);        // Displays False\n      Console.WriteLine(date1 &gt;= date3);        // Displays True \n      Console.WriteLine(date1 &gt;= date4);        // Displays True \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#5\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date4 As DateTimeOffset = date1\n      Console.WriteLine(date1 &gt;= date2)        &#39; Displays False\n      Console.WriteLine(date1 &gt;= date3)        &#39; Displays True\n      Console.WriteLine(date1 &gt;= date4)        &#39; Displays True\n</code></pre><p> Languages that do not support custom operators can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Compare_\" data-linktype=\"relative-path\">Compare</a> method instead. Some languages can also call the GreaterThanOrEqual method directly, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#6\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date4 As DateTimeOffset = date1\n      Console.WriteLine( _\n          DateTimeOffset.op_GreaterThanOrEqual(date1, date2))   &#39; Displays False\n      Console.WriteLine( _\n          DateTimeOffset.op_GreaterThanOrEqual(date1, date3))   &#39; Displays True\n      Console.WriteLine( _\n          DateTimeOffset.op_GreaterThanOrEqual(date1, date4))   &#39; Displays True\n</code></pre><p> Before evaluating the <code>left</code> and <code>right</code> operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#6\">      return left.UtcDateTime &gt;= right.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#6\">      Return left.UtcDateTime &gt;= right.UtcDateTime\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_Implicit_System_DateTime_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_Implicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Implicit(DateTime)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset op_Implicit (DateTime dateTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_Inequality_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects refer to different points in time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>left</code> and <code>right</code> do not have the same <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Inequality method defines the operation of the inequality operator for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It always returns the opposite result from <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_op_Equality_\" data-linktype=\"relative-path\">op_Equality</a>. The Inequality method enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#8\">      DateTimeOffset date1 = new DateTimeOffset(2007, 6, 3, 14, 45, 0, \n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date2 = new DateTimeOffset(2007, 6, 3, 15, 45, 0,\n                   new TimeSpan(-6, 0, 0));\n      DateTimeOffset date3 = new DateTimeOffset(date1.DateTime, \n                   new TimeSpan(-6, 0, 0));\n      Console.WriteLine(date1 != date2);        // Displays False\n      Console.WriteLine(date1 != date3);        // Displays True \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#8\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Console.WriteLine(date1 &lt;&gt; date2)        &#39; Displays False\n      Console.WriteLine(date1 &lt;&gt; date3)        &#39; Displays True\n</code></pre><p> Before evaluating the <code>left</code> and <code>right</code> operands for equality, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#4\">      return first.UtcDateTime == second.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#4\">      Return first.UtcDateTime = second.UtcDateTime\n</code></pre><p> In other words, the Inequality method determines whether the two <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects represent different points in time. It directly compares neither dates and times nor offsets.  </p>\n<p> Languages that do not support custom operators can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Compare_\" data-linktype=\"relative-path\">Compare</a> method instead. In addition, some languages can also call the Inequality method directly, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#9\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date4 As DateTimeOffset = date1\n      Console.WriteLine( _\n          DateTimeOffset.op_Inequality(date1, date2))   &#39; Displays True\n      Console.WriteLine( _\n          DateTimeOffset.op_Inequality(date1, date3))   &#39; Displays True\n      Console.WriteLine( _\n          DateTimeOffset.op_Inequality(date1, date4))   &#39; Displays False\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_LessThan_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_LessThan_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_LessThan(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is less than a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_LessThan (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>left</code> is earlier than the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>right</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LessThan method defines the operation of the less than operator for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#10\">      DateTimeOffset date1 = new DateTimeOffset(2007, 6, 3, 14, 45, 0, \n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date2 = new DateTimeOffset(2007, 6, 3, 15, 45, 0,\n                   new TimeSpan(-6, 0, 0));\n      DateTimeOffset date3 = new DateTimeOffset(date1.DateTime, \n                   new TimeSpan(-8, 0, 0));\n      Console.WriteLine(date1 &lt; date2);        // Displays False\n      Console.WriteLine(date1 &lt; date3);        // Displays True \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#10\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-8, 0, 0))\n      Console.WriteLine(date1 &lt; date2)        &#39; Displays False\n      Console.WriteLine(date1 &lt; date3)        &#39; Displays True\n</code></pre><p> Before evaluating the <code>left</code> and <code>right</code> operands, the operator converts both operands to Coordinated Universal Time (UTC). The operation is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#8\">      return left.UtcDateTime &lt; right.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#8\">      Return left.UtcDateTime &lt; right.UtcDateTime\n</code></pre><p> Languages that do not support custom operators can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Compare_\" data-linktype=\"relative-path\">Compare</a> method instead. In addition, some languages can also call the LessThan method directly, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#11\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-8, 0, 0))\n      Console.WriteLine(DateTimeOffset.op_LessThan(date1, date2))  &#39; Displays False\n      Console.WriteLine(DateTimeOffset.op_LessThan(date1, date3))  &#39; Displays True\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_LessThanOrEqual_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_LessThanOrEqual_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether one specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is less than a second specified <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_LessThanOrEqual (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>left</code> is earlier than the <span class=\"xref\">stem.DateTimeOffset.UtcDateTime*</span> value of <code>right</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LessThanOrEqual method defines the operation of the less than or equal to operator for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#12\">      DateTimeOffset date1 = new DateTimeOffset(2007, 6, 3, 14, 45, 0, \n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date2 = new DateTimeOffset(2007, 6, 3, 15, 45, 0,\n                   new TimeSpan(-7, 0, 0));\n      DateTimeOffset date3 = new DateTimeOffset(date1.DateTime, \n                   new TimeSpan(-6, 0, 0));\n      DateTimeOffset date4 = date1;\n      Console.WriteLine(date1 &lt;= date2);        // Displays True\n      Console.WriteLine(date1 &lt;= date3);        // Displays False \n      Console.WriteLine(date1 &lt;= date4);        // Displays True \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#12\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date4 As DateTimeOffset = date1\n      Console.WriteLine(date1 &lt;= date2)        &#39; Displays True\n      Console.WriteLine(date1 &lt;= date3)        &#39; Displays False\n      Console.WriteLine(date1 &lt;= date4)        &#39; Displays True\n</code></pre><p> Languages that do not support custom operators can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Compare_\" data-linktype=\"relative-path\">Compare</a> method instead. Some languages can also call the LessThanOrEqual method directly, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#13\">      Dim date1 As New DateTimeOffset(#6/3/2007 2:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date2 As New DateTimeOffset(#6/3/2007 3:45PM#, _\n                   New TimeSpan(-7, 0, 0))\n      Dim date3 As New DateTimeOffset(date1.DateTime, _\n                   New TimeSpan(-6, 0, 0))\n      Dim date4 As DateTimeOffset = date1\n      Console.WriteLine(DateTimeOffset.op_LessThanOrEqual(date1, date2))   &#39; Displays True\n      Console.WriteLine(DateTimeOffset.op_LessThanOrEqual(date1, date3)) &#39; Displays False\n      Console.WriteLine(DateTimeOffset.op_LessThanOrEqual(date1, date4)) &#39; Displays True\n</code></pre><p> Before evaluating the <code>left</code> and <code>right</code> operands, the operator converts both values to Coordinated Universal Time (UTC). The operation is equivalent to the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Syntax#9\">      return left.UtcDateTime &lt;= right.UtcDateTime;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Syntax#9\">      Return left.UtcDateTime &lt;= right.UtcDateTime\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_Subtraction_System_DateTimeOffset_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_Subtraction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Subtraction(DateTimeOffset,DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Subtracts one <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object from another and yields a time interval.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeSpan op_Subtraction (DateTimeOffset left, DateTimeOffset right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The minuend.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The subtrahend.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>An object that represents the difference between <code>left</code> and <code>right</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Subtraction method defines the subtraction operation for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#14\">      DateTimeOffset firstDate = new DateTimeOffset(2008, 3, 25, 18, 0, 0, \n                                                    new TimeSpan(-7, 0, 0));\n      DateTimeOffset secondDate = new DateTimeOffset(2008, 3, 25, 18, 0, 0, \n                                                     new TimeSpan(-5, 0, 0));\n      DateTimeOffset thirdDate = new DateTimeOffset(2008, 2, 28, 9, 0, 0, \n                                                    new TimeSpan(-7, 0, 0));\n      TimeSpan difference;\n      \n      difference = firstDate - secondDate;\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, \n                        firstDate.ToString(), \n                        secondDate.ToString(), \n                        difference.Days, \n                        difference.Hours, \n                        difference.Minutes);      \n      \n      difference = firstDate - thirdDate;\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, \n                        firstDate.ToString(), \n                        secondDate.ToString(), \n                        difference.Days, \n                        difference.Hours, \n                        difference.Minutes); \n      // The example produces the following output:\n      //    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 0 days, 2:00\n      //    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 26 days, 9:00                                 \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#14\">      Dim firstDate As New DateTimeOffset(#3/25/2008 6:00PM#, _\n                                          New TimeSpan(-7, 0, 0))\n      Dim secondDate As New DateTimeOffset(#3/25/2008 6:00PM#, _\n                                           New TimeSpan(-5, 0, 0))\n      Dim thirdDate As New DateTimeOffset(#2/28/2008 9:00AM#, _\n                                          New TimeSpan(-7, 0, 0))\n      Dim difference As TimeSpan\n      \n      difference = firstDate - secondDate\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, _\n                        firstDate.ToString(), _\n                        secondDate.ToString(), _\n                        difference.Days, _\n                        difference.Hours, _\n                        difference.Minutes)      \n      difference = firstDate - thirdDate\n      Console.WriteLine(&quot;({0}) - ({1}): {2} days, {3}:{4:d2}&quot;, _\n                        firstDate.ToString(), _\n                        secondDate.ToString(), _\n                        difference.Days, _\n                        difference.Hours, _\n                        difference.Minutes) \n      &#39; The example produces the following output:\n      &#39;    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 0 days, 2:00\n      &#39;    (3/25/2008 6:00:00 PM -07:00) - (3/25/2008 6:00:00 PM -05:00): 26 days, 9:00                                 \n</code></pre><p> Languages that do not support custom operators and operator overloading can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Subtract_System_DateTimeOffset_\" data-linktype=\"relative-path\">System.DateTimeOffset.Subtract(DateTimeOffset)</a> method instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_op_Subtraction_System_DateTimeOffset_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_op_Subtraction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Subtraction(DateTimeOffset,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Subtracts a specified time interval from a specified date and time, and yields a new date and time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset op_Subtraction (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeTz</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeSpan</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time interval to subtract.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>An object that is equal to the value of <code>dateTimeOffset</code> minus <code>timeSpan</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The resulting <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value is less than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> or greater than <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Subtraction method defines the subtraction operation for <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> objects. It enables code such as the following:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTimeOffset.Operators#15\">      DateTimeOffset offsetDate = new DateTimeOffset(2007, 12, 3, 11, 30, 0, \n                                     new TimeSpan(-8, 0, 0)); \n      TimeSpan duration = new TimeSpan(7, 18, 0, 0);\n      Console.WriteLine(offsetDate - duration);  // Displays 11/25/2007 5:30:00 PM -08:00\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTimeOffset.Operators#15\">      Dim offsetDate As New DateTimeOffset(#12/3/2007 11:30AM#, _\n                                     New TimeSpan(-8, 0, 0)) \n      Dim duration As New TimeSpan(7, 18, 0, 0)\n      Console.WriteLine(offsetDate - duration)    &#39; Displays 11/25/2007 5:30:00 PM -08:00\n</code></pre><p> Languages that do not support custom operators and operator overloading can call the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Subtract_System_TimeSpan_\" data-linktype=\"relative-path\">System.DateTimeOffset.Subtract(TimeSpan)</a> method instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_System_IComparable_CompareTo_System_Object_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_System_IComparable_CompareTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IComparable.CompareTo(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares the value of the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object with another object of the same type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IComparable.CompareTo (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare with the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer that indicates whether the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is less than, equal to, or greater than <code>obj</code>. The return values of the method are interpreted as follows:  </p>\n <table><thead><tr><th> Return Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> The current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is less than (earlier than) <code>obj</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> The current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is equal to (the same point in time as) <code>obj</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> The current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object is greater than (later than) <code>obj</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDeserializationCallback.OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Runs when the deserialization of an object has been completed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDeserializationCallback.OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object that initiated the callback. The functionality for this parameter is not currently implemented.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_DateTimeOffset_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_DateTimeOffset_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data required to serialize the current <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to populate with data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination for this serialization (see <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>info</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.DateTimeOffset.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.DateTimeOffset.yml\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset..ctor\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Add\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddDays\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddHours\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddMilliseconds\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddMinutes\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddMonths\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddSeconds\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddTicks\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.AddYears\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Compare\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Date\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.DateTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Day\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.DayOfWeek\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.DayOfYear\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Equals\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.EqualsExact\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.FromFileTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.FromUnixTimeMilliseconds\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.FromUnixTimeSeconds\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Hour\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.LocalDateTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.MaxValue\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Millisecond\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Minute\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.MinValue\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Month\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Now\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Offset\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_Addition\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_Addition\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_GreaterThan\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_GreaterThan\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_GreaterThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_GreaterThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_Implicit\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_Implicit\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_LessThan\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_LessThan\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_LessThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_LessThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_Subtraction\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.op_op_Subtraction\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Parse\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ParseExact\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Second\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Subtract\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.IComparable.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Ticks\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.TimeOfDay\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToFileTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToLocalTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToOffset\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToString\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToUniversalTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToUnixTimeMilliseconds\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.ToUnixTimeSeconds\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.TryParse\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.TryParseExact\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.UtcDateTime\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.UtcNow\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.UtcTicks\">\r\n<meta name=\"APIName\" content=\"System.DateTimeOffset.Year\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"1c4e312b-98de-0583-507b-117e5d85e5e9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.DateTimeOffset\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.DateTimeOffset.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.DateTimeOffset.yml","open_to_public_contributors":true,"api_name":["System.DateTimeOffset","System.DateTimeOffset..ctor","System.DateTimeOffset.Add","System.DateTimeOffset.AddDays","System.DateTimeOffset.AddHours","System.DateTimeOffset.AddMilliseconds","System.DateTimeOffset.AddMinutes","System.DateTimeOffset.AddMonths","System.DateTimeOffset.AddSeconds","System.DateTimeOffset.AddTicks","System.DateTimeOffset.AddYears","System.DateTimeOffset.Compare","System.DateTimeOffset.CompareTo","System.DateTimeOffset.Date","System.DateTimeOffset.DateTime","System.DateTimeOffset.Day","System.DateTimeOffset.DayOfWeek","System.DateTimeOffset.DayOfYear","System.DateTimeOffset.Equals","System.DateTimeOffset.EqualsExact","System.DateTimeOffset.FromFileTime","System.DateTimeOffset.FromUnixTimeMilliseconds","System.DateTimeOffset.FromUnixTimeSeconds","System.DateTimeOffset.GetHashCode","System.DateTimeOffset.Hour","System.DateTimeOffset.LocalDateTime","System.DateTimeOffset.MaxValue","System.DateTimeOffset.Millisecond","System.DateTimeOffset.Minute","System.DateTimeOffset.MinValue","System.DateTimeOffset.Month","System.DateTimeOffset.Now","System.DateTimeOffset.Offset","System.DateTimeOffset.op_Addition","System.DateTimeOffset.op_op_Addition","System.DateTimeOffset.op_Equality","System.DateTimeOffset.op_op_Equality","System.DateTimeOffset.op_GreaterThan","System.DateTimeOffset.op_op_GreaterThan","System.DateTimeOffset.op_GreaterThanOrEqual","System.DateTimeOffset.op_op_GreaterThanOrEqual","System.DateTimeOffset.op_Implicit","System.DateTimeOffset.op_op_Implicit","System.DateTimeOffset.op_Inequality","System.DateTimeOffset.op_op_Inequality","System.DateTimeOffset.op_LessThan","System.DateTimeOffset.op_op_LessThan","System.DateTimeOffset.op_LessThanOrEqual","System.DateTimeOffset.op_op_LessThanOrEqual","System.DateTimeOffset.op_Subtraction","System.DateTimeOffset.op_op_Subtraction","System.DateTimeOffset.Parse","System.DateTimeOffset.ParseExact","System.DateTimeOffset.Second","System.DateTimeOffset.Subtract","System.DateTimeOffset.IComparable.CompareTo","System.DateTimeOffset.IDeserializationCallback.OnDeserialization","System.DateTimeOffset.ISerializable.GetObjectData","System.DateTimeOffset.Ticks","System.DateTimeOffset.TimeOfDay","System.DateTimeOffset.ToFileTime","System.DateTimeOffset.ToLocalTime","System.DateTimeOffset.ToOffset","System.DateTimeOffset.ToString","System.DateTimeOffset.ToUniversalTime","System.DateTimeOffset.ToUnixTimeMilliseconds","System.DateTimeOffset.ToUnixTimeSeconds","System.DateTimeOffset.TryParse","System.DateTimeOffset.TryParseExact","System.DateTimeOffset.UtcDateTime","System.DateTimeOffset.UtcNow","System.DateTimeOffset.UtcTicks","System.DateTimeOffset.Year"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.DateTimeOffset","System::DateTimeOffset","System.DateTimeOffset.#ctor","System::DateTimeOffset::#ctor","System.DateTimeOffset.Add","System::DateTimeOffset::Add","System.DateTimeOffset.AddDays","System::DateTimeOffset::AddDays","System.DateTimeOffset.AddHours","System::DateTimeOffset::AddHours","System.DateTimeOffset.AddMilliseconds","System::DateTimeOffset::AddMilliseconds","System.DateTimeOffset.AddMinutes","System::DateTimeOffset::AddMinutes","System.DateTimeOffset.AddMonths","System::DateTimeOffset::AddMonths","System.DateTimeOffset.AddSeconds","System::DateTimeOffset::AddSeconds","System.DateTimeOffset.AddTicks","System::DateTimeOffset::AddTicks","System.DateTimeOffset.AddYears","System::DateTimeOffset::AddYears","System.DateTimeOffset.Compare","System::DateTimeOffset::Compare","System.DateTimeOffset.CompareTo","System::DateTimeOffset::CompareTo","System.DateTimeOffset.Date","System::DateTimeOffset::Date","System.DateTimeOffset.DateTime","System::DateTimeOffset::DateTime","System.DateTimeOffset.Day","System::DateTimeOffset::Day","System.DateTimeOffset.DayOfWeek","System::DateTimeOffset::DayOfWeek","System.DateTimeOffset.DayOfYear","System::DateTimeOffset::DayOfYear","System.DateTimeOffset.Equals","System::DateTimeOffset::Equals","System.DateTimeOffset.EqualsExact","System::DateTimeOffset::EqualsExact","System.DateTimeOffset.FromFileTime","System::DateTimeOffset::FromFileTime","System.DateTimeOffset.FromUnixTimeMilliseconds","System::DateTimeOffset::FromUnixTimeMilliseconds","System.DateTimeOffset.FromUnixTimeSeconds","System::DateTimeOffset::FromUnixTimeSeconds","System.DateTimeOffset.GetHashCode","System::DateTimeOffset::GetHashCode","System.DateTimeOffset.Hour","System::DateTimeOffset::Hour","System.DateTimeOffset.LocalDateTime","System::DateTimeOffset::LocalDateTime","System.DateTimeOffset.MaxValue","System::DateTimeOffset::MaxValue","System.DateTimeOffset.Millisecond","System::DateTimeOffset::Millisecond","System.DateTimeOffset.Minute","System::DateTimeOffset::Minute","System.DateTimeOffset.MinValue","System::DateTimeOffset::MinValue","System.DateTimeOffset.Month","System::DateTimeOffset::Month","System.DateTimeOffset.Now","System::DateTimeOffset::Now","System.DateTimeOffset.Offset","System::DateTimeOffset::Offset","System.DateTimeOffset.op_Addition","System::DateTimeOffset::op_Addition","System.DateTimeOffset.op_Equality","System::DateTimeOffset::op_Equality","System.DateTimeOffset.op_GreaterThan","System::DateTimeOffset::op_GreaterThan","System.DateTimeOffset.op_GreaterThanOrEqual","System::DateTimeOffset::op_GreaterThanOrEqual","System.DateTimeOffset.op_Implicit","System::DateTimeOffset::op_Implicit","System.DateTimeOffset.op_Inequality","System::DateTimeOffset::op_Inequality","System.DateTimeOffset.op_LessThan","System::DateTimeOffset::op_LessThan","System.DateTimeOffset.op_LessThanOrEqual","System::DateTimeOffset::op_LessThanOrEqual","System.DateTimeOffset.op_Subtraction","System::DateTimeOffset::op_Subtraction","System.DateTimeOffset.Parse","System::DateTimeOffset::Parse","System.DateTimeOffset.ParseExact","System::DateTimeOffset::ParseExact","System.DateTimeOffset.Second","System::DateTimeOffset::Second","System.DateTimeOffset.Subtract","System::DateTimeOffset::Subtract","System.DateTimeOffset.System#IComparable#CompareTo","System::DateTimeOffset::System#IComparable#CompareTo","System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System::DateTimeOffset::System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData","System::DateTimeOffset::System#Runtime#Serialization#ISerializable#GetObjectData","System.DateTimeOffset.Ticks","System::DateTimeOffset::Ticks","System.DateTimeOffset.TimeOfDay","System::DateTimeOffset::TimeOfDay","System.DateTimeOffset.ToFileTime","System::DateTimeOffset::ToFileTime","System.DateTimeOffset.ToLocalTime","System::DateTimeOffset::ToLocalTime","System.DateTimeOffset.ToOffset","System::DateTimeOffset::ToOffset","System.DateTimeOffset.ToString","System::DateTimeOffset::ToString","System.DateTimeOffset.ToUniversalTime","System::DateTimeOffset::ToUniversalTime","System.DateTimeOffset.ToUnixTimeMilliseconds","System::DateTimeOffset::ToUnixTimeMilliseconds","System.DateTimeOffset.ToUnixTimeSeconds","System::DateTimeOffset::ToUnixTimeSeconds","System.DateTimeOffset.TryParse","System::DateTimeOffset::TryParse","System.DateTimeOffset.TryParseExact","System::DateTimeOffset::TryParseExact","System.DateTimeOffset.UtcDateTime","System::DateTimeOffset::UtcDateTime","System.DateTimeOffset.UtcNow","System::DateTimeOffset::UtcNow","System.DateTimeOffset.UtcTicks","System::DateTimeOffset::UtcTicks","System.DateTimeOffset.Year","System::DateTimeOffset::Year"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"1c4e312b-98de-0583-507b-117e5d85e5e9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/DateTimeOffset.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DateTimeOffset struct | Microsoft Docs","_op_ogTitle":"DateTimeOffset struct","description":"Represents a point in time, typically expressed as a date and time of day, relative to Coordinated Universal Time (UTC).\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.DateTimeOffset","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.datetimeoffset","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.datetimeoffset","fileRelativePath":"System.DateTimeOffset.html"},"themesRelativePathToOutputRoot":"_themes/"}