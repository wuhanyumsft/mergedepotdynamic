{"content":"    \r\n    <h1 id=\"System_CodeDom_Compiler_ICodeGenerator\">\r\n      <span class=\"lang-csharp\">ICodeGenerator</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines an interface for generating code.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface ICodeGenerator</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a>, ICodeGenerator, <a class=\"xref\" href=\"system.codedom.compiler.icodeparser\" data-linktype=\"relative-path\">ICodeParser</a>, and <a class=\"xref\" href=\"system.codedom.compiler.icodecompiler\" data-linktype=\"relative-path\">ICodeCompiler</a>. In the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnlong-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE -->, the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider#System_CodeDom_Compiler_CodeDomProvider_CreateGenerator_\" data-linktype=\"relative-path\">CreateGenerator</a>, <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider#System_CodeDom_Compiler_CodeDomProvider_CreateParser_\" data-linktype=\"relative-path\">CreateParser</a>, and <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider#System_CodeDom_Compiler_CodeDomProvider_CreateCompiler_\" data-linktype=\"relative-path\">CreateCompiler</a> methods are obsolete, and the methods of ICodeGenerator and <a class=\"xref\" href=\"system.codedom.compiler.icodecompiler\" data-linktype=\"relative-path\">ICodeCompiler</a> are directly available in the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a> class. You should override those methods in your code provider implementation and not call the base methods.  </p>\n</div>\n<p> Developers of compilers can implement this interface to allow people to dynamically generate code in a particular language. This can be used for a variety of purposes, such as creating code-generating wizards, creating dynamic assemblies with content that can be debugged, and for templated documents with embedded code, such as ASP.NET.  </p>\n<p> An ICodeGenerator implementation is typically obtained through a call to the <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider#System_CodeDom_Compiler_CodeDomProvider_CreateGenerator_\" data-linktype=\"relative-path\">CreateGenerator</a> method of <a class=\"xref\" href=\"system.codedom.compiler.codedomprovider\" data-linktype=\"relative-path\">CodeDomProvider</a>.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_CreateEscapedIdentifier_System_String_\" data-linktype=\"self-bookmark\">CreateEscapedIdentifier(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an escaped identifier for the specified value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_CreateValidIdentifier_System_String_\" data-linktype=\"self-bookmark\">CreateValidIdentifier(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a valid identifier for the specified value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromCompileUnit_System_CodeDom_CodeCompileUnit_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\" data-linktype=\"self-bookmark\">GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromExpression_System_CodeDom_CodeExpression_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\" data-linktype=\"self-bookmark\">GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromNamespace_System_CodeDom_CodeNamespace_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\" data-linktype=\"self-bookmark\">GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromStatement_System_CodeDom_CodeStatement_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\" data-linktype=\"self-bookmark\">GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromType_System_CodeDom_CodeTypeDeclaration_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\" data-linktype=\"self-bookmark\">GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_GetTypeOutput_System_CodeDom_CodeTypeReference_\" data-linktype=\"self-bookmark\">GetTypeOutput(CodeTypeReference)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type indicated by the specified <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_IsValidIdentifier_System_String_\" data-linktype=\"self-bookmark\">IsValidIdentifier(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the specified value is a valid identifier for the current language.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_Supports_System_CodeDom_Compiler_GeneratorSupport_\" data-linktype=\"self-bookmark\">Supports(GeneratorSupport)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the generator provides support for the language features represented by the specified <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_Compiler_ICodeGenerator_ValidateIdentifier_System_String_\" data-linktype=\"self-bookmark\">ValidateIdentifier(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Throws an exception if the specified value is not a valid identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_CreateEscapedIdentifier_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_CreateEscapedIdentifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateEscapedIdentifier(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an escaped identifier for the specified value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CreateEscapedIdentifier (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to create an escaped identifier for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The escaped identifier for the value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>CreateEscapedIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting. This is referred to an escaped identifier. The escaped identifier will contain the same <code>value</code> but will have escape code formatting added to differentiate the identifier from the keyword. Two implementation examples are preceding the <code>value</code> with &quot;@&quot; or bracketing the `value` with &quot;[&quot; and &quot;]&quot;.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_CreateValidIdentifier_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_CreateValidIdentifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateValidIdentifier(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a valid identifier for the specified value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CreateValidIdentifier (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to generate a valid identifier for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A valid identifier for the specified value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>CreateValidIdentifier tests whether the identifier conflicts with reserved or language keywords, and returns a valid identifier name that does not conflict. The returned identifier will contain the same <code>value</code> but, if it conflicts with reserved or language keywords, will have escape code formatting added to differentiate the identifier from the keyword. Typically, if the value needs modification, value is returned preceded by an underscore &quot;_&quot;.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromCompileUnit_System_CodeDom_CodeCompileUnit_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromCompileUnit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codecompileunit\" data-linktype=\"relative-path\">CodeCompileUnit</a> to generate code for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to output code to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a> that indicates the options to use for generating code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromExpression_System_CodeDom_CodeExpression_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromExpression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codeexpression\" data-linktype=\"relative-path\">CodeExpression</a> that indicates the expression to generate code for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to output code to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a> that indicates the options to use for generating code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromNamespace_System_CodeDom_CodeNamespace_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codenamespace\" data-linktype=\"relative-path\">CodeNamespace</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codenamespace\" data-linktype=\"relative-path\">CodeNamespace</a> that indicates the namespace to generate code for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to output code to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a> that indicates the options to use for generating code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromStatement_System_CodeDom_CodeStatement_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromStatement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codestatement\" data-linktype=\"relative-path\">CodeStatement</a> containing the CodeDOM elements to translate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to output code to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a> that indicates the options to use for generating code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromType_System_CodeDom_CodeTypeDeclaration_System_IO_TextWriter_System_CodeDom_Compiler_CodeGeneratorOptions_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_GenerateCodeFromType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> that indicates the type to generate code for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to output code to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.compiler.codegeneratoroptions\" data-linktype=\"relative-path\">CodeGeneratorOptions</a> that indicates the options to use for generating code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_GetTypeOutput_System_CodeDom_CodeTypeReference_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_GetTypeOutput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeOutput(CodeTypeReference)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type indicated by the specified <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetTypeOutput (System.CodeDom.CodeTypeReference type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a> that indicates the type to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A text representation of the specified type for the language this code generator is designed to generate code in. For example, in Visual Basic, passing in type System.Int32 will return &quot;Integer&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_IsValidIdentifier_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_IsValidIdentifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsValidIdentifier(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the specified value is a valid identifier for the current language.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsValidIdentifier (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to test for being a valid identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>value</code> parameter is a valid identifier; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method tests whether an identifier is valid. When implementing IsValidIdentifier in a derived class, design the method to test the value passed to it, and return <code>true</code> only if the value fits the rules of the language and does not conflict with a keyword.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_Supports_System_CodeDom_Compiler_GeneratorSupport_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_Supports_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Supports(GeneratorSupport)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the generator provides support for the language features represented by the specified <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>supports</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The capabilities to test the generator for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified capabilities are supported; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be called with a number of <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary &quot;Or&quot; operator (&#124;).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_Compiler_ICodeGenerator_ValidateIdentifier_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_Compiler_ICodeGenerator_ValidateIdentifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateIdentifier(String)</div>        \r\n          </div>\r\n    \r\n            <p>Throws an exception if the specified value is not a valid identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateIdentifier (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The identifier is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Rather than returning a value, this method throws an exception if the specified identifier is not valid according to the method implementation. Typically, the exception is an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a>. This method enables a code generator that implements this method to produce an informative error message based upon the value of an invalid identifier.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.Compiler.ICodeGenerator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.Compiler.ICodeGenerator.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.Supports\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"284e2f46-d177-a4f3-7f39-32dcbab8c7d1\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.CodeDom.Compiler\\ICodeGenerator.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines an interface for generating code.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.CodeDom.Compiler/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.Compiler.ICodeGenerator\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.Compiler.ICodeGenerator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.Compiler.ICodeGenerator.yml","open_to_public_contributors":true,"api_name":["System.CodeDom.Compiler.ICodeGenerator","System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier","System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType","System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput","System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier","System.CodeDom.Compiler.ICodeGenerator.Supports","System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.Compiler.ICodeGenerator","System::CodeDom::Compiler::ICodeGenerator","System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier","System::CodeDom::Compiler::ICodeGenerator::CreateEscapedIdentifier","System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier","System::CodeDom::Compiler::ICodeGenerator::CreateValidIdentifier","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit","System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromCompileUnit","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression","System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromExpression","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace","System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromNamespace","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement","System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromStatement","System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType","System::CodeDom::Compiler::ICodeGenerator::GenerateCodeFromType","System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput","System::CodeDom::Compiler::ICodeGenerator::GetTypeOutput","System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier","System::CodeDom::Compiler::ICodeGenerator::IsValidIdentifier","System.CodeDom.Compiler.ICodeGenerator.Supports","System::CodeDom::Compiler::ICodeGenerator::Supports","System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier","System::CodeDom::Compiler::ICodeGenerator::ValidateIdentifier"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"284e2f46-d177-a4f3-7f39-32dcbab8c7d1","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.CodeDom.Compiler\\ICodeGenerator.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.CodeDom.Compiler/ICodeGenerator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ICodeGenerator interface | Microsoft Docs","_op_ogTitle":"ICodeGenerator interface","description":"Defines an interface for generating code.\n","toc_asset_id":"_splitted/System.CodeDom.Compiler/toc.json","toc_rel":"_splitted/System.CodeDom.Compiler/toc.json","source_url":"","ms.assetid":"System.CodeDom.Compiler.ICodeGenerator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.compiler.icodegenerator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.compiler.icodegenerator","fileRelativePath":"System.CodeDom.Compiler.ICodeGenerator.html"},"themesRelativePathToOutputRoot":"_themes/"}