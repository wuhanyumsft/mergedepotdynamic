{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_Messaging_IMessage\">\r\n      <span class=\"lang-csharp\">IMessage</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains communication data sent between cooperating message sinks.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic interface IMessage</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Message sinks that use IMessage can be placed in the client sink chains or in the server sink chains. A message object is passed from message sink to message sink through the chain, and carries a set of named properties such as action identifiers, envoy information, and parameters.  </p>\n<p> An object that implements the IMessage interface meets the minimum qualifications to be considered a message object. The exact object received by a message sink does not have to be passed on to the next sink, but this is often the case.  </p>\n<p> Although the objects in the property bag do not have to be serializable, the message sink implementer needs to consider this, since the properties that flow out of the application domain must be serializable.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Messaging_IMessage_Properties\" data-linktype=\"self-bookmark\">Properties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that represents a collection of the message&#39;s properties.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Messaging_IMessage_Properties\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Messaging_IMessage_Properties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Properties</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> that represents a collection of the message&#39;s properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IDictionary Properties { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </div>\r\n                  <p>A dictionary that represents a collection of the message&#39;s properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller makes the call through a reference to the interface and does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"IMessageSink_Client#2\">         Console.WriteLine(&quot;Message Properties&quot;);\n         IDictionary myDictionary = myMesg.Properties;\n         IDictionaryEnumerator myEnum = (IDictionaryEnumerator) myDictionary.GetEnumerator();\n\n         while (myEnum.MoveNext())\n         {\n            object myKey = myEnum.Key;\n            string myKeyName = myKey.ToString();\n            object myValue = myEnum.Value;\n\n            Console.WriteLine(&quot;{0} : {1}&quot;, myKeyName, myEnum.Value);\n            if (myKeyName == &quot;__Args&quot;)\n            {\n               object[] myArgs = (object[])myValue;\n               for (int myInt = 0; myInt &lt; myArgs.Length; myInt++)\n                  Console.WriteLine(&quot;arg: {0} myValue: {1}&quot;, myInt, myArgs[myInt]);\n            }\n\n            if ((myKeyName == &quot;__MethodSignature&quot;) &amp;&amp; (null != myValue))\n            {\n               object[] myArgs = (object[])myValue;\n               for (int myInt = 0; myInt &lt; myArgs.Length; myInt++)\n                  Console.WriteLine(&quot;arg: {0} myValue: {1}&quot;, myInt, myArgs[myInt]);\n            }\n         }\n\n         Console.WriteLine(&quot;myUrl1 {0} object URI{1}&quot;,myUrl,myObjectURI);\n\n         myDictionary[&quot;__Uri&quot;] = myUrl;\n         Console.WriteLine(&quot;URI {0}&quot;, myDictionary[&quot;__URI&quot;]);\n</code></pre><pre><code class=\"lang-vb\" name=\"IMessageSink_Client#2\">         Console.WriteLine(&quot;Message Properties&quot;)\n         Dim myDictionary As IDictionary = myMesg.Properties\n         Dim myEnum As IDictionaryEnumerator = CType(myDictionary.GetEnumerator(), IDictionaryEnumerator)\n\n         While myEnum.MoveNext()\n            Dim myKey As Object = myEnum.Key\n            Dim myKeyName As String = myKey.ToString()\n            Dim myValue As Object = myEnum.Value\n\n            Console.WriteLine( &quot;{0} : {1}&quot;, myKeyName, myEnum.Value)\n            If myKeyName = &quot;__Args&quot; Then\n               Dim myArgs As Object() = CType(myValue, Object())\n               Dim myInt As Integer\n               For myInt = 0 To myArgs.Length - 1\n                  Console.WriteLine(  &quot;arg: {0} myValue: {1}&quot;, myInt, myArgs(myInt))\n               Next myInt\n            End If\n            If myKeyName = &quot;__MethodSignature&quot; And Not (myValue Is Nothing) Then\n               Dim myArgs As Object() = CType(myValue, Object())\n               Dim myInt As Integer\n               For myInt = 0 To myArgs.Length - 1\n                  Console.WriteLine(&quot;arg: {0} myValue: {1}&quot;, myInt, myArgs(myInt))\n               Next myInt\n            End If\n         End While\n\n         Console.WriteLine(&quot;myUrl1 {0} object URI{1}&quot;, myUrl, myObjectURI)\n\n         myDictionary(&quot;__Uri&quot;) = myUrl\n         Console.WriteLine(&quot;URI {0}&quot;, myDictionary(&quot;__URI&quot;))\n</code></pre><pre><code class=\"lang-cpp\" name=\"IMessageSink_Client#2\">      Console::WriteLine( &quot;Message Properties&quot; );\n      IDictionary^ myDictionary = myMesg-&gt;Properties;\n      IDictionaryEnumerator^ myEnum = dynamic_cast&lt;IDictionaryEnumerator^&gt;(myDictionary-&gt;GetEnumerator());\n      while ( myEnum-&gt;MoveNext() )\n      {\n         Object^ myKey = myEnum-&gt;Key;\n         String^ myKeyName = myKey-&gt;ToString();\n         Object^ myValue = myEnum-&gt;Value;\n         Console::WriteLine( &quot;{0} : {1}&quot;, myKeyName, myEnum-&gt;Value );\n         if ( myKeyName-&gt;Equals( &quot;__Args&quot; ) )\n         {\n            array&lt;Object^&gt;^myArgs = (array&lt;Object^&gt;^)myValue;\n            for ( int myInt = 0; myInt &lt; myArgs-&gt;Length; myInt++ )\n               Console::WriteLine( &quot;arg: {0} myValue: {1}&quot;, myInt, myArgs[ myInt ] );\n         }\n\n         if ( (myKeyName-&gt;Equals( &quot;__MethodSignature&quot; )) &amp;&amp; (nullptr != myValue) )\n         {\n            array&lt;Object^&gt;^myArgs = (array&lt;Object^&gt;^)myValue;\n            for ( int myInt = 0; myInt &lt; myArgs-&gt;Length; myInt++ )\n               Console::WriteLine( &quot;arg: {0} myValue: {1}&quot;, myInt, myArgs[ myInt ] );\n         }\n      }\n\n      Console::WriteLine( &quot;myUrl1 {0} object URI{1}&quot;, myUrl, myObjectURI );\n      myDictionary-&gt;default[ &quot;__Uri&quot; ] = myUrl;\n      Console::WriteLine( &quot;URI {0}&quot;, myDictionary-&gt;default[ &quot;__URI&quot; ] );\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Messaging.IMessage.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Messaging.IMessage.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMessage\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Messaging.IMessage.Properties\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5235ccfe-00da-cb01-c96e-d76f1ff47911\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains communication data sent between cooperating message sinks.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting.Messaging/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Messaging.IMessage\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Messaging.IMessage.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Messaging.IMessage.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.Messaging.IMessage","System.Runtime.Remoting.Messaging.IMessage.Properties"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Messaging.IMessage","System::Runtime::Remoting::Messaging::IMessage","System.Runtime.Remoting.Messaging.IMessage.Properties","System::Runtime::Remoting::Messaging::IMessage::Properties"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5235ccfe-00da-cb01-c96e-d76f1ff47911","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting.Messaging/IMessage.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IMessage interface | Microsoft Docs","_op_ogTitle":"IMessage interface","description":"Contains communication data sent between cooperating message sinks.\n","toc_asset_id":"_splitted/System.Runtime.Remoting.Messaging/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Messaging/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Messaging.IMessage","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.messaging.imessage","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.messaging.imessage","fileRelativePath":"System.Runtime.Remoting.Messaging.IMessage.html"},"themesRelativePathToOutputRoot":"_themes/"}