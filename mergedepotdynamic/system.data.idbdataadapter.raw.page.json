{"content":"    \r\n    <h1 id=\"System_Data_IDbDataAdapter\">\r\n      <span class=\"lang-csharp\">IDbDataAdapter</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a set of command-related properties that are used to fill the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IDbDataAdapter : System.Data.IDataAdapter</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IDbDataAdapter interface inherits from the <a class=\"xref\" href=\"system.data.idataadapter\" data-linktype=\"relative-path\">IDataAdapter</a> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information about DataAdapter classes, see <a href=\"../Topic/Populating%20a%20DataSet%20from%20a%20DataAdapter.md\" data-linktype=\"relative-path\">Populating a DataSet from a DataAdapter</a>. For more information about implementing .NET Framework data providers, see <a href=\"http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852\" data-linktype=\"external\">&#91;&lt;topic://cpconimplementingnetdataprovider&gt;&#93;</a>.  </p>\n<p> An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a>.  </p>\n<p> Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <a class=\"xref\" href=\"system.data.idbdataadapter#System_Data_IDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property, and the <a class=\"xref\" href=\"system.data.common.dbdataadapter\" data-linktype=\"relative-path\">DbDataAdapter</a> interface defines a <a class=\"xref\" href=\"system.data.idataadapter#System_Data_IDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method that takes a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> as a parameter. In turn, the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter\" data-linktype=\"relative-path\">OleDbDataAdapter</a> class inherits the <a class=\"xref\" href=\"system.data.idbdataadapter#System_Data_IDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> property and the <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method, and also defines two additional overloads of the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_Fill_\" data-linktype=\"relative-path\">Fill</a> method that take an ADO Recordset object as a parameter.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbDataAdapter_DeleteCommand\" data-linktype=\"self-bookmark\">DeleteCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an SQL statement for deleting records from the data set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbDataAdapter_InsertCommand\" data-linktype=\"self-bookmark\">InsertCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an SQL statement used to insert new records into the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbDataAdapter_SelectCommand\" data-linktype=\"self-bookmark\">SelectCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an SQL statement used to select records in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_IDbDataAdapter_UpdateCommand\" data-linktype=\"self-bookmark\">UpdateCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an SQL statement used to update records in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbDataAdapter_DeleteCommand\">\r\n    \r\n            <a id=\"System_Data_IDbDataAdapter_DeleteCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an SQL statement for deleting records from the data set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.IDbCommand DeleteCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to delete records in the data source for deleted rows in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the DeleteCommand can be generated automatically if you set the <code>SelectCommand</code> property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information see <a href=\"../Topic/Generating%20Commands%20with%20CommandBuilders.md\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When DeleteCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The DeleteCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of the inherited <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter\" data-linktype=\"relative-path\">OleDbDataAdapter</a> class, and sets the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> and <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a> properties. It assumes you have already created an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DbDataAdapter.DeleteCommand Example#1\">    public static OleDbDataAdapter CreateCustomerAdapter(\n        OleDbConnection connection)\n    {\n        OleDbDataAdapter dataAdapter = new OleDbDataAdapter();\n        OleDbCommand command;\n        OleDbParameter parameter;\n\n        // Create the SelectCommand.\n        command = new OleDbCommand(&quot;SELECT CustomerID FROM Customers &quot; +\n            &quot;WHERE Country = ? AND City = ?&quot;, connection);\n\n        command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15);\n        command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15);\n\n        dataAdapter.SelectCommand = command;\n\n        // Create the DeleteCommand.\n        command = new OleDbCommand(\n            &quot;DELETE * FROM Customers WHERE CustomerID = ?&quot;, \n            connection);\n\n        parameter = command.Parameters.Add(\n            &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;);\n        parameter.SourceVersion = DataRowVersion.Original;\n\n        dataAdapter.DeleteCommand = command;\n\n        return dataAdapter;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DbDataAdapter.DeleteCommand Example#1\">Public Shared Function CreateCustomerAdapter( _\n    connection As OleDbConnection) As OleDbDataAdapter \n\n    Dim dataAdapter As OleDbDataAdapter = New OleDbDataAdapter()\n    Dim command As OleDbCommand\n    Dim parameter As OleDbParameter\n\n    &#39; Create the SelectCommand.\n    command = New OleDbCommand(&quot;SELECT CustomerID FROM Customers &quot; &amp; _\n        &quot;WHERE Country = ? AND City = ?&quot;, connection)\n\n    command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15)\n    command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15)\n\n    dataAdapter.SelectCommand = command\n\n    &#39; Create the DeleteCommand.\n    command = New OleDbCommand( _\n        &quot;DELETE * FROM Customers WHERE CustomerID = ?&quot;, _\n        connection)\n\n    parameter = command.Parameters.Add( _\n        &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;)\n    parameter.SourceVersion = DataRowVersion.Original\n\n    dataAdapter.DeleteCommand = command\n\n    Return dataAdapter\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbDataAdapter_InsertCommand\">\r\n    \r\n            <a id=\"System_Data_IDbDataAdapter_InsertCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an SQL statement used to insert new records into the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.IDbCommand InsertCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to insert records in the data source for new rows in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the InsertCommand can be generated automatically if you set the <code>SelectCommand</code> property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information see <a href=\"../Topic/Generating%20Commands%20with%20CommandBuilders.md\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When InsertCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The InsertCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If execution of this command returns rows, these rows may be added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> depending on how you set the <a class=\"xref\" href=\"system.data.idbcommand#System_Data_IDbCommand_UpdatedRowSource_\" data-linktype=\"relative-path\">UpdatedRowSource</a> property of the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of the inherited <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter\" data-linktype=\"relative-path\">OleDbDataAdapter</a> class, and sets the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> and <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a> properties. It assumes you have already created an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DbDataAdapter.InsertCommand Example#1\">    public static OleDbDataAdapter CreateCustomerAdapter(\n        OleDbConnection connection)\n    {\n        OleDbDataAdapter adapter = new OleDbDataAdapter();\n        OleDbCommand command;\n\n        // Create the SelectCommand.\n        command = new OleDbCommand(&quot;SELECT CustomerID FROM Customers &quot; +\n            &quot;WHERE Country = ? AND City = ?&quot;, connection);\n\n        command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15);\n        command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15);\n\n        adapter.SelectCommand = command;\n\n        // Create the InsertCommand.\n        command = new OleDbCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (?, ?)&quot;, connection);\n\n        command.Parameters.Add(\n            &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(\n            &quot;CompanyName&quot;, OleDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.InsertCommand = command;\n        return adapter;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DbDataAdapter.InsertCommand Example#1\">Public Shared Function CreateCustomerAdapter( _\n    connection As OleDbConnection) As OleDbDataAdapter \n  \n    Dim adapter As OleDbDataAdapter = New OleDbDataAdapter()\n    Dim command As OleDbCommand\n\n    &#39; Create the SelectCommand.\n    command = New OleDbCommand(&quot;SELECT CustomerID FROM Customers &quot; &amp; _\n        &quot;WHERE Country = ? AND City = ?&quot;, connection)\n\n    command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15)\n    command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15)\n\n    adapter.SelectCommand = command\n\n    &#39; Create the InsertCommand.\n    command = New OleDbCommand( _\n        &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n        &quot;VALUES (?, ?)&quot;, connection)\n\n    command.Parameters.Add( _\n        &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;)\n    command.Parameters.Add( _\n        &quot;CompanyName&quot;, OleDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n    adapter.InsertCommand = command\n    Return adapter\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbDataAdapter_SelectCommand\">\r\n    \r\n            <a id=\"System_Data_IDbDataAdapter_SelectCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an SQL statement used to select records in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.IDbCommand SelectCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> that is used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to select records from data source for placement in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When SelectCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The SelectCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.  </p>\n<p> If the SelectCommand does not return any rows, no tables are added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, and no exception is raised.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of the inherited <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter\" data-linktype=\"relative-path\">OleDbDataAdapter</a> class, and sets the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> and <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a> properties. It assumes you have already created an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData DbDataAdapter.SelectCommand Example#1\">    public static OleDbDataAdapter CreateCustomerAdapter(\n        OleDbConnection connection)\n    {\n        OleDbDataAdapter adapter = new OleDbDataAdapter();\n        OleDbCommand command;\n\n        // Create the SelectCommand.\n        command = new OleDbCommand(&quot;SELECT * FROM Customers &quot; +\n            &quot;WHERE Country = ? AND City = ?&quot;, connection);\n\n        command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15);\n        command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15);\n\n        adapter.SelectCommand = command;\n\n        // Create the InsertCommand.\n        command = new OleDbCommand(\n            &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; +\n            &quot;VALUES (?, ?)&quot;, connection);\n\n        command.Parameters.Add(\n            &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;);\n        command.Parameters.Add(\n            &quot;CompanyName&quot;, OleDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n        adapter.InsertCommand = command;\n        return adapter;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData DbDataAdapter.SelectCommand Example#1\">Public Shared Function CreateCustomerAdapter( _\n    connection As OleDbConnection) As OleDbDataAdapter \n\n    Dim adapter As OleDbDataAdapter = New OleDbDataAdapter()\n    Dim command As OleDbCommand\n\n    &#39; Create the SelectCommand.\n    command = New OleDbCommand(&quot;SELECT * FROM Customers &quot; &amp; _\n        &quot;WHERE Country = ? AND City = ?&quot;, connection)\n\n    command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15)\n    command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15)\n\n    adapter.SelectCommand = command\n\n    &#39; Create the InsertCommand.\n    command = New OleDbCommand( _\n        &quot;INSERT INTO Customers (CustomerID, CompanyName) &quot; &amp; _\n        &quot;VALUES (?, ?)&quot;, connection)\n\n    command.Parameters.Add( _\n        &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;)\n    command.Parameters.Add( _\n        &quot;CompanyName&quot;, OleDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n    adapter.InsertCommand = command\n    Return adapter\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_IDbDataAdapter_UpdateCommand\">\r\n    \r\n            <a id=\"System_Data_IDbDataAdapter_UpdateCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateCommand</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an SQL statement used to update records in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.IDbCommand UpdateCommand { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> used during <span class=\"xref\">stem.Data.Common.DbDataAdapter.Update*</span> to update records in the data source for modified rows in the data set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>During <a class=\"xref\" href=\"system.data.common.dbdataadapter#System_Data_Common_DbDataAdapter_Update_\" data-linktype=\"relative-path\">Update</a>, if this property is not set and primary key information is present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the UpdateCommand can be generated automatically if you set the <code>SelectCommand</code> property of a .NET Framework data provider. Then, any additional commands that you do not set are generated by the CommandBuilder. This generation logic requires key column information to be present in the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>. For more information see <a href=\"../Topic/Generating%20Commands%20with%20CommandBuilders.md\" data-linktype=\"relative-path\">Generating Commands with CommandBuilders</a>.  </p>\n<p> When UpdateCommand is assigned to a previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a>, the <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> is not cloned. The UpdateCommand maintains a reference to the previously created <a class=\"xref\" href=\"system.data.idbcommand\" data-linktype=\"relative-path\">IDbCommand</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If execution of this command returns rows, these rows are added to the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of the inherited <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter\" data-linktype=\"relative-path\">OleDbDataAdapter</a> class, and sets the <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_SelectCommand_\" data-linktype=\"relative-path\">SelectCommand</a> and <a class=\"xref\" href=\"system.data.oledb.oledbdataadapter#System_Data_OleDb_OleDbDataAdapter_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a> properties. It assumes you have already created an <a class=\"xref\" href=\"system.data.oledb.oledbconnection\" data-linktype=\"relative-path\">OleDbConnection</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData OleDbDataAdapter.UpdateCommand Example#1\">        private static OleDbDataAdapter CreateCustomerAdapter(\n            OleDbConnection connection)\n        {\n            OleDbDataAdapter dataAdapter = new OleDbDataAdapter();\n            OleDbCommand command;\n            OleDbParameter parameter;\n\n            // Create the SelectCommand.\n            command = new OleDbCommand(&quot;SELECT * FROM dbo.Customers &quot; +\n                &quot;WHERE Country = ? AND City = ?&quot;, connection);\n\n            command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15);\n            command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15);\n\n            dataAdapter.SelectCommand = command;\n\n            // Create the UpdateCommand.\n            command = new OleDbCommand(\n                &quot;UPDATE dbo.Customers SET CustomerID = ?, CompanyName = ? &quot; +\n                &quot;WHERE CustomerID = ?&quot;, connection);\n\n            command.Parameters.Add(\n                &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;);\n            command.Parameters.Add(\n                &quot;CompanyName&quot;, OleDbType.VarChar, 40, &quot;CompanyName&quot;);\n\n            parameter = command.Parameters.Add(\n                &quot;oldCustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;);\n            parameter.SourceVersion = DataRowVersion.Original;\n\n            dataAdapter.UpdateCommand = command;\n\n            return dataAdapter;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData OleDbDataAdapter.UpdateCommand Example#1\">    Private Function CreateCustomerAdapter( _\n        ByVal connection As OleDbConnection) As OleDbDataAdapter\n\n        Dim dataAdapter As OleDbDataAdapter = New OleDbDataAdapter()\n        Dim command As OleDbCommand\n        Dim parameter As OleDbParameter\n\n        &#39; Create the SelectCommand.\n        command = New OleDbCommand(&quot;SELECT * FROM dbo.Customers &quot; &amp; _\n            &quot;WHERE Country = ? AND City = ?&quot;, connection)\n\n        command.Parameters.Add(&quot;Country&quot;, OleDbType.VarChar, 15)\n        command.Parameters.Add(&quot;City&quot;, OleDbType.VarChar, 15)\n\n        dataAdapter.SelectCommand = command\n\n        &#39; Create the UpdateCommand.\n        command = New OleDbCommand(&quot;UPDATE dbo.Customers &quot; &amp; _\n            &quot;SET CustomerID = ?, CompanyName = ? &quot; &amp; _\n            &quot;WHERE CustomerID = ?&quot;, connection)\n\n        command.Parameters.Add( _\n            &quot;CustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;)\n        command.Parameters.Add( _\n            &quot;CompanyName&quot;, OleDbType.VarChar, 40, &quot;CompanyName&quot;)\n\n        parameter = command.Parameters.Add( _\n            &quot;oldCustomerID&quot;, OleDbType.Char, 5, &quot;CustomerID&quot;)\n        parameter.SourceVersion = DataRowVersion.Original\n\n        dataAdapter.UpdateCommand = command\n\n        Return dataAdapter\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.IDbDataAdapter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.IDbDataAdapter.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.DeleteCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.InsertCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.SelectCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.IDbDataAdapter.UpdateCommand\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"252d8d5a-2264-1ffe-478f-83512c004508\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a set of command-related properties that are used to fill the  and update a data source, and is implemented by .NET Framework data providers that access relational databases.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.IDbDataAdapter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.IDbDataAdapter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.IDbDataAdapter.yml","open_to_public_contributors":true,"api_name":["System.Data.IDbDataAdapter","System.Data.IDbDataAdapter.DeleteCommand","System.Data.IDbDataAdapter.InsertCommand","System.Data.IDbDataAdapter.SelectCommand","System.Data.IDbDataAdapter.UpdateCommand"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.IDbDataAdapter","System::Data::IDbDataAdapter","System.Data.IDbDataAdapter.DeleteCommand","System::Data::IDbDataAdapter::DeleteCommand","System.Data.IDbDataAdapter.InsertCommand","System::Data::IDbDataAdapter::InsertCommand","System.Data.IDbDataAdapter.SelectCommand","System::Data::IDbDataAdapter::SelectCommand","System.Data.IDbDataAdapter.UpdateCommand","System::Data::IDbDataAdapter::UpdateCommand"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"252d8d5a-2264-1ffe-478f-83512c004508","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data/IDbDataAdapter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDbDataAdapter interface | Microsoft Docs","_op_ogTitle":"IDbDataAdapter interface","description":"Represents a set of command-related properties that are used to fill the  and update a data source, and is implemented by .NET Framework data providers that access relational databases.\n","toc_asset_id":"_splitted/System.Data/toc.json","toc_rel":"_splitted/System.Data/toc.json","source_url":"","ms.assetid":"System.Data.IDbDataAdapter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.idbdataadapter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.idbdataadapter","fileRelativePath":"System.Data.IDbDataAdapter.html"},"themesRelativePathToOutputRoot":"_themes/"}