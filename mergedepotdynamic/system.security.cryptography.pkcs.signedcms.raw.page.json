{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_Pkcs_SignedCms\">\r\n      <span class=\"lang-csharp\">SignedCms</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The SignedCms class enables signing and verifying of CMS/PKCS #7 messages.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class SignedCms</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SignedCms</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The Cryptographic Message Syntax RFC specifies the following MIME types and file name extensions for CMS/PKCS #7 messages with these content types.  </p>\n<table>\n<thead>\n<tr>\n<th>Content type</th>\n<th>MIME type</th>\n<th>Extension</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>envelopedData</td>\n<td>application/pkcs7-mime</td>\n<td>.p7m</td>\n</tr>\n<tr>\n<td>signedData</td>\n<td>application/pkcs7-signature</td>\n<td>.p7s.p7c</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms__ctor\" data-linktype=\"self-bookmark\">SignedCms()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_ContentInfo_\" data-linktype=\"self-bookmark\">SignedCms(ContentInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified content information as the inner content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_SubjectIdentifierType_\" data-linktype=\"self-bookmark\">SignedCms(SubjectIdentifierType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified subject identifier type as the default subject identifier type for signers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_ContentInfo_System_Boolean_\" data-linktype=\"self-bookmark\">SignedCms(ContentInfo,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified content information as the inner content and by using the detached state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_SubjectIdentifierType_System_Security_Cryptography_Pkcs_ContentInfo_\" data-linktype=\"self-bookmark\">SignedCms(SubjectIdentifierType,ContentInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified subject identifier type as the default subject identifier type for signers and content information as the inner content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_SubjectIdentifierType_System_Security_Cryptography_Pkcs_ContentInfo_System_Boolean_\" data-linktype=\"self-bookmark\">SignedCms(SubjectIdentifierType,ContentInfo,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified subject identifier type as the default subject identifier type for signers, the content information as the inner content, and by using the detached state.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_Certificates\" data-linktype=\"self-bookmark\">Certificates</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The Certificates property retrieves the certificates associated with the encoded CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_ContentInfo\" data-linktype=\"self-bookmark\">ContentInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The ContentInfo property retrieves the inner contents of the encoded CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_Detached\" data-linktype=\"self-bookmark\">Detached</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The Detached property retrieves whether the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object is for a detached signature.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_SignerInfos\" data-linktype=\"self-bookmark\">SignerInfos</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The SignerInfos property retrieves the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfocollection\" data-linktype=\"relative-path\">SignerInfoCollection</a> collection associated with the CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_Version\" data-linktype=\"self-bookmark\">Version</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The Version property retrieves the version of the CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_CheckHash\" data-linktype=\"self-bookmark\">CheckHash()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The CheckHash method verifies the data integrity of the CMS/PKCS #7 message. CheckHash is a specialized method used in specific security infrastructure applications that only wish to check the hash of the CMS message, rather than perform a full digital signature verification. CheckHash does not authenticate the author nor sender of the message because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of a CMS/PKCS #7 message, use the <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)</span> or <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)</span> methods.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_CheckSignature_System_Boolean_\" data-linktype=\"self-bookmark\">CheckSignature(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers&#39; certificates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_CheckSignature_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_System_Boolean_\" data-linktype=\"self-bookmark\">CheckSignature(X509Certificate2Collection,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers&#39; certificates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature\" data-linktype=\"self-bookmark\">ComputeSignature()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The ComputeSignature method prompts the user to select a signing certificate, creates a signature, and adds the signature to the CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_System_Security_Cryptography_Pkcs_CmsSigner_\" data-linktype=\"self-bookmark\">ComputeSignature(CmsSigner)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The ComputeSignature method creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_System_Security_Cryptography_Pkcs_CmsSigner_System_Boolean_\" data-linktype=\"self-bookmark\">ComputeSignature(CmsSigner,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message. If the value of the silent parameter is <code>false</code> and the <span class=\"xref\">stem.Security.Cryptography.Pkcs.CmsSigner.Certificate*</span> property of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.cmssigner\" data-linktype=\"relative-path\">CmsSigner</a> object specified by the signer parameter is not set to a valid certificate, this method prompts the user to select a signing certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_Decode_System_Byte___\" data-linktype=\"self-bookmark\">Decode(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The Decode method decodes an encoded <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. Upon successful decoding, the decoded information can be retrieved from the properties of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_Encode\" data-linktype=\"self-bookmark\">Encode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The Encode method encodes the information in the object into a CMS/PKCS #7 message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_RemoveSignature_System_Int32_\" data-linktype=\"self-bookmark\">RemoveSignature(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the signature at the specified index of the <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.SignerInfos*</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Pkcs_SignedCms_RemoveSignature_System_Security_Cryptography_Pkcs_SignerInfo_\" data-linktype=\"self-bookmark\">RemoveSignature(SignerInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The RemoveSignature method removes the signature for the specified <a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfo\" data-linktype=\"relative-path\">SignerInfo</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignedCms()</div>        \r\n          </div>\r\n    \r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SignedCms ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class has the following default property values.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms#System_Security_Cryptography_Pkcs_SignedCms_ContentInfo_\" data-linktype=\"relative-path\">ContentInfo</a></td>\n<td>1.2.840.113549.1.7.1 (data)Length: zero</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms#System_Security_Cryptography_Pkcs_SignedCms_Detached_\" data-linktype=\"relative-path\">Detached</a></td>\n<td>Detached state: <code>false</code> The content that is signed is included in the CMS/PKCS #7 message along with the signature information.</td>\n</tr>\n</tbody>\n</table>\n<p> The default <a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a> for signers is SubjectIdentifierType.IssuerAndSerialNumber.  </p>\n<p> If the detached state is <code>false</code> (the default), the signed content is included in the CMS/PKCS #7 message along with the signature information. If the detached state is <code>true</code>, clients that cannot decode S/MIME messages can still see the content of the message if it is sent separately. This may be useful in an archiving application that archives message content whether the message sender can be verified for authenticity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_ContentInfo_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignedCms(ContentInfo)</div>        \r\n          </div>\r\n    \r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified content information as the inner content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a> object that specifies the content information as the inner content of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the default property values used with this constructor, see <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms#System_Security_Cryptography_Pkcs_SignedCms__ctor\" data-linktype=\"relative-path\">SignedCms()</a>.  </p>\n<p> If the detached state is <code>false</code> (the default), the content that is signed is included in the CMS/PKCS #7 message along with the signature information. If the detached state is <code>true</code>, clients that cannot decode S/MIME messages can still see the content of the message if it is sent separately. This might be useful in an archiving application that archives message content whether the message sender can be verified for authenticity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_SubjectIdentifierType_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignedCms(SubjectIdentifierType)</div>        \r\n          </div>\r\n    \r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified subject identifier type as the default subject identifier type for signers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signerIdentifierType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a> member that specifies the default subject identifier type for signers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the default property values used with this constructor, see <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms#System_Security_Cryptography_Pkcs_SignedCms__ctor\" data-linktype=\"relative-path\">SignedCms()</a>.  </p>\n<p> If the detached state is <code>false</code> (the default), the content that is signed is included in the CMS/PKCS #7 message along with the signature information. If the detached state is <code>true</code>, clients that cannot decode S/MIME messages can still see the content of the message if it is sent separately. This might be useful in an archiving application that archives message content whether the message sender can be verified for authenticity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_ContentInfo_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignedCms(ContentInfo,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified content information as the inner content and by using the detached state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a> object that specifies the content information as the inner content of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>detached</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object is for a detached signature. If <code>detached</code> is <code>true</code>, the signature is detached. If <code>detached</code> is <code>false</code>, the signature is not detached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the default property values used with this constructor, see <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms#System_Security_Cryptography_Pkcs_SignedCms__ctor\" data-linktype=\"relative-path\">SignedCms()</a>.  </p>\n<p> If the detached state is <code>false</code> (the default), the content that is signed is included in the CMS/PKCS #7 message along with the signature information. If the detached state is <code>true</code>, clients that cannot decode S/MIME messages can still see the content of the message if it is sent separately. This might be useful in an archiving application that archives message content whether the message sender can be verified for authenticity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_SubjectIdentifierType_System_Security_Cryptography_Pkcs_ContentInfo_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignedCms(SubjectIdentifierType,ContentInfo)</div>        \r\n          </div>\r\n    \r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified subject identifier type as the default subject identifier type for signers and content information as the inner content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signerIdentifierType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a> member that specifies the default subject identifier type for signers.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a> object that specifies the content information as the inner content of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the default property values used with this constructor, see <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms#System_Security_Cryptography_Pkcs_SignedCms__ctor\" data-linktype=\"relative-path\">SignedCms()</a>.  </p>\n<p> If the detached state is <code>false</code> (the default), the content that is signed is included in the CMS/PKCS #7 message along with the signature information. If the detached state is <code>true</code>, clients that cannot decode S/MIME messages can still see the content of the message if it is sent separately. This might be useful in an archiving application that archives message content whether the message sender can be verified for authenticity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_System_Security_Cryptography_Pkcs_SubjectIdentifierType_System_Security_Cryptography_Pkcs_ContentInfo_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignedCms(SubjectIdentifierType,ContentInfo,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>The SignedCms constructor creates an instance of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> class by using the specified subject identifier type as the default subject identifier type for signers, the content information as the inner content, and by using the detached state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signerIdentifierType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.subjectidentifiertype\" data-linktype=\"relative-path\">SubjectIdentifierType</a> member that specifies the default subject identifier type for signers.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a> object that specifies the content information as the inner content of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>detached</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object is for a detached signature. If <code>detached</code> is <code>true</code>, the signature is detached. If detached is <code>false</code>, the signature is not detached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the detached state is <code>false</code> (the default), the content that is signed is included in the CMS/PKCS #7 message along with the signature information. If the detached state is <code>true</code>, clients that cannot decode S/MIME messages can still see the content of the message if it is sent separately. This may be useful in an archiving application that archives message content whether or not the message sender can be verified for authenticity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_Certificates\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_Certificates_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Certificates</div>        \r\n          </div>\r\n    \r\n            <p>The Certificates property retrieves the certificates associated with the encoded CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a> collection that represents the set of certificates for the encoded CMS/PKCS #7 message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_ContentInfo\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_ContentInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentInfo</div>        \r\n          </div>\r\n    \r\n            <p>The ContentInfo property retrieves the inner contents of the encoded CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.contentinfo\" data-linktype=\"relative-path\">ContentInfo</a> object that represents the contents of the encoded CMS/PKCS #7 message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_Detached\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_Detached_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Detached</div>        \r\n          </div>\r\n    \r\n            <p>The Detached property retrieves whether the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object is for a detached signature.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Detached { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object is for a detached signature. If this property is <code>true</code>, the signature is detached. If this property is <code>false</code>, the signature is not detached.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_SignerInfos\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_SignerInfos_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignerInfos</div>        \r\n          </div>\r\n    \r\n            <p>The SignerInfos property retrieves the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfocollection\" data-linktype=\"relative-path\">SignerInfoCollection</a> collection associated with the CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfocollection\" data-linktype=\"relative-path\">SignerInfoCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfocollection\" data-linktype=\"relative-path\">SignerInfoCollection</a> object that represents the signer information for the CMS/PKCS #7 message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_Version\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_Version_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Version</div>        \r\n          </div>\r\n    \r\n            <p>The Version property retrieves the version of the CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Version { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An int value that represents the CMS/PKCS #7 message version.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The version determines whether the message is a PKCS #7 message or a Cryptographic Message Syntax (CMS) message. CMS is a newer superset of PKCS #7.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_CheckHash\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_CheckHash_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckHash()</div>        \r\n          </div>\r\n    \r\n            <p>The CheckHash method verifies the data integrity of the CMS/PKCS #7 message. CheckHash is a specialized method used in specific security infrastructure applications that only wish to check the hash of the CMS message, rather than perform a full digital signature verification. CheckHash does not authenticate the author nor sender of the message because this method does not involve verifying a digital signature. For general-purpose checking of the integrity and authenticity of a CMS/PKCS #7 message, use the <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)</span> or <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)</span> methods.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CheckHash ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A method call was invalid for the object&#39;s current state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method does not provide authentication of the CMS/PKCS #7 message.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_CheckSignature_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_CheckSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckSignature(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers&#39; certificates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CheckSignature (bool verifySignatureOnly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>verifySignatureOnly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether only the digital signatures are verified without the signers&#39; certificates being validated.  </p>\n<p> If <code>verifySignatureOnly</code> is <code>true</code>, only the digital signatures are verified. If it is <code>false</code>, the digital signatures are verified, the signers&#39; certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A method call was invalid for the object&#39;s current state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method verifies all signatures, including countersignatures, on the CMS/PKCS #7 message. If there are signed attributes included with the message, these attributes are also verified. If the option is chosen to validate certificates, the entire included portion of the certificate chain is validated.  </p>\n<p> This method throws an exception if the verification of a digital signature fails or any validation requirements are not met.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. In this example, the message content is not detached. The message content is included in the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#1\">        &#39; Create a new, nondetached SignedCms message.\n        Dim signedCms As New SignedCms()\n\n        &#39; encodedMessage is the encoded message received from \n        &#39; the sender.\n        signedCms.Decode(encodedMessage)\n\n        &#39; Verify the signature without validating the \n        &#39; certificate.\n        signedCms.CheckSignature(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#1\">// Create a new, nondetached SignedCms message.\nSignedCms signedCms = new SignedCms();\n\n// encodedMessage is the encoded message received from \n// the sender.\nsignedCms.Decode(encodedMessage);\n\n// Verify the signature without validating the \n// certificate.\nsignedCms.CheckSignature(true);\n</code></pre><p> The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. In this example, the message content is detached, so the message content must verified independently of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#2\">        &#39; Create a ContentInfo object from the inner content obtained \n        &#39; independently from encodedMessage.\n        Dim contentInfo As New ContentInfo(innerContent)\n\n        &#39; Create a new, detached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo, True)\n\n        &#39; encodedMessage is the encoded message received from \n        &#39; the sender.\n        signedCms.Decode(encodedMessage)\n\n        &#39; Verify the signature without validating the \n        &#39; certificate.\n        signedCms.CheckSignature(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#2\">// Create a ContentInfo object from the inner content obtained \n// independently from encodedMessage.\nContentInfo contentInfo = new ContentInfo(innerContent);\n\n// Create a new, detached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo, true);\n\n// encodedMessage is the encoded message received from \n// the sender.\nsignedCms.Decode(encodedMessage);\n\n// Verify the signature without validating the \n// certificate.\nsignedCms.CheckSignature(true);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_CheckSignature_System_Security_Cryptography_X509Certificates_X509Certificate2Collection_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_CheckSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckSignature(X509Certificate2Collection,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers&#39; certificates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>extraStore</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2collection\" data-linktype=\"relative-path\">X509Certificate2Collection</a> object that can be used to validate the certificate chain. If no additional certificates are to be used to validate the certificate chain, use <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)</span> instead of CheckSignature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>verifySignatureOnly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether only the digital signatures are verified without the signers&#39; certificates being validated.  </p>\n<p> If <code>verifySignatureOnly</code> is <code>true</code>, only the digital signatures are verified. If it is <code>false</code>, the digital signatures are verified, the signers&#39; certificates are validated, and the purposes of the certificates are validated. The purposes of a certificate are considered valid if the certificate has no key usage or if the key usage supports digital signatures or nonrepudiation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A method call was invalid for the object&#39;s current state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method verifies all signatures, including countersignatures, on the CMS/PKCS #7 message. If there are signed attributes included with the message, these attributes are also verified. If the option is chosen to validate certificates, the entire included portion of the certificate chain is validated.  </p>\n<p> This method throws an exception if the verification of a digital signature fails or any validation requirements are not met.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. In this example, the message content is not detached, so the message content is included in the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#1\">        &#39; Create a new, nondetached SignedCms message.\n        Dim signedCms As New SignedCms()\n\n        &#39; encodedMessage is the encoded message received from \n        &#39; the sender.\n        signedCms.Decode(encodedMessage)\n\n        &#39; Verify the signature without validating the \n        &#39; certificate.\n        signedCms.CheckSignature(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#1\">// Create a new, nondetached SignedCms message.\nSignedCms signedCms = new SignedCms();\n\n// encodedMessage is the encoded message received from \n// the sender.\nsignedCms.Decode(encodedMessage);\n\n// Verify the signature without validating the \n// certificate.\nsignedCms.CheckSignature(true);\n</code></pre><p> The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. In this example, the message content is detached, so the message content must be verified independently of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#2\">        &#39; Create a ContentInfo object from the inner content obtained \n        &#39; independently from encodedMessage.\n        Dim contentInfo As New ContentInfo(innerContent)\n\n        &#39; Create a new, detached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo, True)\n\n        &#39; encodedMessage is the encoded message received from \n        &#39; the sender.\n        signedCms.Decode(encodedMessage)\n\n        &#39; Verify the signature without validating the \n        &#39; certificate.\n        signedCms.CheckSignature(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#2\">// Create a ContentInfo object from the inner content obtained \n// independently from encodedMessage.\nContentInfo contentInfo = new ContentInfo(innerContent);\n\n// Create a new, detached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo, true);\n\n// encodedMessage is the encoded message received from \n// the sender.\nsignedCms.Decode(encodedMessage);\n\n// Verify the signature without validating the \n// certificate.\nsignedCms.CheckSignature(true);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ComputeSignature()</div>        \r\n          </div>\r\n    \r\n            <p>The ComputeSignature method prompts the user to select a signing certificate, creates a signature, and adds the signature to the CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ComputeSignature ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method displays a user interface in which you choose signers for this message. This requires that the current process is running in <em>user interactive mode</em>, meaning that the <a class=\"xref\" href=\"system.environment#System_Environment_UserInteractive_\" data-linktype=\"relative-path\">UserInteractive</a> property is set to <code>true</code>. A process is normally in user interactive mode unless it is a service process or running inside a Web application.  </p>\n<p> Signers whose certificates meet the following conditions will be displayed in the list:  </p>\n<ul>\n<li><p>The certificate has an associated private key.  </p>\n</li>\n<li><p>The certificate is within its validity period.  </p>\n</li>\n<li><p>The certificate has no key usage or a key usage that supports digital signatures or nonrepudiation.  </p>\n<p>Signer certificates are chosen from the My store.  </p>\n</li>\n</ul>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> The following permissions are required to display the user interface:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">System.Security.Permissions.UIPermissionWindow</a>  \n\n<p>The following permissions are required to access the signature key:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.security.permissions.keycontainerpermissionflags\" data-linktype=\"relative-path\">System.Security.Permissions.KeyContainerPermissionFlags</a>  \n</li>\n<li><a class=\"xref\" href=\"system.security.permissions.keycontainerpermissionflags\" data-linktype=\"relative-path\">System.Security.Permissions.KeyContainerPermissionFlags</a></li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the steps to compute a signature on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message with message content that is not detached. In this case, the message content is included in the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#3\">        &#39; The dataToSign byte array holds the data to be signed.\n        Dim contentInfo As New ContentInfo(dataToSign)\n\n        &#39; Create a new, nondetached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo)\n\n        &#39; Sign the message.\n        signedCms.ComputeSignature()\n\n        &#39; Encode the message.\n        Dim myCmsMessage As Byte() = signedCms.Encode()\n\n        &#39; The signed CMS/PKCS #7 message is ready to send.\n        &#39; The original content is included in this byte array.\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#3\">// The dataToSign byte array holds the data to be signed.\nContentInfo contentInfo = new ContentInfo(dataToSign);\n\n// Create a new, nondetached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo);\n\n// Sign the message.\nsignedCms.ComputeSignature();\n\n// Encode the message.\nbyte[] myCmsMessage = signedCms.Encode();\n\n// The signed CMS/PKCS #7 message is ready to send.\n// The original content is included in this byte array.\n</code></pre><p> The following example shows the steps to compute a signature on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message with message content that is detached. In this case, the message content must be verified independently of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#4\">        &#39; The dataToSign byte array holds the data to be signed.\n        Dim contentInfo As New ContentInfo(dataToSign)\n\n        &#39; Create a new, detached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo, True)\n\n        &#39; Sign the message.\n        signedCms.ComputeSignature()\n\n        &#39; Encode the message.\n        Dim myCmsMessage As Byte() = signedCms.Encode()\n\n        &#39; The signed CMS/PKCS #7 message is ready to send.\n        &#39; The original content is not included in this byte array.\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#4\">// The dataToSign byte array holds the data to be signed.\nContentInfo contentInfo = new ContentInfo(dataToSign);\n\n// Create a new, detached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo, true);\n\n// Sign the message.\nsignedCms.ComputeSignature();\n\n// Encode the message.\nbyte[] myCmsMessage = signedCms.Encode();\n\n// The signed CMS/PKCS #7 message is ready to send.\n// The original content is not included in this byte array.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_System_Security_Cryptography_Pkcs_CmsSigner_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ComputeSignature(CmsSigner)</div>        \r\n          </div>\r\n    \r\n            <p>The ComputeSignature method creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.cmssigner\" data-linktype=\"relative-path\">CmsSigner</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.cmssigner\" data-linktype=\"relative-path\">CmsSigner</a> object that represents the signer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> The following permissions are required to access the signature key:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.security.permissions.keycontainerpermissionflags\" data-linktype=\"relative-path\">System.Security.Permissions.KeyContainerPermissionFlags</a>  \n</li>\n<li><a class=\"xref\" href=\"system.security.permissions.keycontainerpermissionflags\" data-linktype=\"relative-path\">System.Security.Permissions.KeyContainerPermissionFlags</a></li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the steps to compute a signature on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message with message content that is not detached. In this case, the message content is included in the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#3\">        &#39; The dataToSign byte array holds the data to be signed.\n        Dim contentInfo As New ContentInfo(dataToSign)\n\n        &#39; Create a new, nondetached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo)\n\n        &#39; Sign the message.\n        signedCms.ComputeSignature()\n\n        &#39; Encode the message.\n        Dim myCmsMessage As Byte() = signedCms.Encode()\n\n        &#39; The signed CMS/PKCS #7 message is ready to send.\n        &#39; The original content is included in this byte array.\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#3\">// The dataToSign byte array holds the data to be signed.\nContentInfo contentInfo = new ContentInfo(dataToSign);\n\n// Create a new, nondetached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo);\n\n// Sign the message.\nsignedCms.ComputeSignature();\n\n// Encode the message.\nbyte[] myCmsMessage = signedCms.Encode();\n\n// The signed CMS/PKCS #7 message is ready to send.\n// The original content is included in this byte array.\n</code></pre><p> The following example shows the steps to compute a signature on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message with message content that is detached. In this case, the message content must be verified independently of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#4\">        &#39; The dataToSign byte array holds the data to be signed.\n        Dim contentInfo As New ContentInfo(dataToSign)\n\n        &#39; Create a new, detached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo, True)\n\n        &#39; Sign the message.\n        signedCms.ComputeSignature()\n\n        &#39; Encode the message.\n        Dim myCmsMessage As Byte() = signedCms.Encode()\n\n        &#39; The signed CMS/PKCS #7 message is ready to send.\n        &#39; The original content is not included in this byte array.\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#4\">// The dataToSign byte array holds the data to be signed.\nContentInfo contentInfo = new ContentInfo(dataToSign);\n\n// Create a new, detached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo, true);\n\n// Sign the message.\nsignedCms.ComputeSignature();\n\n// Encode the message.\nbyte[] myCmsMessage = signedCms.Encode();\n\n// The signed CMS/PKCS #7 message is ready to send.\n// The original content is not included in this byte array.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_System_Security_Cryptography_Pkcs_CmsSigner_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_ComputeSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ComputeSignature(CmsSigner,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a signature using the specified signer and adds the signature to the CMS/PKCS #7 message. If the value of the silent parameter is <code>false</code> and the <span class=\"xref\">stem.Security.Cryptography.Pkcs.CmsSigner.Certificate*</span> property of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.cmssigner\" data-linktype=\"relative-path\">CmsSigner</a> object specified by the signer parameter is not set to a valid certificate, this method prompts the user to select a signing certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.cmssigner\" data-linktype=\"relative-path\">CmsSigner</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.cmssigner\" data-linktype=\"relative-path\">CmsSigner</a> object that represents the signer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>silent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>false</code> to prompt the user to select a signing certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>silent</code> parameter is <code>true</code> and a signing certificate is not specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> The following permissions are required to display the user interface:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">System.Security.Permissions.UIPermissionWindow</a>  \n\n<p>The following permissions are required to access the signature key:  </p>\n</li>\n<li><a class=\"xref\" href=\"system.security.permissions.keycontainerpermissionflags\" data-linktype=\"relative-path\">System.Security.Permissions.KeyContainerPermissionFlags</a>  \n</li>\n<li><a class=\"xref\" href=\"system.security.permissions.keycontainerpermissionflags\" data-linktype=\"relative-path\">System.Security.Permissions.KeyContainerPermissionFlags</a></li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_Decode_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_Decode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Decode(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>The Decode method decodes an encoded <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. Upon successful decoding, the decoded information can be retrieved from the properties of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Decode (byte[] encodedMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>encodedMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Array of byte values that represents the encoded CMS/PKCS #7 message to be decoded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method resets all member variables of the object by using the information obtained from successful decoding.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows the placement of the Decode method in the process of verifying the signatures on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. In this example, the message content is not detached, so the message content is included in the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#1\">        &#39; Create a new, nondetached SignedCms message.\n        Dim signedCms As New SignedCms()\n\n        &#39; encodedMessage is the encoded message received from \n        &#39; the sender.\n        signedCms.Decode(encodedMessage)\n\n        &#39; Verify the signature without validating the \n        &#39; certificate.\n        signedCms.CheckSignature(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#1\">// Create a new, nondetached SignedCms message.\nSignedCms signedCms = new SignedCms();\n\n// encodedMessage is the encoded message received from \n// the sender.\nsignedCms.Decode(encodedMessage);\n\n// Verify the signature without validating the \n// certificate.\nsignedCms.CheckSignature(true);\n</code></pre><p> The following example shows the placement of the Decode method in the process of verifying the signatures on a <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message. In this example, the message content is detached, so the message content must be verified independently of the <a class=\"xref\" href=\"system.security.cryptography.pkcs.signedcms\" data-linktype=\"relative-path\">SignedCms</a> message.  </p>\n<pre><code class=\"lang-vb\" name=\"mpkcs_SignedCMS#2\">        &#39; Create a ContentInfo object from the inner content obtained \n        &#39; independently from encodedMessage.\n        Dim contentInfo As New ContentInfo(innerContent)\n\n        &#39; Create a new, detached SignedCms message.\n        Dim signedCms As New SignedCms(contentInfo, True)\n\n        &#39; encodedMessage is the encoded message received from \n        &#39; the sender.\n        signedCms.Decode(encodedMessage)\n\n        &#39; Verify the signature without validating the \n        &#39; certificate.\n        signedCms.CheckSignature(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"mpkcs_SignedCMS#2\">// Create a ContentInfo object from the inner content obtained \n// independently from encodedMessage.\nContentInfo contentInfo = new ContentInfo(innerContent);\n\n// Create a new, detached SignedCms message.\nSignedCms signedCms = new SignedCms(contentInfo, true);\n\n// encodedMessage is the encoded message received from \n// the sender.\nsignedCms.Decode(encodedMessage);\n\n// Verify the signature without validating the \n// certificate.\nsignedCms.CheckSignature(true);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_Encode\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_Encode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encode()</div>        \r\n          </div>\r\n    \r\n            <p>The Encode method encodes the information in the object into a CMS/PKCS #7 message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] Encode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>An array of byte values that represents the encoded message. The encoded message can be decoded by the <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.Decode*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A method call was invalid for the object&#39;s current state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_RemoveSignature_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_RemoveSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveSignature(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the signature at the specified index of the <span class=\"xref\">stem.Security.Cryptography.Pkcs.SignedCms.SignerInfos*</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveSignature (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the signature to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A CMS/PKCS #7 message is not signed, and <code>index</code> is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> <code>index</code> is greater than the signature count minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The signature could not be removed.  </p>\n<p> -or-  </p>\n<p> An internal cryptographic error occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Pkcs_SignedCms_RemoveSignature_System_Security_Cryptography_Pkcs_SignerInfo_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Pkcs_SignedCms_RemoveSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveSignature(SignerInfo)</div>        \r\n          </div>\r\n    \r\n            <p>The RemoveSignature method removes the signature for the specified <a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfo\" data-linktype=\"relative-path\">SignerInfo</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signerInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfo\" data-linktype=\"relative-path\">SignerInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.pkcs.signerinfo\" data-linktype=\"relative-path\">SignerInfo</a> object that represents the countersignature being removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>A null reference was passed to a method that does not accept it as a valid argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of an argument was outside the allowable range of values as defined by the called method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A cryptographic operation could not be completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Pkcs.SignedCms.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Pkcs.SignedCms.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.Certificates\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.CheckHash\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.CheckSignature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.ContentInfo\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.Decode\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.Detached\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.Encode\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.SignerInfos\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Pkcs.SignedCms.Version\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d68ee29b-d600-188d-9279-7a9c7ca9b73d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The SignedCms class enables signing and verifying of CMS/PKCS #7 messages.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.Pkcs/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Pkcs.SignedCms\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Pkcs.SignedCms.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Pkcs.SignedCms.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.Pkcs.SignedCms","System.Security.Cryptography.Pkcs.SignedCms..ctor","System.Security.Cryptography.Pkcs.SignedCms.Certificates","System.Security.Cryptography.Pkcs.SignedCms.CheckHash","System.Security.Cryptography.Pkcs.SignedCms.CheckSignature","System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature","System.Security.Cryptography.Pkcs.SignedCms.ContentInfo","System.Security.Cryptography.Pkcs.SignedCms.Decode","System.Security.Cryptography.Pkcs.SignedCms.Detached","System.Security.Cryptography.Pkcs.SignedCms.Encode","System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature","System.Security.Cryptography.Pkcs.SignedCms.SignerInfos","System.Security.Cryptography.Pkcs.SignedCms.Version"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Pkcs.SignedCms","System::Security::Cryptography::Pkcs::SignedCms","System.Security.Cryptography.Pkcs.SignedCms.#ctor","System::Security::Cryptography::Pkcs::SignedCms::#ctor","System.Security.Cryptography.Pkcs.SignedCms.Certificates","System::Security::Cryptography::Pkcs::SignedCms::Certificates","System.Security.Cryptography.Pkcs.SignedCms.CheckHash","System::Security::Cryptography::Pkcs::SignedCms::CheckHash","System.Security.Cryptography.Pkcs.SignedCms.CheckSignature","System::Security::Cryptography::Pkcs::SignedCms::CheckSignature","System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature","System::Security::Cryptography::Pkcs::SignedCms::ComputeSignature","System.Security.Cryptography.Pkcs.SignedCms.ContentInfo","System::Security::Cryptography::Pkcs::SignedCms::ContentInfo","System.Security.Cryptography.Pkcs.SignedCms.Decode","System::Security::Cryptography::Pkcs::SignedCms::Decode","System.Security.Cryptography.Pkcs.SignedCms.Detached","System::Security::Cryptography::Pkcs::SignedCms::Detached","System.Security.Cryptography.Pkcs.SignedCms.Encode","System::Security::Cryptography::Pkcs::SignedCms::Encode","System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature","System::Security::Cryptography::Pkcs::SignedCms::RemoveSignature","System.Security.Cryptography.Pkcs.SignedCms.SignerInfos","System::Security::Cryptography::Pkcs::SignedCms::SignerInfos","System.Security.Cryptography.Pkcs.SignedCms.Version","System::Security::Cryptography::Pkcs::SignedCms::Version"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d68ee29b-d600-188d-9279-7a9c7ca9b73d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.Pkcs/SignedCms.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SignedCms class | Microsoft Docs","_op_ogTitle":"SignedCms class","description":"The SignedCms class enables signing and verifying of CMS/PKCS #7 messages.\n","toc_asset_id":"_splitted/System.Security.Cryptography.Pkcs/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Pkcs/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Pkcs.SignedCms","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.pkcs.signedcms","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.pkcs.signedcms","fileRelativePath":"System.Security.Cryptography.Pkcs.SignedCms.html"},"themesRelativePathToOutputRoot":"_themes/"}