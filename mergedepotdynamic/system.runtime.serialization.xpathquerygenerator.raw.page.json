{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_XPathQueryGenerator\">\r\n      <span class=\"lang-csharp\">XPathQueryGenerator</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class XPathQueryGenerator</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XPathQueryGenerator</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>For more information about data contracts, see <a href=\"../Topic/Using%20Data%20Contracts.md\" data-linktype=\"relative-path\">Using Data Contracts</a>.  </p>\n<p> To use the class, there are four steps:  </p>\n<ol>\n<li><p>Create the data contract type by applying the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> and <a class=\"xref\" href=\"system.runtime.serialization.datamemberattribute\" data-linktype=\"relative-path\">DataMemberAttribute</a> as appropriate to the type and its fields or properties.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.type#System_Type_GetMember_\" data-linktype=\"relative-path\">GetMember</a> method of the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> class to generate the MemberInfo array.  </p>\n</li>\n<li><p>Pass the type and the array to the method.  </p>\n</li>\n<li><p>If needed, use the <a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a> returned by the <code>namespaces</code> parameter to examine the XML namespaces referenced by the namespaces prefixes in the XPath query.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> The namespace prefix &quot;xg&quot; (for &quot;XPath Generator&quot;) is used as the default in the XPath. This cannot be changed. Instead, refer to the NameTable collection to see what namespace the prefix is associated with.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_XPathQueryGenerator_CreateFromDataContractSerializer_System_Type_System_Reflection_MemberInfo___System_Xml_XmlNamespaceManager__\" data-linktype=\"self-bookmark\">CreateFromDataContractSerializer(Type,MemberInfo[],XmlNamespaceManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces..</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_XPathQueryGenerator_CreateFromDataContractSerializer_System_Type_System_Reflection_MemberInfo___System_Text_StringBuilder_System_Xml_XmlNamespaceManager__\" data-linktype=\"self-bookmark\">CreateFromDataContractSerializer(Type,MemberInfo[],StringBuilder,XmlNamespaceManager)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_XPathQueryGenerator_CreateFromDataContractSerializer_System_Type_System_Reflection_MemberInfo___System_Xml_XmlNamespaceManager__\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_XPathQueryGenerator_CreateFromDataContractSerializer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateFromDataContractSerializer(Type,MemberInfo[],XmlNamespaceManager)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an XPath from a data contract using the specified data contract type, array of metadata elements, and namespaces..</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string CreateFromDataContractSerializer (Type type, System.Reflection.MemberInfo[] pathToMember, out System.Xml.XmlNamespaceManager namespaces);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type that represents a data contract.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathToMember</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata, generated using the <span class=\"xref\">stem.Type.GetMember*</span> method of the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> class, that points to the specific data member used to generate the query.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespaces and their prefixes found in the data contract.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>  \n\n<p> The XPath generated from the type and member data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about data contracts, see <a href=\"../Topic/Using%20Data%20Contracts.md\" data-linktype=\"relative-path\">Using Data Contracts</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates XPath queries from two classes to which the <a class=\"xref\" href=\"system.runtime.serialization.datacontractattribute\" data-linktype=\"relative-path\">DataContractAttribute</a> and <a class=\"xref\" href=\"system.runtime.serialization.datamemberattribute\" data-linktype=\"relative-path\">DataMemberAttribute</a> attributes have been applied.  </p>\n<pre><code class=\"lang-vb\" name=\"XPathQueryGenerator#0\">Imports System\nImports System.Collections.Generic\nImports System.Linq\nImports System.Text\nImports System.Reflection\nImports System.Runtime.Serialization\nImports System.Xml\n\nNamespace GeneratPathExample\n\n    Class Program\n\n        Shared Sub Main(ByVal args As String())\n\n            &#39; Get the type of the class that defines the data contract.\n            Dim t As Type = GetType(Order)\n\n            &#39; Get the meta data for the specific members to be used in the query.\n            Dim mi As MemberInfo() = t.GetMember(&quot;Product&quot;)\n            Dim mi2 As MemberInfo() = t.GetMember(&quot;Value&quot;)\n            Dim mi3 As MemberInfo() = t.GetMember(&quot;Quantity&quot;)\n\n            &#39; Call the function below to generate and display the query.\n            GenerateXPath(t, mi)\n            GenerateXPath(t, mi2)\n            GenerateXPath(t, mi3)\n\n\n            &#39; Get the type of the second class that defines a data contract.\n            Dim t2 As Type = GetType(Line)\n\n            &#39; Get the meta data for the member to be used in the query.\n            Dim mi4 As MemberInfo() = t2.GetMember(&quot;Items&quot;)\n\n            GenerateXPath(t2, mi4)\n\n            Console.ReadLine()\n        End Sub\n\n        Shared Sub GenerateXPath(ByVal t As Type, ByVal mi As MemberInfo())\n\n\n            &#39; Create a new name table and name space manager.\n            Dim nt As New NameTable()\n            Dim xname As New XmlNamespaceManager(nt)\n\n\n            &#39; Generate the query and print it.\n            Dim query As String = XPathQueryGenerator.CreateFromDataContractSerializer( _\n                t, mi, xname)\n            Console.WriteLine(query)\n            Console.WriteLine()\n\n\n            &#39; Display the namespaces and prefixes used in the data contract.\n            Dim s As String\n            For Each s In xname\n                Console.WriteLine(&quot;{0}  = {1}&quot;, s, xname.LookupNamespace(s))\n            Next\n\n            Console.WriteLine()\n\n        End Sub\n    End Class\n\n\n    &lt;DataContract(Namespace:=&quot;http://www.cohowinery.com/&quot;)&gt; _\n        Public Class Line\n\n        Private itemsValue As Order()\n\n        &lt;DataMember()&gt;\n        Public Property Item() As Order()\n\n            Get\n                Return itemsValue\n            End Get\n            Set(ByVal value As Order())\n                itemsValue = value\n            End Set\n        End Property\n\n    End Class\n\n    &lt;DataContract(Namespace:=&quot;http://contoso.com&quot;)&gt; _\n    Public Class Order\n\n        Private productValue As String\n        Private quantityValue As Integer\n        Private valueValue As Decimal\n\n        &lt;DataMember(Name:=&quot;cost&quot;)&gt;\n        Public Property Value() As String\n\n            Get\n                Return valueValue\n            End Get\n            Set(ByVal value As String)\n                valueValue = value\n            End Set\n        End Property\n\n        &lt;DataMember(Name:=&quot;quantity&quot;)&gt; _\n        Public Property Quantity() As Integer\n\n            Get\n                Return quantityValue\n            End Get\n            set(ByVal value As Integer)\n                quantityValue = value\n            End Set\n        End Property\n\n\n        &lt;DataMember(Name:=&quot;productName&quot;)&gt; _\n        Public Property Product() As String\n\n            Get\n                Return productValue\n            End Get\n            Set(ByVal value As String)\n                productValue = value\n            End Set\n        End Property\n    End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"XPathQueryGenerator#0\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Reflection;\nusing System.Runtime.Serialization;\nusing System.Xml;\n\nnamespace GeneratPathExample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // Get the type of the class that defines the data contract.\n            Type t = typeof(Order);\n\n            // Get the meta data for the specific members to be used in the query.\n            MemberInfo[] mi = t.GetMember(&quot;Product&quot;);\n            MemberInfo[] mi2 = t.GetMember(&quot;Value&quot;);\n            MemberInfo[] mi3 = t.GetMember(&quot;Quantity&quot;);\n\n            // Call the function below to generate and display the query.\n            GenerateXPath(t, mi);\n            GenerateXPath(t, mi2);\n            GenerateXPath(t, mi3);\n\n\n            // Get the type of the second class that defines a data contract.\n            Type t2 = typeof(Line);\n\n            // Get the meta data for the member to be used in the query.\n            MemberInfo[] mi4 = t2.GetMember(&quot;Items&quot;);\n            \n            GenerateXPath(t2, mi4);\n\n            Console.ReadLine();\n        }\n\n        static void GenerateXPath(Type t, MemberInfo[] mi)\n        {\n\n            // Create a new name table and name space manager.\n            NameTable nt = new NameTable();\n            XmlNamespaceManager xname = new XmlNamespaceManager(nt);\n\n\n            // Generate the query and print it.\n            string query = XPathQueryGenerator.CreateFromDataContractSerializer(\n                t, mi, out xname);\n            Console.WriteLine(query);\n            Console.WriteLine();\n\n\n            // Display the namespaces and prefixes used in the data contract.\n            foreach (string s in xname)\n                Console.WriteLine(&quot;{0}  = {1}&quot;, s, xname.LookupNamespace(s));\n           \n            Console.WriteLine();       \n\n        }\n    }\n\n    [DataContract(Namespace = &quot;http://www.cohowinery.com/&quot;)]\n    public class Line\n    {\n        private Order[] itemsValue;\n\n        [DataMember]\n        public Order[] Items\n        {\n            get { return itemsValue; }\n            set { itemsValue = value; }\n        }\n\n    }\n\n    [DataContract(Namespace = &quot;http://contoso.com&quot;)]\n    public class Order\n    {\n        private string productValue;\n        private int quantityValue;\n        private decimal valueValue;\n\n        [DataMember(Name = &quot;cost&quot;)]\n        public decimal Value\n        {\n            get { return valueValue; }\n            set { valueValue = value; }\n        }\n\n        [DataMember(Name = &quot;quantity&quot;)]\n        public int Quantity\n        {\n            get { return quantityValue; }\n            set { quantityValue = value; }\n        }\n\n        [DataMember(Name = &quot;productName&quot;)]\n        public string Product\n        {\n            get { return productValue; }\n            set { productValue = value; }\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_XPathQueryGenerator_CreateFromDataContractSerializer_System_Type_System_Reflection_MemberInfo___System_Text_StringBuilder_System_Xml_XmlNamespaceManager__\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_XPathQueryGenerator_CreateFromDataContractSerializer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateFromDataContractSerializer(Type,MemberInfo[],StringBuilder,XmlNamespaceManager)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an XPath from a data contract using the specified contract data type, array of metadata elements, the top level element, and namespaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string CreateFromDataContractSerializer (Type type, System.Reflection.MemberInfo[] pathToMember, System.Text.StringBuilder rootElementXpath, out System.Xml.XmlNamespaceManager namespaces);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type that represents a data contract.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pathToMember</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The metadata, generated using the <span class=\"xref\">stem.Type.GetMember*</span> method of the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> class, that points to the specific data member used to generate the query.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootElementXpath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The top level element in the xpath.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnamespacemanager\" data-linktype=\"relative-path\">XmlNamespaceManager</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML namespaces and their prefixes found in the data contract.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>  \n\n<p> The XPath generated from the type and member data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.XPathQueryGenerator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.XPathQueryGenerator.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.XPathQueryGenerator\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Serialization.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0ce90566-ae7e-3928-ab0d-41462e167b51\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.XPathQueryGenerator\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.XPathQueryGenerator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.XPathQueryGenerator.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.XPathQueryGenerator","System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer"],"api_location":["System.Runtime.Serialization.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.XPathQueryGenerator","System::Runtime::Serialization::XPathQueryGenerator","System.Runtime.Serialization.XPathQueryGenerator.CreateFromDataContractSerializer","System::Runtime::Serialization::XPathQueryGenerator::CreateFromDataContractSerializer"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0ce90566-ae7e-3928-ab0d-41462e167b51","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/XPathQueryGenerator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XPathQueryGenerator class | Microsoft Docs","_op_ogTitle":"XPathQueryGenerator class","description":"When given a class representing a data contract, and metadata representing a member of the contract, produces an XPath query for the member.\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.XPathQueryGenerator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.xpathquerygenerator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.xpathquerygenerator","fileRelativePath":"System.Runtime.Serialization.XPathQueryGenerator.html"},"themesRelativePathToOutputRoot":"_themes/"}