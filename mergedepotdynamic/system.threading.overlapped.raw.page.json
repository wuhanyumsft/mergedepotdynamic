{"content":"    \r\n    <h1 id=\"System_Threading_Overlapped\">\r\n      <span class=\"lang-csharp\">Overlapped</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a managed representation of a Win32 <code>OVERLAPPED</code> structure, including methods to transfer information from an Overlapped instance to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class Overlapped</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Overlapped</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Pack_\" data-linktype=\"relative-path\">Pack</a> and <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_UnsafePack_\" data-linktype=\"relative-path\">UnsafePack</a> methods transfer information from an Overlapped object to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure that can be passed to Win32 API functions for asynchronous file I/O. The <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Unpack_\" data-linktype=\"relative-path\">Unpack</a> method transfers information from a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure to an instance of the Overlapped class.  </p>\n<p> Changes to the properties of an Overlapped object affect its associated <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, and vice versa.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped__ctor\" data-linktype=\"self-bookmark\">Overlapped()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new, empty instance of the <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped__ctor_System_Int32_System_Int32_System_Int32_System_IAsyncResult_\" data-linktype=\"self-bookmark\">Overlapped(Int32,Int32,Int32,IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped__ctor_System_Int32_System_Int32_System_IntPtr_System_IAsyncResult_\" data-linktype=\"self-bookmark\">Overlapped(Int32,Int32,IntPtr,IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_AsyncResult\" data-linktype=\"self-bookmark\">AsyncResult</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object that provides status information on the I/O operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_EventHandle\" data-linktype=\"self-bookmark\">EventHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_EventHandleIntPtr\" data-linktype=\"self-bookmark\">EventHandleIntPtr</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_OffsetHigh\" data-linktype=\"self-bookmark\">OffsetHigh</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the high-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_OffsetLow\" data-linktype=\"self-bookmark\">OffsetLow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the low-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_Free_System_Threading_NativeOverlapped__\" data-linktype=\"self-bookmark\">Free(NativeOverlapped*)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Frees the unmanaged memory associated with a native overlapped structure allocated by the <span class=\"xref\">stem.Threading.Overlapped.Pack*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_Pack_System_Threading_IOCompletionCallback_\" data-linktype=\"self-bookmark\">Pack(IOCompletionCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_Pack_System_Threading_IOCompletionCallback_System_Object_\" data-linktype=\"self-bookmark\">Pack(IOCompletionCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_Unpack_System_Threading_NativeOverlapped__\" data-linktype=\"self-bookmark\">Unpack(NativeOverlapped*)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Unpacks the specified unmanaged <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure into a managed <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_UnsafePack_System_Threading_IOCompletionCallback_\" data-linktype=\"self-bookmark\">UnsafePack(IOCompletionCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure specifying the delegate to invoke when the asynchronous I/O operation is complete. Does not propagate the calling stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_Overlapped_UnsafePack_System_Threading_IOCompletionCallback_System_Object_\" data-linktype=\"self-bookmark\">UnsafePack(IOCompletionCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer. Does not propagate the calling stack.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped__ctor\">\r\n    \r\n            <a id=\"System_Threading_Overlapped__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Overlapped()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new, empty instance of the <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Overlapped ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped__ctor_System_Int32_System_Int32_System_Int32_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Threading_Overlapped__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Overlapped(Int32,Int32,Int32,IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> class with the specified file position, the 32-bit integer handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetLo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The low word of the file position at which to start the transfer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetHi</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The high word of the file position at which to start the transfer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hEvent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to an event that is signaled when the I/O operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> interface and provides status information on the I/O operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_Handle_\" data-linktype=\"relative-path\">Handle</a> property to get the handle of any managed synchronization event that derives from the <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> class.  </p>\n<p> Your implementation of <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> provides status information on the I/O operation. Pass it to the constructor in the <code>ar</code> parameter, and retrieve it later with the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_AsyncResult_\" data-linktype=\"relative-path\">AsyncResult</a> property. If a callback method is specified for the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Pack_\" data-linktype=\"relative-path\">Pack</a> or <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_UnsafePack_\" data-linktype=\"relative-path\">UnsafePack</a> method, the callback can retrieve your <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> by unpacking the <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure it receives.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped__ctor_System_Int32_System_Int32_System_IntPtr_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Threading_Overlapped__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Overlapped(Int32,Int32,IntPtr,IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> class with the specified file position, the handle to an event that is signaled when the I/O operation is complete, and an interface through which to return the results of the operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetLo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The low word of the file position at which to start the transfer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetHi</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The high word of the file position at which to start the transfer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>hEvent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handle to an event that is signaled when the I/O operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> interface and provides status information on the I/O operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the handle of a managed synchronization object that derives from the <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> class, use the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_SafeWaitHandle_\" data-linktype=\"relative-path\">SafeWaitHandle</a> property to get a <a class=\"xref\" href=\"microsoft.win32.safehandles.safewaithandle\" data-linktype=\"relative-path\">SafeWaitHandle</a> object, and then call the <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousGetHandle_\" data-linktype=\"relative-path\">DangerousGetHandle</a> method.  </p>\n<p> Your implementation of <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> provides status information on the I/O operation. Pass it to the constructor in the <code>ar</code> parameter, and retrieve it later with the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_AsyncResult_\" data-linktype=\"relative-path\">AsyncResult</a> property. If a callback method is specified for the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Pack_\" data-linktype=\"relative-path\">Pack</a> or <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_UnsafePack_\" data-linktype=\"relative-path\">UnsafePack</a> method, the callback can retrieve your <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> by unpacking the <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure it receives.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_AsyncResult\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_AsyncResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsyncResult</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object that provides status information on the I/O operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult AsyncResult { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An object that implements the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_EventHandle\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_EventHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventHandle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the 32-bit integer handle to a synchronization event that is signaled when the I/O operation is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int EventHandle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value representing the handle of the synchronization event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property cannot be used on 64-bit platforms. Use the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_EventHandleIntPtr_\" data-linktype=\"relative-path\">EventHandleIntPtr</a> property instead.  </p>\n<p> Use the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_Handle_\" data-linktype=\"relative-path\">Handle</a> property to get the handle of any managed synchronization event that derives from the <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_EventHandleIntPtr\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_EventHandleIntPtr_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventHandleIntPtr</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the handle to the synchronization event that is signaled when the I/O operation is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr EventHandleIntPtr { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> representing the handle of the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the handle of a managed synchronization object that derives from the <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> class, use the <a class=\"xref\" href=\"system.threading.waithandle#System_Threading_WaitHandle_SafeWaitHandle_\" data-linktype=\"relative-path\">SafeWaitHandle</a> property to get a <a class=\"xref\" href=\"microsoft.win32.safehandles.safewaithandle\" data-linktype=\"relative-path\">SafeWaitHandle</a> object, and then call the <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousGetHandle_\" data-linktype=\"relative-path\">DangerousGetHandle</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_OffsetHigh\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_OffsetHigh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetHigh</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the high-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int OffsetHigh { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value representing the high word of the file position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_OffsetLow\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_OffsetLow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetLow</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the low-order word of the file position at which to start the transfer. The file position is a byte offset from the start of the file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int OffsetLow { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value representing the low word of the file position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_Free_System_Threading_NativeOverlapped__\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_Free_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Free(NativeOverlapped*)</div>        \r\n          </div>\r\n    \r\n            <p>Frees the unmanaged memory associated with a native overlapped structure allocated by the <span class=\"xref\">stem.Threading.Overlapped.Pack*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nativeOverlappedPtr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure to be freed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>nativeOverlappedPtr</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must call the Free method exactly once on every <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> pointer you receive from the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Pack_\" data-linktype=\"relative-path\">Pack</a> method. If you don&#39;t call the Free method, you will leak memory. If you call the Free method more than once, memory will be corrupted.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_Pack_System_Threading_IOCompletionCallback_\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_Pack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pack(IOCompletionCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, specifying the delegate to be invoked when the asynchronous I/O operation is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iocb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a>*</div>\r\n                  </div>\r\n                  <p>An unmanaged pointer to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> has already been packed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations. The <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure is fixed in physical memory until <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Unpack_\" data-linktype=\"relative-path\">Unpack</a> is called.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The caller is responsible for pinning the buffer. If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address. For this reason, it is better to use the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Pack_System_Threading_IOCompletionCallback_System_Object_\" data-linktype=\"relative-path\">Pack(IOCompletionCallback,Object)</a> method overload, in which the runtime pins the buffer.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_Pack_System_Threading_IOCompletionCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_Pack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pack(IOCompletionCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, specifying a delegate that is invoked when the asynchronous I/O operation is complete and a managed object that serves as a buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iocb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a>*</div>\r\n                  </div>\r\n                  <p>An unmanaged pointer to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> has already been packed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations. The <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure is fixed in physical memory until <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Unpack_\" data-linktype=\"relative-path\">Unpack</a> is called.  </p>\n<p> The buffer or buffers specified in <code>userData</code> must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The runtime pins the buffer or buffers specified in <code>userData</code> for the duration of the I/O operation. If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_Unpack_System_Threading_NativeOverlapped__\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_Unpack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unpack(NativeOverlapped*)</div>        \r\n          </div>\r\n    \r\n            <p>Unpacks the specified unmanaged <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure into a managed <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nativeOverlappedPtr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An unmanaged pointer to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> object containing the information unpacked from the native structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>nativeOverlappedPtr</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure is not freed from physical memory until you call the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Free_\" data-linktype=\"relative-path\">Free</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_UnsafePack_System_Threading_IOCompletionCallback_\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_UnsafePack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnsafePack(IOCompletionCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure specifying the delegate to invoke when the asynchronous I/O operation is complete. Does not propagate the calling stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iocb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a>*</div>\r\n                  </div>\r\n                  <p>An unmanaged pointer to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> has already been packed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations. The <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure is fixed in physical memory until <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Unpack_\" data-linktype=\"relative-path\">Unpack</a> is called.  </p>\n<p> The caller is responsible for pinning the buffer. If the application domain is unloaded, however, the handle to the pinned buffer is destroyed and the buffer is released, leaving the I/O operation to write to the freed address. For this reason, it is better to use the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_UnsafePack_System_Threading_IOCompletionCallback_System_Object_\" data-linktype=\"relative-path\">UnsafePack(IOCompletionCallback,Object)</a> method overload, in which the runtime pins the buffer.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Using the <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_UnsafePack_\" data-linktype=\"relative-path\">UnsafePack</a> method could inadvertently open up a security hole. Code access security bases its permission checks on the permissions of all the callers on the stack. The <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_UnsafePack_\" data-linktype=\"relative-path\">UnsafePack</a> method does not propagate the calling stack. Malicious code might be able to exploit this to avoid permission checks.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_Overlapped_UnsafePack_System_Threading_IOCompletionCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_Overlapped_UnsafePack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnsafePack(IOCompletionCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Packs the current instance into a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure, specifying the delegate to invoke when the asynchronous I/O operation is complete and the managed object that serves as a buffer. Does not propagate the calling stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iocb</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.threading.iocompletioncallback\" data-linktype=\"relative-path\">IOCompletionCallback</a> delegate that represents the callback method invoked when the asynchronous I/O operation completes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object or array of objects representing the input or output buffer for the operation. Each object represents a buffer, for example an array of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a>*</div>\r\n                  </div>\r\n                  <p>An unmanaged pointer to a <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.threading.overlapped\" data-linktype=\"relative-path\">Overlapped</a> is already packed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The unmanaged pointer returned by this method can be passed to the operating system in overlapped I/O operations. The <a class=\"xref\" href=\"system.threading.nativeoverlapped\" data-linktype=\"relative-path\">NativeOverlapped</a> structure is fixed in physical memory until <a class=\"xref\" href=\"system.threading.overlapped#System_Threading_Overlapped_Unpack_\" data-linktype=\"relative-path\">Unpack</a> is called.  </p>\n<p> The buffer or buffers specified in <code>userData</code> must be the same as those passed to the unmanaged operating system function that performs the asynchronous I/O.  </p>\n<p> The runtime pins the buffer or buffers specified in<code>userData</code> for the duration of the I/O operation. If the application domain is unloaded, the runtime keeps the memory pinned until the I/O operation completes.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Using the UnsafePack method could inadvertently open up a security hole. Code access security bases its permission checks on the permissions of all the callers on the stack. The UnsafePack method does not propagate the calling stack. Malicious code might be able to exploit this to avoid permission checks.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.Overlapped.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.Overlapped.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.AsyncResult\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.EventHandle\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.EventHandleIntPtr\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.Free\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.OffsetHigh\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.OffsetLow\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.Pack\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.Unpack\">\r\n<meta name=\"APIName\" content=\"System.Threading.Overlapped.UnsafePack\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"06a28b73-8a11-9e7a-b593-af81b2dae5f2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a managed representation of a Win32 OVERLAPPED structure, including methods to transfer information from an Overlapped instance to a  structure.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.Overlapped\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.Overlapped.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.Overlapped.yml","open_to_public_contributors":true,"api_name":["System.Threading.Overlapped","System.Threading.Overlapped..ctor","System.Threading.Overlapped.AsyncResult","System.Threading.Overlapped.EventHandle","System.Threading.Overlapped.EventHandleIntPtr","System.Threading.Overlapped.Free","System.Threading.Overlapped.OffsetHigh","System.Threading.Overlapped.OffsetLow","System.Threading.Overlapped.Pack","System.Threading.Overlapped.Unpack","System.Threading.Overlapped.UnsafePack"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.Overlapped","System::Threading::Overlapped","System.Threading.Overlapped.#ctor","System::Threading::Overlapped::#ctor","System.Threading.Overlapped.AsyncResult","System::Threading::Overlapped::AsyncResult","System.Threading.Overlapped.EventHandle","System::Threading::Overlapped::EventHandle","System.Threading.Overlapped.EventHandleIntPtr","System::Threading::Overlapped::EventHandleIntPtr","System.Threading.Overlapped.Free","System::Threading::Overlapped::Free","System.Threading.Overlapped.OffsetHigh","System::Threading::Overlapped::OffsetHigh","System.Threading.Overlapped.OffsetLow","System::Threading::Overlapped::OffsetLow","System.Threading.Overlapped.Pack","System::Threading::Overlapped::Pack","System.Threading.Overlapped.Unpack","System::Threading::Overlapped::Unpack","System.Threading.Overlapped.UnsafePack","System::Threading::Overlapped::UnsafePack"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"06a28b73-8a11-9e7a-b593-af81b2dae5f2","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/Overlapped.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Overlapped class | Microsoft Docs","_op_ogTitle":"Overlapped class","description":"Provides a managed representation of a Win32 OVERLAPPED structure, including methods to transfer information from an Overlapped instance to a  structure.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.Overlapped","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.overlapped","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.overlapped","fileRelativePath":"System.Threading.Overlapped.html"},"themesRelativePathToOutputRoot":"_themes/"}