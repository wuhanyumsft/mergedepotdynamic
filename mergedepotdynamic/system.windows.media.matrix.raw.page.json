{"content":"    \r\n    <h1 id=\"System_Windows_Media_Matrix\">\r\n      <span class=\"lang-csharp\">Matrix</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))]\n[System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))]\npublic struct Matrix : IFormattable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Matrix</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A 3x3 matrix is used for transformations in a 2-D x-y plane. Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation. An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.  Note that vectors are expressed as row-vectors, not column vectors.  </p>\n<p> A WPF Matrix is stored using row-major order and has the following structure:  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p> The members in the last row, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a> and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a>, represent translation values.  </p>\n<p> In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:  </p>\n<p> (<a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a>)  </p>\n<p> Although you can use a Matrix structure directly to translate individual points, or with a <a class=\"xref\" href=\"system.windows.media.matrixtransform\" data-linktype=\"relative-path\">MatrixTransform</a> to transform objects, WPF also provides a set of classes that enable you to transform objects without working directly with matrices: <a class=\"xref\" href=\"system.windows.media.rotatetransform\" data-linktype=\"relative-path\">RotateTransform</a>, <a class=\"xref\" href=\"system.windows.media.scaletransform\" data-linktype=\"relative-path\">ScaleTransform</a>, <a class=\"xref\" href=\"system.windows.media.skewtransform\" data-linktype=\"relative-path\">SkewTransform</a>, and <a class=\"xref\" href=\"system.windows.media.translatetransform\" data-linktype=\"relative-path\">TranslateTransform</a>.  </p>\n<p><a name=\"xamlAttributeUsage_Matrix\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;m11, m12, m21, m22, offsetX, offsetY&quot;/&gt;  \n- or -  \n&lt;object property=&quot;Identity&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_Matrix\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>m11</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n\n<p> The value in the first row and first column of this Matrix. For more information, see the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a> property.  </p>\n<p> <em>m12</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n\n<p> The value in the first row and second column. For more information, see the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a> property.  </p>\n<p> <em>m21</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n\n<p> The value in the second row and first column. For more information, see the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a> property.  </p>\n<p> <em>m22</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n\n<p> The value in the second row and second column. For more information, see the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a> property.  </p>\n<p> <em>offsetX</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n\n<p> The value in the third row and third column. For more information, see the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a> property.  </p>\n<p> <em>offsetY</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">System.Double</a>  \n\n<p> The value in the third row and second column. For more information, see the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix__ctor_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Matrix(Double,Double,Double,Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Determinant\" data-linktype=\"self-bookmark\">Determinant</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the determinant of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_HasInverse\" data-linktype=\"self-bookmark\">HasInverse</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is invertible.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Identity\" data-linktype=\"self-bookmark\">Identity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an identity <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_IsIdentity\" data-linktype=\"self-bookmark\">IsIdentity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is an identity matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_M11\" data-linktype=\"self-bookmark\">M11</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the first row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_M12\" data-linktype=\"self-bookmark\">M12</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the first row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_M21\" data-linktype=\"self-bookmark\">M21</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the second row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_M22\" data-linktype=\"self-bookmark\">M22</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the second row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_OffsetX\" data-linktype=\"self-bookmark\">OffsetX</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the third row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_OffsetY\" data-linktype=\"self-bookmark\">OffsetY</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the third row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Append_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">Append(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends the specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure that is identical to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Equals_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">Equals(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is identical to this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Equals_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">Equals(Matrix,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the two specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures are identical.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Invert\" data-linktype=\"self-bookmark\">Invert()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inverts this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Multiply_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">Multiply(Matrix,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure by another <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Parse_System_String_\" data-linktype=\"self-bookmark\">Parse(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of a matrix into the equivalent <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Prepend_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">Prepend(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends the specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure onto this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Rotate_System_Double_\" data-linktype=\"self-bookmark\">Rotate(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a rotation of the specified angle about the origin of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_RotateAt_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">RotateAt(Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates this matrix about the specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_RotateAtPrepend_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">RotateAtPrepend(Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends a rotation of the specified angle at the specified point to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_RotatePrepend_System_Double_\" data-linktype=\"self-bookmark\">RotatePrepend(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends a rotation of the specified angle to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Scale_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Scale(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends the specified scale vector to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_ScaleAt_System_Double_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">ScaleAt(Double,Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scales this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> by the specified amount about the specified point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_ScaleAtPrepend_System_Double_System_Double_System_Double_System_Double_\" data-linktype=\"self-bookmark\">ScaleAtPrepend(Double,Double,Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends the specified scale about the specified point of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_ScalePrepend_System_Double_System_Double_\" data-linktype=\"self-bookmark\">ScalePrepend(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends the specified scale vector to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_SetIdentity\" data-linktype=\"self-bookmark\">SetIdentity()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure into an identity matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Skew_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Skew(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a skew of the specified degrees in the x and y dimensions to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_SkewPrepend_System_Double_System_Double_\" data-linktype=\"self-bookmark\">SkewPrepend(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends a skew of the specified degrees in the x and y dimensions to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_ToString_System_IFormatProvider_\" data-linktype=\"self-bookmark\">ToString(IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure with culture-specific formatting information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Transform_System_Windows_Point_\" data-linktype=\"self-bookmark\">Transform(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms the specified point by the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> and returns the result.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Transform_System_Windows_Point___\" data-linktype=\"self-bookmark\">Transform(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms the specified points by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Transform_System_Windows_Vector_\" data-linktype=\"self-bookmark\">Transform(Vector)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms the specified vector by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Transform_System_Windows_Vector___\" data-linktype=\"self-bookmark\">Transform(Vector[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Transforms the specified vectors by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_Translate_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Translate(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a translation of the specified offsets to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_TranslatePrepend_System_Double_System_Double_\" data-linktype=\"self-bookmark\">TranslatePrepend(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepends a translation of the specified offsets to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_op_Equality_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">op_Equality(Matrix,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the two specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures are identical.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_op_Inequality_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">op_Inequality(Matrix,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the two specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures are not identical.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_op_Multiply_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\" data-linktype=\"self-bookmark\">op_Multiply(Matrix,Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure by another <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Media_Matrix_System_IFormattable_ToString_System_String_System_IFormatProvider_\" data-linktype=\"self-bookmark\">IFormattable.ToString(String,IFormatProvider)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Formats the value of the current instance using the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix__ctor_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matrix(Double,Double,Double,Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m11</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure&#39;s <span class=\"xref\">stem.Windows.Media.Matrix.M11*</span> coefficient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>m12</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure&#39;s <span class=\"xref\">stem.Windows.Media.Matrix.M12*</span> coefficient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>m21</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure&#39;s <span class=\"xref\">stem.Windows.Media.Matrix.M21*</span> coefficient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>m22</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure&#39;s <span class=\"xref\">stem.Windows.Media.Matrix.M22*</span> coefficient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure&#39;s <span class=\"xref\">stem.Windows.Media.Matrix.OffsetX*</span> coefficient.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure&#39;s <span class=\"xref\">stem.Windows.Media.Matrix.OffsetY*</span> coefficient.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Determinant\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Determinant_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Determinant</div>        \r\n          </div>\r\n    \r\n            <p>Gets the determinant of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double Determinant { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The determinant of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to get the determinant of a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixDeterminantExample_csharp\">private Double determinantExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Get the determinant, which is equal to -50.\n    Double determinant = myMatrix.Determinant;\n    \n    return determinant;\n       \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_HasInverse\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_HasInverse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasInverse</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is invertible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasInverse { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> has an inverse; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks whether a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> is invertible. If it is invertible, the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> is inverted.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixInverseExample_csharp\">private Matrix inverseExample()\n{\n    \n    // Creating a Matrix structure.\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n                \n    // Checking if myMatrix is invertible.\n    if (myMatrix.HasInverse)\n    {\n\n        // Invert myMatrix. myMatrix is now \n        // equal to (-0.4, 0.2 , 0.3, -0.1, 1, -2) \n        myMatrix.Invert();\n        \n        // Return the inverted matrix.\n        return myMatrix;\n    }\n    else\n        throw new InvalidOperationException(&quot;The matrix is not invertible.&quot;);\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Identity\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Identity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Identity</div>        \r\n          </div>\r\n    \r\n            <p>Gets an identity <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Media.Matrix Identity { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>An identity matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. This correlates to setting <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a> and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a> to 1 and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a>, and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a> to 0. In an affine matrix, which is the implementation that Windows Presentation Foundation (WPF) uses for the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p> For an identity matrix, the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_ToString_\" data-linktype=\"relative-path\">ToString</a> method returns the string &quot;Identity&quot; instead of the coefficients of the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to retrieve the Identity matrix.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixIdentityExample_csharp\">private Matrix identityExample()\n{\n\n    // Get the identity matrix, which is equal to \n    // (1,0,0,1,0,0). \n    Matrix myMatrix = Matrix.Identity;\n\n\n    Matrix m = new Matrix(1,0,0,1,0,0);\n\n    return myMatrix;\n    \n       \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_IsIdentity\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_IsIdentity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsIdentity</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is an identity matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsIdentity { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is an identity matrix; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. This correlates to setting <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a> and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a> to 1 and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a>, and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a> to 0. In an affine matrix, which is the implementation that Windows Presentation Foundation (WPF) uses for the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p> For an identity matrix, the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_ToString_\" data-linktype=\"relative-path\">ToString</a> method returns the string &quot;Identity&quot;, instead of the coefficients of the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_M11\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_M11_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">M11</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the first row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double M11 { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the first row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>. The default value is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to multiply two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures and how to assign values to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> when it is declared, and after the structure is declared.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixMultiplicationExample_csharp\">private void multiplicationExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n    \n    // matrixResult is equal to (70,100,150,220,240,352) \n    Matrix matrixResult = Matrix.Multiply(matrix1, matrix2);\n    \n    // matrixResult2 is also\n    // equal to (70,100,150,220,240,352) \n    Matrix matrixResult2 = matrix1 * matrix2;\n    \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_M12\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_M12_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">M12</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the first row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double M12 { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the first row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the layout of a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a></td>\n<td>M12</td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to multiply two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures and how to assign values to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> when it is declared, and after the structure is declared.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixMultiplicationExample_csharp\">private void multiplicationExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n    \n    // matrixResult is equal to (70,100,150,220,240,352) \n    Matrix matrixResult = Matrix.Multiply(matrix1, matrix2);\n    \n    // matrixResult2 is also\n    // equal to (70,100,150,220,240,352) \n    Matrix matrixResult2 = matrix1 * matrix2;\n    \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_M21\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_M21_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">M21</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the second row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double M21 { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the second row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the layout of a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td>M21</td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to multiply two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures and how to assign values to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> when it is declared, and after the structure is declared.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixMultiplicationExample_csharp\">private void multiplicationExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n    \n    // matrixResult is equal to (70,100,150,220,240,352) \n    Matrix matrixResult = Matrix.Multiply(matrix1, matrix2);\n    \n    // matrixResult2 is also\n    // equal to (70,100,150,220,240,352) \n    Matrix matrixResult2 = matrix1 * matrix2;\n    \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_M22\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_M22_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">M22</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the second row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double M22 { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the second row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure. The default value is 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the layout of a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a></td>\n<td>M22</td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to multiply two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures and how to assign values to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> when it is declared, and after the structure is declared.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixMultiplicationExample_csharp\">private void multiplicationExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n    \n    // matrixResult is equal to (70,100,150,220,240,352) \n    Matrix matrixResult = Matrix.Multiply(matrix1, matrix2);\n    \n    // matrixResult2 is also\n    // equal to (70,100,150,220,240,352) \n    Matrix matrixResult2 = matrix1 * matrix2;\n    \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_OffsetX\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_OffsetX_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetX</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the third row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double OffsetX { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the third row and first column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OffsetX property is so named because it specifies the amount to translate the coordinate space along the x-axis.  </p>\n<p> The following table shows the layout of a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td>OffsetX</td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a></td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_OffsetY\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_OffsetY_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetY</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the third row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double OffsetY { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The value of the third row and second column of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OffsetY property is so named because it specifies the amount to translate the coordinate space along the y-axis.  </p>\n<p> The following table shows the layout of a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a></td>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a></td>\n<td>0</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a></td>\n<td>OffsetY</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Append_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Append_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Append(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Appends the specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Append (System.Windows.Media.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to append to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation is the same as multiplying this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure by the parameter <code>matrix</code>.  Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter <code>matrix</code> by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure; that is, (this * <code>matrix</code>) is not the same as (<code>matrix</code> * this).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to append a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to another <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixRotateAboutPointExample_csharp\">private Matrix rotateAboutPointExample()\n{\n    \n    // Creating a Matrix structure.\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Rotate the matrix 90 degrees about the point (100,100).\n    // myMatrix becomes equal to (-10, 4, -20, 15, 170, 25).\n    myMatrix.RotateAt(90, 100, 100);\n    \n    return myMatrix; \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure that is identical to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>o</code> is a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure that is identical to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> A <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> stores its values as doubles. Because the value of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> can lose precision when arithmetic operations are performed on it, a comparison between two <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> structures that are logically equal might fail.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to check two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures for equality.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixEqualityExample_csharp\">private void equalityExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    Boolean result;\n    \n    // result is true.\n    result = (matrix1 == matrix2);            \n    \n    // result is false.\n    result = (matrix1 != matrix2);\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Equals_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is identical to this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Windows.Media.Matrix value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The instance of <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> to compare to this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if instances are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> A <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> stores its values as doubles. Because the value of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> can lose precision when arithmetic operations are performed on it, a comparison between two <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> structures that are logically equal might fail.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to check two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures for equality.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixEqualityExample_csharp\">private void equalityExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    Boolean result;\n    \n    // result is true.\n    result = (matrix1 == matrix2);            \n    \n    // result is false.\n    result = (matrix1 != matrix2);\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Equals_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Matrix,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the two specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures are identical.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> A <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> stores its values as doubles. Because the value of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> can lose precision when arithmetic operations are performed on it, a comparison between two <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> structures that are logically equal might fail.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_GetHashCode\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code for this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Invert\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Invert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invert()</div>        \r\n          </div>\r\n    \r\n            <p>Inverts this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invert ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is not invertible.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks if a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is invertible. If it is invertible, the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is inverted.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixInverseExample_csharp\">private Matrix inverseExample()\n{\n    \n    // Creating a Matrix structure.\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n                \n    // Checking if myMatrix is invertible.\n    if (myMatrix.HasInverse)\n    {\n\n        // Invert myMatrix. myMatrix is now \n        // equal to (-0.4, 0.2 , 0.3, -0.1, 1, -2) \n        myMatrix.Invert();\n        \n        // Return the inverted matrix.\n        return myMatrix;\n    }\n    else\n        throw new InvalidOperationException(&quot;The matrix is not invertible.&quot;);\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Multiply_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Multiply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Multiply(Matrix,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure by another <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>trans1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to multiply.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>trans2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to multiply.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>The result of multiplying <code>trans1</code> by <code>trans2</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Matrix multiplication is not commutative. Multiplying <code>trans1</code> by <code>trans2</code> is not the same as multiplying <code>trans2</code> by <code>trans1</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to multiply two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixMultiplicationExample_csharp\">private void multiplicationExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n    \n    // matrixResult is equal to (70,100,150,220,240,352) \n    Matrix matrixResult = Matrix.Multiply(matrix1, matrix2);\n    \n    // matrixResult2 is also\n    // equal to (70,100,150,220,240,352) \n    Matrix matrixResult2 = matrix1 * matrix2;\n    \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Parse_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of a matrix into the equivalent <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Media.Matrix Parse (string source);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of the matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>The equivalent <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to convert a string representation of a matrix into a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixParseExample_csharp\">private Matrix parseExample()\n{\n    \n    Matrix result = Matrix.Parse(&quot;1, 2, 3, 4, 5, 6&quot;);\n    \n    // result is equal to (1,2,3,4,5,6).\n    return result;\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Prepend_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Prepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Prepend(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends the specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure onto this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Prepend (System.Windows.Media.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to prepend to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation is the same as multiplying the parameter <code>matrix</code> by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure. Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure by the parameter <code>matrix</code>; that is, <code>matrix</code> * this is not the same as this * <code>matrix</code>.  </p>\n<p> In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to prepend a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> onto another <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixPrependExample_csharp\">private Matrix prependExample()\n{\n    \n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n\n    matrix1.Prepend(matrix2);\n\n    // matrix1 is equal to (70,100,150,220,255,370). \n    return matrix1;\n\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Rotate_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Rotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rotate(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a rotation of the specified angle about the origin of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rotate (double angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of rotation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to rotate a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixRotateExample_csharp\">private Matrix rotateExample()\n{\n    \n    // Creating a Matrix structure.\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Rotate the matrix 90 degrees about the origin.\n    // myMatrix becomes equal to (-10, 5, -20, 15, -30, 25).\n    myMatrix.Rotate(90);\n    \n    return myMatrix; \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_RotateAt_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_RotateAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateAt(Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates this matrix about the specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateAt (double angle, double centerX, double centerY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle, in degrees, by which to rotate this matrix.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point about which to rotate this matrix.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point about which to rotate this matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to rotate a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> about a specified point.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixRotateAboutPointExample_csharp\">private Matrix rotateAboutPointExample()\n{\n    \n    // Creating a Matrix structure.\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Rotate the matrix 90 degrees about the point (100,100).\n    // myMatrix becomes equal to (-10, 4, -20, 15, 170, 25).\n    myMatrix.RotateAt(90, 100, 100);\n    \n    return myMatrix; \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_RotateAtPrepend_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_RotateAtPrepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateAtPrepend(Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends a rotation of the specified angle at the specified point to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateAtPrepend (double angle, double centerX, double centerY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The rotation angle, in degrees.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the rotation center.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the rotation center.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to prepend a rotation to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixPrependRotateExamples_csharp\">private Matrix prependRotateExample()\n{\n\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n\n    // Prepend a 90 degree rotation about the origin.\n    // myMatrix is now equal to  (15,20,-5,-10,25,30).\n    myMatrix.RotatePrepend(90);\n\n    return myMatrix;\n}\n\n\nprivate Matrix prependRotateAboutPointExample()\n{\n\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n\n    // Prepend a 90 degree rotation about the \n    // point (100,100). \n    // myMatrix is now equal to  (15,20,-5,-10,1025,2030).\n    myMatrix.RotateAtPrepend(90, 100, 100);\n\n    return myMatrix;\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_RotatePrepend_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_RotatePrepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotatePrepend(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends a rotation of the specified angle to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotatePrepend (double angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of rotation to prepend.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to prepend a rotation to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixPrependRotateExamples_csharp\">private Matrix prependRotateExample()\n{\n\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n\n    // Prepend a 90 degree rotation about the origin.\n    // myMatrix is now equal to  (15,20,-5,-10,25,30).\n    myMatrix.RotatePrepend(90);\n\n    return myMatrix;\n}\n\n\nprivate Matrix prependRotateAboutPointExample()\n{\n\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n\n    // Prepend a 90 degree rotation about the \n    // point (100,100). \n    // myMatrix is now equal to  (15,20,-5,-10,1025,2030).\n    myMatrix.RotateAtPrepend(90, 100, 100);\n\n    return myMatrix;\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Scale_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Scale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scale(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Appends the specified scale vector to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Scale (double scaleX, double scaleY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the y-axis.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to scale a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixScaleExamples_csharp\">\nprivate Matrix scaleExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Scale myMatrix by a horizontal factor of 2\n    // and a vertical factor of 4 about the origin.\n    // After this operation,\n    // myMatrix is equal to (10, 40, 30, 80, 50, 120)\n    myMatrix.Scale(2, 4);\n    \n    return myMatrix;\n\n}\n\nprivate Matrix scaleAboutPointExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Scale myMatrix by a horizontal factor of 2\n    // and a vertical factor of 4 about the \n    // point (100,100).\n    // After this operation,\n    // myMatrix is equal to (10, 40, 30, 80, -50, -180)\n    myMatrix.ScaleAt(2, 4, 100, 100);\n    \n    return myMatrix;\n\n}        \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_ScaleAt_System_Double_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_ScaleAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleAt(Double,Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Scales this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> by the specified amount about the specified point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount by which to scale this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount by which to scale this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the y-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the scale operation&#39;s center point.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the scale operation&#39;s center point.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to scale a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixScaleExamples_csharp\">\nprivate Matrix scaleExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Scale myMatrix by a horizontal factor of 2\n    // and a vertical factor of 4 about the origin.\n    // After this operation,\n    // myMatrix is equal to (10, 40, 30, 80, 50, 120)\n    myMatrix.Scale(2, 4);\n    \n    return myMatrix;\n\n}\n\nprivate Matrix scaleAboutPointExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Scale myMatrix by a horizontal factor of 2\n    // and a vertical factor of 4 about the \n    // point (100,100).\n    // After this operation,\n    // myMatrix is equal to (10, 40, 30, 80, -50, -180)\n    myMatrix.ScaleAt(2, 4, 100, 100);\n    \n    return myMatrix;\n\n}        \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_ScaleAtPrepend_System_Double_System_Double_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_ScaleAtPrepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleAtPrepend(Double,Double,Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends the specified scale about the specified point of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-axis scale factor.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-axis scale factor.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the point about which the scale operation is performed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>centerY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the point about which the scale operation is performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to prepend a scale to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixPrependScaleExamples_csharp\">\nprivate Matrix scalePrependExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Prepend a scale ab with a horizontal factor of 2\n    // and a vertical factor of 4 about the origin.\n    // After this operation,\n    // myMatrix is equal to (10, 20, 60, 80, 25, 30)\n    myMatrix.ScalePrepend(2, 4);\n    \n    return myMatrix;\n\n}\n\nprivate Matrix scalePrependAboutPointExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Prepend a scale with a horizontal factor of 2\n    // and a vertical factor of 4 about the \n    // point (100,100).\n    // After this operation,\n    // myMatrix is equal to (10, 20, 60, 80, -4975, -6970)\n    myMatrix.ScaleAtPrepend(2, 4, 100, 100);\n    \n    return myMatrix;\n\n}        \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_ScalePrepend_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_ScalePrepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScalePrepend(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends the specified scale vector to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScalePrepend (double scaleX, double scaleY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure along the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure along the y-axis.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to prepend a scale to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixPrependScaleExamples_csharp\">\nprivate Matrix scalePrependExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Prepend a scale ab with a horizontal factor of 2\n    // and a vertical factor of 4 about the origin.\n    // After this operation,\n    // myMatrix is equal to (10, 20, 60, 80, 25, 30)\n    myMatrix.ScalePrepend(2, 4);\n    \n    return myMatrix;\n\n}\n\nprivate Matrix scalePrependAboutPointExample()\n{\n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    // Prepend a scale with a horizontal factor of 2\n    // and a vertical factor of 4 about the \n    // point (100,100).\n    // After this operation,\n    // myMatrix is equal to (10, 20, 60, 80, -4975, -6970)\n    myMatrix.ScaleAtPrepend(2, 4, 100, 100);\n    \n    return myMatrix;\n\n}        \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_SetIdentity\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_SetIdentity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetIdentity()</div>        \r\n          </div>\r\n    \r\n            <p>Changes this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure into an identity matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetIdentity ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients. This correlates to setting <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M11_\" data-linktype=\"relative-path\">M11</a> and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M22_\" data-linktype=\"relative-path\">M22</a> to 1 and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M12_\" data-linktype=\"relative-path\">M12</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_M21_\" data-linktype=\"relative-path\">M21</a>, <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetX_\" data-linktype=\"relative-path\">OffsetX</a>, and <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_OffsetY_\" data-linktype=\"relative-path\">OffsetY</a> to 0. In an affine matrix, which is the implementation that Windows Presentation Foundation (WPF) uses for the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0</td>\n<td>0</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p> For an identity matrix, the <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_ToString_\" data-linktype=\"relative-path\">ToString</a> method returns the string &quot;Identity&quot;, instead of the coefficients of the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to turn a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure into an identity matrix.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixIdentityExample_csharp\">private Matrix identityExample()\n{\n\n    // Get the identity matrix, which is equal to \n    // (1,0,0,1,0,0). \n    Matrix myMatrix = Matrix.Identity;\n\n\n    Matrix m = new Matrix(1,0,0,1,0,0);\n\n    return myMatrix;\n    \n       \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Skew_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Skew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Skew(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a skew of the specified degrees in the x and y dimensions to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Skew (double skewX, double skewY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>skewX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle in the x dimension by which to skew this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>skewY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle in the y dimension by which to skew this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to skew a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixSkewExample_csharp\">private Matrix skewExample()\n{\n    \n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    myMatrix.Skew(45, 180);\n    \n    \n    // myMatrix is equal to (15, 10, 35, 20, 55, 30).\n    return myMatrix;\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_SkewPrepend_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_SkewPrepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SkewPrepend(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends a skew of the specified degrees in the x and y dimensions to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SkewPrepend (double skewX, double skewY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>skewX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle in the x dimension by which to skew this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>skewY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle in the y dimension by which to skew this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to prepend a skew to a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixSkewPrependExample_csharp\">private Matrix skewPrependExample()\n{\n    \n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    myMatrix.SkewPrepend(45, 180);\n    \n    \n    // myMatrix is equal to (5, 10, 20, 30, 25, 30).\n    return myMatrix;\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_ToString\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the <span class=\"xref\">stem.Windows.Media.Matrix.M11*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.M12*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.M21*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.M22*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.OffsetX*</span>, and <span class=\"xref\">stem.Windows.Media.Matrix.OffsetY*</span> values of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> is an <a class=\"xref\" href=\"system.windows.media.matrix#System_Windows_Media_Matrix_Identity_\" data-linktype=\"relative-path\">Identity</a> matrix, the string &quot;Identity&quot; is returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_ToString_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure with culture-specific formatting information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ToString (IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The culture-specific formatting information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the <span class=\"xref\">stem.Windows.Media.Matrix.M11*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.M12*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.M21*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.M22*</span>, <span class=\"xref\">stem.Windows.Media.Matrix.OffsetX*</span>, and <span class=\"xref\">stem.Windows.Media.Matrix.OffsetY*</span> values of this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure is an identity matrix, the string &quot;Identity&quot; is returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Transform_System_Windows_Point_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Transforms the specified point by the <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> and returns the result.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Point Transform (System.Windows.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The point to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>The result of transforming <code>point</code> by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The follow example shows how to use a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> to transform points and vectors.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixTransformExamples_csharp\">private void transformExamples()\n{\n\n     Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n     \n     \n     //\n     // Transform a point.\n     //            \n     Point myPoint = new Point(15,25);\n     \n     // pointResult is (475, 680).\n     Point pointResult = myMatrix.Transform(myPoint);\n     \n     //\n     // Transform an array of points.\n     //            \n     Point[] myPointArray = new Point[]\n        {new Point(15,25), new Point(30,35)};\n        \n     // myPointArray[0] becomes (475, 680).\n     // myPointArray[1] becomes (700, 1030).\n     myMatrix.Transform(myPointArray);\n        \n     //\n     // Transform a vector.\n     //\n     Vector myVector = new Vector(15,25);\n     \n     // vectorResult becomes (450, 650).\n     Vector vectorResult = myMatrix.Transform(myVector);\n     \n     //\n     // Transform an array of vectors.\n     //\n     Vector[] myVectorArray = new Vector[]\n        {new Vector(15, 25), new Vector(30,35)};\n     \n     // myVectorArray[0] becomes (450, 650).\n     // myVectorArray[1] becomes (675, 1000).             \n     myMatrix.Transform(myVectorArray);   \n           \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Transform_System_Windows_Point___\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Transforms the specified points by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Transform (System.Windows.Point[] points);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>points</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The points to transform. The original points in the array are replaced by their transformed values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The follow example shows how to use a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> to transform points and vectors.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixTransformExamples_csharp\">private void transformExamples()\n{\n\n     Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n     \n     \n     //\n     // Transform a point.\n     //            \n     Point myPoint = new Point(15,25);\n     \n     // pointResult is (475, 680).\n     Point pointResult = myMatrix.Transform(myPoint);\n     \n     //\n     // Transform an array of points.\n     //            \n     Point[] myPointArray = new Point[]\n        {new Point(15,25), new Point(30,35)};\n        \n     // myPointArray[0] becomes (475, 680).\n     // myPointArray[1] becomes (700, 1030).\n     myMatrix.Transform(myPointArray);\n        \n     //\n     // Transform a vector.\n     //\n     Vector myVector = new Vector(15,25);\n     \n     // vectorResult becomes (450, 650).\n     Vector vectorResult = myMatrix.Transform(myVector);\n     \n     //\n     // Transform an array of vectors.\n     //\n     Vector[] myVectorArray = new Vector[]\n        {new Vector(15, 25), new Vector(30,35)};\n     \n     // myVectorArray[0] becomes (450, 650).\n     // myVectorArray[1] becomes (675, 1000).             \n     myMatrix.Transform(myVectorArray);   \n           \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Transform_System_Windows_Vector_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform(Vector)</div>        \r\n          </div>\r\n    \r\n            <p>Transforms the specified vector by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Vector Transform (System.Windows.Vector vector);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>vector</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The vector to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a></div>\r\n                  </div>\r\n                  <p>The result of transforming <code>vector</code> by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The follow example shows how to use a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> to transform points and vectors.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixTransformExamples_csharp\">private void transformExamples()\n{\n\n     Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n     \n     \n     //\n     // Transform a point.\n     //            \n     Point myPoint = new Point(15,25);\n     \n     // pointResult is (475, 680).\n     Point pointResult = myMatrix.Transform(myPoint);\n     \n     //\n     // Transform an array of points.\n     //            \n     Point[] myPointArray = new Point[]\n        {new Point(15,25), new Point(30,35)};\n        \n     // myPointArray[0] becomes (475, 680).\n     // myPointArray[1] becomes (700, 1030).\n     myMatrix.Transform(myPointArray);\n        \n     //\n     // Transform a vector.\n     //\n     Vector myVector = new Vector(15,25);\n     \n     // vectorResult becomes (450, 650).\n     Vector vectorResult = myMatrix.Transform(myVector);\n     \n     //\n     // Transform an array of vectors.\n     //\n     Vector[] myVectorArray = new Vector[]\n        {new Vector(15, 25), new Vector(30,35)};\n     \n     // myVectorArray[0] becomes (450, 650).\n     // myVectorArray[1] becomes (675, 1000).             \n     myMatrix.Transform(myVectorArray);   \n           \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Transform_System_Windows_Vector___\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform(Vector[])</div>        \r\n          </div>\r\n    \r\n            <p>Transforms the specified vectors by this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Transform (System.Windows.Vector[] vectors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>vectors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.vector\" data-linktype=\"relative-path\">Vector</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The vectors to transform. The original vectors in the array are replaced by their transformed values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The follow example shows how to use a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> to transform points and vectors.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixTransformExamples_csharp\">private void transformExamples()\n{\n\n     Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n     \n     \n     //\n     // Transform a point.\n     //            \n     Point myPoint = new Point(15,25);\n     \n     // pointResult is (475, 680).\n     Point pointResult = myMatrix.Transform(myPoint);\n     \n     //\n     // Transform an array of points.\n     //            \n     Point[] myPointArray = new Point[]\n        {new Point(15,25), new Point(30,35)};\n        \n     // myPointArray[0] becomes (475, 680).\n     // myPointArray[1] becomes (700, 1030).\n     myMatrix.Transform(myPointArray);\n        \n     //\n     // Transform a vector.\n     //\n     Vector myVector = new Vector(15,25);\n     \n     // vectorResult becomes (450, 650).\n     Vector vectorResult = myMatrix.Transform(myVector);\n     \n     //\n     // Transform an array of vectors.\n     //\n     Vector[] myVectorArray = new Vector[]\n        {new Vector(15, 25), new Vector(30,35)};\n     \n     // myVectorArray[0] becomes (450, 650).\n     // myVectorArray[1] becomes (675, 1000).             \n     myMatrix.Transform(myVectorArray);   \n           \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_Translate_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a translation of the specified offsets to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Translate (double offsetX, double offsetY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the y-axis.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how append a translation onto a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixTranslateExample_csharp\">private Matrix translateExample()\n{\n    \n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    myMatrix.Translate(5, 10);\n    \n    \n    // myMatrix is equal to (5, 10, 15, 20, 30, 40).\n    return myMatrix;\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_TranslatePrepend_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_TranslatePrepend_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslatePrepend(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Prepends a translation of the specified offsets to this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslatePrepend (double offsetX, double offsetY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the x-axis.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The amount to offset this <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> along the y-axis.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a composite transformation, the order of individual transformations is important. For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale. One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system. Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin. Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how prepend a translation onto a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixTranslatePrependExample_csharp\">private Matrix translatePrependExample()\n{\n    \n    Matrix myMatrix = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    myMatrix.TranslatePrepend(5, 10);\n    \n    \n    // myMatrix is equal to (5, 10, 15, 20, 200, 280).\n    return myMatrix;\n      \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_op_Equality_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(Matrix,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the two specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures are identical.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>matrix1</code> and <code>matrix2</code> are identical; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> A <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> stores its values as doubles. Because the value of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> can lose precision when arithmetic operations are performed on it, a comparison between two <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> structures that are logically equal might fail.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to check two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures for equality.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixEqualityExample_csharp\">private void equalityExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    Boolean result;\n    \n    // result is true.\n    result = (matrix1 == matrix2);            \n    \n    // result is false.\n    result = (matrix1 != matrix2);\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_op_Inequality_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(Matrix,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the two specified <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures are not identical.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>matrix1</code> and <code>matrix2</code> are not identical; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> A <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> stores its values as doubles. Because the value of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> can lose precision when arithmetic operations are performed on it, a comparison between two <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> structures that are logically equal might fail.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to check two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures for equality.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixEqualityExample_csharp\">private void equalityExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(5, 10, 15, 20, 25, 30);\n    \n    Boolean result;\n    \n    // result is true.\n    result = (matrix1 == matrix2);            \n    \n    // result is false.\n    result = (matrix1 != matrix2);\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_op_Multiply_System_Windows_Media_Matrix_System_Windows_Media_Matrix_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_op_Multiply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Multiply(Matrix,Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies a <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure by another <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Media.Matrix op_Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>trans1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to multiply.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>trans2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structure to multiply.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>The result of multiplying <code>trans1</code> by <code>trans2</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Matrix multiplication is not commutative. Multiplying <code>trans1</code> by <code>trans2</code> is not the same as multiplying <code>trans2</code> by <code>trans1</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to multiply two <a class=\"xref\" href=\"system.windows.media.matrix\" data-linktype=\"relative-path\">Matrix</a> structures.  </p>\n<pre><code class=\"lang-cs\" name=\"MatrixExamples_snip#MatrixMultiplicationExample_csharp\">private void multiplicationExample()\n{\n\n    Matrix matrix1 = new Matrix(5, 10, 15, 20, 25, 30);\n    Matrix matrix2 = new Matrix(2, 4, 6, 8, 10, 12);\n    \n    // matrixResult is equal to (70,100,150,220,240,352) \n    Matrix matrixResult = Matrix.Multiply(matrix1, matrix2);\n    \n    // matrixResult2 is also\n    // equal to (70,100,150,220,240,352) \n    Matrix matrixResult2 = matrix1 * matrix2;\n    \n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Media_Matrix_System_IFormattable_ToString_System_String_System_IFormatProvider_\">\r\n    \r\n            <a id=\"System_Windows_Media_Matrix_System_IFormattable_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IFormattable.ToString(String,IFormatProvider)</div>        \r\n          </div>\r\n    \r\n            <p>Formats the value of the current instance using the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IFormattable.ToString (string format, IFormatProvider provider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format to use.  </p>\n<p> -or-  </p>\n<p> A null reference (<code>Nothing</code> in Visual Basic) to use the default format defined for the type of the <a class=\"xref\" href=\"system.iformattable\" data-linktype=\"relative-path\">IFormattable</a> implementation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The provider to use to format the value.  </p>\n<p> -or-  </p>\n<p> A null reference (<code>Nothing</code> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the current instance in the specified format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Media.Matrix.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Media.Matrix.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Append\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Determinant\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Equals\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.HasInverse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Identity\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Invert\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.IsIdentity\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.M11\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.M12\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.M21\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.M22\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Multiply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.OffsetX\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.OffsetY\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.op_Multiply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.op_op_Multiply\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Parse\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Prepend\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Rotate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.RotateAt\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.RotateAtPrepend\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.RotatePrepend\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Scale\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.ScaleAt\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.ScaleAtPrepend\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.ScalePrepend\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.SetIdentity\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Skew\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.SkewPrepend\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.IFormattable.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Transform\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.Translate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Media.Matrix.TranslatePrepend\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a677e8b6-d4c2-0370-bcf6-92af328b3e44\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a 3x3 affine transformation matrix used for transformations in 2-D space.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Media/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Media.Matrix\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Media.Matrix.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Media.Matrix.yml","open_to_public_contributors":true,"api_name":["System.Windows.Media.Matrix","System.Windows.Media.Matrix..ctor","System.Windows.Media.Matrix.Append","System.Windows.Media.Matrix.Determinant","System.Windows.Media.Matrix.Equals","System.Windows.Media.Matrix.GetHashCode","System.Windows.Media.Matrix.HasInverse","System.Windows.Media.Matrix.Identity","System.Windows.Media.Matrix.Invert","System.Windows.Media.Matrix.IsIdentity","System.Windows.Media.Matrix.M11","System.Windows.Media.Matrix.M12","System.Windows.Media.Matrix.M21","System.Windows.Media.Matrix.M22","System.Windows.Media.Matrix.Multiply","System.Windows.Media.Matrix.OffsetX","System.Windows.Media.Matrix.OffsetY","System.Windows.Media.Matrix.op_Equality","System.Windows.Media.Matrix.op_op_Equality","System.Windows.Media.Matrix.op_Inequality","System.Windows.Media.Matrix.op_op_Inequality","System.Windows.Media.Matrix.op_Multiply","System.Windows.Media.Matrix.op_op_Multiply","System.Windows.Media.Matrix.Parse","System.Windows.Media.Matrix.Prepend","System.Windows.Media.Matrix.Rotate","System.Windows.Media.Matrix.RotateAt","System.Windows.Media.Matrix.RotateAtPrepend","System.Windows.Media.Matrix.RotatePrepend","System.Windows.Media.Matrix.Scale","System.Windows.Media.Matrix.ScaleAt","System.Windows.Media.Matrix.ScaleAtPrepend","System.Windows.Media.Matrix.ScalePrepend","System.Windows.Media.Matrix.SetIdentity","System.Windows.Media.Matrix.Skew","System.Windows.Media.Matrix.SkewPrepend","System.Windows.Media.Matrix.IFormattable.ToString","System.Windows.Media.Matrix.ToString","System.Windows.Media.Matrix.Transform","System.Windows.Media.Matrix.Translate","System.Windows.Media.Matrix.TranslatePrepend"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Media.Matrix","System::Windows::Media::Matrix","System.Windows.Media.Matrix.#ctor","System::Windows::Media::Matrix::#ctor","System.Windows.Media.Matrix.Append","System::Windows::Media::Matrix::Append","System.Windows.Media.Matrix.Determinant","System::Windows::Media::Matrix::Determinant","System.Windows.Media.Matrix.Equals","System::Windows::Media::Matrix::Equals","System.Windows.Media.Matrix.GetHashCode","System::Windows::Media::Matrix::GetHashCode","System.Windows.Media.Matrix.HasInverse","System::Windows::Media::Matrix::HasInverse","System.Windows.Media.Matrix.Identity","System::Windows::Media::Matrix::Identity","System.Windows.Media.Matrix.Invert","System::Windows::Media::Matrix::Invert","System.Windows.Media.Matrix.IsIdentity","System::Windows::Media::Matrix::IsIdentity","System.Windows.Media.Matrix.M11","System::Windows::Media::Matrix::M11","System.Windows.Media.Matrix.M12","System::Windows::Media::Matrix::M12","System.Windows.Media.Matrix.M21","System::Windows::Media::Matrix::M21","System.Windows.Media.Matrix.M22","System::Windows::Media::Matrix::M22","System.Windows.Media.Matrix.Multiply","System::Windows::Media::Matrix::Multiply","System.Windows.Media.Matrix.OffsetX","System::Windows::Media::Matrix::OffsetX","System.Windows.Media.Matrix.OffsetY","System::Windows::Media::Matrix::OffsetY","System.Windows.Media.Matrix.op_Equality","System::Windows::Media::Matrix::op_Equality","System.Windows.Media.Matrix.op_Inequality","System::Windows::Media::Matrix::op_Inequality","System.Windows.Media.Matrix.op_Multiply","System::Windows::Media::Matrix::op_Multiply","System.Windows.Media.Matrix.Parse","System::Windows::Media::Matrix::Parse","System.Windows.Media.Matrix.Prepend","System::Windows::Media::Matrix::Prepend","System.Windows.Media.Matrix.Rotate","System::Windows::Media::Matrix::Rotate","System.Windows.Media.Matrix.RotateAt","System::Windows::Media::Matrix::RotateAt","System.Windows.Media.Matrix.RotateAtPrepend","System::Windows::Media::Matrix::RotateAtPrepend","System.Windows.Media.Matrix.RotatePrepend","System::Windows::Media::Matrix::RotatePrepend","System.Windows.Media.Matrix.Scale","System::Windows::Media::Matrix::Scale","System.Windows.Media.Matrix.ScaleAt","System::Windows::Media::Matrix::ScaleAt","System.Windows.Media.Matrix.ScaleAtPrepend","System::Windows::Media::Matrix::ScaleAtPrepend","System.Windows.Media.Matrix.ScalePrepend","System::Windows::Media::Matrix::ScalePrepend","System.Windows.Media.Matrix.SetIdentity","System::Windows::Media::Matrix::SetIdentity","System.Windows.Media.Matrix.Skew","System::Windows::Media::Matrix::Skew","System.Windows.Media.Matrix.SkewPrepend","System::Windows::Media::Matrix::SkewPrepend","System.Windows.Media.Matrix.System#IFormattable#ToString","System::Windows::Media::Matrix::System#IFormattable#ToString","System.Windows.Media.Matrix.ToString","System::Windows::Media::Matrix::ToString","System.Windows.Media.Matrix.Transform","System::Windows::Media::Matrix::Transform","System.Windows.Media.Matrix.Translate","System::Windows::Media::Matrix::Translate","System.Windows.Media.Matrix.TranslatePrepend","System::Windows::Media::Matrix::TranslatePrepend"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a677e8b6-d4c2-0370-bcf6-92af328b3e44","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Media/Matrix.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Matrix struct | Microsoft Docs","_op_ogTitle":"Matrix struct","description":"Represents a 3x3 affine transformation matrix used for transformations in 2-D space.\n","toc_asset_id":"_splitted/System.Windows.Media/toc.json","toc_rel":"_splitted/System.Windows.Media/toc.json","source_url":"","ms.assetid":"System.Windows.Media.Matrix","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.media.matrix","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.media.matrix","fileRelativePath":"System.Windows.Media.Matrix.html"},"themesRelativePathToOutputRoot":"_themes/"}