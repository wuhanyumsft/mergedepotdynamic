{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_SerializationInfo\">\r\n      <span class=\"lang-csharp\">SerializationInfo</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class SerializationInfo</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SerializationInfo</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class is used by objects with custom serialization behavior. The <a class=\"xref\" href=\"system.runtime.serialization.iserializable#System_Runtime_Serialization_ISerializable_GetObjectData_\" data-linktype=\"relative-path\">GetObjectData</a> method on either <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> or <a class=\"xref\" href=\"system.runtime.serialization.iserializationsurrogate\" data-linktype=\"relative-path\">ISerializationSurrogate</a> populates the SerializationInfo store with the name, type, and value of each piece of information it wants to serialize. During deserialization, the appropriate function can extract this information.  </p>\n<p> Objects are added to the SerializationInfo store at serialization time using the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_AddValue_\" data-linktype=\"relative-path\">AddValue</a> methods and extracted from the SerializationInfo store at deserialization using the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_GetValue_\" data-linktype=\"relative-path\">GetValue</a> methods.  </p>\n<p> For more information about customizing serialization, see <a href=\"../Topic/Custom%20Serialization.md\" data-linktype=\"relative-path\">Custom Serialization</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo__ctor_System_Type_System_Runtime_Serialization_IFormatterConverter_\" data-linktype=\"self-bookmark\">SerializationInfo(Type,IFormatterConverter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo__ctor_System_Type_System_Runtime_Serialization_IFormatterConverter_System_Boolean_\" data-linktype=\"self-bookmark\">SerializationInfo(Type,IFormatterConverter,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AssemblyName\" data-linktype=\"self-bookmark\">AssemblyName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the assembly name of the type to serialize during serialization only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_FullTypeName\" data-linktype=\"self-bookmark\">FullTypeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the full name of the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to serialize.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_IsAssemblyNameSetExplicit\" data-linktype=\"self-bookmark\">IsAssemblyNameSetExplicit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the assembly name has been explicitly set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_IsFullTypeNameSetExplicit\" data-linktype=\"self-bookmark\">IsFullTypeNameSetExplicit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the full type name has been explicitly set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_MemberCount\" data-linktype=\"self-bookmark\">MemberCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of members that have been added to the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_ObjectType\" data-linktype=\"self-bookmark\">ObjectType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the type of the object to be serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">AddValue(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a Boolean value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Byte_\" data-linktype=\"self-bookmark\">AddValue(String,Byte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an 8-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Char_\" data-linktype=\"self-bookmark\">AddValue(String,Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a Unicode character value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_DateTime_\" data-linktype=\"self-bookmark\">AddValue(String,DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Decimal_\" data-linktype=\"self-bookmark\">AddValue(String,Decimal)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a decimal value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Double_\" data-linktype=\"self-bookmark\">AddValue(String,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a double-precision floating-point value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Int16_\" data-linktype=\"self-bookmark\">AddValue(String,Int16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a 16-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Int32_\" data-linktype=\"self-bookmark\">AddValue(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a 32-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Int64_\" data-linktype=\"self-bookmark\">AddValue(String,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a 64-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Object_\" data-linktype=\"self-bookmark\">AddValue(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified object into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store, where it is associated with a specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_SByte_\" data-linktype=\"self-bookmark\">AddValue(String,SByte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an 8-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Single_\" data-linktype=\"self-bookmark\">AddValue(String,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a single-precision floating-point value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_UInt16_\" data-linktype=\"self-bookmark\">AddValue(String,UInt16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a 16-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_UInt32_\" data-linktype=\"self-bookmark\">AddValue(String,UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a 32-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_UInt64_\" data-linktype=\"self-bookmark\">AddValue(String,UInt64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a 64-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Object_System_Type_\" data-linktype=\"self-bookmark\">AddValue(String,Object,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store, where <code>value</code> is associated with <code>name</code> and is serialized as being of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a><code>type</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetBoolean_System_String_\" data-linktype=\"self-bookmark\">GetBoolean(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a Boolean value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetByte_System_String_\" data-linktype=\"self-bookmark\">GetByte(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an 8-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetChar_System_String_\" data-linktype=\"self-bookmark\">GetChar(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a Unicode character value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetDateTime_System_String_\" data-linktype=\"self-bookmark\">GetDateTime(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetDecimal_System_String_\" data-linktype=\"self-bookmark\">GetDecimal(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a decimal value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetDouble_System_String_\" data-linktype=\"self-bookmark\">GetDouble(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a double-precision floating-point value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfoenumerator\" data-linktype=\"relative-path\">SerializationInfoEnumerator</a> used to iterate through the name-value pairs in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetInt16_System_String_\" data-linktype=\"self-bookmark\">GetInt16(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a 16-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetInt32_System_String_\" data-linktype=\"self-bookmark\">GetInt32(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a 32-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetInt64_System_String_\" data-linktype=\"self-bookmark\">GetInt64(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a 64-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetSByte_System_String_\" data-linktype=\"self-bookmark\">GetSByte(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an 8-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetSingle_System_String_\" data-linktype=\"self-bookmark\">GetSingle(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a single-precision floating-point value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetString_System_String_\" data-linktype=\"self-bookmark\">GetString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetUInt16_System_String_\" data-linktype=\"self-bookmark\">GetUInt16(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a 16-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetUInt32_System_String_\" data-linktype=\"self-bookmark\">GetUInt32(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a 32-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetUInt64_System_String_\" data-linktype=\"self-bookmark\">GetUInt64(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a 64-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_GetValue_System_String_System_Type_\" data-linktype=\"self-bookmark\">GetValue(String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_SerializationInfo_SetType_System_Type_\" data-linktype=\"self-bookmark\">SetType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo__ctor_System_Type_System_Runtime_Serialization_IFormatterConverter_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializationInfo(Type,IFormatterConverter)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>converter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> used during deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>type</code> or <code>converter</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> passed as the <code>converter</code> parameter converts data from its internal representation to the form the user requested. The internal representation of the data within the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> depends on the formatter that created it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo__ctor_System_Type_System_Runtime_Serialization_IFormatterConverter_System_Boolean_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializationInfo(Type,IFormatterConverter,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SerializationInfo (Type type, System.Runtime.Serialization.IFormatterConverter converter, bool requireSameTokenInPartialTrust);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>converter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> used during deserialization.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requireSameTokenInPartialTrust</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates whether the object requires same token in partial trust.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AssemblyName\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AssemblyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssemblyName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the assembly name of the type to serialize during serialization only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AssemblyName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The full name of the assembly of the type to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value the property is set to is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AssemblyName is the same as the value returned by <a class=\"xref\" href=\"system.reflection.assembly#System_Reflection_Assembly_FullName_\" data-linktype=\"relative-path\">FullName</a> property of the assembly of the containing type. This is the assembly name that the formatter uses when serializing type information for this object.  </p>\n<p> The assembly name contains the name of the assembly, version, culture, and some security information about the object.  </p>\n<p> Users who are changing the type being serialized (for example, to send a proxy for a particular type) will set the value of this property.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not use this property during deserialization because the value of this property is undefined.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_FullTypeName\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_FullTypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FullTypeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the full name of the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to serialize.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FullTypeName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The full name of the type to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value this property is set to is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FullTypeName is the same as what would be returned by calling the <a class=\"xref\" href=\"system.type#System_Type_FullName_\" data-linktype=\"relative-path\">FullName</a> on <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>. This is the type name the formatter uses when serializing type information for this object.  </p>\n<p> Users who are changing the type to serialize (for example, to send a proxy for a particular type) will want to set the value of this property.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Do not use this property during deserialization because the value of this property is undefined.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_IsAssemblyNameSetExplicit\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_IsAssemblyNameSetExplicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAssemblyNameSetExplicit</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the assembly name has been explicitly set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAssemblyNameSetExplicit { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>True</code> if the assembly name has been explicitly set; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_IsFullTypeNameSetExplicit\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_IsFullTypeNameSetExplicit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFullTypeNameSetExplicit</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the full type name has been explicitly set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsFullTypeNameSetExplicit { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>True</code> if the full type name has been explicitly set; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_MemberCount\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_MemberCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MemberCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of members that have been added to the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MemberCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of members that have been added to the current <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_ObjectType\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_ObjectType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectType</div>        \r\n          </div>\r\n    \r\n            <p>Returns the type of the object to be serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type ObjectType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type of the object being serialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a Boolean value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Boolean value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown. For example:  </p>\n<pre><code class=\"lang-c#\">void ISerializable.GetObject(SerializationInfo info, StreamingContext context)  \n{  \n   // This will not cause an exception to be thrown.  \n   info.AddValue(&quot;ABC&quot;, true);  \n   info.AddValue(&quot;abc&quot;, false);  \n   // However, this will cause the SerializationException to be thrown.  \n   info.AddValue(&quot;XYZ&quot;, true);  \n   info.AddValue(&quot;XYZ&quot;, false);  \n}  \n</code></pre><pre><code class=\"lang-vb#\">Private Sub GetObjectData(ByVal info As SerializationInfo, _  \nByVal context As StreamingContext)  \n   &#39; This will not cause an exception to be thrown.  \n   info.AddValue(&quot;ABC&quot;, &quot;upper case&quot;)  \n   info.AddValue(&quot;abc&quot;, &quot;lower case&quot;)  \n   &#39; However, this will cause the SerializationException to be thrown.  \n   info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)  \n   info.AddValue(&quot;XYZ&quot;, &quot;same case&quot;)  \nEnd Sub  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Byte_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Byte)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an 8-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, byte value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Char_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Char)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a Unicode character value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, char value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_DateTime_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, DateTime value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Decimal_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Decimal)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a decimal value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, decimal value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The decimal value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>If The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>If a value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Double_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a double-precision floating-point value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The double value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Int16_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Int16)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a 16-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, short value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>Int16</code> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a 32-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>Int32</code> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"ISerializable Interface Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\n\nref class SingletonSerializationHelper;\n\n// There should be only one instance of this type per AppDomain.\n\n[Serializable]\npublic ref class Singleton sealed: public ISerializable\n{\nprivate:\n\n   // This is the one instance of this type.\n   static Singleton^ theOneObject = gcnew Singleton;\n\npublic:\n\n   // Here are the instance fields.\n   String^ someString;\n   Int32 someNumber;\n\nprivate:\n\n   // Private constructor allowing this type to construct the singleton.\n   Singleton()\n   {\n      \n      // Do whatever is necessary to initialize the singleton.\n      someString = &quot;This is a String* field&quot;;\n      someNumber = 123;\n   }\n\npublic:\n\n   // A method returning a reference to the singleton.\n   static Singleton^ GetSingleton()\n   {\n      return theOneObject;\n   }\n\n   // A method called when serializing a Singleton.\n   [System::Security::Permissions::SecurityPermissionAttribute\n   (System::Security::Permissions::SecurityAction::LinkDemand, \n   Flags=System::Security::Permissions::SecurityPermissionFlag::SerializationFormatter)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context )\n   {\n      // Instead of serializing this Object*, we will  \n      // serialize a SingletonSerializationHelp instead.\n      info-&gt;SetType( SingletonSerializationHelper::typeid );\n\n      // No other values need to be added.\n   }\n\n   // NOTE: ISerializable*&#39;s special constructor is NOT necessary \n   // because it&#39;s never called\n};\n\n[Serializable]\nprivate ref class SingletonSerializationHelper sealed: public IObjectReference\n{\npublic:\n\n   // This Object* has no fields (although it could).\n   // GetRealObject is called after this Object* is deserialized\n   virtual Object^ GetRealObject( StreamingContext context )\n   {\n      // When deserialiing this Object*, return a reference to \n      // the singleton Object* instead.\n      return Singleton::GetSingleton();\n   }\n};\n\n[STAThread]\nint main()\n{\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n   try\n   {\n      // Construct a BinaryFormatter and use it \n      // to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n      // Create an array with multiple elements refering to \n      // the one Singleton Object*.\n      array&lt;Singleton^&gt;^a1 = {Singleton::GetSingleton(),Singleton::GetSingleton()};\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a1[ 1 ]) );\n\n      // Serialize the array elements.\n      formatter-&gt;Serialize( fs, a1 );\n\n      // Deserialize the array elements.\n      fs-&gt;Position = 0;\n      array&lt;Singleton^&gt;^a2 = (array&lt;Singleton^&gt;^)formatter-&gt;Deserialize( fs );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a2[ 0 ] == a2[ 1 ]) );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do all  array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a2[ 0 ]) );\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n\n   return 0;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"ISerializable Interface Example#1\">using System;\nusing System.Text;\nusing System.IO;\n// Add references to Soap and Binary formatters.\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization.Formatters.Soap ;\nusing System.Runtime.Serialization;\n\n\n[Serializable]\npublic class MyItemType : ISerializable\n{\n    public MyItemType()\n    {\n        // Empty constructor required to compile.\n    }\n\n    // The value to serialize.\n    private string myProperty_value;\n\n    public string MyProperty\n    {\n        get { return myProperty_value; }\n        set { myProperty_value = value; }\n    }\n        \n    // Implement this method to serialize data. The method is called \n    // on serialization.\n    public void GetObjectData(SerializationInfo info, StreamingContext context)\n    {\n        // Use the AddValue method to specify serialized values.\n        info.AddValue(&quot;props&quot;, myProperty_value, typeof(string));\n\n    }\n\n    // The special constructor is used to deserialize values.\n    public MyItemType(SerializationInfo info, StreamingContext context)\n    {\n        // Reset the property value using the GetValue method.\n        myProperty_value = (string) info.GetValue(&quot;props&quot;, typeof(string));\n    }\n}\n\n// This is a console application. \npublic static class Test\n{\n    static void Main()\n    {\n        // This is the name of the file holding the data. You can use any file extension you like.\n        string fileName = &quot;dataStuff.myData&quot;;\n\n        // Use a BinaryFormatter or SoapFormatter.\n        IFormatter formatter = new BinaryFormatter();\n        //IFormatter formatter = new SoapFormatter();\n            \n        Test.SerializeItem(fileName, formatter); // Serialize an instance of the class.\n        Test.DeserializeItem(fileName, formatter); // Deserialize the instance.\n        Console.WriteLine(&quot;Done&quot;);\n        Console.ReadLine();\n    }\n\n    public static void SerializeItem(string fileName, IFormatter formatter)\n    {\n        // Create an instance of the type and serialize it.\n        MyItemType t = new MyItemType();\n        t.MyProperty = &quot;Hello World&quot;;\n\n        FileStream s = new FileStream(fileName , FileMode.Create);\n        formatter.Serialize(s, t);            \n        s.Close();\n    }\n\n\n    public static void DeserializeItem(string fileName, IFormatter formatter)\n    {\n        FileStream s = new FileStream(fileName, FileMode.Open);\n        MyItemType t = (MyItemType)formatter.Deserialize(s);\n        Console.WriteLine(t.MyProperty);            \n    }       \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ISerializable Interface Example#1\">Imports System.Text\nImports System.IO\n&#39; Add references to Soap and Binary formatters.\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization.Formatters.Soap\nImports System.Runtime.Serialization\n\n\n&lt;Serializable()&gt; _\nPublic Class MyItemType\n    Implements ISerializable\n    &#39; Empty constructor required to compile.\n    Public Sub New()\n    End Sub\n\n    &#39; The value to serialize.\n    Private myProperty_value As String\n\n    Public Property MyProperty() As String\n        Get\n            Return myProperty_value\n        End Get\n        Set(value As String)\n            myProperty_value = value\n        End Set\n    End Property\n\n    &#39; Implement this method to serialize data. The method is called \n    &#39; on serialization.\n    Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData\n        &#39; Use the AddValue method to specify serialized values.\n        info.AddValue(&quot;props&quot;, myProperty_value, GetType(String))\n\n    End Sub\n\n    &#39; The special constructor is used to deserialize values.\n    Public Sub New(info As SerializationInfo, context As StreamingContext)\n        &#39; Reset the property value using the GetValue method.\n        myProperty_value = DirectCast(info.GetValue(&quot;props&quot;, GetType(String)), String)\n    End Sub\nEnd Class\n\n&#39; This is a console application. \nPublic Class Test\n\n\n    Public Shared Sub Main()\n        &#39; This is the name of the file holding the data. You can use any file extension you like.\n        Dim fileName As String = &quot;dataStuff.myData&quot;\n\n        &#39; Use a BinaryFormatter or SoapFormatter.\n        Dim formatter As IFormatter = New BinaryFormatter()\n        &#39; Dim formatter As IFormatter = New SoapFormatter()\n\n        Test.SerializeItem(fileName, formatter)\n        &#39; Serialize an instance of the class.\n        Test.DeserializeItem(fileName, formatter)\n        &#39; Deserialize the instance.\n        Console.WriteLine(&quot;Done&quot;)\n        Console.ReadLine()\n    End Sub\n\n    Public Shared Sub SerializeItem(fileName As String, formatter As IFormatter)\n        &#39; Create an instance of the type and serialize it.\n        Dim myType As New MyItemType()\n        myType.MyProperty = &quot;Hello World&quot;\n\n        Dim fs As New FileStream(fileName, FileMode.Create)\n        formatter.Serialize(fs, myType)\n        fs.Close()\n    End Sub\n\n\n    Public Shared Sub DeserializeItem(fileName As String, formatter As IFormatter)\n        Dim fs As New FileStream(fileName, FileMode.Open)\n\n        Dim myType As MyItemType = DirectCast(formatter.Deserialize(fs), MyItemType)\n        Console.WriteLine(myType.MyProperty)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Int64_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a 64-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Int64 value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified object into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store, where it is associated with a specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to be serialized. Any children of this object will automatically be serialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object contained in the <code>value</code> parameter is serialized as the type returned by <code>value</code>.  </p>\n<p> If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_SByte_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,SByte)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an 8-bit signed integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, sbyte value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>Sbyte</code> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Single_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a single-precision floating-point value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The single value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_UInt16_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,UInt16)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a 16-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, ushort value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>UInt16</code> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_UInt32_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a 32-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, uint value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>UInt32</code> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_AddValue_\" data-linktype=\"relative-path\">AddValue</a> method to customize the serialization of a type. The code adds a string and an integer to an instance of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> class in the <a class=\"xref\" href=\"system.runtime.serialization.iserializable#System_Runtime_Serialization_ISerializable_GetObjectData_\" data-linktype=\"relative-path\">GetObjectData</a> method of the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface. The code also uses the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_GetValue_\" data-linktype=\"relative-path\">GetValue</a> method to retrieve values from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"ISerializable_GetObjectData#0\">using System;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\nusing System.Security.Permissions;\nusing System.IO;\n\n[assembly: SecurityPermission(\nSecurityAction.RequestMinimum, Execution = true)]\nnamespace ISerializableExample\n{\n    class Program\n    {\n        public static void Main()\n        {\n            try\n            {\n                Run();\n            }\n            catch (Exception exc)\n            {\n                Console.WriteLine(&quot;{0}: {1}&quot;, exc.Message, exc.StackTrace);\n            }\n            finally\n            {\n                Console.WriteLine(&quot;Press Enter to exit....&quot;);\n                Console.ReadLine();\n            }\n        }\n\n        static void Run()\n        {            \n            BinaryFormatter binaryFmt = new BinaryFormatter();\n            Person p = new Person();\n            p.IdNumber = 1010;\n            p.Name = &quot;AAAAA&quot;;\n            FileStream fs = new FileStream\n                (&quot;Person.xml&quot;, FileMode.OpenOrCreate);\n            binaryFmt.Serialize(fs, p);\n            fs.Close();\n            Console.WriteLine\n                (&quot;Original Name: {0}, Original ID: {1}&quot;, p.Name, p.IdNumber);\n\n            // Deserialize.\n            fs = new FileStream\n                (&quot;Person.xml&quot;, FileMode.OpenOrCreate);\n            Person p2 = (Person)binaryFmt.Deserialize(fs);\n                Console.WriteLine(&quot;New Name: {0}, New ID: {1}&quot;, p2.Name, p2.IdNumber);\n            fs.Close();\n            }\n        }\n    [Serializable]\n    public class Person : ISerializable\n    {\n        private string name_value;\n        private int ID_value;\n\n        public Person() { }\n        protected Person(SerializationInfo info, StreamingContext context)\n        {\n            if (info == null)\n                throw new System.ArgumentNullException(&quot;info&quot;);\n            name_value = (string)info.GetValue(&quot;AltName&quot;, typeof(string));\n            ID_value = (int)info.GetValue(&quot;AltID&quot;, typeof(int));\n        }\n\n        [SecurityPermission(SecurityAction.LinkDemand,\n            Flags = SecurityPermissionFlag.SerializationFormatter)]\n        public virtual void GetObjectData(\n        SerializationInfo info, StreamingContext context)\n        {\n            if (info == null)\n                throw new System.ArgumentNullException(&quot;info&quot;);\n            info.AddValue(&quot;AltName&quot;, &quot;XXX&quot;);\n            info.AddValue(&quot;AltID&quot;, 9999);\n        }\n\n        public string Name\n        {\n            get { return name_value; }\n            set { name_value = value; }\n        }\n\n        public int IdNumber\n        {\n            get { return ID_value; }\n            set { ID_value = value; }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ISerializable_GetObjectData#0\">Imports System\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\nImports System.Security.Permissions\nImports System.IO\n\n&lt;Assembly: SecurityPermission _\n(SecurityAction.RequestMinimum, Execution:=True)&gt; \n\nClass Program\n\n    Public Shared Sub Main()\n        Try\n            Run()\n        Catch exc As Exception\n            Console.WriteLine(&quot;{0}: {1}&quot;, exc.Message, exc.StackTrace)\n        Finally\n            Console.WriteLine(&quot;Press Enter to exit....&quot;)\n            Console.ReadLine()\n        End Try\n\n    End Sub\n\n    Shared Sub Run()\n        Dim binaryFmt As New BinaryFormatter()\n        Dim p As New Person()\n        p.IdNumber = 1010\n        p.Name = &quot;AAAAA&quot;\n        Dim fs As New FileStream(&quot;Person.xml&quot;, FileMode.OpenOrCreate)\n        binaryFmt.Serialize(fs, p)\n        fs.Close()\n        Console.WriteLine _\n        (&quot;Original Name: {0}, Original ID: {1}&quot;, p.Name, p.IdNumber)\n\n        &#39; Deserialize.\n        fs = New FileStream(&quot;Person.xml&quot;, FileMode.OpenOrCreate)\n        Dim p2 As Person = CType(binaryFmt.Deserialize(fs), Person)\n        Console.WriteLine(&quot;New Name: {0}, New ID: {1}&quot;, _\n        p2.Name, p2.IdNumber)\n        fs.Close()\n    End Sub\nEnd Class\n\n&lt;Serializable()&gt; _\nPublic Class Person\n    Implements ISerializable\n    Private name_value As String\n    Private ID_value As Integer\n\n    Public Sub New()\n\n    End Sub\n\n    Protected Sub New(ByVal info As SerializationInfo, _\n    ByVal context As StreamingContext)\n        If info Is Nothing Then\n            Throw New System.ArgumentNullException(&quot;info&quot;)\n        End If\n        name_value = CStr(info.GetValue(&quot;AltName&quot;, GetType(String)))\n        ID_value = Fix(info.GetValue(&quot;AltID&quot;, GetType(Integer)))\n\n    End Sub\n\n    &lt;SecurityPermission(SecurityAction.LinkDemand, _\n    Flags:=SecurityPermissionFlag.SerializationFormatter)&gt; _\n    Public Overridable Sub GetObjectData _\n    (ByVal info As SerializationInfo, _\n    ByVal context As StreamingContext) _\n    Implements ISerializable.GetObjectData\n        If info Is Nothing Then\n            Throw New System.ArgumentNullException(&quot;info&quot;)\n        End If\n        info.AddValue(&quot;AltName&quot;, &quot;XXX&quot;)\n        info.AddValue(&quot;AltID&quot;, 9999)\n\n    End Sub\n\n    Public Property Name() As String\n        Get\n            Return name_value\n        End Get\n        Set(ByVal value As String)\n            name_value = value\n        End Set\n    End Property\n\n    Public Property IdNumber() As Integer\n        Get\n            Return ID_value\n        End Get\n        Set(ByVal value As Integer)\n            ID_value = value\n        End Set\n    End Property\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_UInt64_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,UInt64)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a 64-bit unsigned integer value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, ulong value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>UInt64</code> value to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>name</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_AddValue_System_String_System_Object_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_AddValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddValue(String,Object,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a value into the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store, where <code>value</code> is associated with <code>name</code> and is serialized as being of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a><code>type</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddValue (string name, object value, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to associate with the value, so it can be deserialized later.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to be serialized. Any children of this object will automatically be serialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to associate with the current object. This parameter must always be the type of the object itself or of one of its base classes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>If <code>name</code> or <code>type</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>A value has already been associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The assigned type is always the type of the object, or one of its parents.  </p>\n<p> If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice. However, adding two values with the exact same name will cause the <a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a> to be thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetBoolean_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetBoolean_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBoolean(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a Boolean value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GetBoolean (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The Boolean value associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a Boolean value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a Boolean, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetByte_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetByte(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an 8-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte GetByte (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </div>\r\n                  <p>The 8-bit unsigned integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to an 8-bit unsigned integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is an 8-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetChar_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChar(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a Unicode character value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public char GetChar (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The Unicode character associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a Unicode character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a Unicode character, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetDateTime_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDateTime(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime GetDateTime (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>, or can be converted to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetDecimal_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetDecimal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDecimal(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a decimal value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public decimal GetDecimal (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </div>\r\n                  <p>A decimal value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a decimal.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a decimal, or can be converted to a decimal, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetDouble_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetDouble_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDouble(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a double-precision floating-point value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double GetDouble (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The double-precision floating-point value associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a double-precision floating-point value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a double, or can be converted to a double, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetEnumerator\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfoenumerator\" data-linktype=\"relative-path\">SerializationInfoEnumerator</a> used to iterate through the name-value pairs in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.Serialization.SerializationInfoEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfoenumerator\" data-linktype=\"relative-path\">SerializationInfoEnumerator</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfoenumerator\" data-linktype=\"relative-path\">SerializationInfoEnumerator</a> for parsing the name-value pairs contained in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This function will most often be used by formatters that need to enumerate through the values before writing them out to the stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetInt16_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInt16(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a 16-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public short GetInt16 (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>The 16-bit signed integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a 16-bit signed integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a 16-bit signed integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetInt32_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInt32(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a 32-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetInt32 (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The 32-bit signed integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a 32-bit signed integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"ISerializable Interface Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\n\nref class SingletonSerializationHelper;\n\n// There should be only one instance of this type per AppDomain.\n\n[Serializable]\npublic ref class Singleton sealed: public ISerializable\n{\nprivate:\n\n   // This is the one instance of this type.\n   static Singleton^ theOneObject = gcnew Singleton;\n\npublic:\n\n   // Here are the instance fields.\n   String^ someString;\n   Int32 someNumber;\n\nprivate:\n\n   // Private constructor allowing this type to construct the singleton.\n   Singleton()\n   {\n      \n      // Do whatever is necessary to initialize the singleton.\n      someString = &quot;This is a String* field&quot;;\n      someNumber = 123;\n   }\n\npublic:\n\n   // A method returning a reference to the singleton.\n   static Singleton^ GetSingleton()\n   {\n      return theOneObject;\n   }\n\n   // A method called when serializing a Singleton.\n   [System::Security::Permissions::SecurityPermissionAttribute\n   (System::Security::Permissions::SecurityAction::LinkDemand, \n   Flags=System::Security::Permissions::SecurityPermissionFlag::SerializationFormatter)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context )\n   {\n      // Instead of serializing this Object*, we will  \n      // serialize a SingletonSerializationHelp instead.\n      info-&gt;SetType( SingletonSerializationHelper::typeid );\n\n      // No other values need to be added.\n   }\n\n   // NOTE: ISerializable*&#39;s special constructor is NOT necessary \n   // because it&#39;s never called\n};\n\n[Serializable]\nprivate ref class SingletonSerializationHelper sealed: public IObjectReference\n{\npublic:\n\n   // This Object* has no fields (although it could).\n   // GetRealObject is called after this Object* is deserialized\n   virtual Object^ GetRealObject( StreamingContext context )\n   {\n      // When deserialiing this Object*, return a reference to \n      // the singleton Object* instead.\n      return Singleton::GetSingleton();\n   }\n};\n\n[STAThread]\nint main()\n{\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n   try\n   {\n      // Construct a BinaryFormatter and use it \n      // to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n      // Create an array with multiple elements refering to \n      // the one Singleton Object*.\n      array&lt;Singleton^&gt;^a1 = {Singleton::GetSingleton(),Singleton::GetSingleton()};\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a1[ 1 ]) );\n\n      // Serialize the array elements.\n      formatter-&gt;Serialize( fs, a1 );\n\n      // Deserialize the array elements.\n      fs-&gt;Position = 0;\n      array&lt;Singleton^&gt;^a2 = (array&lt;Singleton^&gt;^)formatter-&gt;Deserialize( fs );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a2[ 0 ] == a2[ 1 ]) );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do all  array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a2[ 0 ]) );\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n\n   return 0;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"ISerializable Interface Example#1\">using System;\nusing System.Text;\nusing System.IO;\n// Add references to Soap and Binary formatters.\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization.Formatters.Soap ;\nusing System.Runtime.Serialization;\n\n\n[Serializable]\npublic class MyItemType : ISerializable\n{\n    public MyItemType()\n    {\n        // Empty constructor required to compile.\n    }\n\n    // The value to serialize.\n    private string myProperty_value;\n\n    public string MyProperty\n    {\n        get { return myProperty_value; }\n        set { myProperty_value = value; }\n    }\n        \n    // Implement this method to serialize data. The method is called \n    // on serialization.\n    public void GetObjectData(SerializationInfo info, StreamingContext context)\n    {\n        // Use the AddValue method to specify serialized values.\n        info.AddValue(&quot;props&quot;, myProperty_value, typeof(string));\n\n    }\n\n    // The special constructor is used to deserialize values.\n    public MyItemType(SerializationInfo info, StreamingContext context)\n    {\n        // Reset the property value using the GetValue method.\n        myProperty_value = (string) info.GetValue(&quot;props&quot;, typeof(string));\n    }\n}\n\n// This is a console application. \npublic static class Test\n{\n    static void Main()\n    {\n        // This is the name of the file holding the data. You can use any file extension you like.\n        string fileName = &quot;dataStuff.myData&quot;;\n\n        // Use a BinaryFormatter or SoapFormatter.\n        IFormatter formatter = new BinaryFormatter();\n        //IFormatter formatter = new SoapFormatter();\n            \n        Test.SerializeItem(fileName, formatter); // Serialize an instance of the class.\n        Test.DeserializeItem(fileName, formatter); // Deserialize the instance.\n        Console.WriteLine(&quot;Done&quot;);\n        Console.ReadLine();\n    }\n\n    public static void SerializeItem(string fileName, IFormatter formatter)\n    {\n        // Create an instance of the type and serialize it.\n        MyItemType t = new MyItemType();\n        t.MyProperty = &quot;Hello World&quot;;\n\n        FileStream s = new FileStream(fileName , FileMode.Create);\n        formatter.Serialize(s, t);            \n        s.Close();\n    }\n\n\n    public static void DeserializeItem(string fileName, IFormatter formatter)\n    {\n        FileStream s = new FileStream(fileName, FileMode.Open);\n        MyItemType t = (MyItemType)formatter.Deserialize(s);\n        Console.WriteLine(t.MyProperty);            \n    }       \n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ISerializable Interface Example#1\">Imports System.Text\nImports System.IO\n&#39; Add references to Soap and Binary formatters.\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization.Formatters.Soap\nImports System.Runtime.Serialization\n\n\n&lt;Serializable()&gt; _\nPublic Class MyItemType\n    Implements ISerializable\n    &#39; Empty constructor required to compile.\n    Public Sub New()\n    End Sub\n\n    &#39; The value to serialize.\n    Private myProperty_value As String\n\n    Public Property MyProperty() As String\n        Get\n            Return myProperty_value\n        End Get\n        Set(value As String)\n            myProperty_value = value\n        End Set\n    End Property\n\n    &#39; Implement this method to serialize data. The method is called \n    &#39; on serialization.\n    Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData\n        &#39; Use the AddValue method to specify serialized values.\n        info.AddValue(&quot;props&quot;, myProperty_value, GetType(String))\n\n    End Sub\n\n    &#39; The special constructor is used to deserialize values.\n    Public Sub New(info As SerializationInfo, context As StreamingContext)\n        &#39; Reset the property value using the GetValue method.\n        myProperty_value = DirectCast(info.GetValue(&quot;props&quot;, GetType(String)), String)\n    End Sub\nEnd Class\n\n&#39; This is a console application. \nPublic Class Test\n\n\n    Public Shared Sub Main()\n        &#39; This is the name of the file holding the data. You can use any file extension you like.\n        Dim fileName As String = &quot;dataStuff.myData&quot;\n\n        &#39; Use a BinaryFormatter or SoapFormatter.\n        Dim formatter As IFormatter = New BinaryFormatter()\n        &#39; Dim formatter As IFormatter = New SoapFormatter()\n\n        Test.SerializeItem(fileName, formatter)\n        &#39; Serialize an instance of the class.\n        Test.DeserializeItem(fileName, formatter)\n        &#39; Deserialize the instance.\n        Console.WriteLine(&quot;Done&quot;)\n        Console.ReadLine()\n    End Sub\n\n    Public Shared Sub SerializeItem(fileName As String, formatter As IFormatter)\n        &#39; Create an instance of the type and serialize it.\n        Dim myType As New MyItemType()\n        myType.MyProperty = &quot;Hello World&quot;\n\n        Dim fs As New FileStream(fileName, FileMode.Create)\n        formatter.Serialize(fs, myType)\n        fs.Close()\n    End Sub\n\n\n    Public Shared Sub DeserializeItem(fileName As String, formatter As IFormatter)\n        Dim fs As New FileStream(fileName, FileMode.Open)\n\n        Dim myType As MyItemType = DirectCast(formatter.Deserialize(fs), MyItemType)\n        Console.WriteLine(myType.MyProperty)\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetInt64_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInt64(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a 64-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long GetInt64 (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The 64-bit signed integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a 64-bit signed integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a 64-bit signed integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetSByte_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetSByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSByte(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an 8-bit signed integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sbyte GetSByte (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></div>\r\n                  </div>\r\n                  <p>The 8-bit signed integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to an 8-bit signed integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is an <code>Int8</code>, or can be converted to an <code>Int8</code>, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetSingle_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetSingle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSingle(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a single-precision floating-point value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float GetSingle (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The single-precision floating-point value associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a single-precision floating-point value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a single-precision floating-point number, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetString_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetString (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, or can be converted to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetUInt16_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetUInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUInt16(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a 16-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ushort GetUInt16 (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </div>\r\n                  <p>The 16-bit unsigned integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a 16-bit unsigned integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a 16-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetUInt32_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetUInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUInt32(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a 32-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public uint GetUInt32 (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </div>\r\n                  <p>The 32-bit unsigned integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a 32-bit unsigned integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetUInt64_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetUInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUInt64(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a 64-bit unsigned integer value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ulong GetUInt64 (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>The 64-bit unsigned integer associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to a 64-bit unsigned integer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value is a 64-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> is thrown. All conversions are done by the <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter\" data-linktype=\"relative-path\">IFormatterConverter</a> associated with this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_GetValue_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_GetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValue(String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a value from the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetValue (string name, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name associated with the value to retrieve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the value to retrieve. If the stored value cannot be converted to this type, the system will throw a <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> associated with <code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> or <code>type</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The value associated with <code>name</code> cannot be converted to <code>type</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element with the specified name is not found in the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the data stored in the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> is of the type requested (or one of its derived classes), that value is returned directly. Otherwise, <a class=\"xref\" href=\"system.runtime.serialization.iformatterconverter#System_Runtime_Serialization_IFormatterConverter_Convert_\" data-linktype=\"relative-path\">Convert</a> is called to convert it to the appropriate type.  </p>\n<p> The value returned by the GetValue method can always be safely cast to the type specified in the <code>type</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the GetValue method:  </p>\n<pre><code class=\"lang-vb\" name=\"Classic SerializationInfo.GetValue Example#1\">&#39; A serializable LinkedList example.  For the full LinkedList implementation\n&#39; see the Serialization sample.\n&lt;Serializable()&gt; Class LinkedList\n    Implements ISerializable\n\n    Public Shared Sub Main()\n    End Sub\n\n    Private m_head As Node = Nothing\n    Private m_tail As Node = Nothing    \n    \n    &#39; Serializes the object.\n    Public Sub GetObjectData(info As SerializationInfo, _\n    context As StreamingContext) Implements ISerializable.GetObjectData\n    \n        &#39; Stores the m_head and m_tail references in the SerializationInfo info.\n        info.AddValue(&quot;head&quot;, m_head, m_head.GetType())\n        info.AddValue(&quot;tail&quot;, m_tail, m_tail.GetType())\n    End Sub\n    \n    \n    &#39; Constructor that is called automatically during deserialization.\n    &#39; Reconstructs the object from the information in SerializationInfo info.\n    Private Sub New(info As SerializationInfo, context As StreamingContext)\n        Dim temp As New Node(0)\n        &#39; Retrieves the values of Type temp.GetType() from SerializationInfo info.\n        m_head = CType(info.GetValue(&quot;head&quot;, temp.GetType()), Node)\n        m_tail = CType(info.GetValue(&quot;tail&quot;, temp.GetType()), Node)\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic SerializationInfo.GetValue Example#1\">// A serializable LinkedList example.  For the full LinkedList implementation\n// see the Serialization sample.\n[Serializable()]\nclass LinkedList: ISerializable {\n\n   public static void Main() {}\n\n   Node m_head = null;\n   Node m_tail = null;\n   \n   // Serializes the object.\n   [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter=true)]\n   public void GetObjectData(SerializationInfo info, StreamingContext context){\n      // Stores the m_head and m_tail references in the SerializationInfo info.\n      info.AddValue(&quot;head&quot;, m_head, m_head.GetType());\n      info.AddValue(&quot;tail&quot;, m_tail, m_tail.GetType());\n   }\n   \n   // Constructor that is called automatically during deserialization.\n   // Reconstructs the object from the information in SerializationInfo info\n   [SecurityPermissionAttribute(SecurityAction.Demand, SerializationFormatter=true)]\n   private LinkedList(SerializationInfo info, StreamingContext context)\n   {      \n      Node temp = new Node(0);\n      // Retrieves the values of Type temp.GetType() from SerializationInfo info\n      m_head = (Node)info.GetValue(&quot;head&quot;, temp.GetType());\n      m_tail = (Node)info.GetValue(&quot;tail&quot;, temp.GetType());\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic SerializationInfo.GetValue Example#1\">// A serializable LinkedList example.  For the full LinkedList implementation\n// see the Serialization sample.\n[Serializable]\nref class LinkedList: public ISerializable\n{\nprivate:\n   Node^ m_head;\n   Node^ m_tail;\n\n   // Serializes the object.\npublic:\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext /*context*/ )\n   {\n      // Stores the m_head and m_tail references in the SerializationInfo info.\n      info-&gt;AddValue( &quot;head&quot;, m_head, m_head-&gt;GetType() );\n      info-&gt;AddValue( &quot;tail&quot;, m_tail, m_tail-&gt;GetType() );\n   }\n\n   // Constructor that is called automatically during deserialization.\nprivate:\n   // Reconstructs the object from the information in SerializationInfo info\n   LinkedList( SerializationInfo^ info, StreamingContext /*context*/ )\n   {\n      Node^ temp = gcnew Node( 0 );\n      // Retrieves the values of Type temp.GetType() from SerializationInfo info\n      m_head = dynamic_cast&lt;Node^&gt;(info-&gt;GetValue( &quot;head&quot;, temp-&gt;GetType() ));\n      m_tail = dynamic_cast&lt;Node^&gt;(info-&gt;GetValue( &quot;tail&quot;, temp-&gt;GetType() ));\n   }\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_SerializationInfo_SetType_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_SerializationInfo_SetType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetType (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the object to serialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.runtime.serialization.formatter\" data-linktype=\"relative-path\">Formatter</a> is responsible for setting the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance before passing it to <a class=\"xref\" href=\"system.runtime.serialization.iserializable#System_Runtime_Serialization_ISerializable_GetObjectData_\" data-linktype=\"relative-path\">GetObjectData</a>. However, users who want to send proxies for their objects will need to change the type represented by this <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> instance. Using the SetType method is equivalent to setting both the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_FullTypeName_\" data-linktype=\"relative-path\">FullTypeName</a> and the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_AssemblyName_\" data-linktype=\"relative-path\">AssemblyName</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"IObjectReference Interface Example#1\">using System;\nusing System.Web;\nusing System.IO;\nusing System.Collections;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Runtime.Serialization;\nusing System.Security.Permissions;\n\n\n// There should be only one instance of this type per AppDomain.\n[Serializable]\n[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n[AspNetHostingPermission(SecurityAction.LinkDemand, \n    Level=AspNetHostingPermissionLevel.Minimal)]\npublic sealed class Singleton : ISerializable \n{\n    // This is the one instance of this type.\n    private static readonly Singleton theOneObject = new Singleton();\n\n    // Here are the instance fields.\n    private string someString_value;\n    private Int32 someNumber_value;\n\n   public string SomeString\n   {\n       get{return someString_value;}\n       set{someString_value = value;}\n   }\n\n   public Int32 SomeNumber\n   {\n       get{return someNumber_value;}\n       set{someNumber_value = value;}\n   }\n\n    // Private constructor allowing this type to construct the Singleton.\n    private Singleton() \n    { \n        // Do whatever is necessary to initialize the Singleton.\n        someString_value = &quot;This is a string field&quot;;\n        someNumber_value = 123;\n    }\n\n    // A method returning a reference to the Singleton.\n    public static Singleton GetSingleton() \n    { \n        return theOneObject; \n    }\n\n    // A method called when serializing a Singleton.\n   [SecurityPermissionAttribute(SecurityAction.LinkDemand, \n   Flags=SecurityPermissionFlag.SerializationFormatter)]\n    void ISerializable.GetObjectData(\n        SerializationInfo info, StreamingContext context) \n    {\n        // Instead of serializing this object, \n        // serialize a SingletonSerializationHelp instead.\n        info.SetType(typeof(SingletonSerializationHelper));\n        // No other values need to be added.\n    }\n\n    // Note: ISerializable&#39;s special constructor is not necessary \n    // because it is never called.\n}\n\n\n[Serializable]\n[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)]\n[SecurityPermissionAttribute(SecurityAction.LinkDemand, \n    Flags=SecurityPermissionFlag.SerializationFormatter)]\n[AspNetHostingPermission(SecurityAction.LinkDemand, \n   Level=AspNetHostingPermissionLevel.Minimal)]\ninternal sealed class SingletonSerializationHelper : IObjectReference \n{\n    // This object has no fields (although it could).\n\n    // GetRealObject is called after this object is deserialized.\n    public Object GetRealObject(StreamingContext context) \n    {\n        // When deserialiing this object, return a reference to \n        // the Singleton object instead.\n        return Singleton.GetSingleton();\n    }\n}\n\n\nclass App \n{\n    [STAThread]\n    static void Main() \n    {\n        FileStream fs = new FileStream(&quot;DataFile.dat&quot;, FileMode.Create);\n\n        try \n        {\n            // Construct a BinaryFormatter and use it \n            // to serialize the data to the stream.\n            BinaryFormatter formatter = new BinaryFormatter();\n\n            // Create an array with multiple elements refering to \n            // the one Singleton object.\n            Singleton[] a1 = { Singleton.GetSingleton(), Singleton.GetSingleton() };\n\n            // This displays &quot;True&quot;.\n            Console.WriteLine(\n                &quot;Do both array elements refer to the same object? &quot; + \n                (a1[0] == a1[1]));     \n\n            // Serialize the array elements.\n            formatter.Serialize(fs, a1);\n\n            // Deserialize the array elements.\n            fs.Position = 0;\n            Singleton[] a2 = (Singleton[]) formatter.Deserialize(fs);\n\n            // This displays &quot;True&quot;.\n            Console.WriteLine(&quot;Do both array elements refer to the same object? &quot; \n                + (a2[0] == a2[1])); \n\n            // This displays &quot;True&quot;.\n            Console.WriteLine(&quot;Do all array elements refer to the same object? &quot; \n                + (a1[0] == a2[0]));\n        }   \n        catch (SerializationException e) \n        {\n            Console.WriteLine(&quot;Failed to serialize. Reason: &quot; + e.Message);\n            throw;\n        }\n        finally \n        {\n            fs.Close();\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"IObjectReference Interface Example#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Collections;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Runtime::Serialization;\n\nref class SingletonSerializationHelper;\n\n// There should be only one instance of this type per AppDomain.\n\n[Serializable]\npublic ref class Singleton sealed: public ISerializable\n{\nprivate:\n\n   // This is the one instance of this type.\n   static Singleton^ theOneObject = gcnew Singleton;\n\npublic:\n\n   // Here are the instance fields.\n   String^ someString;\n   Int32 someNumber;\n\nprivate:\n\n   // Private constructor allowing this type to construct the singleton.\n   Singleton()\n   {\n      // Do whatever is necessary to initialize the singleton.\n      someString = &quot;This is a String* field&quot;;\n      someNumber = 123;\n   }\n\npublic:\n\n   // A method returning a reference to the singleton.\n   static Singleton^ GetSingleton()\n   {\n      return theOneObject;\n   }\n\n   // A method called when serializing a Singleton.\n   [System::Security::Permissions::SecurityPermissionAttribute\n   (System::Security::Permissions::SecurityAction::LinkDemand, \n   Flags=System::Security::Permissions::SecurityPermissionFlag::SerializationFormatter)]\n   virtual void GetObjectData( SerializationInfo^ info, StreamingContext context )\n   {\n      // Instead of serializing this Object*, we will  \n      // serialize a SingletonSerializationHelp instead.\n      info-&gt;SetType( SingletonSerializationHelper::typeid );\n      \n      // No other values need to be added.\n   }\n\n   // NOTE: ISerializable*&#39;s special constructor is NOT necessary \n   // because it&#39;s never called\n};\n\n[Serializable]\nprivate ref class SingletonSerializationHelper sealed: public IObjectReference\n{\npublic:\n\n   // This Object* has no fields (although it could).\n   // GetRealObject is called after this Object* is deserialized\n   virtual Object^ GetRealObject( StreamingContext context )\n   {\n      // When deserialiing this Object*, return a reference to \n      // the singleton Object* instead.\n      return Singleton::GetSingleton();\n   }\n};\n\n[STAThread]\nint main()\n{\n   FileStream^ fs = gcnew FileStream( &quot;DataFile.dat&quot;,FileMode::Create );\n   try\n   {\n      // Construct a BinaryFormatter and use it \n      // to serialize the data to the stream.\n      BinaryFormatter^ formatter = gcnew BinaryFormatter;\n\n      // Create an array with multiple elements refering to \n      // the one Singleton Object*.\n      array&lt;Singleton^&gt;^a1 = {Singleton::GetSingleton(),Singleton::GetSingleton()};\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a1[ 1 ]) );\n\n      // Serialize the array elements.\n      formatter-&gt;Serialize( fs, a1 );\n\n      // Deserialize the array elements.\n      fs-&gt;Position = 0;\n      array&lt;Singleton^&gt;^a2 = (array&lt;Singleton^&gt;^)formatter-&gt;Deserialize( fs );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do both array elements refer to the same Object? {0}&quot;, (a2[ 0 ] == a2[ 1 ]) );\n\n      // This displays S&quot;True&quot;.\n      Console::WriteLine( &quot;Do all  array elements refer to the same Object? {0}&quot;, (a1[ 0 ] == a2[ 0 ]) );\n   }\n   catch ( SerializationException^ e ) \n   {\n      Console::WriteLine( &quot;Failed to serialize. Reason: {0}&quot;, e-&gt;Message );\n      throw;\n   }\n   finally\n   {\n      fs-&gt;Close();\n   }\n\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"IObjectReference Interface Example#1\">Imports System\nImports System.Web\nImports System.IO\nImports System.Collections\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Runtime.Serialization\nImports System.Security.Permissions\n\n\n&#39; There should be only one instance of this type per AppDomain.\n&lt;Serializable()&gt; _\n&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic NotInheritable Class Singleton\n   Implements ISerializable\n\n   &#39; This is the one instance of this type.\n   Private Shared ReadOnly theOneObject As New Singleton\n\n   &#39; Here are the instance fields.\n   Private someString As String\n   private someNumber As Int32\n\n   &#39; Private constructor allowing this type to construct the Singleton.\n   Private Sub New()\n      &#39; Do whatever is necessary to initialize the Singleton.\n      someString = &quot;This is a string field&quot;\n      someNumber = 123\n   End Sub\n\n   &#39; A method returning a reference to the Singleton.\n   Public Shared Function GetSingleton() As Singleton\n      Return theOneObject\n   End Function\n\n   &#39; A method called when serializing a Singleton.\n   &lt;SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags:=SecurityPermissionFlag.SerializationFormatter)&gt; _\n   Private Sub GetObjectData(ByVal info As SerializationInfo, _\n      ByVal context As StreamingContext) _\n      Implements ISerializable.GetObjectData\n\n      &#39; Instead of serializing this object, we will  \n      &#39; serialize a SingletonSerializationHelp instead.\n      info.SetType(GetType(SingletonSerializationHelper))\n      &#39; No other values need to be added.\n   End Sub\n\n   &#39; Note: ISerializable&#39;s special constructor is not necessary \n   &#39; because it is never called.\nEnd Class\n\n\n&lt;Serializable()&gt; _\n&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nFriend NotInheritable Class SingletonSerializationHelper\n   Implements IObjectReference\n   &#39; This object has no fields (although it could).\n\n   &#39; GetRealObject is called after this object is deserialized.\n   &lt;SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags:=SecurityPermissionFlag.SerializationFormatter)&gt; _\n   Public Function GetRealObject(ByVal context As StreamingContext) As Object Implements IObjectReference.GetRealObject\n      &#39; When deserialiing this object, return a reference to \n      &#39; the Singleton object instead.\n      Return Singleton.GetSingleton()\n   End Function\nEnd Class\n\n\nClass App\n   &lt;STAThread()&gt; Shared Sub Main()\n      Dim fs As New FileStream(&quot;DataFile.dat&quot;, FileMode.Create)\n\n      Try\n         &#39; Construct a BinaryFormatter and use it \n         &#39; to serialize the data to the stream.\n         Dim formatter As New BinaryFormatter\n\n         &#39; Create an array with multiple elements refering to \n         &#39; the one Singleton object.\n         Dim a1() As Singleton = {Singleton.GetSingleton(), Singleton.GetSingleton()}\n\n         &#39; This displays &quot;True&quot;.\n         Console.WriteLine(&quot;Do both array elements refer to the same object? &quot; &amp; _\n            Object.ReferenceEquals(a1(0), a1(1)))\n\n         &#39; Serialize the array elements.\n         formatter.Serialize(fs, a1)\n\n         &#39; Deserialize the array elements.\n         fs.Position = 0\n         Dim a2() As Singleton = DirectCast(formatter.Deserialize(fs), Singleton())\n\n         &#39; This displays &quot;True&quot;.\n         Console.WriteLine(&quot;Do both array elements refer to the same object? &quot; &amp; _\n            Object.ReferenceEquals(a2(0), a2(1)))\n\n         &#39; This displays &quot;True&quot;.\n         Console.WriteLine(&quot;Do all array elements refer to the same object? &quot; &amp; _\n            Object.ReferenceEquals(a1(0), a2(0)))\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Failed to serialize. Reason: &quot; &amp; e.Message)\n         Throw\n      Finally\n         fs.Close()\n      End Try\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.SerializationInfo.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.SerializationInfo.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.AddValue\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.AssemblyName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.FullTypeName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetBoolean\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetByte\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetChar\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetDateTime\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetDecimal\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetDouble\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetInt16\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetInt32\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetInt64\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetSByte\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetSingle\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetString\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetUInt16\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetUInt32\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetUInt64\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.GetValue\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.MemberCount\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.ObjectType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.SerializationInfo.SetType\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0824bca7-d05d-c3e3-73bd-4b09b281edaf\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.SerializationInfo\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.SerializationInfo.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.SerializationInfo.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.SerializationInfo","System.Runtime.Serialization.SerializationInfo..ctor","System.Runtime.Serialization.SerializationInfo.AddValue","System.Runtime.Serialization.SerializationInfo.AssemblyName","System.Runtime.Serialization.SerializationInfo.FullTypeName","System.Runtime.Serialization.SerializationInfo.GetBoolean","System.Runtime.Serialization.SerializationInfo.GetByte","System.Runtime.Serialization.SerializationInfo.GetChar","System.Runtime.Serialization.SerializationInfo.GetDateTime","System.Runtime.Serialization.SerializationInfo.GetDecimal","System.Runtime.Serialization.SerializationInfo.GetDouble","System.Runtime.Serialization.SerializationInfo.GetEnumerator","System.Runtime.Serialization.SerializationInfo.GetInt16","System.Runtime.Serialization.SerializationInfo.GetInt32","System.Runtime.Serialization.SerializationInfo.GetInt64","System.Runtime.Serialization.SerializationInfo.GetSByte","System.Runtime.Serialization.SerializationInfo.GetSingle","System.Runtime.Serialization.SerializationInfo.GetString","System.Runtime.Serialization.SerializationInfo.GetUInt16","System.Runtime.Serialization.SerializationInfo.GetUInt32","System.Runtime.Serialization.SerializationInfo.GetUInt64","System.Runtime.Serialization.SerializationInfo.GetValue","System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit","System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit","System.Runtime.Serialization.SerializationInfo.MemberCount","System.Runtime.Serialization.SerializationInfo.ObjectType","System.Runtime.Serialization.SerializationInfo.SetType"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.SerializationInfo","System::Runtime::Serialization::SerializationInfo","System.Runtime.Serialization.SerializationInfo.#ctor","System::Runtime::Serialization::SerializationInfo::#ctor","System.Runtime.Serialization.SerializationInfo.AddValue","System::Runtime::Serialization::SerializationInfo::AddValue","System.Runtime.Serialization.SerializationInfo.AssemblyName","System::Runtime::Serialization::SerializationInfo::AssemblyName","System.Runtime.Serialization.SerializationInfo.FullTypeName","System::Runtime::Serialization::SerializationInfo::FullTypeName","System.Runtime.Serialization.SerializationInfo.GetBoolean","System::Runtime::Serialization::SerializationInfo::GetBoolean","System.Runtime.Serialization.SerializationInfo.GetByte","System::Runtime::Serialization::SerializationInfo::GetByte","System.Runtime.Serialization.SerializationInfo.GetChar","System::Runtime::Serialization::SerializationInfo::GetChar","System.Runtime.Serialization.SerializationInfo.GetDateTime","System::Runtime::Serialization::SerializationInfo::GetDateTime","System.Runtime.Serialization.SerializationInfo.GetDecimal","System::Runtime::Serialization::SerializationInfo::GetDecimal","System.Runtime.Serialization.SerializationInfo.GetDouble","System::Runtime::Serialization::SerializationInfo::GetDouble","System.Runtime.Serialization.SerializationInfo.GetEnumerator","System::Runtime::Serialization::SerializationInfo::GetEnumerator","System.Runtime.Serialization.SerializationInfo.GetInt16","System::Runtime::Serialization::SerializationInfo::GetInt16","System.Runtime.Serialization.SerializationInfo.GetInt32","System::Runtime::Serialization::SerializationInfo::GetInt32","System.Runtime.Serialization.SerializationInfo.GetInt64","System::Runtime::Serialization::SerializationInfo::GetInt64","System.Runtime.Serialization.SerializationInfo.GetSByte","System::Runtime::Serialization::SerializationInfo::GetSByte","System.Runtime.Serialization.SerializationInfo.GetSingle","System::Runtime::Serialization::SerializationInfo::GetSingle","System.Runtime.Serialization.SerializationInfo.GetString","System::Runtime::Serialization::SerializationInfo::GetString","System.Runtime.Serialization.SerializationInfo.GetUInt16","System::Runtime::Serialization::SerializationInfo::GetUInt16","System.Runtime.Serialization.SerializationInfo.GetUInt32","System::Runtime::Serialization::SerializationInfo::GetUInt32","System.Runtime.Serialization.SerializationInfo.GetUInt64","System::Runtime::Serialization::SerializationInfo::GetUInt64","System.Runtime.Serialization.SerializationInfo.GetValue","System::Runtime::Serialization::SerializationInfo::GetValue","System.Runtime.Serialization.SerializationInfo.IsAssemblyNameSetExplicit","System::Runtime::Serialization::SerializationInfo::IsAssemblyNameSetExplicit","System.Runtime.Serialization.SerializationInfo.IsFullTypeNameSetExplicit","System::Runtime::Serialization::SerializationInfo::IsFullTypeNameSetExplicit","System.Runtime.Serialization.SerializationInfo.MemberCount","System::Runtime::Serialization::SerializationInfo::MemberCount","System.Runtime.Serialization.SerializationInfo.ObjectType","System::Runtime::Serialization::SerializationInfo::ObjectType","System.Runtime.Serialization.SerializationInfo.SetType","System::Runtime::Serialization::SerializationInfo::SetType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0824bca7-d05d-c3e3-73bd-4b09b281edaf","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/SerializationInfo.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SerializationInfo class | Microsoft Docs","_op_ogTitle":"SerializationInfo class","description":"Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.SerializationInfo","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.serializationinfo","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.serializationinfo","fileRelativePath":"System.Runtime.Serialization.SerializationInfo.html"},"themesRelativePathToOutputRoot":"_themes/"}