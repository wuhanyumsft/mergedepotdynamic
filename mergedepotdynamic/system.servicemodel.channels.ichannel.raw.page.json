{"content":"    \r\n    <h1 id=\"System_ServiceModel_Channels_IChannel\">\r\n      <span class=\"lang-csharp\">IChannel</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IChannel : System.ServiceModel.ICommunicationObject</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Channels must satisfy the contract of a state machine as defined by the <a class=\"xref\" href=\"system.servicemodel.icommunicationobject\" data-linktype=\"relative-path\">ICommunicationObject</a> interface.  </p>\n<p> The IChannel interface adds the  </p>\n<p> &lt;xref:System.ServiceModel.Channels.IChannel.GetProperty%2A&gt; method to the <a class=\"xref\" href=\"system.servicemodel.icommunicationobject\" data-linktype=\"relative-path\">ICommunicationObject</a> interface. This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live. The term &quot;property&quot; in the method name refers to a piece of information that belongs to one of the channels in the stack. The CLR type for that property is determined by <code>T</code>. This method of retrieval is also used on channel factories and channel listeners.  </p>\n<p> <code>IChannel</code> is inherited by each of the channel interfaces associated with the basic message-exchange patterns:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.servicemodel.channels.iinputchannel\" data-linktype=\"relative-path\">IInputChannel</a> for receiving messages.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.servicemodel.channels.ioutputchannel\" data-linktype=\"relative-path\">IOutputChannel</a> for sending messages.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.servicemodel.channels.irequestchannel\" data-linktype=\"relative-path\">IRequestChannel</a> for sending a request.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.servicemodel.channels.ireplychannel\" data-linktype=\"relative-path\">IReplyChannel</a> for sending a reply.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.servicemodel.channels.iduplexchannel\" data-linktype=\"relative-path\">IDuplexChannel</a> for bi-directional messaging.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ServiceModel_Channels_IChannel_GetProperty__1\" data-linktype=\"self-bookmark\">GetProperty&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ServiceModel_Channels_IChannel_GetProperty__1\">\r\n    \r\n            <a id=\"System_ServiceModel_Channels_IChannel_GetProperty_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperty&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T GetProperty&lt;T&gt; () where T : class;</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The typed object <code>T</code> requested if it is present or <code>null</code> if it is not.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack. If a layer supports returning the requested object, it returns it. If not, it delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an<code>InnerChannel</code> property that retrieves the inner channel for this channel.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UEIChannel#0\">public virtual T GetProperty&lt;T&gt;() where T : class\n{\n    IChannel innerChannel = this.InnerChannel;\n    if (innerChannel != null)\n        return innerChannel.GetProperty&lt;T&gt;();\n    return null;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Channels.IChannel.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Channels.IChannel.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IChannel\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Channels.IChannel.GetProperty&lt;T&gt;\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"80db4cd3-c2a9-f897-335a-0ddebe10210e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method tâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Channels/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Channels.IChannel\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Channels.IChannel.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Channels.IChannel.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Channels.IChannel","System.ServiceModel.Channels.IChannel.GetProperty<T>"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Channels.IChannel","System::ServiceModel::Channels::IChannel","System.ServiceModel.Channels.IChannel.GetProperty``1","System::ServiceModel::Channels::IChannel::GetProperty``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"80db4cd3-c2a9-f897-335a-0ddebe10210e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Channels/IChannel.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IChannel interface | Microsoft Docs","_op_ogTitle":"IChannel interface","description":"Defines the basic interface that all channel objects must implement. It requires that they implement the state machine interface shared by all communication objects and that they implement a method tâ€¦","toc_asset_id":"_splitted/System.ServiceModel.Channels/toc.json","toc_rel":"_splitted/System.ServiceModel.Channels/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Channels.IChannel","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.channels.ichannel","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.channels.ichannel","fileRelativePath":"System.ServiceModel.Channels.IChannel.html"},"themesRelativePathToOutputRoot":"_themes/"}