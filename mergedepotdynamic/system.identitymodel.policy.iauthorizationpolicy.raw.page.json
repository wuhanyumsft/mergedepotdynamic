{"content":"    \r\n    <h1 id=\"System_IdentityModel_Policy_IAuthorizationPolicy\">\r\n      <span class=\"lang-csharp\">IAuthorizationPolicy</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a set of rules for authorizing a user, given a set of claims.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Implement the IAuthorizationPolicy interface to add or map one set of claims to another. An authorization policy examines a set of claims and adds additional claims based on the current set. For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the <a class=\"xref\" href=\"system.identitymodel.policy.evaluationcontext\" data-linktype=\"relative-path\">EvaluationContext</a>.  </p>\n<p> Classes that implement the IAuthorizationPolicy interface do not authorize users, but they enable the <a class=\"xref\" href=\"system.servicemodel.serviceauthorizationmanager\" data-linktype=\"relative-path\">ServiceAuthorizationManager</a> class to do so. The <a class=\"xref\" href=\"system.servicemodel.serviceauthorizationmanager\" data-linktype=\"relative-path\">ServiceAuthorizationManager</a> calls the <a class=\"xref\" href=\"system.identitymodel.policy.iauthorizationpolicy#System_IdentityModel_Policy_IAuthorizationPolicy_Evaluate_\" data-linktype=\"relative-path\">Evaluate</a> method for each authorization policy in effect. The <a class=\"xref\" href=\"system.identitymodel.policy.iauthorizationpolicy#System_IdentityModel_Policy_IAuthorizationPolicy_Evaluate_\" data-linktype=\"relative-path\">Evaluate</a> method determines whether additional claims should be added for the user, based on the current context. An authorization policy&#39;s <a class=\"xref\" href=\"system.identitymodel.policy.iauthorizationpolicy#System_IdentityModel_Policy_IAuthorizationPolicy_Evaluate_\" data-linktype=\"relative-path\">Evaluate</a> method may be called multiple times, as claims are added to the <a class=\"xref\" href=\"system.identitymodel.policy.evaluationcontext\" data-linktype=\"relative-path\">EvaluationContext</a> by other authorization policies. When all authorization policies in effect are done, the <a class=\"xref\" href=\"system.servicemodel.serviceauthorizationmanager\" data-linktype=\"relative-path\">ServiceAuthorizationManager</a> class makes authorization decisions based upon the final set of claims. The <a class=\"xref\" href=\"system.servicemodel.serviceauthorizationmanager\" data-linktype=\"relative-path\">ServiceAuthorizationManager</a> class then creates an <a class=\"xref\" href=\"system.identitymodel.policy.authorizationcontext\" data-linktype=\"relative-path\">AuthorizationContext</a> that contains an immutable set of claims that reflects these authorization decisions.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Policy_IAuthorizationPolicy_Issuer\" data-linktype=\"self-bookmark\">Issuer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a claim set that represents the issuer of the authorization policy.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IdentityModel_Policy_IAuthorizationPolicy_Evaluate_System_IdentityModel_Policy_EvaluationContext_System_Object__\" data-linktype=\"self-bookmark\">Evaluate(EvaluationContext,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Evaluates whether a user meets the requirements for this authorization policy.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Policy_IAuthorizationPolicy_Issuer\">\r\n    \r\n            <a id=\"System_IdentityModel_Policy_IAuthorizationPolicy_Issuer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Issuer</div>        \r\n          </div>\r\n    \r\n            <p>Gets a claim set that represents the issuer of the authorization policy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IdentityModel.Claims.ClaimSet Issuer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.claims.claimset\" data-linktype=\"relative-path\">ClaimSet</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.identitymodel.claims.claimset\" data-linktype=\"relative-path\">ClaimSet</a> that represents the issuer of the authorization policy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IdentityModel_Policy_IAuthorizationPolicy_Evaluate_System_IdentityModel_Policy_EvaluationContext_System_Object__\">\r\n    \r\n            <a id=\"System_IdentityModel_Policy_IAuthorizationPolicy_Evaluate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Evaluate(EvaluationContext,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Evaluates whether a user meets the requirements for this authorization policy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evaluationContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.identitymodel.policy.evaluationcontext\" data-linktype=\"relative-path\">EvaluationContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.identitymodel.policy.evaluationcontext\" data-linktype=\"relative-path\">EvaluationContext</a> that contains the claim set that the authorization policy evaluates.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>, passed by reference that represents the custom state for this authorization policy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> if the Evaluate method for this authorization policy must be called if additional claims are added by other authorization policies to <code>evaluationContext</code>; otherwise, <code>true</code> to state no additional evaluation is required by this authorization policy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> Implementers of the <a class=\"xref\" href=\"system.identitymodel.policy.iauthorizationpolicy\" data-linktype=\"relative-path\">IAuthorizationPolicy</a> interface should expect the Evaluate method to be called multiple times by different threads.  </p>\n</div>\n<p> Implementers of the <a class=\"xref\" href=\"system.identitymodel.policy.iauthorizationpolicy\" data-linktype=\"relative-path\">IAuthorizationPolicy</a> interface can use the <code>state</code> parameter to track state between calls to the Evaluate method. If a state object is set inside a given call to the Evaluate method, the same object instance is passed to each and every subsequent call to the Evaluate method in the current evaluation process.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"C_IAuthorizationPolicy#2\">            public bool Evaluate(EvaluationContext evaluationContext, ref object state)\n            {\n                bool bRet = false;\n                CustomAuthState customstate = null;\n\n                // If state is null, then this method has not been called before, so \n                // set up a custom state.\n                if (state == null)\n                {\n                    customstate = new CustomAuthState();\n                    state = customstate;\n                }\n                else\n                    customstate = (CustomAuthState)state;\n\n                Console.WriteLine(&quot;Inside MyAuthorizationPolicy::Evaluate&quot;);\n\n                // If claims have not been added yet...\n                if (!customstate.ClaimsAdded)\n                {\n                    // Create an empty list of Claims.\n                    IList&lt;Claim&gt; claims = new List&lt;Claim&gt;();\n\n                    // Iterate through each of the claim sets in the evaluation context.\n                    foreach (ClaimSet cs in evaluationContext.ClaimSets)\n                        // Look for Name claims in the current claim set.\n                        foreach (Claim c in cs.FindClaims(ClaimTypes.Name, Rights.PossessProperty))\n                            // Get the list of operations the given username is allowed to call.\n                            foreach (string s in GetAllowedOpList(c.Resource.ToString()))\n                            {\n                                // Add claims to the list.\n                                claims.Add(new Claim(&quot;http://example.org/claims/allowedoperation&quot;, s, Rights.PossessProperty));\n                                Console.WriteLine(&quot;Claim added {0}&quot;, s);\n                            }\n\n                    // Add claims to the evaluation context.\n                    evaluationContext.AddClaimSet(this, new DefaultClaimSet(this.Issuer,claims));\n\n                    // Record that claims have been added.\n                    customstate.ClaimsAdded = true;\n\n                    // Return true, which indicates this need not be called again.\n                    bRet = true;\n                }\n                else\n                {\n                    // This point should not be reached, but just in case...\n                    bRet = true;\n                }\n\n\n                return bRet;\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"C_IAuthorizationPolicy#2\">    Public Function Evaluate(ByVal evaluationContext As EvaluationContext, _\n         ByRef state As Object) As Boolean Implements IAuthorizationPolicy.Evaluate\n\n        Dim bRet As Boolean = False\n        Dim customstate As CustomAuthState = Nothing\n\n        &#39; If state is null, then this method has not been called before, so \n        &#39; set up a custom state.\n        If state Is Nothing Then\n            customstate = New CustomAuthState()\n            state = customstate\n        Else\n            customstate = CType(state, CustomAuthState)\n        End If\n        Console.WriteLine(&quot;Inside MyAuthorizationPolicy::Evaluate&quot;)\n\n        &#39; If the claims have not been added yet...\n        If Not customstate.ClaimsAdded Then\n            &#39; Create an empty list of Claims\n            Dim claims As New List(Of Claim)\n\n            &#39; Iterate through each of the claimsets in the evaluation context.\n            Dim cs As ClaimSet\n            For Each cs In evaluationContext.ClaimSets\n                &#39; Look for Name claims in the current claim set.\n                Dim c As Claim\n                For Each c In cs.FindClaims(ClaimTypes.Name, Rights.PossessProperty)\n                    &#39; Get the list of operations the given username is allowed to call.\n                    Dim s As String\n                    For Each s In GetAllowedOpList(c.Resource.ToString())\n\n                        &#39; Add claims to the list\n                        claims.Add(New Claim(&quot;http://example.org/claims/allowedoperation&quot;, _\n                                    s, Rights.PossessProperty))\n                        Console.WriteLine(&quot;Claim added {0}&quot;, s)\n                    Next s\n                Next c\n            Next cs \n            \n            &#39; Add claims to the evaluation context.\n            evaluationContext.AddClaimSet(Me, New DefaultClaimSet(Me.Issuer, claims))\n\n            &#39; Record that claims have been added.\n            customstate.ClaimsAdded = True\n\n            &#39; Return true, which indicates the method need not to be called again.\n            bRet = True\n        Else\n            &#39; Should never get here, but just in case...\n            bRet = True\n        End If\n\n\n        Return bRet\n\n    End Function &#39;Evaluate\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IdentityModel.Policy.IAuthorizationPolicy.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IdentityModel.Policy.IAuthorizationPolicy.yml\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Policy.IAuthorizationPolicy\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate\">\r\n<meta name=\"APIName\" content=\"System.IdentityModel.Policy.IAuthorizationPolicy.Issuer\">\r\n<meta name=\"APILocation\" content=\"System.IdentityModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8a7e74bd-f56d-8b28-6f65-093f8ef36b80\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a set of rules for authorizing a user, given a set of claims.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IdentityModel.Policy/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IdentityModel.Policy.IAuthorizationPolicy\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IdentityModel.Policy.IAuthorizationPolicy.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IdentityModel.Policy.IAuthorizationPolicy.yml","open_to_public_contributors":true,"api_name":["System.IdentityModel.Policy.IAuthorizationPolicy","System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate","System.IdentityModel.Policy.IAuthorizationPolicy.Issuer"],"api_location":["System.IdentityModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IdentityModel.Policy.IAuthorizationPolicy","System::IdentityModel::Policy::IAuthorizationPolicy","System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate","System::IdentityModel::Policy::IAuthorizationPolicy::Evaluate","System.IdentityModel.Policy.IAuthorizationPolicy.Issuer","System::IdentityModel::Policy::IAuthorizationPolicy::Issuer"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8a7e74bd-f56d-8b28-6f65-093f8ef36b80","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IdentityModel.Policy/IAuthorizationPolicy.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IAuthorizationPolicy interface | Microsoft Docs","_op_ogTitle":"IAuthorizationPolicy interface","description":"Defines a set of rules for authorizing a user, given a set of claims.\n","toc_asset_id":"_splitted/System.IdentityModel.Policy/toc.json","toc_rel":"_splitted/System.IdentityModel.Policy/toc.json","source_url":"","ms.assetid":"System.IdentityModel.Policy.IAuthorizationPolicy","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.identitymodel.policy.iauthorizationpolicy","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.identitymodel.policy.iauthorizationpolicy","fileRelativePath":"System.IdentityModel.Policy.IAuthorizationPolicy.html"},"themesRelativePathToOutputRoot":"_themes/"}