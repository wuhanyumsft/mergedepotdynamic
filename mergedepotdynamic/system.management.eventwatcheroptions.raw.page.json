{"content":"    \r\n    <h1 id=\"System_Management_EventWatcherOptions\">\r\n      <span class=\"lang-csharp\">EventWatcherOptions</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies options for management event watching.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class EventWatcherOptions : System.Management.ManagementOptions</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions\" data-linktype=\"relative-path\">System.Management.ManagementOptions</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EventWatcherOptions</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_InfiniteTimeout\" data-linktype=\"relative-path\">InfiniteTimeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.management.managementoptions#System_Management_ManagementOptions_Timeout\" data-linktype=\"relative-path\">Timeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_EventWatcherOptions__ctor\" data-linktype=\"self-bookmark\">EventWatcherOptions()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.eventwatcheroptions\" data-linktype=\"relative-path\">EventWatcherOptions</a> class for event watching, using default values. This is the default constructor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_EventWatcherOptions__ctor_System_Management_ManagementNamedValueCollection_System_TimeSpan_System_Int32_\" data-linktype=\"self-bookmark\">EventWatcherOptions(ManagementNamedValueCollection,TimeSpan,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.eventwatcheroptions\" data-linktype=\"relative-path\">EventWatcherOptions</a> class with the given values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_EventWatcherOptions_BlockSize\" data-linktype=\"self-bookmark\">BlockSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the block size for block operations. When waiting for events, this value specifies how many events to wait for before returning.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_EventWatcherOptions_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a copy of the object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_EventWatcherOptions__ctor\">\r\n    \r\n            <a id=\"System_Management_EventWatcherOptions__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventWatcherOptions()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.eventwatcheroptions\" data-linktype=\"relative-path\">EventWatcherOptions</a> class for event watching, using default values. This is the default constructor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EventWatcherOptions ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how the client receives notification when an instance of <strong>Win32_Process</strong> is created because the event class is <strong>__InstanceCreationEvent</strong>. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a>. The client receives events synchronously by calling the <a class=\"xref\" href=\"system.management.managementeventwatcher#System_Management_ManagementEventWatcher_WaitForNextEvent_\" data-linktype=\"relative-path\">WaitForNextEvent</a> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_EventWatcherOptions()#1\">Imports System\nImports System.Management\n\n&#39; This example shows synchronous consumption of events. \n&#39; The client is blocked while waiting for events. \n\nPublic Class EventWatcherPolling\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Create event query to be notified within 1 second of \n        &#39; a change in a service\n        Dim query As String\n        query = &quot;SELECT * FROM&quot; &amp; _\n            &quot; __InstanceCreationEvent WITHIN 1 &quot; &amp; _\n            &quot;WHERE TargetInstance isa &quot;&quot;Win32_Process&quot;&quot;&quot;\n\n        &#39; Event options\n        Dim eventOptions As New EventWatcherOptions\n        eventOptions.Timeout = System.TimeSpan.MaxValue\n\n        &#39; Initialize an event watcher and subscribe to events \n        &#39; that match this query\n        Dim watcher As New ManagementEventWatcher( _\n            &quot;root\\CIMV2&quot;, query, eventOptions)\n\n        &#39; Block until the next event occurs \n        &#39; Note: this can be done in a loop\n        &#39; if waiting for more than one occurrence\n        Console.WriteLine( _\n          &quot;Open an application (notepad.exe) to trigger an event.&quot;)\n        Dim e As ManagementBaseObject = _\n            watcher.WaitForNextEvent()\n\n        &#39;Display information from the event\n        Console.WriteLine( _\n            &quot;Process {0} has created, path is: {1}&quot;, _\n            CType(e(&quot;TargetInstance&quot;), _\n                ManagementBaseObject)(&quot;Name&quot;), _\n            CType(e(&quot;TargetInstance&quot;), _\n                ManagementBaseObject)(&quot;ExecutablePath&quot;))\n\n        &#39;Cancel the subscription\n        watcher.Stop()\n        Return 0\n\n    End Function &#39;Main\nEnd Class &#39;EventWatcherPolling\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_EventWatcherOptions()#1\">using System;\nusing System.Management;\n\n// This example shows synchronous consumption of events. \n// The client is blocked while waiting for events. \n\npublic class EventWatcherPolling \n{\n    public static int Main(string[] args) \n    {\n        // Create event query to be notified within 1 second of \n        // a change in a service\n        string query = &quot;SELECT * FROM&quot; +\n            &quot; __InstanceCreationEvent WITHIN 1 &quot; + \n            &quot;WHERE TargetInstance isa \\&quot;Win32_Process\\&quot;&quot;;\n\n        // Event options\n        EventWatcherOptions eventOptions = new\n            EventWatcherOptions();\n        eventOptions.Timeout = System.TimeSpan.MaxValue;\n\n        // Initialize an event watcher and subscribe to events \n        // that match this query\n        ManagementEventWatcher watcher =\n            new ManagementEventWatcher(&quot;root\\\\CIMV2&quot;, query,\n            eventOptions);\n      \n        // Block until the next event occurs \n        // Note: this can be done in a loop if waiting for \n        //        more than one occurrence\n        Console.WriteLine(\n            &quot;Open an application (notepad.exe) to trigger an event.&quot;);\n        ManagementBaseObject e = watcher.WaitForNextEvent();\n\n        //Display information from the event\n        Console.WriteLine(\n            &quot;Process {0} has been created, path is: {1}&quot;, \n            ((ManagementBaseObject)e\n            [&quot;TargetInstance&quot;])[&quot;Name&quot;],\n            ((ManagementBaseObject)e\n            [&quot;TargetInstance&quot;])[&quot;ExecutablePath&quot;]);\n\n        //Cancel the subscription\n        watcher.Stop();\n        return 0;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_EventWatcherOptions__ctor_System_Management_ManagementNamedValueCollection_System_TimeSpan_System_Int32_\">\r\n    \r\n            <a id=\"System_Management_EventWatcherOptions__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventWatcherOptions(ManagementNamedValueCollection,TimeSpan,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.eventwatcheroptions\" data-linktype=\"relative-path\">EventWatcherOptions</a> class with the given values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EventWatcherOptions (System.Management.ManagementNamedValueCollection context, TimeSpan timeout, int blockSize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementnamedvaluecollection\" data-linktype=\"relative-path\">ManagementNamedValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The options context object containing provider-specific information to be passed through to the provider.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time-out to wait for the next events.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>blockSize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of events to wait for in each block.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how the client receives notification when an instance of <strong>Win32_Process</strong> is created because the event class is <strong>__InstanceCreationEvent</strong>. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a>. The client receives events synchronously by calling the <a class=\"xref\" href=\"system.management.managementeventwatcher#System_Management_ManagementEventWatcher_WaitForNextEvent_\" data-linktype=\"relative-path\">WaitForNextEvent</a> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_EventWatcherOptions(3)#1\">Imports System\nImports System.Management\n\n&#39; This example shows synchronous consumption of events. \n&#39; The client is blocked while waiting for events. \n\nPublic Class EventWatcherPolling\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Create event query to be notified within 1 second of \n        &#39; a change in a service\n        Dim query As String\n        query = &quot;SELECT * FROM&quot; &amp; _\n            &quot; __InstanceCreationEvent WITHIN 1 &quot; &amp; _\n            &quot;WHERE TargetInstance isa &quot;&quot;Win32_Process&quot;&quot;&quot;\n\n        &#39; Event options\n        &#39; blockSize = 1 to receive one event\n        Dim eventOptions As New EventWatcherOptions( _\n            Nothing, System.TimeSpan.MaxValue, 1)\n\n        &#39; Initialize an event watcher and subscribe to events \n        &#39; that match this query\n        Dim watcher As New ManagementEventWatcher( _\n            &quot;root\\CIMV2&quot;, query, eventOptions)\n\n        &#39; Block until the next event occurs \n        &#39; Note: this can be done in a loop\n        &#39; if waiting for more than one occurrence\n        Console.WriteLine( _\n          &quot;Open an application (notepad.exe) to trigger an event.&quot;)\n        Dim e As ManagementBaseObject = _\n            watcher.WaitForNextEvent()\n\n        &#39;Display information from the event\n        Console.WriteLine( _\n            &quot;Process {0} has created, path is: {1}&quot;, _\n            CType(e(&quot;TargetInstance&quot;), _\n                ManagementBaseObject)(&quot;Name&quot;), _\n            CType(e(&quot;TargetInstance&quot;), _\n                ManagementBaseObject)(&quot;ExecutablePath&quot;))\n\n        &#39;Cancel the subscription\n        watcher.Stop()\n        Return 0\n\n    End Function &#39;Main\nEnd Class &#39;EventWatcherPolling\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_EventWatcherOptions(3)#1\">using System;\nusing System.Management;\n\n// This example shows synchronous consumption of events. \n// The client is blocked while waiting for events. \n\npublic class EventWatcherPolling \n{\n    public static int Main(string[] args) \n    {\n        // Create event query to be notified within 1 second of \n        // a change in a service\n        string query = &quot;SELECT * FROM&quot; +\n            &quot; __InstanceCreationEvent WITHIN 1 &quot; + \n            &quot;WHERE TargetInstance isa \\&quot;Win32_Process\\&quot;&quot;;\n\n        // Event options\n        // blockSize = 1 to receive one event\n        EventWatcherOptions eventOptions = new\n            EventWatcherOptions(null, System.TimeSpan.MaxValue,\n            1);\n\n        // Initialize an event watcher and subscribe to events \n        // that match this query\n        ManagementEventWatcher watcher =\n            new ManagementEventWatcher(&quot;root\\\\CIMV2&quot;, query,\n            eventOptions);\n      \n        // Block until the next event occurs \n        // Note: this can be done in a loop if waiting for \n        //        more than one occurrence\n        Console.WriteLine(\n            &quot;Open an application (notepad.exe) to trigger an event.&quot;);\n        ManagementBaseObject e = watcher.WaitForNextEvent();\n\n        //Display information from the event\n        Console.WriteLine(\n            &quot;Process {0} has been created, path is: {1}&quot;, \n            ((ManagementBaseObject)e\n            [&quot;TargetInstance&quot;])[&quot;Name&quot;],\n            ((ManagementBaseObject)e\n            [&quot;TargetInstance&quot;])[&quot;ExecutablePath&quot;]);\n\n        //Cancel the subscription\n        watcher.Stop();\n        return 0;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_EventWatcherOptions_BlockSize\">\r\n    \r\n            <a id=\"System_Management_EventWatcherOptions_BlockSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BlockSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the block size for block operations. When waiting for events, this value specifies how many events to wait for before returning.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int BlockSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value indicating the block size for a block of operations.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> The default value is 1.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how the client receives notification when an instance of <strong>Win32_Process</strong> is created because the event class is <strong>__InstanceCreationEvent</strong>. For more information, see the Windows Management Instrumentation documentation in the MSDN Library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a>. The client receives events synchronously by calling the <a class=\"xref\" href=\"system.management.managementeventwatcher#System_Management_ManagementEventWatcher_WaitForNextEvent_\" data-linktype=\"relative-path\">WaitForNextEvent</a> method. This example can be tested by starting a process, such as Notepad, while the example code is running.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_EventWatcherOptions_BlockSize#1\">using System;\nusing System.Management;\n\n// This example shows synchronous consumption of events. \n// The client is blocked while waiting for events. \n\npublic class EventWatcherPolling \n{\n    public static int Main(string[] args) \n    {\n        // Create event query to be notified within 1 second of \n        // a change in a service\n        string query = &quot;SELECT * FROM&quot; +\n            &quot; __InstanceCreationEvent WITHIN 1 &quot; + \n            &quot;WHERE TargetInstance isa \\&quot;Win32_Process\\&quot;&quot;;\n\n        // Event options\n        EventWatcherOptions eventOptions = new\n            EventWatcherOptions();\n        eventOptions.Timeout = System.TimeSpan.MaxValue;\n        // return after 1 event is received\n        eventOptions.BlockSize = 1;\n\n        // Initialize an event watcher and subscribe to events \n        // that match this query\n        ManagementEventWatcher watcher =\n            new ManagementEventWatcher(&quot;root\\\\CIMV2&quot;, query,\n            eventOptions);\n      \n        // Block until the next event occurs \n        // Note: this can be done in a loop if waiting for \n        //        more than one occurrence\n        Console.WriteLine(\n            &quot;Open an application (notepad.exe) to trigger an event.&quot;);\n        ManagementBaseObject e = watcher.WaitForNextEvent();\n\n        //Display information from the event\n        Console.WriteLine(\n            &quot;Process {0} has been created, path is: {1}&quot;, \n            ((ManagementBaseObject)e\n            [&quot;TargetInstance&quot;])[&quot;Name&quot;],\n            ((ManagementBaseObject)e\n            [&quot;TargetInstance&quot;])[&quot;ExecutablePath&quot;]);\n\n        //Cancel the subscription\n        watcher.Stop();\n        return 0;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_EventWatcherOptions_BlockSize#1\">Imports System\nImports System.Management\n\n&#39; This example shows synchronous consumption of events. \n&#39; The client is blocked while waiting for events. \n\nPublic Class EventWatcherPolling\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Create event query to be notified within 1 second of \n        &#39; a change in a service\n        Dim query As String\n        query = &quot;SELECT * FROM&quot; &amp; _\n            &quot; __InstanceCreationEvent WITHIN 1 &quot; &amp; _\n            &quot;WHERE TargetInstance isa &quot;&quot;Win32_Process&quot;&quot;&quot;\n\n        &#39; Event options\n        Dim eventOptions As New EventWatcherOptions\n        eventOptions.Timeout = System.TimeSpan.MaxValue\n        &#39; return after 1 event is received\n        eventOptions.BlockSize = 1\n\n\n        &#39; Initialize an event watcher and subscribe to events \n        &#39; that match this query\n        Dim watcher As New ManagementEventWatcher( _\n            &quot;root\\CIMV2&quot;, query, eventOptions)\n\n        &#39; Block until the next event occurs \n        &#39; Note: this can be done in a loop\n        &#39; if waiting for more than one occurrence\n        Console.WriteLine( _\n          &quot;Open an application (notepad.exe) to trigger an event.&quot;)\n        Dim e As ManagementBaseObject = _\n            watcher.WaitForNextEvent()\n\n        &#39;Display information from the event\n        Console.WriteLine( _\n            &quot;Process {0} has created, path is: {1}&quot;, _\n            CType(e(&quot;TargetInstance&quot;), _\n                ManagementBaseObject)(&quot;Name&quot;), _\n            CType(e(&quot;TargetInstance&quot;), _\n                ManagementBaseObject)(&quot;ExecutablePath&quot;))\n\n        &#39;Cancel the subscription\n        watcher.Stop()\n        Return 0\n\n    End Function &#39;Main\nEnd Class &#39;EventWatcherPolling\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_EventWatcherOptions_Clone\">\r\n    \r\n            <a id=\"System_Management_EventWatcherOptions_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a copy of the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The cloned object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.EventWatcherOptions.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.EventWatcherOptions.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.EventWatcherOptions\">\r\n<meta name=\"APIName\" content=\"System.Management.EventWatcherOptions..ctor\">\r\n<meta name=\"APIName\" content=\"System.Management.EventWatcherOptions.BlockSize\">\r\n<meta name=\"APIName\" content=\"System.Management.EventWatcherOptions.Clone\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a1c892a8-890b-489d-2350-0ed479512886\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Management\\EventWatcherOptions.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies options for management event watching.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Management/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.EventWatcherOptions\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.EventWatcherOptions.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.EventWatcherOptions.yml","open_to_public_contributors":true,"api_name":["System.Management.EventWatcherOptions","System.Management.EventWatcherOptions..ctor","System.Management.EventWatcherOptions.BlockSize","System.Management.EventWatcherOptions.Clone"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.EventWatcherOptions","System::Management::EventWatcherOptions","System.Management.EventWatcherOptions.#ctor","System::Management::EventWatcherOptions::#ctor","System.Management.EventWatcherOptions.BlockSize","System::Management::EventWatcherOptions::BlockSize","System.Management.EventWatcherOptions.Clone","System::Management::EventWatcherOptions::Clone"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a1c892a8-890b-489d-2350-0ed479512886","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Management\\EventWatcherOptions.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Management/EventWatcherOptions.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventWatcherOptions class | Microsoft Docs","_op_ogTitle":"EventWatcherOptions class","description":"Specifies options for management event watching.\n","toc_asset_id":"_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.EventWatcherOptions","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.eventwatcheroptions","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.eventwatcheroptions","fileRelativePath":"System.Management.EventWatcherOptions.html"},"themesRelativePathToOutputRoot":"_themes/"}