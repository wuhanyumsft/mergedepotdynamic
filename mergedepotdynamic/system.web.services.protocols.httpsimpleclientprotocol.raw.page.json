{"content":"    \r\n    <h1 id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol\">\r\n      <span class=\"lang-csharp\">HttpSimpleClientProtocol</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol\" data-linktype=\"relative-path\">WebClientProtocol</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol\" data-linktype=\"relative-path\">System.Web.Services.Protocols.HttpWebClientProtocol</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l5\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpSimpleClientProtocol</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_AllowAutoRedirect\" data-linktype=\"relative-path\">AllowAutoRedirect</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_CancelAsync_System_Object_\" data-linktype=\"relative-path\">CancelAsync(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_ClientCertificates\" data-linktype=\"relative-path\">ClientCertificates</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_CookieContainer\" data-linktype=\"relative-path\">CookieContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_EnableDecompression\" data-linktype=\"relative-path\">EnableDecompression</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GenerateXmlMappings_System_Type_System_Collections_ArrayList_\" data-linktype=\"relative-path\">GenerateXmlMappings(Type,ArrayList)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GenerateXmlMappings_System_Type___System_Collections_ArrayList_\" data-linktype=\"relative-path\">GenerateXmlMappings(Type[],ArrayList)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GetWebRequest_System_Uri_\" data-linktype=\"relative-path\">GetWebRequest(Uri)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GetWebResponse_System_Net_WebRequest_\" data-linktype=\"relative-path\">GetWebResponse(WebRequest)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_GetWebResponse_System_Net_WebRequest_System_IAsyncResult_\" data-linktype=\"relative-path\">GetWebResponse(WebRequest,IAsyncResult)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_Proxy\" data-linktype=\"relative-path\">Proxy</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_UnsafeAuthenticatedConnectionSharing\" data-linktype=\"relative-path\">UnsafeAuthenticatedConnectionSharing</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.httpwebclientprotocol#System_Web_Services_Protocols_HttpWebClientProtocol_UserAgent\" data-linktype=\"relative-path\">UserAgent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Abort\" data-linktype=\"relative-path\">Abort()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_AddToCache_System_Type_System_Object_\" data-linktype=\"relative-path\">AddToCache(Type,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_ConnectionGroupName\" data-linktype=\"relative-path\">ConnectionGroupName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Credentials\" data-linktype=\"relative-path\">Credentials</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_GetFromCache_System_Type_\" data-linktype=\"relative-path\">GetFromCache(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_PreAuthenticate\" data-linktype=\"relative-path\">PreAuthenticate</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_RequestEncoding\" data-linktype=\"relative-path\">RequestEncoding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Timeout\" data-linktype=\"relative-path\">Timeout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Url\" data-linktype=\"relative-path\">Url</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_UseDefaultCredentials\" data-linktype=\"relative-path\">UseDefaultCredentials</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats. These encoders derive from the <a class=\"xref\" href=\"system.web.services.protocols.mimeformatter\" data-linktype=\"relative-path\">MimeFormatter</a> class. By default, a proxy class deriving from HttpSimpleClientProtocol encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML. Custom mime formatters can be specified using the <a class=\"xref\" href=\"system.web.services.protocols.httpmethodattribute\" data-linktype=\"relative-path\">HttpMethodAttribute</a> attribute, however, there is no support for integrating this into a service description and proxy generation.  </p>\n<p> <code>Notes to Inheritors:</code> When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service. The methods simply capture the parameters, and call the base class to do the work of communicating with the site. If the introduced methods are asynchronous, call the <a class=\"xref\" href=\"system.web.services.protocols.httpsimpleclientprotocol#System_Web_Services_Protocols_HttpSimpleClientProtocol_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> and <a class=\"xref\" href=\"system.web.services.protocols.httpsimpleclientprotocol#System_Web_Services_Protocols_HttpSimpleClientProtocol_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> methods. If the introduced methods are synchronous, call the <a class=\"xref\" href=\"system.web.services.protocols.httpsimpleclientprotocol#System_Web_Services_Protocols_HttpSimpleClientProtocol_Invoke_\" data-linktype=\"relative-path\">Invoke</a> method. The overridden constructor typically sets the <a class=\"xref\" href=\"system.web.services.protocols.webclientprotocol#System_Web_Services_Protocols_WebClientProtocol_Url_\" data-linktype=\"relative-path\">Url</a> property to the URI of the XML Web service method.  </p>\n<p> The Web Services Description Language tool (Wsdl.exe) generates derived classes of HttpSimpleClientProtocol for a given Service Description.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_HttpSimpleClientProtocol__ctor\" data-linktype=\"self-bookmark\">HttpSimpleClientProtocol()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.protocols.httpsimpleclientprotocol\" data-linktype=\"relative-path\">HttpSimpleClientProtocol</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_HttpSimpleClientProtocol_BeginInvoke_System_String_System_String_System_Object___System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginInvoke(String,String,Object[],AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts an asynchronous invocation of a method of an XML Web service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_HttpSimpleClientProtocol_EndInvoke_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndInvoke(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Completes asynchronous invocation of an XML Web service method using HTTP.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_HttpSimpleClientProtocol_Invoke_System_String_System_String_System_Object___\" data-linktype=\"self-bookmark\">Invoke(String,String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes an XML Web service method using HTTP.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_HttpSimpleClientProtocol_InvokeAsync_System_String_System_String_System_Object___System_Threading_SendOrPostCallback_\" data-linktype=\"self-bookmark\">InvokeAsync(String,String,Object[],SendOrPostCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes the specified method asynchronously.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_HttpSimpleClientProtocol_InvokeAsync_System_String_System_String_System_Object___System_Threading_SendOrPostCallback_System_Object_\" data-linktype=\"self-bookmark\">InvokeAsync(String,String,Object[],SendOrPostCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes the specified method asynchronously while maintaining an associated state.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol__ctor\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpSimpleClientProtocol()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.protocols.httpsimpleclientprotocol\" data-linktype=\"relative-path\">HttpSimpleClientProtocol</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected HttpSimpleClientProtocol ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_BeginInvoke_System_String_System_String_System_Object___System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_BeginInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginInvoke(String,String,Object[],AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Starts an asynchronous invocation of a method of an XML Web service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML Web service method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL to use when creating the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to call when the asynchronous method call is complete. If <code>callback</code> is <code>null</code>, the delegate is not called.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The additional information supplied by a client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that can be passed to the <span class=\"xref\">stem.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*</span> method to obtain the return values from the XML Web service method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The request reached the server computer, but was not processed successfully.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>methodName</code> parameter is used to find the types of the parameters and return values of the method that is invoking the BeginInvoke method. It is also used to find custom attributes that may have been added to the method. <a class=\"xref\" href=\"system.web.services.protocols.soapdocumentmethodattribute\" data-linktype=\"relative-path\">SoapDocumentMethodAttribute</a>, <a class=\"xref\" href=\"system.web.services.protocols.soaprpcmethodattribute\" data-linktype=\"relative-path\">SoapRpcMethodAttribute</a>, and <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> provide additional information on the derived method that is required for the HTTP protocol.  </p>\n<p> <code>asyncState</code> is passed into <code>callback</code> and is included in the <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> that is returned from the BeginInvoke method. It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in <code>callback</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is an ASP.NET Web Form, which calls an XML Web service named <code>Math</code>. Within the <code>EnterBtn_Click</code> function, the Web Form starts and completes an asynchronous invocation of the <code>Add</code> XML Web service method.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;html&gt;\n    &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n       void EnterBtn_Click(Object Src, EventArgs E) \n          {\n             MyMath.Math math = new MyMath.Math();\n \n         // Call the Add XML Web service method asynchronously.\n         IAsyncResult result = math.BeginAdd(Convert.ToInt32(Num1.Text), Convert.ToInt32(Num2.Text), null, null);\n             \n         // Wait for the asynchronous call to complete.\n         result.AsyncWaitHandle.WaitOne();\n \n         // Complete the asynchronous call to the Add XML Web service method.\n         int total = math.EndAdd(result);\n \n         Total.Text = &quot;Total: &quot; + total.ToString();\n         }\n \n    &lt;/script&gt;\n \n    &lt;body&gt;\n       &lt;form action=&quot;MathClient.aspx&quot; runat=server&gt;\n           \n          Enter the two numbers you want to add and then press the Total button.\n          &lt;p&gt;\n          Number 1: &lt;asp:textbox id=&quot;Num1&quot; runat=server/&gt;  +\n          Number 2: &lt;asp:textbox id=&quot;Num2&quot; runat=server/&gt; =\n          &lt;asp:button text=&quot;Total&quot; Onclick=&quot;EnterBtn_Click&quot; runat=server/&gt;\n          &lt;p&gt;\n          &lt;asp:label id=&quot;Total&quot;  runat=server/&gt;\n          \n       &lt;/form&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;html&gt;\n    &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n    Sub EnterBtn_Click(Src As Object, E As EventArgs)\n        Dim math As New MyMath.Math()\n        \n        &#39; Call to Add XML Web service method asynchronously.\n        Dim result As IAsyncResult = math.BeginAdd(Convert.ToInt32(Num1.Text), Convert.ToInt32(Num2.Text), Nothing, Nothing)\n        \n        &#39; Wait for the asynchronous call to complete.\n        result.AsyncWaitHandle.WaitOne()\n        \n        &#39; Complete the asynchronous call to the Add XML Web service method.\n        Dim iTotal As Integer = math.EndAdd(result)\n        \n        Total.Text = &quot;Total: &quot; &amp; iTotal.ToString()\n    End Sub &#39;EnterBtn_Click\n \n  &lt;/script&gt;\n \n    &lt;body&gt;\n       &lt;form action=&quot;MathClient.aspx&quot; runat=server&gt;\n           \n          Enter the two numbers you want to add and then press the Total button.\n          &lt;p&gt;\n          Number 1: &lt;asp:textbox id=&quot;Num1&quot; runat=server/&gt;  +\n          Number 2: &lt;asp:textbox id=&quot;Num2&quot; runat=server/&gt; =\n          &lt;asp:button text=&quot;Total&quot; Onclick=&quot;EnterBtn_Click&quot; runat=server/&gt;\n          &lt;p&gt;\n          &lt;asp:label id=&quot;Total&quot;  runat=server/&gt;\n          \n       &lt;/form&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre><p> The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <code>Math</code> XML Web service below. Within the <code>BeginAdd</code> method of the proxy class, the <a class=\"xref\" href=\"system.web.services.protocols.soaphttpclientprotocol#System_Web_Services_Protocols_SoapHttpClientProtocol_BeginInvoke_\" data-linktype=\"relative-path\">BeginInvoke</a> method starts an asynchronous invocation of the <code>Add</code> XML Web service method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#2\">namespace MyMath\n{\n   [XmlRootAttribute(&quot;snippet1&gt;&quot;,Namespace=&quot;http://MyMath/&quot;,IsNullable=false)]\n   public ref class Math: public HttpGetClientProtocol\n   {\n   public:\n      Math()\n      {\n         this-&gt;Url = &quot;http://www.contoso.com/math.asmx&quot;;\n      }\n\n      [HttpMethodAttribute(System::Web::Services::Protocols::XmlReturnReader::typeid,\n      System::Web::Services::Protocols::UrlParameterWriter::typeid)]\n      int Add( String^ num1, String^ num2 )\n      {\n         array&lt;Object^&gt;^temp0 = {num1,num2};\n         return  *dynamic_cast&lt;int^&gt;(this-&gt;Invoke( &quot;Add&quot;, String::Concat( this-&gt;Url, &quot;/Add&quot; ), temp0 ));\n      }\n\n      IAsyncResult^ BeginAdd( String^ num1, String^ num2, AsyncCallback^ callback, Object^ asyncState )\n      {\n         array&lt;Object^&gt;^temp1 = {num1,num2};\n         return this-&gt;BeginInvoke( &quot;Add&quot;, String::Concat( this-&gt;Url, &quot;/Add&quot; ), temp1, callback, asyncState );\n      }\n\n      int EndAdd( IAsyncResult^ asyncResult )\n      {\n         return  *dynamic_cast&lt;int^&gt;(this-&gt;EndInvoke( asyncResult ));\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#2\">namespace MyMath {\n    [XmlRootAttribute(&quot;int&quot;, Namespace=&quot;http://MyMath/&quot;, IsNullable=false)]\n    public class Math : HttpGetClientProtocol {\n       public Math() \n       {\n          this.Url = &quot;http://www.contoso.com/math.asmx&quot;;\n       }\n        \n       [HttpMethodAttribute(typeof(System.Web.Services.Protocols.XmlReturnReader),\n       typeof(System.Web.Services.Protocols.UrlParameterWriter))]\n       public int Add(int num1, int num2) \n       {\n          return ((int)(this.Invoke(&quot;Add&quot;, ((this.Url) + (&quot;/Add&quot;)), new object[] {num1,\n                         num2})));\n       }\n         \n       public IAsyncResult BeginAdd(int num1, int num2, AsyncCallback callback, object asyncState) \n       {\n          return this.BeginInvoke(&quot;Add&quot;, ((this.Url) + (&quot;/Add&quot;)), new object[] {num1,\n                         num2}, callback, asyncState);\n       }\n         \n       public int EndAdd(IAsyncResult asyncResult) \n       {\n          return ((int)(this.EndInvoke(asyncResult)));\n       }\n         \n     }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#2\">Namespace MyMath\n    &lt;XmlRootAttribute(&quot;int&quot;, Namespace := &quot;http://MyMath/&quot;, IsNullable := False)&gt; _\n    Public Class Math\n        Inherits HttpGetClientProtocol\n        \n        Public Sub New()\n            Me.Url = &quot;http://www.contoso.com/math.asmx&quot;\n        End Sub &#39;New\n        \n        &lt;HttpMethodAttribute(GetType(XmlReturnReader), GetType(UrlParameterWriter))&gt; _\n        Public Function Add(num1 As String, num2 As String) As Integer\n            Return CInt(Me.Invoke(&quot;Add&quot;, Me.Url + &quot;/Add&quot;, New Object() {num1, num2}))\n        End Function &#39;Add\n        \n        \n        Public Function BeginAdd(num1 As String, num2 As String, callback As AsyncCallback, asyncState As Object) As IAsyncResult\n            Return Me.BeginInvoke(&quot;Add&quot;, Me.Url + &quot;/Add&quot;, New Object() {num1, num2}, callback, asyncState)\n        End Function &#39;BeginAdd\n        \n        \n        Public Function EndAdd(asyncResult As IAsyncResult) As Integer\n            Return CInt(Me.EndInvoke(asyncResult))\n        End Function &#39;EndAdd\n    End Class &#39;Math \nEnd Namespace &#39;MyMath\n</code></pre><p> The following code example is the <code>Math</code> XML Web service, from which the preceding proxy class was created.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_EndInvoke_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_EndInvoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndInvoke(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Completes asynchronous invocation of an XML Web service method using HTTP.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected object EndInvoke (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> returned from the <span class=\"xref\">stem.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An array of objects containing the return value and any by reference or <code>out</code> parameters for the XML Web service method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>asyncResult</code> is not the return value from the <span class=\"xref\">stem.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*</span> method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is an ASP.NET Web Form, which calls an XML Web service named <code>Math</code>. Within the <code>EnterBtn_Click</code> function, the Web Form starts and completes an asynchronous invocation of the <code>Add</code> XML Web service method.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;html&gt;\n    &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n       void EnterBtn_Click(Object Src, EventArgs E) \n          {\n             MyMath.Math math = new MyMath.Math();\n \n         // Call the Add XML Web service method asynchronously.\n         IAsyncResult result = math.BeginAdd(Convert.ToInt32(Num1.Text), Convert.ToInt32(Num2.Text), null, null);\n             \n         // Wait for the asynchronous call to complete.\n         result.AsyncWaitHandle.WaitOne();\n \n         // Complete the asynchronous call to the Add XML Web service method.\n         int total = math.EndAdd(result);\n \n         Total.Text = &quot;Total: &quot; + total.ToString();\n         }\n \n    &lt;/script&gt;\n \n    &lt;body&gt;\n       &lt;form action=&quot;MathClient.aspx&quot; runat=server&gt;\n           \n          Enter the two numbers you want to add and then press the Total button.\n          &lt;p&gt;\n          Number 1: &lt;asp:textbox id=&quot;Num1&quot; runat=server/&gt;  +\n          Number 2: &lt;asp:textbox id=&quot;Num2&quot; runat=server/&gt; =\n          &lt;asp:button text=&quot;Total&quot; Onclick=&quot;EnterBtn_Click&quot; runat=server/&gt;\n          &lt;p&gt;\n          &lt;asp:label id=&quot;Total&quot;  runat=server/&gt;\n          \n       &lt;/form&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;html&gt;\n    &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n    Sub EnterBtn_Click(Src As Object, E As EventArgs)\n        Dim math As New MyMath.Math()\n        \n        &#39; Call to Add XML Web service method asynchronously.\n        Dim result As IAsyncResult = math.BeginAdd(Convert.ToInt32(Num1.Text), Convert.ToInt32(Num2.Text), Nothing, Nothing)\n        \n        &#39; Wait for the asynchronous call to complete.\n        result.AsyncWaitHandle.WaitOne()\n        \n        &#39; Complete the asynchronous call to the Add XML Web service method.\n        Dim iTotal As Integer = math.EndAdd(result)\n        \n        Total.Text = &quot;Total: &quot; &amp; iTotal.ToString()\n    End Sub &#39;EnterBtn_Click\n \n  &lt;/script&gt;\n \n    &lt;body&gt;\n       &lt;form action=&quot;MathClient.aspx&quot; runat=server&gt;\n           \n          Enter the two numbers you want to add and then press the Total button.\n          &lt;p&gt;\n          Number 1: &lt;asp:textbox id=&quot;Num1&quot; runat=server/&gt;  +\n          Number 2: &lt;asp:textbox id=&quot;Num2&quot; runat=server/&gt; =\n          &lt;asp:button text=&quot;Total&quot; Onclick=&quot;EnterBtn_Click&quot; runat=server/&gt;\n          &lt;p&gt;\n          &lt;asp:label id=&quot;Total&quot;  runat=server/&gt;\n          \n       &lt;/form&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre><p> The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <code>Math</code> XML Web service below. Within the <code>EndAdd</code> method of the proxy class, the <a class=\"xref\" href=\"system.web.services.protocols.soaphttpclientprotocol#System_Web_Services_Protocols_SoapHttpClientProtocol_EndInvoke_\" data-linktype=\"relative-path\">EndInvoke</a> method starts an asynchronous invocation of the <code>Add</code> XML Web service method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#2\">namespace MyMath\n{\n   [XmlRootAttribute(&quot;snippet1&gt;&quot;,Namespace=&quot;http://MyMath/&quot;,IsNullable=false)]\n   public ref class Math: public HttpGetClientProtocol\n   {\n   public:\n      Math()\n      {\n         this-&gt;Url = &quot;http://www.contoso.com/math.asmx&quot;;\n      }\n\n      [HttpMethodAttribute(System::Web::Services::Protocols::XmlReturnReader::typeid,\n      System::Web::Services::Protocols::UrlParameterWriter::typeid)]\n      int Add( String^ num1, String^ num2 )\n      {\n         array&lt;Object^&gt;^temp0 = {num1,num2};\n         return  *dynamic_cast&lt;int^&gt;(this-&gt;Invoke( &quot;Add&quot;, String::Concat( this-&gt;Url, &quot;/Add&quot; ), temp0 ));\n      }\n\n      IAsyncResult^ BeginAdd( String^ num1, String^ num2, AsyncCallback^ callback, Object^ asyncState )\n      {\n         array&lt;Object^&gt;^temp1 = {num1,num2};\n         return this-&gt;BeginInvoke( &quot;Add&quot;, String::Concat( this-&gt;Url, &quot;/Add&quot; ), temp1, callback, asyncState );\n      }\n\n      int EndAdd( IAsyncResult^ asyncResult )\n      {\n         return  *dynamic_cast&lt;int^&gt;(this-&gt;EndInvoke( asyncResult ));\n      }\n   };\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#2\">namespace MyMath {\n    [XmlRootAttribute(&quot;int&quot;, Namespace=&quot;http://MyMath/&quot;, IsNullable=false)]\n    public class Math : HttpGetClientProtocol {\n       public Math() \n       {\n          this.Url = &quot;http://www.contoso.com/math.asmx&quot;;\n       }\n        \n       [HttpMethodAttribute(typeof(System.Web.Services.Protocols.XmlReturnReader),\n       typeof(System.Web.Services.Protocols.UrlParameterWriter))]\n       public int Add(int num1, int num2) \n       {\n          return ((int)(this.Invoke(&quot;Add&quot;, ((this.Url) + (&quot;/Add&quot;)), new object[] {num1,\n                         num2})));\n       }\n         \n       public IAsyncResult BeginAdd(int num1, int num2, AsyncCallback callback, object asyncState) \n       {\n          return this.BeginInvoke(&quot;Add&quot;, ((this.Url) + (&quot;/Add&quot;)), new object[] {num1,\n                         num2}, callback, asyncState);\n       }\n         \n       public int EndAdd(IAsyncResult asyncResult) \n       {\n          return ((int)(this.EndInvoke(asyncResult)));\n       }\n         \n     }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpSimpleClientProtocol.EndInvoke Example#2\">Namespace MyMath\n    &lt;XmlRootAttribute(&quot;int&quot;, Namespace := &quot;http://MyMath/&quot;, IsNullable := False)&gt; _\n    Public Class Math\n        Inherits HttpGetClientProtocol\n        \n        Public Sub New()\n            Me.Url = &quot;http://www.contoso.com/math.asmx&quot;\n        End Sub &#39;New\n        \n        &lt;HttpMethodAttribute(GetType(XmlReturnReader), GetType(UrlParameterWriter))&gt; _\n        Public Function Add(num1 As String, num2 As String) As Integer\n            Return CInt(Me.Invoke(&quot;Add&quot;, Me.Url + &quot;/Add&quot;, New Object() {num1, num2}))\n        End Function &#39;Add\n        \n        \n        Public Function BeginAdd(num1 As String, num2 As String, callback As AsyncCallback, asyncState As Object) As IAsyncResult\n            Return Me.BeginInvoke(&quot;Add&quot;, Me.Url + &quot;/Add&quot;, New Object() {num1, num2}, callback, asyncState)\n        End Function &#39;BeginAdd\n        \n        \n        Public Function EndAdd(asyncResult As IAsyncResult) As Integer\n            Return CInt(Me.EndInvoke(asyncResult))\n        End Function &#39;EndAdd\n    End Class &#39;Math \nEnd Namespace &#39;MyMath\n</code></pre><p> The following code example is the <code>Math</code> XML Web service, from which the above proxy class was created.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_Invoke_System_String_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invoke(String,String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Invokes an XML Web service method using HTTP.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected object Invoke (string methodName, string requestUrl, object[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the XML Web service method in the derived class that is invoking the Invoke method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL of the XML Web service method that the client is requesting.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An array of objects containing the return value and any by-reference or <code>out</code> parameters of the derived class method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The request reached the server computer, but was not processed successfully.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>methodName</code> parameter is used to find the types of the parameters and return values of the method that is invoking the Invoke method. It is also used to find custom attributes which may have been added to the method. <a class=\"xref\" href=\"system.web.services.protocols.httpmethodattribute\" data-linktype=\"relative-path\">HttpMethodAttribute</a> and <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> provide additional information on the derived method that is required for the SOAP protocol.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is an ASP.NET Web Form, which calls an XML Web service named <code>Math</code>. Within the <code>EnterBtn_Click</code> function, the Web Form synchronously invokes the <code>Add</code> XML Web service method.  </p>\n<pre><code class=\"lang-cs\" name=\"HttpSimpleClientProtocol.Invoke Example#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;html&gt;\n    &lt;script language=&quot;C#&quot; runat=&quot;server&quot;&gt;\n       void EnterBtn_Click(Object Src, EventArgs E) \n          {\n             Math math = new Math();\n \n         // Call to Add XML Web service method Asynchronously and then wait for it to complete.\n         int total = math.Add(Convert.ToInt32(Num1.Text),Convert.ToInt32(Num2.Text));\n             \n             Total.Text = &quot;Total: &quot; + total.ToString();\n         }\n \n    &lt;/script&gt;\n \n    &lt;body&gt;\n       &lt;form action=&quot;MathClient.aspx&quot; runat=server&gt;\n           \n          Enter the two numbers you want to add and then press the Total button.\n          &lt;p&gt;\n          Number 1: &lt;asp:textbox id=&quot;Num1&quot; runat=server/&gt;  +\n          Number 2: &lt;asp:textbox id=&quot;Num2&quot; runat=server/&gt; =\n          &lt;asp:button text=&quot;Total&quot; Onclick=&quot;EnterBtn_Click&quot; runat=server/&gt;\n          &lt;p&gt;\n          &lt;asp:label id=&quot;Total&quot;  runat=server/&gt;\n          \n       &lt;/form&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"HttpSimpleClientProtocol.Invoke Example#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;html&gt;\n    &lt;script language=&quot;VB&quot; runat=&quot;server&quot;&gt;\n    Sub EnterBtn_Click(Src As Object, E As EventArgs)\n        Dim math As New Math()\n        \n        &#39; Call to Add XML Web service method.\n        Dim result As Integer = math.Add(Convert.ToInt32(Num1.Text),Convert.ToInt32(Num2.Text))\n        \n        Total.Text = &quot;Total: &quot; &amp; result.ToString()\n    End Sub &#39;EnterBtn_Click\n \n  &lt;/script&gt;\n \n    &lt;body&gt;\n       &lt;form action=&quot;MathClient.aspx&quot; runat=server&gt;\n           \n          Enter the two numbers you want to add and then press the Total button.\n          &lt;p&gt;\n          Number 1: &lt;asp:textbox id=&quot;Num1&quot; runat=server/&gt;  +\n          Number 2: &lt;asp:textbox id=&quot;Num2&quot; runat=server/&gt; =\n          &lt;asp:button text=&quot;Total&quot; Onclick=&quot;EnterBtn_Click&quot; runat=server/&gt;\n          &lt;p&gt;\n          &lt;asp:label id=&quot;Total&quot;  runat=server/&gt;\n          \n       &lt;/form&gt;\n    &lt;/body&gt;\n &lt;/html&gt;\n</code></pre><p> The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the <code>Math</code> XML Web service below. Within the <code>Add</code> method of the proxy class, the Invoke method synchronously invokes the <code>Add</code> Web Service method.  </p>\n<pre><code class=\"lang-vb\" name=\"HttpSimpleClientProtocol.Invoke Example#1\">Namespace MyMath\n    \n    &lt;System.Web.Services.WebServiceBindingAttribute(Name:=&quot;MathSoap&quot;, [Namespace]:=&quot;http://tempuri.org/&quot;)&gt;  _\n    Public Class Math\n        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol\n        \n        &lt;System.Diagnostics.DebuggerStepThroughAttribute()&gt;  _\n        Public Sub New()\n            MyBase.New\n            Me.Url = &quot;http://www.contoso.com/math.asmx&quot;\n        End Sub\n        \n        &lt;System.Diagnostics.DebuggerStepThroughAttribute(),  _\n         System.Web.Services.Protocols.SoapDocumentMethodAttribute(&quot;http://tempuri.org/Add&quot;, Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)&gt;  _\n        Public Function Add(ByVal num1 As Integer, ByVal num2 As Integer) As Integer\n            Dim results() As Object = Me.Invoke(&quot;Add&quot;, New Object() {num1, num2})\n            Return CType(results(0),Integer)\n        End Function\n        \n        &lt;System.Diagnostics.DebuggerStepThroughAttribute()&gt;  _\n        Public Function BeginAdd(ByVal num1 As Integer, ByVal num2 As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult\n            Return Me.BeginInvoke(&quot;Add&quot;, New Object() {num1, num2}, callback, asyncState)\n        End Function\n        \n        &lt;System.Diagnostics.DebuggerStepThroughAttribute()&gt;  _\n        Public Function EndAdd(ByVal asyncResult As System.IAsyncResult) As Integer\n            Dim results() As Object = Me.EndInvoke(asyncResult)\n            Return CType(results(0),Integer)\n        End Function\n    End Class\nEnd Namespace\n</code></pre><pre><code class=\"lang-cs\" name=\"HttpSimpleClientProtocol.Invoke Example#1\">namespace MyMath {\n    using System.Diagnostics;\n    using System.Xml.Serialization;\n    using System;\n    using System.Web.Services.Protocols;\n    using System.Web.Services;\n    \n    \n    [System.Web.Services.WebServiceBindingAttribute(Name=&quot;MathSoap&quot;, Namespace=&quot;http://tempuri.org/&quot;)]\n    public class Math : System.Web.Services.Protocols.SoapHttpClientProtocol {\n        \n        [System.Diagnostics.DebuggerStepThroughAttribute()]\n        public Math() {\n            this.Url = &quot;http://www.contoso.com/math.asmx&quot;;\n        }\n        \n        [System.Diagnostics.DebuggerStepThroughAttribute()]\n        [System.Web.Services.Protocols.SoapDocumentMethodAttribute(&quot;http://tempuri.org/Add&quot;, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]\n        public int Add(int num1, int num2) {\n            object[] results = this.Invoke(&quot;Add&quot;, new object[] {num1,\n                        num2});\n            return ((int)(results[0]));\n        }\n        \n        [System.Diagnostics.DebuggerStepThroughAttribute()]\n        public System.IAsyncResult BeginAdd(int num1, int num2, System.AsyncCallback callback, object asyncState) {\n            return this.BeginInvoke(&quot;Add&quot;, new object[] {num1,\n                        num2}, callback, asyncState);\n        }\n        \n        [System.Diagnostics.DebuggerStepThroughAttribute()]\n        public int EndAdd(System.IAsyncResult asyncResult) {\n            object[] results = this.EndInvoke(asyncResult);\n            return ((int)(results[0]));\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"HttpSimpleClientProtocol.Invoke Example#1\">#using &lt;System.Web.Services.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System::Diagnostics;\nusing namespace System::Xml::Serialization;\nusing namespace System;\nusing namespace System::Web::Services::Protocols;\nusing namespace System::Web::Services;\n\nnamespace MyMath\n{\n\n   [System::Web::Services::WebServiceBindingAttribute(Name=&quot;MathSoap&quot;,Namespace=&quot;http://tempuri.org/&quot;)]\n   public ref class Math: public System::Web::Services::Protocols::SoapHttpClientProtocol\n   {\n   public:\n\n      [System::Diagnostics::DebuggerStepThroughAttribute]\n      Math()\n      {\n         this-&gt;Url = &quot;http://www.contoso.com/math.asmx&quot;;\n      }\n\n\n      [System::Diagnostics::DebuggerStepThroughAttribute]\n      [System::Web::Services::Protocols::SoapDocumentMethodAttribute(&quot;http://tempuri.org/Add&quot;,\n      Use=System::Web::Services::Description::SoapBindingUse::Literal,\n      ParameterStyle=System::Web::Services::Protocols::SoapParameterStyle::Wrapped)]\n      int Add( int num1, int num2 )\n      {\n         array&lt;Object^&gt;^temp0 = {num1,num2};\n         array&lt;Object^&gt;^results = this-&gt;Invoke( &quot;Add&quot;, temp0 );\n         return  *dynamic_cast&lt;int^&gt;(results[ 0 ]);\n      }\n\n\n      [System::Diagnostics::DebuggerStepThroughAttribute]\n      System::IAsyncResult^ BeginAdd( int num1, int num2, System::AsyncCallback^ callback, Object^ asyncState )\n      {\n         array&lt;Object^&gt;^temp1 = {num1,num2};\n         return this-&gt;BeginInvoke( &quot;Add&quot;, temp1, callback, asyncState );\n      }\n\n\n      [System::Diagnostics::DebuggerStepThroughAttribute]\n      int EndAdd( System::IAsyncResult^ asyncResult )\n      {\n         array&lt;Object^&gt;^results = this-&gt;EndInvoke( asyncResult );\n         return  *dynamic_cast&lt;int^&gt;(results[ 0 ]);\n      }\n\n   };\n\n}\n</code></pre><p> The following code example is the <code>Math</code> XML Web service, from which the above proxy class was created.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_InvokeAsync_System_String_System_String_System_Object___System_Threading_SendOrPostCallback_\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_InvokeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync(String,String,Object[],SendOrPostCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Invokes the specified method asynchronously.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the method to invoke.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The request URL of the invoked web service.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parameters to pass to the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.sendorpostcallback\" data-linktype=\"relative-path\">SendOrPostCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate called when the method invocation has completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_InvokeAsync_System_String_System_String_System_Object___System_Threading_SendOrPostCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_HttpSimpleClientProtocol_InvokeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvokeAsync(String,String,Object[],SendOrPostCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Invokes the specified method asynchronously while maintaining an associated state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the method to invoke.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The request URL of the invoked web service.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parameters to pass to the method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.sendorpostcallback\" data-linktype=\"relative-path\">SendOrPostCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate called when the method invocation has completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object containing associated state information that is passed to the <code>callback</code> delegate when the method has completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Protocols.HttpSimpleClientProtocol.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Protocols.HttpSimpleClientProtocol.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"52e036eb-c472-8422-04bf-03e5df43eb57\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Services.Protocols/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Protocols.HttpSimpleClientProtocol\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Protocols.HttpSimpleClientProtocol.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Protocols.HttpSimpleClientProtocol.yml","open_to_public_contributors":true,"api_name":["System.Web.Services.Protocols.HttpSimpleClientProtocol","System.Web.Services.Protocols.HttpSimpleClientProtocol..ctor","System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke","System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke","System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke","System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Protocols.HttpSimpleClientProtocol","System::Web::Services::Protocols::HttpSimpleClientProtocol","System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor","System::Web::Services::Protocols::HttpSimpleClientProtocol::#ctor","System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke","System::Web::Services::Protocols::HttpSimpleClientProtocol::BeginInvoke","System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke","System::Web::Services::Protocols::HttpSimpleClientProtocol::EndInvoke","System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke","System::Web::Services::Protocols::HttpSimpleClientProtocol::Invoke","System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync","System::Web::Services::Protocols::HttpSimpleClientProtocol::InvokeAsync"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"52e036eb-c472-8422-04bf-03e5df43eb57","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Services.Protocols/HttpSimpleClientProtocol.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpSimpleClientProtocol class | Microsoft Docs","_op_ogTitle":"HttpSimpleClientProtocol class","description":"Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.\n","toc_asset_id":"_splitted/System.Web.Services.Protocols/toc.json","toc_rel":"_splitted/System.Web.Services.Protocols/toc.json","source_url":"","ms.assetid":"System.Web.Services.Protocols.HttpSimpleClientProtocol","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.protocols.httpsimpleclientprotocol","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.protocols.httpsimpleclientprotocol","fileRelativePath":"System.Web.Services.Protocols.HttpSimpleClientProtocol.html"},"themesRelativePathToOutputRoot":"_themes/"}