{"content":"    \r\n    <h1 id=\"System_Collections_Generic_Comparer_1\">\r\n      <span class=\"lang-csharp\">Comparer&lt;T&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a base class for implementations of the <span class=\"xref\">stem.Collections.Generic.IComparer`1</span> generic interface.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class Comparer&lt;T&gt; : System.Collections.Generic.IComparer&lt;T&gt;, System.Collections.IComparer</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of objects to compare.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Comparer&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Derive from this class to provide a custom implementation of the <a class=\"xref\" href=\"system.collections.generic.icomparer-1\" data-linktype=\"relative-path\">IComparer&lt;T&gt;</a> interface for use with collection classes such as the <a class=\"xref\" href=\"system.collections.generic.sortedlist-2\" data-linktype=\"relative-path\">SortedList&lt;TKey,TValue&gt;</a> and <a class=\"xref\" href=\"system.collections.generic.sorteddictionary-2\" data-linktype=\"relative-path\">SortedDictionary&lt;TKey,TValue&gt;</a> generic classes.  </p>\n<p> The difference between deriving from the Comparer(T) class and implementing the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">System.IComparable</a> interface is as follows:  </p>\n<ul>\n<li><p>To specify how two objects should be compared by default, implement the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">System.IComparable</a> interface in your class. This ensures that sort operations will use the default comparison code that you provided.  </p>\n</li>\n<li><p>To define a comparer to use instead of the default comparer, derive from the Comparer(T) class. You can then use this comparer in sort operations that take a comparer as a parameter.  </p>\n<p>The object returned by the <a class=\"xref\" href=\"system.collections.generic.comparer-1#System_Collections_Generic_Comparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property uses the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> generic interface (<code>IComparable&lt;T&gt;</code> in C#, <code>IComparable(Of T)</code> in Visual Basic) to compare two objects. If type <code>T</code> does not implement the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> generic interface, the <a class=\"xref\" href=\"system.collections.generic.comparer-1#System_Collections_Generic_Comparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property returns a Comparer(T) that uses the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">System.IComparable</a> interface.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_Comparer_1__ctor\" data-linktype=\"self-bookmark\">Comparer&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.Comparer`1</span> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_Comparer_1_Default\" data-linktype=\"self-bookmark\">Default</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a default sort order comparer for the type specified by the generic argument.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_Comparer_1_Compare__0__0_\" data-linktype=\"self-bookmark\">Compare(T,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_Comparer_1_Create_System_Comparison__0__\" data-linktype=\"self-bookmark\">Create(Comparison&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a comparer by using the specified comparison.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_Comparer_1_System_Collections_IComparer_Compare_System_Object_System_Object_\" data-linktype=\"self-bookmark\">IComparer.Compare(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_Comparer_1__ctor\">\r\n    \r\n            <a id=\"System_Collections_Generic_Comparer_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Comparer&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.Comparer`1</span> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Comparer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_Comparer_1_Default\">\r\n    \r\n            <a id=\"System_Collections_Generic_Comparer_1_Default_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Default</div>        \r\n          </div>\r\n    \r\n            <p>Returns a default sort order comparer for the type specified by the generic argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.Comparer&lt;T&gt; Default { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer<t></t></a></div>\r\n                  </div>\r\n                  <p>An object that inherits <span class=\"xref\">stem.Collections.Generic.Comparer`1</span> and serves as a sort order comparer for type <code>T</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer&lt;T&gt;</a> returned by this property uses the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> generic interface (<code>IComparable&lt;T&gt;</code> in C#, <code>IComparable(Of T)</code> in Visual Basic) to compare two objects. If type <code>T</code> does not implement the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> generic interface, this property returns a <a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer&lt;T&gt;</a> that uses the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">System.IComparable</a> interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the Default property to get an object that performs the default comparison. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer&lt;T&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Generic.BoxCompare#3\">        // Get the default comparer that \n        // sorts first by the height.\n        Comparer&lt;Box&gt; defComp = Comparer&lt;Box&gt;.Default;\n\n        // Calling Boxes.Sort() with no parameter\n        // is the same as calling Boxs.Sort(defComp)\n        // because they are both using the default comparer.\n        Boxes.Sort();\n\n        foreach (Box bx in Boxes)\n        {\n            Console.WriteLine(&quot;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&nbsp;&nbsp;&nbsp;&nbsp;{2}&quot;,\n                bx.Height.ToString(), bx.Length.ToString(), \n                bx.Width.ToString());\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Generic.BoxCompare#3\">\t\t&#39; Get the default comparer that \n\t\t&#39; sorts first by the height.\n\t\tDim defComp As Comparer(Of Box) = Comparer(Of Box).Default\n\n\t\t&#39; Calling Boxes.Sort() with no parameter\n\t\t&#39; is the same as calling Boxs.Sort(defComp)\n\t\t&#39; because they are both using the default comparer.\n\t\tBoxes.Sort()\n\n\t\tFor Each bx As Box In Boxes\n            Console.WriteLine(&quot;{0}&quot; &amp; vbTab &amp; &quot;{1}&quot; &amp; vbTab &amp; &quot;{2}&quot;, _\n                              bx.Height.ToString(), _\n                              bx.Length.ToString(), _\n                              bx.Width.ToString())\n\t\tNext bx\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_Comparer_1_Compare__0__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_Comparer_1_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare(T,T)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, performs a comparison of two objects of the same type and returns a value indicating whether one object is less than, equal to, or greater than the other.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int Compare (T x, T y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed integer that indicates the relative values of <code>x</code> and <code>y</code>, as shown in the following table.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>x</code> is less than <code>y</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>x</code> equals <code>y</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>x</code> is greater than <code>y</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Type <code>T</code> does not implement either the <span class=\"xref\">stem.IComparable`1</span> generic interface or the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Implement this method to provide a customized sort order comparison for type <code>T</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a comparer of <code>Box</code> objects that can be used instead of the default comparer. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer&lt;T&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Generic.BoxCompare#5\">public class BoxLengthFirst : Comparer&lt;Box&gt; \n{\n    // Compares by Length, Height, and Width.\n    public override int Compare(Box x, Box y)\n    {\n        if (x.Length.CompareTo(y.Length) != 0)\n        {\n            return x.Length.CompareTo(y.Length);\n        }\n        else if (x.Height.CompareTo(y.Height) != 0)\n        {\n            return x.Height.CompareTo(y.Height);\n        }\n        else if (x.Width.CompareTo(y.Width) != 0)\n        {\n            return x.Width.CompareTo(y.Width);\n        }\n        else\n        {\n            return 0;\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Generic.BoxCompare#5\">Public Class BoxLengthFirst\n\tInherits Comparer(Of Box)\n\t&#39; Compares by Length, Height, and Width.\n\tPublic Overrides Function Compare(ByVal x As Box, ByVal y As Box) As Integer\n\t\tIf x.Length.CompareTo(y.Length) &lt;&gt; 0 Then\n\t\t\tReturn x.Length.CompareTo(y.Length)\n\t\tElseIf x.Height.CompareTo(y.Height) &lt;&gt; 0 Then\n\t\t\tReturn x.Height.CompareTo(y.Height)\n\t\tElseIf x.Width.CompareTo(y.Width) &lt;&gt; 0 Then\n\t\t\tReturn x.Width.CompareTo(y.Width)\n\t\tElse\n\t\t\tReturn 0\n\t\tEnd If\n\tEnd Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_Comparer_1_Create_System_Comparison__0__\">\r\n    \r\n            <a id=\"System_Collections_Generic_Comparer_1_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(Comparison&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a comparer by using the specified comparison.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.Comparer&lt;T&gt; Create (Comparison&lt;T&gt; comparison);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparison</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.comparison-1\" data-linktype=\"relative-path\">Comparison<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The comparison to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer<t></t></a></div>\r\n                  </div>\r\n                  <p>The new comparer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_Comparer_1_System_Collections_IComparer_Compare_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Generic_Comparer_1_System_Collections_IComparer_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IComparer.Compare(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IComparer.Compare (object x, object y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed integer that indicates the relative values of <code>x</code> and <code>y</code>, as shown in the following table.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>x</code> is less than <code>y</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>x</code> equals <code>y</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>x</code> is greater than <code>y</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>x</code> or <code>y</code> is of a type that cannot be cast to type <code>T</code>.  </p>\n<p> -or-  </p>\n<p> <code>x</code> and <code>y</code> do not implement either the <span class=\"xref\">stem.IComparable`1</span> generic interface or the <a class=\"xref\" href=\"system.icomparable\" data-linktype=\"relative-path\">IComparable</a> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a wrapper for the <a class=\"xref\" href=\"system.collections.generic.comparer-1#System_Collections_Generic_Comparer_1_Compare__0__0_\" data-linktype=\"relative-path\">Compare(T,T)</a> method, so <code>obj</code> must be cast to the type specified by the generic argument <code>T</code> of the current instance. If it cannot be cast to <code>T</code>, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n<p> Comparing <code>null</code> with any reference type is allowed and does not generate an exception. When sorting, <code>null</code> is considered to be less than any other object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the IComparer.Compare method to compare two objects. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.collections.generic.comparer-1\" data-linktype=\"relative-path\">Comparer&lt;T&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Collections.Generic.BoxCompare#4\">\n        // This explicit interface implementation\n        // compares first by the length.\n        // Returns -1 because the length of BoxA\n        // is less than the length of BoxB.\n        BoxLengthFirst LengthFirst = new BoxLengthFirst(); \n\n        Comparer&lt;Box&gt; bc = (Comparer&lt;Box&gt;) LengthFirst;\n\n        Box BoxA = new Box(2, 6, 8);\n        Box BoxB = new Box(10, 12, 14);\n        int x = LengthFirst.Compare(BoxA, BoxB);\n        Console.WriteLine();\n        Console.WriteLine(x.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Generic.BoxCompare#4\">\n\t\t&#39; This explicit interface implementation\n\t\t&#39; compares first by the length.\n\t\t&#39; Returns -1 because the length of BoxA\n\t\t&#39; is less than the length of BoxB.\n\t\tDim LengthFirst As New BoxLengthFirst()\n\n\t\tDim bc As Comparer(Of Box) = CType(LengthFirst, Comparer(Of Box))\n\n\t\tDim BoxA As New Box(2, 6, 8)\n\t\tDim BoxB As New Box(10, 12, 14)\n\t\tDim x As Integer = LengthFirst.Compare(BoxA, BoxB)\n\t\tConsole.WriteLine()\n\t\tConsole.WriteLine(x.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Generic.Comparer-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.Comparer-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.Comparer&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.Comparer&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.Comparer&lt;T&gt;.Compare\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.Comparer&lt;T&gt;.Create\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.Comparer&lt;T&gt;.Default\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.Comparer&lt;T&gt;.IComparer.Compare\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e47e82d6-e380-f0a9-ae7f-db0aa8a77938\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base class for implementations of the  generic interface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Generic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.Comparer`1\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Generic.Comparer-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.Comparer-1.yml","open_to_public_contributors":true,"api_name":["System.Collections.Generic.Comparer<T>","System.Collections.Generic.Comparer<T>..ctor","System.Collections.Generic.Comparer<T>.Compare","System.Collections.Generic.Comparer<T>.Create","System.Collections.Generic.Comparer<T>.Default","System.Collections.Generic.Comparer<T>.IComparer.Compare"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.Comparer`1","System::Collections::Generic::Comparer`1","System.Collections.Generic.Comparer`1.#ctor","System::Collections::Generic::Comparer`1::#ctor","System.Collections.Generic.Comparer`1.Compare","System::Collections::Generic::Comparer`1::Compare","System.Collections.Generic.Comparer`1.Create","System::Collections::Generic::Comparer`1::Create","System.Collections.Generic.Comparer`1.Default","System::Collections::Generic::Comparer`1::Default","System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare","System::Collections::Generic::Comparer`1::System#Collections#IComparer#Compare"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e47e82d6-e380-f0a9-ae7f-db0aa8a77938","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Generic/Comparer`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Comparer<T> class | Microsoft Docs","_op_ogTitle":"Comparer<T> class","description":"Provides a base class for implementations of the  generic interface.\n","toc_asset_id":"_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.Comparer`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.comparer-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.comparer-1","fileRelativePath":"System.Collections.Generic.Comparer-1.html"},"themesRelativePathToOutputRoot":"_themes/"}