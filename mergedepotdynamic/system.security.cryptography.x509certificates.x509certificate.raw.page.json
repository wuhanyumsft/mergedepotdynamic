{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_X509Certificates_X509Certificate\">\r\n      <span class=\"lang-csharp\">X509Certificate</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods that help you use X.509 v.3 certificates.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class X509Certificate : IDisposable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">X509Certificate</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>ASN.1 DER is the only certificate format supported by this class.  </p>\n<p> For most scenarios, you should use the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a> class instead.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Starting with the .NET Framework 4.6, this type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n<p> For apps that target the .NET Framework 4.5.2 and earlier versions, the X509Certificate class does not implement the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface and therefore does not have a <code>Dispose</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor\" data-linktype=\"self-bookmark\">X509Certificate()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___\" data-linktype=\"self-bookmark\">X509Certificate(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class defined from a sequence of bytes representing an X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_IntPtr_\" data-linktype=\"self-bookmark\">X509Certificate(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a handle to an unmanaged <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">X509Certificate(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using another <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_\" data-linktype=\"self-bookmark\">X509Certificate(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using the name of a PKCS7 signed file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_Security_SecureString_\" data-linktype=\"self-bookmark\">X509Certificate(Byte[],SecureString)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array and a password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_String_\" data-linktype=\"self-bookmark\">X509Certificate(Byte[],String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array and a password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">X509Certificate(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object and a <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_Security_SecureString_\" data-linktype=\"self-bookmark\">X509Certificate(String,SecureString)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a certificate file name and a password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">X509Certificate(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using the name of a PKCS7 signed file and a password to access the certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">X509Certificate(Byte[],SecureString,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array, a password, and a key storage flag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">X509Certificate(Byte[],String,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array, a password, and a key storage flag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">X509Certificate(String,SecureString,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a certificate file name, a password, and a key storage flag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">X509Certificate(String,String,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Handle\" data-linktype=\"self-bookmark\">Handle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Issuer\" data-linktype=\"self-bookmark\">Issuer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the certificate authority that issued the X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Subject\" data-linktype=\"self-bookmark\">Subject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the subject distinguished name from the certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_CreateFromCertFile_System_String_\" data-linktype=\"self-bookmark\">CreateFromCertFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an X.509v3 certificate from the specified PKCS7 signed file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_CreateFromSignedFile_System_String_\" data-linktype=\"self-bookmark\">CreateFromSignedFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an X.509v3 certificate from the specified signed file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all of the unmanaged resources used by this <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> objects for equality.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Equals_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">Equals(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> objects for equality.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Export_System_Security_Cryptography_X509Certificates_X509ContentType_\" data-linktype=\"self-bookmark\">Export(X509ContentType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Exports the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to a byte array in a format described by one of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Export_System_Security_Cryptography_X509Certificates_X509ContentType_System_Security_SecureString_\" data-linktype=\"self-bookmark\">Export(X509ContentType,SecureString)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Exports the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to a byte array using the specified format and a password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Export_System_Security_Cryptography_X509Certificates_X509ContentType_System_String_\" data-linktype=\"self-bookmark\">Export(X509ContentType,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Exports the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to a byte array in a format described by one of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values, and using the specified password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_FormatDate_System_DateTime_\" data-linktype=\"self-bookmark\">FormatDate(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified date and time to a string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetCertHash\" data-linktype=\"self-bookmark\">GetCertHash()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash value for the X.509v3 certificate as an array of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetCertHashString\" data-linktype=\"self-bookmark\">GetCertHashString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the SHA1 hash value for the X.509v3 certificate as a hexadecimal string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetEffectiveDateString\" data-linktype=\"self-bookmark\">GetEffectiveDateString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the effective date of this X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetExpirationDateString\" data-linktype=\"self-bookmark\">GetExpirationDateString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the expiration date of this X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetFormat\" data-linktype=\"self-bookmark\">GetFormat()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the name of the format of this X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for the X.509v3 certificate as an integer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetIssuerName\" data-linktype=\"self-bookmark\">GetIssuerName()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the name of the certification authority that issued the X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithm\" data-linktype=\"self-bookmark\">GetKeyAlgorithm()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the key algorithm information for this X.509v3 certificate as a string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithmParameters\" data-linktype=\"self-bookmark\">GetKeyAlgorithmParameters()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithmParametersString\" data-linktype=\"self-bookmark\">GetKeyAlgorithmParametersString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetName\" data-linktype=\"self-bookmark\">GetName()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the name of the principal to which the certificate was issued.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetPublicKey\" data-linktype=\"self-bookmark\">GetPublicKey()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the public key for the X.509v3 certificate as an array of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetPublicKeyString\" data-linktype=\"self-bookmark\">GetPublicKeyString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the public key for the X.509v3 certificate as a hexadecimal string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetRawCertData\" data-linktype=\"self-bookmark\">GetRawCertData()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the raw data for the entire X.509v3 certificate as an array of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetRawCertDataString\" data-linktype=\"self-bookmark\">GetRawCertDataString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the raw data for the entire X.509v3 certificate as a hexadecimal string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetSerialNumber\" data-linktype=\"self-bookmark\">GetSerialNumber()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the serial number of the X.509v3 certificate as an array of bytes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_GetSerialNumberString\" data-linktype=\"self-bookmark\">GetSerialNumberString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the serial number of the X.509v3 certificate as a hexadecimal string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_Byte___\" data-linktype=\"self-bookmark\">Import(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with data from a byte array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_String_\" data-linktype=\"self-bookmark\">Import(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with information from a certificate file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_Byte___System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">Import(Byte[],SecureString,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using data from a byte array, a password, and a key storage flag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_Byte___System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">Import(Byte[],String,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using data from a byte array, a password, and flags for determining how the private key is imported.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_String_System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">Import(String,SecureString,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with information from a certificate file, a password, and a key storage flag.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_String_System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\" data-linktype=\"self-bookmark\">Import(String,String,X509KeyStorageFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with information from a certificate file, a password, and a <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the state of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_ToString_System_Boolean_\" data-linktype=\"self-bookmark\">ToString(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object, with extra information, if specified.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\" data-linktype=\"self-bookmark\">IDeserializationCallback.OnDeserialization(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509Certificate_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets serialization information with all the data needed to recreate an instance of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class defined from a sequence of bytes representing an X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array containing data from an X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  </p>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>data</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads an X.509 certificate file into an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object, exports the certificate as a byte array, and then imports the byte array into another <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X509Certificate.Import-Export#1\">using System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate = &quot;test.pfx&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = new X509Certificate(Certificate);\n\n\n        byte[] certData = cert.Export(X509ContentType.Cert);\n\n        X509Certificate newCert = new X509Certificate(certData);\n\n        // Get the value.\n        string resultsTrue = newCert.ToString(true);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = newCert.ToString(false);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X509Certificate.Import-Export#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\nModule X509\n\n    Sub Main()\n\n        &#39; The path to the certificate.\n        Dim Certificate As String = &quot;test.pfx&quot;\n\n        &#39; Load the certificate into an X509Certificate object.\n        Dim cert As New X509Certificate(Certificate)\n\n\n        Dim certData As Byte() = cert.Export(X509ContentType.Cert)\n\n        Dim newCert As New X509Certificate(certData)\n\n        &#39; Get the value.\n        Dim resultsTrue As String = newCert.ToString(True)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsTrue)\n\n        &#39; Get the value.\n        Dim resultsFalse As String = newCert.ToString(False)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsFalse)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X509Certificate.Import-Export#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = L&quot;test.pfx&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = gcnew X509Certificate( Certificate );\n   array&lt;Byte&gt;^certData = cert-&gt;Export( X509ContentType::Cert );\n   X509Certificate^ newCert = gcnew X509Certificate( certData );\n   \n   // Get the value.\n   String^ resultsTrue = newCert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = newCert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a handle to an unmanaged <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (IntPtr handle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to an unmanaged <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The handle parameter does not represent a valid <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using a handle for the Microsoft Cryptographic API certificate context, <code>PCCERT_CONTEXT</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This constructor creates a copy of the certificate context. Do not assume that the context structure you passed to the constructor is valid; it may have been released. You can get a copy of the current <code>PCCERT_CONTEXT</code> structure from the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate#System_Security_Cryptography_X509Certificates_X509Certificate_Handle_\" data-linktype=\"relative-path\">Handle</a> property, but it is valid only during the lifetime of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using another <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (System.Security.Cryptography.X509Certificates.X509Certificate cert);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cert</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class from which to initialize this class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>cert</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using the name of a PKCS7 signed file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a PKCS7 signed file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  </p>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>fileName</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads an X.509 certificate from a file, calls the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate#System_Security_Cryptography_X509Certificates_X509Certificate_ToString_\" data-linktype=\"relative-path\">ToString</a> method, and displays the results to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X509Certificate#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = L&quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = gcnew X509Certificate( Certificate );\n   \n   // Get the value.\n   String^ resultsTrue = cert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = cert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X509Certificate#1\">using System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate = &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = new X509Certificate(Certificate);\n\n        // Get the value.\n        string resultsTrue = cert.ToString(true);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = cert.ToString(false);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X509Certificate#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\nModule X509\n\n    Sub Main()\n\n        &#39; The path to the certificate.\n        Dim Certificate As String = &quot;Certificate.cer&quot;\n\n        &#39; Load the certificate into an X509Certificate object.\n        Dim cert As New X509Certificate(Certificate)\n\n        &#39; Get the value.\n        Dim resultsTrue As String = cert.ToString(True)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsTrue)\n\n        &#39; Get the value.\n        Dim resultsFalse As String = cert.ToString(False)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsFalse)\n\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_Security_SecureString_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(Byte[],SecureString)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array and a password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (byte[] rawData, System.Security.SecureString password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains data from an X.509 certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  </p>\n</div>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>rawData</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(Byte[],String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array and a password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (byte[] rawData, string password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array containing data from an X.509 certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  </p>\n</div>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>rawData</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object and a <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object that describes serialization information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> structure that describes how serialization should be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_Security_SecureString_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(String,SecureString)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a certificate file name and a password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (string fileName, System.Security.SecureString password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a certificate file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  </p>\n</div>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>fileName</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using the name of a PKCS7 signed file and a password to access the certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (string fileName, string password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a PKCS7 signed file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  Calling this constructor with the correct password decrypts the private key and saves it to a key container.  </p>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>fileName</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(Byte[],SecureString,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array, a password, and a key storage flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains data from an X.509 certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).  </p>\n<p> ASN.1 DER is the only certificate format supported by this class.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  </p>\n</div>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>rawData</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_Byte___System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(Byte[],String,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a byte array, a password, and a key storage flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array containing data from an X.509 certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.  Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).  </p>\n<p> The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a> value can be used to control where and how the private key is imported.  </p>\n<p> ASN.1 DER is the only certificate format supported by this class.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.  </p>\n</div>\n<p> If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>rawData</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(String,SecureString,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using a certificate file name, a password, and a key storage flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a certificate file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>fileName</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_System_String_System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">X509Certificate(String,String,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class using the name of a PKCS7 signed file, a password to access the certificate, and a key storage flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public X509Certificate (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a PKCS7 signed file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you create an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> certificate by specifying a PKCS7 signed file store for <code>fileName</code>, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> is created for the certificate that signed the store rather than for any of the certificates within the store.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Handle\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Handle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Handle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a handle to a Microsoft Cryptographic API certificate context described by an unmanaged <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IntPtr Handle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> structure that represents an unmanaged <code>PCCERT_CONTEXT</code> structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The handle is valid only for the lifetime of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Issuer\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Issuer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Issuer</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the certificate authority that issued the X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Issuer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the certificate authority that issued the X.509v3 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate handle is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Subject\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Subject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Subject</div>        \r\n          </div>\r\n    \r\n            <p>Gets the subject distinguished name from the certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Subject { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The subject distinguished name from the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate handle is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_CreateFromCertFile_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_CreateFromCertFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateFromCertFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an X.509v3 certificate from the specified PKCS7 signed file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromCertFile (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path of the PKCS7 signed file from which to create the X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </div>\r\n                  <p>The newly created X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>filename</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The certificate file is not restricted to .cerfiles. Any PKCS7 signed file can be used, including an Authenticode signed .pfx file.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> from a specified certification file.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.ToString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string resultsTrue = cert.ToString(true);\n       \n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = cert.ToString(false);\n       \n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.ToString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ resultsTrue = cert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = cert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.ToString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim resultsTrue As String = cert.ToString(True)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(resultsTrue)\n      \n      &#39; Get the value.\n      Dim resultsFalse As String = cert.ToString(False)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(resultsFalse)\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_CreateFromSignedFile_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_CreateFromSignedFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateFromSignedFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an X.509v3 certificate from the specified signed file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.X509Certificates.X509Certificate CreateFromSignedFile (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path of the signed file from which to create the X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </div>\r\n                  <p>The newly created X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASN.1 DER is the only certificate format supported by this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Dispose\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface starting with the .NET Framework 4.6; in previous versions of the .NET Framework, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class does not implement this interface, and therefore the <code>Dispose</code> method does not exist.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases all of the unmanaged resources used by this <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface starting with the .NET Framework 4.6; in previous versions of the .NET Framework, the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> class does not implement this interface, and therefore the <code>Dispose</code> method does not exist.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> objects for equality.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to compare to the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object is equal to the object specified by the <code>other</code> parameter; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two objects are considered equal if they are <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> objects and they have the same issuer and serial number.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example compares two certificates for equality.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.Equals Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n        string OtherCertificate =  &quot;OtherCertificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate certTwo = X509Certificate.CreateFromCertFile(OtherCertificate);\n\n        // Get the value.\n        bool result = cert.Equals(certTwo);\n       \n        // Display the value to the console.\n        Console.WriteLine(result);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.Equals Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   String^ OtherCertificate = &quot;OtherCertificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ certTwo = X509Certificate::CreateFromCertFile( OtherCertificate );\n   \n   // Get the value.\n   bool result = cert-&gt;Equals( certTwo );\n   \n   // Display the value to the console.\n   Console::WriteLine( result );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.Equals Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      Dim OtherCertificate As String = &quot;OtherCertificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim certTwo As X509Certificate = X509Certificate.CreateFromCertFile(OtherCertificate)\n      \n      &#39; Get the value.\n      Dim result As Boolean = cert.Equals(certTwo)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(result)\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Equals_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> objects for equality.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Equals (System.Security.Cryptography.X509Certificates.X509Certificate other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to compare to the current object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object is equal to the object specified by the <code>other</code> parameter; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Two <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> objects are considered equal if they have the same issuer and serial number.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example compares two certificates for equality.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.Equals Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n        string OtherCertificate =  &quot;OtherCertificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate certTwo = X509Certificate.CreateFromCertFile(OtherCertificate);\n\n        // Get the value.\n        bool result = cert.Equals(certTwo);\n       \n        // Display the value to the console.\n        Console.WriteLine(result);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.Equals Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   String^ OtherCertificate = &quot;OtherCertificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ certTwo = X509Certificate::CreateFromCertFile( OtherCertificate );\n   \n   // Get the value.\n   bool result = cert-&gt;Equals( certTwo );\n   \n   // Display the value to the console.\n   Console::WriteLine( result );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.Equals Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      Dim OtherCertificate As String = &quot;OtherCertificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim certTwo As X509Certificate = X509Certificate.CreateFromCertFile(OtherCertificate)\n      \n      &#39; Get the value.\n      Dim result As Boolean = cert.Equals(certTwo)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(result)\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Export_System_Security_Cryptography_X509Certificates_X509ContentType_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Export_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Export(X509ContentType)</div>        \r\n          </div>\r\n    \r\n            <p>Exports the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to a byte array in a format described by one of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values that describes how to format the output data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>An array of bytes that represents the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A value other than <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, or <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> was passed to the <code>contentType</code> parameter.  </p>\n<p> -or-  </p>\n<p> The certificate could not be exported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>contentType</code> parameter accepts only the following values of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> enumeration: <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>.  Passing any other value causes a <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> to be thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads an X.509 certificate file into an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object, exports the certificate as a byte array, and then imports the byte array into another <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X509Certificate.Import-Export#1\">using System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate = &quot;test.pfx&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = new X509Certificate(Certificate);\n\n\n        byte[] certData = cert.Export(X509ContentType.Cert);\n\n        X509Certificate newCert = new X509Certificate(certData);\n\n        // Get the value.\n        string resultsTrue = newCert.ToString(true);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = newCert.ToString(false);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X509Certificate.Import-Export#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\nModule X509\n\n    Sub Main()\n\n        &#39; The path to the certificate.\n        Dim Certificate As String = &quot;test.pfx&quot;\n\n        &#39; Load the certificate into an X509Certificate object.\n        Dim cert As New X509Certificate(Certificate)\n\n\n        Dim certData As Byte() = cert.Export(X509ContentType.Cert)\n\n        Dim newCert As New X509Certificate(certData)\n\n        &#39; Get the value.\n        Dim resultsTrue As String = newCert.ToString(True)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsTrue)\n\n        &#39; Get the value.\n        Dim resultsFalse As String = newCert.ToString(False)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsFalse)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X509Certificate.Import-Export#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = L&quot;test.pfx&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = gcnew X509Certificate( Certificate );\n   array&lt;Byte&gt;^certData = cert-&gt;Export( X509ContentType::Cert );\n   X509Certificate^ newCert = gcnew X509Certificate( certData );\n   \n   // Get the value.\n   String^ resultsTrue = newCert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = newCert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Export_System_Security_Cryptography_X509Certificates_X509ContentType_System_Security_SecureString_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Export_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Export(X509ContentType,SecureString)</div>        \r\n          </div>\r\n    \r\n            <p>Exports the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to a byte array using the specified format and a password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, System.Security.SecureString password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values that describes how to format the output data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A byte array that represents the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A value other than <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, or <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> was passed to the <code>contentType</code> parameter.  </p>\n<p> -or-  </p>\n<p> The certificate could not be exported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>contentType</code> parameter accepts only the following values of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> enumeration: <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>.  Passing any other value causes a <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> to be thrown.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Export_System_Security_Cryptography_X509Certificates_X509ContentType_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Export_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Export(X509ContentType,String)</div>        \r\n          </div>\r\n    \r\n            <p>Exports the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to a byte array in a format described by one of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values, and using the specified password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> values that describes how to format the output data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>An array of bytes that represents the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>A value other than <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, or <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> was passed to the <code>contentType</code> parameter.  </p>\n<p> -or-  </p>\n<p> The certificate could not be exported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>contentType</code> parameter accepts only the following values of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a> enumeration: <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>, and <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509contenttype\" data-linktype=\"relative-path\">X509ContentType</a>.  Passing any other value causes a <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> to be thrown.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_FormatDate_System_DateTime_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_FormatDate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormatDate(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified date and time to a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static string FormatDate (DateTime date);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>date</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The date and time to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the value of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Some cultures cannot convert future dates into strings. If the expiration date of an X.509 certificate is beyond the range of the culture, FormatDate falls back to a calendar that can express the date. If the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_Calendar_\" data-linktype=\"relative-path\">Calendar</a> value is <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a>, the calendar is changed to the <a class=\"xref\" href=\"system.globalization.hijricalendar\" data-linktype=\"relative-path\">HijriCalendar</a> class; otherwise, it is changed to the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_InvariantCulture_\" data-linktype=\"relative-path\">InvariantCulture</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetCertHash\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetCertHash_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCertHash()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash value for the X.509v3 certificate as an array of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] GetCertHash ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The hash value for the X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetCertHash method to fill an array of bytes with the hash value for an X.509 certificate.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetCertHash Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        byte[] results = cert.GetCertHash();\n      \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetCertHash Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As Byte() = cert.GetCertHash()\n   End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetCertHash Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   array&lt;Byte&gt;^results = cert-&gt;GetCertHash();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetCertHashString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetCertHashString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCertHashString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the SHA1 hash value for the X.509v3 certificate as a hexadecimal string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetCertHashString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The hexadecimal string representation of the X.509 certificate hash value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetCertHashString method to get an X.509 certificate hash value, convert it to a string, and display it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetCertHashString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetCertHashString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetCertHashString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetCertHashString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetCertHashString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetCertHashString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetEffectiveDateString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetEffectiveDateString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEffectiveDateString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the effective date of this X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetEffectiveDateString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The effective date for this X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The effective date is the date after which the X.509 certificate is considered valid.  </p>\n<p> The GetEffectiveDateString method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetEffectiveDateString method to get the effective date of a certificate and displays it to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"X509Certificate.GetEffectiveDateString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetEffectiveDateString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub\nEnd Class \n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetEffectiveDateString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetEffectiveDateString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetEffectiveDateString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetEffectiveDateString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetExpirationDateString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetExpirationDateString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetExpirationDateString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the expiration date of this X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetExpirationDateString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The expiration date for this X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The expiration date is the date after which the X.509 certificate is no longer considered valid.  </p>\n<p> The GetExpirationDateString method returns a string that shows the date formatted in Short Date Pattern followed by the time formatted in Long Time Pattern.  The date and time are formatted using the current culture and time zone.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method may return a different string format on Macintosh computers, although the underlying <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object will represent the same value.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetExpirationDateString method to get the expiration date of a certificate and displays it to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"X509Certificate.GetExpirationDateString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetExpirationDateString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub  \nEnd Class \n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetExpirationDateString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetExpirationDateString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetExpirationDateString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetExpirationDateString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetFormat\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetFormat_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFormat()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the name of the format of this X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetFormat ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The format of this X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The format X.509 is always returned in this implementation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetFormat method to get the format of a certificate and displays it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetFormat Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetFormat();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetFormat Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetFormat();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetFormat Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetFormat()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetHashCode\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for the X.509v3 certificate as an integer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code for the X.509 certificate as an integer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the X.509 certificate hash is an array of more than 4 bytes, any byte after the fourth byte is not seen in this integer representation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetHashCode method to return an integer representation of a certificate&#39;s hash code and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetHashCode Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        int results = cert.GetHashCode();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetHashCode Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   int results = cert-&gt;GetHashCode();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetHashCode Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As Integer = cert.GetHashCode()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetIssuerName\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetIssuerName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIssuerName()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the name of the certification authority that issued the X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetIssuerName ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the certification authority that issued the X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>An error with the certificate occurs. For example:  </p>\n<ul>\n<li><p>The certificate file does not exist.  </p>\n</li>\n<li><p>The certificate is invalid.  </p>\n</li>\n<li><p>The certificate&#39;s password is incorrect.</p>\n</li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetIssuerName method to return the certificate issuer&#39;s name and displays it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetIssuerName Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetIssuerName();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetIssuerName Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetIssuerName()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub  \nEnd Class \n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetIssuerName Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetIssuerName();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithm\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetKeyAlgorithm()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the key algorithm information for this X.509v3 certificate as a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetKeyAlgorithm ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The key algorithm information for this X.509 certificate as a string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate context is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetKeyAlgorithm method to get a certificate&#39;s key algorithm in string format and displays it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetKeyAlgorithm Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetKeyAlgorithm();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetKeyAlgorithm Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetKeyAlgorithm();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetKeyAlgorithm Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetKeyAlgorithm()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithmParameters\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithmParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetKeyAlgorithmParameters()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the key algorithm parameters for the X.509v3 certificate as an array of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] GetKeyAlgorithmParameters ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The key algorithm parameters for the X.509 certificate as an array of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate context is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetKeyAlgorithmParameters method to return a certificate&#39;s key algorithm parameters as an array of bytes and displays it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetKeyAlgorithmParameters Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   array&lt;Byte&gt;^results = cert-&gt;GetKeyAlgorithmParameters();\n   \n   // Display the value to the console.\n   System::Collections::IEnumerator^ enum0 = results-&gt;GetEnumerator();\n   while ( enum0-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(enum0-&gt;Current);\n      Console::Write( b );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetKeyAlgorithmParameters Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        byte[] results = cert.GetKeyAlgorithmParameters();\n       \n        // Display the value to the console.\n        foreach(byte b in results)\n        {\n            Console.Write(b);\n        }\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetKeyAlgorithmParameters Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As Byte() = cert.GetKeyAlgorithmParameters()\n      \n      &#39; Display the value to the console.\n      Dim b As Byte\n      For Each b In  results\n         Console.Write(b)\n      Next b\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithmParametersString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetKeyAlgorithmParametersString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetKeyAlgorithmParametersString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the key algorithm parameters for the X.509v3 certificate as a hexadecimal string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetKeyAlgorithmParametersString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The key algorithm parameters for the X.509 certificate as a hexadecimal string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate context is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetKeyAlgorithmParametersString method to return a certificate&#39;s key algorithm parameters in string format and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetKeyAlgorithmParametersString#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetKeyAlgorithmParametersString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetKeyAlgorithmParametersString#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetKeyAlgorithmParametersString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetKeyAlgorithmParametersString#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetKeyAlgorithmParametersString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetName\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetName()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the name of the principal to which the certificate was issued.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetName ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the principal to which the certificate was issued.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate context is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetName method to return the name of a certificate&#39;s principal and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetName Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetName();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetName Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetName();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetName Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetName()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetPublicKey\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetPublicKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPublicKey()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the public key for the X.509v3 certificate as an array of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] GetPublicKey ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The public key for the X.509 certificate as an array of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate context is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetPublicKey method to return a certificate&#39;s public key as an array of bytes and displays it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetPublicKey Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   array&lt;Byte&gt;^results = cert-&gt;GetPublicKey();\n   \n   // Display the value to the console.\n   System::Collections::IEnumerator^ enum0 = results-&gt;GetEnumerator();\n   while ( enum0-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(enum0-&gt;Current);\n      Console::Write( b );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetPublicKey Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        byte[] results = cert.GetPublicKey();\n       \n        // Display the value to the console.\n        foreach(byte b in results)\n        {\n            Console.Write(b);\n        }\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetPublicKey Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As Byte() = cert.GetPublicKey()\n      \n      &#39; Display the value to the console.\n      Dim b As Byte\n      For Each b In  results\n         Console.Write(b)\n      Next b\n   End Sub\nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetPublicKeyString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetPublicKeyString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPublicKeyString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the public key for the X.509v3 certificate as a hexadecimal string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetPublicKeyString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The public key for the X.509 certificate as a hexadecimal string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetPublicKeyString method to return a certificate&#39;s public key as a string and displays it to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"X509Certificate.GetPublicKeyString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetPublicKeyString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"X509Certificate.GetPublicKeyString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetPublicKeyString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetPublicKeyString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetPublicKeyString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub  \nEnd Class  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetRawCertData\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetRawCertData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRawCertData()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the raw data for the entire X.509v3 certificate as an array of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] GetRawCertData ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>A byte array containing the X.509 certificate data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetRawCertData method to return a certificate&#39;s raw data as an array of bytes and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetRawCertData Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        byte[] results = cert.GetRawCertData();\n       \n        // Display the value to the console.\n        foreach(byte b in results)\n        {\n            Console.Write(b);\n        }\n\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetRawCertData Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As Byte() = cert.GetRawCertData()\n      \n      &#39; Display the value to the console.\n      Dim b As Byte\n      For Each b In  results\n         Console.Write(b)\n      Next b\n   End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetRawCertData Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   array&lt;Byte&gt;^results = cert-&gt;GetRawCertData();\n   \n   // Display the value to the console.\n   System::Collections::IEnumerator^ enum0 = results-&gt;GetEnumerator();\n   while ( enum0-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(enum0-&gt;Current);\n      Console::Write( b );\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetRawCertDataString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetRawCertDataString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRawCertDataString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the raw data for the entire X.509v3 certificate as a hexadecimal string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetRawCertDataString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The X.509 certificate data as a hexadecimal string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetRawCertDataString method to return a certificate&#39;s raw data as a string and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetRawCertDataString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetRawCertDataString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n\n\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetRawCertDataString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetRawCertDataString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetRawCertDataString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetRawCertDataString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub\nEnd Class \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetSerialNumber\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetSerialNumber_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSerialNumber()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the serial number of the X.509v3 certificate as an array of bytes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual byte[] GetSerialNumber ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The serial number of the X.509 certificate as an array of bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate context is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetSerialNumber method to return a certificate&#39;s serial number as an array of bytes and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetSerialNumber Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        byte[] results = cert.GetSerialNumber();\n       \n        // Display the value to the console.\n        foreach(byte b in results)\n        {\n            Console.Write(b);\n        }\n\n\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetSerialNumber Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   array&lt;Byte&gt;^results = cert-&gt;GetSerialNumber();\n   \n   // Display the value to the console.\n   System::Collections::IEnumerator^ enum0 = results-&gt;GetEnumerator();\n   while ( enum0-&gt;MoveNext() )\n   {\n      Byte b = safe_cast&lt;Byte&gt;(enum0-&gt;Current);\n      Console::Write( b );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetSerialNumber Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As Byte() = cert.GetSerialNumber()\n      \n      &#39; Display the value to the console.\n      Dim b As Byte\n      For Each b In  results\n         Console.Write(b)\n      Next b\n   End Sub \nEnd Class  \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetSerialNumberString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_GetSerialNumberString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSerialNumberString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the serial number of the X.509v3 certificate as a hexadecimal string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string GetSerialNumberString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The serial number of the X.509 certificate as a hexadecimal string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the GetSerialNumberString method to return a certificate&#39;s serial number as a string and displays it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.GetSerialNumberString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string results = cert.GetSerialNumberString();\n       \n        // Display the value to the console.\n        Console.WriteLine(results);\n\n\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.GetSerialNumberString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ results = cert-&gt;GetSerialNumberString();\n   \n   // Display the value to the console.\n   Console::WriteLine( results );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.GetSerialNumberString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim results As String = cert.GetSerialNumberString()\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(results)\n   End Sub \nEnd Class \n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with data from a byte array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Import (byte[] rawData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array containing data from an X.509 certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to take the raw byte array of an X.509 certificate and populate the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with its associated values.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(String)</div>        \r\n          </div>\r\n    \r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with information from a certificate file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Import (string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a certificate file represented as a string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method uses a certificate file (such as a file with a .cer extension) that represents an X.509 certificate, and populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with the certificate that the file contains.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example loads an X.509 certificate from a file, calls the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate#System_Security_Cryptography_X509Certificates_X509Certificate_ToString_\" data-linktype=\"relative-path\">ToString</a> method, and displays the results to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.X509Certificates.X509Certificate.Import#1\">using System;\nusing System.Security.Cryptography.X509Certificates;\n\n\nclass X509\n{\n\n    static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate = &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = new X509Certificate();\n\n        cert.Import(Certificate);\n\n        // Get the value.\n        string resultsTrue = cert.ToString(true);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = cert.ToString(false);\n\n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.X509Certificates.X509Certificate.Import#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = L&quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = gcnew X509Certificate;\n   cert-&gt;Import(Certificate);\n   \n   // Get the value.\n   String^ resultsTrue = cert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = cert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.X509Certificates.X509Certificate.Import#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\nModule X509\n\n    Sub Main()\n\n        &#39; The path to the certificate.\n        Dim Certificate As String = &quot;Certificate.cer&quot;\n\n        &#39; Load the certificate into an X509Certificate object.\n        Dim cert As New X509Certificate\n\n        cert.Import(Certificate)\n\n        &#39; Get the value.\n        Dim resultsTrue As String = cert.ToString(True)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsTrue)\n\n        &#39; Get the value.\n        Dim resultsFalse As String = cert.ToString(False)\n\n        &#39; Display the value to the console.\n        Console.WriteLine(resultsFalse)\n\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_Byte___System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(Byte[],SecureString,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Populates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using data from a byte array, a password, and a key storage flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that contains data from an X.509 certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_Byte___System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(Byte[],String,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using data from a byte array, a password, and flags for determining how the private key is imported.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array containing data from an X.509 certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>rawData</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The length of the <code>rawData</code> parameter is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to populate an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object using a password for the certificate represented by the byte array. The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a> value can be used to control where and how the private key is imported.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_String_System_Security_SecureString_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(String,SecureString,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Populates an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with information from a certificate file, a password, and a key storage flag.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a certificate file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_System_String_System_String_System_Security_Cryptography_X509Certificates_X509KeyStorageFlags_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Import_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Import(String,String,X509KeyStorageFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Populates the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object with information from a certificate file, a password, and a <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a certificate file represented as a string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password required to access the X.509 certificate data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyStorageFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509keystorageflags\" data-linktype=\"relative-path\">X509KeyStorageFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that control where and how to import the certificate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>fileName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> Never hard-code a password within your source code.  Hard-coded passwords can be retrieved from an assembly using the <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">Ildasm.exe (IL Disassembler)</a>, a hex editor, or by simply opening the assembly in a text editor such as Notepad.exe.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Reset\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the state of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate2\" data-linktype=\"relative-path\">X509Certificate2</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Reset method to reset the state of the certificate. This method also frees any resources associated with the certificate.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_ToString\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the ToString method to display the value of a certificate to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.ToString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string resultsTrue = cert.ToString(true);\n       \n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = cert.ToString(false);\n       \n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.ToString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ resultsTrue = cert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = cert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.ToString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim resultsTrue As String = cert.ToString(True)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(resultsTrue)\n      \n      &#39; Get the value.\n      Dim resultsFalse As String = cert.ToString(False)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(resultsFalse)\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_ToString_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object, with extra information, if specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string ToString (bool fVerbose);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fVerbose</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to produce the verbose form of the string representation; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate#System_Security_Cryptography_X509Certificates_X509Certificate_ToString_\" data-linktype=\"relative-path\">ToString</a> method to display the value of a certificate to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"X509Certificate.ToString Method#1\">\nusing System;\nusing System.Security.Cryptography.X509Certificates;\n\n\npublic class X509\n{\n\n    public static void Main()\n    {\n\n        // The path to the certificate.\n        string Certificate =  &quot;Certificate.cer&quot;;\n\n        // Load the certificate into an X509Certificate object.\n        X509Certificate cert = X509Certificate.CreateFromCertFile(Certificate);\n\n        // Get the value.\n        string resultsTrue = cert.ToString(true);\n       \n        // Display the value to the console.\n        Console.WriteLine(resultsTrue);\n\n        // Get the value.\n        string resultsFalse = cert.ToString(false);\n       \n        // Display the value to the console.\n        Console.WriteLine(resultsFalse);\n  \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"X509Certificate.ToString Method#1\">using namespace System;\nusing namespace System::Security::Cryptography::X509Certificates;\nint main()\n{\n   \n   // The path to the certificate.\n   String^ Certificate = &quot;Certificate.cer&quot;;\n   \n   // Load the certificate into an X509Certificate object.\n   X509Certificate^ cert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Get the value.\n   String^ resultsTrue = cert-&gt;ToString( true );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsTrue );\n   \n   // Get the value.\n   String^ resultsFalse = cert-&gt;ToString( false );\n   \n   // Display the value to the console.\n   Console::WriteLine( resultsFalse );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"X509Certificate.ToString Method#1\">Imports System\nImports System.Security.Cryptography.X509Certificates\n\n\n\n\nPublic Class X509\n   \n   \n   Public Shared Sub Main()\n      \n      &#39; The path to the certificate.\n      Dim Certificate As String = &quot;Certificate.cer&quot;\n      \n      &#39; Load the certificate into an X509Certificate object.\n      Dim cert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Get the value.\n      Dim resultsTrue As String = cert.ToString(True)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(resultsTrue)\n      \n      &#39; Get the value.\n      Dim resultsFalse As String = cert.ToString(False)\n      \n      &#39; Display the value to the console.\n      Console.WriteLine(resultsFalse)\n   End Sub  \nEnd Class \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_System_Runtime_Serialization_IDeserializationCallback_OnDeserialization_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDeserializationCallback.OnDeserialization(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface and is called back by the deserialization event when deserialization is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDeserializationCallback.OnDeserialization (object sender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the deserialization event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509Certificate_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509Certificate_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Gets serialization information with all the data needed to recreate an instance of the current <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to populate with serialization information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The destination context of the serialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Equals\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Export\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Handle\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Import\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Issuer\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Reset\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.Subject\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.IDeserializationCallback.OnDeserialization\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate.ToString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"61bc321a-b6d8-e93c-1856-9014a2abb10b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods that help you use X.509 v.3 certificates.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.X509Certificates/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.X509Certificate\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509Certificate.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.X509Certificates.X509Certificate","System.Security.Cryptography.X509Certificates.X509Certificate..ctor","System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile","System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile","System.Security.Cryptography.X509Certificates.X509Certificate.Dispose","System.Security.Cryptography.X509Certificates.X509Certificate.Equals","System.Security.Cryptography.X509Certificates.X509Certificate.Export","System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate","System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash","System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString","System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString","System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString","System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat","System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode","System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName","System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm","System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters","System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString","System.Security.Cryptography.X509Certificates.X509Certificate.GetName","System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey","System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString","System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData","System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString","System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber","System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString","System.Security.Cryptography.X509Certificates.X509Certificate.Handle","System.Security.Cryptography.X509Certificates.X509Certificate.Import","System.Security.Cryptography.X509Certificates.X509Certificate.Issuer","System.Security.Cryptography.X509Certificates.X509Certificate.Reset","System.Security.Cryptography.X509Certificates.X509Certificate.Subject","System.Security.Cryptography.X509Certificates.X509Certificate.IDeserializationCallback.OnDeserialization","System.Security.Cryptography.X509Certificates.X509Certificate.ISerializable.GetObjectData","System.Security.Cryptography.X509Certificates.X509Certificate.ToString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.X509Certificate","System::Security::Cryptography::X509Certificates::X509Certificate","System.Security.Cryptography.X509Certificates.X509Certificate.#ctor","System::Security::Cryptography::X509Certificates::X509Certificate::#ctor","System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromCertFile","System::Security::Cryptography::X509Certificates::X509Certificate::CreateFromCertFile","System.Security.Cryptography.X509Certificates.X509Certificate.CreateFromSignedFile","System::Security::Cryptography::X509Certificates::X509Certificate::CreateFromSignedFile","System.Security.Cryptography.X509Certificates.X509Certificate.Dispose","System::Security::Cryptography::X509Certificates::X509Certificate::Dispose","System.Security.Cryptography.X509Certificates.X509Certificate.Equals","System::Security::Cryptography::X509Certificates::X509Certificate::Equals","System.Security.Cryptography.X509Certificates.X509Certificate.Export","System::Security::Cryptography::X509Certificates::X509Certificate::Export","System.Security.Cryptography.X509Certificates.X509Certificate.FormatDate","System::Security::Cryptography::X509Certificates::X509Certificate::FormatDate","System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash","System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHash","System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString","System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHashString","System.Security.Cryptography.X509Certificates.X509Certificate.GetEffectiveDateString","System::Security::Cryptography::X509Certificates::X509Certificate::GetEffectiveDateString","System.Security.Cryptography.X509Certificates.X509Certificate.GetExpirationDateString","System::Security::Cryptography::X509Certificates::X509Certificate::GetExpirationDateString","System.Security.Cryptography.X509Certificates.X509Certificate.GetFormat","System::Security::Cryptography::X509Certificates::X509Certificate::GetFormat","System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode","System::Security::Cryptography::X509Certificates::X509Certificate::GetHashCode","System.Security.Cryptography.X509Certificates.X509Certificate.GetIssuerName","System::Security::Cryptography::X509Certificates::X509Certificate::GetIssuerName","System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithm","System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithm","System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParameters","System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithmParameters","System.Security.Cryptography.X509Certificates.X509Certificate.GetKeyAlgorithmParametersString","System::Security::Cryptography::X509Certificates::X509Certificate::GetKeyAlgorithmParametersString","System.Security.Cryptography.X509Certificates.X509Certificate.GetName","System::Security::Cryptography::X509Certificates::X509Certificate::GetName","System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKey","System::Security::Cryptography::X509Certificates::X509Certificate::GetPublicKey","System.Security.Cryptography.X509Certificates.X509Certificate.GetPublicKeyString","System::Security::Cryptography::X509Certificates::X509Certificate::GetPublicKeyString","System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData","System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertData","System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertDataString","System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertDataString","System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber","System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumber","System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString","System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumberString","System.Security.Cryptography.X509Certificates.X509Certificate.Handle","System::Security::Cryptography::X509Certificates::X509Certificate::Handle","System.Security.Cryptography.X509Certificates.X509Certificate.Import","System::Security::Cryptography::X509Certificates::X509Certificate::Import","System.Security.Cryptography.X509Certificates.X509Certificate.Issuer","System::Security::Cryptography::X509Certificates::X509Certificate::Issuer","System.Security.Cryptography.X509Certificates.X509Certificate.Reset","System::Security::Cryptography::X509Certificates::X509Certificate::Reset","System.Security.Cryptography.X509Certificates.X509Certificate.Subject","System::Security::Cryptography::X509Certificates::X509Certificate::Subject","System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System::Security::Cryptography::X509Certificates::X509Certificate::System#Runtime#Serialization#IDeserializationCallback#OnDeserialization","System.Security.Cryptography.X509Certificates.X509Certificate.System#Runtime#Serialization#ISerializable#GetObjectData","System::Security::Cryptography::X509Certificates::X509Certificate::System#Runtime#Serialization#ISerializable#GetObjectData","System.Security.Cryptography.X509Certificates.X509Certificate.ToString","System::Security::Cryptography::X509Certificates::X509Certificate::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"61bc321a-b6d8-e93c-1856-9014a2abb10b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.X509Certificates/X509Certificate.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"X509Certificate class | Microsoft Docs","_op_ogTitle":"X509Certificate class","description":"Provides methods that help you use X.509 v.3 certificates.\n","toc_asset_id":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.X509Certificate","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509certificate","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509certificate","fileRelativePath":"System.Security.Cryptography.X509Certificates.X509Certificate.html"},"themesRelativePathToOutputRoot":"_themes/"}