{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs\">\r\n      <span class=\"lang-csharp\">DetailsViewUpdateEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DetailsViewUpdateEventArgs : System.ComponentModel.CancelEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">System.ComponentModel.CancelEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DetailsViewUpdateEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel\" data-linktype=\"relative-path\">Cancel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> event when an Update button (a button with its <code>CommandName</code> property set to &quot;Update&quot;) within the control is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control updates the record. This allows you to provide an event handler that performs a custom routine, such as HTML-encoding the values of a record before updating it in the data source, whenever this event occurs.  </p>\n<p> A DetailsViewUpdateEventArgs object is passed to the event handler, which allows you to determine the value of an optional command argument sent to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control and to indicate whether the update operation should be canceled. To determine the value of the command argument, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property. To cancel the update operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>. You can also read or modify the new values entered by the user by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs#System_Web_UI_WebControls_DetailsViewUpdatedEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> properties. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> property contains the key fields, while the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> property contains the non-key fields. If you need to access the original non-key field values, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs#System_Web_UI_WebControls_DetailsViewUpdatedEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> property.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<p> For a list of initial property values for an instance of the DetailsViewUpdateEventArgs class, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs__ctor_\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> constructor.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsViewUpdateEventArgs__ctor_System_Object_\" data-linktype=\"self-bookmark\">DetailsViewUpdateEventArgs(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_CommandArgument\" data-linktype=\"self-bookmark\">CommandArgument</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the command argument for the update operation passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys\" data-linktype=\"self-bookmark\">Keys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary that contains the key field name/value pairs for the record to update.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues\" data-linktype=\"self-bookmark\">NewValues</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary that contains the new field name/value pairs for the record to update.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_OldValues\" data-linktype=\"self-bookmark\">OldValues</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary that contains the original field name/value pairs for the record to update.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs__ctor_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DetailsViewUpdateEventArgs(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DetailsViewUpdateEventArgs (object commandArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An optional command argument passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> class.  </p>\n<p> The following table shows the initial property value for an instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> class.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a></td>\n<td>The value of the <code>commandArgument</code> parameter.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> This constructor is used primarily by control developers when raising events.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_CommandArgument\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_CommandArgument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandArgument</div>        \r\n          </div>\r\n    \r\n            <p>Gets the command argument for the update operation passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object CommandArgument { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The command argument for the update operation passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinserteventargs#System_Web_UI_WebControls_DetailsViewInsertEventArgs_CommandArgument_\" data-linktype=\"relative-path\">CommandArgument</a> property to determine the value of the command argument passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Keys</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary that contains the key field name/value pairs for the record to update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.IOrderedDictionary Keys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> that contains a dictionary of key field name/value pairs for the record to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Keys property to access the values of the key fields for the record to update. For example, you can use these values to keep a log of updated records.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property contains only the key fields. To access the updated and original non-key fields, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> properties, respectively.  </p>\n</div>\n<p> The Keys property returns an object that implements the <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> interface. The object contains <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> objects that represent the fields of the record to update.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> As a shortcut, you can also use the indexer of the <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object to access the field values directly.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Keys property to access the value of the key field for the record being updated.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewUpdateEventArgs#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomerDetailsView_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n\n    &#39; Validate the field values entered by the user. This\n    &#39; example determines whether the user left any fields\n    &#39; empty. Use the NewValues property to access the new \n    &#39; values entered by the user.\n    Dim emptyFieldList As ArrayList = _\n      ValidateFields(CType(e.NewValues, IOrderedDictionary))\n\n    If emptyFieldList.Count &gt; 0 Then\n\n      &#39; The user left some fields empty. Display an error message.\n      \n      &#39; Use the Keys property to retrieve the key field value.\n      Dim keyValue As String = e.Keys(&quot;CustomerID&quot;).ToString()\n\n      MessageLabel.Text = _\n        &quot;You must enter a value for all fields of record &quot; &amp; _\n        keyValue &amp; &quot;.&lt;br/&gt;The following fields are missing:&lt;br/&gt;&lt;br/&gt;&quot;\n\n      &#39; Display the missing fields.\n      Dim value As String\n      For Each value In emptyFieldList\n      \n        &#39; Use the OldValues property access the original value\n        &#39; of a field.\n        MessageLabel.Text &amp;= value &amp; &quot; - Original Value = &quot; &amp; _\n          e.OldValues(value).ToString() &amp; &quot;&lt;br /&gt;&quot;\n        \n      Next\n\n      &#39; Cancel the update operation.\n      e.Cancel = True\n\n    Else\n    \n      &#39; The field values passed validation. Clear the\n      &#39; error message label.\n      MessageLabel.Text = &quot;&quot;\n      \n    End If\n\n  End Sub\n\n    Function ValidateFields(ByVal list As IOrderedDictionary) _\n      As ArrayList\n    \n        &#39; Create an ArrayList object to store the\n        &#39; names of any empty fields.\n        Dim emptyFieldList As New ArrayList()\n\n        &#39; Iterate though the field values entered by\n        &#39; the user and check for an empty field. Empty\n        &#39; fields contain a null value.\n        Dim entry As DictionaryEntry\n    \n        For Each entry In list\n    \n            If entry.Value Is Nothing Then\n      \n                &#39; Add the field name to the ArrayList object.\n                emptyFieldList.Add(entry.Key.ToString())\n        \n            End If\n        Next\n\n        Return emptyFieldList\n  \n    End Function\n\n  Sub CustomerDetailsView_ModeChanging(ByVal sender As Object, ByVal e As DetailsViewModeEventArgs)\n  \n    If e.CancelingEdit Then\n      \n      &#39; The user canceled the update operation.\n      &#39; Clear the error message label.\n      MessageLabel.Text = &quot;&quot;\n    \n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewUpdateEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewUpdateEventArgs Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          onitemupdating=&quot;CustomerDetailsView_ItemUpdating&quot;\n          onmodechanging=&quot;CustomerDetailsView_ModeChanging&quot; \n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n          [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewUpdateEventArgs#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n    void CustomerDetailsView_ItemUpdating(Object sender, \n      DetailsViewUpdateEventArgs e)\n    {\n\n        // Validate the field values entered by the user. This\n        // example determines whether the user left any fields\n        // empty. Use the NewValues property to access the new \n        // values entered by the user.\n        ArrayList emptyFieldList = \n          ValidateFields((IOrderedDictionary)e.NewValues);\n\n        if (emptyFieldList.Count &gt; 0)\n        {\n\n            // The user left some fields empty. \n            // Display an error message.\n\n            // Use the Keys property to retrieve the key field value.\n            String keyValue = e.Keys[&quot;CustomerID&quot;].ToString();\n\n            MessageLabel.Text = \n              &quot;You must enter a value for all fields of record &quot; +\n              keyValue + &quot;.&lt;br/&gt;The following fields are missing:&lt;br/&gt;&lt;br/&gt;&quot;;\n\n            // Display the missing fields.\n            foreach (String value in emptyFieldList)\n            {\n                // Use the OldValues property access the original\n                // value of a field.\n                MessageLabel.Text += value + &quot; - Original Value = &quot; +\n                  e.OldValues[value].ToString() + &quot;&lt;br /&gt;&quot;;\n            }\n\n            // Cancel the update operation.\n            e.Cancel = true;\n\n        }\n        else\n        {\n            // The field values passed validation. Clear the\n            // error message label.\n            MessageLabel.Text = &quot;&quot;;\n        }\n\n    }\n\n    ArrayList ValidateFields(IOrderedDictionary list)\n    {\n\n        // Create an ArrayList object to store the\n        // names of any empty fields.\n        ArrayList emptyFieldList = new ArrayList();\n\n        // Iterate though the field values entered by\n        // the user and check for an empty field. Empty\n        // fields contain a null value.\n        foreach (DictionaryEntry entry in list)\n        {\n            if (entry.Value == null)\n            {\n                // Add the field name to the ArrayList object.\n                emptyFieldList.Add(entry.Key.ToString());\n            }\n        }\n\n        return emptyFieldList;\n    }\n\n    void CustomerDetailsView_ModeChanging(Object sender, \n      DetailsViewModeEventArgs e)\n    {\n        if (e.CancelingEdit)\n        {\n            // The user canceled the update operation.\n            // Clear the error message label.\n            MessageLabel.Text = &quot;&quot;;\n        }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewUpdateEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewUpdateEventArgs Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          onitemupdating=&quot;CustomerDetailsView_ItemUpdating&quot;\n          onmodechanging=&quot;CustomerDetailsView_ModeChanging&quot; \n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewValues</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary that contains the new field name/value pairs for the record to update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.IOrderedDictionary NewValues { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> that contains a dictionary of the new field name/value pairs for the record to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the NewValues property to access the new field values for the record to update. For example, you can use these values to keep a log of updated records.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property does not contain the key fields. To access the key fields, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> property. You can also access the original field values by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> property.  </p>\n</div>\n<p> The NewValues property returns an object that implements the <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> interface. The object contains <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> objects that represent the fields of the record to update.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> As a shortcut, you can also use the indexer of the <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object to access the field values directly.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the NewValues property to access the new values entered by the user for the non-key fields of the record being updated.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewUpdatedEventArgs#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  void CustomerDetailsView_ItemUpdated(Object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n    // Use the Exception property to determine whether an exception\n    // occurred during the insert operation.\n    if (e.Exception == null)\n    {\n      // Use the Values property to get the value entered by \n      // the user for the CompanyName field.\n      String keyFieldValue = e.Keys[&quot;CustomerID&quot;].ToString();\n\n      // Display a confirmation message.\n      MessageLabel.Text = &quot;Record &quot; + keyFieldValue + \n        &quot; updated successfully. &quot;;\n\n      // Display the old and new values.\n      DisplayValues(e);\n\n      if (e.AffectedRows == 1)\n      {\n        MessageLabel.Text += e.AffectedRows.ToString() + \n          &quot; record updated.&quot;;\n      }\n      else\n      {\n        MessageLabel.Text += e.AffectedRows.ToString() + \n          &quot; records updated.&quot;;\n      }\n    }\n    else\n    {\n      // Insert the code to handle the exception.\n      MessageLabel.Text = e.Exception.Message;\n\n      // Use the ExceptionHandled property to indicate that the \n      // exception is already handled.\n      e.ExceptionHandled = true;\n\n      // When an exception occurs, keep the DetailsView\n      // control in edit mode.\n      e.KeepInEditMode = true;\n    }\n  }\n\n  void DisplayValues(DetailsViewUpdatedEventArgs e)\n  {\n    \n    MessageLabel.Text += &quot;&lt;br/&gt;&lt;/br&gt;&quot;;\n    \n    // Iterate through the OldValue and NewValues\n    // properties and display the values.\n    for (int i = 0; i &lt; e.OldValues.Count; i++)\n    {\n      MessageLabel.Text += &quot;Old Value=&quot; + e.OldValues[i].ToString() +\n        &quot;, New Value=&quot; + e.NewValues[i].ToString() + &quot;&lt;br/&gt;&quot;;\n    }\n\n    MessageLabel.Text += &quot;&lt;/br&gt;&quot;;\n    \n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewUpdatedEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewUpdatedEventArgs Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          onitemupdated=&quot;CustomerDetailsView_ItemUpdated&quot;\n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewUpdatedEventArgs#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomerDetailsView_ItemUpdated(ByVal sender As Object, ByVal e As DetailsViewUpdatedEventArgs)\n  \n    &#39; Use the Exception property to determine whether an exception\n    &#39; occurred during the insert operation.\n    If e.Exception Is Nothing Then\n    \n      &#39; Use the Values property to get the value entered by \n      &#39; the user for the CompanyName field.\n      Dim keyFieldValue As String = e.Keys(&quot;CustomerID&quot;).ToString()\n\n      &#39; Display a confirmation message.\n      MessageLabel.Text = &quot;Record &quot; &amp; keyFieldValue &amp; _\n        &quot; updated successfully. &quot;\n\n      &#39; Display the old and new values.\n      DisplayValues(e)\n\n      If e.AffectedRows = 1 Then\n\n        MessageLabel.Text &amp;= e.AffectedRows.ToString() &amp; _\n          &quot; record updated.&quot;\n      \n      Else\n      \n        MessageLabel.Text &amp;= e.AffectedRows.ToString() &amp; _\n          &quot; records updated.&quot;\n      \n      End If\n    \n    Else\n    \n      &#39; Insert the code to handle the exception.\n      MessageLabel.Text = e.Exception.Message\n\n      &#39; Use the ExceptionHandled property to indicate that the \n      &#39; exception is already handled.\n      e.ExceptionHandled = True\n\n      &#39; When an exception occurs, keep the DetailsView\n      &#39; control in edit mode.\n      e.KeepInEditMode = True\n    \n    End If\n    \n  End Sub\n\n  Sub DisplayValues(ByVal e As DetailsViewUpdatedEventArgs)\n    \n    MessageLabel.Text &amp;= &quot;&lt;br/&gt;&lt;/br&gt;&quot;\n    \n    &#39; Iterate through the OldValue and NewValues\n    &#39; properties and display the values.\n    Dim i As Integer\n        \n    For i = 0 To e.OldValues.Count - 1\n    \n      MessageLabel.Text &amp;= &quot;Old Value=&quot; &amp; e.OldValues(i).ToString() &amp; _\n        &quot;, New Value=&quot; &amp; e.NewValues(i).ToString() &amp; &quot;&lt;br/&gt;&quot;\n    \n    Next\n\n    MessageLabel.Text &amp;= &quot;&lt;/br&gt;&quot;\n    \n  End Sub\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewUpdatedEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewUpdatedEventArgs Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          onitemupdated=&quot;CustomerDetailsView_ItemUpdated&quot;\n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_OldValues\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsViewUpdateEventArgs_OldValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OldValues</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary that contains the original field name/value pairs for the record to update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.IOrderedDictionary OldValues { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> that contains a dictionary of the original field name/value pairs for the record to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the OldValues property to access the original field values for the updated record. For example, you can use these values to keep a log of updated records.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property does not contain the key fields. To access the key fields, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> property. You can also access the new field values entered by the user by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> property.  </p>\n</div>\n<p> The OldValues property returns an object that implements the <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> interface. The object contains <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> objects that represent the fields of the record to update.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> As a shortcut, you can also use the indexer of the object to access the field values directly.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the OldValues property to access the original values of the non-key fields for the record being updated.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewUpdateEventArgs#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n  Sub CustomerDetailsView_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n\n    &#39; Validate the field values entered by the user. This\n    &#39; example determines whether the user left any fields\n    &#39; empty. Use the NewValues property to access the new \n    &#39; values entered by the user.\n    Dim emptyFieldList As ArrayList = _\n      ValidateFields(CType(e.NewValues, IOrderedDictionary))\n\n    If emptyFieldList.Count &gt; 0 Then\n\n      &#39; The user left some fields empty. Display an error message.\n      \n      &#39; Use the Keys property to retrieve the key field value.\n      Dim keyValue As String = e.Keys(&quot;CustomerID&quot;).ToString()\n\n      MessageLabel.Text = _\n        &quot;You must enter a value for all fields of record &quot; &amp; _\n        keyValue &amp; &quot;.&lt;br/&gt;The following fields are missing:&lt;br/&gt;&lt;br/&gt;&quot;\n\n      &#39; Display the missing fields.\n      Dim value As String\n      For Each value In emptyFieldList\n      \n        &#39; Use the OldValues property access the original value\n        &#39; of a field.\n        MessageLabel.Text &amp;= value &amp; &quot; - Original Value = &quot; &amp; _\n          e.OldValues(value).ToString() &amp; &quot;&lt;br /&gt;&quot;\n        \n      Next\n\n      &#39; Cancel the update operation.\n      e.Cancel = True\n\n    Else\n    \n      &#39; The field values passed validation. Clear the\n      &#39; error message label.\n      MessageLabel.Text = &quot;&quot;\n      \n    End If\n\n  End Sub\n\n    Function ValidateFields(ByVal list As IOrderedDictionary) _\n      As ArrayList\n    \n        &#39; Create an ArrayList object to store the\n        &#39; names of any empty fields.\n        Dim emptyFieldList As New ArrayList()\n\n        &#39; Iterate though the field values entered by\n        &#39; the user and check for an empty field. Empty\n        &#39; fields contain a null value.\n        Dim entry As DictionaryEntry\n    \n        For Each entry In list\n    \n            If entry.Value Is Nothing Then\n      \n                &#39; Add the field name to the ArrayList object.\n                emptyFieldList.Add(entry.Key.ToString())\n        \n            End If\n        Next\n\n        Return emptyFieldList\n  \n    End Function\n\n  Sub CustomerDetailsView_ModeChanging(ByVal sender As Object, ByVal e As DetailsViewModeEventArgs)\n  \n    If e.CancelingEdit Then\n      \n      &#39; The user canceled the update operation.\n      &#39; Clear the error message label.\n      MessageLabel.Text = &quot;&quot;\n    \n    End If\n    \n  End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewUpdateEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewUpdateEventArgs Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          onitemupdating=&quot;CustomerDetailsView_ItemUpdating&quot;\n          onmodechanging=&quot;CustomerDetailsView_ModeChanging&quot; \n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n          [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewUpdateEventArgs#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  \n    void CustomerDetailsView_ItemUpdating(Object sender, \n      DetailsViewUpdateEventArgs e)\n    {\n\n        // Validate the field values entered by the user. This\n        // example determines whether the user left any fields\n        // empty. Use the NewValues property to access the new \n        // values entered by the user.\n        ArrayList emptyFieldList = \n          ValidateFields((IOrderedDictionary)e.NewValues);\n\n        if (emptyFieldList.Count &gt; 0)\n        {\n\n            // The user left some fields empty. \n            // Display an error message.\n\n            // Use the Keys property to retrieve the key field value.\n            String keyValue = e.Keys[&quot;CustomerID&quot;].ToString();\n\n            MessageLabel.Text = \n              &quot;You must enter a value for all fields of record &quot; +\n              keyValue + &quot;.&lt;br/&gt;The following fields are missing:&lt;br/&gt;&lt;br/&gt;&quot;;\n\n            // Display the missing fields.\n            foreach (String value in emptyFieldList)\n            {\n                // Use the OldValues property access the original\n                // value of a field.\n                MessageLabel.Text += value + &quot; - Original Value = &quot; +\n                  e.OldValues[value].ToString() + &quot;&lt;br /&gt;&quot;;\n            }\n\n            // Cancel the update operation.\n            e.Cancel = true;\n\n        }\n        else\n        {\n            // The field values passed validation. Clear the\n            // error message label.\n            MessageLabel.Text = &quot;&quot;;\n        }\n\n    }\n\n    ArrayList ValidateFields(IOrderedDictionary list)\n    {\n\n        // Create an ArrayList object to store the\n        // names of any empty fields.\n        ArrayList emptyFieldList = new ArrayList();\n\n        // Iterate though the field values entered by\n        // the user and check for an empty field. Empty\n        // fields contain a null value.\n        foreach (DictionaryEntry entry in list)\n        {\n            if (entry.Value == null)\n            {\n                // Add the field name to the ArrayList object.\n                emptyFieldList.Add(entry.Key.ToString());\n            }\n        }\n\n        return emptyFieldList;\n    }\n\n    void CustomerDetailsView_ModeChanging(Object sender, \n      DetailsViewModeEventArgs e)\n    {\n        if (e.CancelingEdit)\n        {\n            // The user canceled the update operation.\n            // Clear the error message label.\n            MessageLabel.Text = &quot;&quot;;\n        }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsViewUpdateEventArgs Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsViewUpdateEventArgs Example&lt;/h3&gt;\n                       \n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          datakeynames=&quot;CustomerID&quot; \n          onitemupdating=&quot;CustomerDetailsView_ItemUpdating&quot;\n          onmodechanging=&quot;CustomerDetailsView_ModeChanging&quot; \n          runat=&quot;server&quot;&gt;\n            \n          &lt;pagersettings position=&quot;Bottom&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;br/&gt;\n        \n        &lt;asp:label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:sqldatasource id=&quot;DetailsViewSource&quot;\n          selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], \n            [City], [PostalCode], [Country] From [Customers]&quot;\n          updatecommand=&quot;Update [Customers] Set \n          [CompanyName]=@CompanyName, [Address]=@Address, \n          [City]=@City, [PostalCode]=@PostalCode, \n          [Country]=@Country \n          Where [CustomerID]=@CustomerID&quot;\n          connectionstring=\n          &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot; \n          runat=&quot;server&quot;/&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DetailsViewUpdateEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DetailsViewUpdateEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs.CommandArgument\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"dba3f7c2-aa26-23c0-614c-afc73e42e1c6\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\DetailsViewUpdateEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DetailsViewUpdateEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DetailsViewUpdateEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DetailsViewUpdateEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.DetailsViewUpdateEventArgs","System.Web.UI.WebControls.DetailsViewUpdateEventArgs..ctor","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.CommandArgument","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DetailsViewUpdateEventArgs","System::Web::UI::WebControls::DetailsViewUpdateEventArgs","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.#ctor","System::Web::UI::WebControls::DetailsViewUpdateEventArgs::#ctor","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.CommandArgument","System::Web::UI::WebControls::DetailsViewUpdateEventArgs::CommandArgument","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.Keys","System::Web::UI::WebControls::DetailsViewUpdateEventArgs::Keys","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.NewValues","System::Web::UI::WebControls::DetailsViewUpdateEventArgs::NewValues","System.Web.UI.WebControls.DetailsViewUpdateEventArgs.OldValues","System::Web::UI::WebControls::DetailsViewUpdateEventArgs::OldValues"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"dba3f7c2-aa26-23c0-614c-afc73e42e1c6","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\DetailsViewUpdateEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/DetailsViewUpdateEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DetailsViewUpdateEventArgs class | Microsoft Docs","_op_ogTitle":"DetailsViewUpdateEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DetailsViewUpdateEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.detailsviewupdateeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.detailsviewupdateeventargs","fileRelativePath":"System.Web.UI.WebControls.DetailsViewUpdateEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}