{"content":"    \r\n    <h1 id=\"System_Configuration_SectionInformation\">\r\n      <span class=\"lang-csharp\">SectionInformation</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class SectionInformation</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SectionInformation</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SectionInformation object contains the metadata about an individual section within the configuration hierarchy. This object can be used in order to validate and change the properties of an individual section.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_AllowDefinition\" data-linktype=\"self-bookmark\">AllowDefinition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_AllowExeDefinition\" data-linktype=\"self-bookmark\">AllowExeDefinition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_AllowLocation\" data-linktype=\"self-bookmark\">AllowLocation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the configuration section allows the <code>location</code> attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_AllowOverride\" data-linktype=\"self-bookmark\">AllowOverride</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_ConfigSource\" data-linktype=\"self-bookmark\">ConfigSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_ForceSave\" data-linktype=\"self-bookmark\">ForceSave</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_InheritInChildApplications\" data-linktype=\"self-bookmark\">InheritInChildApplications</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_IsDeclarationRequired\" data-linktype=\"self-bookmark\">IsDeclarationRequired</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the configuration section must be declared in the configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_IsDeclared\" data-linktype=\"self-bookmark\">IsDeclared</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the associated configuration section is declared in the configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_IsLocked\" data-linktype=\"self-bookmark\">IsLocked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the associated configuration section is locked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_IsProtected\" data-linktype=\"self-bookmark\">IsProtected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the associated configuration section is protected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the associated configuration section.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_OverrideMode\" data-linktype=\"self-bookmark\">OverrideMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_OverrideModeDefault\" data-linktype=\"self-bookmark\">OverrideModeDefault</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_OverrideModeEffective\" data-linktype=\"self-bookmark\">OverrideModeEffective</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_ProtectionProvider\" data-linktype=\"self-bookmark\">ProtectionProvider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the protected configuration provider for the associated configuration section.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_RequirePermission\" data-linktype=\"self-bookmark\">RequirePermission</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the associated configuration section requires access permissions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_RestartOnExternalChanges\" data-linktype=\"self-bookmark\">RestartOnExternalChanges</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_SectionName\" data-linktype=\"self-bookmark\">SectionName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the associated configuration section.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_Type\" data-linktype=\"self-bookmark\">Type</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the section class name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_ForceDeclaration\" data-linktype=\"self-bookmark\">ForceDeclaration()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the associated configuration section to appear in the configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_ForceDeclaration_System_Boolean_\" data-linktype=\"self-bookmark\">ForceDeclaration(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_GetParentSection\" data-linktype=\"self-bookmark\">GetParentSection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the configuration section that contains the configuration section associated with this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_GetRawXml\" data-linktype=\"self-bookmark\">GetRawXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an XML node object that represents the associated configuration-section object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_ProtectSection_System_String_\" data-linktype=\"self-bookmark\">ProtectSection(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Marks a configuration section for protection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_RevertToParent\" data-linktype=\"self-bookmark\">RevertToParent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes the associated configuration section to inherit all its values from the parent section.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_SetRawXml_System_String_\" data-linktype=\"self-bookmark\">SetRawXml(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the object to an XML representation of the associated configuration section within the configuration file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_SectionInformation_UnprotectSection\" data-linktype=\"self-bookmark\">UnprotectSection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the protected configuration encryption from the associated configuration section.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_AllowDefinition\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_AllowDefinition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowDefinition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be defined.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationAllowDefinition AllowDefinition { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationallowdefinition\" data-linktype=\"relative-path\">ConfigurationAllowDefinition</a></div>\r\n                  </div>\r\n                  <p>A value that indicates where in the configuration file hierarchy the associated <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object can be declared.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The selected value conflicts with a value that is already defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>AllowDefinition applies only to configuration files of Web applications. For client applications, you must use <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowExeDefinition_\" data-linktype=\"relative-path\">AllowExeDefinition</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the AllowDefinition property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#95\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n\n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#95\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the AllowDefinition value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#96\">        Dim allowDefinition _\n        As ConfigurationAllowDefinition = _\n        sInfo.AllowDefinition\n        Console.WriteLine(&quot;Allow definition: {0}&quot;, _\n        allowDefinition.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#96\">            ConfigurationAllowDefinition allowDefinition =\n                sInfo.AllowDefinition;\n            Console.WriteLine(&quot;Allow definition: {0}&quot;, \n                allowDefinition.ToString() );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_AllowExeDefinition\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_AllowExeDefinition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowExeDefinition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates where in the configuration file hierarchy the associated configuration section can be declared.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationAllowExeDefinition AllowExeDefinition { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationallowexedefinition\" data-linktype=\"relative-path\">ConfigurationAllowExeDefinition</a></div>\r\n                  </div>\r\n                  <p>A value that indicates where in the configuration file hierarchy the associated <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object can be declared for .exe files.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The selected value conflicts with a value that is already defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>AllowExeDefinition applies only to configuration files of client applications. For Web applications, you must use <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowDefinition_\" data-linktype=\"relative-path\">AllowDefinition</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the AllowExeDefinition property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#95\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n\n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#95\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the AllowExeDefinition value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#97\">        Dim allowExeDefinition _\n        As ConfigurationAllowExeDefinition = _\n        sInfo.AllowExeDefinition\n        Console.WriteLine(&quot;Allow exe definition: {0}&quot;, _\n        allowExeDefinition.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#97\">            ConfigurationAllowExeDefinition allowExeDefinition =\n                            sInfo.AllowExeDefinition;\n            Console.WriteLine(&quot;Allow exe definition: {0}&quot;,\n               allowExeDefinition.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_AllowLocation\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_AllowLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowLocation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the configuration section allows the <code>location</code> attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowLocation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>location</code> attribute is allowed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The selected value conflicts with a value that is already defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When set to <code>false</code>, the AllowLocation property indicates that the section is accessed by native-code readers. Therefore, the use of the <code>location</code> attribute is not allowed, because the native-code readers do not support the concept of <code>location</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the AllowLocation property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#95\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n\n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#95\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the AllowLocation value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#98\">        Dim allowLocation As Boolean = _\n        sInfo.AllowLocation\n        Console.WriteLine(&quot;Allow location: {0}&quot;, _\n        allowLocation.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#98\">            bool allowLocation =\n                sInfo.AllowLocation;\n            Console.WriteLine(&quot;Allow location: {0}&quot;,\n                           allowLocation.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_AllowOverride\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_AllowOverride_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowOverride</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the associated configuration section can be overridden by lower-level configuration files.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowOverride { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the section can be overridden; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the AllowOverride property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#95\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n\n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#95\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the AllowOverride value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#99\">        Dim allowOverride As Boolean = _\n        sInfo.AllowOverride\n        Console.WriteLine(&quot;Allow override: {0}&quot;, _\n        allowOverride.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#99\">            bool allowOverride =\n                sInfo.AllowOverride;\n            Console.WriteLine(&quot;Allow override: {0}&quot;,\n                           allowOverride.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_ConfigSource\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_ConfigSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConfigSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the include file in which the associated configuration section is defined, if such a file exists.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ConfigSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the include file in which the associated <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> is defined, if such a file exists; otherwise, an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ConfigSource property represents the value of the <code>configSource</code> attribute that is specified for a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object that is associated with the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<p> A <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> implementation can optionally specify a separate file in which the configuration settings for that section are defined. This can be useful in multiple ways:  </p>\n<ul>\n<li><p>Using include files can result in a more logical and modular structure for configuration files.  </p>\n</li>\n<li><p>File-access security and permissions can be used to restrict access to sections of configuration settings.  </p>\n</li>\n<li><p>Settings in an include file that are not used during application initialization can be modified and reloaded without requiring an application restart.  </p>\n<p>The following example shows how this attribute is used in a configuration file to specify that the <code>pages</code> section is defined in an external include file:  </p>\n<p><code>&lt;pages configSource=&quot;pages.config&quot;/&gt;</code>  </p>\n<p>If any of the settings in a configuration include file require the application to restart when they are modified, set the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_RestartOnExternalChanges_\" data-linktype=\"relative-path\">RestartOnExternalChanges</a> property to <code>true</code>.  </p>\n<p>In ASP.NET applications, at run time you can assign to the ConfigSource property the name of an alternative configuration file. In that case, the contents of the file are overwritten by the default connection string information that is contained in the Web.config file. This occurs also when the alternative file does not exist and it is created at run time. If the Web.config file does not contain any connection string information, an empty  section is added to the alternative file.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_ForceSave\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_ForceSave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForceSave</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the associated configuration section will be saved even if it has not been modified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ForceSave { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the associated <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object will be saved even if it has not been modified; otherwise, <code>false</code>. The default is <code>false</code>.  </p>\n <div class=\"alert NOTE\"><br> If the configuration file is saved (even if there are no modifications), ASP.NET restarts the application.<br>\n</div>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the ForceSave property of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#1\">        // Create a section whose name is \n        // MyUrls that contains a nested collection as \n        // defined by the UrlsSection class.\n        static void CreateSection()\n        {\n            string sectionName = &quot;MyUrls&quot;;\n\n            try\n            {\n\n                // Get the current configuration file.\n                System.Configuration.Configuration config =\n                        ConfigurationManager.OpenExeConfiguration(\n                        ConfigurationUserLevel.None);\n\n                UrlsSection urlsSection;\n\n                // Create the section whose name attribute \n                // is MyUrls in &lt;configSections&gt;.\n                // Also, create the related target section \n                // MyUrls in &lt;configuration&gt;.\n                if (config.Sections[sectionName] == null)\n                {\n                    urlsSection = new UrlsSection();\n\n                    // Change the default values of \n                    // the simple element.\n                    urlsSection.Simple.Name = &quot;Contoso&quot;;\n                    urlsSection.Simple.Url = &quot;http://www.contoso.com&quot;;\n                    urlsSection.Simple.Port = 8080;\n\n                    config.Sections.Add(sectionName, urlsSection);\n                    urlsSection.SectionInformation.ForceSave = true;\n                    config.Save(ConfigurationSaveMode.Full);\n                }\n            }\n            catch (ConfigurationErrorsException e)\n            {\n                Console.WriteLine(&quot;[CreateSection: {0}]&quot;,\n                    e.ToString());\n            }\n\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#1\">    &#39; Create a section whose name is \n    &#39; MyUrls that contains a nested collection as \n    &#39; defined by the UrlsSection class.\n    Shared Sub CreateSection()\n        Dim sectionName As String = &quot;MyUrls&quot;\n\n        Try\n\n            &#39; Get the current configuration file.\n            Dim config _\n            As System.Configuration.Configuration = _\n            ConfigurationManager.OpenExeConfiguration( _\n            ConfigurationUserLevel.None)\n\n            Dim urlsSection As UrlsSection\n\n            &#39; Create the section whose name\n            &#39; attribute isMyUrls in \n            &#39; &lt;configSections&gt;.\n            &#39; Also, create the related target section \n            &#39; MyUrls in &lt;configuration&gt;.\n            If config.Sections(sectionName) Is Nothing Then\n                urlsSection = New UrlsSection()\n\n                &#39; Change the default values of \n                &#39; the simple element.\n                urlsSection.Simple.Name = &quot;Contoso&quot;\n                urlsSection.Simple.Url = &quot;http://www.contoso.com&quot;\n                urlsSection.Simple.Port = 8080\n\n                config.Sections.Add(sectionName, urlsSection)\n                urlsSection.SectionInformation.ForceSave = True\n                config.Save(ConfigurationSaveMode.Full)\n            End If\n        Catch e As ConfigurationErrorsException\n            Console.WriteLine(&quot;[CreateSection: {0}]&quot;, e.ToString())\n        End Try\n\n    End Sub &#39;CreateSection\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_InheritInChildApplications\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_InheritInChildApplications_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InheritInChildApplications</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the settings that are specified in the associated configuration section are inherited by applications that reside in a subdirectory of the relevant application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool InheritInChildApplications { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the settings specified in this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object are inherited by child applications; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InheritInChildApplications property represents the <code>inheritInChildApplications</code>attribute of a <code>location</code> element in a configuration file.  </p>\n<p> Set InheritInChildApplications to <code>false</code> to prevent settings that are specific to a certain location (such as the root directory of a Web site) from being inherited by applications that exist in subdirectories.  </p>\n<p> The following example shows how to use this attribute in a configuration file to specify that the settings defined in the location element for the root of a Web site should not be inherited by child applications:  </p>\n<p> <code>&lt;location path=&quot;.&quot; inheritInChildApplications=&quot;false&quot;&gt;</code>  </p>\n<p> The InheritInChildApplications property applies only to location-specific configuration settings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get the InheritInChildApplications value of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#100\">    Public Shared Sub GetInheritInChildApps() \n\n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n        \n        Dim inheritInChildApps As Boolean = _\n        sInfo.InheritInChildApplications\n        Console.WriteLine(&quot;Inherit in child apps: {0}&quot;, _\n        inheritInChildApps.ToString())\n\n    End Sub &#39;GetInheritInChildApps    \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#100\">        static public void GetInheritInChildApps()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            bool inheritInChildApps =\n                sInfo.InheritInChildApplications;\n            Console.WriteLine(&quot;Inherit in child apps: {0}&quot;,\n                inheritInChildApps.ToString());\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_IsDeclarationRequired\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_IsDeclarationRequired_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDeclarationRequired</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the configuration section must be declared in the configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDeclarationRequired { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the associated <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object must be declared in the configuration file; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the IsDeclarationRequired property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#102\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n                \n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#102\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the IsDeclarationRequired value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#103\">        Dim declRequired As Boolean = _\n        sInfo.IsDeclarationRequired\n        Console.WriteLine(&quot;Declaration required?: {0}&quot;, _\n        declRequired.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#103\">            bool declRequired = \n                sInfo.IsDeclarationRequired;\n            Console.WriteLine(&quot;Declaration required?: {0}&quot;,\n                declRequired.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_IsDeclared\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_IsDeclared_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDeclared</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the associated configuration section is declared in the configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDeclared { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> is declared in the configuration file; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the IsDeclared property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#102\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n                \n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#102\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the IsDeclared value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#104\">        Dim declared As Boolean = _\n        sInfo.IsDeclared\n        Console.WriteLine(&quot;Section declared?: {0}&quot;, _\n        declared.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#104\">            bool declared =\n                sInfo.IsDeclared;\n            Console.WriteLine(&quot;Section declared?: {0}&quot;,\n                declared.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_IsLocked\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_IsLocked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsLocked</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the associated configuration section is locked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsLocked { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the section is locked; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsLocked property returns <code>true</code> when the related section is locked by the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowOverride_\" data-linktype=\"relative-path\">AllowOverride</a> or the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowDefinition_\" data-linktype=\"relative-path\">AllowDefinition</a> property. A section is locked if it cannot be overridden or defined in the current configuration file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the IsLocked property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#102\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n                \n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#102\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the IsLocked value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#105\">        Dim locked As Boolean = _\n        sInfo.IsLocked\n        Console.WriteLine(&quot;Section locked?: {0}&quot;, _\n        locked.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#105\">            bool locked =\n               sInfo.IsLocked;\n            Console.WriteLine(&quot;Section locked?: {0}&quot;,\n                locked.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_IsProtected\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_IsProtected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsProtected</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the associated configuration section is protected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsProtected { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> is protected; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Protected configuration sections are encrypted and read-only.  </p>\n<p> For more information about protected configuration sections, see <a href=\"../Topic/Encrypting%20Configuration%20Information%20Using%20Protected%20Configuration.md\" data-linktype=\"relative-path\">Encrypting Configuration Information Using Protected Configuration</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The examples in this section show how to get the IsProtected property value after accessing the related section information in the configuration file.  </p>\n<p> The following example gets the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#102\">        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n                \n        Dim sInfo As SectionInformation = _\n        section.SectionInformation\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#102\">            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            SectionInformation sInfo =\n                section.SectionInformation;\n</code></pre><p> The following example gets the IsProtected value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#106\">        Dim protect As Boolean = _\n        sInfo.IsProtected\n        Console.WriteLine(&quot;Section protected?: {0}&quot;, _\n        protect.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#106\">            bool protect =\n                sInfo.IsProtected;\n            Console.WriteLine(&quot;Section protected?: {0}&quot;,\n                protect.ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_Name\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the associated configuration section.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The complete name of the configuration section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Name is the name of the section without the path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get the Name value of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#107\">    Public Shared Sub GetSectionNameProperty() \n\n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n        \n        Dim sectionNameProperty _\n        As String = sInfo.Name\n        Console.WriteLine(&quot;Section name: {0}&quot;, _\n        sectionNameProperty)\n    \n    End Sub &#39;GetSectionNameProperty\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#107\">        static public void GetSectionNameProperty()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            string sectionNameProperty = sInfo.Name;\n            Console.WriteLine(&quot;Section name: {0}&quot;, \n                sectionNameProperty);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_OverrideMode\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_OverrideMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OverrideMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration value that specifies whether the associated configuration section can be overridden by child configuration files.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.OverrideMode OverrideMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>An attempt was made to change both the <span class=\"xref\">stem.Configuration.SectionInformation.AllowOverride*</span> and OverrideMode properties, which is not supported for compatibility reasons.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowOverride_\" data-linktype=\"relative-path\">AllowOverride</a> property gets or sets a value that indicates whether resources declared inside a <code>location</code> element can be overridden by child configuration files. The OverrideMode property gets or sets a value that specifies similar behavior, but does so for a specific configuration element or group, and uses one of the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration values. The OverrideMode property enables behavior to be inherited from a parent element.  </p>\n<p> You cannot programmatically set both the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowOverride_\" data-linktype=\"relative-path\">AllowOverride</a> and OverrideMode property. Setting the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowOverride_\" data-linktype=\"relative-path\">AllowOverride</a> property to <code>true</code> sets the OverrideMode property to <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a>. Setting the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_AllowOverride_\" data-linktype=\"relative-path\">AllowOverride</a> property to <code>false</code> sets the OverrideMode property to <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_OverrideModeDefault\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_OverrideModeDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OverrideModeDefault</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies the default override behavior of a configuration section by child configuration files.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.OverrideMode OverrideModeDefault { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The override behavior is specified in a parent configuration section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OverrideModeDefault property of a configuration section can only be set to the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> or <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> value of the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration. Setting the OverrideModeDefault property to <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> is equivalent to setting the value to <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_OverrideModeEffective\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_OverrideModeEffective_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OverrideModeEffective</div>        \r\n          </div>\r\n    \r\n            <p>Gets the override behavior of a configuration section that is in turn based on whether child configuration files can lock the configuration section.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.OverrideMode OverrideModeEffective { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns either <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a> or <a class=\"xref\" href=\"system.configuration.overridemode\" data-linktype=\"relative-path\">OverrideMode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_ProtectionProvider\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_ProtectionProvider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProtectionProvider</div>        \r\n          </div>\r\n    \r\n            <p>Gets the protected configuration provider for the associated configuration section.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ProtectedConfigurationProvider ProtectionProvider { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.protectedconfigurationprovider\" data-linktype=\"relative-path\">ProtectedConfigurationProvider</a></div>\r\n                  </div>\r\n                  <p>The protected configuration provider for this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For unprotected sections, the ProtectionProvider property is <code>null</code>.  </p>\n<p> For more information about protected configuration sections, see <a href=\"../Topic/Encrypting%20Configuration%20Information%20Using%20Protected%20Configuration.md\" data-linktype=\"relative-path\">Encrypting Configuration Information Using Protected Configuration</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_ProtectSection_\" data-linktype=\"relative-path\">ProtectSection</a> value of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#108\">    Public Shared Sub GetProtectionProvider()\n\n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n\n        Dim pp _\n        As ProtectedConfigurationProvider = _\n        sInfo.ProtectionProvider\n        If pp Is Nothing Then\n            Console.WriteLine(&quot;Protection provider is null&quot;)\n        Else\n            Console.WriteLine(&quot;Protection provider: {0}&quot;, _\n            pp.ToString())\n        End If\n\n    End Sub &#39;GetProtectionProvider\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#108\">        static public void GetProtectionProvider()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            ProtectedConfigurationProvider pp = \n                sInfo.ProtectionProvider;\n            if (pp == null)\n                Console.WriteLine(&quot;Protection provider is null&quot;);\n            else\n                Console.WriteLine(&quot;Protection provider: {0}&quot;, \n                    pp.ToString());\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_RequirePermission\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_RequirePermission_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequirePermission</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the associated configuration section requires access permissions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RequirePermission { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>requirePermission</code> attribute is set to <code>true</code>; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The selected value conflicts with a value that is already defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When RequirePermission is set to <code>true</code>, the <code>GetSection</code> methods are restricted by the trust level setting of the application. This means that methods or properties that allow access to configuration section handlers are restricted by the trust level set for the Web application.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because high and full trust are the only levels that allow access to files outside the current application domain, an application can use configuration section handlers only at these trust levels.  </p>\n</div>\n<p> When RequirePermission is set to <code>false</code>, the access to the configuration data is not restricted by the application&#39;s trust level settings.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The appropriate file ACL (Access Control List) permissions are still required, regardless of the RequirePermission setting. ACL permissions determine who can access the configuration file.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows two possible trust levels for a Web application when the RequirePermission property of the <code>appSettings</code> section is <code>true</code>.  </p>\n<pre><code>&lt;system.web&gt;  \n   // With the following trust value   \n   // the code below works.  \n  &lt;trust level=&quot;Full&quot; /&gt;  \n&lt;/system.web&gt;  \n\n&lt;system.web&gt;  \n  // With the following trust value   \n  // the code below does not work.  \n  &lt;trust level=&quot;Medium&quot; /&gt;  \n&lt;/system.web&gt;  \n</code></pre><p> The following example shows code that runs without errors when the trust level is set to full. Otherwise, the code results in an error.  </p>\n<pre><code class=\"lang-c#\">AppSettingsSection apSection =   \n  ConfigurationManager.GetSection(&quot;appSettings&quot;) as AppSettingsSection;  \n\nNameValueCollection apSectionCollection =  \n  ConfigurationManager.AppSettings;  \n</code></pre><pre><code class=\"lang-vb#\">Dim apSection As AppSettingsSection = _   \n  TryCast(ConfigurationManager.GetSection(&quot;appSettings&quot;),   \n    AppSettingsSection)  \n\n  Dim apSectionCollection As NameValueCollection = _   \n    ConfigurationManager.AppSettings  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_RestartOnExternalChanges\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_RestartOnExternalChanges_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RestartOnExternalChanges</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies whether a change in an external configuration include file requires an application restart.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RestartOnExternalChanges { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a change in an external configuration include file requires an application restart; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The selected value conflicts with a value that is already defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Set the RestartOnExternalChanges property to <code>false</code> to prevent an application restart when configuration settings in the external include file are modified for this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get the RestartOnExternalChanges property value of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#109\">    Public Shared Sub RestartOnExternalChanges()\n\n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n\n        Dim restartOnChange As Boolean = _\n        sInfo.RestartOnExternalChanges\n        Console.WriteLine(&quot;Section type: {0}&quot;, _\n        restartOnChange.ToString())\n\n    End Sub &#39;RestartOnExternalChanges\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#109\">        static public void RestartOnExternalChanges()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            bool restartOnChange = \n                sInfo.RestartOnExternalChanges;\n            Console.WriteLine(&quot;Section type: {0}&quot;, \n                restartOnChange.ToString());\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_SectionName\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_SectionName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SectionName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the associated configuration section.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SectionName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the associated <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SectionName property value is the complete section name, which includes the configuration inheritance hierarchy.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get the SectionName value of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#110\">    Public Shared Sub GetSectionName() \n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n        \n        Dim sectionName As String = _\n        sInfo.SectionName\n        Console.WriteLine(&quot;Section type: {0}&quot;, _\n        sectionName)\n    End Sub &#39;GetSectionName\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#110\">        static public void GetSectionName()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            string sectionName = sInfo.SectionName;\n            Console.WriteLine(&quot;Section type: {0}&quot;, sectionName);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_Type\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_Type_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Type</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the section class name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Type { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the class that is associated with this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The selected value is <code>null</code> or an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p>The selected value conflicts with a value that is already defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Type property returns the name of the section class that handles this instance of the <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get the Type value of a <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#111\">    Public Shared Sub GetSectionType() \n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n        \n        Dim sectionType As String = sInfo.Type\n        Console.WriteLine(&quot;Section type: {0}&quot;, _\n        sectionType)\n    \n    End Sub &#39;GetSectionType\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#111\">        static public void GetSectionType()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            string sectionType = sInfo.Type;\n            Console.WriteLine(&quot;Section type: {0}&quot;, sectionType);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_ForceDeclaration\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_ForceDeclaration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForceDeclaration()</div>        \r\n          </div>\r\n    \r\n            <p>Forces the associated configuration section to appear in the configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ForceDeclaration ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ForceDeclaration method forces this <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> declaration to be written to the configuration file.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ForceDeclaration method can force a <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> declaration to be written to a configuration file, even if the section is not required because it is already declared in a parent file. Using the ForceDeclaration method can make a configuration file more portable from one computer to another. It enables you to make sure that the section exists even when you do not have control over parent configuration files.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_ForceDeclaration_System_Boolean_\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_ForceDeclaration_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForceDeclaration(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Forces the associated configuration section to appear in the configuration file, or removes an existing section from the configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ForceDeclaration (bool force);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>force</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the associated section should be written in the configuration file; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationerrorsexception\" data-linktype=\"relative-path\">ConfigurationErrorsException</a></div>\r\n                  </div>\r\n                  <p><code>force</code> is <code>true</code> and the associated section cannot be exported to the child configuration file, or it is undeclared.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ForceDeclaration method forces this <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> declaration to be written to the configuration file if <code>force</code> is <code>true</code>. If <code>force</code> is <code>false</code>, this action might be ignored if the <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> declaration is required by the system.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The ForceDeclaration method can force a <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> declaration to be written to a configuration file, even if this section is not required because it is already declared in a parent file. Using the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_ForceDeclaration_\" data-linktype=\"relative-path\">ForceDeclaration</a> method can make a configuration file more portable from one computer to another. This also lets you make sure that the section exists even if you do not have control over parent configuration files.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the ForceDeclaration method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#113\">        &#39; Force the section information to be written to\n        &#39; the configuration file.\n        section.SectionInformation.ForceDeclaration(True)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#113\">            // Force the section information to be written to\n            // the configuration file.\n            section.SectionInformation.ForceDeclaration(true);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_GetParentSection\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_GetParentSection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetParentSection()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the configuration section that contains the configuration section associated with this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.ConfigurationSection GetParentSection ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a></div>\r\n                  </div>\r\n                  <p>The configuration section that contains the <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> that is associated with this <a class=\"xref\" href=\"system.configuration.sectioninformation\" data-linktype=\"relative-path\">SectionInformation</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The method is invoked from a parent section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this <a class=\"xref\" href=\"system.configuration.configurationsection\" data-linktype=\"relative-path\">ConfigurationSection</a> object has no parent sections, the GetParentSection method returns the same value as the <a class=\"xref\" href=\"system.configuration.sectioninformation#System_Configuration_SectionInformation_Name_\" data-linktype=\"relative-path\">Name</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the GetParentSection method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#92\">    Public Shared Sub GetParentSection() \n\n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n        \n        Dim parentSection _\n        As ConfigurationSection = _\n        sInfo.GetParentSection()\n        \n        Console.WriteLine(&quot;Parent section : {0}&quot;, _\n        parentSection.SectionInformation.Name)\n    \n    End Sub &#39;GetParentSection\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#92\">        static public void GetParentSection()\n        {\n            SectionInformation sInfo = \n                GetSectionInformation();\n\n            ConfigurationSection parentSection =\n                sInfo.GetParentSection();\n\n            Console.WriteLine(&quot;Parent section : {0}&quot;,\n                parentSection.SectionInformation.Name);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_GetRawXml\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_GetRawXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRawXml()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an XML node object that represents the associated configuration-section object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetRawXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML representation for this configuration section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This configuration object is locked and cannot be edited.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the GetRawXml method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#93\">    Public Shared Sub GetSectionXml()\n\n        Dim sInfo As SectionInformation = _\n        GetSectionInformation()\n\n        Dim sectionXml As String = sInfo.GetRawXml()\n\n        Console.WriteLine(&quot;Section xml:&quot;)\n        Console.WriteLine(sectionXml)\n\n    End Sub &#39;GetSectionXml\n     \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#93\">        static public void GetSectionXml()\n        {\n            SectionInformation sInfo =\n                GetSectionInformation();\n\n            string sectionXml =\n                sInfo.GetRawXml();\n\n            Console.WriteLine(&quot;Section xml:&quot;);\n            Console.WriteLine(sectionXml);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_ProtectSection_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_ProtectSection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProtectSection(String)</div>        \r\n          </div>\r\n    \r\n            <p>Marks a configuration section for protection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ProtectSection (string protectionProvider);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>protectionProvider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the protection provider to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Configuration.SectionInformation.AllowLocation*</span> property is set to <code>false</code>.  </p>\n<p> - or -  </p>\n<p> The target section is already a protected data section.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ProtectSection method marks the section for encryption so it will be written in encrypted form on disk.  </p>\n<p> The following protection providers are included by default:  </p>\n <a class=\"xref\" href=\"system.configuration.dpapiprotectedconfigurationprovider\" data-linktype=\"relative-path\">DpapiProtectedConfigurationProvider</a>  \n\n <a class=\"xref\" href=\"system.configuration.rsaprotectedconfigurationprovider\" data-linktype=\"relative-path\">RsaProtectedConfigurationProvider</a>  \n\n<div class=\"NOTE\"><h5>Note</h5><p> If you call the ProtectSection method with a <code>null</code> parameter or an empty string, the <a class=\"xref\" href=\"system.configuration.rsaprotectedconfigurationprovider\" data-linktype=\"relative-path\">RsaProtectedConfigurationProvider</a> class is used as the protection provider.  </p>\n</div>\n<p> For more information about protected configuration sections, see <a href=\"../Topic/Encrypting%20Configuration%20Information%20Using%20Protected%20Configuration.md\" data-linktype=\"relative-path\">Encrypting Configuration Information Using Protected Configuration</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the ProtectSection method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#94\">    Public Shared Sub ProtectSection() \n        \n        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        \n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n        \n        \n        &#39; Protect (encrypt)the section.\n        section.SectionInformation.ProtectSection( _\n        &quot;RsaProtectedConfigurationProvider&quot;)\n        \n        &#39; Save the encrypted section.\n        section.SectionInformation.ForceSave = True\n        \n        config.Save(ConfigurationSaveMode.Full)\n        \n        &#39; Display decrypted configuration \n        &#39; section. Note, the system\n        &#39; uses the Rsa provider to decrypt\n        &#39; the section transparently.\n        Dim sectionXml As String = _\n        section.SectionInformation.GetRawXml()\n        \n        Console.WriteLine(&quot;Decrypted section:&quot;)\n        Console.WriteLine(sectionXml)\n    \n    End Sub &#39;ProtectSection\n     \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#94\">        static public void ProtectSection()\n        {\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            // Protect (encrypt)the section.\n            section.SectionInformation.ProtectSection(\n                &quot;RsaProtectedConfigurationProvider&quot;);\n\n            // Save the encrypted section.\n            section.SectionInformation.ForceSave = true;\n\n            config.Save(ConfigurationSaveMode.Full);\n\n            // Display decrypted configuration \n            // section. Note, the system\n            // uses the Rsa provider to decrypt\n            // the section transparently.\n            string sectionXml =\n                section.SectionInformation.GetRawXml();\n\n            Console.WriteLine(&quot;Decrypted section:&quot;);\n            Console.WriteLine(sectionXml);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_RevertToParent\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_RevertToParent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RevertToParent()</div>        \r\n          </div>\r\n    \r\n            <p>Causes the associated configuration section to inherit all its values from the parent section.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RevertToParent ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This method cannot be called outside editing mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_SetRawXml_System_String_\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_SetRawXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetRawXml(String)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the object to an XML representation of the associated configuration section within the configuration file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetRawXml (string rawXml);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rawXml</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rawXml</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_SectionInformation_UnprotectSection\">\r\n    \r\n            <a id=\"System_Configuration_SectionInformation_UnprotectSection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnprotectSection()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the protected configuration encryption from the associated configuration section.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UnprotectSection ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about protected configuration sections, see <a href=\"../Topic/Encrypting%20Configuration%20Information%20Using%20Protected%20Configuration.md\" data-linktype=\"relative-path\">Encrypting Configuration Information Using Protected Configuration</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Configuration.ConfigurationElement#112\">    Public Shared Sub UnProtectSection() \n        \n        &#39; Get the current configuration file.\n        Dim config _\n        As System.Configuration.Configuration = _\n        ConfigurationManager.OpenExeConfiguration( _\n        ConfigurationUserLevel.None)\n\n        &#39; Get the section.\n        Dim section As UrlsSection = _\n        CType(config.GetSection(&quot;MyUrls&quot;), UrlsSection)\n        \n        &#39; Unprotect (decrypt)the section.\n        section.SectionInformation.UnprotectSection()\n        \n        &#39; Force the section information to be written to\n        &#39; the configuration file.\n        section.SectionInformation.ForceDeclaration(True)\n\n        &#39; Save the decrypted section.\n        section.SectionInformation.ForceSave = True\n        \n        config.Save(ConfigurationSaveMode.Full)\n        \n        &#39; Display the decrypted configuration \n        &#39; section. \n        Dim sectionXml As String = _\n        section.SectionInformation.GetRawXml()\n        \n        Console.WriteLine(&quot;Decrypted section:&quot;)\n        Console.WriteLine(sectionXml)\n    \n    End Sub &#39;UnProtectSection \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Configuration.ConfigurationElement#112\">        static public void UnProtectSection()\n        {\n\n            // Get the current configuration file.\n            System.Configuration.Configuration config =\n                    ConfigurationManager.OpenExeConfiguration(\n                    ConfigurationUserLevel.None);\n\n\n            // Get the section.\n            UrlsSection section =\n                (UrlsSection)config.GetSection(&quot;MyUrls&quot;);\n\n\n            // Unprotect (decrypt)the section.\n            section.SectionInformation.UnprotectSection();\n\n            // Force the section information to be written to\n            // the configuration file.\n            section.SectionInformation.ForceDeclaration(true);\n\n            // Save the decrypted section.\n            section.SectionInformation.ForceSave = true;\n\n            config.Save(ConfigurationSaveMode.Full);\n\n            // Display the decrypted configuration \n            // section. \n            string sectionXml =\n                section.SectionInformation.GetRawXml();\n\n            Console.WriteLine(&quot;Decrypted section:&quot;);\n            Console.WriteLine(sectionXml);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Configuration.SectionInformation.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Configuration.SectionInformation.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.AllowDefinition\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.AllowExeDefinition\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.AllowLocation\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.AllowOverride\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.ConfigSource\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.ForceDeclaration\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.ForceSave\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.GetParentSection\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.GetRawXml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.InheritInChildApplications\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.IsDeclarationRequired\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.IsDeclared\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.IsLocked\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.IsProtected\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.Name\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.OverrideMode\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.OverrideModeDefault\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.OverrideModeEffective\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.ProtectionProvider\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.ProtectSection\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.RequirePermission\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.RestartOnExternalChanges\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.RevertToParent\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.SectionName\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.SetRawXml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.Type\">\r\n<meta name=\"APIName\" content=\"System.Configuration.SectionInformation.UnprotectSection\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"88e2d8a5-379e-29c4-44fb-49cd2593e9e2\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Configuration/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.SectionInformation\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Configuration.SectionInformation.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Configuration.SectionInformation.yml","open_to_public_contributors":true,"api_name":["System.Configuration.SectionInformation","System.Configuration.SectionInformation.AllowDefinition","System.Configuration.SectionInformation.AllowExeDefinition","System.Configuration.SectionInformation.AllowLocation","System.Configuration.SectionInformation.AllowOverride","System.Configuration.SectionInformation.ConfigSource","System.Configuration.SectionInformation.ForceDeclaration","System.Configuration.SectionInformation.ForceSave","System.Configuration.SectionInformation.GetParentSection","System.Configuration.SectionInformation.GetRawXml","System.Configuration.SectionInformation.InheritInChildApplications","System.Configuration.SectionInformation.IsDeclarationRequired","System.Configuration.SectionInformation.IsDeclared","System.Configuration.SectionInformation.IsLocked","System.Configuration.SectionInformation.IsProtected","System.Configuration.SectionInformation.Name","System.Configuration.SectionInformation.OverrideMode","System.Configuration.SectionInformation.OverrideModeDefault","System.Configuration.SectionInformation.OverrideModeEffective","System.Configuration.SectionInformation.ProtectionProvider","System.Configuration.SectionInformation.ProtectSection","System.Configuration.SectionInformation.RequirePermission","System.Configuration.SectionInformation.RestartOnExternalChanges","System.Configuration.SectionInformation.RevertToParent","System.Configuration.SectionInformation.SectionName","System.Configuration.SectionInformation.SetRawXml","System.Configuration.SectionInformation.Type","System.Configuration.SectionInformation.UnprotectSection"],"api_location":["System.Configuration.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.SectionInformation","System::Configuration::SectionInformation","System.Configuration.SectionInformation.AllowDefinition","System::Configuration::SectionInformation::AllowDefinition","System.Configuration.SectionInformation.AllowExeDefinition","System::Configuration::SectionInformation::AllowExeDefinition","System.Configuration.SectionInformation.AllowLocation","System::Configuration::SectionInformation::AllowLocation","System.Configuration.SectionInformation.AllowOverride","System::Configuration::SectionInformation::AllowOverride","System.Configuration.SectionInformation.ConfigSource","System::Configuration::SectionInformation::ConfigSource","System.Configuration.SectionInformation.ForceDeclaration","System::Configuration::SectionInformation::ForceDeclaration","System.Configuration.SectionInformation.ForceSave","System::Configuration::SectionInformation::ForceSave","System.Configuration.SectionInformation.GetParentSection","System::Configuration::SectionInformation::GetParentSection","System.Configuration.SectionInformation.GetRawXml","System::Configuration::SectionInformation::GetRawXml","System.Configuration.SectionInformation.InheritInChildApplications","System::Configuration::SectionInformation::InheritInChildApplications","System.Configuration.SectionInformation.IsDeclarationRequired","System::Configuration::SectionInformation::IsDeclarationRequired","System.Configuration.SectionInformation.IsDeclared","System::Configuration::SectionInformation::IsDeclared","System.Configuration.SectionInformation.IsLocked","System::Configuration::SectionInformation::IsLocked","System.Configuration.SectionInformation.IsProtected","System::Configuration::SectionInformation::IsProtected","System.Configuration.SectionInformation.Name","System::Configuration::SectionInformation::Name","System.Configuration.SectionInformation.OverrideMode","System::Configuration::SectionInformation::OverrideMode","System.Configuration.SectionInformation.OverrideModeDefault","System::Configuration::SectionInformation::OverrideModeDefault","System.Configuration.SectionInformation.OverrideModeEffective","System::Configuration::SectionInformation::OverrideModeEffective","System.Configuration.SectionInformation.ProtectionProvider","System::Configuration::SectionInformation::ProtectionProvider","System.Configuration.SectionInformation.ProtectSection","System::Configuration::SectionInformation::ProtectSection","System.Configuration.SectionInformation.RequirePermission","System::Configuration::SectionInformation::RequirePermission","System.Configuration.SectionInformation.RestartOnExternalChanges","System::Configuration::SectionInformation::RestartOnExternalChanges","System.Configuration.SectionInformation.RevertToParent","System::Configuration::SectionInformation::RevertToParent","System.Configuration.SectionInformation.SectionName","System::Configuration::SectionInformation::SectionName","System.Configuration.SectionInformation.SetRawXml","System::Configuration::SectionInformation::SetRawXml","System.Configuration.SectionInformation.Type","System::Configuration::SectionInformation::Type","System.Configuration.SectionInformation.UnprotectSection","System::Configuration::SectionInformation::UnprotectSection"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"88e2d8a5-379e-29c4-44fb-49cd2593e9e2","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Configuration/SectionInformation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SectionInformation class | Microsoft Docs","_op_ogTitle":"SectionInformation class","description":"Contains metadata about an individual section within the configuration hierarchy. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Configuration/toc.json","toc_rel":"_splitted/System.Configuration/toc.json","source_url":"","ms.assetid":"System.Configuration.SectionInformation","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.configuration.sectioninformation","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.configuration.sectioninformation","fileRelativePath":"System.Configuration.SectionInformation.html"},"themesRelativePathToOutputRoot":"_themes/"}