{"content":"    \r\n    <h1 id=\"System_Net_Mail_MailMessage\">\r\n      <span class=\"lang-csharp\">MailMessage</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an e-mail message that can be sent using the <a class=\"xref\" href=\"system.net.mail.smtpclient\" data-linktype=\"relative-path\">SmtpClient</a> class.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class MailMessage : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MailMessage</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Instances of the MailMessage class are used to construct e-mail messages that are transmitted to an SMTP server for delivery using the <a class=\"xref\" href=\"system.net.mail.smtpclient\" data-linktype=\"relative-path\">SmtpClient</a> class.  </p>\n<p> The sender, recipient, subject, and body of an e-mail message may be specified as parameters when a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage__ctor_\" data-linktype=\"relative-path\">MailMessage</a> is used to initialize a MailMessage object. These parameters may also be set or accessed using properties on the MailMessage object.  </p>\n<p> The primary mail message headers and elements for the message may be set using the following properties of the MailMessage class.  </p>\n<table>\n<thead>\n<tr>\n<th>Mail header or part</th>\n<th>Property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Attachments</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Attachments_\" data-linktype=\"relative-path\">Attachments</a></td>\n</tr>\n<tr>\n<td>Blind carbon copies (BCC)</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Bcc_\" data-linktype=\"relative-path\">Bcc</a></td>\n</tr>\n<tr>\n<td>Carbon copies (CC)</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_CC_\" data-linktype=\"relative-path\">CC</a></td>\n</tr>\n<tr>\n<td>Content-Type</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_BodyEncoding_\" data-linktype=\"relative-path\">BodyEncoding</a></td>\n</tr>\n<tr>\n<td>Encoding for custom headers</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_HeadersEncoding_\" data-linktype=\"relative-path\">HeadersEncoding</a></td>\n</tr>\n<tr>\n<td>Message body</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Body_\" data-linktype=\"relative-path\">Body</a></td>\n</tr>\n<tr>\n<td>Priority</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Priority_\" data-linktype=\"relative-path\">Priority</a></td>\n</tr>\n<tr>\n<td>Recipient</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_To_\" data-linktype=\"relative-path\">To</a></td>\n</tr>\n<tr>\n<td>Reply-To</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_ReplyToList_\" data-linktype=\"relative-path\">ReplyToList</a></td>\n</tr>\n<tr>\n<td>Sender</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a></td>\n</tr>\n<tr>\n<td>Subject</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Subject_\" data-linktype=\"relative-path\">Subject</a></td>\n</tr>\n</tbody>\n</table>\n<p> The MailMessage class also allows an application to access the headers collection for the message using the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Headers_\" data-linktype=\"relative-path\">Headers</a> property. While this collection is read-only (a new collection can not be set), custom headers can be added to or deleted from this collection. Any custom headers added will be included when the MailMessage instance is sent. Before a message is sent, only headers specifically added to this collection in the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Headers_\" data-linktype=\"relative-path\">Headers</a> property are included in the collection. After a the MailMessage instance is sent, the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Headers_\" data-linktype=\"relative-path\">Headers</a> property will also include headers that are set using the associated properties of the MailMessage class or parameters passed when a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage__ctor_\" data-linktype=\"relative-path\">MailMessage</a> is used to initialize a MailMessage object.  </p>\n<p> If some mail headers are malformed, they could cause the email message to become corrupted. So any mail header in the headers collection that can be set using a property on the MailMessage class should only be set using the MailMessage class property or as a parameter passed when a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage__ctor_\" data-linktype=\"relative-path\">MailMessage</a> initializes a MailMessage object. The following list of mail headers should not be added using the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Headers_\" data-linktype=\"relative-path\">Headers</a> property and any values set for these headers using the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Headers_\" data-linktype=\"relative-path\">Headers</a> property will be discarded or overwritten when the message is sent:  </p>\n<ul>\n<li><p>Bcc  </p>\n</li>\n<li><p>Cc  </p>\n</li>\n<li><p>Content-ID  </p>\n</li>\n<li><p>Content-Location  </p>\n</li>\n<li><p>Content-Transfer-Encoding  </p>\n</li>\n<li><p>Content-Type  </p>\n</li>\n<li><p>Date  </p>\n</li>\n<li><p>From  </p>\n</li>\n<li><p>Importance  </p>\n</li>\n<li><p>MIME-Version  </p>\n</li>\n<li><p>Priority  </p>\n</li>\n<li><p>Reply-To  </p>\n</li>\n<li><p>Sender  </p>\n</li>\n<li><p>To  </p>\n</li>\n<li><p>X-Priority  </p>\n<p>If the application does not specify an X-Sender header using the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Headers_\" data-linktype=\"relative-path\">Headers</a> property, the MailMessage class will create one when the message is sent.  </p>\n<p>Use the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_AlternateViews_\" data-linktype=\"relative-path\">AlternateViews</a> property to specify copies of an e-mail message in different formats. For example, if you send a message in HTML, you might also want to provide a plain text version in case some of the recipients use e-mail readers that cannot display HTML content. For an example that demonstrates creating a message with alternate views, see <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_AlternateViews_\" data-linktype=\"relative-path\">AlternateViews</a>.  </p>\n<p>Use the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Attachments_\" data-linktype=\"relative-path\">Attachments</a> property to add attachments to an e-mail message. For an example that demonstrates creating a message with an attachment, see <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Attachments_\" data-linktype=\"relative-path\">Attachments</a>.  </p>\n<p>After assembling your e-mail message, you can send it by using the <a class=\"xref\" href=\"system.net.mail.smtpclient#System_Net_Mail_SmtpClient_Send_\" data-linktype=\"relative-path\">Send</a> or <a class=\"xref\" href=\"system.net.mail.smtpclient#System_Net_Mail_SmtpClient_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a> methods.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage__ctor\" data-linktype=\"self-bookmark\">MailMessage()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes an empty instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage__ctor_System_Net_Mail_MailAddress_System_Net_Mail_MailAddress_\" data-linktype=\"self-bookmark\">MailMessage(MailAddress,MailAddress)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class by using the specified <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">MailMessage(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class by using the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> class objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage__ctor_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">MailMessage(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_AlternateViews\" data-linktype=\"self-bookmark\">AlternateViews</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attachment collection used to store alternate forms of the message body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Attachments\" data-linktype=\"self-bookmark\">Attachments</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attachment collection used to store data attached to this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Bcc\" data-linktype=\"self-bookmark\">Bcc</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the address collection that contains the blind carbon copy (BCC) recipients for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Body\" data-linktype=\"self-bookmark\">Body</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the message body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_BodyEncoding\" data-linktype=\"self-bookmark\">BodyEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the encoding used to encode the message body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_BodyTransferEncoding\" data-linktype=\"self-bookmark\">BodyTransferEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the transfer encoding used to encode the message body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_CC\" data-linktype=\"self-bookmark\">CC</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the address collection that contains the carbon copy (CC) recipients for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_DeliveryNotificationOptions\" data-linktype=\"self-bookmark\">DeliveryNotificationOptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the delivery notifications for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_From\" data-linktype=\"self-bookmark\">From</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the from address for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the e-mail headers that are transmitted with this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_HeadersEncoding\" data-linktype=\"self-bookmark\">HeadersEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the encoding used for the user-defined custom headers for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_IsBodyHtml\" data-linktype=\"self-bookmark\">IsBodyHtml</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the mail message body is in Html.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Priority\" data-linktype=\"self-bookmark\">Priority</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the priority of this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_ReplyTo\" data-linktype=\"self-bookmark\">ReplyTo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the ReplyTo address for the mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_ReplyToList\" data-linktype=\"self-bookmark\">ReplyToList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the list of addresses to reply to for the mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Sender\" data-linktype=\"self-bookmark\">Sender</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the sender&#39;s address for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Subject\" data-linktype=\"self-bookmark\">Subject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the subject line for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_SubjectEncoding\" data-linktype=\"self-bookmark\">SubjectEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the encoding used for the subject content for this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_To\" data-linktype=\"self-bookmark\">To</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the address collection that contains the recipients of this e-mail message.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_MailMessage_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage__ctor\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailMessage()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes an empty instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailMessage ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>From is set to the value in the network element for mailSettings<a href=\"../Topic/%3Csmtp%3E%20Element%20(Network%20Settings).md\" data-linktype=\"relative-path\">&amp;lt;smtp&amp;gt; Element (Network Settings)</a>, if it exists.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage__ctor_System_Net_Mail_MailAddress_System_Net_Mail_MailAddress_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailMessage(MailAddress,MailAddress)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class by using the specified <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> class objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>from</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> that contains the address of the sender of the e-mail message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>to</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> that contains the address of the recipient of the e-mail message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>to</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> or <code>to</code> is malformed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a> property is initialized using <code>from</code> and the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_To_\" data-linktype=\"relative-path\">To</a> property is initialized using <code>to</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#4\">   static void CreateTestMessage3()\n   {\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot; );\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the new SMTP client.&quot;;\n      message-&gt;Body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      \n      // Use the application or machine configuration to get the \n      // host, port, and credentials.\n      SmtpClient^ client = gcnew SmtpClient;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} at {1} by using the SMTP host {2}.&quot;, to-&gt;User, to-&gt;Host, client-&gt;Host );\n      client-&gt;Send( message );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#4\">\t\tpublic static void CreateTestMessage3()\n\t\t{\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;);\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tmessage.Body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\t// Use the application or machine configuration to get the \n\t\t\t// host, port, and credentials.\n\t\t\tSmtpClient client = new SmtpClient();\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} at {1} by using the SMTP host={2}.&quot;,\n\t\t\t\tto.User, to.Host, client.Host);\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage3(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t  }\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailMessage(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class by using the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> class objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailMessage (string from, string to);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>from</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the address of the sender of the e-mail message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>to</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the addresses of the recipients of the e-mail message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>to</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>to</code> is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> or <code>to</code> is malformed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a> property is initialized using <code>from</code> and the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_To_\" data-linktype=\"relative-path\">To</a> property is initialized using <code>to</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#2\">   static void CreateTestMessage2( String^ server )\n   {\n      String^ to = L&quot;jane@contoso.com&quot;;\n      String^ from = L&quot;ben@contoso.com&quot;;\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the new SMTP client.&quot;;\n      message-&gt;Body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Credentials are necessary if the server requires the client \n      // to authenticate before it will send e-mail on the client&#39;s behalf.\n      client-&gt;UseDefaultCredentials = true;\n      client-&gt;Send( message );\n\t  client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#2\">\t\tpublic static void CreateTestMessage2(string server)\n\t\t{\n\t\t\tstring to = &quot;jane@contoso.com&quot;;\n\t\t\tstring from = &quot;ben@contoso.com&quot;;\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tmessage.Body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Credentials are necessary if the server requires the client \n\t\t\t// to authenticate before it will send e-mail on the client&#39;s behalf.\n\t\t\tclient.UseDefaultCredentials = true;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}  \n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage2(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n      }              \n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage__ctor_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MailMessage(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MailMessage (string from, string to, string subject, string body);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>from</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the address of the sender of the e-mail message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>to</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the address of the recipient of the e-mail message.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>subject</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the subject text.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>body</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the message body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>to</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> <code>to</code> is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>from</code> or <code>to</code> is malformed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The properties for the new <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> object are initialized as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>from</code></td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a></td>\n</tr>\n<tr>\n<td>-   <code>to</code></td>\n<td>-   <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_To_\" data-linktype=\"relative-path\">To</a></td>\n</tr>\n<tr>\n<td>-   <code>subject</code></td>\n<td>-   <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Subject_\" data-linktype=\"relative-path\">Subject</a></td>\n</tr>\n<tr>\n<td>-   <code>body</code></td>\n<td>-   <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Body_\" data-linktype=\"relative-path\">Body</a></td>\n</tr>\n</tbody>\n</table>\n<p> By default, the subject and content are assumed to use the default encoding based on local computer settings. Use the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_BodyEncoding_\" data-linktype=\"relative-path\">BodyEncoding</a> and <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_SubjectEncoding_\" data-linktype=\"relative-path\">SubjectEncoding</a> properties to specify different encodings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#3\">   static void CreateTimeoutTestMessage( String^ server )\n   {\n      String^ to = L&quot;jane@contoso.com&quot;;\n      String^ from = L&quot;ben@contoso.com&quot;;\n      String^ subject = L&quot;Using the new SMTP client.&quot;;\n      String^ body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      MailMessage^ message = gcnew MailMessage( from,to,subject,body );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      Console::WriteLine( L&quot;Changing time out from {0} to 100.&quot;, client-&gt;Timeout );\n      client-&gt;Timeout = 100;\n      \n      // Credentials are necessary if the server requires the client \n      // to authenticate before it will send e-mail on the client&#39;s behalf.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#3\">\t\tpublic static void CreateTimeoutTestMessage(string server)\n\t\t{\n\t\t\tstring to = &quot;jane@contoso.com&quot;;\n\t\t\tstring from = &quot;ben@contoso.com&quot;;\n\t\t\tstring subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tstring body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tMailMessage message = new MailMessage(from, to, subject, body);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tConsole.WriteLine(&quot;Changing time out from {0} to 100.&quot;, client.Timeout);\n\t\t\tclient.Timeout = 100;\n\t\t\t// Credentials are necessary if the server requires the client \n\t\t\t// to authenticate before it will send e-mail on the client&#39;s behalf.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}  \n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTimeoutTestMessage(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t  }\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_AlternateViews\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_AlternateViews_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternateViews</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attachment collection used to store alternate forms of the message body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.AlternateViewCollection AlternateViews { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.alternateviewcollection\" data-linktype=\"relative-path\">AlternateViewCollection</a></div>\r\n                  </div>\r\n                  <p>A writable <a class=\"xref\" href=\"system.net.mail.alternateviewcollection\" data-linktype=\"relative-path\">AlternateViewCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AlternateViews property to specify copies of an e-mail message in different formats. For example, if you send a message in HTML, you might also want to provide a plain text version in case some of the recipients use e-mail readers that cannot display HTML content.  </p>\n<p> To add an alternate view to a <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> object, create an <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> for the view, and then add it to the collection returned by AlternateViews. Use the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Body_\" data-linktype=\"relative-path\">Body</a> property to specify the text version and use the AlternateViews collection to specify views with other MIME types. Use the <a class=\"xref\" href=\"system.net.mime.mediatypenames\" data-linktype=\"relative-path\">MediaTypeNames</a> class members to specify the MIME type for the alternate view.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating and sending an e-mail message with a plain text and an HTML alternate view.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#5\">   static void CreateMessageWithMultipleViews( String^ server, String^ recipients )\n   {\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,recipients,L&quot;This e-mail message has multiple views.&quot;,L&quot;This is some plain text.&quot; );\n      \n      // Construct the alternate body as HTML.\n      String^ body = L&quot;&lt;!DOCTYPE HTML PUBLIC \\&quot;-//W3C//DTD HTML 4.0 Transitional//EN\\&quot;&gt;&quot;;\n      body = String::Concat( body, L&quot;&lt;HTML&gt;&lt;HEAD&gt;&lt;META http-equiv=Content-Type content=\\&quot;text/html; charset=iso-8859-1\\&quot;&gt;&quot; );\n      body = String::Concat( body, L&quot;&lt;/HEAD&gt;&lt;BODY&gt;&lt;DIV&gt;&lt;FONT face=Arial color=#ff0000 size=2&gt;this is some HTML text&quot; );\n      body = String::Concat( body, L&quot;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;&quot; );\n      \n      // Add the alternate body to the message.\n      AlternateView^ alternate = AlternateView::CreateAlternateViewFromString(body);\n      message-&gt;AlternateViews-&gt;Add(alternate);\n\n      // Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentType for the attachment.\n      ContentType^ c = alternate-&gt;ContentType;\n      Console::WriteLine( L&quot;Content type&quot; );\n      Console::WriteLine( c );\n      Console::WriteLine( L&quot;Boundary {0}&quot;, c-&gt;Boundary );\n      Console::WriteLine( L&quot;CharSet {0}&quot;, c-&gt;CharSet );\n      Console::WriteLine( L&quot;MediaType {0}&quot;, c-&gt;MediaType );\n      Console::WriteLine( L&quot;Name {0}&quot;, c-&gt;Name );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, c-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum = c-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      Console::WriteLine();\n      alternate-&gt;~AlternateView();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#5\">\t\tpublic static void CreateMessageWithMultipleViews(string server, string recipients)\n\t\t{\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t\t&quot;jane@contoso.com&quot;,\n\t\t\t\trecipients,\n\t\t\t\t&quot;This e-mail message has multiple views.&quot;,\n\t\t\t\t&quot;This is some plain text.&quot;);\n\n\t\t\t// Construct the alternate body as HTML.\n\t\t\tstring body = &quot;&lt;!DOCTYPE HTML PUBLIC \\&quot;-//W3C//DTD HTML 4.0 Transitional//EN\\&quot;&gt;&quot;;\n\t\t\tbody += &quot;&lt;HTML&gt;&lt;HEAD&gt;&lt;META http-equiv=Content-Type content=\\&quot;text/html; charset=iso-8859-1\\&quot;&gt;&quot;;\n\t\t\tbody += &quot;&lt;/HEAD&gt;&lt;BODY&gt;&lt;DIV&gt;&lt;FONT face=Arial color=#ff0000 size=2&gt;this is some HTML text&quot;;\n\t\t\tbody += &quot;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;&quot;;\n\n\t\t\tContentType mimeType = new System.Net.Mime.ContentType(&quot;text/html&quot;);\n\t\t\t// Add the alternate body to the message.\n\t\t\t\n\t\t\tAlternateView alternate = AlternateView.CreateAlternateViewFromString(body, mimeType);\n\t\t\tmessage.AlternateViews.Add(alternate);\n\n\t\t\t// Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithMultipleViews(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n      }\n\t\t\t// Display the values in the ContentType for the attachment.\n\t\t\tContentType c = alternate.ContentType;\n\t\t\tConsole.WriteLine(&quot;Content type&quot;);\n\t\t\tConsole.WriteLine(c.ToString());\n\t\t\tConsole.WriteLine(&quot;Boundary {0}&quot;, c.Boundary);\n\t\t\tConsole.WriteLine(&quot;CharSet {0}&quot;, c.CharSet);\n\t\t\tConsole.WriteLine(&quot;MediaType {0}&quot;, c.MediaType);\n\t\t\tConsole.WriteLine(&quot;Name {0}&quot;, c.Name);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, c.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in c.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tConsole.WriteLine();\n\t\t\talternate.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Attachments\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Attachments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachments</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attachment collection used to store data attached to this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.AttachmentCollection Attachments { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.attachmentcollection\" data-linktype=\"relative-path\">AttachmentCollection</a></div>\r\n                  </div>\r\n                  <p>A writable <a class=\"xref\" href=\"system.net.mail.attachmentcollection\" data-linktype=\"relative-path\">AttachmentCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the collection returned by the Attachments property to add an attachment, such as a file or the contents of a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, to this <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>.  </p>\n<p> Create an <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> that contains or references the data to be attached, and then add the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> to the collection returned by Attachments.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating and sending an e-mail message with an attachment.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#6\">   static void CreateMessageWithAttachment( String^ server )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example assumes that a file named Data.xls exists in the\n      // current working directory.\n      String^ file = L&quot;data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;Quarterly data report.&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(file, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      ContentDisposition^ cd = data-&gt;ContentDisposition;\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( cd );\n      Console::WriteLine( L&quot;File {0}&quot;, cd-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, cd-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, cd-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, cd-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, cd-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, cd-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, cd-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum1 = cd-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum1-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#6\">\t\tpublic static void CreateMessageWithAttachment(string server)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example assumes that a file named Data.xls exists in the\n\t\t\t// current working directory.\n\t\t\tstring file = &quot;data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;Quarterly data report.&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(file, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateMessageWithAttachment(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tContentDisposition cd = data.ContentDisposition;\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(cd.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, cd.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, cd.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, cd.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, cd.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, cd.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, cd.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, cd.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in cd.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Bcc\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Bcc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Bcc</div>        \r\n          </div>\r\n    \r\n            <p>Gets the address collection that contains the blind carbon copy (BCC) recipients for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddressCollection Bcc { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a></div>\r\n                  </div>\r\n                  <p>A writable <a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To add a BCC recipient to an e-mail message, create a <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> for the recipient&#39;s address, and then add that object to the collection returned by the Bcc property.  </p>\n<p> When recipients view an e-mail message, the Bcc addresses are usually not displayed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates adding an address to the Bcc address collection.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#9\">   static void CreateBccTestMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      MailAddress^ bcc = gcnew MailAddress( L&quot;manager1@contoso.com&quot; );\n      message-&gt;Bcc-&gt;Add( bcc );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} and {1}.&quot;, to-&gt;DisplayName, message-&gt;Bcc );\n      try\n      { \n          client-&gt;Send( message );\n      }\n      catch ( Exception^ ex )\n      {\n          Console::WriteLine(L&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                        ex-&gt;ToString() );\n      }\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#9\">\t\tpublic static void CreateBccTestMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tMailAddress bcc = new MailAddress(&quot;manager1@contoso.com&quot;);\n\t\t\tmessage.Bcc.Add(bcc);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} and {1}.&quot;, \n\t\t\t    to.DisplayName, message.Bcc.ToString());\n      try {\n        client.Send(message);\n      }  \n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateBccTestMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n  \t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Body\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Body_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Body</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the message body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Body { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value that contains the body text.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> of the Body content is &quot;text/plain&quot;. Specify the encoding used for the body with the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_BodyEncoding_\" data-linktype=\"relative-path\">BodyEncoding</a> property.  </p>\n<p> If the body content is available in alternative formats that provide richer presentation options for the recipients, you can specify alternate views for the body content by using the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_AlternateViews_\" data-linktype=\"relative-path\">AlternateViews</a> property. For example, an application might choose to send both the plain text body and an HTML version of the message body. E-mail readers that can display HTML can present the HTML version of the body to the recipient, while readers that cannot display HTML will display the plain text version of the message instead.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the Body property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#2\">   static void CreateTestMessage2( String^ server )\n   {\n      String^ to = L&quot;jane@contoso.com&quot;;\n      String^ from = L&quot;ben@contoso.com&quot;;\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the new SMTP client.&quot;;\n      message-&gt;Body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Credentials are necessary if the server requires the client \n      // to authenticate before it will send e-mail on the client&#39;s behalf.\n      client-&gt;UseDefaultCredentials = true;\n      client-&gt;Send( message );\n\t  client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#2\">\t\tpublic static void CreateTestMessage2(string server)\n\t\t{\n\t\t\tstring to = &quot;jane@contoso.com&quot;;\n\t\t\tstring from = &quot;ben@contoso.com&quot;;\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tmessage.Body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Credentials are necessary if the server requires the client \n\t\t\t// to authenticate before it will send e-mail on the client&#39;s behalf.\n\t\t\tclient.UseDefaultCredentials = true;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}  \n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage2(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n      }              \n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_BodyEncoding\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_BodyEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BodyEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the encoding used to encode the message body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding BodyEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> applied to the contents of the <span class=\"xref\">stem.Net.Mail.MailMessage.Body*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value specified for the BodyEncoding property sets the character set field in the Content-Type header. The default character set is <code>&quot;us-ascii&quot;</code>.  </p>\n<p> If you set the BodyEncoding property to <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8_\" data-linktype=\"relative-path\">UTF8</a>, <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Unicode_\" data-linktype=\"relative-path\">Unicode</a>, or <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF32_\" data-linktype=\"relative-path\">UTF32</a>, the Framework selects a <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a> of <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a> for this <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a mail message that uses UTF8 encoding.  </p>\n<pre><code class=\"lang-cs\" name=\"NclMailAsync#3\">            MailMessage message = new MailMessage(from, to);\n            message.Body = &quot;This is a test e-mail message sent by an application. &quot;;\n            // Include some non-ASCII characters in body and subject.\n            string someArrows = new string(new char[] {&#39;\\u2190&#39;, &#39;\\u2191&#39;, &#39;\\u2192&#39;, &#39;\\u2193&#39;});\n            message.Body += Environment.NewLine + someArrows;\n            message.BodyEncoding =  System.Text.Encoding.UTF8;\n            message.Subject = &quot;test message 1&quot; + someArrows;\n            message.SubjectEncoding = System.Text.Encoding.UTF8;\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclMailAsync#3\">        MailMessage^ message = gcnew MailMessage(from, to);\n        message-&gt;Body = &quot;This is a test e-mail message sent&quot; +\n            &quot; by an application. &quot;;\n        // Include some non-ASCII characters in body and \n        // subject.\n        String^ someArrows = gcnew String(gcnew array&lt;wchar_t&gt;{L&#39;\\u2190&#39;, \n            L&#39;\\u2191&#39;, L&#39;\\u2192&#39;, L&#39;\\u2193&#39;});\n        message-&gt;Body += Environment::NewLine + someArrows;\n        message-&gt;BodyEncoding = System::Text::Encoding::UTF8;\n        message-&gt;Subject = &quot;test message 1&quot; + someArrows;\n        message-&gt;SubjectEncoding = System::Text::Encoding::UTF8;\n</code></pre><pre><code class=\"lang-vb\" name=\"NclMailAsync#3\">            Dim message As New MailMessage([from], [to])\n            message.Body = &quot;This is a test e-mail message sent by an application. &quot;\n            &#39; Include some non-ASCII characters in body and subject.\n            Dim someArrows As New String(New Char() {ChrW(&amp;H2190), ChrW(&amp;H2191), ChrW(&amp;H2192), ChrW(&amp;H2193)})\n            message.Body += Environment.NewLine &amp; someArrows\n            message.BodyEncoding = System.Text.Encoding.UTF8\n            message.Subject = &quot;test message 1&quot; &amp; someArrows\n            message.SubjectEncoding = System.Text.Encoding.UTF8\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_BodyTransferEncoding\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_BodyTransferEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BodyTransferEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the transfer encoding used to encode the message body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a>.  </p>\n<p> A <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a> applied to the contents of the <span class=\"xref\">stem.Net.Mail.MailMessage.Body*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_CC\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_CC_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CC</div>        \r\n          </div>\r\n    \r\n            <p>Gets the address collection that contains the carbon copy (CC) recipients for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddressCollection CC { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a></div>\r\n                  </div>\r\n                  <p>A writable <a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To add a CC recipient to an e-mail message, create a <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> for the recipient&#39;s address and then add that object to the collection returned by the CC property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates adding an address to the CC address collection.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#10\">   static void CreateCopyMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      \n      // message.Subject = &quot;Using the SmtpClient class.&quot;;\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      \n      // Add a carbon copy recipient.\n      MailAddress^ copy = gcnew MailAddress( L&quot;Notification_List@contoso.com&quot; );\n      message-&gt;CC-&gt;Add( copy );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Include credentials if the server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} by using the SMTP host {1}.&quot;, to-&gt;Address, client-&gt;Host );\n      client-&gt;Send( message );\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#10\">\t\tpublic static void CreateCopyMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\t// message.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\t// Add a carbon copy recipient.\n\t\t\tMailAddress copy = new MailAddress(&quot;Notification_List@contoso.com&quot;);\n\t\t\tmessage.CC.Add(copy);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Include credentials if the server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} by using the SMTP host {1}.&quot;,\n\t\t\t\t to.Address, client.Host);\n\t\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateCopyMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_DeliveryNotificationOptions\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_DeliveryNotificationOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeliveryNotificationOptions</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the delivery notifications for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.deliverynotificationoptions\" data-linktype=\"relative-path\">DeliveryNotificationOptions</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.deliverynotificationoptions\" data-linktype=\"relative-path\">DeliveryNotificationOptions</a> value that contains the delivery notifications for this message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_From\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_From_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">From</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the from address for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddress From { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> that contains the from address information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The from address is not validated or tied to the currently logged on user.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting a value for the From property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#10\">   static void CreateCopyMessage( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot;,L&quot;Ben Miller&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;jane@contoso.com&quot;,L&quot;Jane Clayton&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      \n      // message.Subject = &quot;Using the SmtpClient class.&quot;;\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      \n      // Add a carbon copy recipient.\n      MailAddress^ copy = gcnew MailAddress( L&quot;Notification_List@contoso.com&quot; );\n      message-&gt;CC-&gt;Add( copy );\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Include credentials if the server requires them.\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} by using the SMTP host {1}.&quot;, to-&gt;Address, client-&gt;Host );\n      client-&gt;Send( message );\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#10\">\t\tpublic static void CreateCopyMessage(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;, &quot;Ben Miller&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;jane@contoso.com&quot;, &quot;Jane Clayton&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\t// message.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\t// Add a carbon copy recipient.\n\t\t\tMailAddress copy = new MailAddress(&quot;Notification_List@contoso.com&quot;);\n\t\t\tmessage.CC.Add(copy);\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Include credentials if the server requires them.\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} by using the SMTP host {1}.&quot;,\n\t\t\t\t to.Address, client.Host);\n\t\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateCopyMessage(): {0}&quot;, \n                    ex.ToString() );\n  \t  }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Headers\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets the e-mail headers that are transmitted with this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection Headers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> that contains the e-mail headers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Headers property allows an application to access the headers collection for the message. While this collection is read-only (a new collection can not be set), custom headers can be added to or deleted from this collection. Any custom headers added will be included when the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> instance is sent. Before a message is sent, only headers specifically added to this collection in the Headers property are included in the collection. After the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> instance is sent, the Headers property will also include headers that are set using the associated properties of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class or parameters passed when a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage__ctor_\" data-linktype=\"relative-path\">MailMessage</a> is used to initialize a <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> object.  </p>\n<p> If some mail headers are malformed, they could cause the email message to become corrupted. So any mail header in the headers collection that can be set using a property on the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class should only be set using the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class property or as a parameter passed when a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage__ctor_\" data-linktype=\"relative-path\">MailMessage</a> initializes a <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> object. The following list of mail headers should not be added using the Headers property and any values set for these headers using the Headers property will be discarded or overwritten when the message is sent:  </p>\n<ul>\n<li><p>Bcc  </p>\n</li>\n<li><p>Cc  </p>\n</li>\n<li><p>Content-ID  </p>\n</li>\n<li><p>Content-Location  </p>\n</li>\n<li><p>Content-Transfer-Encoding  </p>\n</li>\n<li><p>Content-Type  </p>\n</li>\n<li><p>Date  </p>\n</li>\n<li><p>From  </p>\n</li>\n<li><p>Importance  </p>\n</li>\n<li><p>MIME-Version  </p>\n</li>\n<li><p>Priority  </p>\n</li>\n<li><p>Reply-To  </p>\n</li>\n<li><p>Sender  </p>\n</li>\n<li><p>To  </p>\n</li>\n<li><p>X-Priority  </p>\n<p>If the application does not specify an X-Sender header using the Headers property, the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class will create one when the message is sent.  </p>\n<p>The sender, recipient, subject, and body of an e-mail message may be specified as parameters when a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage__ctor_\" data-linktype=\"relative-path\">MailMessage</a> is used to initialize a <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> object. These parameters may also be set or accessed using properties on the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> object.  </p>\n<p>The primary mail message headers and elements for the message may be set using the following properties of the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Mail header or part</th>\n<th>Property</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Attachments</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Attachments_\" data-linktype=\"relative-path\">Attachments</a></td>\n</tr>\n<tr>\n<td>Blind carbon copies (BCC)</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Bcc_\" data-linktype=\"relative-path\">Bcc</a></td>\n</tr>\n<tr>\n<td>Carbon copies (CC)</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_CC_\" data-linktype=\"relative-path\">CC</a></td>\n</tr>\n<tr>\n<td>Content-Type</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_BodyEncoding_\" data-linktype=\"relative-path\">BodyEncoding</a></td>\n</tr>\n<tr>\n<td>Encoding for custom headers</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_HeadersEncoding_\" data-linktype=\"relative-path\">HeadersEncoding</a></td>\n</tr>\n<tr>\n<td>Message body</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Body_\" data-linktype=\"relative-path\">Body</a></td>\n</tr>\n<tr>\n<td>Priority</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Priority_\" data-linktype=\"relative-path\">Priority</a></td>\n</tr>\n<tr>\n<td>Recipient</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_To_\" data-linktype=\"relative-path\">To</a></td>\n</tr>\n<tr>\n<td>Reply-To</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_ReplyToList_\" data-linktype=\"relative-path\">ReplyToList</a></td>\n</tr>\n<tr>\n<td>Sender</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a></td>\n</tr>\n<tr>\n<td>Subject</td>\n<td><a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Subject_\" data-linktype=\"relative-path\">Subject</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the headers for a mail message.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#24\">   static void CreateMessageWithAttachment4( String^ server, String^ to )\n   {\n      \n      // Specify the file to be attached and sent.\n      // This example uses a file on a UNC share.\n      String^ file = L&quot;\\\\\\\\share3\\\\c$\\\\reports\\\\data.xls&quot;;\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;ReportMailer@contoso.com&quot;,to,L&quot;Quarterly data report&quot;,L&quot;See the attached spreadsheet.&quot; );\n      \n      // Create  the file attachment for this e-mail message.\n      Attachment^ data = gcnew Attachment(&quot;qtr3.xls&quot;, MediaTypeNames::Application::Octet);\n      \n      // Add time stamp information for the file.\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;CreationDate = System::IO::File::GetCreationTime( file );\n      disposition-&gt;ModificationDate = System::IO::File::GetLastWriteTime( file );\n      disposition-&gt;ReadDate = System::IO::File::GetLastAccessTime( file );\n      disposition-&gt;DispositionType = DispositionTypeNames::Attachment;\n      \n      // Add the file attachment to this e-mail message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Add credentials if the SMTP server requires them.\n      client-&gt;Credentials = dynamic_cast&lt;ICredentialsByHost^&gt;(CredentialCache::DefaultNetworkCredentials);\n      client-&gt;Send( message );\n      \n      // Display the message headers.\n      array&lt;String^&gt;^keys = message-&gt;Headers-&gt;AllKeys;\n      Console::WriteLine( L&quot;Headers&quot; );\n      IEnumerator^ myEnum3 = keys-&gt;GetEnumerator();\n      while ( myEnum3-&gt;MoveNext() )\n      {\n         String^ s = safe_cast&lt;String^&gt;(myEnum3-&gt;Current);\n         Console::WriteLine( L&quot;{0}:&quot;, s );\n         Console::WriteLine( L&quot;    {0}&quot;, message-&gt;Headers[ s ] );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#24\">\t\tpublic static void CreateMessageWithAttachment4(string server, string to)\n\t\t{\n\t\t\t// Specify the file to be attached and sent.\n\t\t\t// This example uses a file on a UNC share.\n\t\t\tstring file = @&quot;\\\\share3\\c$\\reports\\data.xls&quot;;\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;ReportMailer@contoso.com&quot;,\n\t\t\t   to,\n\t\t\t   &quot;Quarterly data report&quot;,\n\t\t\t   &quot;See the attached spreadsheet.&quot;);\n\n\t\t\t// Create  the file attachment for this e-mail message.\n\t\t\tAttachment data = new Attachment(&quot;qtr3.xls&quot;, MediaTypeNames.Application.Octet);\n\t\t\t// Add time stamp information for the file.\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.CreationDate = System.IO.File.GetCreationTime(file);\n\t\t\tdisposition.ModificationDate = System.IO.File.GetLastWriteTime(file);\n\t\t\tdisposition.ReadDate = System.IO.File.GetLastAccessTime(file);\n\t\t\tdisposition.DispositionType = DispositionTypeNames.Attachment;\n\t\t\t// Add the file attachment to this e-mail message.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Add credentials if the SMTP server requires them.\n\t\t\tclient.Credentials = (ICredentialsByHost)CredentialCache.DefaultNetworkCredentials;\n\t\t\tclient.Send(message);\n\t\t\t// Display the message headers.\n\t\t\tstring[] keys = message.Headers.AllKeys;\n\t\t\tConsole.WriteLine(&quot;Headers&quot;);\n\t\t\tforeach (string s in keys)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0}:&quot;, s);\n\t\t\t\tConsole.WriteLine(&quot;    {0}&quot;, message.Headers[s]);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_HeadersEncoding\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_HeadersEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeadersEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the encoding used for the user-defined custom headers for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding HeadersEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>The encoding used for user-defined custom headers for this e-mail message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the HeadersEncoding property defaults to <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8_\" data-linktype=\"relative-path\">UTF8</a>.  </p>\n<p> SMTP messages consist of headers and body parts. The IETF RFCs for SMTP restrict the header and body part names to be ASCII. However, the IETF RFCs allow header and body part values to contain Unicode characters. In any particular value, if non-ASCII characters exist, then the value is encoded using a combination of character encoding (UTF8 or Shift-JIS, for example) followed by byte encoding (<a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a> or <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a> for example). The result is usually that only ASCII characters are in the network transmission stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_IsBodyHtml\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_IsBodyHtml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBodyHtml</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the mail message body is in Html.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsBodyHtml { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message body is in Html; else <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Priority\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Priority_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Priority</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the priority of this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailPriority Priority { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailpriority\" data-linktype=\"relative-path\">MailPriority</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.mailpriority\" data-linktype=\"relative-path\">MailPriority</a> that contains the priority of this message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_ReplyTo\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_ReplyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReplyTo</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the ReplyTo address for the mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddress ReplyTo { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a></div>\r\n                  </div>\r\n                  <p>A MailAddress that indicates the value of the ReplyTo field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ReplyTo property to indicate an address other than the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a> address to use to reply to this message.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_ReplyToList\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_ReplyToList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReplyToList</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the list of addresses to reply to for the mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddressCollection ReplyToList { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a></div>\r\n                  </div>\r\n                  <p>The list of the addresses to reply to for the mail message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ReplyToList property to indicate the list of addresses other than the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_From_\" data-linktype=\"relative-path\">From</a> address to use to reply to this message.  </p>\n<p> The ReplyToList property replaces the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_ReplyTo_\" data-linktype=\"relative-path\">ReplyTo</a> property that only allows a single address to reply to.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Sender\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Sender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sender</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the sender&#39;s address for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddress Sender { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> that contains the sender&#39;s address information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The sender&#39;s address is not validated or tied to the currently logged on user.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Subject\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Subject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Subject</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the subject line for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Subject { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the subject content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specify the encoding used for the subject by using the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_SubjectEncoding_\" data-linktype=\"relative-path\">SubjectEncoding</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the Subject property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#2\">   static void CreateTestMessage2( String^ server )\n   {\n      String^ to = L&quot;jane@contoso.com&quot;;\n      String^ from = L&quot;ben@contoso.com&quot;;\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the new SMTP client.&quot;;\n      message-&gt;Body = L&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n      SmtpClient^ client = gcnew SmtpClient( server );\n      \n      // Credentials are necessary if the server requires the client \n      // to authenticate before it will send e-mail on the client&#39;s behalf.\n      client-&gt;UseDefaultCredentials = true;\n      client-&gt;Send( message );\n\t  client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#2\">\t\tpublic static void CreateTestMessage2(string server)\n\t\t{\n\t\t\tstring to = &quot;jane@contoso.com&quot;;\n\t\t\tstring from = &quot;ben@contoso.com&quot;;\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the new SMTP client.&quot;;\n\t\t\tmessage.Body = @&quot;Using this new feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\t// Credentials are necessary if the server requires the client \n\t\t\t// to authenticate before it will send e-mail on the client&#39;s behalf.\n\t\t\tclient.UseDefaultCredentials = true;\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}  \n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage2(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n      }              \n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_SubjectEncoding\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_SubjectEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubjectEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the encoding used for the subject content for this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding SubjectEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> that was used to encode the <span class=\"xref\">stem.Net.Mail.MailMessage.Subject*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a mail agent has difficulty with a SubjectEncoding of <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Unicode_\" data-linktype=\"relative-path\">Unicode</a>, use <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8_\" data-linktype=\"relative-path\">UTF8</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the SubjectEncoding property.  </p>\n<pre><code class=\"lang-cs\" name=\"NclMailASync#3\">            MailMessage message = new MailMessage(from, to);\n            message.Body = &quot;This is a test e-mail message sent by an application. &quot;;\n            // Include some non-ASCII characters in body and subject.\n            string someArrows = new string(new char[] {&#39;\\u2190&#39;, &#39;\\u2191&#39;, &#39;\\u2192&#39;, &#39;\\u2193&#39;});\n            message.Body += Environment.NewLine + someArrows;\n            message.BodyEncoding =  System.Text.Encoding.UTF8;\n            message.Subject = &quot;test message 1&quot; + someArrows;\n            message.SubjectEncoding = System.Text.Encoding.UTF8;\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclMailASync#3\">        MailMessage^ message = gcnew MailMessage(from, to);\n        message-&gt;Body = &quot;This is a test e-mail message sent&quot; +\n            &quot; by an application. &quot;;\n        // Include some non-ASCII characters in body and \n        // subject.\n        String^ someArrows = gcnew String(gcnew array&lt;wchar_t&gt;{L&#39;\\u2190&#39;, \n            L&#39;\\u2191&#39;, L&#39;\\u2192&#39;, L&#39;\\u2193&#39;});\n        message-&gt;Body += Environment::NewLine + someArrows;\n        message-&gt;BodyEncoding = System::Text::Encoding::UTF8;\n        message-&gt;Subject = &quot;test message 1&quot; + someArrows;\n        message-&gt;SubjectEncoding = System::Text::Encoding::UTF8;\n</code></pre><pre><code class=\"lang-vb\" name=\"NclMailASync#3\">            Dim message As New MailMessage([from], [to])\n            message.Body = &quot;This is a test e-mail message sent by an application. &quot;\n            &#39; Include some non-ASCII characters in body and subject.\n            Dim someArrows As New String(New Char() {ChrW(&amp;H2190), ChrW(&amp;H2191), ChrW(&amp;H2192), ChrW(&amp;H2193)})\n            message.Body += Environment.NewLine &amp; someArrows\n            message.BodyEncoding = System.Text.Encoding.UTF8\n            message.Subject = &quot;test message 1&quot; &amp; someArrows\n            message.SubjectEncoding = System.Text.Encoding.UTF8\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_To\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_To_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">To</div>        \r\n          </div>\r\n    \r\n            <p>Gets the address collection that contains the recipients of this e-mail message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mail.MailAddressCollection To { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a></div>\r\n                  </div>\r\n                  <p>A writable <a class=\"xref\" href=\"system.net.mail.mailaddresscollection\" data-linktype=\"relative-path\">MailAddressCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The To property is used to designate the addresses on the To line of an e-mail message. To add a recipient to an e-mail message, create a <a class=\"xref\" href=\"system.net.mail.mailaddress\" data-linktype=\"relative-path\">MailAddress</a> for the recipient&#39;s address, and then add that object to the collection returned by this property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the To property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#7\">   static void CreateTestMessage4( String^ server )\n   {\n      MailAddress^ from = gcnew MailAddress( L&quot;ben@contoso.com&quot; );\n      MailAddress^ to = gcnew MailAddress( L&quot;Jane@contoso.com&quot; );\n      MailMessage^ message = gcnew MailMessage( from,to );\n      message-&gt;Subject = L&quot;Using the SmtpClient class.&quot;;\n      message-&gt;Body = L&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n      SmtpClient^ client = gcnew SmtpClient( server );\n      Console::WriteLine( L&quot;Sending an e-mail message to {0} by using SMTP host {1} port {2}.&quot;, to, client-&gt;Host, client-&gt;Port );\n      client-&gt;Send( message );\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#7\">\t\tpublic static void CreateTestMessage4(string server)\n\t\t{\n\t\t\tMailAddress from = new MailAddress(&quot;ben@contoso.com&quot;);\n\t\t\tMailAddress to = new MailAddress(&quot;Jane@contoso.com&quot;);\n\t\t\tMailMessage message = new MailMessage(from, to);\n\t\t\tmessage.Subject = &quot;Using the SmtpClient class.&quot;;\n\t\t\tmessage.Body = @&quot;Using this feature, you can send an e-mail message from an application very easily.&quot;;\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tConsole.WriteLine(&quot;Sending an e-mail message to {0} by using SMTP host {1} port {2}.&quot;,\n\t\t\t\t to.ToString(), client.Host, client.Port);\n\n      try {\n\t\t\t  client.Send(message);\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t  Console.WriteLine(&quot;Exception caught in CreateTestMessage4(): {0}&quot;, \n                    ex.ToString() );\t\t\t  \n\t\t  }\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Dispose\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the Dispose method when you are finished using the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates disposing a <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_MailMessage_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Mail_MailMessage_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code>method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mail.MailMessage.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mail.MailMessage.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.AlternateViews\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Attachments\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Bcc\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Body\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.BodyEncoding\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.BodyTransferEncoding\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.CC\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.DeliveryNotificationOptions\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.From\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.HeadersEncoding\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.IsBodyHtml\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Priority\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.ReplyTo\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.ReplyToList\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Sender\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.Subject\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.SubjectEncoding\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.MailMessage.To\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"227d08a0-ee54-8718-b50c-9fbf1d03260b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an e-mail message that can be sent using the  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Mail/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Mail.MailMessage\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mail.MailMessage.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mail.MailMessage.yml","open_to_public_contributors":true,"api_name":["System.Net.Mail.MailMessage","System.Net.Mail.MailMessage..ctor","System.Net.Mail.MailMessage.AlternateViews","System.Net.Mail.MailMessage.Attachments","System.Net.Mail.MailMessage.Bcc","System.Net.Mail.MailMessage.Body","System.Net.Mail.MailMessage.BodyEncoding","System.Net.Mail.MailMessage.BodyTransferEncoding","System.Net.Mail.MailMessage.CC","System.Net.Mail.MailMessage.DeliveryNotificationOptions","System.Net.Mail.MailMessage.Dispose","System.Net.Mail.MailMessage.From","System.Net.Mail.MailMessage.Headers","System.Net.Mail.MailMessage.HeadersEncoding","System.Net.Mail.MailMessage.IsBodyHtml","System.Net.Mail.MailMessage.Priority","System.Net.Mail.MailMessage.ReplyTo","System.Net.Mail.MailMessage.ReplyToList","System.Net.Mail.MailMessage.Sender","System.Net.Mail.MailMessage.Subject","System.Net.Mail.MailMessage.SubjectEncoding","System.Net.Mail.MailMessage.To"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Mail.MailMessage","System::Net::Mail::MailMessage","System.Net.Mail.MailMessage.#ctor","System::Net::Mail::MailMessage::#ctor","System.Net.Mail.MailMessage.AlternateViews","System::Net::Mail::MailMessage::AlternateViews","System.Net.Mail.MailMessage.Attachments","System::Net::Mail::MailMessage::Attachments","System.Net.Mail.MailMessage.Bcc","System::Net::Mail::MailMessage::Bcc","System.Net.Mail.MailMessage.Body","System::Net::Mail::MailMessage::Body","System.Net.Mail.MailMessage.BodyEncoding","System::Net::Mail::MailMessage::BodyEncoding","System.Net.Mail.MailMessage.BodyTransferEncoding","System::Net::Mail::MailMessage::BodyTransferEncoding","System.Net.Mail.MailMessage.CC","System::Net::Mail::MailMessage::CC","System.Net.Mail.MailMessage.DeliveryNotificationOptions","System::Net::Mail::MailMessage::DeliveryNotificationOptions","System.Net.Mail.MailMessage.Dispose","System::Net::Mail::MailMessage::Dispose","System.Net.Mail.MailMessage.From","System::Net::Mail::MailMessage::From","System.Net.Mail.MailMessage.Headers","System::Net::Mail::MailMessage::Headers","System.Net.Mail.MailMessage.HeadersEncoding","System::Net::Mail::MailMessage::HeadersEncoding","System.Net.Mail.MailMessage.IsBodyHtml","System::Net::Mail::MailMessage::IsBodyHtml","System.Net.Mail.MailMessage.Priority","System::Net::Mail::MailMessage::Priority","System.Net.Mail.MailMessage.ReplyTo","System::Net::Mail::MailMessage::ReplyTo","System.Net.Mail.MailMessage.ReplyToList","System::Net::Mail::MailMessage::ReplyToList","System.Net.Mail.MailMessage.Sender","System::Net::Mail::MailMessage::Sender","System.Net.Mail.MailMessage.Subject","System::Net::Mail::MailMessage::Subject","System.Net.Mail.MailMessage.SubjectEncoding","System::Net::Mail::MailMessage::SubjectEncoding","System.Net.Mail.MailMessage.To","System::Net::Mail::MailMessage::To"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"227d08a0-ee54-8718-b50c-9fbf1d03260b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Mail/MailMessage.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MailMessage class | Microsoft Docs","_op_ogTitle":"MailMessage class","description":"Represents an e-mail message that can be sent using the  class.\n","toc_asset_id":"_splitted/System.Net.Mail/toc.json","toc_rel":"_splitted/System.Net.Mail/toc.json","source_url":"","ms.assetid":"System.Net.Mail.MailMessage","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mail.mailmessage","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mail.mailmessage","fileRelativePath":"System.Net.Mail.MailMessage.html"},"themesRelativePathToOutputRoot":"_themes/"}