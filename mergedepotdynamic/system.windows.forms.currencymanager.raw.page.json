{"content":"    \r\n    <h1 id=\"System_Windows_Forms_CurrencyManager\">\r\n      <span class=\"lang-csharp\">CurrencyManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Manages a list of <a class=\"xref\" href=\"system.windows.forms.binding\" data-linktype=\"relative-path\">Binding</a> objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class CurrencyManager : System.Windows.Forms.BindingManagerBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">System.Windows.Forms.BindingManagerBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CurrencyManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_BindingComplete\" data-linktype=\"relative-path\">BindingComplete</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Bindings\" data-linktype=\"relative-path\">Bindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"relative-path\">CurrentItemChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_DataError\" data-linktype=\"relative-path\">DataError</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_GetItemProperties_System_Collections_ArrayList_System_Collections_ArrayList_\" data-linktype=\"relative-path\">GetItemProperties(ArrayList,ArrayList)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_GetItemProperties_System_Type_System_Int32_System_Collections_ArrayList_System_Collections_ArrayList_\" data-linktype=\"relative-path\">GetItemProperties(Type,Int32,ArrayList,ArrayList)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_IsBindingSuspended\" data-linktype=\"relative-path\">IsBindingSuspended</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_OnBindingComplete_System_Windows_Forms_BindingCompleteEventArgs_\" data-linktype=\"relative-path\">OnBindingComplete(BindingCompleteEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_onCurrentChangedHandler\" data-linktype=\"relative-path\">onCurrentChangedHandler</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_OnDataError_System_Exception_\" data-linktype=\"relative-path\">OnDataError(Exception)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_onPositionChangedHandler\" data-linktype=\"relative-path\">onPositionChangedHandler</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PullData\" data-linktype=\"relative-path\">PullData()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PushData\" data-linktype=\"relative-path\">PushData()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The CurrencyManager derives from the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a> class. Use the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a> to return either a CurrencyManager or a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a>. The actual object returned depends on the data source and data member passed to the <a class=\"xref\" href=\"system.windows.forms.bindingcontext#System_Windows_Forms_BindingContext_Item_\" data-linktype=\"relative-path\">Item</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingcontext\" data-linktype=\"relative-path\">BindingContext</a>. If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a>. For example, if you specify a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> as the data source, a <a class=\"xref\" href=\"system.windows.forms.propertymanager\" data-linktype=\"relative-path\">PropertyManager</a> will be returned. If, on the other hand, the data source is an object that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>, <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a>, or <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> interface, a CurrencyManager will be returned.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Current_\" data-linktype=\"relative-path\">Current</a> property returns the current item in the underlying list. To change the current item, set the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Position_\" data-linktype=\"relative-path\">Position</a> property to a new value. The value must be greater than 0 and must be less than the value of the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_Count_\" data-linktype=\"relative-path\">Count</a> property.  </p>\n<p> If the underlying data source implements the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> interface, and the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowNew_\" data-linktype=\"relative-path\">AllowNew</a> property is set to <code>true</code>, you can use the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_AddNew_\" data-linktype=\"relative-path\">AddNew</a> method.</p>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_finalType\" data-linktype=\"self-bookmark\">finalType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the data type of the list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_listposition\" data-linktype=\"self-bookmark\">listposition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the current position of the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> in the list.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of items in the list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current item in the list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_List\" data-linktype=\"self-bookmark\">List</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the list for this <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_Position\" data-linktype=\"self-bookmark\">Position</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the position you are at within the list.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_AddNew\" data-linktype=\"self-bookmark\">AddNew()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a new item to the underlying list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_CancelCurrentEdit\" data-linktype=\"self-bookmark\">CancelCurrentEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels the current edit operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_CheckEmpty\" data-linktype=\"self-bookmark\">CheckEmpty()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Throws an exception if there is no list, or the list is empty.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_EndCurrentEdit\" data-linktype=\"self-bookmark\">EndCurrentEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends the current edit operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_GetItemProperties\" data-linktype=\"self-bookmark\">GetItemProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the property descriptor collection for the underlying list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_GetListName_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">GetListName(ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the list supplying the data for the binding using the specified set of bound properties.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_OnCurrentChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCurrentChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_OnCurrentItemChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCurrentItemChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"relative-path\">CurrentItemChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_OnItemChanged_System_Windows_Forms_ItemChangedEventArgs_\" data-linktype=\"self-bookmark\">OnItemChanged(ItemChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_ItemChanged\" data-linktype=\"relative-path\">ItemChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_OnMetaDataChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMetaDataChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_MetaDataChanged\" data-linktype=\"relative-path\">MetaDataChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_OnPositionChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPositionChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_Refresh\" data-linktype=\"self-bookmark\">Refresh()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces a repopulation of the data-bound list.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the item at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_ResumeBinding\" data-linktype=\"self-bookmark\">ResumeBinding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resumes data binding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_SuspendBinding\" data-linktype=\"self-bookmark\">SuspendBinding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Suspends data binding to prevents changes from updating the bound data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_UpdateIsBinding\" data-linktype=\"self-bookmark\">UpdateIsBinding()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the status of the binding.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_ItemChanged\" data-linktype=\"self-bookmark\">ItemChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the current item has been altered.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_ListChanged\" data-linktype=\"self-bookmark\">ListChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the list changes or an item in the list changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_CurrencyManager_MetaDataChanged\" data-linktype=\"self-bookmark\">MetaDataChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the metadata of the <span class=\"xref\">stem.Windows.Forms.CurrencyManager.List*</span> has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_finalType\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">finalType</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the data type of the list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Type finalType;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_listposition\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">listposition</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the current position of the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> in the list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected int listposition;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value of the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_Count_\" data-linktype=\"relative-path\">Count</a> property is greater than 0, the listposition field is a number between 0 and <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_Count_\" data-linktype=\"relative-path\">Count</a> minus 1. If <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_Count_\" data-linktype=\"relative-path\">Count</a> is 0, listposition is -1.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_Count\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of items in the list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of items in the list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the count property to determine when the end of a list has been reached. Because the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> maintains a 0-based array of items, the end of the list is always Count minus one.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example iterates through the list until the final item, determined by the Count property, is reached.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.Count Example#1\">    private void PrintListItems() {\n    // Get the CurrencyManager of a TextBox control.\n    CurrencyManager myCurrencyManager = (CurrencyManager)textBox1.BindingContext[0];\n    // Presuming the list is a DataView, create a DataRowView variable.\n    DataRowView drv;\n    for(int i = 0; i &lt; myCurrencyManager.Count; i++) {\n        myCurrencyManager.Position = i;\n        drv = (DataRowView)myCurrencyManager.Current;\n        // Presuming a column named CompanyName exists.\n        Console.WriteLine(drv[&quot;CompanyName&quot;]);\n    }\n}\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.Count Example#1\">   void PrintListItems()\n   {\n      \n      // Get the CurrencyManager of a TextBox control.\n      CurrencyManager^ myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(textBox1-&gt;BindingContext[nullptr]);\n      \n      // Presuming the list is a DataView, create a DataRowView variable.\n      DataRowView^ drv;\n      for ( int i = 0; i &lt; myCurrencyManager-&gt;Count; i++ )\n      {\n         myCurrencyManager-&gt;Position = i;\n         drv = dynamic_cast&lt;DataRowView^&gt;(myCurrencyManager-&gt;Current);\n         \n         // Presuming a column named CompanyName exists.\n         Console::WriteLine( drv[ &quot;CompanyName&quot; ] );\n\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.Count Example#1\">    Private Sub PrintListItems()\n        &#39; Get the CurrencyManager of a TextBox control.\n        Dim myCurrencyManager As CurrencyManager = CType(textBox1.BindingContext(0), CurrencyManager)\n        &#39; Presuming the list is a DataView, create a DataRowView variable.\n        Dim drv As DataRowView\n        Dim i As Integer\n        For i = 0 To myCurrencyManager.Count - 1\n            myCurrencyManager.Position = i\n            drv = CType(myCurrencyManager.Current, DataRowView)\n            &#39; Presuming a column named CompanyName exists.\n            Console.WriteLine(drv(&quot;CompanyName&quot;))\n        Next i\n    End Sub &#39;PrintListItems\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_Current\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current item in the list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>A list item of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order to get the current item, you must know its data type in order to cast it correctly. For example, if the data source is a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, you must cast the current item as a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Current property to print the <code>ContactName</code> field for the current item in the list.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.Current Example#1\">private void GetCurrentItem() {\n    CurrencyManager myCurrencyManager;\n    // Get the CurrencyManager of a TextBox control.\n    myCurrencyManager = (CurrencyManager)textBox1.BindingContext[0];\n    // Get the current item cast as a DataRowView.\n    DataRowView myDataRowView;\n    myDataRowView = (DataRowView) myCurrencyManager.Current;\n    // Print the column named ContactName.\n    Console.WriteLine(myDataRowView[&quot;ContactName&quot;]);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.Current Example#1\">    Private Sub GetCurrentItem()\n        Dim myCurrencyManager As CurrencyManager\n        &#39; Get the CurrencyManager of a TextBox control.\n        myCurrencyManager = CType(textBox1.BindingContext(0), CurrencyManager)\n        &#39; Get the current item cast as a DataRowView.\n        Dim myDataRowView As DataRowView\n        myDataRowView = CType(myCurrencyManager.Current, DataRowView)\n        &#39; Print the column named ContactName.\n        Console.WriteLine(myDataRowView(&quot;ContactName&quot;))\n    End Sub &#39;GetCurrentItem\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.Current Example#1\">   void GetCurrentItem()\n   {\n      CurrencyManager^ myCurrencyManager;\n      \n      // Get the CurrencyManager of a TextBox control.\n      myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(textBox1-&gt;BindingContext[nullptr]);\n      \n      // Get the current item cast as a DataRowView.\n      DataRowView^ myDataRowView;\n      myDataRowView = dynamic_cast&lt;DataRowView^&gt;(myCurrencyManager-&gt;Current);\n      \n      // Print the column named ContactName.\n      Console::WriteLine( myDataRowView[ &quot;ContactName&quot; ] );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_List\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_List_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">List</div>        \r\n          </div>\r\n    \r\n            <p>Gets the list for this <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IList List { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> that contains the list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The object returned by the List property can be cast to any type that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface. This will be commonly used when you know the type of the underlying list. For example, if you are data-bound to a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a>, the underlying list is a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> (which implements <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>). Other classes that implement the interface (this is not a complete list) include <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, and <a class=\"xref\" href=\"system.collections.collectionbase\" data-linktype=\"relative-path\">CollectionBase</a>.  </p>\n<p> How you use the List property depends on the class that implements the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface. For example, you can use the List property to determine the name of the list. If the data source implements the <a class=\"xref\" href=\"system.componentmodel.itypedlist\" data-linktype=\"relative-path\">ITypedList</a> interface, you can use the <a class=\"xref\" href=\"system.componentmodel.itypedlist#System_ComponentModel_ITypedList_GetListName_\" data-linktype=\"relative-path\">GetListName</a> method to return the name of the current table. This is shown in the C# code below:  </p>\n<pre><code class=\"lang-c#\">private void PrintCurrentListName(DataGrid myDataGrid){   \n   CurrencyManager myCM = (CurrencyManager)   \n   BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];   \n   IList myList = myCM.List;   \n   ITypedList thisList = (ITypedList) myList;   \n   Console.WriteLine(thisList.GetListName(null));   \n}\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example allows users to edit a set of records, but not add any new ones. In the <a class=\"xref\" href=\"system.windows.forms.datagrid#System_Windows_Forms_DataGrid_Navigate\" data-linktype=\"relative-path\">Navigate</a> event of a <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> returned by the List property is cast to a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> variable. The <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_AllowNew_\" data-linktype=\"relative-path\">AllowNew</a> property of the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> is set to <code>false</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"CurrencyManager.List Example#1\">private void Grid_Navigate(object sender, NavigateEventArgs e){\n   if (e.Forward ){\n      DataSet ds = (DataSet) grid.DataSource;\n      CurrencyManager cm  = \n      (CurrencyManager)BindingContext[ds,&quot;Customers.CustOrders&quot;];\n      // Cast the IList to a DataView to set the AllowNew property.\n      DataView dv  = (DataView) cm.List;\n      dv.AllowNew = false;\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"CurrencyManager.List Example#1\">private:\n   void Grid_Navigate( Object^ /*sender*/, NavigateEventArgs^ e )\n   {\n      if ( e-&gt;Forward )\n      {\n         DataSet^ ds = dynamic_cast&lt;DataSet^&gt;(grid-&gt;DataSource);\n         CurrencyManager^ cm = dynamic_cast&lt;CurrencyManager^&gt;(BindingContext[ds, &quot;Customers::CustOrders&quot;]);\n         \n         // Cast the IList* to a DataView to set the AllowNew property.\n         DataView^ dv = dynamic_cast&lt;DataView^&gt;(cm-&gt;List);\n         dv-&gt;AllowNew = false;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"CurrencyManager.List Example#1\">Private Sub Grid_Navigate(sender As Object, e As NavigateEventArgs)\n   If e.Forward Then\n      Dim ds As DataSet = CType(grid.DataSource, DataSet)\n      Dim cm As CurrencyManager = _\n      CType(BindingContext(ds,&quot;Customers.CustOrders&quot;), CurrencyManager)\n      &#39; Cast the IList to a DataView to set the AllowNew property.\n      Dim dv As DataView = CType(cm.List, DataView)\n      dv.AllowNew = false\n   End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_Position\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_Position_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Position</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the position you are at within the list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int Position { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A number between 0 and <span class=\"xref\">stem.Windows.Forms.CurrencyManager.Count*</span> minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An important property of the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> class is the Position property. In a list of items, you can view only one item out of the entire list. To determine which item is viewed, set the Position to a number between 0 (the beginning of the list) and <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_Count_\" data-linktype=\"relative-path\">Count</a> minus 1 (the end of the list).  </p>\n<p> Therefore, the Position determines the currency, or place in the list, of all controls bound to the same <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>. For example, imagine a list consisting of two columns called &quot;FirstName&quot; and &quot;LastName&quot;. Two <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column. When the Position of the common <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> is set to the third position, both controls display the appropriate values for that position in the list. In other words, if the item at position three consists of the first name &quot;John&quot; and the last name &quot;Smith&quot;, the bound controls will display &quot;John&quot; and &quot;Smith&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code examples use the Position property to allow navigation through a list.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.Position Example#1\">private:\n   void MoveNext( CurrencyManager^ myCurrencyManager )\n   {\n      if ( myCurrencyManager-&gt;Count == 0 )\n      {\n         Console::WriteLine( &quot;No records to move to.&quot; );\n         return;\n      }\n\n      if ( myCurrencyManager-&gt;Position == myCurrencyManager-&gt;Count - 1 )\n      {\n         Console::WriteLine( &quot;You&#39;re at end of the records&quot; );\n      }\n      else\n      {\n         myCurrencyManager-&gt;Position += 1;\n      }\n   }\n\n   void MoveFirst( CurrencyManager^ myCurrencyManager )\n   {\n      if ( myCurrencyManager-&gt;Count == 0 )\n      {\n         Console::WriteLine( &quot;No records to move to.&quot; );\n         return;\n      }\n\n      myCurrencyManager-&gt;Position = 0;\n   }\n\n   void MovePrevious( CurrencyManager^ myCurrencyManager )\n   {\n      if ( myCurrencyManager-&gt;Count == 0 )\n      {\n         Console::WriteLine( &quot;No records to move to.&quot; );\n         return;\n      }\n\n      if ( myCurrencyManager-&gt;Position == 0 )\n      {\n         Console::WriteLine( &quot;You&#39;re at the beginning of the records.&quot; );\n      }\n      else\n      {\n         myCurrencyManager-&gt;Position -= 1;\n      }\n   }\n\n   void MoveLast( CurrencyManager^ myCurrencyManager )\n   {\n      if ( myCurrencyManager-&gt;Count == 0 )\n      {\n         Console::WriteLine( &quot;No records to move to.&quot; );\n         return;\n      }\n      myCurrencyManager-&gt;Position = myCurrencyManager-&gt;Count - 1;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.Position Example#1\">private void MoveNext(CurrencyManager myCurrencyManager){\n    if(myCurrencyManager.Count == 0) {\n       Console.WriteLine(&quot;No records to move to.&quot;);\n       return;\n    }\n    if (myCurrencyManager.Position == myCurrencyManager.Count - 1){\n       Console.WriteLine(&quot;You&#39;re at end of the records&quot;);\n    }\n    else{\n      myCurrencyManager.Position += 1;\n    }\n }\n \n private void MoveFirst(CurrencyManager myCurrencyManager){\n    if(myCurrencyManager.Count == 0) {\n       Console.WriteLine(&quot;No records to move to.&quot;);\n       return;\n    }\n \n    myCurrencyManager.Position = 0;\n }\n \n private void MovePrevious(CurrencyManager myCurrencyManager){\n    if(myCurrencyManager.Count == 0) {\n       Console.WriteLine(&quot;No records to move to.&quot;);\n       return;\n    }\n    if(myCurrencyManager.Position == 0) {\n       Console.WriteLine(&quot;You&#39;re at the beginning of the records.&quot;);\n    }   \n    else{\n       myCurrencyManager.Position -= 1;\n    }\n }\n \n private void MoveLast(CurrencyManager myCurrencyManager){\n    if(myCurrencyManager.Count == 0) {\n       Console.WriteLine(&quot;No records to move to.&quot;);\n       return;\n    }\n    myCurrencyManager.Position = myCurrencyManager.Count - 1;\n }\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.Position Example#1\">Private Sub MoveNext(ByVal myCurrencyManager As CurrencyManager)\n    If myCurrencyManager.Count = 0 Then\n       Console.WriteLine(&quot;No records to move to.&quot;)\n       Exit Sub\n    End If\n \n    If myCurrencyManager.Position = myCurrencyManager.Count - 1 Then \n       MessageBox.Show(&quot;You&#39;re at end of the records&quot;)\n    Else\n       myCurrencyManager.Position += 1\n    End If\n End Sub\n \n Private Sub MoveFirst(ByVal myCurrencyManager As CurrencyManager)\n    If myCurrencyManager.Count = 0 Then\n       Console.WriteLine(&quot;No records to move to.&quot;)\n       Exit Sub\n    End If\n \n    myCurrencyManager.Position = 0\n End Sub\n \n Private Sub MovePrevious(ByVal myCurrencyManager As CurrencyManager)\n    If myCurrencyManager.Count = 0 Then\n       Console.WriteLine(&quot;No records to move to.&quot;)\n       Exit Sub\n    End If\n \n    If myCurrencyManager.Position = 0 Then\n       MessageBox.Show(&quot;You&#39;re at the beginning of the records.&quot;)\n    Else\n       myCurrencyManager.Position -= 1\n    End if\n End Sub\n \n Private Sub MoveLast(ByVal myCurrencyManager As CurrencyManager)\n    If myCurrencyManager.Count = 0 Then\n       Console.WriteLine(&quot;No records to move to.&quot;)\n       Exit Sub\n    End If\n \n    myCurrencyManager.Position = myCurrencyManager.Count - 1\n End Sub\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_AddNew\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_AddNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddNew()</div>        \r\n          </div>\r\n    \r\n            <p>Adds a new item to the underlying list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void AddNew ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The underlying data source does not implement <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a>, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is supported only if the data source implements the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> interface and the data source allows adding rows (<a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowNew_\" data-linktype=\"relative-path\">AllowNew</a> is <code>true</code>).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property was designed to allow complex-bound controls, such as the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, to add new items to list.  </p>\n</div>\n<p> You typically use this property only if you are creating your own control that incorporates the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>. Otherwise, to add items if the data source is a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a>, use the <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_AddNew_\" data-linktype=\"relative-path\">AddNew</a> method of the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> class. If the data source is a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, use the <a class=\"xref\" href=\"system.data.datatable#System_Data_DataTable_NewRow_\" data-linktype=\"relative-path\">NewRow</a> method and add the row to the <a class=\"xref\" href=\"system.data.datarowcollection\" data-linktype=\"relative-path\">DataRowCollection</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example adds a new item to the list with the AddNew method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.AddNew Example#1\">   void AddListItem()\n   {\n      \n      // Get the CurrencyManager for a DataTable.\n      CurrencyManager^ myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(this-&gt;BindingContext[ DataTable1 ]);\n      myCurrencyManager-&gt;AddNew();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.AddNew Example#1\">private void AddListItem()\n{\n   // Get the CurrencyManager for a DataTable.\n   CurrencyManager myCurrencyManager = \n   (CurrencyManager)this.BindingContext[DataTable1];\n   myCurrencyManager.AddNew();\n}\n      \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.AddNew Example#1\">    Private Sub AddListItem()\n        &#39; Get the CurrencyManager for a DataTable.\n        Dim myCurrencyManager As CurrencyManager = _ \n            CType(Me.BindingContext(DataTable1), CurrencyManager)\n        myCurrencyManager.AddNew()\n    End Sub &#39;AddListItem\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_CancelCurrentEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_CancelCurrentEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelCurrentEdit()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels the current edit operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void CancelCurrentEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is supported only if the objects contained by the data source implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface. If the objects contained within the data source do not implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> interface, changes made to the data will not be discarded.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property was designed to be used by complex data-bound controls, such as the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, to cancel edits. For example, when the user presses the ESC key, the CancelCurrentEdit method is called on the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> for the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a>. Unless you are creating a control that requires this same functionality, you should not use this method. Instead, use the <a class=\"xref\" href=\"system.data.datarowview#System_Data_DataRowView_CancelEdit_\" data-linktype=\"relative-path\">CancelEdit</a> method of the <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> class.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the CancelCurrentEdit when the user presses the ESC key.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.CancelCurrentEdit Example#1\">private void dataGrid1_KeyUp\n(object sender, System.Windows.Forms.KeyEventArgs e)\n{\n   if(e.KeyCode == System.Windows.Forms.Keys.Escape){\n      // Escape key pressed.\n      CurrencyManager gridCurrencyManager = \n      (CurrencyManager)this.BindingContext[dataGrid1.DataSource, dataGrid1.DataMember];\n      gridCurrencyManager.CancelCurrentEdit();\n      MessageBox.Show(&quot;Escape!&quot;);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.CancelCurrentEdit Example#1\">    Private Sub dataGrid1_KeyUp(ByVal sender As Object, _\n    ByVal e As System.Windows.Forms.KeyEventArgs)\n\n        If e.KeyCode = System.Windows.Forms.Keys.Escape Then\n            &#39; Escape key pressed.\n            Dim gridCurrencyManager As CurrencyManager = _\n                CType(Me.BindingContext(dataGrid1.DataSource, _\n                dataGrid1.DataMember), CurrencyManager)\n\n            gridCurrencyManager.CancelCurrentEdit()\n            MessageBox.Show(&quot;Escape!&quot;)\n        End If\n    End Sub &#39;dataGrid1_KeyUp\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.CancelCurrentEdit Example#1\">private:\n   void dataGrid1_KeyUp( Object^ /*sender*/, System::Windows::Forms::KeyEventArgs^ e )\n   {\n      if ( e-&gt;KeyCode == System::Windows::Forms::Keys::Escape )\n      {\n         \n         // Escape key pressed.\n         CurrencyManager^ gridCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(this-&gt;BindingContext[dataGrid1-&gt;DataSource, dataGrid1-&gt;DataMember]);\n         gridCurrencyManager-&gt;CancelCurrentEdit();\n         MessageBox::Show( &quot;Escape!&quot; );\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_CheckEmpty\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_CheckEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckEmpty()</div>        \r\n          </div>\r\n    \r\n            <p>Throws an exception if there is no list, or the list is empty.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void CheckEmpty ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>There is no list, or the list is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_EndCurrentEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_EndCurrentEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndCurrentEdit()</div>        \r\n          </div>\r\n    \r\n            <p>Ends the current edit operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void EndCurrentEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is supported only if the objects contained by the data source implement the <a class=\"xref\" href=\"system.componentmodel.ieditableobject\" data-linktype=\"relative-path\">IEditableObject</a> or <a class=\"xref\" href=\"system.componentmodel.icanceladdnew\" data-linktype=\"relative-path\">ICancelAddNew</a> interfaces.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property was designed to be used by complex data-bound controls, such as the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. Unless you are creating a control that requires this same functionality, you should not use this method. Instead, if the data source is either a <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> or <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>, use the <a class=\"xref\" href=\"system.data.datarowview#System_Data_DataRowView_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a> method of the <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> class.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EndCurrentEdit method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.EndCurrentEdit Example#1\">private:\n   void dataGrid1_KeyUp( Object^ /*sender*/, System::Windows::Forms::KeyEventArgs^ e )\n   {\n      if ( e-&gt;KeyCode == Keys::Enter )\n      {\n         \n         // Enter key pressed.\n         CurrencyManager^ gridCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(this-&gt;BindingContext[dataGrid1-&gt;DataSource, dataGrid1-&gt;DataMember]);\n         gridCurrencyManager-&gt;EndCurrentEdit();\n         MessageBox::Show( &quot;End Edit&quot; );\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.EndCurrentEdit Example#1\">    Private Sub dataGrid1_KeyUp _\n   (ByVal sender As Object, ByVal e As System.Windows.Forms.KeyEventArgs)\n        If e.KeyCode = Keys.Enter Then\n            &#39; Enter key pressed.\n            Dim gridCurrencyManager As CurrencyManager = _\n            CType(Me.BindingContext(dataGrid1.DataSource, _\n            dataGrid1.DataMember), CurrencyManager)\n            gridCurrencyManager.EndCurrentEdit()\n            MessageBox.Show(&quot;End Edit&quot;)\n        End If\n    End Sub &#39;dataGrid1_KeyUp\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.EndCurrentEdit Example#1\">    private void dataGrid1_KeyUp\n    (object sender, System.Windows.Forms.KeyEventArgs e) {\n        if(e.KeyCode == Keys.Enter) {\n            // Enter key pressed.\n            CurrencyManager gridCurrencyManager = \n            (CurrencyManager)this.BindingContext\n            [dataGrid1.DataSource, dataGrid1.DataMember];\n            gridCurrencyManager.EndCurrentEdit();\n            MessageBox.Show(&quot;End Edit&quot;);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_GetItemProperties\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_GetItemProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemProperties()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the property descriptor collection for the underlying list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.ComponentModel.PropertyDescriptorCollection GetItemProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> for the list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> for the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> is used to specify a column in the list.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the GetItemProperties method to return a <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> for a <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase\" data-linktype=\"relative-path\">BindingManagerBase</a>. The example then prints out the <a class=\"xref\" href=\"system.componentmodel.memberdescriptor#System_ComponentModel_MemberDescriptor_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.componentmodel.propertydescriptor#System_ComponentModel_PropertyDescriptor_PropertyType_\" data-linktype=\"relative-path\">PropertyType</a> of each <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> in the collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.GetItemProperties Example#1\">private void PrintPropertyDescriptions(BindingManagerBase b)\n{\n    Console.WriteLine(&quot;Printing Property Descriptions&quot;);\n    PropertyDescriptorCollection ps = b.GetItemProperties();\n    for(int i = 0; i &lt; ps.Count; i++)\n    {\n        Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + ps[i].Name + &quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + ps[i].PropertyType);\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.GetItemProperties Example#1\">   void PrintPropertyDescriptions( BindingManagerBase^ b )\n   {\n      Console::WriteLine( &quot;Printing Property Descriptions&quot; );\n      PropertyDescriptorCollection^ ps = b-&gt;GetItemProperties();\n      for ( int i = 0; i &lt; ps-&gt;Count; i++ )\n      {\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&nbsp;&nbsp;&nbsp;&nbsp;{1}&quot;, ps[ i ]-&gt;Name, ps[ i ]-&gt;PropertyType );\n\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.GetItemProperties Example#1\">    Private Sub PrintPropertyDescriptions(b As BindingManagerBase)\n        Console.WriteLine(&quot;Printing Property Descriptions&quot;)\n        Dim ps As PropertyDescriptorCollection = b.GetItemProperties()\n        Dim i As Integer\n        For i = 0 To ps.Count - 1\n            Console.WriteLine((ControlChars.Tab &amp; ps(i).Name &amp; ControlChars.Tab &amp; ps(i).PropertyType.ToString))\n        Next i\n    End Sub &#39;PrintPropertyDescriptions\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_GetListName_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_GetListName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetListName(ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the list supplying the data for the binding using the specified set of bound properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override string GetListName (System.Collections.ArrayList listAccessors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>listAccessors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> of properties to be found in the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>If successful, a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing name of the list supplying the data for the binding; otherwise, an <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the GetListName method to be successful, the underlying list must be of type <a class=\"xref\" href=\"system.componentmodel.itypedlist\" data-linktype=\"relative-path\">ITypedList</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_OnCurrentChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_OnCurrentChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCurrentChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentChanged\" data-linktype=\"relative-path\">CurrentChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnCurrentChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_OnCurrentItemChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_OnCurrentItemChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCurrentItemChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_CurrentItemChanged\" data-linktype=\"relative-path\">CurrentItemChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnCurrentItemChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_OnItemChanged_System_Windows_Forms_ItemChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_OnItemChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemChanged(ItemChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_ItemChanged\" data-linktype=\"relative-path\">ItemChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemChanged (System.Windows.Forms.ItemChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.itemchangedeventargs\" data-linktype=\"relative-path\">ItemChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.itemchangedeventargs\" data-linktype=\"relative-path\">ItemChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnItemChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_OnMetaDataChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_OnMetaDataChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMetaDataChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_MetaDataChanged\" data-linktype=\"relative-path\">MetaDataChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void OnMetaDataChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnMetaDataChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_OnPositionChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_OnPositionChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPositionChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPositionChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnPositionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_Refresh\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh()</div>        \r\n          </div>\r\n    \r\n            <p>Forces a repopulation of the data-bound list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Refresh ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Refresh method when the data source does not support notification when it is changed (for example, if it is an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an array and binds it to a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control, and then changes one value. The Refresh method can be called to update the value displayed by the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.Refresh Example#1\">private void DemonstrateRefresh(){\n    // Create an array with ten elements and bind to a TextBox.\n    string[] myArray= new string[10];\n    for(int i = 0; i &lt;10; i++){\n       myArray[i] = &quot;item &quot; + i;\n    }\n    textBox1.DataBindings.Add (&quot;Text&quot;,myArray,&quot;&quot;);\n    // Change one value.\n    myArray[0]= &quot;New value&quot;;\n\n    // Uncomment the next line to refresh the CurrencyManager.\n    // RefreshGrid(myArray);\n }\n private void RefreshGrid(object dataSource){\n    CurrencyManager myCurrencyManager = (CurrencyManager)this.BindingContext[dataSource];\n    myCurrencyManager.Refresh();\n }\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.Refresh Example#1\">   void DemonstrateRefresh()\n   {\n      \n      // Create an array with ten elements and bind to a TextBox.\n      array&lt;String^&gt;^myArray = gcnew array&lt;String^&gt;(10);\n      for ( int i = 0; i &lt; 10; i++ )\n      {\n         myArray[ i ] = String::Format( &quot;item {0}&quot;, i );\n\n      }\n      textBox1-&gt;DataBindings-&gt;Add( &quot;Text&quot;, myArray, &quot;&quot; );\n      \n      // Change one value.\n      myArray[ 0 ] = &quot;New value&quot;;\n      \n      // Uncomment the next line to refresh the CurrencyManager.\n      // RefreshGrid(myArray);\n   }\n\n   void RefreshGrid( Object^ dataSource )\n   {\n      CurrencyManager^ myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(this-&gt;BindingContext[ dataSource ]);\n      myCurrencyManager-&gt;Refresh();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.Refresh Example#1\">    Private Sub DemonstrateRefresh()\n        &#39; Create an array with ten elements and bind to a TextBox.\n        Dim myArray(9) As String\n        Dim i As Integer\n        For i = 0 To 9\n            myArray(i) = &quot;item &quot; &amp; i\n        Next i\n        textBox1.DataBindings.Add(&quot;Text&quot;, myArray, &quot;&quot;)\n        &#39; Change one value.\n        myArray(0) = &quot;New value&quot;\n\n        &#39; Uncomment the next line to refresh the CurrencyManager.\n        &#39; RefreshGrid(myArray);\n\n    End Sub &#39;DemonstrateRefresh\n\n    Private Sub RefreshGrid(dataSource As Object)\n        Dim myCurrencyManager As CurrencyManager = CType(Me.BindingContext(dataSource), CurrencyManager)\n        myCurrencyManager.Refresh()\n    End Sub &#39;RefreshGrid\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the item at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the item to remove from the list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>There is no row at the specified <code>index</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RemoveAt method was designed to allow complex controls, such as the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, to remove items from the list. You should not use this method to actually remove items. Instead, use the <a class=\"xref\" href=\"system.data.dataview#System_Data_DataView_Delete_\" data-linktype=\"relative-path\">Delete</a> method of the <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">DataView</a> class to delete items.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the RemoveAt method to remove the item at position 0 in the list.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.RemoveAt Example#1\">private void RemoveFromList(){\n    // Get the CurrencyManager of a TextBox control.\n    CurrencyManager myCurrencyManager = (CurrencyManager)textBox1.BindingContext[0];\n    // If the count is 0, exit the function.\n    if(myCurrencyManager.Count &gt; 1)\n    myCurrencyManager.RemoveAt(0);\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.RemoveAt Example#1\">   void RemoveFromList()\n   {\n      \n      // Get the CurrencyManager of a TextBox control.\n      CurrencyManager^ myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(textBox1-&gt;BindingContext[nullptr]);\n      \n      // If the count is 0, exit the function.\n      if ( myCurrencyManager-&gt;Count &gt; 1 )\n            myCurrencyManager-&gt;RemoveAt( 0 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.RemoveAt Example#1\">    Private Sub RemoveFromList()\n        &#39; Get the CurrencyManager of a TextBox control.\n        Dim myCurrencyManager As CurrencyManager = CType(textBox1.BindingContext(0), CurrencyManager)\n        &#39; If the count is 0, exit the function.\n        If myCurrencyManager.Count &gt; 1 Then\n            myCurrencyManager.RemoveAt(0)\n        End If\n        \n    End Sub &#39;RemoveFromList\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_ResumeBinding\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_ResumeBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResumeBinding()</div>        \r\n          </div>\r\n    \r\n            <p>Resumes data binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void ResumeBinding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> and ResumeBinding are two methods that allow the temporary suspension and resumption of in a simple data binding scenario. You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Using <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> prevents changes from being pushed into the data source until ResumeBinding is called but does not prevent changes in the data source from affecting the bound controls. Controls that use complex data binding, such as the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, update their values based on change events such as the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event. Calling this method will not prevent these events from occurring. For this reason, <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> and ResumeBinding are designed for use with simple-bound controls, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>. Alternatively, you can use these methods in a complex binding scenario if you suppress <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> events by setting the <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_RaiseListChangedEvents_\" data-linktype=\"relative-path\">RaiseListChangedEvents</a> property to <code>false</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ResumeBinding method.  </p>\n<pre><code class=\"lang-vb\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   Private Sub button4_Click(sender As Object, e As EventArgs)\n      Try\n         Dim myBindingManager2 As BindingManagerBase = BindingContext(myDataSet, &quot;Customers&quot;)\n         myBindingManager2.ResumeBinding()\n      Catch ex As Exception\n         MessageBox.Show(ex.Source.ToString())\n         MessageBox.Show(ex.Message.ToString())\n      End Try\n   End Sub &#39;button4_Click\n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   private void button4_Click(object sender, EventArgs e)\n   {\n      try\n      {\n         BindingManagerBase myBindingManager2=BindingContext [myDataSet, &quot;Customers&quot;];\n         myBindingManager2.ResumeBinding();\n      }\n      catch(Exception ex)\n      {\n         MessageBox.Show(ex.Source);\n         MessageBox.Show(ex.Message);\n      }\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"BindingManagerBase_Suspend_Resume_Binding#2\">   void button4_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      try\n      {\n         BindingManagerBase^ myBindingManager2 = BindingContext[ myDataSet, &quot;Customers&quot; ];\n         myBindingManager2-&gt;ResumeBinding();\n      }\n      catch ( Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;Source );\n         MessageBox::Show( ex-&gt;Message );\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_SuspendBinding\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_SuspendBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SuspendBinding()</div>        \r\n          </div>\r\n    \r\n            <p>Suspends data binding to prevents changes from updating the bound data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SuspendBinding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SuspendBinding and <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_ResumeBinding_\" data-linktype=\"relative-path\">ResumeBinding</a> methods allow the temporary suspension and resumption of data binding in a simple binding scenario. You would typically suspend data binding if the user must make several edits to data fields before validation occurs. For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> prevents changes from being applied to the data source until <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_ResumeBinding_\" data-linktype=\"relative-path\">ResumeBinding</a> is called, but does not actually prevent any events from occurring. Controls that use complex data binding, such as the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, update their values based on change events, such as the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event. Therefore, calling <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> will not prevent complex-bound controls from receiving events to update the data source. For this reason, <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> and <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_ResumeBinding_\" data-linktype=\"relative-path\">ResumeBinding</a> are designed for use with simple-bound controls, such as the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. Alternatively, you can use these methods in a complex binding scenario if you suppress <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> events by setting the <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_RaiseListChangedEvents_\" data-linktype=\"relative-path\">RaiseListChangedEvents</a> property to <code>false</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SuspendBinding method.  </p>\n<pre><code class=\"lang-vb\" name=\"BindingManagerBase_Suspend_Resume_Binding#1\">   Private Sub button3_Click(sender As Object, e As EventArgs)\n      Try\n         Dim myBindingManager1 As BindingManagerBase = BindingContext(myDataSet, &quot;Customers&quot;)\n         myBindingManager1.SuspendBinding()\n      Catch ex As Exception\n         MessageBox.Show(ex.Source.ToString())\n         MessageBox.Show(ex.Message.ToString())\n      End Try\n   End Sub &#39;button3_Click\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"BindingManagerBase_Suspend_Resume_Binding#1\">   private void button3_Click(object sender, EventArgs e)\n   {\n      try\n      {\n         BindingManagerBase myBindingManager1=BindingContext [myDataSet, &quot;Customers&quot;];\n         myBindingManager1.SuspendBinding();\n      }\n      catch(Exception ex)\n      {\n         MessageBox.Show(ex.Source);\n         MessageBox.Show(ex.Message);\n      }\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"BindingManagerBase_Suspend_Resume_Binding#1\">   void button3_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      try\n      {\n         BindingManagerBase^ myBindingManager1 = BindingContext[ myDataSet, &quot;Customers&quot; ];\n         myBindingManager1-&gt;SuspendBinding();\n      }\n      catch ( Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;Source );\n         MessageBox::Show( ex-&gt;Message );\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_UpdateIsBinding\">\r\n    \r\n            <a id=\"System_Windows_Forms_CurrencyManager_UpdateIsBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateIsBinding()</div>        \r\n          </div>\r\n    \r\n            <p>Updates the status of the binding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void UpdateIsBinding ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_ItemChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the current item has been altered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ItemChangedEventHandler ItemChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemChanged event will occur when the user calls the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_ResumeBinding_\" data-linktype=\"relative-path\">ResumeBinding</a> or <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_SuspendBinding_\" data-linktype=\"relative-path\">SuspendBinding</a> method.  </p>\n<p> The ItemChanged event occurs only when the item itself has been changed in some manner. For example, if the value of an item is changed from 10 to 42, the event will occur. This should not be confused with the <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> event where the item has been changed to a new item.  </p>\n<p> The event will also occur if the underlying data changes. For example, if you change the value of a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a>, the ItemChanged event will occur.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are creating your own control that uses the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a>, you should use the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_ListChanged\" data-linktype=\"relative-path\">System.ComponentModel.IBindingList.ListChanged</a> instead of the ItemChanged event. The <a class=\"xref\" href=\"system.componentmodel.listchangedeventargs#System_ComponentModel_ListChangedEventArgs_ListChangedType_\" data-linktype=\"relative-path\">ListChangedType</a> property of the <a class=\"xref\" href=\"system.componentmodel.listchangedeventargs\" data-linktype=\"relative-path\">ListChangedEventArgs</a> enables you to determine the type of action that has occurred.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example adds event handlers for the ItemChanged and <a class=\"xref\" href=\"system.windows.forms.bindingmanagerbase#System_Windows_Forms_BindingManagerBase_PositionChanged\" data-linktype=\"relative-path\">PositionChanged</a> events.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic CurrencyManager.ItemChanged Example#1\">   void BindControl( DataTable^ myTable )\n   {\n      \n      // Bind A TextBox control to a DataTable column in a DataSet.\n      textBox1-&gt;DataBindings-&gt;Add( &quot;Text&quot;, myTable, &quot;CompanyName&quot; );\n      \n      // Specify the CurrencyManager for the DataTable.\n      myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(this-&gt;BindingContext[myTable, &quot;&quot;]);\n      \n      // Add event handlers.\n      myCurrencyManager-&gt;ItemChanged += gcnew ItemChangedEventHandler( this, &amp;Form1::CurrencyManager_ItemChanged );\n      myCurrencyManager-&gt;PositionChanged += gcnew EventHandler( this, &amp;Form1::CurrencyManager_PositionChanged );\n      \n      // Set the initial Position of the control.\n      myCurrencyManager-&gt;Position = 0;\n   }\n\n   void CurrencyManager_PositionChanged( Object^ sender, System::EventArgs^ /*e*/ )\n   {\n      CurrencyManager^ myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(sender);\n      Console::WriteLine( &quot;Position Changed {0}&quot;, myCurrencyManager-&gt;Position );\n   }\n\n   void CurrencyManager_ItemChanged( Object^ sender, System::Windows::Forms::ItemChangedEventArgs^ /*e*/ )\n   {\n      CurrencyManager^ myCurrencyManager = dynamic_cast&lt;CurrencyManager^&gt;(sender);\n      Console::WriteLine( &quot;Item Changed {0}&quot;, myCurrencyManager-&gt;Position );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic CurrencyManager.ItemChanged Example#1\">    Private Sub BindControl(myTable As DataTable)\n        &#39; Bind A TextBox control to a DataTable column in a DataSet.\n        textBox1.DataBindings.Add(&quot;Text&quot;, myTable, &quot;CompanyName&quot;)\n        &#39; Specify the CurrencyManager for the DataTable.\n        myCurrencyManager = CType(Me.BindingContext(myTable, &quot;&quot;), CurrencyManager)\n        &#39; Add event handlers.\n        AddHandler myCurrencyManager.ItemChanged, AddressOf CurrencyManager_ItemChanged\n        AddHandler myCurrencyManager.PositionChanged, AddressOf CurrencyManager_PositionChanged\n        &#39; Set the initial Position of the control.\n        myCurrencyManager.Position = 0\n    End Sub &#39;BindControl\n    \n    \n    Private Sub CurrencyManager_PositionChanged(sender As Object, e As System.EventArgs)\n        Dim myCurrencyManager As CurrencyManager = CType(sender, CurrencyManager)\n        Console.WriteLine((&quot;Position Changed &quot; &amp; myCurrencyManager.Position))\n    End Sub &#39;CurrencyManager_PositionChanged\n    \n    \n    Private Sub CurrencyManager_ItemChanged(sender As Object, e As System.Windows.Forms.ItemChangedEventArgs)\n        Dim myCurrencyManager As CurrencyManager = CType(sender, CurrencyManager)\n        Console.WriteLine((&quot;Item Changed &quot; &amp; myCurrencyManager.Position))\n    End Sub &#39;CurrencyManager_ItemChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic CurrencyManager.ItemChanged Example#1\">    private void BindControl(DataTable myTable)\n    {\n        // Bind A TextBox control to a DataTable column in a DataSet.\n        textBox1.DataBindings.Add(&quot;Text&quot;, myTable, &quot;CompanyName&quot;);\n        // Specify the CurrencyManager for the DataTable.\n        myCurrencyManager = (CurrencyManager)this.BindingContext[myTable, &quot;&quot;];\n        // Add event handlers.\n        myCurrencyManager.ItemChanged+=\n        new ItemChangedEventHandler(CurrencyManager_ItemChanged);\n        myCurrencyManager.PositionChanged+= \n        new EventHandler(CurrencyManager_PositionChanged);\n        // Set the initial Position of the control.\n        myCurrencyManager.Position = 0;\n    }\n \n    private void CurrencyManager_PositionChanged(object sender, System.EventArgs e){\n        CurrencyManager myCurrencyManager = (CurrencyManager) sender;\n        Console.WriteLine(&quot;Position Changed &quot; + myCurrencyManager.Position);\n    }\n\n    private void CurrencyManager_ItemChanged(object sender, System.Windows.Forms.ItemChangedEventArgs e){\n        CurrencyManager myCurrencyManager = (CurrencyManager) sender;\n        Console.WriteLine(&quot;Item Changed &quot; + myCurrencyManager.Position);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_ListChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ListChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the list changes or an item in the list changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.ComponentModel.ListChangedEventHandler ListChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ListChanged event is thrown by the <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> class when changes to an item are made using methods such as <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_EndCurrentEdit_\" data-linktype=\"relative-path\">EndCurrentEdit</a>, <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_CancelCurrentEdit_\" data-linktype=\"relative-path\">CancelCurrentEdit</a>, and <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_Refresh_\" data-linktype=\"relative-path\">Refresh</a>. This event can also occur when the data source is edited directly if it implements the <a class=\"xref\" href=\"system.componentmodel.ibindinglistview\" data-linktype=\"relative-path\">IBindingListView</a> interface.  </p>\n<p> The associated <code>OnListChanged</code> method is a private method in this class.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ListChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> named <code>CurrencyManager1</code>. Then ensure that the event handler is associated with the ListChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#192\">private void CurrencyManager1_ListChanged(Object sender, ListChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ListChangedType&quot;, e.ListChangedType );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;NewIndex&quot;, e.NewIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OldIndex&quot;, e.OldIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PropertyDescriptor&quot;, e.PropertyDescriptor );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ListChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#192\">Private Sub CurrencyManager1_ListChanged(sender as Object, e as ListChangedEventArgs) _ \n     Handles CurrencyManager1.ListChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ListChangedType&quot;, e.ListChangedType)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;NewIndex&quot;, e.NewIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OldIndex&quot;, e.OldIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PropertyDescriptor&quot;, e.PropertyDescriptor)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ListChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_CurrencyManager_MetaDataChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MetaDataChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the metadata of the <span class=\"xref\">stem.Windows.Forms.CurrencyManager.List*</span> has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MetaDataChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The metadata of the <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_List_\" data-linktype=\"relative-path\">List</a> consists of the schema of the underlying <a class=\"xref\" href=\"system.windows.forms.binding#System_Windows_Forms_Binding_DataSource_\" data-linktype=\"relative-path\">DataSource</a>. The MetaDataChanged event is raised when that schema has changed. For example, the MetaDataChanged event is raised when a <a class=\"xref\" href=\"system.data.datacolumn\" data-linktype=\"relative-path\">DataColumn</a> is programmatically added to a <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MetaDataChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> named <code>CurrencyManager1</code>. Then ensure that the event handler is associated with the MetaDataChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#193\">private void CurrencyManager1_MetaDataChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the CurrencyManager.MetaDataChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#193\">Private Sub CurrencyManager1_MetaDataChanged(sender as Object, e as EventArgs) _ \n     Handles CurrencyManager1.MetaDataChanged\n\n   MessageBox.Show(&quot;You are in the CurrencyManager.MetaDataChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.CurrencyManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.CurrencyManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.AddNew\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.CancelCurrentEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.CheckEmpty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.Count\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.Current\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.EndCurrentEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.finalType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.GetItemProperties\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.GetListName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.ItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.add_ItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.remove_ItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.List\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.ListChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.add_ListChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.remove_ListChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.listposition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.MetaDataChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.add_MetaDataChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.remove_MetaDataChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.OnCurrentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.OnCurrentItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.OnItemChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.OnMetaDataChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.OnPositionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.Position\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.Refresh\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.ResumeBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.SuspendBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.CurrencyManager.UpdateIsBinding\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"91babcd6-e6cc-9b4d-ea3e-a3fdf83ec734\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\CurrencyManager.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Manages a list of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.CurrencyManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.CurrencyManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.CurrencyManager.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.CurrencyManager","System.Windows.Forms.CurrencyManager.AddNew","System.Windows.Forms.CurrencyManager.CancelCurrentEdit","System.Windows.Forms.CurrencyManager.CheckEmpty","System.Windows.Forms.CurrencyManager.Count","System.Windows.Forms.CurrencyManager.Current","System.Windows.Forms.CurrencyManager.EndCurrentEdit","System.Windows.Forms.CurrencyManager.finalType","System.Windows.Forms.CurrencyManager.GetItemProperties","System.Windows.Forms.CurrencyManager.GetListName","System.Windows.Forms.CurrencyManager.ItemChanged","System.Windows.Forms.CurrencyManager.add_ItemChanged","System.Windows.Forms.CurrencyManager.remove_ItemChanged","System.Windows.Forms.CurrencyManager.List","System.Windows.Forms.CurrencyManager.ListChanged","System.Windows.Forms.CurrencyManager.add_ListChanged","System.Windows.Forms.CurrencyManager.remove_ListChanged","System.Windows.Forms.CurrencyManager.listposition","System.Windows.Forms.CurrencyManager.MetaDataChanged","System.Windows.Forms.CurrencyManager.add_MetaDataChanged","System.Windows.Forms.CurrencyManager.remove_MetaDataChanged","System.Windows.Forms.CurrencyManager.OnCurrentChanged","System.Windows.Forms.CurrencyManager.OnCurrentItemChanged","System.Windows.Forms.CurrencyManager.OnItemChanged","System.Windows.Forms.CurrencyManager.OnMetaDataChanged","System.Windows.Forms.CurrencyManager.OnPositionChanged","System.Windows.Forms.CurrencyManager.Position","System.Windows.Forms.CurrencyManager.Refresh","System.Windows.Forms.CurrencyManager.RemoveAt","System.Windows.Forms.CurrencyManager.ResumeBinding","System.Windows.Forms.CurrencyManager.SuspendBinding","System.Windows.Forms.CurrencyManager.UpdateIsBinding"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.CurrencyManager","System::Windows::Forms::CurrencyManager","System.Windows.Forms.CurrencyManager.AddNew","System::Windows::Forms::CurrencyManager::AddNew","System.Windows.Forms.CurrencyManager.CancelCurrentEdit","System::Windows::Forms::CurrencyManager::CancelCurrentEdit","System.Windows.Forms.CurrencyManager.CheckEmpty","System::Windows::Forms::CurrencyManager::CheckEmpty","System.Windows.Forms.CurrencyManager.Count","System::Windows::Forms::CurrencyManager::Count","System.Windows.Forms.CurrencyManager.Current","System::Windows::Forms::CurrencyManager::Current","System.Windows.Forms.CurrencyManager.EndCurrentEdit","System::Windows::Forms::CurrencyManager::EndCurrentEdit","System.Windows.Forms.CurrencyManager.finalType","System::Windows::Forms::CurrencyManager::finalType","System.Windows.Forms.CurrencyManager.GetItemProperties","System::Windows::Forms::CurrencyManager::GetItemProperties","System.Windows.Forms.CurrencyManager.GetListName","System::Windows::Forms::CurrencyManager::GetListName","System.Windows.Forms.CurrencyManager.ItemChanged","System::Windows::Forms::CurrencyManager::ItemChanged","System.Windows.Forms.CurrencyManager.List","System::Windows::Forms::CurrencyManager::List","System.Windows.Forms.CurrencyManager.ListChanged","System::Windows::Forms::CurrencyManager::ListChanged","System.Windows.Forms.CurrencyManager.listposition","System::Windows::Forms::CurrencyManager::listposition","System.Windows.Forms.CurrencyManager.MetaDataChanged","System::Windows::Forms::CurrencyManager::MetaDataChanged","System.Windows.Forms.CurrencyManager.OnCurrentChanged","System::Windows::Forms::CurrencyManager::OnCurrentChanged","System.Windows.Forms.CurrencyManager.OnCurrentItemChanged","System::Windows::Forms::CurrencyManager::OnCurrentItemChanged","System.Windows.Forms.CurrencyManager.OnItemChanged","System::Windows::Forms::CurrencyManager::OnItemChanged","System.Windows.Forms.CurrencyManager.OnMetaDataChanged","System::Windows::Forms::CurrencyManager::OnMetaDataChanged","System.Windows.Forms.CurrencyManager.OnPositionChanged","System::Windows::Forms::CurrencyManager::OnPositionChanged","System.Windows.Forms.CurrencyManager.Position","System::Windows::Forms::CurrencyManager::Position","System.Windows.Forms.CurrencyManager.Refresh","System::Windows::Forms::CurrencyManager::Refresh","System.Windows.Forms.CurrencyManager.RemoveAt","System::Windows::Forms::CurrencyManager::RemoveAt","System.Windows.Forms.CurrencyManager.ResumeBinding","System::Windows::Forms::CurrencyManager::ResumeBinding","System.Windows.Forms.CurrencyManager.SuspendBinding","System::Windows::Forms::CurrencyManager::SuspendBinding","System.Windows.Forms.CurrencyManager.UpdateIsBinding","System::Windows::Forms::CurrencyManager::UpdateIsBinding"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"91babcd6-e6cc-9b4d-ea3e-a3fdf83ec734","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\CurrencyManager.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/CurrencyManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CurrencyManager class | Microsoft Docs","_op_ogTitle":"CurrencyManager class","description":"Manages a list of  objects.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.CurrencyManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.currencymanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.currencymanager","fileRelativePath":"System.Windows.Forms.CurrencyManager.html"},"themesRelativePathToOutputRoot":"_themes/"}