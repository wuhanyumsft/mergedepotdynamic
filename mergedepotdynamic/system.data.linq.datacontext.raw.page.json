{"content":"    \r\n    <h1 id=\"System_Data_Linq_DataContext\">\r\n      <span class=\"lang-csharp\">DataContext</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the main entry point for the LINQ to SQL framework.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DataContext : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataContext</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataContext is the source of all entities mapped over a database connection. It tracks changes that you made to all retrieved entities and maintains an &quot;identity cache&quot; that guarantees that entities retrieved more than one time are represented by using the same object instance.  </p>\n<p> In general, a DataContext instance is designed to last for one &quot;unit of work&quot; however your application defines that term. A DataContext is lightweight and is not expensive to create. A typical LINQ to SQL application creates DataContext instances at method scope or as a member of short-lived classes that represent a logical set of related database operations.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext__ctor_System_Data_IDbConnection_\" data-linktype=\"self-bookmark\">DataContext(IDbConnection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing the connection used by the .NET Framework.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext__ctor_System_String_\" data-linktype=\"self-bookmark\">DataContext(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing a file source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext__ctor_System_Data_IDbConnection_System_Data_Linq_Mapping_MappingSource_\" data-linktype=\"self-bookmark\">DataContext(IDbConnection,MappingSource)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing a connection and a mapping source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext__ctor_System_String_System_Data_Linq_Mapping_MappingSource_\" data-linktype=\"self-bookmark\">DataContext(String,MappingSource)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing a file source and a mapping source.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ChangeConflicts\" data-linktype=\"self-bookmark\">ChangeConflicts</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of objects that caused concurrency conflicts when <span class=\"xref\">stem.Data.Linq.DataContext.SubmitChanges*</span> was called.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_CommandTimeout\" data-linktype=\"self-bookmark\">CommandTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Connection\" data-linktype=\"self-bookmark\">Connection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the connection used by the framework.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_DeferredLoadingEnabled\" data-linktype=\"self-bookmark\">DeferredLoadingEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_LoadOptions\" data-linktype=\"self-bookmark\">LoadOptions</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a> associated with this <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Log\" data-linktype=\"self-bookmark\">Log</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the destination to write the SQL query or command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Mapping\" data-linktype=\"self-bookmark\">Mapping</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.data.linq.mapping.metamodel\" data-linktype=\"relative-path\">MetaModel</a> on which the mapping is based.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ObjectTrackingEnabled\" data-linktype=\"self-bookmark\">ObjectTrackingEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether object tracking is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Transaction\" data-linktype=\"self-bookmark\">Transaction</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a local transaction for the .NET Framework to use to access the database.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_CreateDatabase\" data-linktype=\"self-bookmark\">CreateDatabase()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a database on the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_CreateMethodCallQuery__1_System_Object_System_Reflection_MethodInfo_System_Object___\" data-linktype=\"self-bookmark\">CreateMethodCallQuery&lt;TResult&gt;(Object,MethodInfo,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the table-valued database function associated with the specified CLR method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_DatabaseExists\" data-linktype=\"self-bookmark\">DatabaseExists()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the associated database can be opened.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_DeleteDatabase\" data-linktype=\"self-bookmark\">DeleteDatabase()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the associated database.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class and optionally releases the managed resource.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteCommand_System_String_System_Object___\" data-linktype=\"self-bookmark\">ExecuteCommand(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes SQL commands directly on the database.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteDynamicDelete_System_Object_\" data-linktype=\"self-bookmark\">ExecuteDynamicDelete(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes, inside delete override methods, to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for delete operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteDynamicInsert_System_Object_\" data-linktype=\"self-bookmark\">ExecuteDynamicInsert(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes, inside insert override methods, to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for insert operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteDynamicUpdate_System_Object_\" data-linktype=\"self-bookmark\">ExecuteDynamicUpdate(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes, inside update override methods, to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for update operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteMethodCall_System_Object_System_Reflection_MethodInfo_System_Object___\" data-linktype=\"self-bookmark\">ExecuteMethodCall(Object,MethodInfo,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the stored database procedure or scalar function associated with the specified CLR method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteQuery_System_Type_System_String_System_Object___\" data-linktype=\"self-bookmark\">ExecuteQuery(Type,String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes SQL queries directly on the database.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_ExecuteQuery__1_System_String_System_Object___\" data-linktype=\"self-bookmark\">ExecuteQuery&lt;TResult&gt;(String,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes SQL queries directly on the database and returns objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_GetChangeSet\" data-linktype=\"self-bookmark\">GetChangeSet()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the modified objects tracked by <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_GetCommand_System_Linq_IQueryable_\" data-linktype=\"self-bookmark\">GetCommand(IQueryable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the information about SQL commands generated by LINQ to SQL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_GetTable_System_Type_\" data-linktype=\"self-bookmark\">GetTable(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of objects of a particular type, where the type is defined by the <code>type</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_GetTable__1\" data-linktype=\"self-bookmark\">GetTable&lt;TEntity&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a collection of objects of a particular type, where the type is defined by the <code>TEntity</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Refresh_System_Data_Linq_RefreshMode_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">Refresh(RefreshMode,IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Refreshes a collection of entity objects according to the specified mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Refresh_System_Data_Linq_RefreshMode_System_Object_\" data-linktype=\"self-bookmark\">Refresh(RefreshMode,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Refreshes an entity object according to the specified mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Refresh_System_Data_Linq_RefreshMode_System_Object___\" data-linktype=\"self-bookmark\">Refresh(RefreshMode,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Refreshes an array of entity objects according to the specified mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_SubmitChanges\" data-linktype=\"self-bookmark\">SubmitChanges()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_SubmitChanges_System_Data_Linq_ConflictMode_\" data-linktype=\"self-bookmark\">SubmitChanges(ConflictMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Translate_System_Data_Common_DbDataReader_\" data-linktype=\"self-bookmark\">Translate(DbDataReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts an existing <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a> to objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Translate_System_Type_System_Data_Common_DbDataReader_\" data-linktype=\"self-bookmark\">Translate(Type,DbDataReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts an existing <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a> to objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_DataContext_Translate__1_System_Data_Common_DbDataReader_\" data-linktype=\"self-bookmark\">Translate&lt;TResult&gt;(DbDataReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts an existing <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a> to objects.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext__ctor_System_Data_IDbConnection_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataContext(IDbConnection)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing the connection used by the .NET Framework.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataContext (System.Data.IDbConnection connection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>connection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbconnection\" data-linktype=\"relative-path\">IDbConnection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The connection used by the .NET Framework.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> opens and closes a database connection as needed if you provide a closed connection or a connection string. In general, you should never have to call <code>Dispose</code> on a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>. If you provide an open connection, the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> will not close it. Therefore, do not instantiate a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> with an open connection unless you have a good reason to do this. In a <a class=\"xref\" href=\"system.transactions\" data-linktype=\"relative-path\">System.Transactions</a> transaction, a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> will not open or close a connection to avoid promotion.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataContext(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing a file source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataContext (string fileOrServerOrConnection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileOrServerOrConnection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This argument can be any one of the following:  </p>\n<p> The name of a file where a SQL Server Express database resides.  </p>\n<p> The name of a server where a database is present. In this case the provider uses the default database for a user.  </p>\n<p> A complete connection string. LINQ to SQL just passes the string to the provider without modification.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext__ctor_System_Data_IDbConnection_System_Data_Linq_Mapping_MappingSource_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataContext(IDbConnection,MappingSource)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing a connection and a mapping source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataContext (System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mapping);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>connection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.idbconnection\" data-linktype=\"relative-path\">IDbConnection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The connection used by the .NET Framework.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mapping</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.mapping.mappingsource\" data-linktype=\"relative-path\">MappingSource</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A source for mapping.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext__ctor_System_String_System_Data_Linq_Mapping_MappingSource_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataContext(String,MappingSource)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class by referencing a file source and a mapping source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataContext (string fileOrServerOrConnection, System.Data.Linq.Mapping.MappingSource mapping);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileOrServerOrConnection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>This argument can be any one of the following:  </p>\n<p> The name of a file where a SQL Server Express database resides.  </p>\n<p> The name of a server where a database is present. In this case the provider uses the default database for a user.  </p>\n<p> A complete connection string. LINQ to SQL just passes the string to the provider without modification.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mapping</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.mapping.mappingsource\" data-linktype=\"relative-path\">MappingSource</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A source for mapping.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ChangeConflicts\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ChangeConflicts_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ChangeConflicts</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of objects that caused concurrency conflicts when <span class=\"xref\">stem.Data.Linq.DataContext.SubmitChanges*</span> was called.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.ChangeConflictCollection ChangeConflicts { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.changeconflictcollection\" data-linktype=\"relative-path\">ChangeConflictCollection</a></div>\r\n                  </div>\r\n                  <p>A collection of objects that caused concurrency conflicts.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following example shows how the collection can be iterated over to retrieve conflict information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"System.Data.Linq.ObjectChangeConflict#1\">Northwnd db = new Northwnd(&quot;...&quot;);\n\ntry\n{\n    db.SubmitChanges(ConflictMode.ContinueOnConflict);\n}\n\ncatch (ChangeConflictException e)\n{\n    Console.WriteLine(&quot;Optimistic concurrency error.&quot;);\n    Console.WriteLine(e.Message);\n    foreach (ObjectChangeConflict occ in db.ChangeConflicts)\n    {\n        MetaTable metatable = db.Mapping.GetTable(occ.Object.GetType());\n        Customer entityInConflict = (Customer)occ.Object;\n        Console.WriteLine(&quot;Table name: {0}&quot;, metatable.TableName);\n        Console.Write(&quot;Customer ID: &quot;);\n        Console.WriteLine(entityInConflict.CustomerID);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.ObjectChangeConflict#1\">Dim db As New Northwnd(&quot;...&quot;)\n\nTry\n    db.SubmitChanges(ConflictMode.ContinueOnConflict)\n\nCatch ex As ChangeConflictException\n    Console.WriteLine(&quot;Optimistic concurrency error.&quot;)\n    Console.WriteLine(ex.Message)\n    For Each occ As ObjectChangeConflict In db.ChangeConflicts\n        Dim metatable As MetaTable = db.Mapping.GetTable(occ.Object.GetType())\n        Dim entityInConflict = occ.Object\n\n        Console.WriteLine(&quot;Table name: &quot; &amp; metatable.TableName)\n        Console.Write(&quot;Customer ID: &quot;)\n        Console.WriteLine(entityInConflict.CustomerID)\n        Console.ReadLine()\n    Next\nEnd Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_CommandTimeout\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_CommandTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that increases the time-out period for queries that would otherwise time out during the default time-out period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CommandTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer value that increases the time-out period for queries that would otherwise time out during the default time-out period.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gets or sets the command time-out used to execute generated commands (<code>IDbCommands</code>). For more information, see <a class=\"xref\" href=\"system.data.idbcommand#System_Data_IDbCommand_CommandTimeout_\" data-linktype=\"relative-path\">CommandTimeout</a>.  </p>\n<p> When this property is not set, the default value of <a class=\"xref\" href=\"system.data.idbcommand#System_Data_IDbCommand_CommandTimeout_\" data-linktype=\"relative-path\">CommandTimeout</a> is used for query command execution. This default value is set by the storage provider. Note that some providers may throw exceptions if this value is set to a non-zero value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Connection\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Connection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connection</div>        \r\n          </div>\r\n    \r\n            <p>Gets the connection used by the framework.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Common.DbConnection Connection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbconnection\" data-linktype=\"relative-path\">DbConnection</a></div>\r\n                  </div>\r\n                  <p>The connection used by the framework.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to interoperate with relational ADO.NET code.  </p>\n<p> The returned connection will be closed unless it has been explicitly opened by the user.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_DeferredLoadingEnabled\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_DeferredLoadingEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeferredLoadingEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to delay-load one-to-many or one-to-one relationships.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DeferredLoadingEnabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if deferred loading is enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the code accesses one of these relationships, null is returned if the relationship is one-to-one, and an empty collection is returned if it is one-to-many. The relationships can still be filled by setting the <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_LoadOptions_\" data-linktype=\"relative-path\">LoadOptions</a> property.  </p>\n<p> The main scenario for this property is to enable you to extract a piece of the object model and send it out (for example, to a Web service).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If this property is set to <code>false</code> after a query has been executed, an exception is thrown. See the <strong>Valid Modes</strong> section below for more information.  </p>\n</div>\n<h2 id=\"valid-modes\">Valid modes</h2>\n<p> Deferred loading requires object tracking. Only the following three modes are valid:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_ObjectTrackingEnabled_\" data-linktype=\"relative-path\">ObjectTrackingEnabled</a> = <code>false</code>. DeferredLoadingEnabled is ignored and inferred to be <code>false</code>. This behavior corresponds to a read-only <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_ObjectTrackingEnabled_\" data-linktype=\"relative-path\">ObjectTrackingEnabled</a> = <code>true</code>. DeferredLoadingEnabled = <code>false</code>. This situation corresponds to a <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> that allows users to load an object graph by using <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> directives, but it does not enable deferred loading.  </p>\n</li>\n<li><p>Both are set to <code>true</code>. This is the default.  </p>\n<p>The flags may not be changed after a query has been executed. Any change after the execution of the first query that uses that <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> throws an exception.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_LoadOptions\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_LoadOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadOptions</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a> associated with this <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.DataLoadOptions LoadOptions { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.dataloadoptions\" data-linktype=\"relative-path\">DataLoadOptions</a></div>\r\n                  </div>\r\n                  <p>The prefetch load options for related data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gets or sets the options that are used to define prefetch behavior for deferred-loaded members and membership of related collections.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Log\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Log_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Log</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the destination to write the SQL query or command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.TextWriter Log { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> to use for writing the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Set this property to <code>null</code> to disable command logging.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays generated SQL in the console window before it displays the results of the query.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataContext#2\">db.Log = Console.Out\nDim custQuery = _\nFrom cust In db.Customers _\nWhere cust.City = &quot;London&quot; _\nSelect cust\n\nFor Each custObj In custQuery\n    Console.WriteLine(custObj.ContactName)\nNext\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataContext#2\">db.Log = Console.Out;\nvar custQuery =\n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n\nforeach (var custObj in custQuery)\n{\n    Console.WriteLine(custObj.ContactName);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Mapping\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Mapping_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Mapping</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.data.linq.mapping.metamodel\" data-linktype=\"relative-path\">MetaModel</a> on which the mapping is based.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.Mapping.MetaModel Mapping { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.mapping.metamodel\" data-linktype=\"relative-path\">MetaModel</a></div>\r\n                  </div>\r\n                  <p>The mapping between a database and domain objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ObjectTrackingEnabled\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ObjectTrackingEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectTrackingEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether object tracking is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ObjectTrackingEnabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the object tracking is enabled; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property to <code>false</code> improves performance at retrieval time, because there are fewer items to track.  </p>\n<p> An exception is thrown:  </p>\n<ul>\n<li><p>If the property is set to <code>false</code> after a query has been executed.  </p>\n<p> For more information, see the Valid Modes section in <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.  </p>\n</li>\n<li><p>If the property is set to <code>false</code> and <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> is called.  </p>\n<p>If ObjectTrackingEnabled is <code>false</code>, <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_DeferredLoadingEnabled_\" data-linktype=\"relative-path\">DeferredLoadingEnabled</a> is ignored and treated as <code>false</code>. In this case, the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> is read-only.  </p>\n<p>If ObjectTrackingEnabled is <code>true</code>, <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_DeferredLoadingEnabled_\" data-linktype=\"relative-path\">DeferredLoadingEnabled</a> is <code>false</code>. In this case, <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> allows you to load an object graph by using <a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a> directives, but does not enable deferred loading.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Transaction\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Transaction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transaction</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a local transaction for the .NET Framework to use to access the database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Common.DbTransaction Transaction { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbtransaction\" data-linktype=\"relative-path\">DbTransaction</a></div>\r\n                  </div>\r\n                  <p>The transaction object used by the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> when executing queries and commands.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The primary scenario for this property is interoperability with relational ADO.NET code. For example, use this property when you write your own <code>Create</code>/<code>Update</code>/<code>Delete</code> methods to set the <code>Transaction</code> property on the ADO <code>Command</code> object.  </p>\n<p> Note the following:  </p>\n<ul>\n<li><p>If this property has not been explicitly set, the getter returns null.  </p>\n</li>\n<li><p>If the code is executing in a <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> context, setting this property throws an exception.  </p>\n</li>\n<li><p>If this property is set and a new <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a> is opened, an exception is thrown when a query or update is executed.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_CreateDatabase\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_CreateDatabase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateDatabase()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a database on the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CreateDatabase ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The name of the database is derived by using the following algorithm:  </p>\n<ul>\n<li><p>If a database is identified in the connection string, its name is used.  </p>\n</li>\n<li><p>If a <a class=\"xref\" href=\"system.data.linq.mapping.databaseattribute\" data-linktype=\"relative-path\">DatabaseAttribute</a> attribute is present, its <a class=\"xref\" href=\"system.data.linq.mapping.databaseattribute#System_Data_Linq_Mapping_DatabaseAttribute_Name_\" data-linktype=\"relative-path\">Name</a> property is used as the name of the database.  </p>\n</li>\n<li><p>If there is no database tag in the connection string and a strongly typed <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> is used, a database that has the same name as the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> inheriting class is checked.  </p>\n</li>\n<li><p>If a weakly typed <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> is used, an exception is thrown.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> has been created by using a file name, the database corresponding to that file name is created.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to set up a temporary database and then remove it.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataContext#1\">If Not db.DatabaseExists Then\n    db.CreateDatabase()\nEnd If\n&#39; ...\ndb.DeleteDatabase()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataContext#1\">if (!db.DatabaseExists())\n    db.CreateDatabase();\n// …\ndb.DeleteDatabase();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_CreateMethodCallQuery__1_System_Object_System_Reflection_MethodInfo_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_CreateMethodCallQuery_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateMethodCallQuery&lt;TResult&gt;(Object,MethodInfo,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the table-valued database function associated with the specified CLR method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Linq.IQueryable&lt;TResult&gt; CreateMethodCallQuery&lt;TResult&gt; (object instance, System.Reflection.MethodInfo methodInfo, object[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instance</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The instance of the method invocation (the current object).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> that identifies the CLR method that corresponds to a database method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of parameters to be passed to the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.iqueryable-1\" data-linktype=\"relative-path\">IQueryable</a>&lt;<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of resultant values returned by the database query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateMethodCallQuery(TResult) method is used in automatically generated code and acts as a proxy to database functions.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_DatabaseExists\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_DatabaseExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DatabaseExists()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the associated database can be opened.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DatabaseExists ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified database can be opened; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method uses the connection in the <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_Connection_\" data-linktype=\"relative-path\">Connection</a> property to attempt to open the associated database.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses this method to determine whether a database already exists.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataContext#1\">If Not db.DatabaseExists Then\n    db.CreateDatabase()\nEnd If\n&#39; ...\ndb.DeleteDatabase()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataContext#1\">if (!db.DatabaseExists())\n    db.CreateDatabase();\n// …\ndb.DeleteDatabase();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_DeleteDatabase\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_DeleteDatabase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteDatabase()</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the associated database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DeleteDatabase ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method uses the connection in the <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_Connection_\" data-linktype=\"relative-path\">Connection</a> property to identify the database to be deleted.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to delete a database that has been temporarily created.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Data.Linq.DataContext#1\">If Not db.DatabaseExists Then\n    db.CreateDatabase()\nEnd If\n&#39; ...\ndb.DeleteDatabase()\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Data.Linq.DataContext#1\">if (!db.DatabaseExists())\n    db.CreateDatabase();\n// …\ndb.DeleteDatabase();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Dispose\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> class and optionally releases the managed resource.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteCommand_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteCommand(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes SQL commands directly on the database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ExecuteCommand (string command, object[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SQL command to be executed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of parameters to be passed to the command. Note the following behavior:  </p>\n<p> If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  </p>\n<p> If the array contains objects that are not referenced in the command string, no exception is thrown.  </p>\n<p> If any one of the parameters is null, it is converted to <code>DBNull.Value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows modified by the executed command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a pass-through mechanism for cases where LINQ to SQL does not adequately provide for a particular scenario.  </p>\n<p> The syntax for the command is almost the same as the syntax used to create an ADO.NET <code>DataCommand</code>. The only difference is in how the parameters are specified. Specifically, you specify parameters by enclosing them in braces ({…}) and enumerate them starting from 0. The parameter is associated with the equally numbered object in the parameters array.  </p>\n<p> <code>ExecuteQuery</code> and <code>ExecuteCommand</code> allow you to specify a variable number of arguments for parameter substitution. For example, you can specify the parameters when invoking ExecuteQuery&lt;TResult&gt;:  </p>\n<pre><code>db.ExecuteQuery&lt;Customer&gt;(&quot;select * from dbo.Customers where City = {0}&quot;, &quot;London&quot;);  \n</code></pre><p> And, another example:  </p>\n<pre><code>db.ExecuteCommand(&quot;UPDATE Products SET QuantityPerUnit = {0} WHERE ProductID = {1}&quot;, &quot;24 boxes&quot;, 5);  \n</code></pre><p> The following example opens a connection and passes a SQL <code>UPDATE</code> command to the SQL engine.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DLinqCommunicatingWithDatabase#3\">db.ExecuteCommand(&quot;UPDATE Products SET UnitPrice = UnitPrice + 1.00&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"DLinqCommunicatingWithDatabase#3\">    db.ExecuteCommand _\n(&quot;UPDATE Products SET UnitPrice = UnitPrice + 1.00&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteDynamicDelete_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteDynamicDelete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteDynamicDelete(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes, inside delete override methods, to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for delete operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ExecuteDynamicDelete (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be deleted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_ExecuteDynamicInsert_\" data-linktype=\"relative-path\">ExecuteDynamicInsert</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteDynamicInsert_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteDynamicInsert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteDynamicInsert(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes, inside insert override methods, to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for insert operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ExecuteDynamicInsert (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Note the following considerations:  </p>\n<ul>\n<li><p>Because the method has a protected modifier, its use requires subclassing <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.  </p>\n</li>\n<li><p>An exception is thrown if this operation is not called inside a <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> operation. It is not intended to be called as a stand-alone operation outside the scope of a <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> operation. <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> itself calls override methods if they are implemented and the previous methods are intended to be called inside the override methods.  </p>\n</li>\n<li><p>It is the responsibility of the developer to pass in the correct entity. The implementation verifies that the passed-in entity is tracked. However, it is the responsibility of the developer to maintain the order or pass in the same entity two times.  </p>\n</li>\n<li><p>It is the responsibility of the developer to invoke the correct dynamic API. For example, in the <code>Update</code> override method, only the <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_ExecuteDynamicUpdate_\" data-linktype=\"relative-path\">ExecuteDynamicUpdate</a> method can be called. LINQ to SQL does not detect or verify whether the invoked dynamic method matches the applicable operation. The results are undefined if an inapplicable method is called (for example, calling <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_ExecuteDynamicDelete_\" data-linktype=\"relative-path\">ExecuteDynamicDelete</a> for an object to be updated).</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteDynamicUpdate_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteDynamicUpdate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteDynamicUpdate(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes, inside update override methods, to redelegate to LINQ to SQL the task of generating and executing dynamic SQL for update operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ExecuteDynamicUpdate (object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The entity to be updated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_ExecuteDynamicInsert_\" data-linktype=\"relative-path\">ExecuteDynamicInsert</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteMethodCall_System_Object_System_Reflection_MethodInfo_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteMethodCall_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteMethodCall(Object,MethodInfo,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes the stored database procedure or scalar function associated with the specified CLR method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Data.Linq.IExecuteResult ExecuteMethodCall (object instance, System.Reflection.MethodInfo methodInfo, object[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instance</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The instance of the method invocation (the current object).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the CLR method that corresponds to a database method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of parameters to be passed to the command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.iexecuteresult\" data-linktype=\"relative-path\">IExecuteResult</a></div>\r\n                  </div>\r\n                  <p>The result (the return value and output parameters) of executing the specified method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExecuteMethodCall method is used in automatically generated code and acts as a proxy to database functions.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteQuery_System_Type_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteQuery_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteQuery(Type,String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes SQL queries directly on the database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerable ExecuteQuery (Type elementType, string query, object[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span> to be returned.  </p>\n<p> The algorithm for matching columns in the result of the query to fields or properties in the object works as follows:  </p>\n<p> If a field or property is mapped to a particular column name, that column name is expected in the resultset.  </p>\n<p> If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  </p>\n<p> The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search occurs for a case-insensitive match.  </p>\n<p> The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  </p>\n<p> <code>T</code> is an entity explicitly tracked by the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.  </p>\n<p> <span class=\"xref\">stem.Data.Linq.DataContext.ObjectTrackingEnabled*</span> is <code>true</code>.  </p>\n<p> The entity has a primary key.  </p>\n<p> Otherwise an exception is thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SQL query to be executed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of parameters to be passed to the command. Note the following behavior:  </p>\n<p> If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  </p>\n<p> If the array contains objects that are not referenced in the command string, no exception is thrown.  </p>\n<p> If a parameter is <code>null</code>, it is converted to <code>DBNull.Value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </div>\r\n                  <p>An <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span> collection of objects returned by the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_ExecuteQuery__1_System_String_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_ExecuteQuery_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteQuery&lt;TResult&gt;(String,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Executes SQL queries directly on the database and returns objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerable&lt;TResult&gt; ExecuteQuery&lt;TResult&gt; (string query, object[] parameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SQL query to be executed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>parameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of parameters to be passed to the command. Note the following behavior:  </p>\n<p> If the number of objects in the array is less than the highest number identified in the command string, an exception is thrown.  </p>\n<p> If the array contains objects that are not referenced in the command string, no exception is thrown.  </p>\n<p> If a parameter is null, it is converted to <code>DBNull.Value</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of objects returned by the query.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a pass-through mechanism for cases where LINQ to SQL does not provide for a particular scenario.  </p>\n<p> The algorithm for matching columns in the result of the query to fields and properties in the object works as follows:  </p>\n<ul>\n<li><p>If a field or property is mapped to a particular column name, that column name is expected in the resultset.  </p>\n</li>\n<li><p>If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  </p>\n</li>\n<li><p>The comparison is performed by first looking for a case-sensitive match. If such a match is not found, a subsequent search occurs for a case-insensitive match.  </p>\n</li>\n<li><p>The query must return all the tracked fields and properties of the object (apart from those subject to deferred loading) when all the following are true:  </p>\n<ul>\n<li><p>If <code>&lt;T&gt;</code> is an entity explicitly tracked by the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.  </p>\n</li>\n<li><p>ObjectTrackingEnabled is true.  </p>\n</li>\n<li><p>The entity has a primary key.  </p>\n<p>Otherwise an exception is thrown.  </p>\n</li>\n</ul>\n</li>\n<li><p>In all other cases, the query can retrieve just a subset of the tracked fields and properties for the object.  </p>\n<p>The following C# snippet shows one use for this method:  </p>\n</li>\n</ul>\n<pre><code>var customers = db.ExecuteQuery&lt;Customer&gt;(@&quot;SELECT CustomerID, CompanyName, ContactName, ContactTitle,   \n   Address, City, Region, PostalCode, Country, Phone, Fax  \n   FROM   dbo.Customers  \n   WHERE  City = {0}&quot;, &quot;London&quot;);  \n\nforeach (Customer c in customers)  \n   Console.WriteLine(c.ContactName);  \n</code></pre><p> In Visual Basic  </p>\n<pre><code>Dim customers = db.ExecuteQuery(Of Customer)(&quot;SELECT CustomerID, _    CompanyName, ContactName, ContactTitle, _  \n   Address, City, Region, PostalCode, Country, Phone, Fax _  \n   FROM dbo.Customers _  \nWHERE City = {0}&quot;, &quot;London&quot;)  \n\nFor Each c As Customer In customers  \n    Console.WriteLine(c.ContactName)  \nNext  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_GetChangeSet\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_GetChangeSet_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChangeSet()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the modified objects tracked by <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.ChangeSet GetChangeSet ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.changeset\" data-linktype=\"relative-path\">ChangeSet</a></div>\r\n                  </div>\r\n                  <p>The set of objects is returned as three read-only collections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Note the following considerations:  </p>\n<ul>\n<li><p>GetChangeSet might have side effects, such as inference of insert and delete operations that are usually performed at the time of <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a>. For example, objects that are used in the following operations can create corresponding inferred operations in the following list:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.data.linq.entityset-1#System_Data_Linq_EntitySet_1_Add_\" data-linktype=\"relative-path\">Add</a> to <a class=\"xref\" href=\"system.data.linq.table-1#System_Data_Linq_Table_1_InsertOnSubmit_\" data-linktype=\"relative-path\">InsertOnSubmit</a>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.data.linq.entityref-1\" data-linktype=\"relative-path\">EntityRef&lt;TEntity&gt;</a> assignment to null (possibly because of <a class=\"xref\" href=\"system.data.linq.entityset-1#System_Data_Linq_EntitySet_1_Remove_\" data-linktype=\"relative-path\">Remove</a> to <a class=\"xref\" href=\"system.data.linq.table-1#System_Data_Linq_Table_1_DeleteOnSubmit_\" data-linktype=\"relative-path\">DeleteOnSubmit</a>.  </p>\n</li>\n</ul>\n</li>\n<li><p>The set may not be ordered according to foreign key constraints.  </p>\n</li>\n<li><p>Database-generated values (for example, primary and foreign key values, timestamps, and so forth) are not available. Such information requires database command execution and perhaps the propagation of retrieved information (for example, foreign key from primary key).  </p>\n</li>\n<li><p>The set of changed objects is computed at the time of the call. Subsequent calls to <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> can produce a different set if additional changes are made.  </p>\n<p>Output when no changes have been made appears as follows:  </p>\n<p><code>{Added: 0, Removed: 0, Modified: 0}</code></p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"DLinqDebuggingSupport#2\">Dim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\nDim custQuery = _\n    From cust In db.Customers _\n    Where (cust.City = &quot;London&quot;) _\n    Select cust\n\nFor Each custObj As Customer In custQuery\n    Console.WriteLine(&quot;CustomerID: {0}&quot;, custObj.CustomerID)\n    Console.WriteLine(vbTab &amp; &quot;Original value: {0}&quot;, custObj.City)\n    custObj.City = &quot;Paris&quot;\n    Console.WriteLine(vbTab &amp; &quot;Updated value: {0}&quot;, custObj.City)\nNext\n\nDim cs As ChangeSet = db.GetChangeSet()\nConsole.Write(&quot;Total changes: {0}&quot;, cs)\n&#39; Freeze the console window.\nConsole.ReadLine()\n\ndb.SubmitChanges()\n</code></pre><pre><code class=\"lang-cs\" name=\"DLinqDebuggingSupport#2\">Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\n\nvar custQuery =\n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n  \nforeach (Customer custObj in custQuery)\n{\n    Console.WriteLine(&quot;CustomerID: {0}&quot;, custObj.CustomerID);\n    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;Original value: {0}&quot;, custObj.City);\n    custObj.City = &quot;Paris&quot;;\n    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;Updated value: {0}&quot;, custObj.City);\n}\n           \nChangeSet cs = db.GetChangeSet();\nConsole.Write(&quot;Total changes: {0}&quot;, cs);\n// Freeze the console window.\nConsole.ReadLine();\n\ndb.SubmitChanges();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_GetCommand_System_Linq_IQueryable_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_GetCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCommand(IQueryable)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the information about SQL commands generated by LINQ to SQL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Common.DbCommand GetCommand (System.Linq.IQueryable query);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>query</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.iqueryable\" data-linktype=\"relative-path\">IQueryable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The query whose SQL command information is to be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbcommand\" data-linktype=\"relative-path\">DbCommand</a></div>\r\n                  </div>\r\n                  <p>The requested command information object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is only a getter and does not affect <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> state.  </p>\n<p> Note the following considerations:  </p>\n<ul>\n<li><p>The argument must be non-null. Otherwise, a null argument exception is thrown.  </p>\n</li>\n<li><p>Normal query translation exceptions thrown during LINQ to SQL query execution apply for a query that cannot be translated.  </p>\n</li>\n<li><p>Only the first query command is returned. Specifically, additional commands that are used for eager loading (<a class=\"xref\" href=\"system.data.linq.dataloadoptions#System_Data_Linq_DataLoadOptions_LoadWith_\" data-linktype=\"relative-path\">LoadWith</a>) are not included.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> does not track what the user does with the command. For example, results from the execution of the returned command are not tracked and do not affect <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> state.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"DLinqDebuggingSupport#3\">&#39; Imports System.Data.Common\nDim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\nDim q = _\nFrom cust In db.Customers _\nWhere cust.City = &quot;London&quot; _\nSelect cust\n\nConsole.WriteLine(&quot;Customers from London:&quot;)\nFor Each z As Customer In q\n    Console.WriteLine(vbTab &amp; z.ContactName)\nNext\n\nDim dc As DbCommand = db.GetCommand(q)\nConsole.WriteLine(vbNewLine &amp; &quot;Command Text: &quot; &amp; vbNewLine &amp; dc.CommandText)\nConsole.WriteLine(vbNewLine &amp; &quot;Command Type: {0}&quot;, dc.CommandType)\nConsole.WriteLine(vbNewLine &amp; &quot;Connection: {0}&quot;, dc.Connection)\n\nConsole.ReadLine()\n</code></pre><pre><code class=\"lang-cs\" name=\"DLinqDebuggingSupport#3\">// using System.Data.Common;\nNorthwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\n\nvar q =\n    from cust in db.Customers\n    where cust.City == &quot;London&quot;\n    select cust;\n\nConsole.WriteLine(&quot;Customers from London:&quot;);\nforeach (var z in q)\n{\n    Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;,z.ContactName);\n}\n\nDbCommand dc = db.GetCommand(q);\nConsole.WriteLine(&quot;<br>Command Text: <br>{0}&quot;,dc.CommandText);\nConsole.WriteLine(&quot;<br>Command Type: {0}&quot;,dc.CommandType);\nConsole.WriteLine(&quot;<br>Connection: {0}&quot;,dc.Connection);\n\nConsole.ReadLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_GetTable_System_Type_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_GetTable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTable(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of objects of a particular type, where the type is defined by the <code>type</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.ITable GetTable (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the objects to be returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.itable\" data-linktype=\"relative-path\">ITable</a></div>\r\n                  </div>\r\n                  <p>A collection of objects defined by the <code>type</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is a weakly typed version of <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_GetTable_\" data-linktype=\"relative-path\">GetTable</a>. It is important to have a weakly typed version because it is a relatively common practice to construct queries dynamically. It would be inconvenient to force the application to use reflection to call the correct generic method.  </p>\n<p> If there is no collection for a particular type, an exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_GetTable__1\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_GetTable_TEntity__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTable&lt;TEntity&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a collection of objects of a particular type, where the type is defined by the <code>TEntity</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.Table&lt;TEntity&gt; GetTable&lt;TEntity&gt; () where TEntity : class;</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.table-1\" data-linktype=\"relative-path\">Table<tentity></tentity></a></div>\r\n                  </div>\r\n                  <p>A collection of objects defined by the <code>TEntity</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is the main entry point for querying. When a strongly typed <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a> is created, new generated properties encapsulate calls to this method. For example, a <code>Customers</code> property is generated that returns <code>GetTable&lt;Customer&gt;</code>.  </p>\n<p> If there is no collection for a particular type, an exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Refresh_System_Data_Linq_RefreshMode_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh(RefreshMode,IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Refreshes a collection of entity objects according to the specified mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Refresh (System.Data.Linq.RefreshMode mode, System.Collections.IEnumerable entities);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.refreshmode\" data-linktype=\"relative-path\">RefreshMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies how optimistic concurrency conflicts are handled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of entities to be refreshed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Refresh_System_Data_Linq_RefreshMode_System_Object_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh(RefreshMode,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Refreshes an entity object according to the specified mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Refresh (System.Data.Linq.RefreshMode mode, object entity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.refreshmode\" data-linktype=\"relative-path\">RefreshMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies how optimistic concurrency conflicts are handled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>entity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to be refreshed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Refresh_System_Data_Linq_RefreshMode_System_Object___\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh(RefreshMode,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Refreshes an array of entity objects according to the specified mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Refresh (System.Data.Linq.RefreshMode mode, object[] entities);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.refreshmode\" data-linktype=\"relative-path\">RefreshMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that specifies how optimistic concurrency conflicts are handled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>entities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array of entity objects to be refreshed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_SubmitChanges\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_SubmitChanges_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubmitChanges()</div>        \r\n          </div>\r\n    \r\n            <p>Computes the set of modified objects to be inserted, updated, or deleted, and executes the appropriate commands to implement the changes to the database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SubmitChanges ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If override methods are present for insert, update, or delete, <a class=\"xref\" href=\"system.data.linq.datacontext#System_Data_Linq_DataContext_SubmitChanges_\" data-linktype=\"relative-path\">SubmitChanges</a> executes these methods instead of the default LINQ to SQL commands.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_SubmitChanges_System_Data_Linq_ConflictMode_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_SubmitChanges_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubmitChanges(ConflictMode)</div>        \r\n          </div>\r\n    \r\n            <p>Sends changes that were made to retrieved objects to the underlying database, and specifies the action to be taken if the submission fails.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void SubmitChanges (System.Data.Linq.ConflictMode failureMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>failureMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.conflictmode\" data-linktype=\"relative-path\">ConflictMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The action to be taken if the submission fails. Valid arguments are as follows:  </p>\n <a class=\"xref\" href=\"system.data.linq.conflictmode\" data-linktype=\"relative-path\">ConflictMode</a><a class=\"xref\" href=\"system.data.linq.conflictmode\" data-linktype=\"relative-path\">ConflictMode</a>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default failure mode is <a class=\"xref\" href=\"system.data.linq.conflictmode\" data-linktype=\"relative-path\">ConflictMode</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"System.Data.Linq.ConflictModeEnumeration#1\">Northwnd db = new Northwnd(&quot;...&quot;);\n\n// Create, update, delete code.\n\ndb.SubmitChanges(ConflictMode.FailOnFirstConflict);\n// or\ndb.SubmitChanges(ConflictMode.ContinueOnConflict);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Data.Linq.ConflictModeEnumeration#1\">Dim db As New Northwnd(&quot;...&quot;)\n\n&#39; Create, update, delete code.\n\ndb.SubmitChanges(ConflictMode.FailOnFirstConflict)\n&#39; or\ndb.SubmitChanges(ConflictMode.ContinueOnConflict)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Translate_System_Data_Common_DbDataReader_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(DbDataReader)</div>        \r\n          </div>\r\n    \r\n            <p>Converts an existing <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a> to objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.Linq.IMultipleResults Translate (System.Data.Common.DbDataReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> to be converted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.linq.imultipleresults\" data-linktype=\"relative-path\">IMultipleResults</a></div>\r\n                  </div>\r\n                  <p>A list of objects returned by the conversion.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Translate_System_Type_System_Data_Common_DbDataReader_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(Type,DbDataReader)</div>        \r\n          </div>\r\n    \r\n            <p>Converts an existing <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a> to objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerable Translate (Type elementType, System.Data.Common.DbDataReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span> to be returned.  </p>\n<p> The algorithm for matching columns in the result to fields and properties in the object works as follows:  </p>\n<p> If a field or property is mapped to a particular column name, that column name is expected in the resultset.  </p>\n<p> If a field or property is not mapped, a column with the same name as the field or property is expected in the resultset.  </p>\n<p> The comparison is performed by looking for a case-sensitive match first. If this match is not found, a subsequent search is occurs for a case-insensitive match.  </p>\n<p> The query must return all the tracked fields and properties of the object (except those that are loaded on a deferred basis) when all the following conditions are true:  </p>\n<p> <code>T</code> is an entity explicitly tracked by the <a class=\"xref\" href=\"system.data.linq.datacontext\" data-linktype=\"relative-path\">DataContext</a>.  </p>\n<p> <span class=\"xref\">stem.Data.Linq.DataContext.ObjectTrackingEnabled*</span> is <code>true</code>.  </p>\n<p> The entity has a primary key.  </p>\n<p> Otherwise an exception is thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> to be converted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </div>\r\n                  <p>A list of objects returned by the conversion.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_DataContext_Translate__1_System_Data_Common_DbDataReader_\">\r\n    \r\n            <a id=\"System_Data_Linq_DataContext_Translate_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate&lt;TResult&gt;(DbDataReader)</div>        \r\n          </div>\r\n    \r\n            <p>Converts an existing <a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a> to objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerable&lt;TResult&gt; Translate&lt;TResult&gt; (System.Data.Common.DbDataReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.common.dbdatareader\" data-linktype=\"relative-path\">DbDataReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.data.idatareader\" data-linktype=\"relative-path\">IDataReader</a> to be converted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of objects returned by the conversion.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.DataContext.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.DataContext.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ChangeConflicts\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.CommandTimeout\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Connection\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.CreateDatabase\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.CreateMethodCallQuery&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.DatabaseExists\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.DeferredLoadingEnabled\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.DeleteDatabase\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteDynamicDelete\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteDynamicInsert\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteDynamicUpdate\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteMethodCall\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteQuery\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ExecuteQuery&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.GetChangeSet\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.GetCommand\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.GetTable\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.GetTable&lt;TEntity&gt;\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.LoadOptions\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Log\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Mapping\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.ObjectTrackingEnabled\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Refresh\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.SubmitChanges\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Transaction\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Translate\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.DataContext.Translate&lt;TResult&gt;\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b870760d-5900-47f8-e7f7-a8c3776021bf\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the main entry point for the LINQ to SQL framework.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.Linq/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.DataContext\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.DataContext.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.DataContext.yml","open_to_public_contributors":true,"api_name":["System.Data.Linq.DataContext","System.Data.Linq.DataContext..ctor","System.Data.Linq.DataContext.ChangeConflicts","System.Data.Linq.DataContext.CommandTimeout","System.Data.Linq.DataContext.Connection","System.Data.Linq.DataContext.CreateDatabase","System.Data.Linq.DataContext.CreateMethodCallQuery<TResult>","System.Data.Linq.DataContext.DatabaseExists","System.Data.Linq.DataContext.DeferredLoadingEnabled","System.Data.Linq.DataContext.DeleteDatabase","System.Data.Linq.DataContext.Dispose","System.Data.Linq.DataContext.ExecuteCommand","System.Data.Linq.DataContext.ExecuteDynamicDelete","System.Data.Linq.DataContext.ExecuteDynamicInsert","System.Data.Linq.DataContext.ExecuteDynamicUpdate","System.Data.Linq.DataContext.ExecuteMethodCall","System.Data.Linq.DataContext.ExecuteQuery","System.Data.Linq.DataContext.ExecuteQuery<TResult>","System.Data.Linq.DataContext.GetChangeSet","System.Data.Linq.DataContext.GetCommand","System.Data.Linq.DataContext.GetTable","System.Data.Linq.DataContext.GetTable<TEntity>","System.Data.Linq.DataContext.LoadOptions","System.Data.Linq.DataContext.Log","System.Data.Linq.DataContext.Mapping","System.Data.Linq.DataContext.ObjectTrackingEnabled","System.Data.Linq.DataContext.Refresh","System.Data.Linq.DataContext.SubmitChanges","System.Data.Linq.DataContext.Transaction","System.Data.Linq.DataContext.Translate","System.Data.Linq.DataContext.Translate<TResult>"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.DataContext","System::Data::Linq::DataContext","System.Data.Linq.DataContext.#ctor","System::Data::Linq::DataContext::#ctor","System.Data.Linq.DataContext.ChangeConflicts","System::Data::Linq::DataContext::ChangeConflicts","System.Data.Linq.DataContext.CommandTimeout","System::Data::Linq::DataContext::CommandTimeout","System.Data.Linq.DataContext.Connection","System::Data::Linq::DataContext::Connection","System.Data.Linq.DataContext.CreateDatabase","System::Data::Linq::DataContext::CreateDatabase","System.Data.Linq.DataContext.CreateMethodCallQuery``1","System::Data::Linq::DataContext::CreateMethodCallQuery``1","System.Data.Linq.DataContext.DatabaseExists","System::Data::Linq::DataContext::DatabaseExists","System.Data.Linq.DataContext.DeferredLoadingEnabled","System::Data::Linq::DataContext::DeferredLoadingEnabled","System.Data.Linq.DataContext.DeleteDatabase","System::Data::Linq::DataContext::DeleteDatabase","System.Data.Linq.DataContext.Dispose","System::Data::Linq::DataContext::Dispose","System.Data.Linq.DataContext.ExecuteCommand","System::Data::Linq::DataContext::ExecuteCommand","System.Data.Linq.DataContext.ExecuteDynamicDelete","System::Data::Linq::DataContext::ExecuteDynamicDelete","System.Data.Linq.DataContext.ExecuteDynamicInsert","System::Data::Linq::DataContext::ExecuteDynamicInsert","System.Data.Linq.DataContext.ExecuteDynamicUpdate","System::Data::Linq::DataContext::ExecuteDynamicUpdate","System.Data.Linq.DataContext.ExecuteMethodCall","System::Data::Linq::DataContext::ExecuteMethodCall","System.Data.Linq.DataContext.ExecuteQuery","System::Data::Linq::DataContext::ExecuteQuery","System.Data.Linq.DataContext.ExecuteQuery``1","System::Data::Linq::DataContext::ExecuteQuery``1","System.Data.Linq.DataContext.GetChangeSet","System::Data::Linq::DataContext::GetChangeSet","System.Data.Linq.DataContext.GetCommand","System::Data::Linq::DataContext::GetCommand","System.Data.Linq.DataContext.GetTable","System::Data::Linq::DataContext::GetTable","System.Data.Linq.DataContext.GetTable``1","System::Data::Linq::DataContext::GetTable``1","System.Data.Linq.DataContext.LoadOptions","System::Data::Linq::DataContext::LoadOptions","System.Data.Linq.DataContext.Log","System::Data::Linq::DataContext::Log","System.Data.Linq.DataContext.Mapping","System::Data::Linq::DataContext::Mapping","System.Data.Linq.DataContext.ObjectTrackingEnabled","System::Data::Linq::DataContext::ObjectTrackingEnabled","System.Data.Linq.DataContext.Refresh","System::Data::Linq::DataContext::Refresh","System.Data.Linq.DataContext.SubmitChanges","System::Data::Linq::DataContext::SubmitChanges","System.Data.Linq.DataContext.Transaction","System::Data::Linq::DataContext::Transaction","System.Data.Linq.DataContext.Translate","System::Data::Linq::DataContext::Translate","System.Data.Linq.DataContext.Translate``1","System::Data::Linq::DataContext::Translate``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b870760d-5900-47f8-e7f7-a8c3776021bf","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.Linq/DataContext.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataContext class | Microsoft Docs","_op_ogTitle":"DataContext class","description":"Represents the main entry point for the LINQ to SQL framework.\n","toc_asset_id":"_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.DataContext","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.datacontext","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.datacontext","fileRelativePath":"System.Data.Linq.DataContext.html"},"themesRelativePathToOutputRoot":"_themes/"}