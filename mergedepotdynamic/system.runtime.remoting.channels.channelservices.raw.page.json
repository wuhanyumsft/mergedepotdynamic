{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_Channels_ChannelServices\">\r\n      <span class=\"lang-csharp\">ChannelServices</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides static methods to aid with remoting channel registration, resolution, and URL discovery. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class ChannelServices</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ChannelServices</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Channels transport messages between applications across such remoting boundaries as application domains, processes, and computers. These crossings can be inbound and outbound. A channel can listen on an endpoint for inbound messages, send to an endpoint for outbound messages, or both. This provides an extensibility point in the runtime to plug in a wide range of protocols, even though the runtime might not be at the other end of the channel. Run-time objects can be used to expose a wide range of semantics and entities. The channel provides the extensibility point to convert the messages to and from the specific protocols.  </p>\n<p> Channels must expose the <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a> interface, which provides informational properties such as the <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel#System_Runtime_Remoting_Channels_IChannel_ChannelName_\" data-linktype=\"relative-path\">ChannelName</a> and <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel#System_Runtime_Remoting_Channels_IChannel_ChannelPriority_\" data-linktype=\"relative-path\">ChannelPriority</a>. Channels are registered using the <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices#System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_\" data-linktype=\"relative-path\">RegisterChannel</a> method. Channels can also be loaded from the remoting configuration. (See <a href=\"http://msdn.microsoft.com/en-us/73399d48-f0fd-46e9-828b-6cdafde5ffce\" data-linktype=\"external\">&lt;channel&gt; Element (Template)</a> for details.)  </p>\n<p> On the client side, messages are handed off to the client channel sink chain after they traverse the client <a class=\"xref\" href=\"system.runtime.remoting.contexts.context\" data-linktype=\"relative-path\">Context</a> chain. The first channel sink is typically a <a class=\"xref\" href=\"system.runtime.remoting.channels.iclientformattersink\" data-linktype=\"relative-path\">IClientFormatterSink</a>, which serializes the message into a stream that is passed down the channel sink chain to the client transport sink. The client transport sink then writes this stream out to the wire.  </p>\n<p> On the server side, the server transport sink reads requests off the wire and passes the request stream to the server channel sink chain. The server formatter sink at the end of this chain will deserialize the request into a message. It will then hand this message off to the remoting infrastructure, which will dispatch it to the server <a class=\"xref\" href=\"system.runtime.remoting.contexts.context\" data-linktype=\"relative-path\">Context</a> chain.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_RegisteredChannels\" data-linktype=\"self-bookmark\">RegisteredChannels</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of currently registered channels.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_AsyncDispatchMessage_System_Runtime_Remoting_Messaging_IMessage_System_Runtime_Remoting_Messaging_IMessageSink_\" data-linktype=\"self-bookmark\">AsyncDispatchMessage(IMessage,IMessageSink)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously dispatches the given message to the server-side chain(s) based on the URI embedded in the message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_CreateServerChannelSinkChain_System_Runtime_Remoting_Channels_IServerChannelSinkProvider_System_Runtime_Remoting_Channels_IChannelReceiver_\" data-linktype=\"self-bookmark\">CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a channel sink chain for the specified channel.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_DispatchMessage_System_Runtime_Remoting_Channels_IServerChannelSinkStack_System_Runtime_Remoting_Messaging_IMessage_System_Runtime_Remoting_Messaging_IMessage__\" data-linktype=\"self-bookmark\">DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Dispatches incoming remote calls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_GetChannel_System_String_\" data-linktype=\"self-bookmark\">GetChannel(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a registered channel with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_GetChannelSinkProperties_System_Object_\" data-linktype=\"self-bookmark\">GetChannelSinkProperties(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> of properties for a given proxy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_GetUrlsForObject_System_MarshalByRefObject_\" data-linktype=\"self-bookmark\">GetUrlsForObject(MarshalByRefObject)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of all the URLs that can be used to reach the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_System_Runtime_Remoting_Channels_IChannel_\" data-linktype=\"self-bookmark\">RegisterChannel(IChannel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a channel with the channel services. RegisterChannel is obsolete. Please use <span class=\"xref\">stem.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)</span> instead.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_System_Runtime_Remoting_Channels_IChannel_System_Boolean_\" data-linktype=\"self-bookmark\">RegisterChannel(IChannel,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a channel with the channel services.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_SyncDispatchMessage_System_Runtime_Remoting_Messaging_IMessage_\" data-linktype=\"self-bookmark\">SyncDispatchMessage(IMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously dispatches the incoming message to the server-side chain(s) based on the URI embedded in the message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Channels_ChannelServices_UnregisterChannel_System_Runtime_Remoting_Channels_IChannel_\" data-linktype=\"self-bookmark\">UnregisterChannel(IChannel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Unregisters a particular channel from the registered channels list.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_RegisteredChannels\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_RegisteredChannels_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisteredChannels</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of currently registered channels.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Channels.IChannel[] RegisteredChannels { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a>[]</div>\r\n                  </div>\r\n                  <p>An array of all the currently registered channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"ChannelServices_RegisteredChannels#2\">            // Retrieve and print information about the registered channels.\n            IChannel[] myIChannelArray = ChannelServices.RegisteredChannels;\n            for (int i=0; i&lt;myIChannelArray.Length; i++)\n            {\n               Console.WriteLine(&quot;Name of Channel: {0}&quot;, myIChannelArray[i].ChannelName);\n               Console.WriteLine(&quot;Priority of Channel: {0}&quot;,\n                  +myIChannelArray[i].ChannelPriority);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"ChannelServices_RegisteredChannels#2\">            &#39; Retrieve and print information about the registered channels.\n            Dim myIChannelArray As IChannel() = ChannelServices.RegisteredChannels\n            Dim i As Integer\n            For i = 0 To myIChannelArray.Length - 1\n               Console.WriteLine(&quot;Name of Channel: {0}&quot;, myIChannelArray(i).ChannelName)\n               Console.WriteLine(&quot;Priority of Channel: {0}&quot;, + myIChannelArray(i).ChannelPriority)\n            Next i\n</code></pre><pre><code class=\"lang-cpp\" name=\"ChannelServices_RegisteredChannels#2\">      // Retrieve and print information about the registered channels.\n      array&lt;IChannel^&gt;^myIChannelArray = ChannelServices::RegisteredChannels;\n      for ( int i = 0; i &lt; myIChannelArray-&gt;Length; i++ )\n      {\n         Console::WriteLine( &quot;Name of Channel: {0}&quot;, myIChannelArray[ i ]-&gt;ChannelName );\n         Console::WriteLine( &quot;Priority of Channel: {0}&quot;, myIChannelArray[ i ]-&gt;ChannelPriority );\n\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_AsyncDispatchMessage_System_Runtime_Remoting_Messaging_IMessage_System_Runtime_Remoting_Messaging_IMessageSink_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_AsyncDispatchMessage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsyncDispatchMessage(IMessage,IMessageSink)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously dispatches the given message to the server-side chain(s) based on the URI embedded in the message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Messaging.IMessageCtrl AsyncDispatchMessage (System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Messaging.IMessageSink replySink);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to dispatch.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>replySink</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessagesink\" data-linktype=\"relative-path\">IMessageSink</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The sink that will process the return message if it is not <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessagectrl\" data-linktype=\"relative-path\">IMessageCtrl</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessagectrl\" data-linktype=\"relative-path\">IMessageCtrl</a> object used to control the asynchronously dispatched message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>msg</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method returns immediately, whether the server processed the specified message or not.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_CreateServerChannelSinkChain_System_Runtime_Remoting_Channels_IServerChannelSinkProvider_System_Runtime_Remoting_Channels_IChannelReceiver_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_CreateServerChannelSinkChain_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateServerChannelSinkChain(IServerChannelSinkProvider,IChannelReceiver)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a channel sink chain for the specified channel.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Channels.IServerChannelSink CreateServerChannelSinkChain (System.Runtime.Remoting.Channels.IServerChannelSinkProvider provider, System.Runtime.Remoting.Channels.IChannelReceiver channel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>provider</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.iserverchannelsinkprovider\" data-linktype=\"relative-path\">IServerChannelSinkProvider</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first provider in the chain of sink providers that will create the channel sink chain.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>channel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.ichannelreceiver\" data-linktype=\"relative-path\">IChannelReceiver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannelreceiver\" data-linktype=\"relative-path\">IChannelReceiver</a> for which to create the channel sink chain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.iserverchannelsink\" data-linktype=\"relative-path\">IServerChannelSink</a></div>\r\n                  </div>\r\n                  <p>A new channel sink chain for the specified channel.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_DispatchMessage_System_Runtime_Remoting_Channels_IServerChannelSinkStack_System_Runtime_Remoting_Messaging_IMessage_System_Runtime_Remoting_Messaging_IMessage__\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_DispatchMessage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DispatchMessage(IServerChannelSinkStack,IMessage,IMessage)</div>        \r\n          </div>\r\n    \r\n            <p>Dispatches incoming remote calls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Channels.ServerProcessing DispatchMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage msg, out System.Runtime.Remoting.Messaging.IMessage replyMsg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sinkStack</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.iserverchannelsinkstack\" data-linktype=\"relative-path\">IServerChannelSinkStack</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stack of server channel sinks that the message already traversed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to dispatch.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>replyMsg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a> that holds the reply from the server to the message that is contained in the <code>msg</code> parameter. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.serverprocessing\" data-linktype=\"relative-path\">ServerProcessing</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.remoting.channels.serverprocessing\" data-linktype=\"relative-path\">ServerProcessing</a> that gives the status of the server message processing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>msg</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by channels to dispatch incoming remote calls.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_GetChannel_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_GetChannel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChannel(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a registered channel with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Channels.IChannel GetChannel (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The channel name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a></div>\r\n                  </div>\r\n                  <p>An interface to a registered channel, or <code>null</code> if the channel is not registered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"ChannelServices_GetChannel#1\">         Dim myClientChannel As New HttpChannel(myProperties, New SoapClientFormatterSinkProvider(), _\n                                                            New SoapServerFormatterSinkProvider())\n         ChannelServices.RegisterChannel(myClientChannel)\n         &#39; Get the registered channel. \n         Console.WriteLine(&quot;Channel Name : &quot; + ChannelServices.GetChannel _\n                                                      (myClientChannel.ChannelName).ChannelName)\n         Console.WriteLine(&quot;Channel Priorty : &quot; + _\n               ChannelServices.GetChannel(myClientChannel.ChannelName).ChannelPriority.ToString())\n</code></pre><pre><code class=\"lang-cpp\" name=\"ChannelServices_GetChannel#1\">   HttpChannel^ myClientChannel = gcnew HttpChannel( myProperties,gcnew SoapClientFormatterSinkProvider,gcnew SoapServerFormatterSinkProvider );\n   ChannelServices::RegisterChannel( myClientChannel, false );\n   \n   // Get the registered channel. \n   Console::WriteLine( &quot;Channel Name : {0}&quot;, ChannelServices::GetChannel( myClientChannel-&gt;ChannelName )-&gt;ChannelName );\n   Console::WriteLine( &quot;Channel Priorty : {0}&quot;, ChannelServices::GetChannel( myClientChannel-&gt;ChannelName )-&gt;ChannelPriority );\n   \n</code></pre><pre><code class=\"lang-cs\" name=\"ChannelServices_GetChannel#1\">         HttpChannel myClientChannel = new HttpChannel(myProperties,\n            new SoapClientFormatterSinkProvider(),\n            new SoapServerFormatterSinkProvider());\n         ChannelServices.RegisterChannel(myClientChannel);\n         // Get the registered channel. \n         Console.WriteLine(&quot;Channel Name : &quot;+ChannelServices.GetChannel(\n            myClientChannel.ChannelName).ChannelName);\n         Console.WriteLine(&quot;Channel Priorty : &quot;+ChannelServices.GetChannel(\n            myClientChannel.ChannelName).ChannelPriority);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_GetChannelSinkProperties_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_GetChannelSinkProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChannelSinkProperties(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a> of properties for a given proxy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.IDictionary GetChannelSinkProperties (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The proxy to retrieve properties for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a></div>\r\n                  </div>\r\n                  <p>An interface to the dictionary of properties, or <code>null</code> if no properties were found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers that is higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"ChannelServices_GetChannel#2\">         &#39; Get an IDictionary of properties for a given proxy.\n         Dim myDictionary As IDictionary = ChannelServices.GetChannelSinkProperties(myProxy)\n         Dim myKeysCollection As ICollection = myDictionary.Keys\n         Dim myKeysArray(myKeysCollection.Count-1) As Object\n         Dim myValuesCollection As ICollection = myDictionary.Values\n         Dim myValuesArray(myValuesCollection.Count-1) As Object\n         myKeysCollection.CopyTo(myKeysArray, 0)\n         myValuesCollection.CopyTo(myValuesArray, 0)\n         Dim iIndex As Integer\n         For iIndex = 0 To myKeysArray.Length - 1\n            Console.Write(&quot;Property Name : &quot; &amp; myKeysArray(iIndex) &amp; &quot; value : &quot;)\n            Console.WriteLine(myValuesArray(iIndex))\n         Next iIndex\n</code></pre><pre><code class=\"lang-cpp\" name=\"ChannelServices_GetChannel#2\">   // Get an IDictionary of properties for a given proxy.\n   IDictionary^ myDictionary = ChannelServices::GetChannelSinkProperties( myProxy );\n   ICollection^ myKeysCollection = myDictionary-&gt;Keys;\n   array&lt;Object^&gt;^myKeysArray = gcnew array&lt;Object^&gt;(myKeysCollection-&gt;Count);\n   ICollection^ myValuesCollection = myDictionary-&gt;Values;\n   array&lt;Object^&gt;^myValuesArray = gcnew array&lt;Object^&gt;(myValuesCollection-&gt;Count);\n   myKeysCollection-&gt;CopyTo( myKeysArray, 0 );\n   myValuesCollection-&gt;CopyTo( myValuesArray, 0 );\n   for ( int iIndex = 0; iIndex &lt; myKeysArray-&gt;Length; iIndex++ )\n   {\n      Console::WriteLine( &quot;Property Name : {0} value : {1}&quot;, myKeysArray[ iIndex ], myValuesArray[ iIndex ] );\n\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ChannelServices_GetChannel#2\">         // Get an IDictionary of properties for a given proxy.\n         IDictionary myDictionary = ChannelServices.\n                  GetChannelSinkProperties(myProxy);\n         ICollection myKeysCollection = myDictionary.Keys;\n         object[] myKeysArray = new object[myKeysCollection.Count];\n         ICollection myValuesCollection = myDictionary.Values;\n         object[] myValuesArray = new object[myValuesCollection.Count];\n         myKeysCollection.CopyTo(myKeysArray,0);\n         myValuesCollection.CopyTo(myValuesArray,0);\n         for(int iIndex=0;iIndex&lt;myKeysArray.Length;iIndex++)\n         {\n            Console.WriteLine(&quot;Property Name : &quot;+myKeysArray[iIndex]+ \n               &quot; value : &quot;+myValuesArray[iIndex]);\n         }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_GetUrlsForObject_System_MarshalByRefObject_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_GetUrlsForObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUrlsForObject(MarshalByRefObject)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of all the URLs that can be used to reach the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string[] GetUrlsForObject (MarshalByRefObject obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to retrieve the URL array for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array of strings that contains the URLs that can be used to remotely identify the object, or <code>null</code> if none were found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"ChannelServices_RegisteredChannels#4\">         array&lt;String^&gt;^myURLArray = ChannelServices::GetUrlsForObject( myHelloServer );\n         Console::WriteLine( &quot;Number of URLs for the specified Object: {0}&quot;, myURLArray-&gt;Length );\n         for ( int iIndex = 0; iIndex &lt; myURLArray-&gt;Length; iIndex++ )\n            Console::WriteLine( &quot;URL: {0}&quot;, myURLArray[ iIndex ] );\n</code></pre><pre><code class=\"lang-cs\" name=\"ChannelServices_RegisteredChannels#4\">               string[] myURLArray = ChannelServices.GetUrlsForObject(myHelloServer);\n               Console.WriteLine(&quot;Number of URLs for the specified Object: &quot;\n                  +myURLArray.Length);\n               for (int iIndex=0; iIndex&lt;myURLArray.Length; iIndex++)\n                  Console.WriteLine(&quot;URL: &quot;+myURLArray[iIndex]);\n</code></pre><pre><code class=\"lang-vb\" name=\"ChannelServices_RegisteredChannels#4\">               Dim myURLArray As String() = ChannelServices.GetUrlsForObject(myHelloServer)\n               Console.WriteLine(&quot;Number of URLs for the specified Object: &quot; + _\n                                                            myURLArray.Length.ToString())\n               Dim iIndex As Integer\n               For iIndex = 0 To myURLArray.Length - 1\n                  Console.WriteLine(&quot;URL: &quot; + myURLArray(iIndex))\n               Next iIndex \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_System_Runtime_Remoting_Channels_IChannel_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterChannel(IChannel)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a channel with the channel services. RegisterChannel is obsolete. Please use <span class=\"xref\">stem.Runtime.Remoting.Channels.ChannelServices.RegisterChannel(System.Runtime.Remoting.Channels.IChannel,System.Boolean)</span> instead.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterChannel (System.Runtime.Remoting.Channels.IChannel chnl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chnl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The channel to register.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>chnl</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.remotingexception\" data-linktype=\"relative-path\">RemotingException</a></div>\r\n                  </div>\r\n                  <p>The channel has already been registered.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> RegisterChannel is obsolete. Please use <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices#System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_System_Runtime_Remoting_Channels_IChannel_System_Boolean_\" data-linktype=\"relative-path\">RegisterChannel(IChannel,Boolean)</a> instead.  </p>\n</div>\n<p> The RegisterChannel method takes in the <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a> interface from a channel object. The channel&#39;s <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel#System_Runtime_Remoting_Channels_IChannel_ChannelName_\" data-linktype=\"relative-path\">ChannelName</a> must be unique, or the channel must be anonymous. A channel is anonymous if the <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel#System_Runtime_Remoting_Channels_IChannel_ChannelName_\" data-linktype=\"relative-path\">ChannelName</a> is set to either <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> by using the <code>name</code> configuration property.  </p>\n<p> You cannot register two channels with the same name in a <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>. By default, the name of a <a class=\"xref\" href=\"system.runtime.remoting.channels.http.httpchannel\" data-linktype=\"relative-path\">HttpChannel</a> is &quot;http&quot; and the name of a <a class=\"xref\" href=\"system.runtime.remoting.channels.tcp.tcpchannel\" data-linktype=\"relative-path\">TcpChannel</a> is &quot;tcp.&quot; Therefore, if you want to register two channels of the same type, you must specify a different name for one of them through configuration properties.  </p>\n<p> For more information about channel configuration properties, see <a class=\"xref\" href=\"system.runtime.remoting.channels.http.httpchannel\" data-linktype=\"relative-path\">HttpChannel</a>, and <a href=\"http://msdn.microsoft.com/en-us/73399d48-f0fd-46e9-828b-6cdafde5ffce\" data-linktype=\"external\">&lt;channel&gt; Element (Template)</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"HttpChannel#1\">      Dim channel As New HttpChannel(9000)\n      ChannelServices.RegisterChannel(channel)\n      RemotingConfiguration.RegisterWellKnownServiceType(GetType(SampleService), &quot;MySampleService/SampleService.soap&quot;, WellKnownObjectMode.Singleton)\n      \n      Console.WriteLine(&quot;** Press enter to end the server process. **&quot;)\n      Console.ReadLine()\n</code></pre><pre><code class=\"lang-cpp\" name=\"HttpChannel#1\">   HttpChannel^ channel = gcnew HttpChannel( 9000 );\n   ChannelServices::RegisterChannel( channel, false );\n   RemotingConfiguration::RegisterWellKnownServiceType( SampleNamespace::SampleService::typeid, &quot;MySampleService/SampleService::soap&quot;, WellKnownObjectMode::Singleton );\n   Console::WriteLine( &quot;** Press enter to end the server process. **&quot; );\n   Console::ReadLine();\n</code></pre><pre><code class=\"lang-cs\" name=\"HttpChannel#1\">        HttpChannel channel = new HttpChannel(9000);\n        ChannelServices.RegisterChannel(channel);\n\n        RemotingConfiguration.RegisterWellKnownServiceType( typeof(SampleService), \n\t\t&quot;MySampleService/SampleService.soap&quot;, WellKnownObjectMode.Singleton);\n        \n        Console.WriteLine(&quot;** Press enter to end the server process. **&quot;);\n        Console.ReadLine();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_System_Runtime_Remoting_Channels_IChannel_System_Boolean_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_RegisterChannel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterChannel(IChannel,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a channel with the channel services.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterChannel (System.Runtime.Remoting.Channels.IChannel chnl, bool ensureSecurity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chnl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The channel to register.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ensureSecurity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> ensures that security is enabled; otherwise <code>false</code>. Setting the value to <code>false</code> does not effect the security setting on the TCP or IPC channel.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>chnl</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.remotingexception\" data-linktype=\"relative-path\">RemotingException</a></div>\r\n                  </div>\r\n                  <p>The channel has already been registered.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the call stack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Not supported in Windows 98 for <a class=\"xref\" href=\"system.runtime.remoting.channels.tcp.tcpserverchannel\" data-linktype=\"relative-path\">TcpServerChannel</a> and on all platforms for <a class=\"xref\" href=\"system.runtime.remoting.channels.http.httpserverchannel\" data-linktype=\"relative-path\">HttpServerChannel</a>. Host the service using Internet Information Services (IIS) if you require a secure HTTP channel.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RegisterChannel method receives the <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a> interface from a channel object. The channel&#39;s <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel#System_Runtime_Remoting_Channels_IChannel_ChannelName_\" data-linktype=\"relative-path\">ChannelName</a> must be unique, or the channel must be anonymous. A channel is anonymous if the <a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel#System_Runtime_Remoting_Channels_IChannel_ChannelName_\" data-linktype=\"relative-path\">ChannelName</a> is set to either <code>null</code> or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> by using the <code>name</code> configuration property.  </p>\n<p> You cannot register two channels with the same name in a <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>. By default, the name of a <a class=\"xref\" href=\"system.runtime.remoting.channels.http.httpchannel\" data-linktype=\"relative-path\">HttpChannel</a> is &quot;http&quot; and the name of a <a class=\"xref\" href=\"system.runtime.remoting.channels.tcp.tcpchannel\" data-linktype=\"relative-path\">TcpChannel</a> is &quot;tcp&quot;. Therefore, if you want to register two channels of the same type, you must specify a different name for one of them through configuration properties.  </p>\n<p> For more information about channel configuration properties, see <a href=\"http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe\" data-linktype=\"external\">Channel and Formatter Configuration Properties</a> and <a href=\"http://msdn.microsoft.com/en-us/73399d48-f0fd-46e9-828b-6cdafde5ffce\" data-linktype=\"external\">&lt;channel&gt; Element (Template)</a>.  </p>\n<p> If the <code>ensureSecurity</code> parameter is set to <code>true</code>, the remoting system determines whether the channel implements <a class=\"xref\" href=\"system.runtime.remoting.channels.isecurablechannel\" data-linktype=\"relative-path\">ISecurableChannel</a>, and if so, enables encryption and digital signatures. An exception is thrown if the channel does not implement <a class=\"xref\" href=\"system.runtime.remoting.channels.isecurablechannel\" data-linktype=\"relative-path\">ISecurableChannel</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Setting <code>ensureSecurity</code> to <code>true</code> throws a <a class=\"xref\" href=\"system.runtime.remoting.remotingexception\" data-linktype=\"relative-path\">RemotingException</a> for the <a class=\"xref\" href=\"system.runtime.remoting.channels.tcp.tcpserverchannel\" data-linktype=\"relative-path\">TcpServerChannel</a> on Windows 98 (Since secure tcp channels are not supported on Windows 9x), and for the <a class=\"xref\" href=\"system.runtime.remoting.channels.http.httpserverchannel\" data-linktype=\"relative-path\">HttpServerChannel</a> on all platforms (You must host your service in IIS if you want to use a secure http channel).</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_SyncDispatchMessage_System_Runtime_Remoting_Messaging_IMessage_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_SyncDispatchMessage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncDispatchMessage(IMessage)</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously dispatches the incoming message to the server-side chain(s) based on the URI embedded in the message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.Messaging.IMessage SyncDispatchMessage (System.Runtime.Remoting.Messaging.IMessage msg);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to dispatch.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.messaging.imessage\" data-linktype=\"relative-path\">IMessage</a></div>\r\n                  </div>\r\n                  <p>A reply message is returned by the call to the server-side chain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>msg</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"ChannelServices_SyncDispatchMessage#1\">&#39; Create a custom &#39;RealProxy&#39;.\nPublic Class MyProxy\n   Inherits RealProxy\n   Private myURIString As String\n   Private myMarshalByRefObject As MarshalByRefObject\n\n   &lt;PermissionSet(SecurityAction.LinkDemand)&gt; _\n   Public Sub New(ByVal myType As Type)\n      MyBase.New(myType)\n      &#39; RealProxy uses the Type to generate a transparent proxy.\n      myMarshalByRefObject = CType(Activator.CreateInstance(myType), MarshalByRefObject)\n      &#39; Get &#39;ObjRef&#39;, for transmission serialization between application domains.\n      Dim myObjRef As ObjRef = RemotingServices.Marshal(myMarshalByRefObject)\n      &#39; Get the &#39;URI&#39; property of &#39;ObjRef&#39; and store it.\n      myURIString = myObjRef.URI\n      Console.WriteLine(&quot;URI :{0}&quot;, myObjRef.URI)\n   End Sub &#39;New\n\n&lt;SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags:=SecurityPermissionFlag.Infrastructure)&gt; _\n   Public Overrides Function Invoke(ByVal myIMessage As IMessage) As IMessage\n      Console.WriteLine(&quot;MyProxy.Invoke Start&quot;)\n      Console.WriteLine(&quot;&quot;)\n\n      If TypeOf myIMessage Is IMethodCallMessage Then\n         Console.WriteLine(&quot;IMethodCallMessage&quot;)\n      End If\n      If TypeOf myIMessage Is IMethodReturnMessage Then\n         Console.WriteLine(&quot;IMethodReturnMessage&quot;)\n      End If\n      Dim msgType As Type\n      msgType = CObj(myIMessage).GetType\n      Console.WriteLine(&quot;Message Type: {0}&quot;, msgType.ToString())\n      Console.WriteLine(&quot;Message Properties&quot;)\n      Dim myIDictionary As IDictionary = myIMessage.Properties\n      &#39; Set the &#39;__Uri&#39; property of &#39;IMessage&#39; to &#39;URI&#39; property of &#39;ObjRef&#39;.\n      myIDictionary(&quot;__Uri&quot;) = myURIString\n      Dim myIDictionaryEnumerator As IDictionaryEnumerator = CType(myIDictionary.GetEnumerator(), _\n                                                                    IDictionaryEnumerator)\n\n      While myIDictionaryEnumerator.MoveNext()\n         Dim myKey As Object = myIDictionaryEnumerator.Key\n         Dim myKeyName As String = myKey.ToString()\n         Dim myValue As Object = myIDictionaryEnumerator.Value\n\n         Console.WriteLine(ControlChars.Tab + &quot;{0} : {1}&quot;, myKeyName, myIDictionaryEnumerator.Value)\n         If myKeyName = &quot;__Args&quot; Then\n            Dim myObjectArray As Object() = CType(myValue, Object())\n            Dim aIndex As Integer\n            For aIndex = 0 To myObjectArray.Length - 1\n               Console.WriteLine(ControlChars.Tab + ControlChars.Tab + &quot;arg: {0} myValue: {1}&quot;, _\n                                                              aIndex, myObjectArray(aIndex))\n             Next aIndex\n         End If\n\n         If myKeyName = &quot;__MethodSignature&quot; And Not Nothing Is myValue Then\n            Dim myObjectArray As Object() = CType(myValue, Object())\n            Dim aIndex As Integer\n            For aIndex = 0 To myObjectArray.Length - 1\n               Console.WriteLine(ControlChars.Tab + ControlChars.Tab + &quot;arg: {0} myValue: {1}&quot;, _\n                                                           aIndex, myObjectArray(aIndex))\n            Next aIndex\n         End If\n      End While\n\n        Dim myReturnMessage As IMessage\n\n        myIDictionary(&quot;__Uri&quot;) = myURIString\n        Console.WriteLine(&quot;__Uri {0}&quot;, myIDictionary(&quot;__Uri&quot;))\n\n        Console.WriteLine(&quot;ChannelServices.SyncDispatchMessage&quot;)\n        myReturnMessage = ChannelServices.SyncDispatchMessage(CObj(myIMessage))\n\n        &#39; Push return value and OUT parameters back onto stack.\n        Dim myMethodReturnMessage As IMethodReturnMessage = CType(myReturnMessage, IMethodReturnMessage)\n        Console.WriteLine(&quot;IMethodReturnMessage.ReturnValue: {0}&quot;, myMethodReturnMessage.ReturnValue)\n\n        Console.WriteLine(&quot;MyProxy.Invoke - Finish&quot;)\n\n        Return myReturnMessage\n    End Function &#39;Invoke\nEnd Class &#39;MyProxy\n</code></pre><pre><code class=\"lang-cs\" name=\"ChannelServices_SyncDispatchMessage#1\">// Create a custom &#39;RealProxy&#39;.\npublic class MyProxy : RealProxy\n{\n   String myURIString;\n   MarshalByRefObject myMarshalByRefObject;   \n\n   [PermissionSet(SecurityAction.LinkDemand)]\n   public MyProxy(Type myType) : base(myType)\n   {\n      // RealProxy uses the Type to generate a transparent proxy.\n      myMarshalByRefObject = (MarshalByRefObject)Activator.CreateInstance((myType));\n      // Get &#39;ObjRef&#39;, for transmission serialization between application domains.\n      ObjRef myObjRef = RemotingServices.Marshal(myMarshalByRefObject);\n      // Get the &#39;URI&#39; property of &#39;ObjRef&#39; and store it.\n      myURIString = myObjRef.URI;\n      Console.WriteLine(&quot;URI :{0}&quot;, myObjRef.URI);\n   }\n\n   [SecurityPermissionAttribute(SecurityAction.LinkDemand, Flags=SecurityPermissionFlag.Infrastructure)]\n   public override IMessage Invoke(IMessage myIMessage)\n   {\n      Console.WriteLine(&quot;MyProxy.Invoke Start&quot;);\n      Console.WriteLine(&quot;&quot;);\n\n      if (myIMessage is IMethodCallMessage)\n         Console.WriteLine(&quot;IMethodCallMessage&quot;);\n\n      if (myIMessage is IMethodReturnMessage)\n         Console.WriteLine(&quot;IMethodReturnMessage&quot;);\n\n      Type msgType = myIMessage.GetType();\n      Console.WriteLine(&quot;Message Type: {0}&quot;, msgType.ToString());\n      Console.WriteLine(&quot;Message Properties&quot;);\n      IDictionary myIDictionary = myIMessage.Properties;\n      // Set the &#39;__Uri&#39; property of &#39;IMessage&#39; to &#39;URI&#39; property of &#39;ObjRef&#39;.\n      myIDictionary[&quot;__Uri&quot;] = myURIString;\n      IDictionaryEnumerator myIDictionaryEnumerator = \n         (IDictionaryEnumerator) myIDictionary.GetEnumerator();\n\n      while (myIDictionaryEnumerator.MoveNext())\n      {\n         Object myKey = myIDictionaryEnumerator.Key;\n         String myKeyName = myKey.ToString();\n         Object myValue = myIDictionaryEnumerator.Value;\n\n         Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} : {1}&quot;, myKeyName, \n            myIDictionaryEnumerator.Value);\n         if (myKeyName == &quot;__Args&quot;)\n         {\n            Object[] myObjectArray = (Object[])myValue;\n            for (int aIndex = 0; aIndex &lt; myObjectArray.Length; aIndex++)\n               Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg: {0} myValue: {1}&quot;, aIndex, \n                  myObjectArray[aIndex]);\n         }\n\n         if ((myKeyName == &quot;__MethodSignature&quot;) &amp;&amp; (null != myValue))\n         {\n            Object[] myObjectArray = (Object[])myValue;\n            for (int aIndex = 0; aIndex &lt; myObjectArray.Length; aIndex++)\n               Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg: {0} myValue: {1}&quot;, aIndex, \n                  myObjectArray[aIndex]);\n         }\n      }\n      \n      IMessage myReturnMessage;\n\n      myIDictionary[&quot;__Uri&quot;] = myURIString;\n      Console.WriteLine(&quot;__Uri {0}&quot;, myIDictionary[&quot;__Uri&quot;]);\n\n      Console.WriteLine(&quot;ChannelServices.SyncDispatchMessage&quot;);\n      myReturnMessage = ChannelServices.SyncDispatchMessage(myIMessage);\n\n      // Push return value and OUT parameters back onto stack.\n\n      IMethodReturnMessage myMethodReturnMessage = (IMethodReturnMessage)\n         myReturnMessage;\n      Console.WriteLine(&quot;IMethodReturnMessage.ReturnValue: {0}&quot;, \n         myMethodReturnMessage.ReturnValue);\n\n      Console.WriteLine(&quot;MyProxy.Invoke - Finish&quot;);\n\n      return myReturnMessage;\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ChannelServices_SyncDispatchMessage#1\">// Create a custom &#39;RealProxy&#39;.\npublic ref class MyProxy: public RealProxy\n{\nprivate:\n   String^ myURIString;\n   MarshalByRefObject^ myMarshalByRefObject;\n\npublic:\n   MyProxy( Type^ myType )\n      : RealProxy( myType )\n   {\n      \n      // RealProxy uses the Type to generate a transparent proxy.\n      myMarshalByRefObject = dynamic_cast&lt;MarshalByRefObject^&gt;(Activator::CreateInstance(myType));\n      \n      // Get &#39;ObjRef&#39;, for transmission serialization between application domains.\n      ObjRef^ myObjRef = RemotingServices::Marshal( myMarshalByRefObject );\n      \n      // Get the &#39;URI&#39; property of &#39;ObjRef&#39; and store it.\n      myURIString = myObjRef-&gt;URI;\n      Console::WriteLine( &quot;URI :{0}&quot;, myObjRef-&gt;URI );\n   }\n\n   virtual IMessage^ Invoke ( IMessage^ myIMessage ) override \n\t{\n      Console::WriteLine( &quot;MyProxy.Invoke Start&quot; );\n      Console::WriteLine( &quot;&quot; );\n      if ( dynamic_cast&lt;IMethodCallMessage^&gt;(myIMessage) )\n            Console::WriteLine( &quot;IMethodCallMessage&quot; );\n\n      if ( dynamic_cast&lt;IMethodReturnMessage^&gt;(myIMessage) )\n            Console::WriteLine( &quot;IMethodReturnMessage&quot; );\n\n      Type^ msgType = myIMessage-&gt;GetType();\n      Console::WriteLine( &quot;Message Type: {0}&quot;, msgType );\n      Console::WriteLine( &quot;Message Properties&quot; );\n      IDictionary^ myIDictionary = myIMessage-&gt;Properties;\n      \n      // Set the &#39;__Uri&#39; property of &#39;IMessage&#39; to &#39;URI&#39; property of &#39;ObjRef&#39;.\n      myIDictionary-&gt;default[ &quot;__Uri&quot; ] = myURIString;\n      IDictionaryEnumerator^ myIDictionaryEnumerator = dynamic_cast&lt;IDictionaryEnumerator^&gt;(myIDictionary-&gt;GetEnumerator());\n      while ( myIDictionaryEnumerator-&gt;MoveNext() )\n      {\n         Object^ myKey = myIDictionaryEnumerator-&gt;Key;\n         String^ myKeyName = myKey-&gt;ToString();\n         Object^ myValue = myIDictionaryEnumerator-&gt;Value;\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0} : {1}&quot;, myKeyName, myIDictionaryEnumerator-&gt;Value );\n         if ( myKeyName-&gt;Equals( &quot;__Args&quot; ) )\n         {\n            array&lt;Object^&gt;^myObjectArray = (array&lt;Object^&gt;^)myValue;\n            for ( int aIndex = 0; aIndex &lt; myObjectArray-&gt;Length; aIndex++ )\n               Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg: {0} myValue: {1}&quot;, aIndex, myObjectArray[ aIndex ] );\n         }\n\n         if ( (myKeyName-&gt;Equals( &quot;__MethodSignature&quot; )) &amp;&amp; (nullptr != myValue) )\n         {\n            array&lt;Object^&gt;^myObjectArray = (array&lt;Object^&gt;^)myValue;\n            for ( int aIndex = 0; aIndex &lt; myObjectArray-&gt;Length; aIndex++ )\n               Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arg: {0} myValue: {1}&quot;, aIndex, myObjectArray[ aIndex ] );\n         }\n      }\n\n      IMessage^ myReturnMessage;\n      myIDictionary-&gt;default[ &quot;__Uri&quot; ] = myURIString;\n      Console::WriteLine( &quot;__Uri {0}&quot;, myIDictionary-&gt;default[ &quot;__Uri&quot; ] );\n      Console::WriteLine( &quot;ChannelServices.SyncDispatchMessage&quot; );\n      myReturnMessage = ChannelServices::SyncDispatchMessage( myIMessage );\n      \n      // Push return value and OUT parameters back onto stack.\n      IMethodReturnMessage^ myMethodReturnMessage = dynamic_cast&lt;IMethodReturnMessage^&gt;(myReturnMessage);\n      Console::WriteLine( &quot;IMethodReturnMessage.ReturnValue: {0}&quot;, myMethodReturnMessage-&gt;ReturnValue );\n      Console::WriteLine( &quot;MyProxy.Invoke - Finish&quot; );\n      return myReturnMessage;\n   }\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Channels_ChannelServices_UnregisterChannel_System_Runtime_Remoting_Channels_IChannel_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Channels_ChannelServices_UnregisterChannel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnregisterChannel(IChannel)</div>        \r\n          </div>\r\n    \r\n            <p>Unregisters a particular channel from the registered channels list.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void UnregisterChannel (System.Runtime.Remoting.Channels.IChannel chnl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>chnl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.channels.ichannel\" data-linktype=\"relative-path\">IChannel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The channel to unregister.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>chnl</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The channel is not registered.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"ChannelServices_RegisteredChannels#3\">            System.Console.WriteLine(&quot;Hit &lt;enter&gt; to unregister the channels...&quot;);\n            System.Console.ReadLine();\n            // Unregister the &#39;HttpChannel&#39; and &#39;TcpChannel&#39; channels.\n            ChannelServices.UnregisterChannel(myTcpChannel);\n            ChannelServices.UnregisterChannel(myHttpChannel);\n            Console.WriteLine(&quot;Unregistered the channels.&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"ChannelServices_RegisteredChannels#3\">            System.Console.WriteLine(&quot;Hit &lt;enter&gt; to unregister the channels...&quot;)\n            System.Console.ReadLine()\n            &#39; Unregister the &#39;HttpChannel&#39; and &#39;TcpChannel&#39; channels.\n            ChannelServices.UnregisterChannel(myTcpChannel)\n            ChannelServices.UnregisterChannel(myHttpChannel)\n            Console.WriteLine(&quot;Unregistered the channels.&quot;)\n</code></pre><pre><code class=\"lang-cpp\" name=\"ChannelServices_RegisteredChannels#3\">      System::Console::WriteLine( &quot;Hit &lt;enter&gt; to unregister the channels...&quot; );\n      System::Console::ReadLine();\n\n      // Unregister the &#39;HttpChannel&#39; and &#39;TcpChannel&#39; channels.\n      ChannelServices::UnregisterChannel( myTcpChannel );\n      ChannelServices::UnregisterChannel( myHttpChannel );\n      Console::WriteLine( &quot;Unregistered the channels.&quot; );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Channels.ChannelServices.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Channels.ChannelServices.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.GetChannel\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b6bd0cdf-3178-b291-23c2-5fdfb192ea7e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides static methods to aid with remoting channel registration, resolution, and URL discovery. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting.Channels/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Channels.ChannelServices\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Channels.ChannelServices.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Channels.ChannelServices.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.Channels.ChannelServices","System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage","System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain","System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage","System.Runtime.Remoting.Channels.ChannelServices.GetChannel","System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties","System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject","System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel","System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels","System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage","System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Channels.ChannelServices","System::Runtime::Remoting::Channels::ChannelServices","System.Runtime.Remoting.Channels.ChannelServices.AsyncDispatchMessage","System::Runtime::Remoting::Channels::ChannelServices::AsyncDispatchMessage","System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain","System::Runtime::Remoting::Channels::ChannelServices::CreateServerChannelSinkChain","System.Runtime.Remoting.Channels.ChannelServices.DispatchMessage","System::Runtime::Remoting::Channels::ChannelServices::DispatchMessage","System.Runtime.Remoting.Channels.ChannelServices.GetChannel","System::Runtime::Remoting::Channels::ChannelServices::GetChannel","System.Runtime.Remoting.Channels.ChannelServices.GetChannelSinkProperties","System::Runtime::Remoting::Channels::ChannelServices::GetChannelSinkProperties","System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject","System::Runtime::Remoting::Channels::ChannelServices::GetUrlsForObject","System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel","System::Runtime::Remoting::Channels::ChannelServices::RegisterChannel","System.Runtime.Remoting.Channels.ChannelServices.RegisteredChannels","System::Runtime::Remoting::Channels::ChannelServices::RegisteredChannels","System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage","System::Runtime::Remoting::Channels::ChannelServices::SyncDispatchMessage","System.Runtime.Remoting.Channels.ChannelServices.UnregisterChannel","System::Runtime::Remoting::Channels::ChannelServices::UnregisterChannel"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b6bd0cdf-3178-b291-23c2-5fdfb192ea7e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting.Channels/ChannelServices.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ChannelServices class | Microsoft Docs","_op_ogTitle":"ChannelServices class","description":"Provides static methods to aid with remoting channel registration, resolution, and URL discovery. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Runtime.Remoting.Channels/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Channels/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Channels.ChannelServices","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.channels.channelservices","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.channels.channelservices","fileRelativePath":"System.Runtime.Remoting.Channels.ChannelServices.html"},"themesRelativePathToOutputRoot":"_themes/"}