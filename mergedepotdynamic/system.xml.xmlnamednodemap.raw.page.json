{"content":"    \r\n    <h1 id=\"System_Xml_XmlNamedNodeMap\">\r\n      <span class=\"lang-csharp\">XmlNamedNodeMap</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of nodes that can be accessed by name or index.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlNamedNodeMap : System.Collections.IEnumerable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlNamedNodeMap</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p><code>XmlNamedNodeMap</code> is returned by the following three properties.  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.xml.xmlelement#System_Xml_XmlElement_Attributes_\" data-linktype=\"relative-path\">Attributes</a> - Returns <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a>, a class which inherits from <code>XmlNamedNodeMap</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xml.xmldocumenttype#System_Xml_XmlDocumentType_Entities_\" data-linktype=\"relative-path\">Entities</a> - Returns an <code>XmlNamedNodeMap</code> containing <a class=\"xref\" href=\"system.xml.xmlentity\" data-linktype=\"relative-path\">XmlEntity</a> objects. The <code>XmlNamedNodeMap</code> is read-only.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xml.xmldocumenttype#System_Xml_XmlDocumentType_Notations_\" data-linktype=\"relative-path\">Notations</a> - Returns an <code>XmlNamedNodeMap</code> containing <a class=\"xref\" href=\"system.xml.xmlnotation\" data-linktype=\"relative-path\">XmlNotation</a> objects. The <code>XmlNamedNodeMap</code> is read-only.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of nodes in the <code>XmlNamedNodeMap</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides support for the &quot;foreach&quot; style iteration over the collection of nodes in the <code>XmlNamedNodeMap</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_GetNamedItem_System_String_\" data-linktype=\"self-bookmark\">GetNamedItem(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> specified by name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_GetNamedItem_System_String_System_String_\" data-linktype=\"self-bookmark\">GetNamedItem(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a node with the matching <span class=\"xref\">stem.Xml.XmlNode.LocalName*</span> and <span class=\"xref\">stem.Xml.XmlNode.NamespaceURI*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the node at the specified index in the <code>XmlNamedNodeMap</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_RemoveNamedItem_System_String_\" data-linktype=\"self-bookmark\">RemoveNamedItem(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the node from the <code>XmlNamedNodeMap</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_RemoveNamedItem_System_String_System_String_\" data-linktype=\"self-bookmark\">RemoveNamedItem(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a node with the matching <span class=\"xref\">stem.Xml.XmlNode.LocalName*</span> and <span class=\"xref\">stem.Xml.XmlNode.NamespaceURI*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlNamedNodeMap_SetNamedItem_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">SetNamedItem(XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> using its <span class=\"xref\">stem.Xml.XmlNode.Name*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_Count\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of nodes in the <code>XmlNamedNodeMap</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of nodes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> class (which inherits from <code>XmlNamedNodeMap</code>) to display all the attributes of a book.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNamedNodeMap.Count Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt;   &lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display all the attributes for this book...&quot; );\n   for ( int i = 0; i &lt; attrColl-&gt;Count; i++ )\n   {\n      Console::WriteLine( &quot;{0} = {1}&quot;, attrColl-&gt;Item( i )-&gt;Name, attrColl-&gt;Item( i )-&gt;Value );\n\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNamedNodeMap.Count Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; &amp; _\n                &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)\n                         \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display all the attributes for this book...&quot;)\n    Dim i As Integer\n    For i = 0 To attrColl.Count - 1\n       Console.WriteLine(&quot;{0} = {1}&quot;, attrColl.Item(i).Name,attrColl.Item(i).Value)\n    Next\n    \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlNamedNodeMap.Count Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; +\n                 &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                 &quot;&lt;/book&gt;&quot;);      \n \n     XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n     Console.WriteLine(&quot;Display all the attributes for this book...&quot;);\n     for (int i=0; i &lt; attrColl.Count; i++)\n     {\n        Console.WriteLine(&quot;{0} = {1}&quot;, attrColl.Item(i).Name, attrColl.Item(i).Value);\n     }         \n    \n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_GetEnumerator\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Provides support for the &quot;foreach&quot; style iteration over the collection of nodes in the <code>XmlNamedNodeMap</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays all attributes in the collection.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNamedNodeMap.GetEnumerator Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Collections;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39; &quot;\n   &quot;      ISBN=&#39;1-861001-57-5&#39;&gt;&quot;\n   &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot;\n   &quot;&lt;/book&gt;&quot; );\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display all the attributes for this book...&quot; );\n   IEnumerator^ ienum = attrColl-&gt;GetEnumerator();\n   while ( ienum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = dynamic_cast&lt;XmlAttribute^&gt;(ienum-&gt;Current);\n      Console::WriteLine( &quot;{0} = {1}&quot;, attr-&gt;Name, attr-&gt;Value );\n   }\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlNamedNodeMap.GetEnumerator Example#1\"> using System;\n using System.IO;\n using System.Xml;\n using System.Collections;\n \n public class Sample\n {\n   public static void Main()\n   {\n\n       XmlDocument doc = new XmlDocument();\n       doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39; &quot; +\n                   &quot;      ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                   &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                   &quot;&lt;/book&gt;&quot;);      \n \n       XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n       Console.WriteLine(&quot;Display all the attributes for this book...&quot;);\n       IEnumerator ienum = attrColl.GetEnumerator();\n       while (ienum.MoveNext())\n       {\n         XmlAttribute attr = (XmlAttribute)ienum.Current;\n         Console.WriteLine(&quot;{0} = {1}&quot;, attr.Name, attr.Value);\n       }   \n   } \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNamedNodeMap.GetEnumerator Example#1\"> Option Explicit\n Option Strict\n \n Imports System\n Imports System.IO\n Imports System.Xml\n Imports System.Collections\n \n public class Sample\n   public shared sub Main()\n\n       Dim doc as XmlDocument = new XmlDocument()\n       doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39; &quot; &amp; _\n                   &quot;      ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                   &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                   &quot;&lt;/book&gt;&quot;)      \n \n       Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n       Console.WriteLine(&quot;Display all the attributes for this book...&quot;)\n       Dim ienum as IEnumerator = attrColl.GetEnumerator()\n       Dim attr as XmlAttribute   \n       while (ienum.MoveNext())\n         attr = CType(ienum.Current, XmlAttribute)\n         Console.WriteLine(&quot;{0} = {1}&quot;, attr.Name, attr.Value)\n       end while \n \n   end sub\n end class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_GetNamedItem_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_GetNamedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNamedItem(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> specified by name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode GetNamedItem (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The qualified name of the node to retrieve. It is matched against the <span class=\"xref\">stem.Xml.XmlNode.Name*</span> property of the matching node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>An <code>XmlNode</code> with the specified name or <code>null</code> if a matching node is not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> class (which inherits from <code>XmlNamedNodeMap</code>) to modify an attribute.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlNamedNodeMap.GetNamedItem Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; +\n                 &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                 &quot;&lt;/book&gt;&quot;);      \n \n     XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n     // Change the value for the genre attribute.\n     XmlAttribute attr = (XmlAttribute)attrColl.GetNamedItem(&quot;genre&quot;);\n     attr.Value = &quot;fiction&quot;;\n\n     Console.WriteLine(&quot;Display the modified XML...&quot;);\n     Console.WriteLine(doc.OuterXml);\n    \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNamedNodeMap.GetNamedItem Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt;   &lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   \n   // Change the value for the genre attribute.\n   XmlAttribute^ attr = dynamic_cast&lt;XmlAttribute^&gt;(attrColl-&gt;GetNamedItem( &quot;genre&quot; ));\n   attr-&gt;Value = &quot;fiction&quot;;\n   Console::WriteLine( &quot;Display the modified XML...&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNamedNodeMap.GetNamedItem Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; &amp; _\n                &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)\n                         \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    &#39; Change the value for the genre attribute.\n    Dim attr as XmlAttribute = CType(attrColl.GetNamedItem(&quot;genre&quot;),XmlAttribute)\n    attr.Value = &quot;fiction&quot;\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n    \n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_GetNamedItem_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_GetNamedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNamedItem(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a node with the matching <span class=\"xref\">stem.Xml.XmlNode.LocalName*</span> and <span class=\"xref\">stem.Xml.XmlNode.NamespaceURI*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode GetNamedItem (string localName, string namespaceURI);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the node to retrieve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceURI</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace Uniform Resource Identifier (URI) of the node to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> with the matching local name and namespace URI or <code>null</code> if a matching node was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the node at the specified index in the <code>XmlNamedNodeMap</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode Item (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index position of the node to retrieve from the <code>XmlNamedNodeMap</code>. The index is zero-based; therefore, the index of the first node is 0 and the index of the last node is <span class=\"xref\">stem.Xml.XmlNamedNodeMap.Count*</span> -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> at the specified index. If <code>index</code> is less than 0 or greater than or equal to the <span class=\"xref\">stem.Xml.XmlNamedNodeMap.Count*</span> property, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> class (which inherits from <code>XmlNamedNodeMap</code>) to display all the attributes of a book.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNamedNodeMap.Count Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt;   &lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display all the attributes for this book...&quot; );\n   for ( int i = 0; i &lt; attrColl-&gt;Count; i++ )\n   {\n      Console::WriteLine( &quot;{0} = {1}&quot;, attrColl-&gt;Item( i )-&gt;Name, attrColl-&gt;Item( i )-&gt;Value );\n\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNamedNodeMap.Count Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; &amp; _\n                &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)\n                         \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display all the attributes for this book...&quot;)\n    Dim i As Integer\n    For i = 0 To attrColl.Count - 1\n       Console.WriteLine(&quot;{0} = {1}&quot;, attrColl.Item(i).Name,attrColl.Item(i).Value)\n    Next\n    \n  end sub\nend class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlNamedNodeMap.Count Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; +\n                 &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                 &quot;&lt;/book&gt;&quot;);      \n \n     XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n     Console.WriteLine(&quot;Display all the attributes for this book...&quot;);\n     for (int i=0; i &lt; attrColl.Count; i++)\n     {\n        Console.WriteLine(&quot;{0} = {1}&quot;, attrColl.Item(i).Name, attrColl.Item(i).Value);\n     }         \n    \n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_RemoveNamedItem_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_RemoveNamedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveNamedItem(String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the node from the <code>XmlNamedNodeMap</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode RemoveNamedItem (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The qualified name of the node to remove. The name is matched against the <span class=\"xref\">stem.Xml.XmlNode.Name*</span> property of the matching node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlNode</code> removed from this <code>XmlNamedNodeMap</code> or <code>null</code> if a matching node was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> class (which inherits from <code>XmlNamedNodeMap</code>) to remove an attribute.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; +\n                 &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                 &quot;&lt;/book&gt;&quot;);      \n \n     XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n     // Remove the publicationdate attribute.\n     attrColl.RemoveNamedItem(&quot;publicationdate&quot;);\n\n     Console.WriteLine(&quot;Display the modified XML...&quot;);\n     Console.WriteLine(doc.OuterXml);\n    \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt;   &lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   \n   // Remove the publicationdate attribute.\n   attrColl-&gt;RemoveNamedItem( &quot;publicationdate&quot; );\n   Console::WriteLine( &quot;Display the modified XML...&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNamedNodeMap.RemoveNamedItem1 Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; &amp; _\n                &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)\n                         \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    &#39; Remove the publicationdate attribute.\n    attrColl.RemoveNamedItem(&quot;publicationdate&quot;)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n    \n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_RemoveNamedItem_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_RemoveNamedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveNamedItem(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a node with the matching <span class=\"xref\">stem.Xml.XmlNode.LocalName*</span> and <span class=\"xref\">stem.Xml.XmlNode.NamespaceURI*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode RemoveNamedItem (string localName, string namespaceURI);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the node to remove.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceURI</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the node to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> removed or <code>null</code> if a matching node was not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlNamedNodeMap_SetNamedItem_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlNamedNodeMap_SetNamedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetNamedItem(XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> using its <span class=\"xref\">stem.Xml.XmlNode.Name*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <code>XmlNode</code> to store in the <code>XmlNamedNodeMap</code>. If a node with that name is already present in the map, it is replaced by the new one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>If the <code>node</code> replaces an existing node with the same name, the old node is returned; otherwise, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>node</code> was created from a different <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> than the one that created the <code>XmlNamedNodeMap</code>; or the <code>XmlNamedNodeMap</code> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> class (which inherits from <code>XmlNamedNodeMap</code>) to add an attribute to the collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlNamedNodeMap.SetNamedItem Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n     XmlDocument doc = new XmlDocument();\n     doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; +\n                 &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                 &quot;&lt;/book&gt;&quot;);      \n \n     XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n     // Add a new attribute to the collection.\n     XmlAttribute attr = doc.CreateAttribute(&quot;style&quot;);\n     attr.Value = &quot;hardcover&quot;;\n     attrColl.SetNamedItem(attr);\n\n     Console.WriteLine(&quot;Display the modified XML...&quot;);\n     Console.WriteLine(doc.OuterXml);\n    \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlNamedNodeMap.SetNamedItem Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   \n   // Add a new attribute to the collection.\n   XmlAttribute^ attr = doc-&gt;CreateAttribute( &quot;style&quot; );\n   attr-&gt;Value = &quot;hardcover&quot;;\n   attrColl-&gt;SetNamedItem( attr );\n   Console::WriteLine( &quot;Display the modified XML...&quot; );\n   Console::WriteLine( doc-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlNamedNodeMap.SetNamedItem Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book genre=&#39;novel&#39; publicationdate=&#39;1997&#39;&gt; &quot; &amp; _\n                &quot;  &lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;)\n                         \n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    &#39; Add a new attribute to the collection.\n    Dim attr as XmlAttribute = doc.CreateAttribute(&quot;style&quot;)\n    attr.Value = &quot;hardcover&quot;\n    attrColl.SetNamedItem(attr)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Console.WriteLine(doc.OuterXml)\n    \n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlNamedNodeMap.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlNamedNodeMap.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap.Count\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap.GetNamedItem\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap.Item\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap.RemoveNamedItem\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlNamedNodeMap.SetNamedItem\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"208556c4-7b38-b09d-cfc6-93010d8e1b7f\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xml\\XmlNamedNodeMap.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of nodes that can be accessed by name or index.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlNamedNodeMap\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlNamedNodeMap.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlNamedNodeMap.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlNamedNodeMap","System.Xml.XmlNamedNodeMap.Count","System.Xml.XmlNamedNodeMap.GetEnumerator","System.Xml.XmlNamedNodeMap.GetNamedItem","System.Xml.XmlNamedNodeMap.Item","System.Xml.XmlNamedNodeMap.RemoveNamedItem","System.Xml.XmlNamedNodeMap.SetNamedItem"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlNamedNodeMap","System::Xml::XmlNamedNodeMap","System.Xml.XmlNamedNodeMap.Count","System::Xml::XmlNamedNodeMap::Count","System.Xml.XmlNamedNodeMap.GetEnumerator","System::Xml::XmlNamedNodeMap::GetEnumerator","System.Xml.XmlNamedNodeMap.GetNamedItem","System::Xml::XmlNamedNodeMap::GetNamedItem","System.Xml.XmlNamedNodeMap.Item","System::Xml::XmlNamedNodeMap::Item","System.Xml.XmlNamedNodeMap.RemoveNamedItem","System::Xml::XmlNamedNodeMap::RemoveNamedItem","System.Xml.XmlNamedNodeMap.SetNamedItem","System::Xml::XmlNamedNodeMap::SetNamedItem"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"208556c4-7b38-b09d-cfc6-93010d8e1b7f","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xml\\XmlNamedNodeMap.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlNamedNodeMap.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlNamedNodeMap class | Microsoft Docs","_op_ogTitle":"XmlNamedNodeMap class","description":"Represents a collection of nodes that can be accessed by name or index.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlNamedNodeMap","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlnamednodemap","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlnamednodemap","fileRelativePath":"System.Xml.XmlNamedNodeMap.html"},"themesRelativePathToOutputRoot":"_themes/"}