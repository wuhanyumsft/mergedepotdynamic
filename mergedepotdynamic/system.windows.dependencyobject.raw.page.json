{"content":"    \r\n    <h1 id=\"System_Windows_DependencyObject\">\r\n      <span class=\"lang-csharp\">DependencyObject</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an object that participates in the dependency property system.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.ComponentModel.DependencyObjectProvider))]\n[System.Windows.Markup.NameScopeProperty(&quot;NameScope&quot;, typeof(System.Windows.NameScope))]\npublic class DependencyObject : System.Windows.Threading.DispatcherObject</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">System.Windows.Threading.DispatcherObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DependencyObject</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DependencyObject class enables <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> property system services on its many derived classes.  </p>\n<p> The property system&#39;s primary function is to compute the values of properties, and to provide system notification about values that have changed. Another key class that participates in the property system is <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a>. <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> enables the registration of dependency properties into the property system, and provides identification and information about each dependency property, whereas DependencyObject as a base class enables objects to use the dependency properties.  </p>\n<p> DependencyObject services and characteristics include the following:  </p>\n<ul>\n<li><p>Dependency property hosting support. You register a dependency property by calling the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a> method, and storing the method&#39;s return value as a public static field in your class.  </p>\n</li>\n<li><p>Attached property hosting support. You register an attached property by calling the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_RegisterAttached_\" data-linktype=\"relative-path\">RegisterAttached</a> method, and storing the method&#39;s return value as a public static read-only field in your class. (There are also additional member requirements; note that this represents a <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE --> specific implementation for attached properties. For details, see <a href=\"../Topic/Attached%20Properties%20Overview.md\" data-linktype=\"relative-path\">Attached Properties Overview</a>.) Your attached property can then be set on any class that derives from DependencyObject.  </p>\n</li>\n<li><p>Get, set, and clear utility methods for values of any dependency properties that exist on the DependencyObject.  </p>\n</li>\n<li><p>Metadata, coerce value support, property changed notification, and override callbacks for  dependency properties or attached properties. Also, the DependencyObject class facilitates the per-owner property metadata for a dependency property.  </p>\n</li>\n<li><p>A common base class for classes derived from <a class=\"xref\" href=\"system.windows.contentelement\" data-linktype=\"relative-path\">ContentElement</a>, <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>, or <a class=\"xref\" href=\"system.windows.media.visual\" data-linktype=\"relative-path\">Visual</a>. (<a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>, another base element class, has a class hierarchy that includes <a class=\"xref\" href=\"system.windows.media.visual\" data-linktype=\"relative-path\">Visual</a>.)</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject__ctor\" data-linktype=\"self-bookmark\">DependencyObject()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_DependencyObjectType\" data-linktype=\"self-bookmark\">DependencyObjectType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a> that wraps the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> type of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_IsSealed\" data-linktype=\"self-bookmark\">IsSealed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether this instance is currently sealed (read-only).</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">ClearValue(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears the local value of a property. The property to be cleared is specified by a <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\" data-linktype=\"self-bookmark\">ClearValue(DependencyPropertyKey)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears the local value of a read-only property. The property to be cleared is specified by a <a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">CoerceValue(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Coerces the value of the specified dependency property. This is accomplished by invoking any <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> function specified in property metadata for the dependency property as it exists on the calling <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a provided <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> is equivalent to the current <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a hash code for this <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_GetLocalValueEnumerator\" data-linktype=\"self-bookmark\">GetLocalValueEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a specialized enumerator for determining which dependency properties have locally set values on this <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">GetValue(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the current effective value of a dependency property on this instance of a <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">InvalidateProperty(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Re-evaluates the effective value for the specified dependency property</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"self-bookmark\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invoked whenever the effective value of any dependency property on this <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> has been updated. The specific dependency property that changed is reported in the event data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">ReadLocalValue(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the local value of a dependency property, if it exists.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"self-bookmark\">SetCurrentValue(DependencyProperty,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the value of a dependency property without changing its value source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"self-bookmark\">SetValue(DependencyProperty,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the local value of a dependency property, specified by its dependency property identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\" data-linktype=\"self-bookmark\">SetValue(DependencyPropertyKey,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the local value of a read-only dependency property, specified by the <a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a> identifier of the dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">ShouldSerializeProperty(DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject__ctor\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DependencyObject()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DependencyObject ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_DependencyObjectType\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_DependencyObjectType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DependencyObjectType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a> that wraps the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> type of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.DependencyObjectType DependencyObjectType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a> that wraps the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> type of this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is useful if an object that is returned from a method has a return value type of <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> and you want to perform property system specific operations on it depending on its type. For example it is more efficient to call <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_GetMetadata_System_Windows_DependencyObjectType_\" data-linktype=\"relative-path\">GetMetadata(DependencyObjectType)</a> using the <a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a> rather than the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> type. <a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a> facilitates faster lookup.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following pseudocode example, <code>MySubClass</code> anticipates that additional derived classes might change the default value of the <code>MyCustom</code> dependency property. The class implements a default constructor that can determine the actual derived class by taking advantage of polymorphism on the <a class=\"xref\" href=\"system.windows.dependencyobjecttype\" data-linktype=\"relative-path\">DependencyObjectType</a> value whenever that constructor is used as a derived class instantiator.  </p>\n<p> <code>public DOClass() : base()</code>  </p>\n<p> <code>{</code>  </p>\n<p> <code>__customPropertyCache = (CustomDP)</code>  </p>\n<p> <code>CustomDPProperty.GetMetadata(DependencyObjectType).DefaultValue;</code>  </p>\n<p> <code>}</code></p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_IsSealed\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_IsSealed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSealed</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether this instance is currently sealed (read-only).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSealed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this instance is sealed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This value is set internally.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_ClearValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearValue(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Clears the local value of a property. The property to be cleared is specified by a <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearValue (System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The dependency property to be cleared, identified by a <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> object reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Attempted to call ClearValue on a sealed <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clearing the property value by calling ClearValue does not necessarily give a dependency property the default value that is specified in the dependency property metadata. Clearing the property only specifically clears whatever local value may have been applied. For more information, see <a href=\"../Topic/Dependency%20Property%20Value%20Precedence.md\" data-linktype=\"relative-path\">Dependency Property Value Precedence</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example iterates all properties that have local values set on an object, then calls ClearValue to clear the values of each such property.  </p>\n<pre><code class=\"lang-cs\" name=\"DPClearValue#IterateLocalValuesAndClear\">void RestoreDefaultProperties(object sender, RoutedEventArgs e)\n{\n    UIElementCollection uic = Sandbox.Children;\n    foreach (Shape uie in uic)\n    {\n        LocalValueEnumerator locallySetProperties = uie.GetLocalValueEnumerator();\n        while (locallySetProperties.MoveNext())\n        {\n            DependencyProperty propertyToClear = locallySetProperties.Current.Property;\n            if (!propertyToClear.ReadOnly) { uie.ClearValue(propertyToClear); }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DPClearValue#IterateLocalValuesAndClear\">Private Sub RestoreDefaultProperties(ByVal sender As Object, ByVal e As RoutedEventArgs)\n    Dim uic As UIElementCollection = Sandbox.Children\n    For Each uie As Shape In uic\n        Dim locallySetProperties As LocalValueEnumerator = uie.GetLocalValueEnumerator()\n        While locallySetProperties.MoveNext()\n            Dim propertyToClear As DependencyProperty = locallySetProperties.Current.Property\n            If Not propertyToClear.ReadOnly Then\n                uie.ClearValue(propertyToClear)\n            End If\n        End While\n    Next\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_ClearValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearValue(DependencyPropertyKey)</div>        \r\n          </div>\r\n    \r\n            <p>Clears the local value of a read-only property. The property to be cleared is specified by a <a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearValue (System.Windows.DependencyPropertyKey key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key for the dependency property to be cleared.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Attempted to call <span class=\"xref\">stem.Windows.DependencyObject.ClearValue*</span> on a sealed <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a> identifies a read-only dependency property for property system operations. Classes that define read-only dependency properties should not expose this key with public access. A publicly exposed key would provide a public code pathway that negated the read-only character of the property, if methods such as <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_\" data-linktype=\"relative-path\">ClearValue</a> or <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_\" data-linktype=\"relative-path\">SetValue</a> could be called outside the class or assembly, referencing the key.  </p>\n<p> Clearing the property value by calling ClearValue does not necessarily give a dependency property the default value that is specified in the dependency property metadata. Clearing the value only specifically clears whatever local value may have been applied. For more information, see <a href=\"../Topic/Dependency%20Property%20Value%20Precedence.md\" data-linktype=\"relative-path\">Dependency Property Value Precedence</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_CoerceValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CoerceValue(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Coerces the value of the specified dependency property. This is accomplished by invoking any <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> function specified in property metadata for the dependency property as it exists on the calling <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CoerceValue (System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier for the dependency property to coerce.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified <code>dp</code> or its value were invalid or do not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In addition to being explicitly invoked through calling CoerceValue, the <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> for a dependency property is also invoked internally whenever the dependency property value is being re-evaluated by the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-winclient-md.md&quot; -->WPF<!--END INCLUDE --> property system.  </p>\n<p> When you invoke the CoerceValue method, you are ultimately invoking the coerce value callback for the property that you specify. Typically you will invoke CoerceValue only if you know that a coerce value callback exists, and if you know the callback&#39;s criteria for coercion.  </p>\n<p> The most common scenario for calling CoerceValue is within class handling or property change callbacks of related properties that influence each other&#39;s values in a dependent way. For more information, see <a href=\"../Topic/Dependency%20Property%20Callbacks%20and%20Validation.md\" data-linktype=\"relative-path\">Dependency Property Callbacks and Validation</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls CoerceValue within a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation that is used as the <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_PropertyChangedCallback_\" data-linktype=\"relative-path\">PropertyChangedCallback</a> for a different dependency properties on the same class. This is a common pattern for introducing true value dependencies between dependency properties.  </p>\n<pre><code class=\"lang-cs\" name=\"DPCallbackOverride#OnPCCurrent\">private static void OnCurrentReadingChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n{\n  d.CoerceValue(MinReadingProperty);\n  d.CoerceValue(MaxReadingProperty);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DPCallbackOverride#OnPCCurrent\">Private Shared Sub OnCurrentReadingChanged(ByVal d As DependencyObject, ByVal e As DependencyPropertyChangedEventArgs)\n    d.CoerceValue(MinReadingProperty)\n    d.CoerceValue(MaxReadingProperty)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a provided <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> is equivalent to the current <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> to compare to the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the two instances are the same; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This implementation is reference equality only, and does not attempt to evaluate value equality of the contained properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_GetHashCode\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a hash code for this <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A signed 32-bit integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_GetLocalValueEnumerator\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_GetLocalValueEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLocalValueEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a specialized enumerator for determining which dependency properties have locally set values on this <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.LocalValueEnumerator GetLocalValueEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.localvalueenumerator\" data-linktype=\"relative-path\">LocalValueEnumerator</a></div>\r\n                  </div>\r\n                  <p>A specialized local value enumerator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <em>local value</em> is any dependency property value that was set by <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_\" data-linktype=\"relative-path\">SetValue</a>, as opposed to other aspects of the property system.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.localvalueenumerator\" data-linktype=\"relative-path\">LocalValueEnumerator</a> obtained by calling GetLocalValueEnumerator can be used to enumerate properties that have a locally set value on a <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> instance. Each such property is represented in the enumerator by a <a class=\"xref\" href=\"system.windows.localvalueentry\" data-linktype=\"relative-path\">LocalValueEntry</a> object, which has properties that reference the specific <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> and its values. This technique of enumerating over the locally set values can be used for optimization or for other handling of local values, such as to determine which property values of a <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> would change if they were cleared.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The returned <a class=\"xref\" href=\"system.windows.localvalueenumerator\" data-linktype=\"relative-path\">LocalValueEnumerator</a> might contain <a class=\"xref\" href=\"system.windows.localvalueentry\" data-linktype=\"relative-path\">LocalValueEntry</a> records for dependency properties that are read-only, or dependency properties where values are calculated by the property system. For example, a visual framework element that has an established width through layout will report a local value for <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualWidth_\" data-linktype=\"relative-path\">ActualWidth</a>. If you are getting local values in order to reset them, check the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> value on the property identifier of each <a class=\"xref\" href=\"system.windows.localvalueentry\" data-linktype=\"relative-path\">LocalValueEntry</a> to verify that the <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> in question is not read-only.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example iterates all properties that have local values set on an object, then calls <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_\" data-linktype=\"relative-path\">ClearValue</a> to clear the values of each such property.  </p>\n<pre><code class=\"lang-cs\" name=\"DPClearValue#IterateLocalValuesAndClear\">void RestoreDefaultProperties(object sender, RoutedEventArgs e)\n{\n    UIElementCollection uic = Sandbox.Children;\n    foreach (Shape uie in uic)\n    {\n        LocalValueEnumerator locallySetProperties = uie.GetLocalValueEnumerator();\n        while (locallySetProperties.MoveNext())\n        {\n            DependencyProperty propertyToClear = locallySetProperties.Current.Property;\n            if (!propertyToClear.ReadOnly) { uie.ClearValue(propertyToClear); }\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DPClearValue#IterateLocalValuesAndClear\">Private Sub RestoreDefaultProperties(ByVal sender As Object, ByVal e As RoutedEventArgs)\n    Dim uic As UIElementCollection = Sandbox.Children\n    For Each uie As Shape In uic\n        Dim locallySetProperties As LocalValueEnumerator = uie.GetLocalValueEnumerator()\n        While locallySetProperties.MoveNext()\n            Dim propertyToClear As DependencyProperty = locallySetProperties.Current.Property\n            If Not propertyToClear.ReadOnly Then\n                uie.ClearValue(propertyToClear)\n            End If\n        End While\n    Next\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_GetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValue(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the current effective value of a dependency property on this instance of a <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object GetValue (System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> identifier of the property to retrieve the value for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the current effective value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified <code>dp</code> or its value was invalid, or the specified <code>dp</code> does not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <em>effective value</em> is the value of the property that is returned by the property system to any caller that is requesting the value. The effective value is the result of the property system having evaluated all the possible inputs that participate in the property system value precedence. This includes coercion and animation. For more information, see <a href=\"../Topic/Dependency%20Property%20Value%20Precedence.md\" data-linktype=\"relative-path\">Dependency Property Value Precedence</a>.  </p>\n<p> This method will never return <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a>. The <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> is a sentinel value for the property system that is used in various capacities internally and occasionally also exposed through coercion callbacks.  </p>\n<p> If you are not sure what the property&#39;s type should be, you can query the identifier of the requested dependency property to determine whether there is a more specific <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_PropertyType_\" data-linktype=\"relative-path\">PropertyType</a> that the return value can be converted to.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_InvalidateProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidateProperty(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Re-evaluates the effective value for the specified dependency property</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InvalidateProperty (System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> identifier of the property to invalidate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call InvalidateProperty, any associated and applicable <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> or <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> functions registered for that dependency property might be invoked.  </p>\n<p> Calling InvalidateProperty on a property that has its local value set will have no effect, because the local value takes precedence over other property system inputs, except for animations. However, you could call <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_\" data-linktype=\"relative-path\">ClearValue</a>, then call InvalidateProperty. For more information, see <a href=\"../Topic/Dependency%20Property%20Value%20Precedence.md\" data-linktype=\"relative-path\">Dependency Property Value Precedence</a>.  </p>\n<p> Calling InvalidateProperty is not necessarily applicable for many dependency property scenarios. If a dependency property becomes invalidated because of value changes in any of the constituents, the property system invalidates and re-evaluates the dependency property automatically. However, there are still some appropriate scenarios where InvalidateProperty is useful. In particular, you can use InvalidateProperty inside the coerce value or property changed callback for a different dependency property. You can also use InvalidateProperty to force re-evaluation of a binding against a data source that is not able to implement the recommended <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged\" data-linktype=\"relative-path\">INotifyPropertyChanged</a> notification mechanism (perhaps if consuming data classes that cannot be derived from, or where the data is a static member).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls InvalidateProperty on a custom property, whenever properties that are involved in the invalidated property&#39;s calculations change. This is an alternative technique to calling the <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_CoerceValue_\" data-linktype=\"relative-path\">CoerceValue</a> method, because invalidating the property will also call any registered <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_CoerceValueCallback_\" data-linktype=\"relative-path\">CoerceValueCallback</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"PropertySystemEsoterics#InvalidateProperty\">static AreaButton()\n{\n    WidthProperty.OverrideMetadata(typeof(AreaButton), new FrameworkPropertyMetadata(new PropertyChangedCallback(InvalidateAreaProperty)));\n    HeightProperty.OverrideMetadata(typeof(AreaButton), new FrameworkPropertyMetadata(new PropertyChangedCallback(InvalidateAreaProperty)));\n}\nstatic void InvalidateAreaProperty(DependencyObject d, DependencyPropertyChangedEventArgs e)\n{\n    d.InvalidateProperty(AreaProperty);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"PropertySystemEsoterics#InvalidateProperty\">Shared Sub New()\n\tWidthProperty.OverrideMetadata(GetType(AreaButton), New FrameworkPropertyMetadata(New PropertyChangedCallback(AddressOf InvalidateAreaProperty)))\n\tHeightProperty.OverrideMetadata(GetType(AreaButton), New FrameworkPropertyMetadata(New PropertyChangedCallback(AddressOf InvalidateAreaProperty)))\nEnd Sub\nPrivate Shared Sub InvalidateAreaProperty(ByVal d As DependencyObject, ByVal e As DependencyPropertyChangedEventArgs)\n\td.InvalidateProperty(AreaProperty)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_OnPropertyChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Invoked whenever the effective value of any dependency property on this <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> has been updated. The specific dependency property that changed is reported in the event data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not intended to generally detect individual property changes or perform invalidations of properties on a per-case basis. OnPropertyChanged is instead intended for modifications of the general invalidation pattern, if certain information is known about wide classifications of properties. For example, changes in a <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> might be changes in the value types of the <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a>, or might be subproperties, where the changes are within other <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> references. The <a class=\"xref\" href=\"system.windows.freezable\" data-linktype=\"relative-path\">Freezable</a> override implementation of OnPropertyChanged uses internal information to determine whether the properties are subproperties, and provides appropriate base class logic for either case.  </p>\n<p> OnPropertyChanged is potentially invoked many times during the life of an object. Therefore, you can achieve better performance for the overall property system if you override the metadata of specific properties and then attach <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> or <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> functions for individual properties. However, you would use this method if a <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_ReadLocalValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadLocalValue(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the local value of a dependency property, if it exists.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ReadLocalValue (System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> identifier of the property to retrieve the value for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the local value, or returns the sentinel value <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> if no local value is set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You should use <a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetValue_\" data-linktype=\"relative-path\">GetValue</a> for most typical &quot;get&quot; operations for a dependency property. ReadLocalValue does not return the effective value for a variety of circumstances where the value was not locally set.  </p>\n<p> Values that are set by styles, themes, templates, the default value from metadata, or property value inheritance are not considered to be local values. However, bindings and other expressions are considered to be local values, after they have been evaluated.  </p>\n<p> When no local value is set, this method returns <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a>.  </p>\n<p> If the returned value is other than <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a>, you can query the metadata of the requested dependency property to determine whether there is a more specific type that the return value can be converted to.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_SetCurrentValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCurrentValue(DependencyProperty,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the value of a dependency property without changing its value source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetCurrentValue (System.Windows.DependencyProperty dp, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the dependency property to set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new local value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Attempted to modify a read-only dependency property, or a property on a sealed <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> was not the correct type as registered for the <code>dp</code> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by a component that programmatically sets the value of one of its own properties without disabling an application&#39;s declared use of the property. The SetCurrentValue method changes the effective value of the property, but existing triggers, data bindings, and styles will continue to work.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_SetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetValue(DependencyProperty,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the local value of a dependency property, specified by its dependency property identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetValue (System.Windows.DependencyProperty dp, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the dependency property to set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new local value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Attempted to modify a read-only dependency property, or a property on a sealed <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> was not the correct type as registered for the <code>dp</code> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown. The <code>value</code> parameter should always be provided as the appropriate type.  </p>\n<p> The exception conditions are potentially influenced by the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_ValidateValueCallback_\" data-linktype=\"relative-path\">ValidateValueCallback</a> callback that exists on the dependency property identifier of the dependency property being set. Otherwise, the value provided might be failing general type-checking conditions (for example, passing a string when the native type is Double).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_SetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetValue(DependencyPropertyKey,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the local value of a read-only dependency property, specified by the <a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a> identifier of the dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetValue (System.Windows.DependencyPropertyKey key, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.dependencypropertykey\" data-linktype=\"relative-path\">DependencyPropertyKey</a> identifier of the property to set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new local value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This signature is generally used when you set values for read-only dependency properties that are defined by your custom classes. Generally, SetValue is called only from the type that registered that dependency property, which implements the internal logic that provides the determined value for the dependency property. For more information, see <a href=\"../Topic/Read-Only%20Dependency%20Properties.md\" data-linktype=\"relative-path\">Read-Only Dependency Properties</a>.  </p>\n<p> If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown. The <code>value</code> parameter should always be provided as the appropriate type. The exception conditions are potentially influenced by the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_ValidateValueCallback_\" data-linktype=\"relative-path\">ValidateValueCallback</a> callback that exists on the dependency property identifier of the dependency property being set.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example defines a read-only dependency property, along with a <code>public static readonly</code> <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> that provides necessary read-only exposure to property consumers, and the get accessor for the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-clr-md.md&quot; -->CLR<!--END INCLUDE --> wrapper.  </p>\n<pre><code class=\"lang-cs\" name=\"WPFAquariumSln#RODP\">internal static readonly DependencyPropertyKey AquariumSizeKey = DependencyProperty.RegisterReadOnly(\n  &quot;AquariumSize&quot;,\n  typeof(double),\n  typeof(Aquarium),\n  new PropertyMetadata(double.NaN)\n);\npublic static readonly DependencyProperty AquariumSizeProperty =\n  AquariumSizeKey.DependencyProperty;\npublic double AquariumSize\n{\n  get { return (double)GetValue(AquariumSizeProperty); }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WPFAquariumSln#RODP\">Friend Shared ReadOnly AquariumSizeKey As DependencyPropertyKey = DependencyProperty.RegisterReadOnly(&quot;AquariumSize&quot;, GetType(Double), GetType(Aquarium), New PropertyMetadata(Double.NaN))\nPublic Shared ReadOnly AquariumSizeProperty As DependencyProperty = AquariumSizeKey.DependencyProperty\nPublic ReadOnly Property AquariumSize() As Double\n    Get\n        Return CDbl(GetValue(AquariumSizeProperty))\n    End Get\nEnd Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_DependencyObject_ShouldSerializeProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerializeProperty(DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShouldSerializeProperty (System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier for the dependency property that should be serialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the dependency property that is supplied should be value-serialized; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default implementation returns <code>true</code> for all cases in which a dependency property had a local value established on the <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.DependencyObject.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.DependencyObject.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.ClearValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.CoerceValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.DependencyObjectType\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.Equals\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.GetLocalValueEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.GetValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.InvalidateProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.IsSealed\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.OnPropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.ReadLocalValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.SetCurrentValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.SetValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.DependencyObject.ShouldSerializeProperty\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"64574402-215b-d456-088b-7eb12f4d4d31\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows\\DependencyObject.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an object that participates in the dependency property system.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.DependencyObject\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.DependencyObject.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.DependencyObject.yml","open_to_public_contributors":true,"api_name":["System.Windows.DependencyObject","System.Windows.DependencyObject..ctor","System.Windows.DependencyObject.ClearValue","System.Windows.DependencyObject.CoerceValue","System.Windows.DependencyObject.DependencyObjectType","System.Windows.DependencyObject.Equals","System.Windows.DependencyObject.GetHashCode","System.Windows.DependencyObject.GetLocalValueEnumerator","System.Windows.DependencyObject.GetValue","System.Windows.DependencyObject.InvalidateProperty","System.Windows.DependencyObject.IsSealed","System.Windows.DependencyObject.OnPropertyChanged","System.Windows.DependencyObject.ReadLocalValue","System.Windows.DependencyObject.SetCurrentValue","System.Windows.DependencyObject.SetValue","System.Windows.DependencyObject.ShouldSerializeProperty"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.DependencyObject","System::Windows::DependencyObject","System.Windows.DependencyObject.#ctor","System::Windows::DependencyObject::#ctor","System.Windows.DependencyObject.ClearValue","System::Windows::DependencyObject::ClearValue","System.Windows.DependencyObject.CoerceValue","System::Windows::DependencyObject::CoerceValue","System.Windows.DependencyObject.DependencyObjectType","System::Windows::DependencyObject::DependencyObjectType","System.Windows.DependencyObject.Equals","System::Windows::DependencyObject::Equals","System.Windows.DependencyObject.GetHashCode","System::Windows::DependencyObject::GetHashCode","System.Windows.DependencyObject.GetLocalValueEnumerator","System::Windows::DependencyObject::GetLocalValueEnumerator","System.Windows.DependencyObject.GetValue","System::Windows::DependencyObject::GetValue","System.Windows.DependencyObject.InvalidateProperty","System::Windows::DependencyObject::InvalidateProperty","System.Windows.DependencyObject.IsSealed","System::Windows::DependencyObject::IsSealed","System.Windows.DependencyObject.OnPropertyChanged","System::Windows::DependencyObject::OnPropertyChanged","System.Windows.DependencyObject.ReadLocalValue","System::Windows::DependencyObject::ReadLocalValue","System.Windows.DependencyObject.SetCurrentValue","System::Windows::DependencyObject::SetCurrentValue","System.Windows.DependencyObject.SetValue","System::Windows::DependencyObject::SetValue","System.Windows.DependencyObject.ShouldSerializeProperty","System::Windows::DependencyObject::ShouldSerializeProperty"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"64574402-215b-d456-088b-7eb12f4d4d31","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows\\DependencyObject.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows/DependencyObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DependencyObject class | Microsoft Docs","_op_ogTitle":"DependencyObject class","description":"Represents an object that participates in the dependency property system.\n","toc_asset_id":"_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.DependencyObject","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.dependencyobject","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.dependencyobject","fileRelativePath":"System.Windows.DependencyObject.html"},"themesRelativePathToOutputRoot":"_themes/"}