{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_KnownTypeAttribute\">\r\n      <span class=\"lang-csharp\">KnownTypeAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies types that should be recognized by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> when serializing or deserializing a given type.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=true, Inherited=true)]\npublic sealed class KnownTypeAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">KnownTypeAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Apply the KnownTypeAttribute attribute to a type to indicate to the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a> types that should be recognized when serializing or deserializing an instance of the type to which the attribute is applied. This attribute could also be recognized by other serializers that understand data contracts.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In your code, you can use the word <code>KnownType</code> instead of the longer <code>KnownTypeAttribute</code>.  </p>\n</div>\n<p> You can either apply exactly one KnownTypeAttribute instance with the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute#System_Runtime_Serialization_KnownTypeAttribute_MethodName_\" data-linktype=\"relative-path\">MethodName</a> property set, or one or more KnownTypeAttribute instances with the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute#System_Runtime_Serialization_KnownTypeAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property set.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_KnownTypeAttribute__ctor_System_String_\" data-linktype=\"self-bookmark\">KnownTypeAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute\" data-linktype=\"relative-path\">KnownTypeAttribute</a> class with the name of a method that returns an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> of known types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_KnownTypeAttribute__ctor_System_Type_\" data-linktype=\"self-bookmark\">KnownTypeAttribute(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute\" data-linktype=\"relative-path\">KnownTypeAttribute</a> class with the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_KnownTypeAttribute_MethodName\" data-linktype=\"self-bookmark\">MethodName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_KnownTypeAttribute_Type\" data-linktype=\"self-bookmark\">Type</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type that should be recognized during serialization or deserialization by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_KnownTypeAttribute__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_KnownTypeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KnownTypeAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute\" data-linktype=\"relative-path\">KnownTypeAttribute</a> class with the name of a method that returns an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> of known types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KnownTypeAttribute (string methodName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>methodName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the method that returns an <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> of types used when serializing or deserializing data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor uses a method name that matches a method of the class.  The method returns a <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects. During serialization or deserialization, the types found in the collection can be used within the root type to which the attribute is applied.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>methodName</code> parameter to identify a method in the type that contains an array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"KnownTypeAttribute_Ctor_String#1\">&#39; The constructor names the method that returns an array \n&#39; of types that can be used during deserialization.\n&lt;KnownTypeAttribute(&quot;KnownTypes&quot;), DataContract()&gt;  _\nPublic Class Employee\n    Public Sub New(ByVal newFName As String, ByVal newLName As String) \n        FirstName = newFName\n        LastName = newLName\n    \n    End Sub &#39;New\n    &lt;DataMember()&gt;  _\n    Friend FirstName As String\n    &lt;DataMember()&gt;  _\n    Friend LastName As String\n    &lt;DataMember()&gt;  _\n    Friend id As Integer\n    &lt;DataMember()&gt;  _\n    Friend Boss As Manager\n    \n    &#39; This method returns the array of known types.\n    Shared Function KnownTypes() As Type() \n        Return New Type() {GetType(Manager), GetType(Employee)}\n    \n    End Function \nEnd Class \n\n&lt;DataContract()&gt;  _\nPublic Class Manager\n    Inherits Employee\n    \n    &#39; Call the base class&#39;s constructor.\n    Public Sub New(ByVal newFName As String, ByVal newLName As String) \n        MyBase.New(newFName, newLName)\n    \n    End Sub \n    \n    &lt;DataMember()&gt;  _\n    Friend Reports() As Employee\nEnd Class \n\nClass Program\n\n    Public Shared Sub Main() \n        Try\n            Serialize(&quot;person1.xml&quot;)\n            Deserialize(&quot;person1.xml&quot;)\n        Catch se As SerializationException\n            Console.WriteLine(&quot;{0}: {1}&quot;, se.Message, se.StackTrace)\n        Finally\n            Console.WriteLine(&quot;Press Enter to exit....&quot;)\n            Console.ReadLine()\n        End Try\n    \n    End Sub \n    \n    Shared Sub Serialize(ByVal path As String) \n        Dim emp As New Employee(&quot;John&quot;, &quot;Peoples&quot;)\n        emp.id = 3001\n        Dim theBoss As New Manager(&quot;Michiyo&quot;, &quot;Sato&quot;)\n        theBoss.id = 41\n        emp.Boss = theBoss\n\n        Dim ser As New DataContractSerializer(GetType(Employee))\n        \n        Dim fs As New FileStream(path, FileMode.OpenOrCreate)\n        ser.WriteObject(fs, emp)\n        fs.Close()\n    \n    End Sub \n    \n    Shared Sub Deserialize(ByVal path As String) \n        Dim ser As New DataContractSerializer(GetType(Employee))\n        Dim fs As New FileStream(path, FileMode.Open)\n        Dim p As Employee = CType(ser.ReadObject(fs), Employee)\n        \n        Console.WriteLine(&quot;{0} {1}, id:{2}&quot;, p.FirstName, p.LastName, p.id)\n        fs.Close()\n    \n    End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cs\" name=\"KnownTypeAttribute_Ctor_String#1\">namespace KnownTypeAttributeExample\n{\n    using System;\n    using System.Xml;\n    using System.Collections.Generic;\n    using System.Text;\n    using System.Runtime.Serialization;\n    using System.IO;\n    // The constructor names the method that returns an array \n    // of types that can be used during deserialization.\n    [KnownTypeAttribute(&quot;KnownTypes&quot;)]\n    [DataContract]\n    public class Employee\n    {\n        public Employee(string newFName, string newLName)\n        {\n            FirstName = newFName;\n            LastName = newLName;\n        }\n        [DataMember]\n        internal string FirstName;\n        [DataMember]\n        internal string LastName;\n        [DataMember]\n        internal int id;\n        [DataMember]\n        internal Manager Boss;\n\n        // This method returns the array of known types.\n        static Type[] KnownTypes()\n        {\n            return new Type[]{typeof(Manager), typeof(Employee)};\n        }\n    }\n\n    [DataContract]\n    public class Manager : Employee\n    {\n        // Call the base class&#39;s constructor.\n        public Manager(string newFName, string newLName)\n            : base(newFName, newLName)\n        { }\n        \n        [DataMember]\n        internal Employee[] Reports;\n        \n    }\n\n    class Program\n    {\n        public static void Main()\n        {\n            try\n            {\n                Serialize(&quot;person1.xml&quot;);\n                Deserialize(&quot;person1.xml&quot;);\n            }\n            catch (SerializationException se)\n            {\n                Console.WriteLine(&quot;{0}: {1}&quot;,\n                se.Message, se.StackTrace);\n            }\n            finally\n            {\n                Console.WriteLine(&quot;Press Enter to exit....&quot;);\n                Console.ReadLine();\n            }\n        }\n\n        static void Serialize(string path)\n        {\n            Employee emp = new Employee(&quot;John&quot;, &quot;Peoples&quot;);\n            emp.id = 3001;\n            Manager theBoss = new Manager(&quot;Michiyo&quot;, &quot;Sato&quot;);\n            theBoss.id = 41;\n            emp.Boss = theBoss;\n            \n            DataContractSerializer ser = \n                new DataContractSerializer(typeof(Employee));\n\n            FileStream fs =\n                new FileStream(path, FileMode.OpenOrCreate);\n            ser.WriteObject(fs, emp);\n            fs.Close();\n        }\n        static void Deserialize(string path)\n        {\n            DataContractSerializer ser = \n                new DataContractSerializer(typeof(Employee));\n            FileStream fs = new FileStream(path,\n            FileMode.Open);\n            Employee p = (Employee)ser.ReadObject(fs);\n\n            Console.WriteLine(&quot;{0} {1}, id:{2}&quot;, p.FirstName,\n                p.LastName, p.id);\n            fs.Close();\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_KnownTypeAttribute__ctor_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_KnownTypeAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KnownTypeAttribute(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute\" data-linktype=\"relative-path\">KnownTypeAttribute</a> class with the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KnownTypeAttribute (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that is included as a known type when serializing or deserializing data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a type named <code>Person</code> and a type named <code>IDInformation</code> that should be included when or deserializing.  </p>\n<pre><code class=\"lang-vb\" name=\"KnownTypeAttribute#0\">Imports System\nImports System.Collections.Generic\nImports System.Collections\nImports System.Text\nImports System.IO\nImports System.Runtime.Serialization\nImports System.Xml\n\nClass Program\n\n    Shared Sub Main(ByVal args() As String)\n        Try\n            Serialize(&quot;KnownTypeAttributeExample.xml&quot;)\n            Deserialize(&quot;KnownTypeAttributeExample.xml&quot;)\n            &#39; Run this twice. The second time, comment out the\n            &#39; Serialize call and comment out the \n            &#39; KnownTypeAttribute on the Person class. The\n            &#39; deserialization will then fail.\n        Catch exc As SerializationException\n            Console.WriteLine(&quot;{0}: {1}&quot;, exc.Message, exc.StackTrace)\n        Finally\n            Console.WriteLine(&quot;Press Enter to exit...&quot;)\n            Console.ReadLine()\n        End Try\n\n    End Sub\n\n\n    Public Shared Sub Serialize(ByVal path As String)\n        Dim p As New Person()\n        p.Miscellaneous.Add(DateTime.Now, &quot;Hello&quot;)\n        p.Miscellaneous.Add(DateTime.Now.AddSeconds(1), &quot;World&quot;)\n        Dim w As New IDInformation()\n        w.ID = &quot;1111 00000&quot;\n        p.Miscellaneous.Add(DateTime.Now.AddSeconds(2), w)\n        Dim ser As New DataContractserializer(GetType(Person))\n        Using fs As New FileStream(path, FileMode.OpenOrCreate)\n            ser.WriteObject(fs, p)\n        End Using\n    End Sub\n\n    Public Shared Sub Deserialize(ByVal path As String)\n        Dim ser As New DataContractserializer(GetType(Person))\n        Using fs As New FileStream(path, FileMode.OpenOrCreate)\n            Dim p2 As Person = ser.ReadObject(fs)\n            Console.WriteLine(&quot;Count {0}&quot;, p2.Miscellaneous.Count)\n            For Each de As DictionaryEntry In p2.Miscellaneous\n                Console.WriteLine(&quot;Key {0} Value: {1}&quot;, de.Key, _\n                de.Value)\n                If TypeOf (de.Value) Is IDInformation Then\n                    Dim www As IDInformation = de.Value\n                    Console.WriteLine( _\n                    &quot;Found ID Information. ID: {0}&quot;, www.ID)\n                End If\n            Next\n        End Using\n    End Sub\n\n    &#39; Apply the KnownTypeAttribute to the class that \n    &#39; includes a member that returns a Hashtable.\n    &lt;System.Runtime.Serialization.KnownType(GetType(IDInformation))&gt; _\n    &lt;DataContract()&gt; _\n    Public Class Person\n        Implements IExtensibleDataObject\n        Private MiscellaneousValue As New Hashtable()\n        Private ExtensionDataObjectValue As ExtensionDataObject\n\n        Public Property ExtensionData() As ExtensionDataObject _\n            Implements IExtensibleDataObject.ExtensionData\n            Get\n                Return ExtensionDataObjectValue\n            End Get\n            Set(ByVal value As ExtensionDataObject)\n                ExtensionDataObjectValue = value\n            End Set\n        End Property\n\n        &lt;DataMember()&gt; _\n        Public Property Miscellaneous() As Hashtable\n            Get\n                Return MiscellaneousValue\n            End Get\n            Set(ByVal value As Hashtable)\n                MiscellaneousValue = value\n            End Set\n        End Property\n    End Class\n\n    &lt;DataContract()&gt; _\n    Public Class IDInformation\n        Implements IExtensibleDataObject\n\n        Private ExtensionDataObjectValue As ExtensionDataObject\n\n        Public Property ExtensionData() As ExtensionDataObject _\n            Implements IExtensibleDataObject.ExtensionData\n            Get\n                Return ExtensionDataObjectValue\n            End Get\n\n            Set(ByVal value As ExtensionDataObject)\n                ExtensionDataObjectValue = value\n            End Set\n        End Property\n\n        &lt;DataMember()&gt; _\n        Public ID As String\n    End Class\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"KnownTypeAttribute#0\">using System;\nusing System.Collections.Generic;\nusing System.Collections;\nusing System.Text;\nusing System.IO;\nusing System.Runtime.Serialization;\n\nnamespace KnownTypeAttributeExample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            try\n            {\n                Serialize(&quot;KnownTypeAttributeExample.xml&quot;);\n                Deserialize(&quot;KnownTypeAttributeExample.xml&quot;);\n                // Run this twice. The second time, comment out the\n                // Serialize call and comment out the \n                // KnownTypeAttribute on the Person class. The\n                // deserialization will then fail.\n            }\n            catch (SerializationException exc)\n            {\n                Console.WriteLine(&quot;{0}: {1}&quot;, exc.Message,\n                    exc.StackTrace);\n            }\n            finally\n            {\n                Console.WriteLine(&quot;Press Enter to exit...&quot;);\n                Console.ReadLine();\n            }\n        }\n\n        public static void Serialize(string path)\n        {\n            Person p = new Person();\n            p.Miscellaneous.Add(DateTime.Now, &quot;Hello&quot;);\n            p.Miscellaneous.Add(DateTime.Now.AddSeconds(1), &quot;World&quot;);\n            IDInformation w = new IDInformation();\n            w.ID = &quot;1111 00000&quot;;\n            p.Miscellaneous.Add(DateTime.Now.AddSeconds(2), w);\n            DataContractSerializer ser =\n                new DataContractSerializer(typeof(Person));\n            FileStream fs = new FileStream(path, FileMode.Create);\n            using (fs)\n            {\n                ser.WriteObject(fs, p);\n            }\n        }\n\n        public static void Deserialize(string path)\n        {\n            DataContractSerializer ser =\n                new DataContractSerializer(typeof(Person));\n            FileStream fs = new FileStream(path, FileMode.Open);\n            using (fs)\n            {\n                Person p2 = (Person)ser.ReadObject(fs);\n                Console.WriteLine(&quot;Count {0}&quot;, p2.Miscellaneous.Count);\n                foreach (DictionaryEntry de in p2.Miscellaneous)\n                {\n                    Console.WriteLine(&quot;Key {0} Value: {1}&quot;, de.Key,\n                    de.Value);\n                    if (de.Value.GetType() == typeof(IDInformation))\n                    {\n                        IDInformation www = (IDInformation)de.Value;\n                        Console.WriteLine(\n                        &quot;&nbsp;&nbsp;&nbsp;&nbsp; Found ID Information. ID: {0} <br>&quot;, www.ID);\n                    }\n                }\n            }\n        }\n\n        // Apply the KnownTypeAttribute to the class that \n        // includes a member that returns a Hashtable.\n        [KnownType(typeof(IDInformation))]\n        [DataContract]\n        public class Person : IExtensibleDataObject\n        {\n            private ExtensionDataObject ExtensionDataObjectValue;\n\n            public ExtensionDataObject ExtensionData\n            {\n                get { return ExtensionDataObjectValue; }\n                set { ExtensionDataObjectValue = value; }\n            }\n\n            private Hashtable MiscellaneousValue = new Hashtable();\n            [DataMember]\n            public Hashtable Miscellaneous\n            {\n                get { return MiscellaneousValue; }\n                set { MiscellaneousValue = value; }\n            }\n        }\n\n        [DataContract]\n        public class IDInformation : IExtensibleDataObject\n        {\n            private ExtensionDataObject ExtensionDataValue;\n            public ExtensionDataObject ExtensionData\n            {\n                get { return ExtensionDataValue; }\n                set { ExtensionDataValue = value; }\n            }\n\n            [DataMember]\n            public string ID;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_KnownTypeAttribute_MethodName\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_KnownTypeAttribute_MethodName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MethodName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of a method that will return a list of types that should be recognized during serialization or deserialization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MethodName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the name of the method on the type defined by the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute\" data-linktype=\"relative-path\">KnownTypeAttribute</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The method must exist on the class or structure that the <a class=\"xref\" href=\"system.runtime.serialization.knowntypeattribute\" data-linktype=\"relative-path\">KnownTypeAttribute</a> is applied to, must be static, must accept no parameters, and must return an instance of any type that implements the generic <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> interface, such as the <a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection&lt;T&gt;</a> class, or an array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects.  </p>\n<p> The method is called once per application domain when the data contract is loaded for the type.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>methodName</code> parameter to identify a method in the type that contains an array of <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> objects.  </p>\n<pre><code class=\"lang-vb\" name=\"KnownTypeAttribute_Ctor_String#1\">&#39; The constructor names the method that returns an array \n&#39; of types that can be used during deserialization.\n&lt;KnownTypeAttribute(&quot;KnownTypes&quot;), DataContract()&gt;  _\nPublic Class Employee\n    Public Sub New(ByVal newFName As String, ByVal newLName As String) \n        FirstName = newFName\n        LastName = newLName\n    \n    End Sub &#39;New\n    &lt;DataMember()&gt;  _\n    Friend FirstName As String\n    &lt;DataMember()&gt;  _\n    Friend LastName As String\n    &lt;DataMember()&gt;  _\n    Friend id As Integer\n    &lt;DataMember()&gt;  _\n    Friend Boss As Manager\n    \n    &#39; This method returns the array of known types.\n    Shared Function KnownTypes() As Type() \n        Return New Type() {GetType(Manager), GetType(Employee)}\n    \n    End Function \nEnd Class \n\n&lt;DataContract()&gt;  _\nPublic Class Manager\n    Inherits Employee\n    \n    &#39; Call the base class&#39;s constructor.\n    Public Sub New(ByVal newFName As String, ByVal newLName As String) \n        MyBase.New(newFName, newLName)\n    \n    End Sub \n    \n    &lt;DataMember()&gt;  _\n    Friend Reports() As Employee\nEnd Class \n\nClass Program\n\n    Public Shared Sub Main() \n        Try\n            Serialize(&quot;person1.xml&quot;)\n            Deserialize(&quot;person1.xml&quot;)\n        Catch se As SerializationException\n            Console.WriteLine(&quot;{0}: {1}&quot;, se.Message, se.StackTrace)\n        Finally\n            Console.WriteLine(&quot;Press Enter to exit....&quot;)\n            Console.ReadLine()\n        End Try\n    \n    End Sub \n    \n    Shared Sub Serialize(ByVal path As String) \n        Dim emp As New Employee(&quot;John&quot;, &quot;Peoples&quot;)\n        emp.id = 3001\n        Dim theBoss As New Manager(&quot;Michiyo&quot;, &quot;Sato&quot;)\n        theBoss.id = 41\n        emp.Boss = theBoss\n\n        Dim ser As New DataContractSerializer(GetType(Employee))\n        \n        Dim fs As New FileStream(path, FileMode.OpenOrCreate)\n        ser.WriteObject(fs, emp)\n        fs.Close()\n    \n    End Sub \n    \n    Shared Sub Deserialize(ByVal path As String) \n        Dim ser As New DataContractSerializer(GetType(Employee))\n        Dim fs As New FileStream(path, FileMode.Open)\n        Dim p As Employee = CType(ser.ReadObject(fs), Employee)\n        \n        Console.WriteLine(&quot;{0} {1}, id:{2}&quot;, p.FirstName, p.LastName, p.id)\n        fs.Close()\n    \n    End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cs\" name=\"KnownTypeAttribute_Ctor_String#1\">namespace KnownTypeAttributeExample\n{\n    using System;\n    using System.Xml;\n    using System.Collections.Generic;\n    using System.Text;\n    using System.Runtime.Serialization;\n    using System.IO;\n    // The constructor names the method that returns an array \n    // of types that can be used during deserialization.\n    [KnownTypeAttribute(&quot;KnownTypes&quot;)]\n    [DataContract]\n    public class Employee\n    {\n        public Employee(string newFName, string newLName)\n        {\n            FirstName = newFName;\n            LastName = newLName;\n        }\n        [DataMember]\n        internal string FirstName;\n        [DataMember]\n        internal string LastName;\n        [DataMember]\n        internal int id;\n        [DataMember]\n        internal Manager Boss;\n\n        // This method returns the array of known types.\n        static Type[] KnownTypes()\n        {\n            return new Type[]{typeof(Manager), typeof(Employee)};\n        }\n    }\n\n    [DataContract]\n    public class Manager : Employee\n    {\n        // Call the base class&#39;s constructor.\n        public Manager(string newFName, string newLName)\n            : base(newFName, newLName)\n        { }\n        \n        [DataMember]\n        internal Employee[] Reports;\n        \n    }\n\n    class Program\n    {\n        public static void Main()\n        {\n            try\n            {\n                Serialize(&quot;person1.xml&quot;);\n                Deserialize(&quot;person1.xml&quot;);\n            }\n            catch (SerializationException se)\n            {\n                Console.WriteLine(&quot;{0}: {1}&quot;,\n                se.Message, se.StackTrace);\n            }\n            finally\n            {\n                Console.WriteLine(&quot;Press Enter to exit....&quot;);\n                Console.ReadLine();\n            }\n        }\n\n        static void Serialize(string path)\n        {\n            Employee emp = new Employee(&quot;John&quot;, &quot;Peoples&quot;);\n            emp.id = 3001;\n            Manager theBoss = new Manager(&quot;Michiyo&quot;, &quot;Sato&quot;);\n            theBoss.id = 41;\n            emp.Boss = theBoss;\n            \n            DataContractSerializer ser = \n                new DataContractSerializer(typeof(Employee));\n\n            FileStream fs =\n                new FileStream(path, FileMode.OpenOrCreate);\n            ser.WriteObject(fs, emp);\n            fs.Close();\n        }\n        static void Deserialize(string path)\n        {\n            DataContractSerializer ser = \n                new DataContractSerializer(typeof(Employee));\n            FileStream fs = new FileStream(path,\n            FileMode.Open);\n            Employee p = (Employee)ser.ReadObject(fs);\n\n            Console.WriteLine(&quot;{0} {1}, id:{2}&quot;, p.FirstName,\n                p.LastName, p.id);\n            fs.Close();\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_KnownTypeAttribute_Type\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_KnownTypeAttribute_Type_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Type</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type that should be recognized during serialization or deserialization by the <a class=\"xref\" href=\"system.runtime.serialization.datacontractserializer\" data-linktype=\"relative-path\">DataContractSerializer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type Type { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that is used during serialization or deserialization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.KnownTypeAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.KnownTypeAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.KnownTypeAttribute\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.KnownTypeAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.KnownTypeAttribute.MethodName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.KnownTypeAttribute.Type\">\r\n<meta name=\"APILocation\" content=\"System.Runtime.Serialization.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"eb7e091e-f5a8-b70e-8bad-a60a766cafac\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Runtime.Serialization\\KnownTypeAttribute.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies types that should be recognized by the  when serializing or deserializing a given type.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.KnownTypeAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.KnownTypeAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.KnownTypeAttribute.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.KnownTypeAttribute","System.Runtime.Serialization.KnownTypeAttribute..ctor","System.Runtime.Serialization.KnownTypeAttribute.MethodName","System.Runtime.Serialization.KnownTypeAttribute.Type"],"api_location":["System.Runtime.Serialization.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.KnownTypeAttribute","System::Runtime::Serialization::KnownTypeAttribute","System.Runtime.Serialization.KnownTypeAttribute.#ctor","System::Runtime::Serialization::KnownTypeAttribute::#ctor","System.Runtime.Serialization.KnownTypeAttribute.MethodName","System::Runtime::Serialization::KnownTypeAttribute::MethodName","System.Runtime.Serialization.KnownTypeAttribute.Type","System::Runtime::Serialization::KnownTypeAttribute::Type"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"eb7e091e-f5a8-b70e-8bad-a60a766cafac","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Runtime.Serialization\\KnownTypeAttribute.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/KnownTypeAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KnownTypeAttribute class | Microsoft Docs","_op_ogTitle":"KnownTypeAttribute class","description":"Specifies types that should be recognized by the  when serializing or deserializing a given type.\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.KnownTypeAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.knowntypeattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.knowntypeattribute","fileRelativePath":"System.Runtime.Serialization.KnownTypeAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}