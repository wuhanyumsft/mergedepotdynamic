{"content":"    \r\n    <h1 id=\"System_UriTemplateMatch\">\r\n      <span class=\"lang-csharp\">UriTemplateMatch</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>A class that represents the results of a match operation on a <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instance.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.CompilerServices.TypeForwardedFrom(&quot;System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;)]\npublic class UriTemplateMatch</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UriTemplateMatch</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The UriTemplateMatch class represents the results of calling the <a class=\"xref\" href=\"system.uritemplate#System_UriTemplate_Match_System_Uri_System_Uri_\" data-linktype=\"relative-path\">Match(Uri,Uri)</a> method. This class is not thread safe.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch__ctor\" data-linktype=\"self-bookmark\">UriTemplateMatch()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_BaseUri\" data-linktype=\"self-bookmark\">BaseUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the base URI for the template match.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_BoundVariables\" data-linktype=\"self-bookmark\">BoundVariables</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <code>BoundVariables</code> collection for the template match.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_Data\" data-linktype=\"self-bookmark\">Data</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the object associated with the <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_QueryParameters\" data-linktype=\"self-bookmark\">QueryParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of query string parameters and their values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_RelativePathSegments\" data-linktype=\"self-bookmark\">RelativePathSegments</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of relative path segments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_RequestUri\" data-linktype=\"self-bookmark\">RequestUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the matched URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_Template\" data-linktype=\"self-bookmark\">Template</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instance associated with this <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateMatch_WildcardPathSegments\" data-linktype=\"self-bookmark\">WildcardPathSegments</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of path segments that are matched by a wildcard in the URI template.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch__ctor\">\r\n    \r\n            <a id=\"System_UriTemplateMatch__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriTemplateMatch()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplateMatch ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Usually you do not directly instantiate this class, a <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instance is returned from the <a class=\"xref\" href=\"system.uritemplate#System_UriTemplate_Match_System_Uri_System_Uri_\" data-linktype=\"relative-path\">Match(Uri,Uri)</a> or <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MatchSingle_System_Uri_\" data-linktype=\"relative-path\">MatchSingle(Uri)</a> method. The <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_Match_\" data-linktype=\"relative-path\">Match</a> method returns a collection of <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> as well.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_BaseUri\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_BaseUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the base URI for the template match.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri BaseUri { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that represents the base URI for the template match.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the BaseUri property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#1\">        Dim template As New UriTemplate(&quot;weather/ state}/ city}?forecast=today&quot;)\n        Dim baseAddress As New Uri(&quot;http://localhost&quot;)\n        Dim fullUri As New Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;)\n\n        Console.WriteLine(&quot;Matching  0} to  1}&quot;, template.ToString(), fullUri.ToString())\n\n        &#39;Match a URI to a template\n        Dim results As UriTemplateMatch = template.Match(baseAddress, fullUri)\n        If (results IsNot Nothing) Then\n\n            &#39;BaseUri\n            Console.WriteLine(&quot;BaseUri:  0}&quot;, results.BaseUri)\n        End If\n        &#39;output:\n        &#39;BaseUri: http://localhost\n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#1\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                // BaseUri\n                Console.WriteLine(&quot;BaseUri: {0}&quot;, results.BaseUri);\n            }\n            // output:\n            // BaseUri: http://localhost\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_BoundVariables\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_BoundVariables_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BoundVariables</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <code>BoundVariables</code> collection for the template match.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection BoundVariables { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> instance that contains template variable values extracted from the URI during the match.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each template variable name appears as a name in this collection, and the value bound to that variable is stored under the corresponding name. The values in this collection have had all escape sequences translated into actual characters. This name value collection uses a case insensitive search when matching variable names.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the BoundVariables property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#2\">        Dim template As New UriTemplate(&quot;weather/ state}/ city}?forecast=today&quot;)\n        Dim baseAddress As New Uri(&quot;http://localhost&quot;)\n        Dim fullUri As New Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;)\n\n        Console.WriteLine(&quot;Matching  0} to  1}&quot;, template.ToString(), fullUri.ToString())\n\n        &#39;Match a URI to a template\n        Dim results As UriTemplateMatch = template.Match(baseAddress, fullUri)\n        If (results IsNot Nothing) Then\n\n            &#39;BaseUri\n            Console.WriteLine(&quot;BaseUri:  0}&quot;, results.BaseUri)\n\n            Console.WriteLine(&quot;BoundVariables:&quot;)\n            For Each variableName As String In results.BoundVariables.Keys\n                Console.WriteLine(&quot;     0}:  1}&quot;, variableName, results.BoundVariables(variableName))\n            Next\n        End If\n        &#39;Code output:\n        &#39;BaseUri: http://localhost/\n        &#39;BoundVariables:\n        &#39; state: wa\n        &#39; city: seattleConsole.WriteLine(&quot;BaseUri:  0}&quot;, results.BaseUri) \n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#2\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                // BaseUri\n                Console.WriteLine(&quot;BaseUri: {0}&quot;, results.BaseUri);\n\n                Console.WriteLine(&quot;BoundVariables:&quot;);\n                foreach (string variableName in results.BoundVariables.Keys)\n                {\n                    Console.WriteLine(&quot;    {0}: {1}&quot;, variableName, results.BoundVariables[variableName]);\n                }\n            }\n            // Code output:\n            // BaseUri: http://localhost/\n            // BoundVariables:\n            //  state: wa\n            //  city: seattleConsole.WriteLine(&quot;BaseUri: {0}&quot;, results.BaseUri);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_Data\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_Data_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Data</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the object associated with the <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Data { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you add a <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> to a <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> you associate data with the template. This value is application specific; no particular semantics are associated with this value. When <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_Match_System_Uri_\" data-linktype=\"relative-path\">Match(Uri)</a> is called and a match is found the data associated with the matching template is returned in the Data property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the Data property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#3\">        Dim prefix As New Uri(&quot;http://localhost/&quot;)\n\n        &#39; Create some templates:\n        Dim weatherByCity As New UriTemplate(&quot;weather/ state}/ city}&quot;)\n        Dim weatherByState As New UriTemplate(&quot;weather/ state}&quot;)\n        Dim traffic As New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard As New UriTemplate(&quot;*&quot;)\n\n        &#39;Create a template table\n        Dim table As UriTemplateTable = New UriTemplateTable(prefix)\n\n        &#39;Add the templates to the template table along with some associated data\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        &#39;Match a URI to a template\n        Dim candidateUri As New Uri(&quot;http://localhost/weather/WA/Redmond&quot;)\n        Dim results As UriTemplateMatch = table.MatchSingle(candidateUri)\n\n        If (results IsNot Nothing) Then\n\n            &#39;Get the data associated with the matching template\n            Dim data As String = CType(results.Data, String)\n            Console.WriteLine(&quot;Matching data is  0}&quot;, Data)\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#3\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                Object data = results.Data;\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_QueryParameters\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_QueryParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">QueryParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of query string parameters and their values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection QueryParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> instance that contains the query string parameters and their values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All query string name/value pairs from the original URI appear in this collection, even if they are not explicitly specified in the template string that was matched. The values in this collection have been had all escape sequences translated into actual characters.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the QueryParameters property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#4\">        Dim template As New UriTemplate(&quot;weather/ state}/ city}?forecast=today&quot;)\n        Dim baseAddress As New Uri(&quot;http://localhost&quot;)\n        Dim fullUri As New Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;)\n\n        Console.WriteLine(&quot;Matching  0} to  1}&quot;, template.ToString(), fullUri.ToString())\n\n        &#39;Match a URI to a template\n        Dim results As UriTemplateMatch = template.Match(baseAddress, fullUri)\n        If (results IsNot Nothing) Then\n\n            Console.WriteLine(&quot;QueryParameters:&quot;)\n            For Each queryName As String In results.QueryParameters.Keys\n                Console.WriteLine(&quot;     0} :  1}&quot;, queryName, results.QueryParameters(queryName))\n            Next\n            Console.WriteLine()\n        End If\n        &#39;Code output:\n        &#39; QueryParameters:\n        &#39; forecast : today\n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#4\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                Console.WriteLine(&quot;QueryParameters:&quot;);\n                foreach (string queryName in results.QueryParameters.Keys)\n                {\n                    Console.WriteLine(&quot;    {0} : {1}&quot;, queryName, results.QueryParameters[queryName]);\n                }\n                Console.WriteLine();\n            }\n            // Code output:\n            //  QueryParameters:\n            //  forecast : today\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_RelativePathSegments\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_RelativePathSegments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RelativePathSegments</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of relative path segments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.Collection&lt;string&gt; RelativePathSegments { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of relative path segments.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property contains a collection of the path segments from the candidate URI that matched the template along with path segments that matched a template wildcard. Path segments that matched a template wildcard are also contained in the <a class=\"xref\" href=\"system.uritemplatematch#System_UriTemplateMatch_WildcardPathSegments_\" data-linktype=\"relative-path\">WildcardPathSegments</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the RelativePathSegments property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#5\">        Dim template As New UriTemplate(&quot;weather/ state}/ city}?forecast=today&quot;)\n        Dim baseAddress As New Uri(&quot;http://localhost&quot;)\n        Dim fullUri As New Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;)\n\n        Console.WriteLine(&quot;Matching  0} to  1}&quot;, template.ToString(), fullUri.ToString())\n\n        &#39;Match a URI to a template\n        Dim results As UriTemplateMatch = template.Match(baseAddress, fullUri)\n        If (results IsNot Nothing) Then\n\n            Console.WriteLine(&quot;RelativePathSegments:&quot;)\n            For Each segment As String In results.RelativePathSegments\n                Console.WriteLine(&quot;      0}&quot;, segment)\n            Next\n        End If\n        &#39;Code output:\n        &#39;RelativePathSegments:\n        &#39;  weather\n        &#39;  wa\n        &#39;  seattle\n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#5\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                Console.WriteLine(&quot;RelativePathSegments:&quot;);\n                foreach (string segment in results.RelativePathSegments)\n                {\n                    Console.WriteLine(&quot;     {0}&quot;, segment);\n                }\n            }\n            // Code output:\n            // RelativePathSegments:\n            //   weather\n            //   wa\n            //   seattle\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_RequestUri\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_RequestUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RequestUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the matched URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri RequestUri { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the RequestUri property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#6\">        Dim template As New UriTemplate(&quot;weather/ state}/ city}?forecast=today&quot;)\n        Dim baseAddress As New Uri(&quot;http://localhost&quot;)\n        Dim fullUri As New Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;)\n\n        Console.WriteLine(&quot;Matching  0} to  1}&quot;, template.ToString(), fullUri.ToString())\n\n        &#39;Match a URI to a template\n        Dim results As UriTemplateMatch = template.Match(baseAddress, fullUri)\n        If (results IsNot Nothing) Then\n\n            Console.WriteLine(&quot;RequestUri:&quot;)\n            Console.WriteLine(results.RequestUri)\n        End If\n        &#39;Code output:\n        &#39;RequestUri:\n        &#39;http://localhost/weather/WA/Seattle?forecast=today\n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#6\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                Console.WriteLine(&quot;RequestUri:&quot;);\n                Console.WriteLine(results.RequestUri);\n            }\n            // Code output:\n            // RequestUri:\n            // http://localhost/weather/WA/Seattle?forecast=today\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_Template\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_Template_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Template</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instance associated with this <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplate Template { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property contains the <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> that the candidate URI matched.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the Template property.  </p>\n<pre><code class=\"lang-vb\" name=\"UriTemplateMatch#7\">        Dim template As New UriTemplate(&quot;weather/ state}/ city}?forecast=today&quot;)\n        Dim baseAddress As New Uri(&quot;http://localhost&quot;)\n        Dim fullUri As New Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;)\n\n        Console.WriteLine(&quot;Matching  0} to  1}&quot;, template.ToString(), fullUri.ToString())\n\n        &#39;Match a URI to a template\n        Dim results As UriTemplateMatch = template.Match(baseAddress, fullUri)\n        If (results IsNot Nothing) Then\n            Console.WriteLine(&quot;Template:&quot;)\n            Console.WriteLine(results.Template)\n        End If\n        &#39;Code output:\n        &#39;Template:\n        &#39;weather/ state}/ city}?forecast=today\n</code></pre><pre><code class=\"lang-cs\" name=\"UriTemplateMatch#7\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/{city}?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                Console.WriteLine(&quot;Template:&quot;);\n                Console.WriteLine(results.Template);\n            }\n            // Code output:\n            // Template:\n            // weather/{state}/{city}?forecast=today\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateMatch_WildcardPathSegments\">\r\n    \r\n            <a id=\"System_UriTemplateMatch_WildcardPathSegments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WildcardPathSegments</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of path segments that are matched by a wildcard in the URI template.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.Collection&lt;string&gt; WildcardPathSegments { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of path segments that are matched by a wildcard in the URI template.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code shows how to access the WildcardPathSegments property.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateMatch#8\">            UriTemplate template = new UriTemplate(&quot;weather/{state}/*?forecast=today&quot;);\n            Uri baseAddress = new Uri(&quot;http://localhost&quot;);\n            Uri fullUri = new Uri(&quot;http://localhost/weather/WA/Seattle?forecast=today&quot;);\n\n            Console.WriteLine(&quot;Matching {0} to {1}&quot;, template.ToString(), fullUri.ToString());\n\n            // Match a URI to a template\n            UriTemplateMatch results = template.Match(baseAddress, fullUri);\n            if (results != null)\n            {\n                Console.WriteLine(&quot;WildcardPathSegments:&quot;);\n                foreach (string segment in results.WildcardPathSegments)\n                {\n                    Console.WriteLine(&quot;     {0}&quot;, segment);\n                }\n                Console.WriteLine();\n            }\n            // Code output:\n            // WildcardPathSegments:\n            //   seattle\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.UriTemplateMatch.yml\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch..ctor\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.BaseUri\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.BoundVariables\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.Data\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.QueryParameters\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.RelativePathSegments\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.RequestUri\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.Template\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateMatch.WildcardPathSegments\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.Web.dll\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-17 08:51 AM\">\r\n<meta name=\"document_id\" content=\"26f06741-4edf-a0b1-12a5-4342d42234ea\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"A class that represents the results of a match operation on a  instance.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.UriTemplateMatch\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.UriTemplateMatch.yml","open_to_public_contributors":true,"api_name":["System.UriTemplateMatch","System.UriTemplateMatch..ctor","System.UriTemplateMatch.BaseUri","System.UriTemplateMatch.BoundVariables","System.UriTemplateMatch.Data","System.UriTemplateMatch.QueryParameters","System.UriTemplateMatch.RelativePathSegments","System.UriTemplateMatch.RequestUri","System.UriTemplateMatch.Template","System.UriTemplateMatch.WildcardPathSegments"],"api_location":["System.ServiceModel.Web.dll","System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.UriTemplateMatch","System::UriTemplateMatch","System.UriTemplateMatch.#ctor","System::UriTemplateMatch::#ctor","System.UriTemplateMatch.BaseUri","System::UriTemplateMatch::BaseUri","System.UriTemplateMatch.BoundVariables","System::UriTemplateMatch::BoundVariables","System.UriTemplateMatch.Data","System::UriTemplateMatch::Data","System.UriTemplateMatch.QueryParameters","System::UriTemplateMatch::QueryParameters","System.UriTemplateMatch.RelativePathSegments","System::UriTemplateMatch::RelativePathSegments","System.UriTemplateMatch.RequestUri","System::UriTemplateMatch::RequestUri","System.UriTemplateMatch.Template","System::UriTemplateMatch::Template","System.UriTemplateMatch.WildcardPathSegments","System::UriTemplateMatch::WildcardPathSegments"],"dev_langs":["csharp"],"updated_at":"2017-03-17 08:51 AM","document_id":"26f06741-4edf-a0b1-12a5-4342d42234ea","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/UriTemplateMatch.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UriTemplateMatch class | Microsoft Docs","_op_ogTitle":"UriTemplateMatch class","description":"A class that represents the results of a match operation on a  instance.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.UriTemplateMatch","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uritemplatematch","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uritemplatematch","fileRelativePath":"System.UriTemplateMatch.html"},"themesRelativePathToOutputRoot":"_themes/"}