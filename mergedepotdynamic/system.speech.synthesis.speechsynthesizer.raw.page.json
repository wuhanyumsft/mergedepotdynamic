{"content":"    \r\n    <h1 id=\"System_Speech_Synthesis_SpeechSynthesizer\">\r\n      <span class=\"lang-csharp\">SpeechSynthesizer</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides access to the functionality of an installed speech synthesis engine.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class SpeechSynthesizer : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SpeechSynthesizer</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>When you create a new SpeechSynthesizer object, it uses the default system voice. To configure the SpeechSynthesizer to use one of the installed speech synthesis (text-to-speech) voices, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> method. To get information about which voices are installed, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and the <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class.  </p>\n<p> This class also provides control over the following aspects of speech synthesis:  </p>\n<ul>\n<li><p>To configure the output for the SpeechSynthesizer object, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_\" data-linktype=\"relative-path\">SetOutputToAudioStream</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice_\" data-linktype=\"relative-path\">SetOutputToDefaultAudioDevice</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\" data-linktype=\"relative-path\">SetOutputToNull</a>, and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\" data-linktype=\"relative-path\">SetOutputToWaveFile</a> methods.  </p>\n</li>\n<li><p>To generate speech, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a>, or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> method. The SpeechSynthesizer can produce speech from text, a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> or <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object, or from <a href=\"http://go.microsoft.com/fwlink/?LinkId=201763\" data-linktype=\"external\">Speech Synthesis Markup Language (SSML) Version 1.0</a>.  </p>\n</li>\n<li><p>To pause and resume speech synthesis, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Pause_\" data-linktype=\"relative-path\">Pause</a> and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Resume_\" data-linktype=\"relative-path\">Resume</a> methods.  </p>\n</li>\n<li><p>To add or remove lexicons, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_AddLexicon_\" data-linktype=\"relative-path\">AddLexicon</a> and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_RemoveLexicon_\" data-linktype=\"relative-path\">RemoveLexicon</a> methods. The SpeechSynthesizer can use one or more lexicons to guide its pronunciation of words.  </p>\n</li>\n<li><p>To modify the delivery of speech output, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Rate_\" data-linktype=\"relative-path\">Rate</a> and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Volume_\" data-linktype=\"relative-path\">Volume</a> properties.  </p>\n<p>The SpeechSynthesizer raises events when it encounters certain features in prompts: (<a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_BookmarkReached\" data-linktype=\"relative-path\">BookmarkReached</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached\" data-linktype=\"relative-path\">PhonemeReached</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_VisemeReached\" data-linktype=\"relative-path\">VisemeReached</a>, and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a>). It also raises events that report on the start (<a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakStarted\" data-linktype=\"relative-path\">SpeakStarted</a>) and end (<a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\" data-linktype=\"relative-path\">SpeakCompleted</a>) of speak operations and on the change of the speaking voice (<a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_VoiceChange\" data-linktype=\"relative-path\">VoiceChange</a>).  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Dispose_\" data-linktype=\"relative-path\">Dispose</a> before you release your last reference to the SpeechSynthesizer. Otherwise, the resources it is using will not be freed until the garbage collector calls the SpeechSynthesizer object&#39;s <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer__ctor\" data-linktype=\"self-bookmark\">SpeechSynthesizer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Rate\" data-linktype=\"self-bookmark\">Rate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the speaking rate of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_State\" data-linktype=\"self-bookmark\">State</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current speaking state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Voice\" data-linktype=\"self-bookmark\">Voice</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets information about the current voice of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Volume\" data-linktype=\"self-bookmark\">Volume</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Get or sets the output volume of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_AddLexicon_System_Uri_System_String_\" data-linktype=\"self-bookmark\">AddLexicon(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a lexicon to the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disposes the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object and releases resources used during the session.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Acts as a safeguard to clean up resources in the event that the <span class=\"xref\">stem.Speech.Synthesis.SpeechSynthesizer.Dispose*</span> method is not called.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_GetCurrentlySpokenPrompt\" data-linktype=\"self-bookmark\">GetCurrentlySpokenPrompt()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the prompt that the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> is speaking.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices\" data-linktype=\"self-bookmark\">GetInstalledVoices()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns all of the installed speech synthesis (text-to-speech) voices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_System_Globalization_CultureInfo_\" data-linktype=\"self-bookmark\">GetInstalledVoices(CultureInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Pause\" data-linktype=\"self-bookmark\">Pause()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Pauses the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_RemoveLexicon_System_Uri_\" data-linktype=\"self-bookmark\">RemoveLexicon(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes a lexicon from the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Resume\" data-linktype=\"self-bookmark\">Resume()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resumes the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object after it has been paused.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_System_String_\" data-linktype=\"self-bookmark\">SelectVoice(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a specific voice by name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_\" data-linktype=\"self-bookmark\">SelectVoiceByHints(VoiceGender)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a voice with a specific gender.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_System_Speech_Synthesis_VoiceAge_\" data-linktype=\"self-bookmark\">SelectVoiceByHints(VoiceGender,VoiceAge)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a voice with a specific gender and age.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_System_Speech_Synthesis_VoiceAge_System_Int32_\" data-linktype=\"self-bookmark\">SelectVoiceByHints(VoiceGender,VoiceAge,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_System_Speech_Synthesis_VoiceAge_System_Int32_System_Globalization_CultureInfo_\" data-linktype=\"self-bookmark\">SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_System_IO_Stream_System_Speech_AudioFormat_SpeechAudioFormatInfo_\" data-linktype=\"self-bookmark\">SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to an audio stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice\" data-linktype=\"self-bookmark\">SetOutputToDefaultAudioDevice()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to send output to the default audio device.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull\" data-linktype=\"self-bookmark\">SetOutputToNull()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to not send output from synthesis operations to a device, file, or stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_System_String_\" data-linktype=\"self-bookmark\">SetOutputToWaveFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to a file that contains Waveform format audio.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_System_String_System_Speech_AudioFormat_SpeechAudioFormatInfo_\" data-linktype=\"self-bookmark\">SetOutputToWaveFile(String,SpeechAudioFormatInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to a Waveform audio format file in a specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_System_IO_Stream_\" data-linktype=\"self-bookmark\">SetOutputToWaveStream(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to a stream that contains Waveform format audio.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Speak_System_Speech_Synthesis_Prompt_\" data-linktype=\"self-bookmark\">Speak(Prompt)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Speak_System_Speech_Synthesis_PromptBuilder_\" data-linktype=\"self-bookmark\">Speak(PromptBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_Speak_System_String_\" data-linktype=\"self-bookmark\">Speak(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously speaks the contents of a string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_System_Speech_Synthesis_Prompt_\" data-linktype=\"self-bookmark\">SpeakAsync(Prompt)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_System_Speech_Synthesis_PromptBuilder_\" data-linktype=\"self-bookmark\">SpeakAsync(PromptBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_System_String_\" data-linktype=\"self-bookmark\">SpeakAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously speaks the contents of a string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancel_System_Speech_Synthesis_Prompt_\" data-linktype=\"self-bookmark\">SpeakAsyncCancel(Prompt)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels the asynchronous synthesis operation for a queued prompt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancelAll\" data-linktype=\"self-bookmark\">SpeakAsyncCancelAll()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels all queued, asynchronous, speech synthesis operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_System_String_\" data-linktype=\"self-bookmark\">SpeakSsml(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Synchronously speaks a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains SSML markup.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_System_String_\" data-linktype=\"self-bookmark\">SpeakSsmlAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously speaks a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains SSML markup.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_BookmarkReached\" data-linktype=\"self-bookmark\">BookmarkReached</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> encounters a bookmark in a prompt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached\" data-linktype=\"self-bookmark\">PhonemeReached</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when a phoneme is reached.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\" data-linktype=\"self-bookmark\">SpeakCompleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> completes the speaking of a prompt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"self-bookmark\">SpeakProgress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised after the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> speaks each individual word of a prompt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_SpeakStarted\" data-linktype=\"self-bookmark\">SpeakStarted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> begins the speaking of a prompt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_StateChanged\" data-linktype=\"self-bookmark\">StateChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when the state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_VisemeReached\" data-linktype=\"self-bookmark\">VisemeReached</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when a viseme is reached.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Synthesis_SpeechSynthesizer_VoiceChange\" data-linktype=\"self-bookmark\">VoiceChange</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raised when the voice of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer__ctor\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeechSynthesizer()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SpeechSynthesizer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you initialize a new <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> instance, it uses the default system voice. To configure the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> to use one of the installed speech synthesis (text-to-speech) voices, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> method. To get information about which voices are installed, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and the <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Rate\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Rate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the speaking rate of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Rate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the speaking rate of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object, from -10 through 10.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example speaks a string with the speaking rate set to -2.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n\n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Set a value for the speaking rate.  \n      synth.Rate = -2;  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Speak a text string synchronously.  \n      synth.Speak(&quot;This example speaks a string with the speaking rate set to -2.&quot;);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }     \n  }    \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_State\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_State_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">State</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current speaking state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Synthesis.SynthesizerState State { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.synthesizerstate\" data-linktype=\"relative-path\">SynthesizerState</a></div>\r\n                  </div>\r\n                  <p>Returns the current speaking state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the new state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> after it changes, use the <a class=\"xref\" href=\"system.speech.synthesis.statechangedeventargs#System_Speech_Synthesis_StateChangedEventArgs_State_\" data-linktype=\"relative-path\">State</a> property of the <a class=\"xref\" href=\"system.speech.synthesis.statechangedeventargs\" data-linktype=\"relative-path\">StateChangedEventArgs</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example illustrates the state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> before, during, and after speaking a prompt.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Threading;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer() ;  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Subscribe to the SpeakProgress event.         \n      synth.SpeakProgress += new EventHandler&lt;SpeakProgressEventArgs&gt;(synth_SpeakProgress);  \n\n      // Write the state of the SpeechSynthesizer to the console.  \n      Console.WriteLine(&quot;Current Synthesizer state: &quot; + synth.State + &quot;<br>&quot;);  \n\n      // Speak a string asynchronously.  \n      synth.SpeakAsync(&quot;What is your favorite color?&quot;);  \n\n      // Write the state of the SpeechSynthesizer to the console while it is speaking.  \n      Thread.Sleep(1000);  \n      Console.WriteLine(&quot;<br> - Current Synthesizer state: &quot; + synth.State + &quot; - <br>&quot;);  \n\n      // Write the state of the SpeechSynthesizer to the console after it is done speaking.  \n      Thread.Sleep(2000);  \n      Console.WriteLine(&quot;<br>Current Synthesizer state: &quot; + synth.State);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Voice\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Voice_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Voice</div>        \r\n          </div>\r\n    \r\n            <p>Gets information about the current voice of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Synthesis.VoiceInfo Voice { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a></div>\r\n                  </div>\r\n                  <p>Returns information about the current voice of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you initialize a new <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>, it uses the default system voice. To configure the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to use one of the installed speech synthesis voices, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> method. To get information about which voices are installed, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and the <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example initializes an instance of <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>and gets information about the current voice.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Get information about supported audio formats.  \n        string AudioFormats = &quot;&quot;;  \n        foreach (SpeechAudioFormatInfo fmt in synth.Voice.SupportedAudioFormats)  \n        {  \n          AudioFormats += String.Format(&quot;{0}<br>&quot;,  \n          fmt.EncodingFormat.ToString());  \n        }  \n\n        // Write information about the voice to the console.  \n        Console.WriteLine(&quot; Name:          &quot; + synth.Voice.Name);  \n        Console.WriteLine(&quot; Culture:       &quot; + synth.Voice.Culture);  \n        Console.WriteLine(&quot; Age:           &quot; + synth.Voice.Age);  \n        Console.WriteLine(&quot; Gender:        &quot; + synth.Voice.Gender);  \n        Console.WriteLine(&quot; Description:   &quot; + synth.Voice.Description);  \n        Console.WriteLine(&quot; ID:            &quot; + synth.Voice.Id);  \n        if (synth.Voice.SupportedAudioFormats.Count != 0)  \n        {  \n          Console.WriteLine(&quot; Audio formats: &quot; + AudioFormats);  \n        }  \n        else  \n        {  \n          Console.WriteLine(&quot; No supported audio formats found&quot;);  \n        }  \n\n        // Get additional information about the voice.  \n        string AdditionalInfo = &quot;&quot;;  \n        foreach (string key in synth.Voice.AdditionalInfo.Keys)  \n        {  \n          AdditionalInfo += String.Format(&quot;  {0}: {1}<br>&quot;,  \n            key, synth.Voice.AdditionalInfo[key]);  \n        }  \n\n        Console.WriteLine(&quot; Additional Info - &quot; + AdditionalInfo);  \n        Console.WriteLine();  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Volume\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Volume_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Volume</div>        \r\n          </div>\r\n    \r\n            <p>Get or sets the output volume of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Volume { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the volume of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>, from 0 through 100.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the volume of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>&#39;s audio output for the synthesized voice and the WAV file.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Set the volume of the SpeechSynthesizer&#39;s ouput.  \n        synth.Volume = 60;  \n\n        // Build a prompt containing recorded audio and synthesized speech.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(&quot;en-US&quot;));  \n        builder.AppendAudio(&quot;C:\\&nbsp;&nbsp;&nbsp;&nbsp;est\\\\WelcomeToContosoRadio.wav&quot;);  \n        builder.AppendText(  \n          &quot;The weather forecast for today is partly cloudy with some sun breaks.&quot;);  \n\n        // Speak the prompt.  \n        synth.Speak(builder);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_AddLexicon_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_AddLexicon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddLexicon(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a lexicon to the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddLexicon (Uri uri, string mediaType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the lexicon information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mediaType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The media type of the lexicon. Media type values are not case sensitive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A pronunciation lexicon is a collection of words or phrases together with their pronunciations, which consist of letters and characters from a supported phonetic alphabet. You can use a lexicon to specify custom pronunciations for specialized vocabulary in your application.  </p>\n<p> Pronunciations specified in an external lexicon file take precedence over the pronunciations of the speech synthesizer&#39;s internal lexicon or dictionary. However, pronunciations specified inline in prompts created with any of the <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendTextWithPronunciation_\" data-linktype=\"relative-path\">AppendTextWithPronunciation</a>, <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendSsmlMarkup_\" data-linktype=\"relative-path\">AppendSsmlMarkup</a>, or <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendSsml_\" data-linktype=\"relative-path\">AppendSsml</a> methods take precedence over pronunciations specified in any lexicon. Inline pronunciations apply only to a single occurrence of a word. See <a href=\"http://msdn.microsoft.com/en-us/435e3c6f-6834-4e5a-b0f6-c17b2275dc51\" data-linktype=\"external\">Lexicons and Phonetic Alphabets</a> for more information.  </p>\n<p> You can add multiple lexicons to a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.Two values are currently supported for the <code>mediaType</code> parameter:  </p>\n<ul>\n<li><p>The value <code>application/pls+xml</code> indicates that the lexicon conforms to the <a href=\"http://go.microsoft.com/fwlink/?LinkId=201766\" data-linktype=\"external\">Pronunciation Lexicon Specification (PLS) Version 1.0</a>. This is the preferred format to use.  </p>\n</li>\n<li><p>The value <code>application/vdn.ms-sapi-lex</code> indicates that the lexicon format is Uncompressed Lexicon, which is a Microsoft-proprietary format. This is a legacy format and we recommend that you use the PLS format described above.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the effect of adding and removing a lexicon that contains a custom pronunciation for the word &quot;blue&quot;. The lexicon defines the pronunciation of &quot;blue&quot; to sound like &quot;bleep&quot;. While the lexicon is loaded, the speech synthesizer uses the pronunciation defined in the lexicon.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Speak the prompt.  \n        synth.Speak(&quot;My favorite color is blue.&quot;);  \n\n        // Add a lexicon that changes the pronunciation of &quot;blue&quot;.  \n        synth.AddLexicon(new Uri(&quot;C:\\&nbsp;&nbsp;&nbsp;&nbsp;est\\\\Blue.pls&quot;), &quot;application/pls+xml&quot;);  \n\n        // Speak the prompt.  \n        synth.Speak(&quot;My favorite color is blue.&quot;);  \n\n        // Remove the lexicon.  \n        synth.RemoveLexicon(new Uri(&quot;C:\\&nbsp;&nbsp;&nbsp;&nbsp;est\\\\Blue.pls&quot;));  \n\n        // Speak the prompt.  \n        synth.Speak(&quot;My favorite color is blue.&quot;);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre><p> Following are the contents of the lexicon file Blue.pls:  </p>\n<pre><code class=\"lang-xml\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;  \n\n&lt;lexicon version=&quot;1.0&quot;   \n      xmlns=&quot;http://www.w3.org/2005/01/pronunciation-lexicon&quot;  \n      alphabet=&quot;x-microsoft-ups&quot; xml:lang=&quot;en-US&quot;&gt;  \n\n  &lt;lexeme&gt;  \n    &lt;grapheme&gt; blue &lt;/grapheme&gt;  \n    &lt;phoneme&gt; B L I P &lt;/phoneme&gt;  \n  &lt;/lexeme&gt;  \n\n&lt;/lexicon&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Dispose\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Disposes the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object and releases resources used during the session.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Finalize\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Acts as a safeguard to clean up resources in the event that the <span class=\"xref\">stem.Speech.Synthesis.SpeechSynthesizer.Dispose*</span> method is not called.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~SpeechSynthesizer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_GetCurrentlySpokenPrompt\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_GetCurrentlySpokenPrompt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCurrentlySpokenPrompt()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the prompt that the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> is speaking.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Synthesis.Prompt GetCurrentlySpokenPrompt ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </div>\r\n                  <p>Returns the prompt object that is currently being spoken.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-c#\">\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInstalledVoices()</div>        \r\n          </div>\r\n    \r\n            <p>Returns all of the installed speech synthesis (text-to-speech) voices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.speech.synthesis.installedvoice\" data-linktype=\"relative-path\">InstalledVoice</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns a read-only collection of the voices currently installed on the system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A voice is an engine for speech synthesis (text-to-speech or TTS) that is installed on the system.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is part of a console application that initializes a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object and outputs to the console a list of the installed voices (engines for speech synthesis) and demonstrates the information that is available for each voice.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Output information about all of the installed voices.   \n        Console.WriteLine(&quot;Installed voices -&quot;);  \n        foreach (InstalledVoice voice in synth.GetInstalledVoices())  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          string AudioFormats = &quot;&quot;;  \n          foreach (SpeechAudioFormatInfo fmt in info.SupportedAudioFormats)  \n          {  \n            AudioFormats += String.Format(&quot;{0}<br>&quot;,  \n            fmt.EncodingFormat.ToString());  \n          }  \n\n          Console.WriteLine(&quot; Name:          &quot; + info.Name);  \n          Console.WriteLine(&quot; Culture:       &quot; + info.Culture);  \n          Console.WriteLine(&quot; Age:           &quot; + info.Age);  \n          Console.WriteLine(&quot; Gender:        &quot; + info.Gender);  \n          Console.WriteLine(&quot; Description:   &quot; + info.Description);  \n          Console.WriteLine(&quot; ID:            &quot; + info.Id);  \n          Console.WriteLine(&quot; Enabled:       &quot; + voice.Enabled);  \n          if (info.SupportedAudioFormats.Count != 0)  \n          {  \n            Console.WriteLine( &quot; Audio formats: &quot; + AudioFormats);  \n          }  \n          else  \n          {  \n            Console.WriteLine(&quot; No supported audio formats found&quot;);  \n          }  \n\n          string AdditionalInfo = &quot;&quot;;  \n          foreach (string key in info.AdditionalInfo.Keys)  \n          {  \n            AdditionalInfo += String.Format(&quot;  {0}: {1}<br>&quot;, key, info.AdditionalInfo[key]);  \n          }  \n\n          Console.WriteLine(&quot; Additional Info - &quot; + AdditionalInfo);  \n          Console.WriteLine();  \n        }  \n      }  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_System_Globalization_CultureInfo_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInstalledVoices(CultureInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Returns all of the installed speech synthesis  (text-to-speech) voices that support a specific locale.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Speech.Synthesis.InstalledVoice&gt; GetInstalledVoices (System.Globalization.CultureInfo culture);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale that the voice must support.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.speech.synthesis.installedvoice\" data-linktype=\"relative-path\">InstalledVoice</a>&gt;</div>\r\n                  </div>\r\n                  <p>Returns a read-only collection of the voices currently installed on the system that support the specified locale.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If none of the installed voices support the specified locale, this method returns an empty collection.  </p>\n<p> Microsoft Windows and the System.Speech API accept all valid language-country codes. To perform text-to-speech using the language specified in the Culture property, a speech synthesis engine that supports that language-country code must be installed. The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:  </p>\n<ul>\n<li><p>en-US. English (United States)  </p>\n</li>\n<li><p>zh-CN. Chinese (China)  </p>\n</li>\n<li><p>zh-TW. Chinese (Taiwan)  </p>\n<p>Two-letter language codes such as &quot;en&quot; are also permitted.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is part of a console application that initializes a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object and outputs to the console a list of the installed voices that support the en-US locale.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Globalization;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synthesizer = new SpeechSynthesizer())  \n      {  \n\n        // Output information about all of the installed voices that  \n        // support the en-US locacale.   \n        Console.WriteLine(&quot;Installed voices for the en-US locale:&quot;);  \n        foreach (InstalledVoice voice in  \n          synthesizer.GetInstalledVoices(new CultureInfo(&quot;en-US&quot;)))  \n        {  \n          VoiceInfo info = voice.VoiceInfo;  \n          OutputVoiceInfo(info);  \n        }  \n\n        // Output information about the current voice.  \n        Console.WriteLine();  \n        Console.WriteLine(&quot;Current voice:&quot;);  \n        OutputVoiceInfo(synthesizer.Voice);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Display information about a synthesizer voice.  \n    private static void OutputVoiceInfo(VoiceInfo info)  \n    {  \n      Console.WriteLine(&quot;  Name: {0}, culture: {1}, gender: {2}, age: {3}.&quot;,  \n        info.Name, info.Culture, info.Gender, info.Age);  \n      Console.WriteLine(&quot;    Description: {0}&quot;, info.Description);  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Pause\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Pause_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pause()</div>        \r\n          </div>\r\n    \r\n            <p>Pauses the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Pause ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_RemoveLexicon_System_Uri_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_RemoveLexicon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveLexicon(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Removes a lexicon from the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveLexicon (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the lexicon document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_AddLexicon_\" data-linktype=\"relative-path\">AddLexicon</a> for an example.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Resume\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Resume_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resume()</div>        \r\n          </div>\r\n    \r\n            <p>Resumes the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object after it has been paused.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Resume ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectVoice(String)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a specific voice by name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectVoice (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the voice to select.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class to obtain the names of installed text-to-speech (TTS) voices that you can select. To select a voice, pass the entire contents of the <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Name_\" data-linktype=\"relative-path\">Name</a> property as the argument for the SelectVoice method. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object selects the first installed voice that contains <code>name</code> in the voice&#39;s <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Name_\" data-linktype=\"relative-path\">Name</a> property. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> performs a case-sensitive, substring comparison to determine if the voice matches the <code>name</code>.  </p>\n<p> When an application calls <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> sets its <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>False</code>. An application cannot select a voice whose <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property is <code>False</code>. Typically, applications will not set a voiceâ€™s <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property.  </p>\n<p> To select a voice by gender, age, or locale, use one of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectVoiceByHints(VoiceGender)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a voice with a specific gender.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voicegender\" data-linktype=\"relative-path\">VoiceGender</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The gender of the voice to select.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class to obtain the names of installed text-to-speech (TTS) voices that you can select. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object selects the first installed voice whose <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Gender_\" data-linktype=\"relative-path\">Gender</a> property matches the <code>gender</code> parameter.  </p>\n<p> When an application calls <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> sets its <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>False</code>. An application cannot select a voice whose <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property is <code>False</code>. Typically, applications will not set a voiceâ€™s <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property.  </p>\n<p> To select a voice based on other characteristics, see the other <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> methods.  </p>\n<p> To select a voice by name, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_System_Speech_Synthesis_VoiceAge_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectVoiceByHints(VoiceGender,VoiceAge)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a voice with a specific gender and age.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voicegender\" data-linktype=\"relative-path\">VoiceGender</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The gender of the voice to select.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>age</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voiceage\" data-linktype=\"relative-path\">VoiceAge</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The age of the voice to select.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class to obtain the names of installed text-to-speech (TTS) voices that you can select. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object selects the first installed voice whose <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Gender_\" data-linktype=\"relative-path\">Gender</a> and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Age_\" data-linktype=\"relative-path\">Age</a> properties match the <code>gender</code> and <code>age</code> parameters.  </p>\n<p> When an application calls <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> sets its <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>False</code>. An application cannot select a voice whose <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property is <code>False</code>. Typically, applications will not set a voiceâ€™s <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property.  </p>\n<p> To select a voice based on other characteristics, see the other <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> methods.  </p>\n<p> To select a voice by name, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_System_Speech_Synthesis_VoiceAge_System_Int32_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectVoiceByHints(VoiceGender,VoiceAge,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a voice with a specific gender and age, based on the position in which the voices are ordered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voicegender\" data-linktype=\"relative-path\">VoiceGender</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The gender of the voice to select.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>age</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voiceage\" data-linktype=\"relative-path\">VoiceAge</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The age of the voice to select.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>voiceAlternate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position of the voice to select.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> method and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo\" data-linktype=\"relative-path\">VoiceInfo</a> class to obtain the names of installed text-to-speech (TTS) voices that you can select. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object finds installed voices whose <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Gender_\" data-linktype=\"relative-path\">Gender</a> and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Age_\" data-linktype=\"relative-path\">Age</a> properties match the <code>gender</code> and <code>age</code> parameters. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> counts the matches it finds, and returns the voice when the count equals the <code>voiceAlternate</code> parameter.  </p>\n<p> When an application calls <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> sets its <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>False</code>. An application cannot select a voice whose <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property is <code>False</code>. Typically, applications will not set a voiceâ€™s <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property.  </p>\n<p> To select a voice based on other characteristics, see the other <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> overloads.  </p>\n<p> To select a voice by name, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_System_Speech_Synthesis_VoiceGender_System_Speech_Synthesis_VoiceAge_System_Int32_System_Globalization_CultureInfo_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectVoiceByHints(VoiceGender,VoiceAge,Int32,CultureInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a voice with a specific gender, age, and locale, based on the position in which the voices are ordered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectVoiceByHints (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate, System.Globalization.CultureInfo culture);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>gender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voicegender\" data-linktype=\"relative-path\">VoiceGender</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The gender of the voice to select.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>age</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.voiceage\" data-linktype=\"relative-path\">VoiceAge</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The age of the voice to select.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>voiceAlternate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position of the voice to select.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale of the voice to select.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object finds voices whose <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Gender_\" data-linktype=\"relative-path\">Gender</a>, <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Age_\" data-linktype=\"relative-path\">Age</a>, and <a class=\"xref\" href=\"system.speech.synthesis.voiceinfo#System_Speech_Synthesis_VoiceInfo_Culture_\" data-linktype=\"relative-path\">Culture</a> properties match the <code>gender</code>, <code>age</code>, and <code>culture</code> parameters. The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> counts the matches it finds, and returns the voice when the count equals the <code>voiceAlternate</code> parameter.  </p>\n<p> Microsoft Windows and the System.Speech API accept all valid language-country codes. To perform text-to-speech using the language specified in the <code>culture</code> parameter, a speech synthesis engine that supports that language-country code must be installed. The speech synthesis engines that shipped with Microsoft Windows 7 work with the following language-country codes:  </p>\n<ul>\n<li><p>en-US. English (United States)  </p>\n</li>\n<li><p>zh-CN. Chinese (China)  </p>\n</li>\n<li><p>zh-TW. Chinese (Taiwan)  </p>\n<p>Two-letter language codes such as &quot;en&quot; are also permitted.  </p>\n<p>When an application calls <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria. For any voice that fails verification, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_GetInstalledVoices_\" data-linktype=\"relative-path\">GetInstalledVoices</a> sets its <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>False</code>. An application cannot select a voice whose <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property is <code>False</code>. Typically, applications will not set a voiceâ€™s <a class=\"xref\" href=\"system.speech.synthesis.installedvoice#System_Speech_Synthesis_InstalledVoice_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property.  </p>\n<p>To select a voice based on other characteristics, see the other <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> overloads.  </p>\n<p>To select a voice by name, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> method.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_System_IO_Stream_System_Speech_AudioFormat_SpeechAudioFormatInfo_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOutputToAudioStream(Stream,SpeechAudioFormatInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to an audio stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOutputToAudioStream (System.IO.Stream audioDestination, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>audioDestination</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to which to append synthesis output.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.audioformat.speechaudioformatinfo\" data-linktype=\"relative-path\">SpeechAudioFormatInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format to use for the synthesis output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\" data-linktype=\"relative-path\">SetOutputToNull</a> to release the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>â€™s  reference to the stream.  </p>\n<p> For other output configuration options, see the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice_\" data-linktype=\"relative-path\">SetOutputToDefaultAudioDevice</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\" data-linktype=\"relative-path\">SetOutputToNull</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\" data-linktype=\"relative-path\">SetOutputToWaveFile</a>, and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_\" data-linktype=\"relative-path\">SetOutputToWaveStream</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOutputToDefaultAudioDevice()</div>        \r\n          </div>\r\n    \r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to send output to the default audio device.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOutputToDefaultAudioDevice ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the  <strong>Sound</strong> window in the Windows <strong>Control Panel</strong> to configure the default audio device for the computer.  </p>\n<p> For other output configuration options, see the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_\" data-linktype=\"relative-path\">SetOutputToAudioStream</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\" data-linktype=\"relative-path\">SetOutputToNull</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\" data-linktype=\"relative-path\">SetOutputToWaveFile</a>, and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_\" data-linktype=\"relative-path\">SetOutputToWaveStream</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the synthesizer to speak a phrase to the default audio output.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the synthesizer to send output to the default audio device.  \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Speak a phrase.  \n        synth.Speak(&quot;This is sample text-to-speech output.&quot;);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOutputToNull()</div>        \r\n          </div>\r\n    \r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to not send output from synthesis operations to a device, file, or stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOutputToNull ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to release the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> â€˜s reference to a file or stream. See <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_\" data-linktype=\"relative-path\">SetOutputToWaveStream</a> for an example.  </p>\n<p> For other output configuration options, see the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_\" data-linktype=\"relative-path\">SetOutputToAudioStream</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice_\" data-linktype=\"relative-path\">SetOutputToDefaultAudioDevice</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\" data-linktype=\"relative-path\">SetOutputToWaveFile</a>, and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_\" data-linktype=\"relative-path\">SetOutputToWaveStream</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOutputToWaveFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to a file that contains Waveform format audio.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOutputToWaveFile (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To configure the output and specify the audio format, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\" data-linktype=\"relative-path\">SetOutputToWaveFile</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses an instance of <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> to play a prompt that has been output to a .wav file. Because the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> call is asynchronous, the <a class=\"xref\" href=\"system.media.soundplayer\" data-linktype=\"relative-path\">SoundPlayer</a> instance is created (and the <a class=\"xref\" href=\"system.media.soundplayer#System_Media_SoundPlayer_Play_\" data-linktype=\"relative-path\">Play</a> method invoked) in the handler for the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\" data-linktype=\"relative-path\">SpeakCompleted</a> event.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToWaveFile(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;est\\Sample.wav&quot;);  \n\n      // Register for the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler&lt;SpeakCompletedEventArgs&gt;(synth_SpeakCompleted);  \n\n      // Build a prompt.  \n      PromptBuilder builder = new PromptBuilder();  \n      builder.AppendText(&quot;This sample asynchronously speaks a prompt to a WAVE file.&quot;);  \n\n      // Speak the string asynchronously.  \n      synth.SpeakAsync(builder);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Handle the SpeakCompleted event.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n\n      // Create a SoundPlayer instance to play the output audio file.  \n      System.Media.SoundPlayer m_SoundPlayer =  \n        new System.Media.SoundPlayer(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;est\\Sample.wav&quot;);  \n\n      //  Play the output file.  \n      m_SoundPlayer.Play();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_System_String_System_Speech_AudioFormat_SpeechAudioFormatInfo_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOutputToWaveFile(String,SpeechAudioFormatInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to a Waveform audio format file in a specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOutputToWaveFile (string path, System.Speech.AudioFormat.SpeechAudioFormatInfo formatInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formatInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.audioformat.speechaudioformatinfo\" data-linktype=\"relative-path\">SpeechAudioFormatInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The audio format information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example specifies the format of the output of speech synthesis and sends it to a WAV file.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;emp&nbsp;&nbsp;&nbsp;&nbsp;est.wav&quot;,   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n\n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;emp&nbsp;&nbsp;&nbsp;&nbsp;est.wav&quot;);  \n\n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(&quot;This is sample output to a WAVE file.&quot;);  \n\n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetOutputToWaveStream(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Configures the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> object to append output to a stream that contains Waveform format audio.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetOutputToWaveStream (System.IO.Stream audioDestination);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>audioDestination</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to which to append synthesis output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To release the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>â€™s reference to the stream, reconfigure the synthesizer&#39;s output, for example, by calling <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\" data-linktype=\"relative-path\">SetOutputToNull</a>.  </p>\n<p> For other output configuration options, see the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToAudioStream_\" data-linktype=\"relative-path\">SetOutputToAudioStream</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToDefaultAudioDevice_\" data-linktype=\"relative-path\">SetOutputToDefaultAudioDevice</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToNull_\" data-linktype=\"relative-path\">SetOutputToNull</a>, and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SetOutputToWaveFile_\" data-linktype=\"relative-path\">SetOutputToWaveFile</a> methods.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example outputs a phrase to a WAV stream.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the speech synthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      using (MemoryStream stream = new MemoryStream())  \n      {  \n\n        // Create a SoundPlayer instance to play the output audio file.  \n        MemoryStream streamAudio = new MemoryStream();  \n        System.Media.SoundPlayer m_SoundPlayer = new System.Media.SoundPlayer();  \n\n        // Configure the synthesizer to output to an audio stream.  \n        synth.SetOutputToWaveStream(streamAudio);  \n\n        // Speak a phrase.  \n        synth.Speak(&quot;This is sample text-to-speech output.&quot;);  \n        streamAudio.Position = 0;  \n        m_SoundPlayer.Stream = streamAudio;  \n        m_SoundPlayer.Play();  \n\n        // Set the synthesizer output to null to release the stream.   \n        synth.SetOutputToNull();  \n\n        // Insert code to persist or process the stream contents here.  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Speak_System_Speech_Synthesis_Prompt_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Speak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Speak(Prompt)</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Speak (System.Speech.Synthesis.Prompt prompt);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prompt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To asynchronously speak the contents of a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object, use <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object from a string and passes the object as an argument to the Speak method.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Create a prompt from a string.  \n        Prompt color = new Prompt(&quot;What is your favorite color?&quot;);  \n\n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(color);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Speak_System_Speech_Synthesis_PromptBuilder_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Speak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Speak(PromptBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Speak (System.Speech.Synthesis.PromptBuilder promptBuilder);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>promptBuilder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To asynchronously speak the contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object, use <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object from a string and passes the object as an argument to the Speak method.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Create a PromptBuilder object and append a text string.  \n        PromptBuilder song = new PromptBuilder();  \n        song.AppendText(&quot;Say the name of the song you want to hear&quot;);  \n\n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(song);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_Speak_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_Speak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Speak(String)</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously speaks the contents of a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Speak (string textToSpeak);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textToSpeak</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To synchronously speak a string that contains SSML markup, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a> method. To asynchronously speak the contents of a string, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>As shown in the following example, the Speak method provides the simplest means to generate speech output synchronously.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n\n        // Speak a string synchronously.  \n        synth.Speak(&quot;What is your favorite color?&quot;);  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_System_Speech_Synthesis_Prompt_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakAsync(Prompt)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SpeakAsync (System.Speech.Synthesis.Prompt prompt);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prompt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can cancel the asynchronous speaking of a prompt with the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancel_\" data-linktype=\"relative-path\">SpeakAsyncCancel</a> or the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancelAll_\" data-linktype=\"relative-path\">SpeakAsyncCancelAll</a> method.  </p>\n<p> To synchronously speak the contents of a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object, use <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object from a string and passes the object as an argument to the SpeakAsync method.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Create a prompt from a string.  \n      Prompt color = new Prompt(&quot;What is your favorite color?&quot;);  \n\n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(color);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_System_Speech_Synthesis_PromptBuilder_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakAsync(PromptBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously speaks the contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Synthesis.Prompt SpeakAsync (System.Speech.Synthesis.PromptBuilder promptBuilder);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>promptBuilder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </div>\r\n                  <p>Returns the object that contains the content to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To synchronously speak the contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object, use <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object from a string and passes the object as an argument to the SpeakAsync method.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Create a PromptBuilder object and append a text string.  \n      PromptBuilder song = new PromptBuilder();  \n      song.AppendText(&quot;Say the name of the song you want to hear&quot;);  \n\n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakAsync(song);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously speaks the contents of a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Synthesis.Prompt SpeakAsync (string textToSpeak);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textToSpeak</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </div>\r\n                  <p>Returns the object that contains the content to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To asynchronously speak a string that contains SSML markup, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> method. To synchronously speak the contents of a string, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a> method. You can cancel the asynchronous speaking of a prompt with the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancel_\" data-linktype=\"relative-path\">SpeakAsyncCancel</a> or the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancelAll_\" data-linktype=\"relative-path\">SpeakAsyncCancelAll</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>As shown in the following example, the SpeakAsync method provides the simplest means to generate speech output asynchronously.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Speak a string asynchronously.  \n      synth.SpeakAsync(&quot;What is your favorite color?&quot;);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancel_System_Speech_Synthesis_Prompt_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakAsyncCancel(Prompt)</div>        \r\n          </div>\r\n    \r\n            <p>Cancels the asynchronous synthesis operation for a queued prompt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SpeakAsyncCancel (System.Speech.Synthesis.Prompt prompt);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prompt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The content for which to cancel a speak operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also use this method to cancel an asynchronous speak operation for the following:  </p>\n<ul>\n<li><p>The contents of a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> specified by a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> method.  </p>\n</li>\n<li><p>The contents of a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> specified by a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> method.  </p>\n</li>\n<li><p>The contents of a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing SSML specified by a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> method.  </p>\n<p>When you call <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a>, System.Speech creates a <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object and populates it with the contents of the method&#39;s parameter, and returns the <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a> object. If you retain a copy of the returned <a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a>, you can pass it into SpeakAsyncCancel to cancel speaking content specified in a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> or a <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a> object.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancelAll\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakAsyncCancelAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakAsyncCancelAll()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels all queued, asynchronous, speech synthesis operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SpeakAsyncCancelAll ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example show a use of SpeakAsyncCancelAll to cancel the asynchronous speaking of a prompt, so that a new prompt can be spoken. Note that the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\" data-linktype=\"relative-path\">SpeakCompleted</a> event fires when a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> operation is cancelled.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \nusing System.Threading;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n\n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Subscribe to the StateChanged event.  \n      synth.StateChanged += new EventHandler&lt;StateChangedEventArgs&gt;(synth_StateChanged);  \n\n      // Subscribe to the SpeakProgress event.  \n      synth.SpeakProgress += new EventHandler&lt;SpeakProgressEventArgs&gt;(synth_SpeakProgress);  \n\n      // Subscribe to the SpeakCompleted event.  \n      synth.SpeakCompleted += new EventHandler&lt;SpeakCompletedEventArgs&gt;(synth_SpeakCompleted);  \n\n      // Begin speaking a text string asynchronously.  \n      synth.SpeakAsync(&quot;Speech is an effective and natural way for people to interact with applications, &quot; +  \n        &quot;complementing or even replacing the use of mice, keyboards, controllers, and gestures.&quot;);  \n\n      // Speak for four seconds.  \n      Thread.Sleep(4000);  \n\n      // Cancel the SpeakAsync operation and wait one second.  \n      synth.SpeakAsyncCancelAll();  \n      Thread.Sleep(1000);  \n\n      // Speak a new text string.  \n      synth.Speak(&quot;An urgent email message has arrived. Do you want to hear it?&quot;);  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Write to the console when the SpeakAsync operation has been cancelled.  \n    static void synth_SpeakCompleted(object sender, SpeakCompletedEventArgs e)  \n    {  \n      Console.WriteLine(&quot;<br>The SpeakAsync operation was cancelled!!&quot;);  \n    }  \n\n    // When it changes, write the state of the SpeechSynthesizer to the console.  \n    static void synth_StateChanged(object sender, StateChangedEventArgs e)  \n    {  \n      Console.WriteLine(&quot;<br>Synthesizer State: {0}    Previous State: {1}<br>&quot;, e.State, e.PreviousState);  \n    }  \n\n    // Write the text being spoken by the SpeechSynthesizer to the console.  \n    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  \n    {  \n      Console.WriteLine(e.Text);  \n    }      \n  }    \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakSsml(String)</div>        \r\n          </div>\r\n    \r\n            <p>Synchronously speaks a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains SSML markup.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SpeakSsml (string textToSpeak);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textToSpeak</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SSML string to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The contents of the <code>textToSpeak</code> parameter must include a <code>speak</code> element and must conform to the <a href=\"http://go.microsoft.com/fwlink/?LinkId=201763\" data-linktype=\"external\">Speech Synthesis Markup Language (SSML) Version 1.0</a>. For more information, see <a href=\"http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94\" data-linktype=\"external\">Speech Synthesis Markup Language Reference</a>.  </p>\n<p> To asynchronously speak a string that contains SSML markup, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> method. You can use <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a> to initiate the synchronous speaking of a string that does not contain SSML markup.  </p>\n<p> During a call to this method, the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> can raise the following events:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_StateChanged\" data-linktype=\"relative-path\">StateChanged</a>. Raised when the speaking state of the synthesizer changes.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakStarted\" data-linktype=\"relative-path\">SpeakStarted</a>. Raised when the synthesizer begins generating speech.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached\" data-linktype=\"relative-path\">PhonemeReached</a>. Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a>. Raised each time the synthesizer completes speaking a word.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_VisemeReached\" data-linktype=\"relative-path\">VisemeReached</a>. Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_BookmarkReached\" data-linktype=\"relative-path\">BookmarkReached</a>. Raised when the synthesizer encounters a bookmark in a prompt.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_VoiceChange\" data-linktype=\"relative-path\">VoiceChange</a>. Raised when the speaking voice for the synthesizer changes.  </p>\n<p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> does not raise the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\" data-linktype=\"relative-path\">SpeakCompleted</a> event while processing the SpeakSsml method.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example renders the date 1/29/2009 as a date, in month, day, year order.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Build an SSML prompt in a string.  \n      string str = &quot;&lt;speak version=\\&quot;1.0\\&quot;&quot;;  \n      str += &quot; xmlns=\\&quot;http://www.w3.org/2001/10/synthesis\\&quot;&quot;;  \n      str += &quot; xml:lang=\\&quot;en-US\\&quot;&gt;&quot;;  \n      str += &quot;&lt;say-as type=\\&quot;date:mdy\\&quot;&gt; 1/29/2009 &lt;/say-as&gt;&quot;;  \n      str += &quot;&lt;/speak&gt;&quot;;  \n\n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsml(str);  \n\n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_System_String_\">\r\n    \r\n            <a id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakSsmlAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously speaks a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains SSML markup.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Synthesis.Prompt SpeakSsmlAsync (string textToSpeak);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>textToSpeak</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The SMML markup to speak.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.synthesis.prompt\" data-linktype=\"relative-path\">Prompt</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The contents of the <code>textToSpeak</code> parameter must include a <code>speak</code> element and must conform to the <a href=\"http://go.microsoft.com/fwlink/?LinkId=201763\" data-linktype=\"external\">Speech Synthesis Markup Language (SSML) Version 1.0</a>. For more information, see <a href=\"http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94\" data-linktype=\"external\">Speech Synthesis Markup Language Reference</a>.  </p>\n<p> To synchronously speak a string that contains SSML markup, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a> method. You can use <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> to initiate the asynchronous speaking of a string that does not contain SSML markup.  </p>\n<p> During a call to this method, the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> can raise the following events:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_StateChanged\" data-linktype=\"relative-path\">StateChanged</a>. Raised when the speaking state of the synthesizer changes.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakStarted\" data-linktype=\"relative-path\">SpeakStarted</a>. Raised when the synthesizer begins generating speech.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached\" data-linktype=\"relative-path\">PhonemeReached</a>. Raised each time the synthesizer reaches a letter or combination of letters that constitute a discreet sound of speech in a language.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\" data-linktype=\"relative-path\">SpeakProgress</a>. Raised each time the synthesizer completes speaking a word.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_VisemeReached\" data-linktype=\"relative-path\">VisemeReached</a>. Raised each time spoken output requires a change in the position of the mouth or the facial muscles used to produce speech.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_BookmarkReached\" data-linktype=\"relative-path\">BookmarkReached</a>. Raised when the synthesizer encounters a bookmark in a prompt.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_VoiceChange\" data-linktype=\"relative-path\">VoiceChange</a>. Raised when the speaking voice for the synthesizer changes.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\" data-linktype=\"relative-path\">SpeakCompleted</a>. Raised when the synthesizer finishes processing a SpeakSsmlAsync operation.  </p>\n<p>If your application dos not need to perform tasks while speaking, you can use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a> or the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a> method to generate speech synchronously.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code>using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      SpeechSynthesizer synth = new SpeechSynthesizer();  \n\n      // Configure the audio output.   \n      synth.SetOutputToDefaultAudioDevice();  \n\n      // Build an SSML prompt in a string.  \n      string str = &quot;&lt;speak version=\\&quot;1.0\\&quot;&quot;;  \n      str += &quot; xmlns=\\&quot;http://www.w3.org/2001/10/synthesis\\&quot;&quot;;  \n      str += &quot; xml:lang=\\&quot;en-US\\&quot;&gt;&quot;;  \n      str += &quot;&lt;say-as type=\\&quot;date:mdy\\&quot;&gt; 1/29/2009 &lt;/say-as&gt;&quot;;  \n      str += &quot;&lt;/speak&gt;&quot;;  \n\n      // Speak the contents of the prompt asynchronously.  \n      synth.SpeakSsmlAsync(str);  \n\n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_BookmarkReached\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BookmarkReached</div>        \r\n          </div>\r\n    \r\n            <p>Raised when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> encounters a bookmark in a prompt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.BookmarkReachedEventArgs&gt; BookmarkReached;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> raises this event while processing any of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a>, or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> methods. For information about data associated with the event, see <a class=\"xref\" href=\"system.speech.synthesis.bookmarkreachedeventargs\" data-linktype=\"relative-path\">BookmarkReachedEventArgs</a>.  </p>\n<p> You can add bookmarks using the <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_AppendBookmark_\" data-linktype=\"relative-path\">AppendBookmark</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback. The handler for the BookmarkReached event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.  </p>\n<pre><code class=\"lang-c#\">using System;  \nusing System.Speech.Synthesis;  \n\nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n\n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n\n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;est\\weather.wav&quot;);  \n\n        // Create a SoundPlayer instance to play the output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =  \n          new System.Media.SoundPlayer(@&quot;C:&nbsp;&nbsp;&nbsp;&nbsp;est\\weather.wav&quot;);  \n\n        // Build a prompt and append bookmarks.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(&quot;en-US&quot;));  \n        builder.AppendText(  \n          &quot;The weather forecast for today is partly cloudy with some sun breaks.&quot;);  \n        builder.AppendBookmark(&quot;Daytime forecast&quot;);  \n        builder.AppendText(  \n          &quot;Tonight&#39;s weather will be cloudy with a 30% chance of showers.&quot;);  \n        builder.AppendBookmark(&quot;Nightime forecast&quot;);  \n\n        // Add a handler for the BookmarkReached event.  \n        synth.BookmarkReached +=  \n          new EventHandler&lt;BookmarkReachedEventArgs&gt;(synth_BookmarkReached);  \n\n        // Speak the prompt and play back the output file.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n\n      Console.WriteLine();  \n      Console.WriteLine(&quot;Press any key to exit...&quot;);  \n      Console.ReadKey();  \n    }  \n\n    // Write the name and position of the bookmark to the console.  \n    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  \n    {  \n      Console.WriteLine(&quot;Bookmark ({0}) reached at: {1} &quot;,  \n        e.Bookmark, e.AudioPosition);  \n    }  \n  }  \n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PhonemeReached</div>        \r\n          </div>\r\n    \r\n            <p>Raised when a phoneme is reached.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.PhonemeReachedEventArgs&gt; PhonemeReached;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A phoneme is a basic component of written language, typically a letter of an alphabet (or the combination of two letters) that represents one or more distinct sounds. For example, the letter â€œcâ€ is a phoneme that may sound like â€œsâ€ in â€œcinderâ€, or like â€œkâ€ in â€œcatchâ€. A written word is an assemblage of phonemes. Changing a phoneme in a word will alter its spelling.  </p>\n<p> A <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> instance generates a PhonemeReached event for each portion of a word that constitutes a phoneme. For example, for the word â€œthemeâ€ would generate three PhonemeReached events; one for the â€œthâ€ sound, one for the â€œeâ€ sound, and one for the â€œmâ€ sound (me).  </p>\n<p> For an example and information about data associated with the event, see <a class=\"xref\" href=\"system.speech.synthesis.phonemereachedeventargs\" data-linktype=\"relative-path\">PhonemeReachedEventArgs</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakCompleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakCompleted</div>        \r\n          </div>\r\n    \r\n            <p>Raised when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> completes the speaking of a prompt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.SpeakCompletedEventArgs&gt; SpeakCompleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> raises the SpeakCompleted event at the completion of any of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a> or  <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.speech.synthesis.speakcompletedeventargs\" data-linktype=\"relative-path\">SpeakCompletedEventArgs</a> class has no properties, and does not return data from the SpeakCompleted event. It is provided to enable application authors to write event handlers for the SpeakCompleted event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakProgress\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakProgress</div>        \r\n          </div>\r\n    \r\n            <p>Raised after the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> speaks each individual word of a prompt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.SpeakProgressEventArgs&gt; SpeakProgress;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> raises this event for each new word that it speaks in a prompt using any of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a>, or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> methods. For an example and more information about data associated with the event, see <a class=\"xref\" href=\"system.speech.synthesis.speakprogresseventargs\" data-linktype=\"relative-path\">SpeakProgressEventArgs</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_SpeakStarted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SpeakStarted</div>        \r\n          </div>\r\n    \r\n            <p>Raised when the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> begins the speaking of a prompt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.SpeakStartedEventArgs&gt; SpeakStarted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> raises this event when it begins processing a prompt using any of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Speak_\" data-linktype=\"relative-path\">Speak</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakAsync_\" data-linktype=\"relative-path\">SpeakAsync</a>, <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsml_\" data-linktype=\"relative-path\">SpeakSsml</a>, or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SpeakSsmlAsync_\" data-linktype=\"relative-path\">SpeakSsmlAsync</a> methods.  </p>\n<p> The <a class=\"xref\" href=\"system.speech.synthesis.speakstartedeventargs\" data-linktype=\"relative-path\">SpeakStartedEventArgs</a> class has no properties, and does not return data from the SpeakStarted event. It is provided to enable application authors to write event handlers for the SpeakStarted event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_StateChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StateChanged</div>        \r\n          </div>\r\n    \r\n            <p>Raised when the state of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.StateChangedEventArgs&gt; StateChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> raises this event when its speaking <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_State_\" data-linktype=\"relative-path\">State</a> changes. For an example and more information about data associated with the event, see <a class=\"xref\" href=\"system.speech.synthesis.statechangedeventargs\" data-linktype=\"relative-path\">StateChangedEventArgs</a>.  </p>\n<p> To pause and resume speech synthesis, use the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Pause_\" data-linktype=\"relative-path\">Pause</a> and <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_Resume_\" data-linktype=\"relative-path\">Resume</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_VisemeReached\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisemeReached</div>        \r\n          </div>\r\n    \r\n            <p>Raised when a viseme is reached.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.VisemeReachedEventArgs&gt; VisemeReached;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A viseme is the basic position of the mouth and face when pronouncing a phoneme. Visemes are visual representations of phonemes.  </p>\n<p> System.Speech supports 21 visemes for US English, each of which corresponds to one or more phonemes.  VisemeReached events are raised when a new phoneme reached has a different corresponding viseme than the previous phoneme reached. Since some visemes represent more than one phoneme, a VisemeReached event is not generated if the next phoneme reached corresponds to the same viseme as the previous phoneme. For example, for the spoken words â€œthis zoneâ€, a <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_PhonemeReached\" data-linktype=\"relative-path\">PhonemeReached</a> event is raised for the â€œsâ€ in â€œthisâ€ and the â€œzâ€ in â€œzoneâ€. However, a VisemeReached event is not raised for the â€œzâ€ in â€œzoneâ€ because it corresponds to the same viseme as the â€œsâ€ in â€œthisâ€.  </p>\n<p> The following is a list of the 21 SAPI phonemes and phoneme groups that correspond to a viseme in US English.  </p>\n<table>\n<thead>\n<tr>\n<th>Viseme</th>\n<th>Phoneme(s)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>silence</td>\n</tr>\n<tr>\n<td>1</td>\n<td>ae, ax, ah</td>\n</tr>\n<tr>\n<td>2</td>\n<td>aa</td>\n</tr>\n<tr>\n<td>3</td>\n<td>ao</td>\n</tr>\n<tr>\n<td>4</td>\n<td>ey, eh, uh</td>\n</tr>\n<tr>\n<td>5</td>\n<td>er</td>\n</tr>\n<tr>\n<td>6</td>\n<td>y, iy, ih, ix</td>\n</tr>\n<tr>\n<td>7</td>\n<td>w, uw</td>\n</tr>\n<tr>\n<td>8</td>\n<td>ow</td>\n</tr>\n<tr>\n<td>9</td>\n<td>aw</td>\n</tr>\n<tr>\n<td>10</td>\n<td>oy</td>\n</tr>\n<tr>\n<td>11</td>\n<td>ay</td>\n</tr>\n<tr>\n<td>12</td>\n<td>h</td>\n</tr>\n<tr>\n<td>13</td>\n<td>r</td>\n</tr>\n<tr>\n<td>14</td>\n<td>l</td>\n</tr>\n<tr>\n<td>15</td>\n<td>s, z</td>\n</tr>\n<tr>\n<td>16</td>\n<td>sh, ch, jh, zh</td>\n</tr>\n<tr>\n<td>17</td>\n<td>th, dh</td>\n</tr>\n<tr>\n<td>18</td>\n<td>f, v</td>\n</tr>\n<tr>\n<td>19</td>\n<td>d, t, n</td>\n</tr>\n<tr>\n<td>20</td>\n<td>k, g, ng</td>\n</tr>\n<tr>\n<td>21</td>\n<td>p, b, m</td>\n</tr>\n</tbody>\n</table>\n<p> For information about data associated with the <code>VisemeReached</code> event, see <a class=\"xref\" href=\"system.speech.synthesis.visemereachedeventargs\" data-linktype=\"relative-path\">VisemeReachedEventArgs</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Synthesis_SpeechSynthesizer_VoiceChange\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VoiceChange</div>        \r\n          </div>\r\n    \r\n            <p>Raised when the voice of the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Speech.Synthesis.VoiceChangeEventArgs&gt; VoiceChange;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For an example and information about data associated with the event, see <a class=\"xref\" href=\"system.speech.synthesis.voicechangeeventargs\" data-linktype=\"relative-path\">VoiceChangeEventArgs</a>.  </p>\n<p> You can change the voice that the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a> uses with any of the <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder\" data-linktype=\"relative-path\">PromptBuilder</a>&#39;s <a class=\"xref\" href=\"system.speech.synthesis.promptbuilder#System_Speech_Synthesis_PromptBuilder_StartVoice_\" data-linktype=\"relative-path\">StartVoice</a> methods or the <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer\" data-linktype=\"relative-path\">SpeechSynthesizer</a>&#39;s <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoice_\" data-linktype=\"relative-path\">SelectVoice</a> or <a class=\"xref\" href=\"system.speech.synthesis.speechsynthesizer#System_Speech_Synthesis_SpeechSynthesizer_SelectVoiceByHints_\" data-linktype=\"relative-path\">SelectVoiceByHints</a> methods.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Synthesis.SpeechSynthesizer.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Synthesis.SpeechSynthesizer.yml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer..ctor\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.AddLexicon\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_BookmarkReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_BookmarkReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Pause\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_PhonemeReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_PhonemeReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Rate\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Resume\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SelectVoice\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Speak\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_SpeakCompleted\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_SpeakCompleted\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_SpeakProgress\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_SpeakProgress\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_SpeakStarted\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_SpeakStarted\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.State\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.StateChanged\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_StateChanged\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_StateChanged\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.VisemeReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_VisemeReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_VisemeReached\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Voice\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.VoiceChange\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.add_VoiceChange\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.remove_VoiceChange\">\r\n<meta name=\"APIName\" content=\"System.Speech.Synthesis.SpeechSynthesizer.Volume\">\r\n<meta name=\"APILocation\" content=\"System.Speech.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"95375bd1-3108-0fb5-e2b8-d645ba35b1e9\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Speech.Synthesis\\SpeechSynthesizer.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides access to the functionality of an installed speech synthesis engine.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Speech.Synthesis/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Speech.Synthesis.SpeechSynthesizer\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Synthesis.SpeechSynthesizer.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Synthesis.SpeechSynthesizer.yml","open_to_public_contributors":true,"api_name":["System.Speech.Synthesis.SpeechSynthesizer","System.Speech.Synthesis.SpeechSynthesizer..ctor","System.Speech.Synthesis.SpeechSynthesizer.AddLexicon","System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached","System.Speech.Synthesis.SpeechSynthesizer.add_BookmarkReached","System.Speech.Synthesis.SpeechSynthesizer.remove_BookmarkReached","System.Speech.Synthesis.SpeechSynthesizer.Dispose","System.Speech.Synthesis.SpeechSynthesizer.Finalize","System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt","System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices","System.Speech.Synthesis.SpeechSynthesizer.Pause","System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached","System.Speech.Synthesis.SpeechSynthesizer.add_PhonemeReached","System.Speech.Synthesis.SpeechSynthesizer.remove_PhonemeReached","System.Speech.Synthesis.SpeechSynthesizer.Rate","System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon","System.Speech.Synthesis.SpeechSynthesizer.Resume","System.Speech.Synthesis.SpeechSynthesizer.SelectVoice","System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream","System.Speech.Synthesis.SpeechSynthesizer.Speak","System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync","System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel","System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll","System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted","System.Speech.Synthesis.SpeechSynthesizer.add_SpeakCompleted","System.Speech.Synthesis.SpeechSynthesizer.remove_SpeakCompleted","System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress","System.Speech.Synthesis.SpeechSynthesizer.add_SpeakProgress","System.Speech.Synthesis.SpeechSynthesizer.remove_SpeakProgress","System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml","System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync","System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted","System.Speech.Synthesis.SpeechSynthesizer.add_SpeakStarted","System.Speech.Synthesis.SpeechSynthesizer.remove_SpeakStarted","System.Speech.Synthesis.SpeechSynthesizer.State","System.Speech.Synthesis.SpeechSynthesizer.StateChanged","System.Speech.Synthesis.SpeechSynthesizer.add_StateChanged","System.Speech.Synthesis.SpeechSynthesizer.remove_StateChanged","System.Speech.Synthesis.SpeechSynthesizer.VisemeReached","System.Speech.Synthesis.SpeechSynthesizer.add_VisemeReached","System.Speech.Synthesis.SpeechSynthesizer.remove_VisemeReached","System.Speech.Synthesis.SpeechSynthesizer.Voice","System.Speech.Synthesis.SpeechSynthesizer.VoiceChange","System.Speech.Synthesis.SpeechSynthesizer.add_VoiceChange","System.Speech.Synthesis.SpeechSynthesizer.remove_VoiceChange","System.Speech.Synthesis.SpeechSynthesizer.Volume"],"api_location":["System.Speech.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Speech.Synthesis.SpeechSynthesizer","System::Speech::Synthesis::SpeechSynthesizer","System.Speech.Synthesis.SpeechSynthesizer.#ctor","System::Speech::Synthesis::SpeechSynthesizer::#ctor","System.Speech.Synthesis.SpeechSynthesizer.AddLexicon","System::Speech::Synthesis::SpeechSynthesizer::AddLexicon","System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached","System::Speech::Synthesis::SpeechSynthesizer::BookmarkReached","System.Speech.Synthesis.SpeechSynthesizer.Dispose","System::Speech::Synthesis::SpeechSynthesizer::Dispose","System.Speech.Synthesis.SpeechSynthesizer.Finalize","System::Speech::Synthesis::SpeechSynthesizer::Finalize","System.Speech.Synthesis.SpeechSynthesizer.GetCurrentlySpokenPrompt","System::Speech::Synthesis::SpeechSynthesizer::GetCurrentlySpokenPrompt","System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices","System::Speech::Synthesis::SpeechSynthesizer::GetInstalledVoices","System.Speech.Synthesis.SpeechSynthesizer.Pause","System::Speech::Synthesis::SpeechSynthesizer::Pause","System.Speech.Synthesis.SpeechSynthesizer.PhonemeReached","System::Speech::Synthesis::SpeechSynthesizer::PhonemeReached","System.Speech.Synthesis.SpeechSynthesizer.Rate","System::Speech::Synthesis::SpeechSynthesizer::Rate","System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon","System::Speech::Synthesis::SpeechSynthesizer::RemoveLexicon","System.Speech.Synthesis.SpeechSynthesizer.Resume","System::Speech::Synthesis::SpeechSynthesizer::Resume","System.Speech.Synthesis.SpeechSynthesizer.SelectVoice","System::Speech::Synthesis::SpeechSynthesizer::SelectVoice","System.Speech.Synthesis.SpeechSynthesizer.SelectVoiceByHints","System::Speech::Synthesis::SpeechSynthesizer::SelectVoiceByHints","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToAudioStream","System::Speech::Synthesis::SpeechSynthesizer::SetOutputToAudioStream","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToDefaultAudioDevice","System::Speech::Synthesis::SpeechSynthesizer::SetOutputToDefaultAudioDevice","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToNull","System::Speech::Synthesis::SpeechSynthesizer::SetOutputToNull","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile","System::Speech::Synthesis::SpeechSynthesizer::SetOutputToWaveFile","System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveStream","System::Speech::Synthesis::SpeechSynthesizer::SetOutputToWaveStream","System.Speech.Synthesis.SpeechSynthesizer.Speak","System::Speech::Synthesis::SpeechSynthesizer::Speak","System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync","System::Speech::Synthesis::SpeechSynthesizer::SpeakAsync","System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancel","System::Speech::Synthesis::SpeechSynthesizer::SpeakAsyncCancel","System.Speech.Synthesis.SpeechSynthesizer.SpeakAsyncCancelAll","System::Speech::Synthesis::SpeechSynthesizer::SpeakAsyncCancelAll","System.Speech.Synthesis.SpeechSynthesizer.SpeakCompleted","System::Speech::Synthesis::SpeechSynthesizer::SpeakCompleted","System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress","System::Speech::Synthesis::SpeechSynthesizer::SpeakProgress","System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml","System::Speech::Synthesis::SpeechSynthesizer::SpeakSsml","System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync","System::Speech::Synthesis::SpeechSynthesizer::SpeakSsmlAsync","System.Speech.Synthesis.SpeechSynthesizer.SpeakStarted","System::Speech::Synthesis::SpeechSynthesizer::SpeakStarted","System.Speech.Synthesis.SpeechSynthesizer.State","System::Speech::Synthesis::SpeechSynthesizer::State","System.Speech.Synthesis.SpeechSynthesizer.StateChanged","System::Speech::Synthesis::SpeechSynthesizer::StateChanged","System.Speech.Synthesis.SpeechSynthesizer.VisemeReached","System::Speech::Synthesis::SpeechSynthesizer::VisemeReached","System.Speech.Synthesis.SpeechSynthesizer.Voice","System::Speech::Synthesis::SpeechSynthesizer::Voice","System.Speech.Synthesis.SpeechSynthesizer.VoiceChange","System::Speech::Synthesis::SpeechSynthesizer::VoiceChange","System.Speech.Synthesis.SpeechSynthesizer.Volume","System::Speech::Synthesis::SpeechSynthesizer::Volume"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"95375bd1-3108-0fb5-e2b8-d645ba35b1e9","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Speech.Synthesis\\SpeechSynthesizer.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Speech.Synthesis/SpeechSynthesizer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SpeechSynthesizer class | Microsoft Docs","_op_ogTitle":"SpeechSynthesizer class","description":"Provides access to the functionality of an installed speech synthesis engine.\n","toc_asset_id":"_splitted/System.Speech.Synthesis/toc.json","toc_rel":"_splitted/System.Speech.Synthesis/toc.json","source_url":"","ms.assetid":"System.Speech.Synthesis.SpeechSynthesizer","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.synthesis.speechsynthesizer","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.synthesis.speechsynthesizer","fileRelativePath":"System.Speech.Synthesis.SpeechSynthesizer.html"},"themesRelativePathToOutputRoot":"_themes/"}