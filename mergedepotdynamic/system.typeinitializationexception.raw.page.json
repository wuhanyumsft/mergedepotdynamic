{"content":"    \r\n    <h1 id=\"System_TypeInitializationException\">\r\n      <span class=\"lang-csharp\">TypeInitializationException</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The exception that is thrown as a wrapper around the exception thrown by the class initializer. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class TypeInitializationException : SystemException</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.systemexception\" data-linktype=\"relative-path\">System.SystemException</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TypeInitializationException</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Data\" data-linktype=\"relative-path\">Data</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetBaseException\" data-linktype=\"relative-path\">GetBaseException()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HelpLink\" data-linktype=\"relative-path\">HelpLink</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_HResult\" data-linktype=\"relative-path\">HResult</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_InnerException\" data-linktype=\"relative-path\">InnerException</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Message\" data-linktype=\"relative-path\">Message</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_SerializeObjectState\" data-linktype=\"relative-path\">SerializeObjectState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_Source\" data-linktype=\"relative-path\">Source</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_StackTrace\" data-linktype=\"relative-path\">StackTrace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_TargetSite\" data-linktype=\"relative-path\">TargetSite</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.exception#System_Exception_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>When a class initializer fails to initialize a type, a TypeInitializationException is created and passed a reference to the exception thrown by the type&#39;s class initializer. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property of TypeInitializationException holds the underlying exception.  </p>\n<p> Typically, the TypeInitializationException exception reflects a catastrophic condition (the runtime is unable to instantiate a type) that prevents an application from continuing.  Most commonly, the TypeInitializationException is thrown in response to some change in the executing environment of the application. Consequently, other than possibly for troubleshooting debug code, the exception should not be handled in a <code>try</code>/<code>catch</code> block. Instead, the cause of the exception should be investigated and eliminated.  </p>\n<p> TypeInitializationException uses the HRESULT COR_E_TYPEINITIALIZATION, which has the value 0x80131534.  </p>\n<p> For a list of initial property values for an instance of TypeInitializationException, see the <a class=\"xref\" href=\"system.typeinitializationexception#System_TypeInitializationException__ctor_\" data-linktype=\"relative-path\">TypeInitializationException</a> constructors.  </p>\n<p> The following sections describe some of the situations in which a TypeInitializationException exception is thrown.  </p>\n<p> <a href=\"#Static\" data-linktype=\"self-bookmark\">Static constructors and the TypeInitializationException exception</a><br> <a href=\"#Timeout\" data-linktype=\"self-bookmark\">Regular expression match timeout values</a><br> <a href=\"#Calendars\" data-linktype=\"self-bookmark\">Calendars and cultural data</a>  </p>\n<p><a name=\"Static\"></a>   </p>\n<h2 id=\"static-constructors-and-the-typeinitializationexception-exception\">Static constructors and the TypeInitializationException exception</h2>\n<p> A static constructor, if one exists, is called automatically by the runtime before creating a new instance of a type. Static constructors can be explicitly defined by a developer. If a static  constructor is not explicitly defined, compilers automatically create one to initialize any <code>static</code> (in C#) or <code>Shared</code> (in Visual Basic) members of the type.  For more information on static constructors, see <a href=\"../Topic/Static%20Constructors%20(C%23%20Programming%20Guide).md\" data-linktype=\"relative-path\">Static Constructors</a>.  </p>\n<p> Most commonly, a TypeInitializationException exception is thrown when a static constructor is unable to instantiate a type.  The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property indicates why the static constructor was unable to instantiate the type. Some of the more common causes of a TypeInitializationException exception are:  </p>\n<p> An unhandled exception in a static constructor<br> If an exception is thrown in a static constructor, that exception is wrapped in a TypeInitializationException exception, and the type cannot be instantiated.  </p>\n<p> What often makes this exception difficult to troubleshoot is that static constructors are not always explicitly defined in source code. A static constructor exists in a type if:  </p>\n<ul>\n<li><p>It has been explicitly defined as a member of a type.  </p>\n</li>\n<li><p>The type has  <code>static</code> (in C#) or <code>Shared</code> (in Visual Basic) variables that are declared and initialized in a single statement. In this case, the language compiler generates a static constructor for the type. You can inspect it by using a utility such as <a href=\"../Topic/Ildasm.exe%20(IL%20Disassembler).md\" data-linktype=\"relative-path\">IL Disassembler</a>. For instance, when the C# and VB compilers compile the following example, they generate the IL for a static constructor that is similar to this:  </p>\n<pre><code>\n.method private specialname rtspecialname static   \n        void  .cctor() cil managed  \n{  \n  // Code size       12 (0xc)  \n  .maxstack  8  \n  IL_0000:  ldc.i4.3  \n  IL_0001:  newobj     instance void TestClass::.ctor(int32)  \n  IL_0006:  stsfld     class TestClass Example::test  \n  IL_000b:  ret  \n} // end of method Example::.cctor  \n</code></pre><p>The following example shows a TypeInitializationException exception thrown by a compiler-generated static constructor. The <code>Example</code> class includes a <code>static</code> (in C#) or <code>Shared</code> (in Visual Basic) field of type <code>TestClass</code> that is instantiated by passing a value of 3 to its class constructor.  That value, however, is illegal; only values of 0 or 1 are permitted. As a result, the <code>TestClass</code> class constructor throws an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>. Since this exception is not handled, it is wrapped in a TypeInitializationException exception.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TypeInitializationException#3\">using System;\n\npublic class Example\n{\n   private static TestClass test = new TestClass(3);\n   \n   public static void Main()\n   {\n      Example ex = new Example();\n      Console.WriteLine(test.Value);\n   }\n}\n\npublic class TestClass\n{\n   public readonly int Value;\n   \n   public TestClass(int value)\n   {\n      if (value &lt; 0 || value &gt; 1) throw new ArgumentOutOfRangeException();\n      Value = value;\n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.TypeInitializationException: \n//       The type initializer for &#39;Example&#39; threw an exception. ---&gt; \n//       System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\n//       at TestClass..ctor(Int32 value)\n//       at Example..cctor()\n//       --- End of inner exception stack trace ---\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TypeInitializationException#3\">Public Class Example\n   Shared test As New TestClass(3)\n   \n   Public Shared Sub Main()\n      Dim ex As New Example()\n      Console.WriteLine(test.Value)\n   End Sub\nEnd Class\n\nPublic Class TestClass\n   Public ReadOnly Value As Integer\n   \n   Public Sub New(value As Integer)\n      If value &lt; 0 Or value &gt; 1 Then Throw New ArgumentOutOfRangeException()\n      Value = value\n   End Sub\nEnd Class\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.TypeInitializationException: \n&#39;       The type initializer for &#39;Example&#39; threw an exception. ---&gt; \n&#39;       System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\n&#39;       at TestClass..ctor(Int32 value)\n&#39;       at Example..cctor()\n&#39;       --- End of inner exception stack trace ---\n&#39;       at Example.Main()\n</code></pre><p>Note that the exception message displays information about the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property.  </p>\n<p>A missing assembly or data file<br>A common cause of a TypeInitializationException exception is that an assembly or data file that was present in an application&#39;s development and test environments is missing from its runtime environment. For example, you can compile the following example to an assembly named Missing1a.dll by using the this command-line syntax:  </p>\n</li>\n</ul>\n<pre><code class=\"lang-c#\">csc /t:library Missing1a.cs  \n</code></pre><pre><code class=\"lang-vb\">vbc Missing1a.vb /t:library  \n</code></pre><pre><code class=\"lang-cs\" name=\"System.TypeInitializationException#1\">using System;\n\npublic class InfoModule\n{\n   private DateTime firstUse;\n   private int ctr = 0;\n\n   public InfoModule(DateTime dat)\n   {\n      firstUse = dat;\n   }\n   \n   public int Increment()\n   {\n      return ++ctr;\n   }\n   \n   public DateTime GetInitializationTime()\n   {\n      return firstUse;\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TypeInitializationException#1\">Public Class InfoModule\n   Private firstUse As DateTime\n   Private ctr As Integer = 0\n\n   Public Sub New(dat As DateTime)\n      firstUse = dat\n   End Sub\n   \n   Public Function Increment() As Integer\n      ctr += 1\n      Return ctr\n   End Function\n   \n   Public Function GetInitializationTime() As DateTime\n      Return firstUse\n   End Function\nEnd Class\n</code></pre><p> You can then compile the following example to an executable named Missing1.exe by including a reference to Missing1a.dll:  </p>\n<pre><code class=\"lang-c#\">csc Missing1.cs /r:Missing1a.dll  \n</code></pre><pre><code class=\"lang-vb\">vbc Missing1.vb /r:Missing1a.dll  \n</code></pre><p> However, if you rename, move, or delete Missing1a.dll and run the example, it throws a TypeInitializationException exception and displays the output shown in the example.  Note that the exception message includes information about the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property. In this case,  the inner exception is a <a class=\"xref\" href=\"system.io.filenotfoundexception\" data-linktype=\"relative-path\">FileNotFoundException</a> that is thrown because the runtime cannot find the dependent assembly.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TypeInitializationException#2\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Person p = new Person(&quot;John&quot;, &quot;Doe&quot;);\n      Console.WriteLine(p);   \n   }\n}\n\npublic class Person\n{\n   static InfoModule infoModule;\n   \n   String fName;\n   String mName;\n   String lName;\n   \n   static Person()\n   {\n      infoModule = new InfoModule(DateTime.UtcNow);\n   }\n   \n   public Person(String fName, String lName)\n   {\n      this.fName = fName;\n      this.lName = lName;\n      infoModule.Increment();\n   }\n   \n   public override String ToString()\n   {\n      return String.Format(&quot;{0} {1}&quot;, fName, lName);\n   }\n}\n// The example displays the following output if missing1a.dll is renamed or removed:\n//    Unhandled Exception: System.TypeInitializationException: \n//       The type initializer for &#39;Person&#39; threw an exception. ---&gt; \n//       System.IO.FileNotFoundException: Could not load file or assembly \n//       &#39;Missing1a, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null&#39; \n//       or one of its dependencies. The system cannot find the file specified.\n//       at Person..cctor()\n//       --- End of inner exception stack trace ---\n//       at Person..ctor(String fName, String lName)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TypeInitializationException#2\">Module Example\n   Public Sub Main()\n      Dim p As New Person(&quot;John&quot;, &quot;Doe&quot;)\n      Console.WriteLine(p)   \n   End Sub\nEnd Module\n\nPublic Class Person\n   Shared infoModule As InfoModule\n   \n   Dim fName As String\n   Dim mName As String\n   Dim lName As String\n   \n   Shared Sub New()\n      infoModule = New InfoModule(DateTime.UtcNow)\n   End Sub\n   \n   Public Sub New(fName As String, lName As String)\n      Me.fName = fName\n      Me.lName = lName\n      infoModule.Increment()\n   End Sub\n   \n   Public Overrides Function ToString() As String\n      Return String.Format(&quot;{0} {1}&quot;, fName, lName)\n   End Function\nEnd Class\n&#39; The example displays the following output if missing1a.dll is renamed or removed:\n&#39;    Unhandled Exception: System.TypeInitializationException: \n&#39;       The type initializer for &#39;Person&#39; threw an exception. ---&gt; \n&#39;       System.IO.FileNotFoundException: Could not load file or assembly \n&#39;       &#39;Missing1a, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null&#39; \n&#39;       or one of its dependencies. The system cannot find the file specified.\n&#39;       at Person..cctor()\n&#39;       --- End of inner exception stack trace ---\n&#39;       at Person..ctor(String fName, String lName)\n&#39;       at Example.Main()\n</code></pre><div class=\"NOTE\"><h5>Note</h5><p> In this example, a TypeInitializationException exception was thrown because an assembly could not be loaded. The exception can also be thrown if a static constructor attempts to open a data file, such as a configuration file, an XML file, or a file containing serialized data, that it cannot find.  </p>\n</div>\n<p><a name=\"Timeout\"></a>   </p>\n<h2 id=\"regular-expression-match-timeout-values\">Regular expression match timeout values</h2>\n<p> You can set the default timeout value for a regular expression pattern matching operation on a per-application domain basis. The timeout is defined by a specifying a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> value for the &quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot; property to the  <a class=\"xref\" href=\"system.appdomain#System_AppDomain_SetData_\" data-linktype=\"relative-path\">SetData</a> method. The time interval must be a valid <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that is greater than zero and less than approximately 24 days. If these requirements are not met, the attempt to set the default timeout value throws an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>, which in turn is wrapped in a TypeInitializationException exception.  </p>\n<p> The following example shows the TypeInitializationException that is thrown when the value assigned to the &quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot; property is invalid. To eliminate the exception, set the&quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot; property to a  <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> value that is greater than zero and less than approximately 24 days.  </p>\n<pre><code class=\"lang-cs\" name=\"System.TypeInitializationException#4\">using System;\nusing System.Text.RegularExpressions;\n\npublic class Example\n{\n   public static void Main()\n   {\n      AppDomain domain = AppDomain.CurrentDomain;\n      // Set a timeout interval of -2 seconds.\n      domain.SetData(&quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot;, TimeSpan.FromSeconds(-2));\n\n      Regex rgx = new Regex(&quot;[aeiouy]&quot;);\n      Console.WriteLine(&quot;Regular expression pattern: {0}&quot;, rgx.ToString());\n      Console.WriteLine(&quot;Timeout interval for this regex: {0} seconds&quot;,\n                        rgx.MatchTimeout.TotalSeconds);\n   }\n}\n// The example displays the following output:\n//    Unhandled Exception: System.TypeInitializationException: \n//       The type initializer for &#39;System.Text.RegularExpressions.Regex&#39; threw an exception. ---&gt; \n//       System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\n//       Parameter name: AppDomain data &#39;REGEX_DEFAULT_MATCH_TIMEOUT&#39; contains an invalid value or \n//       object for specifying a default matching timeout for System.Text.RegularExpressions.Regex.\n//       at System.Text.RegularExpressions.Regex.InitDefaultMatchTimeout()\n//       at System.Text.RegularExpressions.Regex..cctor()\n//       --- End of inner exception stack trace ---\n//       at System.Text.RegularExpressions.Regex..ctor(String pattern)\n//       at Example.Main()\n</code></pre><pre><code class=\"lang-vb\" name=\"System.TypeInitializationException#4\">Imports System.Text.RegularExpressions\n\nModule Example\n   Public Sub Main()\n      Dim domain As AppDomain = AppDomain.CurrentDomain\n      &#39; Set a timeout interval of -2 seconds.\n      domain.SetData(&quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot;, TimeSpan.FromSeconds(-2))\n\n      Dim rgx As New Regex(&quot;[aeiouy]&quot;)\n      Console.WriteLine(&quot;Regular expression pattern: {0}&quot;, rgx.ToString())\n      Console.WriteLine(&quot;Timeout interval for this regex: {0} seconds&quot;,\n                        rgx.MatchTimeout.TotalSeconds)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Unhandled Exception: System.TypeInitializationException: \n&#39;       The type initializer for &#39;System.Text.RegularExpressions.Regex&#39; threw an exception. ---&gt; \n&#39;       System.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\n&#39;       Parameter name: AppDomain data &#39;REGEX_DEFAULT_MATCH_TIMEOUT&#39; contains an invalid value or \n&#39;       object for specifying a default matching timeout for System.Text.RegularExpressions.Regex.\n&#39;       at System.Text.RegularExpressions.Regex.InitDefaultMatchTimeout()\n&#39;       at System.Text.RegularExpressions.Regex..cctor()\n&#39;       --- End of inner exception stack trace ---\n&#39;       at System.Text.RegularExpressions.Regex..ctor(String pattern)\n&#39;       at Example.Main()\n</code></pre><p><a name=\"Calendars\"></a>   </p>\n<h2 id=\"calendars-and-cultural-data\">Calendars and cultural data</h2>\n<p> If you attempt to instantiate a calendar but the runtime is unable to instantiate  the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to that calendar, it throws a TypeInitializationException exception. This exception can be thrown by the following calendar class constructors:  </p>\n<ul>\n<li><p>The default constructor of the <a class=\"xref\" href=\"system.globalization.japanesecalendar\" data-linktype=\"relative-path\">JapaneseCalendar</a> class.  </p>\n</li>\n<li><p>The default constructor of the <a class=\"xref\" href=\"system.globalization.koreancalendar\" data-linktype=\"relative-path\">KoreanCalendar</a> class.  </p>\n</li>\n<li><p>The default constructor of the <a class=\"xref\" href=\"system.globalization.taiwancalendar\" data-linktype=\"relative-path\">TaiwanCalendar</a> class.  </p>\n<p>Since cultural data for these cultures should be available on all systems, you should rarely, if ever, encounter this exception.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TypeInitializationException__ctor_System_String_System_Exception_\" data-linktype=\"self-bookmark\">TypeInitializationException(String,Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.typeinitializationexception\" data-linktype=\"relative-path\">TypeInitializationException</a> class with the default error message, the specified type name, and a reference to the inner exception that is the root cause of this exception.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TypeInitializationException_TypeName\" data-linktype=\"self-bookmark\">TypeName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the fully qualified name of the type that fails to initialize.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_TypeInitializationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the type name and additional exception information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TypeInitializationException__ctor_System_String_System_Exception_\">\r\n    \r\n            <a id=\"System_TypeInitializationException__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeInitializationException(String,Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.typeinitializationexception\" data-linktype=\"relative-path\">TypeInitializationException</a> class with the default error message, the specified type name, and a reference to the inner exception that is the root cause of this exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TypeInitializationException (string fullTypeName, Exception innerException);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fullTypeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The fully qualified name of the type that fails to initialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The exception that is the cause of the current exception. If the <code>innerException</code> parameter is not a null reference (<code>Nothing</code> in Visual Basic), the current exception is raised in a <code>catch</code> block that handles the inner exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property. The <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property returns the same value that is passed into the constructor, or a null reference (<code>Nothing</code> in Visual Basic) if the <a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a> property does not supply the inner exception value to the constructor.  </p>\n<p> The following table shows the initial property values for an instance of <a class=\"xref\" href=\"system.typeinitializationexception\" data-linktype=\"relative-path\">TypeInitializationException</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_InnerException_\" data-linktype=\"relative-path\">InnerException</a></td>\n<td>The inner exception reference.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception#System_Exception_Message_\" data-linktype=\"relative-path\">Message</a></td>\n<td>The localized error message string.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.typeinitializationexception#System_TypeInitializationException_TypeName_\" data-linktype=\"relative-path\">TypeName</a></td>\n<td>The name of the type.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TypeInitializationException_TypeName\">\r\n    \r\n            <a id=\"System_TypeInitializationException_TypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the fully qualified name of the type that fails to initialize.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TypeName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The fully qualified name of the type that fails to initialize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_TypeInitializationException_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_TypeInitializationException_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the type name and additional exception information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> that holds the serialized object data about the exception being thrown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> that contains contextual information about the source or destination.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.TypeInitializationException.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.TypeInitializationException.yml\">\r\n<meta name=\"APIName\" content=\"System.TypeInitializationException\">\r\n<meta name=\"APIName\" content=\"System.TypeInitializationException..ctor\">\r\n<meta name=\"APIName\" content=\"System.TypeInitializationException.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.TypeInitializationException.TypeName\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f2d6d171-081b-f596-73c3-e2ef80dd4ede\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The exception that is thrown as a wrapper around the exception thrown by the class initializer. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.TypeInitializationException\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.TypeInitializationException.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.TypeInitializationException.yml","open_to_public_contributors":true,"api_name":["System.TypeInitializationException","System.TypeInitializationException..ctor","System.TypeInitializationException.GetObjectData","System.TypeInitializationException.TypeName"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.TypeInitializationException","System::TypeInitializationException","System.TypeInitializationException.#ctor","System::TypeInitializationException::#ctor","System.TypeInitializationException.GetObjectData","System::TypeInitializationException::GetObjectData","System.TypeInitializationException.TypeName","System::TypeInitializationException::TypeName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f2d6d171-081b-f596-73c3-e2ef80dd4ede","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/TypeInitializationException.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TypeInitializationException class | Microsoft Docs","_op_ogTitle":"TypeInitializationException class","description":"The exception that is thrown as a wrapper around the exception thrown by the class initializer. This class cannot be inherited.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.TypeInitializationException","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.typeinitializationexception","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.typeinitializationexception","fileRelativePath":"System.TypeInitializationException.html"},"themesRelativePathToOutputRoot":"_themes/"}