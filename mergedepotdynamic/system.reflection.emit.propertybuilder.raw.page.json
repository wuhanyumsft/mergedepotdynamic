{"content":"    \r\n    <h1 id=\"System_Reflection_Emit_PropertyBuilder\">\r\n      <span class=\"lang-csharp\">PropertyBuilder</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines the properties for a type.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n[System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyBuilder))]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class PropertyBuilder : System.Reflection.PropertyInfo, System.Runtime.InteropServices._PropertyBuilder</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">System.Reflection.PropertyInfo</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PropertyBuilder</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_CustomAttributes\" data-linktype=\"relative-path\">CustomAttributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_GetCustomAttributesData\" data-linktype=\"relative-path\">GetCustomAttributesData()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_MetadataToken\" data-linktype=\"relative-path\">MetadataToken</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_op_Equality_System_Reflection_MemberInfo_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">op_Equality(MemberInfo,MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_op_Inequality_System_Reflection_MemberInfo_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">op_Inequality(MemberInfo,MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_System_Runtime_InteropServices__MemberInfo_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_MemberInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_System_Runtime_InteropServices__MemberInfo_GetType\" data-linktype=\"relative-path\">_MemberInfo.GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_System_Runtime_InteropServices__MemberInfo_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_MemberInfo.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_System_Runtime_InteropServices__MemberInfo_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_MemberInfo.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_System_Runtime_InteropServices__MemberInfo_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_MemberInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetAccessors\" data-linktype=\"relative-path\">GetAccessors()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetConstantValue\" data-linktype=\"relative-path\">GetConstantValue()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetGetMethod\" data-linktype=\"relative-path\">GetGetMethod()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetMethod\" data-linktype=\"relative-path\">GetMethod</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetOptionalCustomModifiers\" data-linktype=\"relative-path\">GetOptionalCustomModifiers()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetRawConstantValue\" data-linktype=\"relative-path\">GetRawConstantValue()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetRequiredCustomModifiers\" data-linktype=\"relative-path\">GetRequiredCustomModifiers()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetSetMethod\" data-linktype=\"relative-path\">GetSetMethod()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_GetValue_System_Object_\" data-linktype=\"relative-path\">GetValue(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_IsSpecialName\" data-linktype=\"relative-path\">IsSpecialName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_MemberType\" data-linktype=\"relative-path\">MemberType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_op_Equality_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_\" data-linktype=\"relative-path\">op_Equality(PropertyInfo,PropertyInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_op_Inequality_System_Reflection_PropertyInfo_System_Reflection_PropertyInfo_\" data-linktype=\"relative-path\">op_Inequality(PropertyInfo,PropertyInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_SetMethod\" data-linktype=\"relative-path\">SetMethod</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_SetValue_System_Object_System_Object_\" data-linktype=\"relative-path\">SetValue(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_System_Runtime_InteropServices__PropertyInfo_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_PropertyInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_System_Runtime_InteropServices__PropertyInfo_GetType\" data-linktype=\"relative-path\">_PropertyInfo.GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_System_Runtime_InteropServices__PropertyInfo_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_PropertyInfo.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_System_Runtime_InteropServices__PropertyInfo_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_PropertyInfo.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_System_Runtime_InteropServices__PropertyInfo_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_PropertyInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A <code>PropertyBuilder</code> is always associated with a <code>TypeBuilder</code>. The <code>TypeBuilder</code>. <code>DefineProperty</code> method will return a new <code>PropertyBuilder</code> to a client.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_Attributes\" data-linktype=\"self-bookmark\">Attributes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attributes for this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_CanRead\" data-linktype=\"self-bookmark\">CanRead</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the property can be read.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_CanWrite\" data-linktype=\"self-bookmark\">CanWrite</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the property can be written to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_DeclaringType\" data-linktype=\"self-bookmark\">DeclaringType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the class that declares this member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_Module\" data-linktype=\"self-bookmark\">Module</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the module in which the type that declares the current property is being defined.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of this member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_PropertyToken\" data-linktype=\"self-bookmark\">PropertyToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the token for this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_PropertyType\" data-linktype=\"self-bookmark\">PropertyType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the field of this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_ReflectedType\" data-linktype=\"self-bookmark\">ReflectedType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the class object that was used to obtain this instance of <code>MemberInfo</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_AddOtherMethod_System_Reflection_Emit_MethodBuilder_\" data-linktype=\"self-bookmark\">AddOtherMethod(MethodBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds one of the other methods associated with this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetAccessors_System_Boolean_\" data-linktype=\"self-bookmark\">GetAccessors(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of the public and non-public <code>get</code> and <code>set</code> accessors on this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetCustomAttributes_System_Boolean_\" data-linktype=\"self-bookmark\">GetCustomAttributes(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of all the custom attributes for this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetCustomAttributes_System_Type_System_Boolean_\" data-linktype=\"self-bookmark\">GetCustomAttributes(Type,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of custom attributes identified by <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetGetMethod_System_Boolean_\" data-linktype=\"self-bookmark\">GetGetMethod(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the public and non-public get accessor for this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetIndexParameters\" data-linktype=\"self-bookmark\">GetIndexParameters()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an array of all the index parameters for the property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetSetMethod_System_Boolean_\" data-linktype=\"self-bookmark\">GetSetMethod(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the set accessor for this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetValue_System_Object_System_Object___\" data-linktype=\"self-bookmark\">GetValue(Object,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the indexed property by calling the property&#39;s getter method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_GetValue_System_Object_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_\" data-linktype=\"self-bookmark\">GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of a property having the specified binding, index, and <code>CultureInfo</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_IsDefined_System_Type_System_Boolean_\" data-linktype=\"self-bookmark\">IsDefined(Type,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether one or more instance of <code>attributeType</code> is defined on this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetConstant_System_Object_\" data-linktype=\"self-bookmark\">SetConstant(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the default value of this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetCustomAttribute_System_Reflection_Emit_CustomAttributeBuilder_\" data-linktype=\"self-bookmark\">SetCustomAttribute(CustomAttributeBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Set a custom attribute using a custom attribute builder.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetCustomAttribute_System_Reflection_ConstructorInfo_System_Byte___\" data-linktype=\"self-bookmark\">SetCustomAttribute(ConstructorInfo,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Set a custom attribute using a specified custom attribute blob.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetGetMethod_System_Reflection_Emit_MethodBuilder_\" data-linktype=\"self-bookmark\">SetGetMethod(MethodBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the method that gets the property value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetSetMethod_System_Reflection_Emit_MethodBuilder_\" data-linktype=\"self-bookmark\">SetSetMethod(MethodBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the method that sets the property value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetValue_System_Object_System_Object_System_Object___\" data-linktype=\"self-bookmark\">SetValue(Object,Object,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the value of the property with optional index values for index properties.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_SetValue_System_Object_System_Object_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_\" data-linktype=\"self-bookmark\">SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the property value for the given object to the given value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">_PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">_PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetTypeInfoCount_System_UInt32__\" data-linktype=\"self-bookmark\">_PropertyBuilder.GetTypeInfoCount(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">_PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_Attributes\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_Attributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attributes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attributes for this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Reflection.PropertyAttributes Attributes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyattributes\" data-linktype=\"relative-path\">PropertyAttributes</a></div>\r\n                  </div>\r\n                  <p>Attributes of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_CanRead\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_CanRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRead</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the property can be read.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanRead { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this property can be read; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Boolean property indicating if the property can be read. If the property does not have a get accessor, it cannot be read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_CanWrite\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_CanWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanWrite</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the property can be written to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool CanWrite { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this property can be written to; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Boolean property indicating if the property can be written to. If the property does not have a set accessor, it cannot be written to.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_DeclaringType\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_DeclaringType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeclaringType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the class that declares this member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Type DeclaringType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <code>Type</code> object for the class that declares this member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_Module\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_Module_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Module</div>        \r\n          </div>\r\n    \r\n            <p>Gets the module in which the type that declares the current property is being defined.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Reflection.Module Module { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.reflection.module\" data-linktype=\"relative-path\">Module</a> in which the type that declares the current property is defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is provided as a convenience for the user. It is equivalent to using the <a class=\"xref\" href=\"system.reflection.emit.propertybuilder#System_Reflection_Emit_PropertyBuilder_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> property to get the type in which the property is declared, and then calling the <a class=\"xref\" href=\"system.type#System_Type_Module_\" data-linktype=\"relative-path\">Module</a> property of the resulting <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_Name\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of this member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the name of this member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_PropertyToken\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_PropertyToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyToken</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the token for this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.Emit.PropertyToken PropertyToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.propertytoken\" data-linktype=\"relative-path\">PropertyToken</a></div>\r\n                  </div>\r\n                  <p>Read-only. Retrieves the token for this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_PropertyType\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_PropertyType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the field of this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Type PropertyType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The type of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_ReflectedType\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_ReflectedType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReflectedType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the class object that was used to obtain this instance of <code>MemberInfo</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Type ReflectedType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <code>Type</code> object through which this <code>MemberInfo</code> object was obtained.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_AddOtherMethod_System_Reflection_Emit_MethodBuilder_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_AddOtherMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddOtherMethod(MethodBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Adds one of the other methods associated with this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mdBuilder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.methodbuilder\" data-linktype=\"relative-path\">MethodBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <code>MethodBuilder</code> object that represents the other method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mdBuilder</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span> has been called on the enclosing type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetAccessors_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetAccessors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAccessors(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of the public and non-public <code>get</code> and <code>set</code> accessors on this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nonPublic</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates whether non-public methods should be returned in the <code>MethodInfo</code> array. <code>true</code> if non-public methods are to be included; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <code>MethodInfo</code> containing the matching public or non-public accessors, or an empty array if matching accessors do not exist on this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the accessors of a property, reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetAccessors.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetCustomAttributes_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetCustomAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCustomAttributes(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of all the custom attributes for this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object[] GetCustomAttributes (bool inherit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>inherit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>true</code>, walks up this property&#39;s inheritance chain to find the custom attributes</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </div>\r\n                  <p>An array of all the custom attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetCustomAttributes_System_Type_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetCustomAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCustomAttributes(Type,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of custom attributes identified by <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object[] GetCustomAttributes (Type attributeType, bool inherit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of custom attributes identified by type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inherit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>true</code>, walks up this property&#39;s inheritance chain to find the custom attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </div>\r\n                  <p>An array of custom attributes defined on this reflected member, or <code>null</code> if no attributes are defined on this member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetGetMethod_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetGetMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetGetMethod(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the public and non-public get accessor for this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Reflection.MethodInfo GetGetMethod (bool nonPublic);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nonPublic</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates whether non-public get accessors should be returned. <code>true</code> if non-public methods are to be included; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>A <code>MethodInfo</code> object representing the get accessor for this property, if <code>nonPublic</code> is <code>true</code>. Returns <code>null</code> if <code>nonPublic</code> is <code>false</code> and the get accessor is non-public, or if <code>nonPublic</code> is <code>true</code> but no get accessors exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the getter of a property, reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetGetMethod.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetIndexParameters\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetIndexParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIndexParameters()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an array of all the index parameters for the property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Reflection.ParameterInfo[] GetIndexParameters ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">ParameterInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <code>ParameterInfo</code> containing the parameters for the indexes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the index parameters of a property, reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetIndexParameters.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetSetMethod_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetSetMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSetMethod(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the set accessor for this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Reflection.MethodInfo GetSetMethod (bool nonPublic);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nonPublic</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates whether the accessor should be returned if it is non-public. <code>true</code> if non-public methods are to be included; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>The property&#39;s <code>Set</code> method, or <code>null</code>, as shown in the following table.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Condition<br>\n </th></tr></thead><tbody><tr><td> A <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object representing the Set method for this property.<br>\n </td><td> The set accessor is public.<br>\n <code>nonPublic</code> is true and non-public methods can be returned.<br>\n </td></tr><tr><td> null<br>\n </td><td><code>nonPublic</code> is true, but the property is read-only.<br>\n <code>nonPublic</code> is false and the set accessor is non-public.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the setter of a property, reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetSetMethod.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetValue_System_Object_System_Object___\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValue(Object,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the indexed property by calling the property&#39;s getter method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object GetValue (object obj, object[] index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object whose property value will be returned.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional index values for indexed properties. This value should be <code>null</code> for non-indexed properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value of the specified indexed property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the value of a property, reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the <code>Reflection</code> property object from the type, and call <code>PropertyInfo.GetValue</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_GetValue_System_Object_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_GetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetValue(Object,BindingFlags,Binder,Object[],CultureInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of a property having the specified binding, index, and <code>CultureInfo</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object whose property value will be returned.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invokeAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The invocation attribute. This must be a bit flag from <code>BindingFlags</code> : <code>InvokeMethod</code>, <code>CreateInstance</code>, <code>Static</code>, <code>GetField</code>, <code>SetField</code>, <code>GetProperty</code>, or <code>SetProperty</code>. A suitable invocation attribute must be specified. If a static member is to be invoked, the <code>Static</code> flag of <code>BindingFlags</code> must be set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <code>MemberInfo</code> objects using reflection. If <code>binder</code> is <code>null</code>, the default binder is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional index values for indexed properties. This value should be <code>null</code> for non-indexed properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>CultureInfo</code> object that represents the culture for which the resource is to be localized. Note that if the resource is not localized for this culture, the <code>CultureInfo.Parent</code> method will be called successively in search of a match. If this value is <code>null</code>, the <code>CultureInfo</code> is obtained from the <code>CultureInfo.CurrentUICulture</code> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The property value for <code>obj</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To get the value of a property, reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetValue.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_IsDefined_System_Type_System_Boolean_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_IsDefined_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDefined(Type,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether one or more instance of <code>attributeType</code> is defined on this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsDefined (Type attributeType, bool inherit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>Type</code> object to which the custom attributes are applied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>inherit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies whether to walk up this property&#39;s inheritance chain to find the custom attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if one or more instance of <code>attributeType</code> is defined on this property; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Reflect on the property&#39;s parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.IsDefined.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetConstant_System_Object_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetConstant_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetConstant(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the default value of this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetConstant (object defaultValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default value of this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span> has been called on the enclosing type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The property is not one of the supported types.  </p>\n<p> -or-  </p>\n<p> The type of <code>defaultValue</code> does not match the type of the property.  </p>\n<p> -or-  </p>\n<p> The property is of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> or other reference type, <code>defaultValue</code> is not <code>null</code>, and the value cannot be assigned to the reference type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>defaultValue</code> is restricted to the following types: <code>Boolean</code>, <code>SByte</code>, <code>Int16</code>, <code>Int32</code>, <code>Int64</code>, <code>Byte</code>, <code>UInt16</code>, <code>UInt32</code>, <code>UInt64</code>, <code>Single</code>, <code>Double</code>, <code>DateTime</code>, <code>Char</code>, <code>String</code>, and <code>Enum</code>. If the property type is a reference type, CLS compliance requires <code>defaultValue</code> to be <code>null</code>. However, starting with the .NET Framework 4, <code>defaultValue</code> can be non-null for reference types as long as the value can be assigned to that reference type. For example, an <code>Int32</code> value can be assigned to a property of type <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>. This is not CLS-compliant, but it can be useful in interop scenarios.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetCustomAttribute_System_Reflection_Emit_CustomAttributeBuilder_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetCustomAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCustomAttribute(CustomAttributeBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Set a custom attribute using a custom attribute builder.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>customBuilder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.customattributebuilder\" data-linktype=\"relative-path\">CustomAttributeBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of a helper class to define the custom attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>customBuilder</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>if <span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span> has been called on the enclosing type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetCustomAttribute_System_Reflection_ConstructorInfo_System_Byte___\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetCustomAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCustomAttribute(ConstructorInfo,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Set a custom attribute using a specified custom attribute blob.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>con</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.constructorinfo\" data-linktype=\"relative-path\">ConstructorInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The constructor for the custom attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binaryAttribute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte blob representing the attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>con</code> or <code>binaryAttribute</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span> has been called on the enclosing type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See the metadata specification in the ECMA Partition II documentation for details on how to format <code>binaryAttribute</code>. The Partition II documentation is available online on MSDN (<a href=\"http://go.microsoft.com/fwlink/?linkid=65555\" data-linktype=\"external\">ECMA C# and Common Language Infrastructure Standards</a> Web page) and on the ECMA Web site (<a href=\"http://go.microsoft.com/fwlink/?linkid=65552\" data-linktype=\"external\">Standard ECMA-335 Common Language Infrastructure</a> document).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetGetMethod_System_Reflection_Emit_MethodBuilder_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetGetMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetGetMethod(MethodBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the method that gets the property value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetGetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mdBuilder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.methodbuilder\" data-linktype=\"relative-path\">MethodBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <code>MethodBuilder</code> object that represents the method that gets the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mdBuilder</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span> has been called on the enclosing type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code sample demonstrates how to attach a dynamic method to a <code>get</code> property created with <code>PropertyBuilder</code> using <code>SetGetMethod</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"PropertyBuilder_SetGetMethod_4#1\">      // Define property Greeting.\n      PropertyBuilder greetingPropertyBuilder = helloWorldTypeBuilder.DefineProperty(\n                               &quot;Greeting&quot;,PropertyAttributes.None,typeof(string),null);\n\n      // Define the &#39;get_Greeting&#39; method.\n      MethodBuilder getGreetingMethod = helloWorldTypeBuilder.DefineMethod(&quot;get_Greeting&quot;,\n         MethodAttributes.Public|MethodAttributes.HideBySig|MethodAttributes.SpecialName,\n         typeof(String),null);\n      // Generate IL code for &#39;get_Greeting&#39; method.\n      ILGenerator methodIL = getGreetingMethod.GetILGenerator();\n      methodIL.Emit(OpCodes.Ldarg_0);\n      methodIL.Emit(OpCodes.Ldfld, greetingFieldBuilder);\n      methodIL.Emit(OpCodes.Ret);\n      greetingPropertyBuilder.SetGetMethod(getGreetingMethod);\n</code></pre><pre><code class=\"lang-cpp\" name=\"PropertyBuilder_SetGetMethod_4#1\">   // Define property Greeting.\n   PropertyBuilder^ greetingPropertyBuilder = helloWorldTypeBuilder-&gt;DefineProperty( &quot;Greeting&quot;, PropertyAttributes::None, String::typeid, nullptr );\n\n   // Define the &#39;get_Greeting&#39; method.\n   MethodBuilder^ getGreetingMethod = helloWorldTypeBuilder-&gt;DefineMethod( &quot;get_Greeting&quot;, static_cast&lt;MethodAttributes&gt;(MethodAttributes::Public | MethodAttributes::HideBySig | MethodAttributes::SpecialName), String::typeid, nullptr );\n\n   // Generate IL code for &#39;get_Greeting&#39; method.\n   ILGenerator^ methodIL = getGreetingMethod-&gt;GetILGenerator();\n   methodIL-&gt;Emit( OpCodes::Ldarg_0 );\n   methodIL-&gt;Emit( OpCodes::Ldfld, greetingFieldBuilder );\n   methodIL-&gt;Emit( OpCodes::Ret );\n   greetingPropertyBuilder-&gt;SetGetMethod( getGreetingMethod );\n</code></pre><pre><code class=\"lang-vb\" name=\"PropertyBuilder_SetGetMethod_4#1\">      &#39; Define property Greeting.\n      Dim greetingPropertyBuilder As PropertyBuilder = helloWorldTypeBuilder.DefineProperty _\n                                 (&quot;Greeting&quot;, PropertyAttributes.None, GetType(String), Nothing)\n\n      &#39; Define the &#39;get_Greeting&#39; method.\n      Dim getGreetingMethod As MethodBuilder = helloWorldTypeBuilder.DefineMethod(&quot;get_Greeting&quot;, _\n                              MethodAttributes.Public Or MethodAttributes.HideBySig Or _\n                              MethodAttributes.SpecialName, GetType(String), Nothing)\n      &#39; Generate IL code for &#39;get_Greeting&#39; method.\n      Dim methodIL As ILGenerator = getGreetingMethod.GetILGenerator()\n      methodIL.Emit(OpCodes.Ldarg_0)\n      methodIL.Emit(OpCodes.Ldfld, greetingFieldBuilder)\n      methodIL.Emit(OpCodes.Ret)\n      greetingPropertyBuilder.SetGetMethod(getGreetingMethod)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetSetMethod_System_Reflection_Emit_MethodBuilder_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetSetMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSetMethod(MethodBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the method that sets the property value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetSetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mdBuilder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.methodbuilder\" data-linktype=\"relative-path\">MethodBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <code>MethodBuilder</code> object that represents the method that sets the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>mdBuilder</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span> has been called on the enclosing type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code sample demonstrates how to attach a dynamic method to a <code>set</code> property created with <code>PropertyBuilder</code> using <code>SetSetMethod</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"PropertyBuilder_SetGetMethod_4#2\">      // Define a public class named &quot;HelloWorld&quot; in the assembly.\n      TypeBuilder helloWorldTypeBuilder = myModule.DefineType(&quot;HelloWorld&quot;, TypeAttributes.Public);\n      // Define a private String field named &quot;m_greeting&quot; in &quot;HelloWorld&quot; class.\n      FieldBuilder greetingFieldBuilder = helloWorldTypeBuilder.DefineField(&quot;m_greeting&quot;,\n                                                typeof(String), FieldAttributes.Private);\n      // Create constructor args and define constructor.\n      Type[] constructorArgs = { typeof(String) };\n      ConstructorBuilder constructor = helloWorldTypeBuilder.DefineConstructor(\n         MethodAttributes.Public, CallingConventions.Standard, constructorArgs);\n\n      // Generate IL code for the method.The constructor stores its argument in the private field.\n      ILGenerator constructorIL = constructor.GetILGenerator();\n      constructorIL.Emit(OpCodes.Ldarg_0);\n      constructorIL.Emit(OpCodes.Ldarg_1);\n      constructorIL.Emit(OpCodes.Stfld, greetingFieldBuilder);\n      constructorIL.Emit(OpCodes.Ret);\n      // Define property Greeting.\n      PropertyBuilder greetingPropertyBuilder = helloWorldTypeBuilder.DefineProperty(\n                               &quot;Greeting&quot;,PropertyAttributes.None,typeof(string),null);\n\n      // Define the &#39;get_Greeting&#39; method.\n      MethodBuilder getGreetingMethod = helloWorldTypeBuilder.DefineMethod(&quot;get_Greeting&quot;,\n         MethodAttributes.Public|MethodAttributes.HideBySig|MethodAttributes.SpecialName,\n         typeof(String),null);\n      // Generate IL code for &#39;get_Greeting&#39; method.\n      ILGenerator methodIL = getGreetingMethod.GetILGenerator();\n      methodIL.Emit(OpCodes.Ldarg_0);\n      methodIL.Emit(OpCodes.Ldfld, greetingFieldBuilder);\n      methodIL.Emit(OpCodes.Ret);\n      greetingPropertyBuilder.SetGetMethod(getGreetingMethod);\n\n      // Define the set_Greeting method.\n      Type[] methodArgs = {typeof(string)};\n      MethodBuilder setGreetingMethod = helloWorldTypeBuilder.DefineMethod(&quot;set_Greeting&quot;,\n         MethodAttributes.Public|MethodAttributes.HideBySig|MethodAttributes.SpecialName,\n         typeof(void), methodArgs);\n      // Generate IL code for set_Greeting method.\n      methodIL = setGreetingMethod.GetILGenerator();\n      methodIL.Emit(OpCodes.Ldarg_0);\n      methodIL.Emit(OpCodes.Ldarg_1);\n      methodIL.Emit(OpCodes.Stfld,greetingFieldBuilder);\n      methodIL.Emit(OpCodes.Ret);\n      greetingPropertyBuilder.SetSetMethod(setGreetingMethod);\n</code></pre><pre><code class=\"lang-cpp\" name=\"PropertyBuilder_SetGetMethod_4#2\">   TypeBuilder^ helloWorldTypeBuilder = myModule-&gt;DefineType( &quot;HelloWorld&quot;, TypeAttributes::Public );\n\n   // Define a private String field named &quot;m_greeting&quot; in &quot;HelloWorld&quot; class.\n   FieldBuilder^ greetingFieldBuilder = helloWorldTypeBuilder-&gt;DefineField( &quot;m_greeting&quot;, String::typeid, FieldAttributes::Private );\n\n   // Create constructor args and define constructor.\n   array&lt;Type^&gt;^constructorArgs = {String::typeid};\n   ConstructorBuilder^ constructor = helloWorldTypeBuilder-&gt;DefineConstructor( MethodAttributes::Public, CallingConventions::Standard, constructorArgs );\n\n   // Generate IL code for the method.The constructor stores its argument in the private field.\n   ILGenerator^ constructorIL = constructor-&gt;GetILGenerator();\n   constructorIL-&gt;Emit( OpCodes::Ldarg_0 );\n   constructorIL-&gt;Emit( OpCodes::Ldarg_1 );\n   constructorIL-&gt;Emit( OpCodes::Stfld, greetingFieldBuilder );\n   constructorIL-&gt;Emit( OpCodes::Ret );\n\n   // Define property Greeting.\n   PropertyBuilder^ greetingPropertyBuilder = helloWorldTypeBuilder-&gt;DefineProperty( &quot;Greeting&quot;, PropertyAttributes::None, String::typeid, nullptr );\n\n   // Define the &#39;get_Greeting&#39; method.\n   MethodBuilder^ getGreetingMethod = helloWorldTypeBuilder-&gt;DefineMethod( &quot;get_Greeting&quot;, static_cast&lt;MethodAttributes&gt;(MethodAttributes::Public | MethodAttributes::HideBySig | MethodAttributes::SpecialName), String::typeid, nullptr );\n\n   // Generate IL code for &#39;get_Greeting&#39; method.\n   ILGenerator^ methodIL = getGreetingMethod-&gt;GetILGenerator();\n   methodIL-&gt;Emit( OpCodes::Ldarg_0 );\n   methodIL-&gt;Emit( OpCodes::Ldfld, greetingFieldBuilder );\n   methodIL-&gt;Emit( OpCodes::Ret );\n   greetingPropertyBuilder-&gt;SetGetMethod( getGreetingMethod );\n\n\n   // Define the set_Greeting method.\n   array&lt;Type^&gt;^methodArgs = {String::typeid};\n   MethodBuilder^ setGreetingMethod = helloWorldTypeBuilder-&gt;DefineMethod( &quot;set_Greeting&quot;, static_cast&lt;MethodAttributes&gt;(MethodAttributes::Public | MethodAttributes::HideBySig | MethodAttributes::SpecialName), void::typeid, methodArgs );\n\n   // Generate IL code for set_Greeting method.\n   methodIL = setGreetingMethod-&gt;GetILGenerator();\n   methodIL-&gt;Emit( OpCodes::Ldarg_0 );\n   methodIL-&gt;Emit( OpCodes::Ldarg_1 );\n   methodIL-&gt;Emit( OpCodes::Stfld, greetingFieldBuilder );\n   methodIL-&gt;Emit( OpCodes::Ret );\n   greetingPropertyBuilder-&gt;SetSetMethod( setGreetingMethod );\n</code></pre><pre><code class=\"lang-vb\" name=\"PropertyBuilder_SetGetMethod_4#2\">      &#39; Define a public class named &quot;HelloWorld&quot; in the assembly.\n      Dim helloWorldTypeBuilder As TypeBuilder = myModule.DefineType(&quot;HelloWorld&quot;, _\n                                                                           TypeAttributes.Public)\n      &#39; Define a private String field named &quot;m_greeting&quot; in &quot;HelloWorld&quot; class.\n      Dim greetingFieldBuilder As FieldBuilder = helloWorldTypeBuilder.DefineField _\n                                       (&quot;m_greeting&quot;, GetType(String), FieldAttributes.Private)\n      &#39; Create constructor args and define constructor.\n      Dim constructorArgs As Type() = {GetType(String)}\n      Dim constructor As ConstructorBuilder = helloWorldTypeBuilder.DefineConstructor _\n                           (MethodAttributes.Public, CallingConventions.Standard, constructorArgs)\n\n      &#39; Generate IL code for the method.The constructor stores its argument in the private field.\n      Dim constructorIL As ILGenerator = constructor.GetILGenerator()\n      constructorIL.Emit(OpCodes.Ldarg_0)\n      constructorIL.Emit(OpCodes.Ldarg_1)\n      constructorIL.Emit(OpCodes.Stfld, greetingFieldBuilder)\n      constructorIL.Emit(OpCodes.Ret)\n      &#39; Define property Greeting.\n      Dim greetingPropertyBuilder As PropertyBuilder = helloWorldTypeBuilder.DefineProperty _\n                                 (&quot;Greeting&quot;, PropertyAttributes.None, GetType(String), Nothing)\n\n      &#39; Define the &#39;get_Greeting&#39; method.\n      Dim getGreetingMethod As MethodBuilder = helloWorldTypeBuilder.DefineMethod(&quot;get_Greeting&quot;, _\n                              MethodAttributes.Public Or MethodAttributes.HideBySig Or _\n                              MethodAttributes.SpecialName, GetType(String), Nothing)\n      &#39; Generate IL code for &#39;get_Greeting&#39; method.\n      Dim methodIL As ILGenerator = getGreetingMethod.GetILGenerator()\n      methodIL.Emit(OpCodes.Ldarg_0)\n      methodIL.Emit(OpCodes.Ldfld, greetingFieldBuilder)\n      methodIL.Emit(OpCodes.Ret)\n      greetingPropertyBuilder.SetGetMethod(getGreetingMethod)\n\n      &#39; Define the set_Greeting method.\n      Dim methodArgs As Type() = {GetType(String)}\n      Dim setGreetingMethod As MethodBuilder = helloWorldTypeBuilder.DefineMethod _\n            (&quot;set_Greeting&quot;, MethodAttributes.Public Or MethodAttributes.HideBySig Or _\n                                    MethodAttributes.SpecialName, Nothing, methodArgs)\n\n      &#39; Generate IL code for set_Greeting method.\n      methodIL = setGreetingMethod.GetILGenerator()\n      methodIL.Emit(OpCodes.Ldarg_0)\n      methodIL.Emit(OpCodes.Ldarg_1)\n      methodIL.Emit(OpCodes.Stfld, greetingFieldBuilder)\n      methodIL.Emit(OpCodes.Ret)\n      greetingPropertyBuilder.SetSetMethod(setGreetingMethod)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetValue_System_Object_System_Object_System_Object___\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetValue(Object,Object,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Sets the value of the property with optional index values for index properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SetValue (object obj, object value, object[] index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object whose property value will be set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new value for this property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional index values for indexed properties. This value should be <code>null</code> for non-indexed properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set the value of a property, reflect on the property&#39;s parent type using <a class=\"xref\" href=\"system.type#System_Type_GetType_\" data-linktype=\"relative-path\">GetType</a> or <a class=\"xref\" href=\"system.reflection.assembly#System_Reflection_Assembly_GetType_\" data-linktype=\"relative-path\">GetType</a>, retrieve the <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object from the type, and call <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_SetValue_\" data-linktype=\"relative-path\">SetValue</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_SetValue_System_Object_System_Object_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object___System_Globalization_CultureInfo_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_SetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetValue(Object,Object,BindingFlags,Binder,Object[],CultureInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the property value for the given object to the given value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object whose property value will be returned.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new value for this property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invokeAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The invocation attribute. This must be a bit flag from <code>BindingFlags</code> : <code>InvokeMethod</code>, <code>CreateInstance</code>, <code>Static</code>, <code>GetField</code>, <code>SetField</code>, <code>GetProperty</code>, or <code>SetProperty</code>. A suitable invocation attribute must be specified. If a static member is to be invoked, the <code>Static</code> flag of <code>BindingFlags</code> must be set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <code>MemberInfo</code> objects using reflection. If <code>binder</code> is <code>null</code>, the default binder is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional index values for indexed properties. This value should be <code>null</code> for non-indexed properties.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>CultureInfo</code> object that represents the culture for which the resource is to be localized. Note that if the resource is not localized for this culture, the <code>CultureInfo.Parent</code> method will be called successively in search of a match. If this value is <code>null</code>, the <code>CultureInfo</code> is obtained from the <code>CultureInfo.CurrentUICulture</code> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set the value of a property, reflect on the property&#39;s parent type using <a class=\"xref\" href=\"system.type#System_Type_GetType_\" data-linktype=\"relative-path\">GetType</a> or <a class=\"xref\" href=\"system.reflection.assembly#System_Reflection_Assembly_GetType_\" data-linktype=\"relative-path\">GetType</a>, retrieve the <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object from the type, and call <a class=\"xref\" href=\"system.reflection.propertyinfo#System_Reflection_PropertyInfo_SetValue_\" data-linktype=\"relative-path\">SetValue</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetIDsOfNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_PropertyBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _PropertyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgszNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Passed-in array of names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Count of the names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret the names.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgDispId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Caller-allocated array which receives the IDs corresponding to the names.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetIDsOfNames</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetTypeInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_PropertyBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _PropertyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type information to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale identifier for the type information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ppTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Receives a pointer to the requested type information object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfo</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetTypeInfoCount_System_UInt32__\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_GetTypeInfoCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_PropertyBuilder.GetTypeInfoCount(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _PropertyBuilder.GetTypeInfoCount (out uint pcTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Points to a location that receives the number of type information interfaces provided by the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfoCount</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_PropertyBuilder_System_Runtime_InteropServices__PropertyBuilder_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_PropertyBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _PropertyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dispIdMember</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>wFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags describing the context of the call.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pDispParams</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pVarResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to the location where the result is to be stored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pExcepInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure that contains exception information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>puArgErr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first argument that has an error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>The method is called late-bound using the COM <code>IDispatch</code> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::Invoke</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.PropertyBuilder.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.PropertyBuilder.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.AddOtherMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.Attributes\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.CanRead\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.CanWrite\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.DeclaringType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.GetAccessors\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.GetCustomAttributes\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.GetGetMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.GetIndexParameters\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.GetSetMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.GetValue\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.IsDefined\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.Module\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.Name\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.PropertyToken\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.PropertyType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.ReflectedType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.SetConstant\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.SetCustomAttribute\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.SetGetMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.SetSetMethod\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder.SetValue\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder._PropertyBuilder.GetIDsOfNames\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder._PropertyBuilder.GetTypeInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder._PropertyBuilder.GetTypeInfoCount\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.PropertyBuilder._PropertyBuilder.Invoke\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"302b9d17-9555-0ac1-7461-ffe21b2c1270\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines the properties for a type.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection.Emit/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Emit.PropertyBuilder\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.PropertyBuilder.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.PropertyBuilder.yml","open_to_public_contributors":true,"api_name":["System.Reflection.Emit.PropertyBuilder","System.Reflection.Emit.PropertyBuilder.AddOtherMethod","System.Reflection.Emit.PropertyBuilder.Attributes","System.Reflection.Emit.PropertyBuilder.CanRead","System.Reflection.Emit.PropertyBuilder.CanWrite","System.Reflection.Emit.PropertyBuilder.DeclaringType","System.Reflection.Emit.PropertyBuilder.GetAccessors","System.Reflection.Emit.PropertyBuilder.GetCustomAttributes","System.Reflection.Emit.PropertyBuilder.GetGetMethod","System.Reflection.Emit.PropertyBuilder.GetIndexParameters","System.Reflection.Emit.PropertyBuilder.GetSetMethod","System.Reflection.Emit.PropertyBuilder.GetValue","System.Reflection.Emit.PropertyBuilder.IsDefined","System.Reflection.Emit.PropertyBuilder.Module","System.Reflection.Emit.PropertyBuilder.Name","System.Reflection.Emit.PropertyBuilder.PropertyToken","System.Reflection.Emit.PropertyBuilder.PropertyType","System.Reflection.Emit.PropertyBuilder.ReflectedType","System.Reflection.Emit.PropertyBuilder.SetConstant","System.Reflection.Emit.PropertyBuilder.SetCustomAttribute","System.Reflection.Emit.PropertyBuilder.SetGetMethod","System.Reflection.Emit.PropertyBuilder.SetSetMethod","System.Reflection.Emit.PropertyBuilder.SetValue","System.Reflection.Emit.PropertyBuilder._PropertyBuilder.GetIDsOfNames","System.Reflection.Emit.PropertyBuilder._PropertyBuilder.GetTypeInfo","System.Reflection.Emit.PropertyBuilder._PropertyBuilder.GetTypeInfoCount","System.Reflection.Emit.PropertyBuilder._PropertyBuilder.Invoke"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.Emit.PropertyBuilder","System::Reflection::Emit::PropertyBuilder","System.Reflection.Emit.PropertyBuilder.AddOtherMethod","System::Reflection::Emit::PropertyBuilder::AddOtherMethod","System.Reflection.Emit.PropertyBuilder.Attributes","System::Reflection::Emit::PropertyBuilder::Attributes","System.Reflection.Emit.PropertyBuilder.CanRead","System::Reflection::Emit::PropertyBuilder::CanRead","System.Reflection.Emit.PropertyBuilder.CanWrite","System::Reflection::Emit::PropertyBuilder::CanWrite","System.Reflection.Emit.PropertyBuilder.DeclaringType","System::Reflection::Emit::PropertyBuilder::DeclaringType","System.Reflection.Emit.PropertyBuilder.GetAccessors","System::Reflection::Emit::PropertyBuilder::GetAccessors","System.Reflection.Emit.PropertyBuilder.GetCustomAttributes","System::Reflection::Emit::PropertyBuilder::GetCustomAttributes","System.Reflection.Emit.PropertyBuilder.GetGetMethod","System::Reflection::Emit::PropertyBuilder::GetGetMethod","System.Reflection.Emit.PropertyBuilder.GetIndexParameters","System::Reflection::Emit::PropertyBuilder::GetIndexParameters","System.Reflection.Emit.PropertyBuilder.GetSetMethod","System::Reflection::Emit::PropertyBuilder::GetSetMethod","System.Reflection.Emit.PropertyBuilder.GetValue","System::Reflection::Emit::PropertyBuilder::GetValue","System.Reflection.Emit.PropertyBuilder.IsDefined","System::Reflection::Emit::PropertyBuilder::IsDefined","System.Reflection.Emit.PropertyBuilder.Module","System::Reflection::Emit::PropertyBuilder::Module","System.Reflection.Emit.PropertyBuilder.Name","System::Reflection::Emit::PropertyBuilder::Name","System.Reflection.Emit.PropertyBuilder.PropertyToken","System::Reflection::Emit::PropertyBuilder::PropertyToken","System.Reflection.Emit.PropertyBuilder.PropertyType","System::Reflection::Emit::PropertyBuilder::PropertyType","System.Reflection.Emit.PropertyBuilder.ReflectedType","System::Reflection::Emit::PropertyBuilder::ReflectedType","System.Reflection.Emit.PropertyBuilder.SetConstant","System::Reflection::Emit::PropertyBuilder::SetConstant","System.Reflection.Emit.PropertyBuilder.SetCustomAttribute","System::Reflection::Emit::PropertyBuilder::SetCustomAttribute","System.Reflection.Emit.PropertyBuilder.SetGetMethod","System::Reflection::Emit::PropertyBuilder::SetGetMethod","System.Reflection.Emit.PropertyBuilder.SetSetMethod","System::Reflection::Emit::PropertyBuilder::SetSetMethod","System.Reflection.Emit.PropertyBuilder.SetValue","System::Reflection::Emit::PropertyBuilder::SetValue","System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames","System::Reflection::Emit::PropertyBuilder::System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames","System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo","System::Reflection::Emit::PropertyBuilder::System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo","System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount","System::Reflection::Emit::PropertyBuilder::System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount","System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke","System::Reflection::Emit::PropertyBuilder::System#Runtime#InteropServices#_PropertyBuilder#Invoke"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"302b9d17-9555-0ac1-7461-ffe21b2c1270","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Reflection.Emit/PropertyBuilder.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PropertyBuilder class | Microsoft Docs","_op_ogTitle":"PropertyBuilder class","description":"Defines the properties for a type.\n","toc_asset_id":"_splitted/System.Reflection.Emit/toc.json","toc_rel":"_splitted/System.Reflection.Emit/toc.json","source_url":"","ms.assetid":"System.Reflection.Emit.PropertyBuilder","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.propertybuilder","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.propertybuilder","fileRelativePath":"System.Reflection.Emit.PropertyBuilder.html"},"themesRelativePathToOutputRoot":"_themes/"}