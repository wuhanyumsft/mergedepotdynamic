{"content":"    \r\n    <h1 id=\"System_ComponentModel_Design_Serialization_ContextStack\">\r\n      <span class=\"lang-csharp\">ContextStack</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a stack object that can be used by a serializer to make information available to nested serializers.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class ContextStack</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ContextStack</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Some serializers require information about the context of an object to correctly persist their state. The ContextStack class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it. The value of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerserializationmanager#System_ComponentModel_Design_Serialization_IDesignerSerializationManager_Context_\" data-linktype=\"relative-path\">Context</a> property is provided by an <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerserializationmanager\" data-linktype=\"relative-path\">IDesignerSerializationManager</a> to share information of use to some serializers.  </p>\n<p> A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object. A serializer can set a context object to the stack before invoking a nested serializer. Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.  </p>\n<p> Typically, the objects on the stack contain information about the context of the current object that is being serialized. A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack. It is up to the implementation of each serializer to determine what objects get pushed on this stack.  </p>\n<p> As an example, an object with a property named <code>Enabled</code> has a data type of <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>. If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing. The serializer does not have this information, however, because it is only instructed to write the <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value. To provide this information to the serializer, the parent serializer can push a <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> that points to the <code>Enabled</code> property on the context stack.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack__ctor\" data-linktype=\"self-bookmark\">ContextStack()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.contextstack\" data-linktype=\"relative-path\">ContextStack</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current object on the stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object on the stack at the specified level.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack_Item_System_Type_\" data-linktype=\"self-bookmark\">Item(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the first object on the stack that inherits from or implements the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack_Append_System_Object_\" data-linktype=\"self-bookmark\">Append(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack_Pop\" data-linktype=\"self-bookmark\">Pop()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the current object off of the stack, returning its value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_Design_Serialization_ContextStack_Push_System_Object_\" data-linktype=\"self-bookmark\">Push(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Pushes, or places, the specified object onto the stack.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack__ctor\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContextStack()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.design.serialization.contextstack\" data-linktype=\"relative-path\">ContextStack</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ContextStack ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.componentmodel.design.serialization.contextstack\" data-linktype=\"relative-path\">ContextStack</a> instance.  </p>\n<pre><code class=\"lang-cpp\" name=\"ContextStackExample#2\">   // Create a ContextStack.\n   ContextStack^ stack = gcnew ContextStack;\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"ContextStackExample#2\">        &#39; Create a ContextStack.\n        Dim stack As New ContextStack\n</code></pre><pre><code class=\"lang-cs\" name=\"ContextStackExample#2\">            // Create a ContextStack.\n            ContextStack stack = new ContextStack();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack_Current\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current object on the stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The current object on the stack, or <code>null</code> if no objects were pushed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current object is the object at the top of the stack, or the object last added to the stack.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object on the stack at the specified level.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object this[int level] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>level</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The level of the object to retrieve on the stack. Level 0 is the top of the stack, level 1 is the next down, and so on. This level must be 0 or greater. If level is greater than the number of levels on the stack, it returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object on the stack at the specified level, or <code>null</code> if no object exists at that level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>level</code> is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack_Item_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the first object on the stack that inherits from or implements the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object this[Type type] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A type to retrieve from the context stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The first object on the stack that inherits from or implements the specified type, or <code>null</code> if no object on the stack implements the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>type</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A check is made on each level of the stack, searching for an object that implements or inherits <code>type</code>. If a match is found, it is returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack_Append_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack_Append_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Append(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Append (object context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A context object to append to the stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>context</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order. There is no way to remove an object that was appended to the end of the stack without removing all other objects.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack_Pop\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack_Pop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pop()</div>        \r\n          </div>\r\n    \r\n            <p>Removes the current object off of the stack, returning its value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Pop ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The object removed from the stack; <code>null</code> if no objects are on the stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates removing a value from a <a class=\"xref\" href=\"system.componentmodel.design.serialization.contextstack\" data-linktype=\"relative-path\">ContextStack</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"ContextStackExample#4\">   // Pop each item off the stack.\n   Object^ item = nullptr;\n   while ( (item = stack-&gt;Pop()) != 0 )\n      Console::WriteLine( &quot;Value popped from stack: {0}&quot;, item );\n</code></pre><pre><code class=\"lang-vb\" name=\"ContextStackExample#4\">        &#39; Pop each item off the stack.        \n        Dim item As Object = stack.Pop()\n        While item IsNot Nothing\n            Console.WriteLine((&quot;Value popped from stack: &quot; + item.ToString()))\n            item = stack.Pop()\n        End While\n</code></pre><pre><code class=\"lang-cs\" name=\"ContextStackExample#4\">            // Pop each item off the stack.\n            object item = null;\n            while( (item = stack.Pop()) != null )\n                Console.WriteLine( &quot;Value popped from stack: &quot;+item.ToString() );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_Design_Serialization_ContextStack_Push_System_Object_\">\r\n    \r\n            <a id=\"System_ComponentModel_Design_Serialization_ContextStack_Push_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Push(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Pushes, or places, the specified object onto the stack.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Push (object context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The context object to push onto the stack.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>context</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates pushing values to a <a class=\"xref\" href=\"system.componentmodel.design.serialization.contextstack\" data-linktype=\"relative-path\">ContextStack</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"ContextStackExample#3\">   // Push ten items on to the stack and output the value of each.\n   for ( int number = 0; number &lt; 10; number++ )\n   {\n      Console::WriteLine( &quot;Value pushed to stack: {0}&quot;, number );\n      stack-&gt;Push( number );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"ContextStackExample#3\">        &#39; Push ten items on to the stack and output the value of each.\n        Dim number As Integer\n        For number = 0 To 9\n            Console.WriteLine((&quot;Value pushed to stack: &quot; + number.ToString()))\n            stack.Push(number)\n        Next number\n</code></pre><pre><code class=\"lang-cs\" name=\"ContextStackExample#3\">            // Push ten items on to the stack and output the value of each.\n            for( int number = 0; number &lt; 10; number ++ )\n            {\n                Console.WriteLine( &quot;Value pushed to stack: &quot;+number.ToString() );\n                stack.Push( number );\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.Serialization.ContextStack.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.Serialization.ContextStack.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack.Append\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack.Current\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack.Item\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack.Pop\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.ContextStack.Push\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"61364e7e-7f7c-f685-12e5-4412e36e6d93\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a stack object that can be used by a serializer to make information available to nested serializers.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel.Design.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.Serialization.ContextStack\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.Serialization.ContextStack.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.Serialization.ContextStack.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.Design.Serialization.ContextStack","System.ComponentModel.Design.Serialization.ContextStack..ctor","System.ComponentModel.Design.Serialization.ContextStack.Append","System.ComponentModel.Design.Serialization.ContextStack.Current","System.ComponentModel.Design.Serialization.ContextStack.Item","System.ComponentModel.Design.Serialization.ContextStack.Pop","System.ComponentModel.Design.Serialization.ContextStack.Push"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.Serialization.ContextStack","System::ComponentModel::Design::Serialization::ContextStack","System.ComponentModel.Design.Serialization.ContextStack.#ctor","System::ComponentModel::Design::Serialization::ContextStack::#ctor","System.ComponentModel.Design.Serialization.ContextStack.Append","System::ComponentModel::Design::Serialization::ContextStack::Append","System.ComponentModel.Design.Serialization.ContextStack.Current","System::ComponentModel::Design::Serialization::ContextStack::Current","System.ComponentModel.Design.Serialization.ContextStack.Item","System::ComponentModel::Design::Serialization::ContextStack::Item","System.ComponentModel.Design.Serialization.ContextStack.Pop","System::ComponentModel::Design::Serialization::ContextStack::Pop","System.ComponentModel.Design.Serialization.ContextStack.Push","System::ComponentModel::Design::Serialization::ContextStack::Push"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"61364e7e-7f7c-f685-12e5-4412e36e6d93","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel.Design.Serialization/ContextStack.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ContextStack class | Microsoft Docs","_op_ogTitle":"ContextStack class","description":"Provides a stack object that can be used by a serializer to make information available to nested serializers.\n","toc_asset_id":"_splitted/System.ComponentModel.Design.Serialization/toc.json","toc_rel":"_splitted/System.ComponentModel.Design.Serialization/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.Serialization.ContextStack","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.serialization.contextstack","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.serialization.contextstack","fileRelativePath":"System.ComponentModel.Design.Serialization.ContextStack.html"},"themesRelativePathToOutputRoot":"_themes/"}