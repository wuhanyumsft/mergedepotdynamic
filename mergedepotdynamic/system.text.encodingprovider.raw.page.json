{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">EncodingProvider</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class EncodingProvider</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">EncodingProvider</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>An encoding provider supplies encodings that are not otherwise available on a particular target platform.  </p>\n<p> The .NET Framework on the Windows desktop supports a large number of character encodings and code pages. You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncodings_\" data-linktype=\"relative-path\">GetEncodings</a> method. .NET Core, on the other hand, by default supports only the following encodings:  </p>\n<ul>\n<li><p>ASCII (code page 20127), which is returned by the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_ASCII_\" data-linktype=\"relative-path\">ASCII</a> property.  </p>\n</li>\n<li><p>ISO-8859-1 (code page 28591).  </p>\n</li>\n<li><p>UTF-7 (code page 65000), which is returned by the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF7_\" data-linktype=\"relative-path\">UTF7</a> property.  </p>\n</li>\n<li><p>UTF-8 (code page 65001), which is returned by the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8_\" data-linktype=\"relative-path\">UTF8</a> property.  </p>\n</li>\n<li><p>UTF-16 and UTF-16LE (code page 1200), which is returned by the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_Unicode_\" data-linktype=\"relative-path\">Unicode</a> property.  </p>\n</li>\n<li><p>UTF-16BE (code page 1201), which is instantiated by calling the <a class=\"xref\" href=\"system.text.unicodeencoding#System_Text_UnicodeEncoding__ctor_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">System.Text.UnicodeEncoding.UnicodeEncoding(Boolean,Boolean)</a> or <a class=\"xref\" href=\"system.text.unicodeencoding#System_Text_UnicodeEncoding__ctor_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">System.Text.UnicodeEncoding.UnicodeEncoding(Boolean,Boolean)</a> constructor with a <code>bigEndian</code> value of <code>true</code>.  </p>\n</li>\n<li><p>UTF-32 and UTF-32LE (code page 12000), which is returned by the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF32_\" data-linktype=\"relative-path\">UTF32</a> property.  </p>\n</li>\n<li><p>UTF-32BE (code page 12001), which is instantiated by calling an <a class=\"xref\" href=\"system.text.utf32encoding\" data-linktype=\"relative-path\">UTF32Encoding</a> constructor that has a <code>bigEndian</code> parameter and providing a value of <code>true</code> in the method call.  </p>\n<p>In .NET Framework 4.6, EncodingProvider is the base class that makes otherwise unavailable encodings available to the .NET Framework. This involves the following steps:  </p>\n</li>\n</ul>\n<ol>\n<li><p>Define a subclass of EncodingProvider that overrides the two abstract <a class=\"xref\" href=\"system.text.encodingprovider#System_Text_EncodingProvider_GetEncoding_\" data-linktype=\"relative-path\">GetEncoding</a> overloads, <a class=\"xref\" href=\"system.text.encodingprovider#System_Text_EncodingProvider_GetEncoding_System_Int32_\" data-linktype=\"relative-path\">GetEncoding(Int32)</a> and <a class=\"xref\" href=\"system.text.encodingprovider#System_Text_EncodingProvider_GetEncoding_System_String_\" data-linktype=\"relative-path\">GetEncoding(String)</a>. These overloads return the otherwise unsupported encoding by code page identifier and by name.  </p>\n</li>\n<li><p>Optionally, you can override the virtual <a class=\"xref\" href=\"system.text.encodingprovider#System_Text_EncodingProvider_GetEncoding_System_Int32_System_Text_EncoderFallback_System_Text_DecoderFallback_\" data-linktype=\"relative-path\">GetEncoding(Int32,EncoderFallback,DecoderFallback)</a> and <a class=\"xref\" href=\"system.text.encodingprovider#System_Text_EncodingProvider_GetEncoding_System_String_System_Text_EncoderFallback_System_Text_DecoderFallback_\" data-linktype=\"relative-path\">GetEncoding(String,EncoderFallback,DecoderFallback)</a> methods. In most cases, this is not necessary, since the base class provides a default implementation.  </p>\n</li>\n<li><p>Pass the EncodingProvider instance to the <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_RegisterProvider_\" data-linktype=\"relative-path\">RegisterProvider</a> method to make the encodings supplied by the EncodingProvider object available to the common language runtime.  </p>\n</li>\n<li><p>Call an <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncoding_\" data-linktype=\"relative-path\">GetEncoding</a> overload to retrieve the encoding. The <a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_GetEncoding_\" data-linktype=\"relative-path\">GetEncoding</a> method will call the corresponding <a class=\"xref\" href=\"system.text.encodingprovider#System_Text_EncodingProvider_GetEncoding_\" data-linktype=\"relative-path\">GetEncoding</a> to determine whether it can supply the requested encoding.  </p>\n<p>The .NET Framework Class Library provides one static property, &lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName&gt;, that returns an EncodingProvider object that makes the full set of encodings available on the desktop .NET Framework Class Library available to .NET Core applications. In addition, you can derive from the EncodingProvider class to make your own encodings available.</p>\n</li>\n</ol>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncodingProvider__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EncodingProvider()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.text.encodingprovider\" data-linktype=\"relative-path\">EncodingProvider</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public EncodingProvider ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncodingProvider_GetEncoding_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEncoding(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the encoding associated with the specified code page identifier.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Text.Encoding GetEncoding (int codepage);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>codepage</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The code page identifier of the requested encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoding that is associated with the specified code page, or <code>null</code> if this <a class=\"xref\" href=\"system.text.encodingprovider\" data-linktype=\"relative-path\">EncodingProvider</a> cannot return a valid encoding that corresponds to <code>codepage</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncodingProvider_GetEncoding_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEncoding(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the encoding with the specified name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public abstract System.Text.Encoding GetEncoding (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the requested encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoding that is associated with the specified name, or <code>null</code> if this <a class=\"xref\" href=\"system.text.encodingprovider\" data-linktype=\"relative-path\">EncodingProvider</a> cannot return a valid encoding that corresponds to <code>name</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncodingProvider_GetEncoding_System_Int32_System_Text_EncoderFallback_System_Text_DecoderFallback_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEncoding(Int32,EncoderFallback,DecoderFallback)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the encoding associated with the specified code page identifier. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>codepage</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The code page identifier of the requested encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>encoderFallback</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallback\" data-linktype=\"relative-path\">EncoderFallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>decoderFallback</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallback\" data-linktype=\"relative-path\">DecoderFallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoding that is associated with the specified code page, or <code>null</code> if this <a class=\"xref\" href=\"system.text.encodingprovider\" data-linktype=\"relative-path\">EncodingProvider</a> cannot return a valid encoding that corresponds to <code>codepage</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>encoderFallback</code> and <code>decoderFallback</code> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:  </p>\n<ul>\n<li><p>Exception fallback. If the <code>encoderFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>, or the <code>decoderExceptionFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.  </p>\n</li>\n<li><p>Replacement fallback. If the <code>encoderFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a>, or the <code>decoderExceptionFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a &quot;?&quot;. If you call the <a class=\"xref\" href=\"system.text.encoderreplacementfallback#System_Text_EncoderReplacementFallback__ctor_System_String_\" data-linktype=\"relative-path\">System.Text.EncoderReplacementFallback.EncoderReplacementFallback(String)</a> or <a class=\"xref\" href=\"system.text.decoderreplacementfallback#System_Text_DecoderReplacementFallback__ctor_System_String_\" data-linktype=\"relative-path\">System.Text.DecoderReplacementFallback.DecoderReplacementFallback(String)</a> constructor, you can specify the replacement string.  </p>\n</li>\n<li><p>Best-fit fallback. You can derive from the <a class=\"xref\" href=\"system.text.encoderfallback\" data-linktype=\"relative-path\">EncoderFallback</a> or <a class=\"xref\" href=\"system.text.decoderfallback\" data-linktype=\"relative-path\">DecoderFallback</a> class to implement a best-fit replacement mechanism.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Text_EncodingProvider_GetEncoding_System_String_System_Text_EncoderFallback_System_Text_DecoderFallback_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetEncoding(String,EncoderFallback,DecoderFallback)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the encoding associated with the specified name. Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the preferred encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>encoderFallback</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallback\" data-linktype=\"relative-path\">EncoderFallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>decoderFallback</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.decoderfallback\" data-linktype=\"relative-path\">DecoderFallback</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The encoding that is associated with the specified name, or <code>null</code> if this <a class=\"xref\" href=\"system.text.encodingprovider\" data-linktype=\"relative-path\">EncodingProvider</a> cannot return a valid encoding that corresponds to <code>name</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>encoderFallback</code> and <code>decoderFallback</code> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character. The .NET Framework provides the following fallback mechanisms:  </p>\n<ul>\n<li><p>Exception fallback. If the <code>encoderFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.encoderexceptionfallback\" data-linktype=\"relative-path\">EncoderExceptionFallback</a>, or the <code>decoderExceptionFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.decoderexceptionfallback\" data-linktype=\"relative-path\">DecoderExceptionFallback</a>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.  </p>\n</li>\n<li><p>Replacement fallback. If the <code>encoderFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.encoderreplacementfallback\" data-linktype=\"relative-path\">EncoderReplacementFallback</a>, or the <code>decoderExceptionFallback</code> argument is an instance of <a class=\"xref\" href=\"system.text.decoderreplacementfallback\" data-linktype=\"relative-path\">DecoderReplacementFallback</a>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded. If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a &quot;?&quot;. If you call the <a class=\"xref\" href=\"system.text.encoderreplacementfallback#System_Text_EncoderReplacementFallback__ctor_System_String_\" data-linktype=\"relative-path\">System.Text.EncoderReplacementFallback.EncoderReplacementFallback(String)</a> or <a class=\"xref\" href=\"system.text.decoderreplacementfallback#System_Text_DecoderReplacementFallback__ctor_System_String_\" data-linktype=\"relative-path\">System.Text.DecoderReplacementFallback.DecoderReplacementFallback(String)</a> constructor, you can specify the replacement string.  </p>\n</li>\n<li><p>Best-fit fallback. You can derive from the <a class=\"xref\" href=\"system.text.encoderfallback\" data-linktype=\"relative-path\">EncoderFallback</a> or <a class=\"xref\" href=\"system.text.decoderfallback\" data-linktype=\"relative-path\">DecoderFallback</a> class to implement a best-fit replacement mechanism.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.EncodingProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Text.EncodingProvider\">\r\n<meta name=\"APIName\" content=\"System.Text.EncodingProvider..ctor\">\r\n<meta name=\"APIName\" content=\"System.Text.EncodingProvider.GetEncoding\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-20 08:28 AM\">\r\n<meta name=\"document_id\" content=\"965c6171-56e5-52e0-6043-9c34ce7d8335\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Text/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Text.EncodingProvider\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Text.EncodingProvider.yml","open_to_public_contributors":true,"api_name":["System.Text.EncodingProvider","System.Text.EncodingProvider..ctor","System.Text.EncodingProvider.GetEncoding"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Text.EncodingProvider","System::Text::EncodingProvider","System.Text.EncodingProvider.#ctor","System::Text::EncodingProvider::#ctor","System.Text.EncodingProvider.GetEncoding","System::Text::EncodingProvider::GetEncoding"],"dev_langs":["csharp"],"updated_at":"2017-03-20 08:28 AM","document_id":"965c6171-56e5-52e0-6043-9c34ce7d8335","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Text/EncodingProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EncodingProvider class | Microsoft Docs","_op_ogTitle":"EncodingProvider class","description":"Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.\n","toc_asset_id":"_splitted/System.Text/toc.json","toc_rel":"_splitted/System.Text/toc.json","source_url":"","ms.assetid":"System.Text.EncodingProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.encodingprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.text.encodingprovider","fileRelativePath":"System.Text.EncodingProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}