{"content":"    \r\n    <h1 id=\"System_Reflection_Emit_LocalBuilder\">\r\n      <span class=\"lang-csharp\">LocalBuilder</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a local variable within a method or constructor.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n[System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._LocalBuilder))]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class LocalBuilder : System.Reflection.LocalVariableInfo, System.Runtime.InteropServices._LocalBuilder</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.localvariableinfo\" data-linktype=\"relative-path\">System.Reflection.LocalVariableInfo</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LocalBuilder</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.reflection.localvariableinfo#System_Reflection_LocalVariableInfo_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A <code>LocalBuilder</code> object can be defined using the <a class=\"xref\" href=\"system.reflection.emit.ilgenerator#System_Reflection_Emit_ILGenerator_DeclareLocal_\" data-linktype=\"relative-path\">DeclareLocal</a> method.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_IsPinned\" data-linktype=\"self-bookmark\">IsPinned</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the object referred to by the local variable is pinned in memory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_LocalIndex\" data-linktype=\"self-bookmark\">LocalIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the zero-based index of the local variable within the method body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_LocalType\" data-linktype=\"self-bookmark\">LocalType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the local variable.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_System_String_\" data-linktype=\"self-bookmark\">SetLocalSymInfo(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the name of this local variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_System_String_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SetLocalSymInfo(String,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the name and lexical scope of this local variable.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">_LocalBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"self-bookmark\">_LocalBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetTypeInfoCount_System_UInt32__\" data-linktype=\"self-bookmark\">_LocalBuilder.GetTypeInfoCount(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"self-bookmark\">_LocalBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_IsPinned\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_IsPinned_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsPinned</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the object referred to by the local variable is pinned in memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsPinned { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the object referred to by the local variable is pinned in memory; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer. While the referenced object is pinned, it cannot be moved by garbage collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_LocalIndex\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_LocalIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the zero-based index of the local variable within the method body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int LocalIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer value that represents the order of declaration of the local variable within the method body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Index numbers are assigned to local variables in the order in which they are declared or emitted, beginning with zero.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_LocalType\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_LocalType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the local variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Type LocalType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the local variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code sample illustrates the use of <code>LocalType</code>. This code is part of a larger example for the <a class=\"xref\" href=\"system.reflection.emit.localbuilder\" data-linktype=\"relative-path\">LocalBuilder</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">        // Create local variables named myString and myInt.\n        LocalBuilder myLB1 = myMethodIL.DeclareLocal(typeof(string));\n        myLB1.SetLocalSymInfo(&quot;myString&quot;);\n        Console.WriteLine(&quot;local &#39;myString&#39; type is: {0}&quot;, myLB1.LocalType);\n\n        LocalBuilder myLB2 = myMethodIL.DeclareLocal(typeof(int));\n        myLB2.SetLocalSymInfo(&quot;myInt&quot;, 1, 2);\n        Console.WriteLine(&quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2.LocalType);\n</code></pre><pre><code class=\"lang-vb\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">        &#39; Create local variables named myString and myInt.\n        Dim myLB1 As LocalBuilder = myMethodIL.DeclareLocal(GetType(String))\n        myLB1.SetLocalSymInfo(&quot;myString&quot;)\n        Console.WriteLine(&quot;local &#39;myString&#39; type is: {0}&quot;, myLB1.LocalType)\n\n        Dim myLB2 As LocalBuilder = myMethodIL.DeclareLocal(GetType(Integer))\n        myLB2.SetLocalSymInfo(&quot;myInt&quot;, 1, 2)\n        Console.WriteLine(&quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2.LocalType)\n</code></pre><pre><code class=\"lang-cpp\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">    // Create local variables named myString and myInt.\n    LocalBuilder^ myLB1 = myMethodIL-&gt;DeclareLocal( String::typeid );\n    myLB1-&gt;SetLocalSymInfo( &quot;myString&quot; );\n    Console::WriteLine( &quot;local &#39;myString&#39; type is: {0}&quot;, myLB1-&gt;LocalType );\n\n    LocalBuilder^ myLB2 = myMethodIL-&gt;DeclareLocal( int::typeid );\n    myLB2-&gt;SetLocalSymInfo( &quot;myInt&quot;, 1, 2 );\n    Console::WriteLine( &quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2-&gt;LocalType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_System_String_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLocalSymInfo(String)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the name of this local variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetLocalSymInfo (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the local variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The containing type has been created with <span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span>.  </p>\n<p> -or-  </p>\n<p> There is no symbolic writer defined for the containing module.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This local is defined in a dynamic method, rather than in a method of a dynamic type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.reflection.emit.localbuilder#System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_\" data-linktype=\"relative-path\">SetLocalSymInfo</a> method is supported for methods defined in dynamic types. It is not supported for dynamic methods defined using the <a class=\"xref\" href=\"system.reflection.emit.dynamicmethod\" data-linktype=\"relative-path\">DynamicMethod</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code sample illustrates the use of the SetLocalSymInfo method. This code is part of a larger example for the <a class=\"xref\" href=\"system.reflection.emit.localbuilder\" data-linktype=\"relative-path\">LocalBuilder</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">        // Create local variables named myString and myInt.\n        LocalBuilder myLB1 = myMethodIL.DeclareLocal(typeof(string));\n        myLB1.SetLocalSymInfo(&quot;myString&quot;);\n        Console.WriteLine(&quot;local &#39;myString&#39; type is: {0}&quot;, myLB1.LocalType);\n\n        LocalBuilder myLB2 = myMethodIL.DeclareLocal(typeof(int));\n        myLB2.SetLocalSymInfo(&quot;myInt&quot;, 1, 2);\n        Console.WriteLine(&quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2.LocalType);\n</code></pre><pre><code class=\"lang-vb\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">        &#39; Create local variables named myString and myInt.\n        Dim myLB1 As LocalBuilder = myMethodIL.DeclareLocal(GetType(String))\n        myLB1.SetLocalSymInfo(&quot;myString&quot;)\n        Console.WriteLine(&quot;local &#39;myString&#39; type is: {0}&quot;, myLB1.LocalType)\n\n        Dim myLB2 As LocalBuilder = myMethodIL.DeclareLocal(GetType(Integer))\n        myLB2.SetLocalSymInfo(&quot;myInt&quot;, 1, 2)\n        Console.WriteLine(&quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2.LocalType)\n</code></pre><pre><code class=\"lang-cpp\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">    // Create local variables named myString and myInt.\n    LocalBuilder^ myLB1 = myMethodIL-&gt;DeclareLocal( String::typeid );\n    myLB1-&gt;SetLocalSymInfo( &quot;myString&quot; );\n    Console::WriteLine( &quot;local &#39;myString&#39; type is: {0}&quot;, myLB1-&gt;LocalType );\n\n    LocalBuilder^ myLB2 = myMethodIL-&gt;DeclareLocal( int::typeid );\n    myLB2-&gt;SetLocalSymInfo( &quot;myInt&quot;, 1, 2 );\n    Console::WriteLine( &quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2-&gt;LocalType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_System_String_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLocalSymInfo(String,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the name and lexical scope of this local variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetLocalSymInfo (string name, int startOffset, int endOffset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the local variable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The beginning offset of the lexical scope of the local variable.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endOffset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ending offset of the lexical scope of the local variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The containing type has been created with <span class=\"xref\">stem.Reflection.Emit.TypeBuilder.CreateType*</span>.  </p>\n<p> -or-  </p>\n<p> There is no symbolic writer defined for the containing module.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This local is defined in a dynamic method, rather than in a method of a dynamic type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.reflection.emit.localbuilder#System_Reflection_Emit_LocalBuilder_SetLocalSymInfo_\" data-linktype=\"relative-path\">SetLocalSymInfo</a> method is supported for methods defined in dynamic types. It is not supported for dynamic methods defined using the <a class=\"xref\" href=\"system.reflection.emit.dynamicmethod\" data-linktype=\"relative-path\">DynamicMethod</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code sample illustrates the use of the SetLocalSymInfo method. This code is part of a larger example for the <a class=\"xref\" href=\"system.reflection.emit.localbuilder\" data-linktype=\"relative-path\">LocalBuilder</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">        // Create local variables named myString and myInt.\n        LocalBuilder myLB1 = myMethodIL.DeclareLocal(typeof(string));\n        myLB1.SetLocalSymInfo(&quot;myString&quot;);\n        Console.WriteLine(&quot;local &#39;myString&#39; type is: {0}&quot;, myLB1.LocalType);\n\n        LocalBuilder myLB2 = myMethodIL.DeclareLocal(typeof(int));\n        myLB2.SetLocalSymInfo(&quot;myInt&quot;, 1, 2);\n        Console.WriteLine(&quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2.LocalType);\n</code></pre><pre><code class=\"lang-vb\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">        &#39; Create local variables named myString and myInt.\n        Dim myLB1 As LocalBuilder = myMethodIL.DeclareLocal(GetType(String))\n        myLB1.SetLocalSymInfo(&quot;myString&quot;)\n        Console.WriteLine(&quot;local &#39;myString&#39; type is: {0}&quot;, myLB1.LocalType)\n\n        Dim myLB2 As LocalBuilder = myMethodIL.DeclareLocal(GetType(Integer))\n        myLB2.SetLocalSymInfo(&quot;myInt&quot;, 1, 2)\n        Console.WriteLine(&quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2.LocalType)\n</code></pre><pre><code class=\"lang-cpp\" name=\"LocalBuilder_Sample_SetLocalSymInfo#2\">    // Create local variables named myString and myInt.\n    LocalBuilder^ myLB1 = myMethodIL-&gt;DeclareLocal( String::typeid );\n    myLB1-&gt;SetLocalSymInfo( &quot;myString&quot; );\n    Console::WriteLine( &quot;local &#39;myString&#39; type is: {0}&quot;, myLB1-&gt;LocalType );\n\n    LocalBuilder^ myLB2 = myMethodIL-&gt;DeclareLocal( int::typeid );\n    myLB2-&gt;SetLocalSymInfo( &quot;myInt&quot;, 1, 2 );\n    Console::WriteLine( &quot;local &#39;myInt&#39; type is: {0}&quot;, myLB2-&gt;LocalType );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetIDsOfNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_LocalBuilder.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Maps a set of names to a corresponding set of dispatch identifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _LocalBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgszNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Passed-in array of names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cNames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Count of the names to be mapped.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret the names.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgDispId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Caller-allocated array which receives the IDs corresponding to the names.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetIDsOfNames</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetTypeInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_LocalBuilder.GetTypeInfo(UInt32,UInt32,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the type information for an object, which can then be used to get the type information for an interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _LocalBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>iTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type information to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale identifier for the type information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ppTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Receives a pointer to the requested type information object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfo</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetTypeInfoCount_System_UInt32__\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_GetTypeInfoCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_LocalBuilder.GetTypeInfoCount(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _LocalBuilder.GetTypeInfoCount (out uint pcTInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcTInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Points to a location that receives the number of type information interfaces provided by the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::GetTypeInfoCount</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Reflection_Emit_LocalBuilder_System_Runtime_InteropServices__LocalBuilder_Invoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">_LocalBuilder.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Provides access to properties and methods exposed by an object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void _LocalBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dispIdMember</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Identifies the member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>riid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reserved for future use. Must be IID_NULL.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lcid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The locale context in which to interpret arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>wFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags describing the context of the call.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pDispParams</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pVarResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to the location where the result is to be stored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pExcepInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Pointer to a structure that contains exception information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>puArgErr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first argument that has an error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notimplementedexception\" data-linktype=\"relative-path\">NotImplementedException</a></div>\r\n                  </div>\r\n                  <p>Late-bound access using the COM <code>IDispatch</code> interface is not supported.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about <code>IDispatch::Invoke</code>, see the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.LocalBuilder.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.LocalBuilder.yml\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder.IsPinned\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder.LocalIndex\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder.LocalType\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder.SetLocalSymInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder._LocalBuilder.GetIDsOfNames\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder._LocalBuilder.GetTypeInfo\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder._LocalBuilder.GetTypeInfoCount\">\r\n<meta name=\"APIName\" content=\"System.Reflection.Emit.LocalBuilder._LocalBuilder.Invoke\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f2d2b20b-3a86-e3fa-07bf-47d2ebd89fbd\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Reflection.Emit\\LocalBuilder.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a local variable within a method or constructor.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection.Emit/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Emit.LocalBuilder\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.LocalBuilder.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.LocalBuilder.yml","open_to_public_contributors":true,"api_name":["System.Reflection.Emit.LocalBuilder","System.Reflection.Emit.LocalBuilder.IsPinned","System.Reflection.Emit.LocalBuilder.LocalIndex","System.Reflection.Emit.LocalBuilder.LocalType","System.Reflection.Emit.LocalBuilder.SetLocalSymInfo","System.Reflection.Emit.LocalBuilder._LocalBuilder.GetIDsOfNames","System.Reflection.Emit.LocalBuilder._LocalBuilder.GetTypeInfo","System.Reflection.Emit.LocalBuilder._LocalBuilder.GetTypeInfoCount","System.Reflection.Emit.LocalBuilder._LocalBuilder.Invoke"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Reflection.Emit.LocalBuilder","System::Reflection::Emit::LocalBuilder","System.Reflection.Emit.LocalBuilder.IsPinned","System::Reflection::Emit::LocalBuilder::IsPinned","System.Reflection.Emit.LocalBuilder.LocalIndex","System::Reflection::Emit::LocalBuilder::LocalIndex","System.Reflection.Emit.LocalBuilder.LocalType","System::Reflection::Emit::LocalBuilder::LocalType","System.Reflection.Emit.LocalBuilder.SetLocalSymInfo","System::Reflection::Emit::LocalBuilder::SetLocalSymInfo","System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetIDsOfNames","System::Reflection::Emit::LocalBuilder::System#Runtime#InteropServices#_LocalBuilder#GetIDsOfNames","System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfo","System::Reflection::Emit::LocalBuilder::System#Runtime#InteropServices#_LocalBuilder#GetTypeInfo","System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfoCount","System::Reflection::Emit::LocalBuilder::System#Runtime#InteropServices#_LocalBuilder#GetTypeInfoCount","System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#Invoke","System::Reflection::Emit::LocalBuilder::System#Runtime#InteropServices#_LocalBuilder#Invoke"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f2d2b20b-3a86-e3fa-07bf-47d2ebd89fbd","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Reflection.Emit\\LocalBuilder.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Reflection.Emit/LocalBuilder.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LocalBuilder class | Microsoft Docs","_op_ogTitle":"LocalBuilder class","description":"Represents a local variable within a method or constructor.\n","toc_asset_id":"_splitted/System.Reflection.Emit/toc.json","toc_rel":"_splitted/System.Reflection.Emit/toc.json","source_url":"","ms.assetid":"System.Reflection.Emit.LocalBuilder","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.localbuilder","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit.localbuilder","fileRelativePath":"System.Reflection.Emit.LocalBuilder.html"},"themesRelativePathToOutputRoot":"_themes/"}