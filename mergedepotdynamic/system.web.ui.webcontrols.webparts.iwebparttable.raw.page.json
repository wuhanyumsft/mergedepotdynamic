{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_WebParts_IWebPartTable\">\r\n      <span class=\"lang-csharp\">IWebPartTable</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines a provider interface for connecting two server controls using an entire table of data.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IWebPartTable</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This interface is designed to be used with Web Parts connections. In a Web Parts connection, two server controls that reside in a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartzonebase\" data-linktype=\"relative-path\">WebPartZoneBase</a> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider. The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method. To establish a connection, the consumer and provider must both work with the same interface type for sharing data. If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webparttransformer\" data-linktype=\"relative-path\">WebPartTransformer</a> object) that translates the interface instance sent by the provider into a type that the consumer recognizes. For details on connections, see <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpartconnection\" data-linktype=\"relative-path\">WebPartConnection</a> and <a href=\"../Topic/Web%20Parts%20Connections%20Overview.md\" data-linktype=\"relative-path\">Web Parts Connections Overview</a>.  </p>\n<p> The IWebPartTable interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data table. You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common field (for details, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebpartfield\" data-linktype=\"relative-path\">IWebPartField</a> interface), row (for details, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebpartrow\" data-linktype=\"relative-path\">IWebPartRow</a> interface), or table from the data source. In a typical connection, a <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> control acting as a provider would implement the IWebPartTable interface and provide an instance of the interface to consumers in a special callback method. For example, the provider might implement an IWebPartTable interface for a table that contains financial performance data. Another <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> control acting as a consumer would define a special method to receive the interface instance, and could then extract the data and render a chart to display the resulting information.  </p>\n<p> The IWebPartTable interface has two exposed members. The <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebparttable#System_Web_UI_WebControls_WebParts_IWebPartTable_Schema_\" data-linktype=\"relative-path\">Schema</a> property returns schema information about the data table encapsulated in a <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> object. The <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebparttable#System_Web_UI_WebControls_WebParts_IWebPartTable_GetTableData_\" data-linktype=\"relative-path\">GetTableData</a> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance&#39;s table data when the callback method is invoked.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_WebParts_IWebPartTable_Schema\" data-linktype=\"self-bookmark\">Schema</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the schema information for a data table that is used to share data between two <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> controls.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_WebParts_IWebPartTable_GetTableData_System_Web_UI_WebControls_WebParts_TableCallback_\" data-linktype=\"self-bookmark\">GetTableData(TableCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the data for the table that is being used by the interface as the basis of a connection between two <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> controls.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_WebParts_IWebPartTable_Schema\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_WebParts_IWebPartTable_Schema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Schema</div>        \r\n          </div>\r\n    \r\n            <p>Gets the schema information for a data table that is used to share data between two <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.ComponentModel.PropertyDescriptorCollection Schema { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.propertydescriptorcollection\" data-linktype=\"relative-path\">PropertyDescriptorCollection</a> describing the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property provides property information on the data in an <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebparttable\" data-linktype=\"relative-path\">IWebPartTable</a> instance. There is an implicit contract between the schema referenced by the Schema property and the data in the table. The contract is that for each <a class=\"xref\" href=\"system.componentmodel.propertydescriptor\" data-linktype=\"relative-path\">PropertyDescriptor</a> object in the Schema property, you can call <a class=\"xref\" href=\"system.componentmodel.propertydescriptor#System_ComponentModel_PropertyDescriptor_GetValue_\" data-linktype=\"relative-path\">GetValue</a> on an element of the table data to get the value in a column or a row of the table.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebparttable\" data-linktype=\"relative-path\">IWebPartTable</a> interface. The provider control implements the Schema property. Then the consumer control, in its <code>RenderContents</code> method, queries the Schema property to retrieve information about the table as it writes the table data to the page.  </p>\n<pre><code class=\"lang-cs\" name=\"WebParts_IWebPartTable_Overview#2\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Reflection;\nusing System.Security.Permissions;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\n\nnamespace Samples.AspNet.CS.Controls\n{\n  // This sample code creates a Web Parts control that acts as a provider \n  // of table data.\n  [AspNetHostingPermission(SecurityAction.Demand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n\tpublic sealed class TableProviderWebPart : WebPart, IWebPartTable\n\t{\n\t\tDataTable _table;\n\n\t\tpublic TableProviderWebPart()\n\t\t{\n\t\t\t_table = new DataTable();\n\n\t\t\tDataColumn col = new DataColumn();\n\t\t\tcol.DataType = typeof(string);\n\t\t\tcol.ColumnName = &quot;Name&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tcol = new DataColumn();\n\t\t\tcol.DataType = typeof(string);\n\t\t\tcol.ColumnName = &quot;Address&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tcol = new DataColumn();\n\t\t\tcol.DataType = typeof(int);\n\t\t\tcol.ColumnName = &quot;ZIP Code&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tDataRow row = _table.NewRow();\n\t\t\trow[&quot;Name&quot;] = &quot;John Q. Public&quot;;\n\t\t\trow[&quot;Address&quot;] = &quot;123 Main Street&quot;;\n\t\t\trow[&quot;ZIP Code&quot;] = 98000;\n\t\t\t_table.Rows.Add(row);\n\t\t}\n\n\t\tpublic PropertyDescriptorCollection Schema\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn TypeDescriptor.GetProperties(_table.DefaultView[0]);\n\t\t\t}\n\t\t}\n\n\t\tpublic void GetTableData(TableCallback callback)\n\t\t{\n\t\t\t\tcallback(_table.Rows);\n\t\t}\n\n\t\tpublic bool ConnectionPointEnabled\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\tobject o = ViewState[&quot;ConnectionPointEnabled&quot;];\n\t\t\t\treturn (o != null) ? (bool)o : true;\n\t\t\t}\n\t\t\tset\n\t\t\t{\n\t\t\t\tViewState[&quot;ConnectionPointEnabled&quot;] = value;\n\t\t\t}\n\t\t}\n\n\t\t[ConnectionProvider(&quot;Table&quot;, typeof(TableProviderConnectionPoint), \n      AllowsMultipleConnections = true)]\n\t\tpublic IWebPartTable GetConnectionInterface()\n\t\t{\n\t\t\treturn new TableProviderWebPart();\n\t\t}\n\n\t\tpublic class TableProviderConnectionPoint : ProviderConnectionPoint\n\t\t{\n\t\t\tpublic TableProviderConnectionPoint(MethodInfo callbackMethod, \n        Type interfaceType, Type controlType, string name, string id, \n        bool allowsMultipleConnections) \n        : base(callbackMethod, interfaceType, controlType, name, id, \n          allowsMultipleConnections)\n\t\t\t{\n\t\t\t}\n\n\t\t\tpublic override bool GetEnabled(Control control)\n\t\t\t{\n\t\t\t\treturn ((TableProviderWebPart)control).ConnectionPointEnabled;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n  // This code sample creates a Web Parts control that acts as a consumer \n  // of information provided by the TableProvider.ascx control.\n  [AspNetHostingPermission(SecurityAction.Demand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  public class TableConsumer : WebPart\n  {\n    private IWebPartTable _provider;\n    private ICollection _tableData;\n\n    private void GetTableData(object tableData)\n    {\n      _tableData = (ICollection)tableData;\n    }\n\n    protected override void OnPreRender(EventArgs e)\n    {\n      if (_provider != null)\n      {\n        _provider.GetTableData(new TableCallback(GetTableData));\n      }\n    }\n\n    protected override void RenderContents(HtmlTextWriter writer)\n    {\n      if (_provider != null)\n      {\n        PropertyDescriptorCollection props = _provider.Schema;\n        int count = 0;\n        if (props != null &amp;&amp; props.Count &gt; 0 &amp;&amp; _tableData != null)\n        {\n          foreach (PropertyDescriptor prop in props)\n          {\n            foreach (DataRow o in _tableData)\n            {\n              writer.Write(prop.DisplayName + &quot;: &quot; + o[count]);\n            }\n            writer.WriteBreak();\n            writer.WriteLine();\n            count = count + 1;\n          }\n        }\n        else\n        {\n          writer.Write(&quot;No data&quot;);\n        }\n      }\n      else\n      {\n        writer.Write(&quot;Not connected&quot;);\n      }\n    }\n\n    [ConnectionConsumer(&quot;Table&quot;)]\n    public void SetConnectionInterface(IWebPartTable provider)\n    {\n      _provider = provider;\n    }\n\n    public class TableConsumerConnectionPoint : ConsumerConnectionPoint\n    {\n      public TableConsumerConnectionPoint(MethodInfo callbackMethod,\n        Type interfaceType, Type controlType, string name, string id,\n        bool allowsMultipleConnections)\n        : base(callbackMethod, interfaceType, controlType, name, id,\n        allowsMultipleConnections)\n      {\n      }\n\n    } // TableConsumerConnectionPoint\n\n  } // TableConsumer\n\n} // Samples.AspNet.CS.Controls\n</code></pre><pre><code class=\"lang-vb\" name=\"WebParts_IWebPartTable_Overview#2\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.Data\nImports System.Reflection\nImports System.Security.Permissions\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Web.UI.WebControls.WebParts\n\nNamespace Samples.AspNet.VB.Controls\n\n  &#39; This sample code creates a Web Parts control that acts as a provider \n  &#39; of table data.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public NotInheritable Class TableProviderWebPart\n    Inherits WebPart\n    Implements IWebPartTable\n    Private _table As DataTable\n\n\n    Public Sub New()\n      _table = New DataTable()\n\n      Dim col As New DataColumn()\n      col.DataType = GetType(String)\n      col.ColumnName = &quot;Name&quot;\n      _table.Columns.Add(col)\n\n      col = New DataColumn()\n      col.DataType = GetType(String)\n      col.ColumnName = &quot;Address&quot;\n      _table.Columns.Add(col)\n\n      col = New DataColumn()\n      col.DataType = GetType(Integer)\n      col.ColumnName = &quot;ZIP Code&quot;\n      _table.Columns.Add(col)\n\n      Dim row As DataRow = _table.NewRow()\n      row(&quot;Name&quot;) = &quot;John Q. Public&quot;\n      row(&quot;Address&quot;) = &quot;123 Main Street&quot;\n      row(&quot;ZIP Code&quot;) = 98000\n      _table.Rows.Add(row)\n\n    End Sub\n\n\n    Public ReadOnly Property Schema() As _\n      ComponentModel.PropertyDescriptorCollection Implements IWebPartTable.Schema\n\n      Get\n        Return TypeDescriptor.GetProperties(_table.DefaultView(0))\n      End Get\n\n    End Property\n\n\n    Public Sub GetTableData(ByVal callback As TableCallback) _\n      Implements IWebPartTable.GetTableData\n\n      callback(_table.Rows)\n\n    End Sub\n\n\n    Public Property ConnectionPointEnabled() As Boolean\n      Get\n        Dim o As Object = ViewState(&quot;ConnectionPointEnabled&quot;)\n        Return IIf(Not (o Is Nothing), CBool(o), True)\n      End Get\n      Set(ByVal value As Boolean)\n        ViewState(&quot;ConnectionPointEnabled&quot;) = value\n      End Set\n    End Property\n\n\n    &lt;ConnectionProvider(&quot;Table&quot;, GetType(TableProviderConnectionPoint), _\n      AllowsMultipleConnections:=True)&gt; _\n    Public Function GetConnectionInterface() As IWebPartTable\n\n      Return New TableProviderWebPart()\n\n    End Function\n\n  End Class &#39;TableProviderWebPart\n\n  &#39; The connection point for the provider control.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class TableProviderConnectionPoint\n    Inherits ProviderConnectionPoint\n\n    Public Sub New(ByVal callbackMethod As MethodInfo, _\n      ByVal interfaceType As Type, ByVal controlType As Type, _\n      ByVal name As String, ByVal id As String, _\n      ByVal allowsMultipleConnections As Boolean)\n      MyBase.New(callbackMethod, interfaceType, controlType, _\n        name, id, allowsMultipleConnections)\n\n    End Sub\n\n\n    Public Overrides Function GetEnabled(ByVal control _\n      As Control) As Boolean\n\n      Return CType(control, TableProviderWebPart).ConnectionPointEnabled\n\n    End Function\n  End Class\n\n\n  &#39; This code sample creates a Web Parts control that acts as a consumer \n  &#39; of information provided by the TableProvider.ascx control.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class TableConsumer\n    Inherits WebPart\n    Private _provider As IWebPartTable\n    Private _tableData As ICollection\n\n\n    Private Sub GetTableData(ByVal tableData As ICollection)\n      _tableData = CType(tableData, ICollection)\n\n    End Sub\n\n\n    Protected Overrides Sub OnPreRender(ByVal e As EventArgs)\n      If Not (_provider Is Nothing) Then\n        _provider.GetTableData(New TableCallback(AddressOf GetTableData))\n      End If\n\n    End Sub\n\n\n    Protected Overrides Sub RenderContents(ByVal writer As HtmlTextWriter)\n      If Not (_provider Is Nothing) Then\n        Dim props As PropertyDescriptorCollection = _provider.Schema\n        Dim count As Integer = 0\n        If Not (props Is Nothing) AndAlso props.Count &gt; 0 _\n          AndAlso Not (_tableData Is Nothing) Then\n\n          Dim prop As PropertyDescriptor\n          For Each prop In props\n            Dim o As DataRow\n            For Each o In _tableData\n              writer.Write(prop.DisplayName &amp; &quot;: &quot; &amp; o(count))\n            Next o\n            writer.WriteBreak()\n            writer.WriteLine()\n            count = count + 1\n          Next prop\n        Else\n          writer.Write(&quot;No data&quot;)\n        End If\n      Else\n        writer.Write(&quot;Not connected&quot;)\n      End If\n\n    End Sub\n\n\n    &lt;ConnectionConsumer(&quot;Table&quot;)&gt; _\n    Public Sub SetConnectionInterface(ByVal provider As IWebPartTable)\n      _provider = provider\n\n    End Sub\n\n  End Class &#39;TableConsumer\n\n  &#39; The connection point for the consumer control.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class TableConsumerConnectionPoint\n    Inherits ConsumerConnectionPoint\n\n    Public Sub New(ByVal callbackMethod As MethodInfo, _\n      ByVal interfaceType As Type, ByVal controlType As Type, _\n      ByVal name As String, ByVal id As String, _\n      ByVal allowsMultipleConnections As Boolean)\n      MyBase.New(callbackMethod, interfaceType, controlType, name, _\n        id, allowsMultipleConnections)\n\n    End Sub\n  End Class &#39;TableConsumerConnectionPoint\n\nEnd Namespace  &#39; Samples.AspNet.CS.Controls\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_WebParts_IWebPartTable_GetTableData_System_Web_UI_WebControls_WebParts_TableCallback_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_WebParts_IWebPartTable_GetTableData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTableData(TableCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the data for the table that is being used by the interface as the basis of a connection between two <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.webpart\" data-linktype=\"relative-path\">WebPart</a> controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.tablecallback\" data-linktype=\"relative-path\">TableCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.tablecallback\" data-linktype=\"relative-path\">TableCallback</a> delegate that contains the address of a method that receives the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to retrieve the data table values passed by the interface. The provider implements this method, and the consumer invokes it at the point when the consumer is ready to process or render data.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the implementation and use of the GetTableData method. The complete example is shown in the class overview for the <a class=\"xref\" href=\"system.web.ui.webcontrols.webparts.iwebparttable\" data-linktype=\"relative-path\">IWebPartTable</a> interface. The provider control implements the GetTableData method, returning the data in the specified table. The consumer control calls the GetTableData method in its <code>OnPreRender</code> method, so that the value of the data can be written to the page.  </p>\n<pre><code class=\"lang-cs\" name=\"WebParts_IWebPartTable_Overview#2\">using System;\nusing System.Collections;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Reflection;\nusing System.Security.Permissions;\nusing System.Web;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\nusing System.Web.UI.WebControls.WebParts;\n\nnamespace Samples.AspNet.CS.Controls\n{\n  // This sample code creates a Web Parts control that acts as a provider \n  // of table data.\n  [AspNetHostingPermission(SecurityAction.Demand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n\tpublic sealed class TableProviderWebPart : WebPart, IWebPartTable\n\t{\n\t\tDataTable _table;\n\n\t\tpublic TableProviderWebPart()\n\t\t{\n\t\t\t_table = new DataTable();\n\n\t\t\tDataColumn col = new DataColumn();\n\t\t\tcol.DataType = typeof(string);\n\t\t\tcol.ColumnName = &quot;Name&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tcol = new DataColumn();\n\t\t\tcol.DataType = typeof(string);\n\t\t\tcol.ColumnName = &quot;Address&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tcol = new DataColumn();\n\t\t\tcol.DataType = typeof(int);\n\t\t\tcol.ColumnName = &quot;ZIP Code&quot;;\n\t\t\t_table.Columns.Add(col);\n\n\t\t\tDataRow row = _table.NewRow();\n\t\t\trow[&quot;Name&quot;] = &quot;John Q. Public&quot;;\n\t\t\trow[&quot;Address&quot;] = &quot;123 Main Street&quot;;\n\t\t\trow[&quot;ZIP Code&quot;] = 98000;\n\t\t\t_table.Rows.Add(row);\n\t\t}\n\n\t\tpublic PropertyDescriptorCollection Schema\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn TypeDescriptor.GetProperties(_table.DefaultView[0]);\n\t\t\t}\n\t\t}\n\n\t\tpublic void GetTableData(TableCallback callback)\n\t\t{\n\t\t\t\tcallback(_table.Rows);\n\t\t}\n\n\t\tpublic bool ConnectionPointEnabled\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\tobject o = ViewState[&quot;ConnectionPointEnabled&quot;];\n\t\t\t\treturn (o != null) ? (bool)o : true;\n\t\t\t}\n\t\t\tset\n\t\t\t{\n\t\t\t\tViewState[&quot;ConnectionPointEnabled&quot;] = value;\n\t\t\t}\n\t\t}\n\n\t\t[ConnectionProvider(&quot;Table&quot;, typeof(TableProviderConnectionPoint), \n      AllowsMultipleConnections = true)]\n\t\tpublic IWebPartTable GetConnectionInterface()\n\t\t{\n\t\t\treturn new TableProviderWebPart();\n\t\t}\n\n\t\tpublic class TableProviderConnectionPoint : ProviderConnectionPoint\n\t\t{\n\t\t\tpublic TableProviderConnectionPoint(MethodInfo callbackMethod, \n        Type interfaceType, Type controlType, string name, string id, \n        bool allowsMultipleConnections) \n        : base(callbackMethod, interfaceType, controlType, name, id, \n          allowsMultipleConnections)\n\t\t\t{\n\t\t\t}\n\n\t\t\tpublic override bool GetEnabled(Control control)\n\t\t\t{\n\t\t\t\treturn ((TableProviderWebPart)control).ConnectionPointEnabled;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n  // This code sample creates a Web Parts control that acts as a consumer \n  // of information provided by the TableProvider.ascx control.\n  [AspNetHostingPermission(SecurityAction.Demand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  [AspNetHostingPermission(SecurityAction.InheritanceDemand,\n    Level = AspNetHostingPermissionLevel.Minimal)]\n  public class TableConsumer : WebPart\n  {\n    private IWebPartTable _provider;\n    private ICollection _tableData;\n\n    private void GetTableData(object tableData)\n    {\n      _tableData = (ICollection)tableData;\n    }\n\n    protected override void OnPreRender(EventArgs e)\n    {\n      if (_provider != null)\n      {\n        _provider.GetTableData(new TableCallback(GetTableData));\n      }\n    }\n\n    protected override void RenderContents(HtmlTextWriter writer)\n    {\n      if (_provider != null)\n      {\n        PropertyDescriptorCollection props = _provider.Schema;\n        int count = 0;\n        if (props != null &amp;&amp; props.Count &gt; 0 &amp;&amp; _tableData != null)\n        {\n          foreach (PropertyDescriptor prop in props)\n          {\n            foreach (DataRow o in _tableData)\n            {\n              writer.Write(prop.DisplayName + &quot;: &quot; + o[count]);\n            }\n            writer.WriteBreak();\n            writer.WriteLine();\n            count = count + 1;\n          }\n        }\n        else\n        {\n          writer.Write(&quot;No data&quot;);\n        }\n      }\n      else\n      {\n        writer.Write(&quot;Not connected&quot;);\n      }\n    }\n\n    [ConnectionConsumer(&quot;Table&quot;)]\n    public void SetConnectionInterface(IWebPartTable provider)\n    {\n      _provider = provider;\n    }\n\n    public class TableConsumerConnectionPoint : ConsumerConnectionPoint\n    {\n      public TableConsumerConnectionPoint(MethodInfo callbackMethod,\n        Type interfaceType, Type controlType, string name, string id,\n        bool allowsMultipleConnections)\n        : base(callbackMethod, interfaceType, controlType, name, id,\n        allowsMultipleConnections)\n      {\n      }\n\n    } // TableConsumerConnectionPoint\n\n  } // TableConsumer\n\n} // Samples.AspNet.CS.Controls\n</code></pre><pre><code class=\"lang-vb\" name=\"WebParts_IWebPartTable_Overview#2\">Imports System\nImports System.Collections\nImports System.ComponentModel\nImports System.Data\nImports System.Reflection\nImports System.Security.Permissions\nImports System.Web\nImports System.Web.UI\nImports System.Web.UI.WebControls\nImports System.Web.UI.WebControls.WebParts\n\nNamespace Samples.AspNet.VB.Controls\n\n  &#39; This sample code creates a Web Parts control that acts as a provider \n  &#39; of table data.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public NotInheritable Class TableProviderWebPart\n    Inherits WebPart\n    Implements IWebPartTable\n    Private _table As DataTable\n\n\n    Public Sub New()\n      _table = New DataTable()\n\n      Dim col As New DataColumn()\n      col.DataType = GetType(String)\n      col.ColumnName = &quot;Name&quot;\n      _table.Columns.Add(col)\n\n      col = New DataColumn()\n      col.DataType = GetType(String)\n      col.ColumnName = &quot;Address&quot;\n      _table.Columns.Add(col)\n\n      col = New DataColumn()\n      col.DataType = GetType(Integer)\n      col.ColumnName = &quot;ZIP Code&quot;\n      _table.Columns.Add(col)\n\n      Dim row As DataRow = _table.NewRow()\n      row(&quot;Name&quot;) = &quot;John Q. Public&quot;\n      row(&quot;Address&quot;) = &quot;123 Main Street&quot;\n      row(&quot;ZIP Code&quot;) = 98000\n      _table.Rows.Add(row)\n\n    End Sub\n\n\n    Public ReadOnly Property Schema() As _\n      ComponentModel.PropertyDescriptorCollection Implements IWebPartTable.Schema\n\n      Get\n        Return TypeDescriptor.GetProperties(_table.DefaultView(0))\n      End Get\n\n    End Property\n\n\n    Public Sub GetTableData(ByVal callback As TableCallback) _\n      Implements IWebPartTable.GetTableData\n\n      callback(_table.Rows)\n\n    End Sub\n\n\n    Public Property ConnectionPointEnabled() As Boolean\n      Get\n        Dim o As Object = ViewState(&quot;ConnectionPointEnabled&quot;)\n        Return IIf(Not (o Is Nothing), CBool(o), True)\n      End Get\n      Set(ByVal value As Boolean)\n        ViewState(&quot;ConnectionPointEnabled&quot;) = value\n      End Set\n    End Property\n\n\n    &lt;ConnectionProvider(&quot;Table&quot;, GetType(TableProviderConnectionPoint), _\n      AllowsMultipleConnections:=True)&gt; _\n    Public Function GetConnectionInterface() As IWebPartTable\n\n      Return New TableProviderWebPart()\n\n    End Function\n\n  End Class &#39;TableProviderWebPart\n\n  &#39; The connection point for the provider control.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class TableProviderConnectionPoint\n    Inherits ProviderConnectionPoint\n\n    Public Sub New(ByVal callbackMethod As MethodInfo, _\n      ByVal interfaceType As Type, ByVal controlType As Type, _\n      ByVal name As String, ByVal id As String, _\n      ByVal allowsMultipleConnections As Boolean)\n      MyBase.New(callbackMethod, interfaceType, controlType, _\n        name, id, allowsMultipleConnections)\n\n    End Sub\n\n\n    Public Overrides Function GetEnabled(ByVal control _\n      As Control) As Boolean\n\n      Return CType(control, TableProviderWebPart).ConnectionPointEnabled\n\n    End Function\n  End Class\n\n\n  &#39; This code sample creates a Web Parts control that acts as a consumer \n  &#39; of information provided by the TableProvider.ascx control.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class TableConsumer\n    Inherits WebPart\n    Private _provider As IWebPartTable\n    Private _tableData As ICollection\n\n\n    Private Sub GetTableData(ByVal tableData As ICollection)\n      _tableData = CType(tableData, ICollection)\n\n    End Sub\n\n\n    Protected Overrides Sub OnPreRender(ByVal e As EventArgs)\n      If Not (_provider Is Nothing) Then\n        _provider.GetTableData(New TableCallback(AddressOf GetTableData))\n      End If\n\n    End Sub\n\n\n    Protected Overrides Sub RenderContents(ByVal writer As HtmlTextWriter)\n      If Not (_provider Is Nothing) Then\n        Dim props As PropertyDescriptorCollection = _provider.Schema\n        Dim count As Integer = 0\n        If Not (props Is Nothing) AndAlso props.Count &gt; 0 _\n          AndAlso Not (_tableData Is Nothing) Then\n\n          Dim prop As PropertyDescriptor\n          For Each prop In props\n            Dim o As DataRow\n            For Each o In _tableData\n              writer.Write(prop.DisplayName &amp; &quot;: &quot; &amp; o(count))\n            Next o\n            writer.WriteBreak()\n            writer.WriteLine()\n            count = count + 1\n          Next prop\n        Else\n          writer.Write(&quot;No data&quot;)\n        End If\n      Else\n        writer.Write(&quot;Not connected&quot;)\n      End If\n\n    End Sub\n\n\n    &lt;ConnectionConsumer(&quot;Table&quot;)&gt; _\n    Public Sub SetConnectionInterface(ByVal provider As IWebPartTable)\n      _provider = provider\n\n    End Sub\n\n  End Class &#39;TableConsumer\n\n  &#39; The connection point for the consumer control.\n  &lt;AspNetHostingPermission(SecurityAction.Demand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  &lt;AspNetHostingPermission(SecurityAction.InheritanceDemand, _\n    Level:=AspNetHostingPermissionLevel.Minimal)&gt; _\n  Public Class TableConsumerConnectionPoint\n    Inherits ConsumerConnectionPoint\n\n    Public Sub New(ByVal callbackMethod As MethodInfo, _\n      ByVal interfaceType As Type, ByVal controlType As Type, _\n      ByVal name As String, ByVal id As String, _\n      ByVal allowsMultipleConnections As Boolean)\n      MyBase.New(callbackMethod, interfaceType, controlType, name, _\n        id, allowsMultipleConnections)\n\n    End Sub\n  End Class &#39;TableConsumerConnectionPoint\n\nEnd Namespace  &#39; Samples.AspNet.CS.Controls\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.WebParts.IWebPartTable.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.WebParts.IWebPartTable.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.IWebPartTable\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.WebParts.IWebPartTable.Schema\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"42e142aa-52e3-1d5a-c7d4-9925f1a0d363\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines a provider interface for connecting two server controls using an entire table of data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls.WebParts/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.WebParts.IWebPartTable\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.WebParts.IWebPartTable.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.WebParts.IWebPartTable.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.WebParts.IWebPartTable","System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData","System.Web.UI.WebControls.WebParts.IWebPartTable.Schema"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.WebParts.IWebPartTable","System::Web::UI::WebControls::WebParts::IWebPartTable","System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData","System::Web::UI::WebControls::WebParts::IWebPartTable::GetTableData","System.Web.UI.WebControls.WebParts.IWebPartTable.Schema","System::Web::UI::WebControls::WebParts::IWebPartTable::Schema"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"42e142aa-52e3-1d5a-c7d4-9925f1a0d363","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls.WebParts/IWebPartTable.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IWebPartTable interface | Microsoft Docs","_op_ogTitle":"IWebPartTable interface","description":"Defines a provider interface for connecting two server controls using an entire table of data.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls.WebParts/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls.WebParts/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.WebParts.IWebPartTable","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.webparts.iwebparttable","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.webparts.iwebparttable","fileRelativePath":"System.Web.UI.WebControls.WebParts.IWebPartTable.html"},"themesRelativePathToOutputRoot":"_themes/"}