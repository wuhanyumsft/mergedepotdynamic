{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridViewCheckBoxColumn\">\r\n      <span class=\"lang-csharp\">DataGridViewCheckBoxColumn</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Hosts a collection of <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataGridViewCheckBoxColumn), &quot;DataGridViewCheckBoxColumn.bmp&quot;)]\npublic class DataGridViewCheckBoxColumn : System.Windows.Forms.DataGridViewColumn</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement\" data-linktype=\"relative-path\">DataGridViewElement</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband\" data-linktype=\"relative-path\">DataGridViewBand</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumn</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridViewCheckBoxColumn</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultHeaderCellType\" data-linktype=\"relative-path\">DefaultHeaderCellType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Displayed\" data-linktype=\"relative-path\">Displayed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_HasDefaultCellStyle\" data-linktype=\"relative-path\">HasDefaultCellStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_HeaderCellCore\" data-linktype=\"relative-path\">HeaderCellCore</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Index\" data-linktype=\"relative-path\">Index</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_IsRow\" data-linktype=\"relative-path\">IsRow</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_OnDataGridViewChanged\" data-linktype=\"relative-path\">OnDataGridViewChanged()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected\" data-linktype=\"relative-path\">Selected</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode\" data-linktype=\"relative-path\">AutoSizeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_CellType\" data-linktype=\"relative-path\">CellType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName\" data-linktype=\"relative-path\">DataPropertyName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DisplayIndex\" data-linktype=\"relative-path\">DisplayIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth\" data-linktype=\"relative-path\">DividerWidth</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_FillWeight\" data-linktype=\"relative-path\">FillWeight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Frozen\" data-linktype=\"relative-path\">Frozen</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_GetPreferredWidth_System_Windows_Forms_DataGridViewAutoSizeColumnMode_System_Boolean_\" data-linktype=\"relative-path\">GetPreferredWidth(DataGridViewAutoSizeColumnMode,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_HeaderCell\" data-linktype=\"relative-path\">HeaderCell</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_HeaderText\" data-linktype=\"relative-path\">HeaderText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedAutoSizeMode\" data-linktype=\"relative-path\">InheritedAutoSizeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedStyle\" data-linktype=\"relative-path\">InheritedStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_IsDataBound\" data-linktype=\"relative-path\">IsDataBound</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_MinimumWidth\" data-linktype=\"relative-path\">MinimumWidth</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ReadOnly\" data-linktype=\"relative-path\">ReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Resizable\" data-linktype=\"relative-path\">Resizable</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode\" data-linktype=\"relative-path\">SortMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ToolTipText\" data-linktype=\"relative-path\">ToolTipText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ValueType\" data-linktype=\"relative-path\">ValueType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_DataGridView\" data-linktype=\"relative-path\">DataGridView</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellClick(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentClick(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellContentDoubleClick(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"relative-path\">RaiseCellValueChanged(DataGridViewCellEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseDataError_System_Windows_Forms_DataGridViewDataErrorEventArgs_\" data-linktype=\"relative-path\">RaiseDataError(DataGridViewDataErrorEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_RaiseMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseWheel(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.datagridviewelement#System_Windows_Forms_DataGridViewElement_State\" data-linktype=\"relative-path\">State</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataGridViewCheckBoxColumn class is a specialized type of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> class used to logically host cells that indicate binary state. A DataGridViewCheckBoxColumn has an associated <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> in every <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> that intersects it. Each cell supplies a user interface (UI) that is similar to a <a class=\"xref\" href=\"system.windows.forms.checkbox\" data-linktype=\"relative-path\">CheckBox</a> control.  </p>\n<p> The default sort mode for this column type is <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>.  </p>\n<p> Typically, check box cell values are intended either for storage, like any other data, or for performing bulk operations. If you want to respond immediately when users click a check box cell, you can handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellContentClick</a> event, but this event occurs before the cell value is updated. If you need the new value at the time of the click, one option is to calculate what the expected value will be based on the current value. Another approach is to commit the change immediately, and handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellValueChanged</a> event to respond to it. To commit the change when the cell is clicked, you must handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged</a> event. In the handler, if the current cell is a check box cell, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method and pass in the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn__ctor\" data-linktype=\"self-bookmark\">DataGridViewCheckBoxColumn()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> class to the default state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn__ctor_System_Boolean_\" data-linktype=\"self-bookmark\">DataGridViewCheckBoxColumn(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> and configures it to display check boxes with two or three states.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate\" data-linktype=\"self-bookmark\">CellTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the template used to create new cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_DefaultCellStyle\" data-linktype=\"self-bookmark\">DefaultCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the column&#39;s default cell style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue\" data-linktype=\"self-bookmark\">FalseValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the underlying value corresponding to a cell value of <code>false</code>, which appears as an unchecked box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_FlatStyle\" data-linktype=\"self-bookmark\">FlatStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the flat style appearance of the check box cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue\" data-linktype=\"self-bookmark\">IndeterminateValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the underlying value corresponding to an indeterminate or <code>null</code> cell value, which appears as a disabled checkbox.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState\" data-linktype=\"self-bookmark\">ThreeState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the hosted check box cells will allow three check states rather than two.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue\" data-linktype=\"self-bookmark\">TrueValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the underlying value corresponding to a cell value of <code>true</code>, which appears as a checked box.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridViewCheckBoxColumn_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string that describes the column.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridViewCheckBoxColumn()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> class to the default state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridViewCheckBoxColumn ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Using this default constructor is equivalent to supplying an argument of <code>false</code> to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn__ctor_System_Boolean_\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn(Boolean)</a> constructor.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn__ctor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridViewCheckBoxColumn(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> and configures it to display check boxes with two or three states.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridViewCheckBoxColumn (bool threeState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>threeState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to display check boxes with three states; <code>false</code> to display check boxes with two states.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes the column by setting the following properties.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a></td>\n<td>A new <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> with its <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a> property initialized to the <code>threeState</code> parameter value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a></td>\n<td>The value of the <code>threeState</code> parameter.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumnSortMode</a></td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property.</td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcontentalignment\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewContentAlignment</a></td>\n</tr>\n<tr>\n<td>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property.</td>\n<td><a class=\"xref\" href=\"system.windows.forms.checkstate\" data-linktype=\"relative-path\">System.Windows.Forms.CheckState</a> if <code>threeState</code> is <code>true</code>; otherwise, <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the template used to create new cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.DataGridViewCell CellTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that all other cells in the column are modeled after. The default value is a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The property is set to a value that is not of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The constructors for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> class initialize this property to a newly created <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Changing the properties of the cell template will not immediately affect the user interface (UI) of the column&#39;s existing cells. These changes are only apparent after the column is regenerated (for example, by sorting the column or through a call to the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_InvalidateColumn_\" data-linktype=\"relative-path\">InvalidateColumn</a> method).</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> to mark which employees are out of the office. The cell template is used to apply the same color to all cells in the check box column. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> class overview topic.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20\">private:\n    void AddOutOfOfficeColumn()\n    {\n        DataGridViewCheckBoxColumn^ column = gcnew DataGridViewCheckBoxColumn();\n        {\n            column-&gt;HeaderText = ColumnName::OutOfOffice.ToString();\n            column-&gt;Name = ColumnName::OutOfOffice.ToString();\n            column-&gt;AutoSizeMode = \n                DataGridViewAutoSizeColumnMode::DisplayedCells;\n            column-&gt;FlatStyle = FlatStyle::Standard;\n            column-&gt;ThreeState = true;\n            column-&gt;CellTemplate = gcnew DataGridViewCheckBoxCell();\n            column-&gt;CellTemplate-&gt;Style-&gt;BackColor = Color::Beige;\n        }\n\n        DataGridView1-&gt;Columns-&gt;Insert(0, column);\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20\">    private void AddOutOfOfficeColumn()\n    {\n        DataGridViewCheckBoxColumn column = new DataGridViewCheckBoxColumn();\n        {\n            column.HeaderText = ColumnName.OutOfOffice.ToString();\n            column.Name = ColumnName.OutOfOffice.ToString();\n            column.AutoSizeMode = \n                DataGridViewAutoSizeColumnMode.DisplayedCells;\n            column.FlatStyle = FlatStyle.Standard;\n            column.ThreeState = true;\n            column.CellTemplate = new DataGridViewCheckBoxCell();\n            column.CellTemplate.Style.BackColor = Color.Beige;\n        }\n\n        DataGridView1.Columns.Insert(0, column);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20\">    Private Sub AddOutOfOfficeColumn()\n        Dim column As New DataGridViewCheckBoxColumn()\n        With column\n            .HeaderText = ColumnName.OutOfOffice.ToString()\n            .Name = ColumnName.OutOfOffice.ToString()\n            .AutoSizeMode = DataGridViewAutoSizeColumnMode.DisplayedCells\n            .FlatStyle = FlatStyle.Standard\n            .CellTemplate = New DataGridViewCheckBoxCell()\n            .CellTemplate.Style.BackColor = Color.Beige\n        End With\n\n        DataGridView1.Columns.Insert(0, column)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_DefaultCellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_DefaultCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the column&#39;s default cell style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to be applied as the default style.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by this property has the following initial property values:  </p>\n<table>\n<thead>\n<tr>\n<th><code>DataGridViewCellStyle</code> property</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Alignment_\" data-linktype=\"relative-path\">Alignment</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcontentalignment\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewContentAlignment</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.checkstate\" data-linktype=\"relative-path\">System.Windows.Forms.CheckState</a> if the initial <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a> property value is <code>true</code>; otherwise, <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> These values override the value specified in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, but may be overridden by other cell style properties. For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the object returned by the DefaultCellStyle property has a value of <code>false</code>, changing the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a> property value to <code>true</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to <a class=\"xref\" href=\"system.windows.forms.checkstate\" data-linktype=\"relative-path\">CheckState</a>. If <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> has a value of <a class=\"xref\" href=\"system.windows.forms.checkstate\" data-linktype=\"relative-path\">CheckState</a>, changing the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a> property value to <code>false</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewContentAlignment#1\">    private void ChangeColumnAlignment()\n    {\n        songsDataGridView.Columns[&quot;Title&quot;].DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomCenter;\n        songsDataGridView.Columns[&quot;Title&quot;].Name = DataGridViewContentAlignment.BottomCenter.ToString();\n\n        songsDataGridView.Columns[&quot;Artist&quot;].DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomLeft;\n        songsDataGridView.Columns[&quot;Artist&quot;].Name = DataGridViewContentAlignment.BottomLeft.ToString();\n\n        songsDataGridView.Columns[&quot;Album&quot;].DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomRight;\n        songsDataGridView.Columns[&quot;Album&quot;].Name = DataGridViewContentAlignment.BottomRight.ToString();\n\n        songsDataGridView.Columns[&quot;Release Date&quot;].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter;\n        songsDataGridView.Columns[&quot;Release Date&quot;].Name = DataGridViewContentAlignment.MiddleCenter.ToString();\n\n        songsDataGridView.Columns[&quot;Track&quot;].DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft;\n        songsDataGridView.Columns[&quot;Track&quot;].Name = DataGridViewContentAlignment.MiddleLeft.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewContentAlignment#1\">    Private Sub ChangeColumnAlignment()\n        songsDataGridView.Columns(&quot;Title&quot;).DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomCenter\n        songsDataGridView.Columns(&quot;Title&quot;).Name = DataGridViewContentAlignment.BottomCenter.ToString()\n\n        songsDataGridView.Columns(&quot;Artist&quot;).DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomLeft\n        songsDataGridView.Columns(&quot;Artist&quot;).Name = DataGridViewContentAlignment.BottomLeft.ToString()\n\n        songsDataGridView.Columns(&quot;Album&quot;).DefaultCellStyle.Alignment = DataGridViewContentAlignment.BottomRight\n        songsDataGridView.Columns(&quot;Album&quot;).Name = DataGridViewContentAlignment.BottomRight.ToString()\n\n        songsDataGridView.Columns(&quot;Release Date&quot;).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n        songsDataGridView.Columns(&quot;Release Date&quot;).Name = DataGridViewContentAlignment.MiddleCenter.ToString()\n\n        songsDataGridView.Columns(&quot;Track&quot;).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft\n        songsDataGridView.Columns(&quot;Track&quot;).Name = DataGridViewContentAlignment.MiddleLeft.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FalseValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the underlying value corresponding to a cell value of <code>false</code>, which appears as an unchecked box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object FalseValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing a value that the cells in this column will treat as a <code>false</code> value. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FalseValue, <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> properties determine the associated values of these states as they occur in the underlying data source.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a> property of the cell object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> to track the status of office lighting. The FalseValue property associates &quot;turnedOff&quot; with <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a> property associates &quot;turnedOn&quot; with <code>true</code>, and the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> property associates &quot;unknown&quot; to indeterminate.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Collections::Generic;\nusing namespace System::Windows::Forms;\n\npublic enum class LightStatus\n{\n    Unknown,\n    TurnedOn,\n    TurnedOff\n};\n\npublic ref class TriValueVirtualCheckBox: public Form\n{\nprivate:\n    DataGridView^ dataGridView1;\n\nprivate:\n    const int initialSize;\n\nprivate:\n    Dictionary&lt;int, LightStatus&gt;^ store;\n\npublic:\n    TriValueVirtualCheckBox() :  Form(), initialSize(500)\n    {\n        dataGridView1 = gcnew DataGridView();\n        store = gcnew Dictionary&lt;int, LightStatus&gt;();\n        Text = this-&gt;GetType()-&gt;Name;\n\n        for(int i = 0; i &lt; initialSize; i++)\n        {\n            store-&gt;Add(i, LightStatus::Unknown);\n        }\n\n        Controls-&gt;Add(dataGridView1);\n        dataGridView1-&gt;VirtualMode = true;\n        dataGridView1-&gt;AllowUserToDeleteRows = false;\n        dataGridView1-&gt;CellValueNeeded += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValueNeeded);\n        dataGridView1-&gt;CellValuePushed += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValuePushed);\n\n        dataGridView1-&gt;Columns-&gt;Add(CreateCheckBoxColumn());\n        dataGridView1-&gt;Rows-&gt;AddCopies(0, initialSize);\n    }\n\nprivate:\n    DataGridViewCheckBoxColumn^ CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn^ dataGridViewCheckBoxColumn1\n            = gcnew DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1-&gt;HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1-&gt;TrueValue = LightStatus::TurnedOn;\n        dataGridViewCheckBoxColumn1-&gt;FalseValue =\n            LightStatus::TurnedOff;\n        dataGridViewCheckBoxColumn1-&gt;IndeterminateValue\n            = LightStatus::Unknown;\n        dataGridViewCheckBoxColumn1-&gt;ThreeState = true;\n        dataGridViewCheckBoxColumn1-&gt;ValueType = LightStatus::typeid;\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#pragma region &quot;data store maintance&quot;\nprivate:\n    void dataGridView1_CellValueNeeded(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        e-&gt;Value = store[e-&gt;RowIndex];\n    }\n\nprivate:\n    void dataGridView1_CellValuePushed(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        store[e-&gt;RowIndex] = (LightStatus) e-&gt;Value;\n    }\n#pragma endregion\n\n};\n\n[STAThread]\nint main()\n{\n    Application::Run(gcnew TriValueVirtualCheckBox());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">Imports System.IO\nImports System.Collections.Generic\nImports System.Windows.Forms\n\nPublic Class TriValueVirtualCheckBox\n    Inherits System.Windows.Forms.Form\n\n    Dim WithEvents dataGridView1 As New DataGridView\n\n    Const initialSize As Integer = 500\n\n    Dim store As New Dictionary(Of Integer, LightStatus)\n\n    Public Sub New()\n        MyBase.New()\n        Text = Me.GetType().Name\n\n        Dim index As Integer = 0\n        For index = 0 To initialSize\n            store.Add(index, LightStatus.Unknown)\n        Next\n\n        Controls.Add(dataGridView1)\n        dataGridView1.VirtualMode = True\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.Columns.Add(CreateCheckBoxColumn())\n        dataGridView1.Rows.AddCopies(0, initialSize)\n    End Sub\n\n    Private Function CreateCheckBoxColumn() As DataGridViewCheckBoxColumn\n        Dim dataGridViewCheckBoxColumn1 _\n            As New DataGridViewCheckBoxColumn()\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff\n        dataGridViewCheckBoxColumn1.IndeterminateValue = _\n            LightStatus.Unknown\n        dataGridViewCheckBoxColumn1.ThreeState = True\n        dataGridViewCheckBoxColumn1.ValueType = GetType(LightStatus)\n        Return dataGridViewCheckBoxColumn1\n    End Function\n\n#Region &quot;data store maintance&quot;\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        e.Value = store(e.RowIndex)\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Item(e.RowIndex) = CType(e.Value, LightStatus)\n    End Sub\n#End Region\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New TriValueVirtualCheckBox())\n    End Sub\nEnd Class\n\nPublic Enum LightStatus\n    Unknown\n    TurnedOn\n    TurnedOff\nEnd Enum\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class TriValueVirtualCheckBox:Form\n{\n    DataGridView dataGridView1 = new DataGridView();\n\n    const int initialSize = 500;\n\n    Dictionary&lt;int, LightStatus&gt; store \n        = new Dictionary&lt;int, LightStatus&gt;();\n\n    public TriValueVirtualCheckBox() : base()\n    {        \n        Text = this.GetType().Name;\n\n        int index = 0;\n        for(index=0; index&lt;=initialSize; index++)\n            store.Add(index, LightStatus.Unknown);\n\n        Controls.Add(dataGridView1);\n        dataGridView1.VirtualMode = true;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.CellValueNeeded += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValueNeeded);\n        dataGridView1.CellValuePushed += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValuePushed);\n\n        dataGridView1.Columns.Add(CreateCheckBoxColumn());\n        dataGridView1.Rows.AddCopies(0, initialSize);\n    }\n\n    private DataGridViewCheckBoxColumn CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn dataGridViewCheckBoxColumn1 \n            = new DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn;\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff;\n        dataGridViewCheckBoxColumn1.IndeterminateValue \n            = LightStatus.Unknown;\n        dataGridViewCheckBoxColumn1.ThreeState = true;\n        dataGridViewCheckBoxColumn1.ValueType = typeof(LightStatus);\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#region &quot;data store maintance&quot;\n    private void dataGridView1_CellValueNeeded(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        e.Value = store[e.RowIndex];\n    }\n\n    private void dataGridView1_CellValuePushed(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        store[e.RowIndex] = (LightStatus) e.Value;\n    }\n#endregion\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new TriValueVirtualCheckBox());\n    }\n}\n\npublic enum LightStatus\n{\n    Unknown, \n    TurnedOn, \n    TurnedOff\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_FlatStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_FlatStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlatStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the flat style appearance of the check box cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.FlatStyle FlatStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a> value indicating the appearance of cells in the column. The default is <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To display the check box cells using visual styles, set this property to <a class=\"xref\" href=\"system.windows.forms.flatstyle\" data-linktype=\"relative-path\">FlatStyle</a> and call the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method before <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Run_\" data-linktype=\"relative-path\">Run</a>.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_FlatStyle_\" data-linktype=\"relative-path\">FlatStyle</a> property of the cell object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_FlatStyle_\" data-linktype=\"relative-path\">FlatStyle</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> to mark which employees are out of the office. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> class overview topic.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20\">private:\n    void AddOutOfOfficeColumn()\n    {\n        DataGridViewCheckBoxColumn^ column = gcnew DataGridViewCheckBoxColumn();\n        {\n            column-&gt;HeaderText = ColumnName::OutOfOffice.ToString();\n            column-&gt;Name = ColumnName::OutOfOffice.ToString();\n            column-&gt;AutoSizeMode = \n                DataGridViewAutoSizeColumnMode::DisplayedCells;\n            column-&gt;FlatStyle = FlatStyle::Standard;\n            column-&gt;ThreeState = true;\n            column-&gt;CellTemplate = gcnew DataGridViewCheckBoxCell();\n            column-&gt;CellTemplate-&gt;Style-&gt;BackColor = Color::Beige;\n        }\n\n        DataGridView1-&gt;Columns-&gt;Insert(0, column);\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20\">    private void AddOutOfOfficeColumn()\n    {\n        DataGridViewCheckBoxColumn column = new DataGridViewCheckBoxColumn();\n        {\n            column.HeaderText = ColumnName.OutOfOffice.ToString();\n            column.Name = ColumnName.OutOfOffice.ToString();\n            column.AutoSizeMode = \n                DataGridViewAutoSizeColumnMode.DisplayedCells;\n            column.FlatStyle = FlatStyle.Standard;\n            column.ThreeState = true;\n            column.CellTemplate = new DataGridViewCheckBoxCell();\n            column.CellTemplate.Style.BackColor = Color.Beige;\n        }\n\n        DataGridView1.Columns.Insert(0, column);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#20\">    Private Sub AddOutOfOfficeColumn()\n        Dim column As New DataGridViewCheckBoxColumn()\n        With column\n            .HeaderText = ColumnName.OutOfOffice.ToString()\n            .Name = ColumnName.OutOfOffice.ToString()\n            .AutoSizeMode = DataGridViewAutoSizeColumnMode.DisplayedCells\n            .FlatStyle = FlatStyle.Standard\n            .CellTemplate = New DataGridViewCheckBoxCell()\n            .CellTemplate.Style.BackColor = Color.Beige\n        End With\n\n        DataGridView1.Columns.Insert(0, column)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndeterminateValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the underlying value corresponding to an indeterminate or <code>null</code> cell value, which appears as a disabled checkbox.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object IndeterminateValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing a value that the cells in this column will treat as an indeterminate value. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a>, and IndeterminateValue properties determine the associated values of these states as they occur in the underlying data source.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> property of the cell object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> to track the status of office lighting. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a> property associates &quot;turnedOff&quot; with <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a> property associates &quot;turnedOn&quot; with <code>true</code>, and the IndeterminateValue property associates &quot;unknown&quot; to indeterminate.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Collections::Generic;\nusing namespace System::Windows::Forms;\n\npublic enum class LightStatus\n{\n    Unknown,\n    TurnedOn,\n    TurnedOff\n};\n\npublic ref class TriValueVirtualCheckBox: public Form\n{\nprivate:\n    DataGridView^ dataGridView1;\n\nprivate:\n    const int initialSize;\n\nprivate:\n    Dictionary&lt;int, LightStatus&gt;^ store;\n\npublic:\n    TriValueVirtualCheckBox() :  Form(), initialSize(500)\n    {\n        dataGridView1 = gcnew DataGridView();\n        store = gcnew Dictionary&lt;int, LightStatus&gt;();\n        Text = this-&gt;GetType()-&gt;Name;\n\n        for(int i = 0; i &lt; initialSize; i++)\n        {\n            store-&gt;Add(i, LightStatus::Unknown);\n        }\n\n        Controls-&gt;Add(dataGridView1);\n        dataGridView1-&gt;VirtualMode = true;\n        dataGridView1-&gt;AllowUserToDeleteRows = false;\n        dataGridView1-&gt;CellValueNeeded += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValueNeeded);\n        dataGridView1-&gt;CellValuePushed += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValuePushed);\n\n        dataGridView1-&gt;Columns-&gt;Add(CreateCheckBoxColumn());\n        dataGridView1-&gt;Rows-&gt;AddCopies(0, initialSize);\n    }\n\nprivate:\n    DataGridViewCheckBoxColumn^ CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn^ dataGridViewCheckBoxColumn1\n            = gcnew DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1-&gt;HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1-&gt;TrueValue = LightStatus::TurnedOn;\n        dataGridViewCheckBoxColumn1-&gt;FalseValue =\n            LightStatus::TurnedOff;\n        dataGridViewCheckBoxColumn1-&gt;IndeterminateValue\n            = LightStatus::Unknown;\n        dataGridViewCheckBoxColumn1-&gt;ThreeState = true;\n        dataGridViewCheckBoxColumn1-&gt;ValueType = LightStatus::typeid;\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#pragma region &quot;data store maintance&quot;\nprivate:\n    void dataGridView1_CellValueNeeded(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        e-&gt;Value = store[e-&gt;RowIndex];\n    }\n\nprivate:\n    void dataGridView1_CellValuePushed(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        store[e-&gt;RowIndex] = (LightStatus) e-&gt;Value;\n    }\n#pragma endregion\n\n};\n\n[STAThread]\nint main()\n{\n    Application::Run(gcnew TriValueVirtualCheckBox());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">Imports System.IO\nImports System.Collections.Generic\nImports System.Windows.Forms\n\nPublic Class TriValueVirtualCheckBox\n    Inherits System.Windows.Forms.Form\n\n    Dim WithEvents dataGridView1 As New DataGridView\n\n    Const initialSize As Integer = 500\n\n    Dim store As New Dictionary(Of Integer, LightStatus)\n\n    Public Sub New()\n        MyBase.New()\n        Text = Me.GetType().Name\n\n        Dim index As Integer = 0\n        For index = 0 To initialSize\n            store.Add(index, LightStatus.Unknown)\n        Next\n\n        Controls.Add(dataGridView1)\n        dataGridView1.VirtualMode = True\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.Columns.Add(CreateCheckBoxColumn())\n        dataGridView1.Rows.AddCopies(0, initialSize)\n    End Sub\n\n    Private Function CreateCheckBoxColumn() As DataGridViewCheckBoxColumn\n        Dim dataGridViewCheckBoxColumn1 _\n            As New DataGridViewCheckBoxColumn()\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff\n        dataGridViewCheckBoxColumn1.IndeterminateValue = _\n            LightStatus.Unknown\n        dataGridViewCheckBoxColumn1.ThreeState = True\n        dataGridViewCheckBoxColumn1.ValueType = GetType(LightStatus)\n        Return dataGridViewCheckBoxColumn1\n    End Function\n\n#Region &quot;data store maintance&quot;\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        e.Value = store(e.RowIndex)\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Item(e.RowIndex) = CType(e.Value, LightStatus)\n    End Sub\n#End Region\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New TriValueVirtualCheckBox())\n    End Sub\nEnd Class\n\nPublic Enum LightStatus\n    Unknown\n    TurnedOn\n    TurnedOff\nEnd Enum\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class TriValueVirtualCheckBox:Form\n{\n    DataGridView dataGridView1 = new DataGridView();\n\n    const int initialSize = 500;\n\n    Dictionary&lt;int, LightStatus&gt; store \n        = new Dictionary&lt;int, LightStatus&gt;();\n\n    public TriValueVirtualCheckBox() : base()\n    {        \n        Text = this.GetType().Name;\n\n        int index = 0;\n        for(index=0; index&lt;=initialSize; index++)\n            store.Add(index, LightStatus.Unknown);\n\n        Controls.Add(dataGridView1);\n        dataGridView1.VirtualMode = true;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.CellValueNeeded += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValueNeeded);\n        dataGridView1.CellValuePushed += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValuePushed);\n\n        dataGridView1.Columns.Add(CreateCheckBoxColumn());\n        dataGridView1.Rows.AddCopies(0, initialSize);\n    }\n\n    private DataGridViewCheckBoxColumn CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn dataGridViewCheckBoxColumn1 \n            = new DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn;\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff;\n        dataGridViewCheckBoxColumn1.IndeterminateValue \n            = LightStatus.Unknown;\n        dataGridViewCheckBoxColumn1.ThreeState = true;\n        dataGridViewCheckBoxColumn1.ValueType = typeof(LightStatus);\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#region &quot;data store maintance&quot;\n    private void dataGridView1_CellValueNeeded(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        e.Value = store[e.RowIndex];\n    }\n\n    private void dataGridView1_CellValuePushed(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        store[e.RowIndex] = (LightStatus) e.Value;\n    }\n#endregion\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new TriValueVirtualCheckBox());\n    }\n}\n\npublic enum LightStatus\n{\n    Unknown, \n    TurnedOn, \n    TurnedOff\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_ThreeState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ThreeState</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the hosted check box cells will allow three check states rather than two.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ThreeState { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the hosted <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> objects are able to have a third, indeterminate, state; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The indeterminate state can be useful, for example, when you do not want to set a default value in the check box.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a> property of the cell object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_ThreeState_\" data-linktype=\"relative-path\">ThreeState</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property has a value of <code>false</code>, changing the ThreeState property value to <code>true</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to <a class=\"xref\" href=\"system.windows.forms.checkstate\" data-linktype=\"relative-path\">CheckState</a>. If <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> has a value of <a class=\"xref\" href=\"system.windows.forms.checkstate\" data-linktype=\"relative-path\">CheckState</a>, changing the ThreeState property value to <code>false</code> automatically sets <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a> to <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> to track the status of office lighting. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a> property associates &quot;turnedOff&quot; with <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a> property associates &quot;turnedOn&quot; with <code>true</code>, and the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> property associates &quot;unknown&quot; to indeterminate.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Collections::Generic;\nusing namespace System::Windows::Forms;\n\npublic enum class LightStatus\n{\n    Unknown,\n    TurnedOn,\n    TurnedOff\n};\n\npublic ref class TriValueVirtualCheckBox: public Form\n{\nprivate:\n    DataGridView^ dataGridView1;\n\nprivate:\n    const int initialSize;\n\nprivate:\n    Dictionary&lt;int, LightStatus&gt;^ store;\n\npublic:\n    TriValueVirtualCheckBox() :  Form(), initialSize(500)\n    {\n        dataGridView1 = gcnew DataGridView();\n        store = gcnew Dictionary&lt;int, LightStatus&gt;();\n        Text = this-&gt;GetType()-&gt;Name;\n\n        for(int i = 0; i &lt; initialSize; i++)\n        {\n            store-&gt;Add(i, LightStatus::Unknown);\n        }\n\n        Controls-&gt;Add(dataGridView1);\n        dataGridView1-&gt;VirtualMode = true;\n        dataGridView1-&gt;AllowUserToDeleteRows = false;\n        dataGridView1-&gt;CellValueNeeded += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValueNeeded);\n        dataGridView1-&gt;CellValuePushed += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValuePushed);\n\n        dataGridView1-&gt;Columns-&gt;Add(CreateCheckBoxColumn());\n        dataGridView1-&gt;Rows-&gt;AddCopies(0, initialSize);\n    }\n\nprivate:\n    DataGridViewCheckBoxColumn^ CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn^ dataGridViewCheckBoxColumn1\n            = gcnew DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1-&gt;HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1-&gt;TrueValue = LightStatus::TurnedOn;\n        dataGridViewCheckBoxColumn1-&gt;FalseValue =\n            LightStatus::TurnedOff;\n        dataGridViewCheckBoxColumn1-&gt;IndeterminateValue\n            = LightStatus::Unknown;\n        dataGridViewCheckBoxColumn1-&gt;ThreeState = true;\n        dataGridViewCheckBoxColumn1-&gt;ValueType = LightStatus::typeid;\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#pragma region &quot;data store maintance&quot;\nprivate:\n    void dataGridView1_CellValueNeeded(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        e-&gt;Value = store[e-&gt;RowIndex];\n    }\n\nprivate:\n    void dataGridView1_CellValuePushed(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        store[e-&gt;RowIndex] = (LightStatus) e-&gt;Value;\n    }\n#pragma endregion\n\n};\n\n[STAThread]\nint main()\n{\n    Application::Run(gcnew TriValueVirtualCheckBox());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">Imports System.IO\nImports System.Collections.Generic\nImports System.Windows.Forms\n\nPublic Class TriValueVirtualCheckBox\n    Inherits System.Windows.Forms.Form\n\n    Dim WithEvents dataGridView1 As New DataGridView\n\n    Const initialSize As Integer = 500\n\n    Dim store As New Dictionary(Of Integer, LightStatus)\n\n    Public Sub New()\n        MyBase.New()\n        Text = Me.GetType().Name\n\n        Dim index As Integer = 0\n        For index = 0 To initialSize\n            store.Add(index, LightStatus.Unknown)\n        Next\n\n        Controls.Add(dataGridView1)\n        dataGridView1.VirtualMode = True\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.Columns.Add(CreateCheckBoxColumn())\n        dataGridView1.Rows.AddCopies(0, initialSize)\n    End Sub\n\n    Private Function CreateCheckBoxColumn() As DataGridViewCheckBoxColumn\n        Dim dataGridViewCheckBoxColumn1 _\n            As New DataGridViewCheckBoxColumn()\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff\n        dataGridViewCheckBoxColumn1.IndeterminateValue = _\n            LightStatus.Unknown\n        dataGridViewCheckBoxColumn1.ThreeState = True\n        dataGridViewCheckBoxColumn1.ValueType = GetType(LightStatus)\n        Return dataGridViewCheckBoxColumn1\n    End Function\n\n#Region &quot;data store maintance&quot;\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        e.Value = store(e.RowIndex)\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Item(e.RowIndex) = CType(e.Value, LightStatus)\n    End Sub\n#End Region\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New TriValueVirtualCheckBox())\n    End Sub\nEnd Class\n\nPublic Enum LightStatus\n    Unknown\n    TurnedOn\n    TurnedOff\nEnd Enum\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class TriValueVirtualCheckBox:Form\n{\n    DataGridView dataGridView1 = new DataGridView();\n\n    const int initialSize = 500;\n\n    Dictionary&lt;int, LightStatus&gt; store \n        = new Dictionary&lt;int, LightStatus&gt;();\n\n    public TriValueVirtualCheckBox() : base()\n    {        \n        Text = this.GetType().Name;\n\n        int index = 0;\n        for(index=0; index&lt;=initialSize; index++)\n            store.Add(index, LightStatus.Unknown);\n\n        Controls.Add(dataGridView1);\n        dataGridView1.VirtualMode = true;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.CellValueNeeded += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValueNeeded);\n        dataGridView1.CellValuePushed += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValuePushed);\n\n        dataGridView1.Columns.Add(CreateCheckBoxColumn());\n        dataGridView1.Rows.AddCopies(0, initialSize);\n    }\n\n    private DataGridViewCheckBoxColumn CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn dataGridViewCheckBoxColumn1 \n            = new DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn;\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff;\n        dataGridViewCheckBoxColumn1.IndeterminateValue \n            = LightStatus.Unknown;\n        dataGridViewCheckBoxColumn1.ThreeState = true;\n        dataGridViewCheckBoxColumn1.ValueType = typeof(LightStatus);\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#region &quot;data store maintance&quot;\n    private void dataGridView1_CellValueNeeded(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        e.Value = store[e.RowIndex];\n    }\n\n    private void dataGridView1_CellValuePushed(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        store[e.RowIndex] = (LightStatus) e.Value;\n    }\n#endregion\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new TriValueVirtualCheckBox());\n    }\n}\n\npublic enum LightStatus\n{\n    Unknown, \n    TurnedOn, \n    TurnedOff\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_TrueValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrueValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the underlying value corresponding to a cell value of <code>true</code>, which appears as a checked box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object TrueValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> representing a value that the cell will treat as a <code>true</code> value. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate*</span> property is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a>, TrueValue, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> properties determine the associated values of these states as they occur in the underlying data source.  </p>\n<p> Getting or setting this property gets or sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a> property of the cell object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property. Setting this property also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell#System_Windows_Forms_DataGridViewCheckBoxCell_TrueValue_\" data-linktype=\"relative-path\">TrueValue</a> property of every cell in the column and refreshes the column display. To override the specified value for individual cells, set the cell values after you set the column value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn\" data-linktype=\"relative-path\">DataGridViewCheckBoxColumn</a> to track the status of office lighting. The <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_FalseValue_\" data-linktype=\"relative-path\">FalseValue</a> property associates &quot;turnedOff&quot; with <code>false</code>, the TrueValue property associates &quot;turnedOn&quot; with <code>true</code>, and the <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcolumn#System_Windows_Forms_DataGridViewCheckBoxColumn_IndeterminateValue_\" data-linktype=\"relative-path\">IndeterminateValue</a> property associates &quot;unknown&quot; to indeterminate.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Collections::Generic;\nusing namespace System::Windows::Forms;\n\npublic enum class LightStatus\n{\n    Unknown,\n    TurnedOn,\n    TurnedOff\n};\n\npublic ref class TriValueVirtualCheckBox: public Form\n{\nprivate:\n    DataGridView^ dataGridView1;\n\nprivate:\n    const int initialSize;\n\nprivate:\n    Dictionary&lt;int, LightStatus&gt;^ store;\n\npublic:\n    TriValueVirtualCheckBox() :  Form(), initialSize(500)\n    {\n        dataGridView1 = gcnew DataGridView();\n        store = gcnew Dictionary&lt;int, LightStatus&gt;();\n        Text = this-&gt;GetType()-&gt;Name;\n\n        for(int i = 0; i &lt; initialSize; i++)\n        {\n            store-&gt;Add(i, LightStatus::Unknown);\n        }\n\n        Controls-&gt;Add(dataGridView1);\n        dataGridView1-&gt;VirtualMode = true;\n        dataGridView1-&gt;AllowUserToDeleteRows = false;\n        dataGridView1-&gt;CellValueNeeded += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValueNeeded);\n        dataGridView1-&gt;CellValuePushed += \n            gcnew DataGridViewCellValueEventHandler(\n            this, &amp;TriValueVirtualCheckBox::dataGridView1_CellValuePushed);\n\n        dataGridView1-&gt;Columns-&gt;Add(CreateCheckBoxColumn());\n        dataGridView1-&gt;Rows-&gt;AddCopies(0, initialSize);\n    }\n\nprivate:\n    DataGridViewCheckBoxColumn^ CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn^ dataGridViewCheckBoxColumn1\n            = gcnew DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1-&gt;HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1-&gt;TrueValue = LightStatus::TurnedOn;\n        dataGridViewCheckBoxColumn1-&gt;FalseValue =\n            LightStatus::TurnedOff;\n        dataGridViewCheckBoxColumn1-&gt;IndeterminateValue\n            = LightStatus::Unknown;\n        dataGridViewCheckBoxColumn1-&gt;ThreeState = true;\n        dataGridViewCheckBoxColumn1-&gt;ValueType = LightStatus::typeid;\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#pragma region &quot;data store maintance&quot;\nprivate:\n    void dataGridView1_CellValueNeeded(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        e-&gt;Value = store[e-&gt;RowIndex];\n    }\n\nprivate:\n    void dataGridView1_CellValuePushed(Object^ sender,\n        DataGridViewCellValueEventArgs^ e)\n    {\n        store[e-&gt;RowIndex] = (LightStatus) e-&gt;Value;\n    }\n#pragma endregion\n\n};\n\n[STAThread]\nint main()\n{\n    Application::Run(gcnew TriValueVirtualCheckBox());\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">Imports System.IO\nImports System.Collections.Generic\nImports System.Windows.Forms\n\nPublic Class TriValueVirtualCheckBox\n    Inherits System.Windows.Forms.Form\n\n    Dim WithEvents dataGridView1 As New DataGridView\n\n    Const initialSize As Integer = 500\n\n    Dim store As New Dictionary(Of Integer, LightStatus)\n\n    Public Sub New()\n        MyBase.New()\n        Text = Me.GetType().Name\n\n        Dim index As Integer = 0\n        For index = 0 To initialSize\n            store.Add(index, LightStatus.Unknown)\n        Next\n\n        Controls.Add(dataGridView1)\n        dataGridView1.VirtualMode = True\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.Columns.Add(CreateCheckBoxColumn())\n        dataGridView1.Rows.AddCopies(0, initialSize)\n    End Sub\n\n    Private Function CreateCheckBoxColumn() As DataGridViewCheckBoxColumn\n        Dim dataGridViewCheckBoxColumn1 _\n            As New DataGridViewCheckBoxColumn()\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff\n        dataGridViewCheckBoxColumn1.IndeterminateValue = _\n            LightStatus.Unknown\n        dataGridViewCheckBoxColumn1.ThreeState = True\n        dataGridViewCheckBoxColumn1.ValueType = GetType(LightStatus)\n        Return dataGridViewCheckBoxColumn1\n    End Function\n\n#Region &quot;data store maintance&quot;\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        e.Value = store(e.RowIndex)\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Item(e.RowIndex) = CType(e.Value, LightStatus)\n    End Sub\n#End Region\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New TriValueVirtualCheckBox())\n    End Sub\nEnd Class\n\nPublic Enum LightStatus\n    Unknown\n    TurnedOn\n    TurnedOff\nEnd Enum\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewTrinaryVirtualCheckBox#0\">using System;\nusing System.IO;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\n\npublic class TriValueVirtualCheckBox:Form\n{\n    DataGridView dataGridView1 = new DataGridView();\n\n    const int initialSize = 500;\n\n    Dictionary&lt;int, LightStatus&gt; store \n        = new Dictionary&lt;int, LightStatus&gt;();\n\n    public TriValueVirtualCheckBox() : base()\n    {        \n        Text = this.GetType().Name;\n\n        int index = 0;\n        for(index=0; index&lt;=initialSize; index++)\n            store.Add(index, LightStatus.Unknown);\n\n        Controls.Add(dataGridView1);\n        dataGridView1.VirtualMode = true;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.CellValueNeeded += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValueNeeded);\n        dataGridView1.CellValuePushed += new \n            DataGridViewCellValueEventHandler(dataGridView1_CellValuePushed);\n\n        dataGridView1.Columns.Add(CreateCheckBoxColumn());\n        dataGridView1.Rows.AddCopies(0, initialSize);\n    }\n\n    private DataGridViewCheckBoxColumn CreateCheckBoxColumn()\n    {\n        DataGridViewCheckBoxColumn dataGridViewCheckBoxColumn1 \n            = new DataGridViewCheckBoxColumn();\n        dataGridViewCheckBoxColumn1.HeaderText = &quot;Lights On&quot;;\n        dataGridViewCheckBoxColumn1.TrueValue = LightStatus.TurnedOn;\n        dataGridViewCheckBoxColumn1.FalseValue = LightStatus.TurnedOff;\n        dataGridViewCheckBoxColumn1.IndeterminateValue \n            = LightStatus.Unknown;\n        dataGridViewCheckBoxColumn1.ThreeState = true;\n        dataGridViewCheckBoxColumn1.ValueType = typeof(LightStatus);\n        return dataGridViewCheckBoxColumn1;\n    }\n\n#region &quot;data store maintance&quot;\n    private void dataGridView1_CellValueNeeded(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        e.Value = store[e.RowIndex];\n    }\n\n    private void dataGridView1_CellValuePushed(object sender, \n        DataGridViewCellValueEventArgs e)\n    {\n        store[e.RowIndex] = (LightStatus) e.Value;\n    }\n#endregion\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new TriValueVirtualCheckBox());\n    }\n}\n\npublic enum LightStatus\n{\n    Unknown, \n    TurnedOn, \n    TurnedOff\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridViewCheckBoxColumn_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string that describes the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that describes the column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCheckBoxColumn.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCheckBoxColumn.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.DefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"51a4a909-bcdc-cbc3-69d0-d17a90b56fa8\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Hosts a collection of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridViewCheckBoxColumn\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridViewCheckBoxColumn.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridViewCheckBoxColumn.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridViewCheckBoxColumn","System.Windows.Forms.DataGridViewCheckBoxColumn..ctor","System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate","System.Windows.Forms.DataGridViewCheckBoxColumn.DefaultCellStyle","System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue","System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle","System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue","System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState","System.Windows.Forms.DataGridViewCheckBoxColumn.ToString","System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridViewCheckBoxColumn","System::Windows::Forms::DataGridViewCheckBoxColumn","System.Windows.Forms.DataGridViewCheckBoxColumn.#ctor","System::Windows::Forms::DataGridViewCheckBoxColumn::#ctor","System.Windows.Forms.DataGridViewCheckBoxColumn.CellTemplate","System::Windows::Forms::DataGridViewCheckBoxColumn::CellTemplate","System.Windows.Forms.DataGridViewCheckBoxColumn.DefaultCellStyle","System::Windows::Forms::DataGridViewCheckBoxColumn::DefaultCellStyle","System.Windows.Forms.DataGridViewCheckBoxColumn.FalseValue","System::Windows::Forms::DataGridViewCheckBoxColumn::FalseValue","System.Windows.Forms.DataGridViewCheckBoxColumn.FlatStyle","System::Windows::Forms::DataGridViewCheckBoxColumn::FlatStyle","System.Windows.Forms.DataGridViewCheckBoxColumn.IndeterminateValue","System::Windows::Forms::DataGridViewCheckBoxColumn::IndeterminateValue","System.Windows.Forms.DataGridViewCheckBoxColumn.ThreeState","System::Windows::Forms::DataGridViewCheckBoxColumn::ThreeState","System.Windows.Forms.DataGridViewCheckBoxColumn.ToString","System::Windows::Forms::DataGridViewCheckBoxColumn::ToString","System.Windows.Forms.DataGridViewCheckBoxColumn.TrueValue","System::Windows::Forms::DataGridViewCheckBoxColumn::TrueValue"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"51a4a909-bcdc-cbc3-69d0-d17a90b56fa8","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridViewCheckBoxColumn.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridViewCheckBoxColumn class | Microsoft Docs","_op_ogTitle":"DataGridViewCheckBoxColumn class","description":"Hosts a collection of  objects.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridViewCheckBoxColumn","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcheckboxcolumn","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridviewcheckboxcolumn","fileRelativePath":"System.Windows.Forms.DataGridViewCheckBoxColumn.html"},"themesRelativePathToOutputRoot":"_themes/"}