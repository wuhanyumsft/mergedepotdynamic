{"content":"    \r\n    <h1 id=\"System_Windows_Forms_NotifyIcon\">\r\n      <span class=\"lang-csharp\">NotifyIcon</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Specifies a component that creates an icon in the notification area. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;MouseDoubleClick&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;Text&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.NotifyIconDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.ToolboxItemFilter(&quot;System.Windows.Forms&quot;)]\npublic sealed class NotifyIcon : System.ComponentModel.Component</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">System.ComponentModel.Component</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">NotifyIcon</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Icons in the notification area are shortcuts to processes that are running in the background of a computer, such as a virus protection program or a volume control. These processes do not come with their own user interfaces. The NotifyIcon class provides a way to program in this functionality. The <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Icon_\" data-linktype=\"relative-path\">Icon</a> property defines the icon that appears in the notification area. Pop-up menus for an icon are addressed with the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property. The <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Text_\" data-linktype=\"relative-path\">Text</a> property assigns ToolTip text. In order for the icon to show up in the notification area, the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> property must be set to <code>true</code>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon__ctor\" data-linktype=\"self-bookmark\">NotifyIcon()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon__ctor_System_ComponentModel_IContainer_\" data-linktype=\"self-bookmark\">NotifyIcon(IContainer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class with the specified container.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_BalloonTipIcon\" data-linktype=\"self-bookmark\">BalloonTipIcon</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the icon to display on the balloon tip associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_BalloonTipText\" data-linktype=\"self-bookmark\">BalloonTipText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to display on the balloon tip associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_BalloonTipTitle\" data-linktype=\"self-bookmark\">BalloonTipTitle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the title of the balloon tip displayed on the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_ContextMenu\" data-linktype=\"self-bookmark\">ContextMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the shortcut menu for the icon.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_ContextMenuStrip\" data-linktype=\"self-bookmark\">ContextMenuStrip</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the shortcut menu associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_Icon\" data-linktype=\"self-bookmark\">Icon</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the current icon.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_Tag\" data-linktype=\"self-bookmark\">Tag</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an object that contains data about the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the ToolTip text displayed when the mouse pointer rests on a notification area icon.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_Visible\" data-linktype=\"self-bookmark\">Visible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the icon is visible in the notification area of the taskbar.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_ShowBalloonTip_System_Int32_\" data-linktype=\"self-bookmark\">ShowBalloonTip(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays a balloon tip in the taskbar for the specified time period.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_ShowBalloonTip_System_Int32_System_String_System_String_System_Windows_Forms_ToolTipIcon_\" data-linktype=\"self-bookmark\">ShowBalloonTip(Int32,String,String,ToolTipIcon)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays a balloon tip with the specified title, text, and icon in the taskbar for the specified time period.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_BalloonTipClicked\" data-linktype=\"self-bookmark\">BalloonTipClicked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the balloon tip is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_BalloonTipClosed\" data-linktype=\"self-bookmark\">BalloonTipClosed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the balloon tip is closed by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_BalloonTipShown\" data-linktype=\"self-bookmark\">BalloonTipShown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the balloon tip is displayed on the screen.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_Click\" data-linktype=\"self-bookmark\">Click</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks the icon in the notification area.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"self-bookmark\">DoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user double-clicks the icon in the notification area of the taskbar.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_MouseClick\" data-linktype=\"self-bookmark\">MouseClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> with the mouse.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_MouseDoubleClick\" data-linktype=\"self-bookmark\">MouseDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user double-clicks the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> with the mouse.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_MouseDown\" data-linktype=\"self-bookmark\">MouseDown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user presses the mouse button while the pointer is over the icon in the notification area of the taskbar.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_MouseMove\" data-linktype=\"self-bookmark\">MouseMove</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user moves the mouse while the pointer is over the icon in the notification area of the taskbar.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_NotifyIcon_MouseUp\" data-linktype=\"self-bookmark\">MouseUp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user releases the mouse button while the pointer is over the icon in the notification area of the taskbar.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyIcon()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NotifyIcon ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a new <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> is created, the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> property is set to <code>false</code>. You must set the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> property to <code>true</code> in order to use the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> you created. This instance will exist until its container releases it to garbage collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon__ctor_System_ComponentModel_IContainer_\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyIcon(IContainer)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class with the specified container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NotifyIcon (System.ComponentModel.IContainer container);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>container</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.icontainer\" data-linktype=\"relative-path\">IContainer</a> that represents the container for the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a new <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> is created, the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> property is set to <code>false</code>. You must set the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> property to <code>true</code> in order to use the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> you created. This instance will exist until its container releases it to garbage collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class to display an icon for an application in the notification area. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Icon_\" data-linktype=\"relative-path\">Icon</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Text_\" data-linktype=\"relative-path\">Text</a>, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> properties and handling the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event. A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> with an <strong>Exit</strong> item on it is assigned to the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property, which allows the user to close the application. When the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event occurs, the application form is activated by calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIcon#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::NotifyIcon^ notifyIcon1;\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ menuItem1;\n   System::ComponentModel::IContainer^ components;\n\npublic:\n   Form1()\n   {\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;menuItem1 = gcnew System::Windows::Forms::MenuItem;\n      \n      // Initialize contextMenu1\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;menuItem1};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize menuItem1\n      this-&gt;menuItem1-&gt;Index = 0;\n      this-&gt;menuItem1-&gt;Text = &quot;E&amp;xit&quot;;\n      this-&gt;menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      \n      // Set up how the form should be displayed.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Text = &quot;Notify Icon Example&quot;;\n      \n      // Create the NotifyIcon.\n      this-&gt;notifyIcon1 = gcnew System::Windows::Forms::NotifyIcon( this-&gt;components );\n      \n      // The Icon property sets the icon that will appear\n      // in the systray for this application.\n      notifyIcon1-&gt;Icon = gcnew System::Drawing::Icon( &quot;appicon.ico&quot; );\n      \n      // The ContextMenu property sets the menu that will\n      // appear when the systray icon is right clicked.\n      notifyIcon1-&gt;ContextMenu = this-&gt;contextMenu1;\n      \n      // The Text property sets the text that will be displayed,\n      // in a tooltip, when the mouse hovers over the systray icon.\n      notifyIcon1-&gt;Text = &quot;Form1 (NotifyIcon example)&quot;;\n      notifyIcon1-&gt;Visible = true;\n      \n      // Handle the DoubleClick event to activate the form.\n      notifyIcon1-&gt;DoubleClick += gcnew System::EventHandler( this, &amp;Form1::notifyIcon1_DoubleClick );\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void notifyIcon1_DoubleClick( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Show the form when the user double clicks on the notify icon.\n      // Set the WindowState to normal if the form is minimized.\n      if ( this-&gt;WindowState == FormWindowState::Minimized )\n            this-&gt;WindowState = FormWindowState::Normal;\n      \n      // Activate the form.\n      this-&gt;Activate();\n   }\n\n   void menuItem1_Click( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Close the form, which closes the application.\n      this-&gt;Close();\n   }\n\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIcon#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private System.Windows.Forms.NotifyIcon notifyIcon1;\n    private System.Windows.Forms.ContextMenu contextMenu1;\n    private System.Windows.Forms.MenuItem menuItem1;\n    private System.ComponentModel.IContainer components;\n\n    [STAThread]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        this.components = new System.ComponentModel.Container();\n        this.contextMenu1 = new System.Windows.Forms.ContextMenu();\n        this.menuItem1 = new System.Windows.Forms.MenuItem();\n\n        // Initialize contextMenu1\n        this.contextMenu1.MenuItems.AddRange(\n                    new System.Windows.Forms.MenuItem[] {this.menuItem1});\n\n        // Initialize menuItem1\n        this.menuItem1.Index = 0;\n        this.menuItem1.Text = &quot;E&amp;xit&quot;;\n        this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n        // Set up how the form should be displayed.\n        this.ClientSize = new System.Drawing.Size(292, 266);\n        this.Text = &quot;Notify Icon Example&quot;;\n\n        // Create the NotifyIcon.\n        this.notifyIcon1 = new System.Windows.Forms.NotifyIcon(this.components);\n\n        // The Icon property sets the icon that will appear\n        // in the systray for this application.\n        notifyIcon1.Icon = new Icon(&quot;appicon.ico&quot;);\n\n        // The ContextMenu property sets the menu that will\n        // appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = this.contextMenu1;\n\n        // The Text property sets the text that will be displayed,\n        // in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;;\n        notifyIcon1.Visible = true;\n\n        // Handle the DoubleClick event to activate the form.\n        notifyIcon1.DoubleClick += new System.EventHandler(this.notifyIcon1_DoubleClick);\n\n    }\n\n    protected override void Dispose( bool disposing )\n    {\n        // Clean up any components being used.\n        if( disposing )\n            if (components != null)\n                components.Dispose();            \n\n        base.Dispose( disposing );\n    }\n\n    private void notifyIcon1_DoubleClick(object Sender, EventArgs e) \n    {\n        // Show the form when the user double clicks on the notify icon.\n\n        // Set the WindowState to normal if the form is minimized.\n        if (this.WindowState == FormWindowState.Minimized)\n            this.WindowState = FormWindowState.Normal;\n\n        // Activate the form.\n        this.Activate();\n    }\n\n    private void menuItem1_Click(object Sender, EventArgs e) {\n        // Close the form, which closes the application.\n        this.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIcon#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic NotInheritable Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents menuItem1 As System.Windows.Forms.MenuItem\n    Friend WithEvents notifyIcon1 As System.Windows.Forms.NotifyIcon\n    Private components As System.ComponentModel.IContainer\n\n    &lt;System.STAThread()&gt; _\n    Public Shared Sub Main()\n        System.Windows.Forms.Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Public Sub New()\n\n        Me.components = New System.ComponentModel.Container\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.menuItem1 = New System.Windows.Forms.MenuItem\n\n        &#39; Initialize contextMenu1\n        Me.contextMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n                            {Me.menuItem1})\n\n        &#39; Initialize menuItem1\n        Me.menuItem1.Index = 0\n        Me.menuItem1.Text = &quot;E&amp;xit&quot;\n\n        &#39; Set up how the form should be displayed.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Text = &quot;Notify Icon Example&quot;\n\n        &#39; Create the NotifyIcon.\n        Me.notifyIcon1 = New System.Windows.Forms.NotifyIcon(Me.components)\n\n        &#39; The Icon property sets the icon that will appear\n        &#39; in the systray for this application.\n        notifyIcon1.Icon = New Icon(&quot;appicon.ico&quot;)\n\n        &#39; The ContextMenu property sets the menu that will\n        &#39; appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = Me.contextMenu1\n\n        &#39; The Text property sets the text that will be displayed,\n        &#39; in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;\n        notifyIcon1.Visible = True\n    End Sub &#39;New\n    \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        &#39; Clean up any components being used.\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n    Private Sub notifyIcon1_DoubleClick(Sender as object, e as EventArgs) handles notifyIcon1.DoubleClick\n        &#39; Show the form when the user double clicks on the notify icon.\n\n        &#39; Set the WindowState to normal if the form is minimized.\n        if (me.WindowState = FormWindowState.Minimized) then _\n            me.WindowState = FormWindowState.Normal\n\n        &#39; Activate the form.\n        me.Activate()\n    end sub\n\n    Private Sub menuItem1_Click(Sender as object, e as EventArgs) handles menuItem1.Click\n        &#39; Close the form, which closes the application.\n        me.Close()\n    end sub\n\nEnd Class &#39;Form1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_BalloonTipIcon\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_BalloonTipIcon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BalloonTipIcon</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the icon to display on the balloon tip associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ToolTipIcon BalloonTipIcon { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.tooltipicon\" data-linktype=\"relative-path\">ToolTipIcon</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.tooltipicon\" data-linktype=\"relative-path\">ToolTipIcon</a> to display on the balloon tip associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not a <a class=\"xref\" href=\"system.windows.forms.tooltipicon\" data-linktype=\"relative-path\">ToolTipIcon</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_BalloonTipTitle_\" data-linktype=\"relative-path\">BalloonTipTitle</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_BalloonTipText_\" data-linktype=\"relative-path\">BalloonTipText</a>, and BalloonTipIcon properties. To run this example, paste the example code into a Windows Form that contains a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>notifyIcon1</code>. Call <code>SetBalloonTip</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">        private void SetBalloonTip()\n        {\n            notifyIcon1.Icon = SystemIcons.Exclamation;\n            notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;;\n            notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;;\n            notifyIcon1.BalloonTipIcon = ToolTipIcon.Error;\n            this.Click += new EventHandler(Form1_Click);\n        }\n        \n        void Form1_Click(object sender, EventArgs e) \n        {\n            notifyIcon1.Visible = true;\n            notifyIcon1.ShowBalloonTip(30000);\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">    Private Sub SetBalloonTip()\n        notifyIcon1.Icon = SystemIcons.Exclamation\n        notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;\n        notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;\n        notifyIcon1.BalloonTipIcon = ToolTipIcon.Error\n\n    End Sub\n\n    Sub Form1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles Me.Click\n\n        notifyIcon1.Visible = True\n        notifyIcon1.ShowBalloonTip(30000)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_BalloonTipText\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_BalloonTipText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BalloonTipText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to display on the balloon tip associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BalloonTipText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display on the balloon tip associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_BalloonTipTitle_\" data-linktype=\"relative-path\">BalloonTipTitle</a>, BalloonTipText, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_BalloonTipIcon_\" data-linktype=\"relative-path\">BalloonTipIcon</a> properties. To run this example, paste the example code into a Windows Form that contains a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>notifyIcon1</code>. Call <code>SetBalloonTip</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">        private void SetBalloonTip()\n        {\n            notifyIcon1.Icon = SystemIcons.Exclamation;\n            notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;;\n            notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;;\n            notifyIcon1.BalloonTipIcon = ToolTipIcon.Error;\n            this.Click += new EventHandler(Form1_Click);\n        }\n        \n        void Form1_Click(object sender, EventArgs e) \n        {\n            notifyIcon1.Visible = true;\n            notifyIcon1.ShowBalloonTip(30000);\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">    Private Sub SetBalloonTip()\n        notifyIcon1.Icon = SystemIcons.Exclamation\n        notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;\n        notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;\n        notifyIcon1.BalloonTipIcon = ToolTipIcon.Error\n\n    End Sub\n\n    Sub Form1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles Me.Click\n\n        notifyIcon1.Visible = True\n        notifyIcon1.ShowBalloonTip(30000)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_BalloonTipTitle\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_BalloonTipTitle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BalloonTipTitle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the title of the balloon tip displayed on the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BalloonTipTitle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display as the title of the balloon tip.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The title text will display in a bold font near the top of the balloon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the BalloonTipTitle, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_BalloonTipText_\" data-linktype=\"relative-path\">BalloonTipText</a>, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_BalloonTipIcon_\" data-linktype=\"relative-path\">BalloonTipIcon</a> properties. To run this example, paste the example code into a Windows Form that contains a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>notifyIcon1</code>. Call <code>SetBalloonTip</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">        private void SetBalloonTip()\n        {\n            notifyIcon1.Icon = SystemIcons.Exclamation;\n            notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;;\n            notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;;\n            notifyIcon1.BalloonTipIcon = ToolTipIcon.Error;\n            this.Click += new EventHandler(Form1_Click);\n        }\n        \n        void Form1_Click(object sender, EventArgs e) \n        {\n            notifyIcon1.Visible = true;\n            notifyIcon1.ShowBalloonTip(30000);\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">    Private Sub SetBalloonTip()\n        notifyIcon1.Icon = SystemIcons.Exclamation\n        notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;\n        notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;\n        notifyIcon1.BalloonTipIcon = ToolTipIcon.Error\n\n    End Sub\n\n    Sub Form1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles Me.Click\n\n        notifyIcon1.Visible = True\n        notifyIcon1.ShowBalloonTip(30000)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_ContextMenu\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_ContextMenu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContextMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the shortcut menu for the icon.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ContextMenu ContextMenu { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> for the icon. The default value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The menu is shown when the user right-clicks an icon in the notification area of the taskbar. Shortcut menus also are known as pop-up menus.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class to display an icon for an application in the notification area. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Icon_\" data-linktype=\"relative-path\">Icon</a>, ContextMenu, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Text_\" data-linktype=\"relative-path\">Text</a>, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> properties and handling the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event. A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> with an <strong>Exit</strong> item on it is assigned to the ContextMenu property, which allows the user to close the application. When the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event occurs, the application form is activated by calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIcon#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::NotifyIcon^ notifyIcon1;\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ menuItem1;\n   System::ComponentModel::IContainer^ components;\n\npublic:\n   Form1()\n   {\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;menuItem1 = gcnew System::Windows::Forms::MenuItem;\n      \n      // Initialize contextMenu1\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;menuItem1};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize menuItem1\n      this-&gt;menuItem1-&gt;Index = 0;\n      this-&gt;menuItem1-&gt;Text = &quot;E&amp;xit&quot;;\n      this-&gt;menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      \n      // Set up how the form should be displayed.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Text = &quot;Notify Icon Example&quot;;\n      \n      // Create the NotifyIcon.\n      this-&gt;notifyIcon1 = gcnew System::Windows::Forms::NotifyIcon( this-&gt;components );\n      \n      // The Icon property sets the icon that will appear\n      // in the systray for this application.\n      notifyIcon1-&gt;Icon = gcnew System::Drawing::Icon( &quot;appicon.ico&quot; );\n      \n      // The ContextMenu property sets the menu that will\n      // appear when the systray icon is right clicked.\n      notifyIcon1-&gt;ContextMenu = this-&gt;contextMenu1;\n      \n      // The Text property sets the text that will be displayed,\n      // in a tooltip, when the mouse hovers over the systray icon.\n      notifyIcon1-&gt;Text = &quot;Form1 (NotifyIcon example)&quot;;\n      notifyIcon1-&gt;Visible = true;\n      \n      // Handle the DoubleClick event to activate the form.\n      notifyIcon1-&gt;DoubleClick += gcnew System::EventHandler( this, &amp;Form1::notifyIcon1_DoubleClick );\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void notifyIcon1_DoubleClick( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Show the form when the user double clicks on the notify icon.\n      // Set the WindowState to normal if the form is minimized.\n      if ( this-&gt;WindowState == FormWindowState::Minimized )\n            this-&gt;WindowState = FormWindowState::Normal;\n      \n      // Activate the form.\n      this-&gt;Activate();\n   }\n\n   void menuItem1_Click( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Close the form, which closes the application.\n      this-&gt;Close();\n   }\n\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIcon#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private System.Windows.Forms.NotifyIcon notifyIcon1;\n    private System.Windows.Forms.ContextMenu contextMenu1;\n    private System.Windows.Forms.MenuItem menuItem1;\n    private System.ComponentModel.IContainer components;\n\n    [STAThread]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        this.components = new System.ComponentModel.Container();\n        this.contextMenu1 = new System.Windows.Forms.ContextMenu();\n        this.menuItem1 = new System.Windows.Forms.MenuItem();\n\n        // Initialize contextMenu1\n        this.contextMenu1.MenuItems.AddRange(\n                    new System.Windows.Forms.MenuItem[] {this.menuItem1});\n\n        // Initialize menuItem1\n        this.menuItem1.Index = 0;\n        this.menuItem1.Text = &quot;E&amp;xit&quot;;\n        this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n        // Set up how the form should be displayed.\n        this.ClientSize = new System.Drawing.Size(292, 266);\n        this.Text = &quot;Notify Icon Example&quot;;\n\n        // Create the NotifyIcon.\n        this.notifyIcon1 = new System.Windows.Forms.NotifyIcon(this.components);\n\n        // The Icon property sets the icon that will appear\n        // in the systray for this application.\n        notifyIcon1.Icon = new Icon(&quot;appicon.ico&quot;);\n\n        // The ContextMenu property sets the menu that will\n        // appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = this.contextMenu1;\n\n        // The Text property sets the text that will be displayed,\n        // in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;;\n        notifyIcon1.Visible = true;\n\n        // Handle the DoubleClick event to activate the form.\n        notifyIcon1.DoubleClick += new System.EventHandler(this.notifyIcon1_DoubleClick);\n\n    }\n\n    protected override void Dispose( bool disposing )\n    {\n        // Clean up any components being used.\n        if( disposing )\n            if (components != null)\n                components.Dispose();            \n\n        base.Dispose( disposing );\n    }\n\n    private void notifyIcon1_DoubleClick(object Sender, EventArgs e) \n    {\n        // Show the form when the user double clicks on the notify icon.\n\n        // Set the WindowState to normal if the form is minimized.\n        if (this.WindowState == FormWindowState.Minimized)\n            this.WindowState = FormWindowState.Normal;\n\n        // Activate the form.\n        this.Activate();\n    }\n\n    private void menuItem1_Click(object Sender, EventArgs e) {\n        // Close the form, which closes the application.\n        this.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIcon#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic NotInheritable Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents menuItem1 As System.Windows.Forms.MenuItem\n    Friend WithEvents notifyIcon1 As System.Windows.Forms.NotifyIcon\n    Private components As System.ComponentModel.IContainer\n\n    &lt;System.STAThread()&gt; _\n    Public Shared Sub Main()\n        System.Windows.Forms.Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Public Sub New()\n\n        Me.components = New System.ComponentModel.Container\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.menuItem1 = New System.Windows.Forms.MenuItem\n\n        &#39; Initialize contextMenu1\n        Me.contextMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n                            {Me.menuItem1})\n\n        &#39; Initialize menuItem1\n        Me.menuItem1.Index = 0\n        Me.menuItem1.Text = &quot;E&amp;xit&quot;\n\n        &#39; Set up how the form should be displayed.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Text = &quot;Notify Icon Example&quot;\n\n        &#39; Create the NotifyIcon.\n        Me.notifyIcon1 = New System.Windows.Forms.NotifyIcon(Me.components)\n\n        &#39; The Icon property sets the icon that will appear\n        &#39; in the systray for this application.\n        notifyIcon1.Icon = New Icon(&quot;appicon.ico&quot;)\n\n        &#39; The ContextMenu property sets the menu that will\n        &#39; appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = Me.contextMenu1\n\n        &#39; The Text property sets the text that will be displayed,\n        &#39; in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;\n        notifyIcon1.Visible = True\n    End Sub &#39;New\n    \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        &#39; Clean up any components being used.\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n    Private Sub notifyIcon1_DoubleClick(Sender as object, e as EventArgs) handles notifyIcon1.DoubleClick\n        &#39; Show the form when the user double clicks on the notify icon.\n\n        &#39; Set the WindowState to normal if the form is minimized.\n        if (me.WindowState = FormWindowState.Minimized) then _\n            me.WindowState = FormWindowState.Normal\n\n        &#39; Activate the form.\n        me.Activate()\n    end sub\n\n    Private Sub menuItem1_Click(Sender as object, e as EventArgs) handles menuItem1.Click\n        &#39; Close the form, which closes the application.\n        me.Close()\n    end sub\n\nEnd Class &#39;Form1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_ContextMenuStrip\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_ContextMenuStrip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContextMenuStrip</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the shortcut menu associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> associated with the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_Icon\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_Icon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Icon</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the current icon.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Icon Icon { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> displayed by the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> component. The default value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class to display an icon for an application in the notification area. The example demonstrates setting the Icon, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Text_\" data-linktype=\"relative-path\">Text</a>, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> properties and handling the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event. A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> with an <strong>Exit</strong> item on it is assigned to the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property, which allows the user to close the application. When the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event occurs, the application form is activated by calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIcon#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::NotifyIcon^ notifyIcon1;\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ menuItem1;\n   System::ComponentModel::IContainer^ components;\n\npublic:\n   Form1()\n   {\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;menuItem1 = gcnew System::Windows::Forms::MenuItem;\n      \n      // Initialize contextMenu1\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;menuItem1};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize menuItem1\n      this-&gt;menuItem1-&gt;Index = 0;\n      this-&gt;menuItem1-&gt;Text = &quot;E&amp;xit&quot;;\n      this-&gt;menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      \n      // Set up how the form should be displayed.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Text = &quot;Notify Icon Example&quot;;\n      \n      // Create the NotifyIcon.\n      this-&gt;notifyIcon1 = gcnew System::Windows::Forms::NotifyIcon( this-&gt;components );\n      \n      // The Icon property sets the icon that will appear\n      // in the systray for this application.\n      notifyIcon1-&gt;Icon = gcnew System::Drawing::Icon( &quot;appicon.ico&quot; );\n      \n      // The ContextMenu property sets the menu that will\n      // appear when the systray icon is right clicked.\n      notifyIcon1-&gt;ContextMenu = this-&gt;contextMenu1;\n      \n      // The Text property sets the text that will be displayed,\n      // in a tooltip, when the mouse hovers over the systray icon.\n      notifyIcon1-&gt;Text = &quot;Form1 (NotifyIcon example)&quot;;\n      notifyIcon1-&gt;Visible = true;\n      \n      // Handle the DoubleClick event to activate the form.\n      notifyIcon1-&gt;DoubleClick += gcnew System::EventHandler( this, &amp;Form1::notifyIcon1_DoubleClick );\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void notifyIcon1_DoubleClick( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Show the form when the user double clicks on the notify icon.\n      // Set the WindowState to normal if the form is minimized.\n      if ( this-&gt;WindowState == FormWindowState::Minimized )\n            this-&gt;WindowState = FormWindowState::Normal;\n      \n      // Activate the form.\n      this-&gt;Activate();\n   }\n\n   void menuItem1_Click( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Close the form, which closes the application.\n      this-&gt;Close();\n   }\n\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIcon#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private System.Windows.Forms.NotifyIcon notifyIcon1;\n    private System.Windows.Forms.ContextMenu contextMenu1;\n    private System.Windows.Forms.MenuItem menuItem1;\n    private System.ComponentModel.IContainer components;\n\n    [STAThread]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        this.components = new System.ComponentModel.Container();\n        this.contextMenu1 = new System.Windows.Forms.ContextMenu();\n        this.menuItem1 = new System.Windows.Forms.MenuItem();\n\n        // Initialize contextMenu1\n        this.contextMenu1.MenuItems.AddRange(\n                    new System.Windows.Forms.MenuItem[] {this.menuItem1});\n\n        // Initialize menuItem1\n        this.menuItem1.Index = 0;\n        this.menuItem1.Text = &quot;E&amp;xit&quot;;\n        this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n        // Set up how the form should be displayed.\n        this.ClientSize = new System.Drawing.Size(292, 266);\n        this.Text = &quot;Notify Icon Example&quot;;\n\n        // Create the NotifyIcon.\n        this.notifyIcon1 = new System.Windows.Forms.NotifyIcon(this.components);\n\n        // The Icon property sets the icon that will appear\n        // in the systray for this application.\n        notifyIcon1.Icon = new Icon(&quot;appicon.ico&quot;);\n\n        // The ContextMenu property sets the menu that will\n        // appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = this.contextMenu1;\n\n        // The Text property sets the text that will be displayed,\n        // in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;;\n        notifyIcon1.Visible = true;\n\n        // Handle the DoubleClick event to activate the form.\n        notifyIcon1.DoubleClick += new System.EventHandler(this.notifyIcon1_DoubleClick);\n\n    }\n\n    protected override void Dispose( bool disposing )\n    {\n        // Clean up any components being used.\n        if( disposing )\n            if (components != null)\n                components.Dispose();            \n\n        base.Dispose( disposing );\n    }\n\n    private void notifyIcon1_DoubleClick(object Sender, EventArgs e) \n    {\n        // Show the form when the user double clicks on the notify icon.\n\n        // Set the WindowState to normal if the form is minimized.\n        if (this.WindowState == FormWindowState.Minimized)\n            this.WindowState = FormWindowState.Normal;\n\n        // Activate the form.\n        this.Activate();\n    }\n\n    private void menuItem1_Click(object Sender, EventArgs e) {\n        // Close the form, which closes the application.\n        this.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIcon#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic NotInheritable Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents menuItem1 As System.Windows.Forms.MenuItem\n    Friend WithEvents notifyIcon1 As System.Windows.Forms.NotifyIcon\n    Private components As System.ComponentModel.IContainer\n\n    &lt;System.STAThread()&gt; _\n    Public Shared Sub Main()\n        System.Windows.Forms.Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Public Sub New()\n\n        Me.components = New System.ComponentModel.Container\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.menuItem1 = New System.Windows.Forms.MenuItem\n\n        &#39; Initialize contextMenu1\n        Me.contextMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n                            {Me.menuItem1})\n\n        &#39; Initialize menuItem1\n        Me.menuItem1.Index = 0\n        Me.menuItem1.Text = &quot;E&amp;xit&quot;\n\n        &#39; Set up how the form should be displayed.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Text = &quot;Notify Icon Example&quot;\n\n        &#39; Create the NotifyIcon.\n        Me.notifyIcon1 = New System.Windows.Forms.NotifyIcon(Me.components)\n\n        &#39; The Icon property sets the icon that will appear\n        &#39; in the systray for this application.\n        notifyIcon1.Icon = New Icon(&quot;appicon.ico&quot;)\n\n        &#39; The ContextMenu property sets the menu that will\n        &#39; appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = Me.contextMenu1\n\n        &#39; The Text property sets the text that will be displayed,\n        &#39; in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;\n        notifyIcon1.Visible = True\n    End Sub &#39;New\n    \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        &#39; Clean up any components being used.\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n    Private Sub notifyIcon1_DoubleClick(Sender as object, e as EventArgs) handles notifyIcon1.DoubleClick\n        &#39; Show the form when the user double clicks on the notify icon.\n\n        &#39; Set the WindowState to normal if the form is minimized.\n        if (me.WindowState = FormWindowState.Minimized) then _\n            me.WindowState = FormWindowState.Normal\n\n        &#39; Activate the form.\n        me.Activate()\n    end sub\n\n    Private Sub menuItem1_Click(Sender as object, e as EventArgs) handles menuItem1.Click\n        &#39; Close the form, which closes the application.\n        me.Close()\n    end sub\n\nEnd Class &#39;Form1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_Tag\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_Tag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Tag</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an object that contains data about the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Tag { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data about the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_Text\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the ToolTip text displayed when the mouse pointer rests on a notification area icon.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The ToolTip text displayed when the mouse pointer rests on a notification area icon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>ToolTip text is more than 63 characters long.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the text is <code>null</code>, no ToolTip is displayed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class to display an icon for an application in the notification area. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Icon_\" data-linktype=\"relative-path\">Icon</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a>, Text, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> properties and handling the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event. A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> with an <strong>Exit</strong> item on it is assigned to the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property, which allows the user to close the application. When the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event occurs, the application form is activated by calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIcon#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::NotifyIcon^ notifyIcon1;\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ menuItem1;\n   System::ComponentModel::IContainer^ components;\n\npublic:\n   Form1()\n   {\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;menuItem1 = gcnew System::Windows::Forms::MenuItem;\n      \n      // Initialize contextMenu1\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;menuItem1};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize menuItem1\n      this-&gt;menuItem1-&gt;Index = 0;\n      this-&gt;menuItem1-&gt;Text = &quot;E&amp;xit&quot;;\n      this-&gt;menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      \n      // Set up how the form should be displayed.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Text = &quot;Notify Icon Example&quot;;\n      \n      // Create the NotifyIcon.\n      this-&gt;notifyIcon1 = gcnew System::Windows::Forms::NotifyIcon( this-&gt;components );\n      \n      // The Icon property sets the icon that will appear\n      // in the systray for this application.\n      notifyIcon1-&gt;Icon = gcnew System::Drawing::Icon( &quot;appicon.ico&quot; );\n      \n      // The ContextMenu property sets the menu that will\n      // appear when the systray icon is right clicked.\n      notifyIcon1-&gt;ContextMenu = this-&gt;contextMenu1;\n      \n      // The Text property sets the text that will be displayed,\n      // in a tooltip, when the mouse hovers over the systray icon.\n      notifyIcon1-&gt;Text = &quot;Form1 (NotifyIcon example)&quot;;\n      notifyIcon1-&gt;Visible = true;\n      \n      // Handle the DoubleClick event to activate the form.\n      notifyIcon1-&gt;DoubleClick += gcnew System::EventHandler( this, &amp;Form1::notifyIcon1_DoubleClick );\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void notifyIcon1_DoubleClick( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Show the form when the user double clicks on the notify icon.\n      // Set the WindowState to normal if the form is minimized.\n      if ( this-&gt;WindowState == FormWindowState::Minimized )\n            this-&gt;WindowState = FormWindowState::Normal;\n      \n      // Activate the form.\n      this-&gt;Activate();\n   }\n\n   void menuItem1_Click( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Close the form, which closes the application.\n      this-&gt;Close();\n   }\n\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIcon#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private System.Windows.Forms.NotifyIcon notifyIcon1;\n    private System.Windows.Forms.ContextMenu contextMenu1;\n    private System.Windows.Forms.MenuItem menuItem1;\n    private System.ComponentModel.IContainer components;\n\n    [STAThread]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        this.components = new System.ComponentModel.Container();\n        this.contextMenu1 = new System.Windows.Forms.ContextMenu();\n        this.menuItem1 = new System.Windows.Forms.MenuItem();\n\n        // Initialize contextMenu1\n        this.contextMenu1.MenuItems.AddRange(\n                    new System.Windows.Forms.MenuItem[] {this.menuItem1});\n\n        // Initialize menuItem1\n        this.menuItem1.Index = 0;\n        this.menuItem1.Text = &quot;E&amp;xit&quot;;\n        this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n        // Set up how the form should be displayed.\n        this.ClientSize = new System.Drawing.Size(292, 266);\n        this.Text = &quot;Notify Icon Example&quot;;\n\n        // Create the NotifyIcon.\n        this.notifyIcon1 = new System.Windows.Forms.NotifyIcon(this.components);\n\n        // The Icon property sets the icon that will appear\n        // in the systray for this application.\n        notifyIcon1.Icon = new Icon(&quot;appicon.ico&quot;);\n\n        // The ContextMenu property sets the menu that will\n        // appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = this.contextMenu1;\n\n        // The Text property sets the text that will be displayed,\n        // in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;;\n        notifyIcon1.Visible = true;\n\n        // Handle the DoubleClick event to activate the form.\n        notifyIcon1.DoubleClick += new System.EventHandler(this.notifyIcon1_DoubleClick);\n\n    }\n\n    protected override void Dispose( bool disposing )\n    {\n        // Clean up any components being used.\n        if( disposing )\n            if (components != null)\n                components.Dispose();            \n\n        base.Dispose( disposing );\n    }\n\n    private void notifyIcon1_DoubleClick(object Sender, EventArgs e) \n    {\n        // Show the form when the user double clicks on the notify icon.\n\n        // Set the WindowState to normal if the form is minimized.\n        if (this.WindowState == FormWindowState.Minimized)\n            this.WindowState = FormWindowState.Normal;\n\n        // Activate the form.\n        this.Activate();\n    }\n\n    private void menuItem1_Click(object Sender, EventArgs e) {\n        // Close the form, which closes the application.\n        this.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIcon#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic NotInheritable Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents menuItem1 As System.Windows.Forms.MenuItem\n    Friend WithEvents notifyIcon1 As System.Windows.Forms.NotifyIcon\n    Private components As System.ComponentModel.IContainer\n\n    &lt;System.STAThread()&gt; _\n    Public Shared Sub Main()\n        System.Windows.Forms.Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Public Sub New()\n\n        Me.components = New System.ComponentModel.Container\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.menuItem1 = New System.Windows.Forms.MenuItem\n\n        &#39; Initialize contextMenu1\n        Me.contextMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n                            {Me.menuItem1})\n\n        &#39; Initialize menuItem1\n        Me.menuItem1.Index = 0\n        Me.menuItem1.Text = &quot;E&amp;xit&quot;\n\n        &#39; Set up how the form should be displayed.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Text = &quot;Notify Icon Example&quot;\n\n        &#39; Create the NotifyIcon.\n        Me.notifyIcon1 = New System.Windows.Forms.NotifyIcon(Me.components)\n\n        &#39; The Icon property sets the icon that will appear\n        &#39; in the systray for this application.\n        notifyIcon1.Icon = New Icon(&quot;appicon.ico&quot;)\n\n        &#39; The ContextMenu property sets the menu that will\n        &#39; appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = Me.contextMenu1\n\n        &#39; The Text property sets the text that will be displayed,\n        &#39; in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;\n        notifyIcon1.Visible = True\n    End Sub &#39;New\n    \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        &#39; Clean up any components being used.\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n    Private Sub notifyIcon1_DoubleClick(Sender as object, e as EventArgs) handles notifyIcon1.DoubleClick\n        &#39; Show the form when the user double clicks on the notify icon.\n\n        &#39; Set the WindowState to normal if the form is minimized.\n        if (me.WindowState = FormWindowState.Minimized) then _\n            me.WindowState = FormWindowState.Normal\n\n        &#39; Activate the form.\n        me.Activate()\n    end sub\n\n    Private Sub menuItem1_Click(Sender as object, e as EventArgs) handles menuItem1.Click\n        &#39; Close the form, which closes the application.\n        me.Close()\n    end sub\n\nEnd Class &#39;Form1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_Visible\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_Visible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the icon is visible in the notification area of the taskbar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Visible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the icon is visible in the notification area; otherwise, <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Since the default value is <code>false</code>, in order for the icon to show up in the notification area, you must set the Visible property to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class to display an icon for an application in the notification area. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Icon_\" data-linktype=\"relative-path\">Icon</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Text_\" data-linktype=\"relative-path\">Text</a>, and Visible properties and handling the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event. A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> with an <strong>Exit</strong> item on it is assigned to the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property, which allows the user to close the application. When the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event occurs, the application form is activated by calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIcon#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::NotifyIcon^ notifyIcon1;\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ menuItem1;\n   System::ComponentModel::IContainer^ components;\n\npublic:\n   Form1()\n   {\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;menuItem1 = gcnew System::Windows::Forms::MenuItem;\n      \n      // Initialize contextMenu1\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;menuItem1};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize menuItem1\n      this-&gt;menuItem1-&gt;Index = 0;\n      this-&gt;menuItem1-&gt;Text = &quot;E&amp;xit&quot;;\n      this-&gt;menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      \n      // Set up how the form should be displayed.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Text = &quot;Notify Icon Example&quot;;\n      \n      // Create the NotifyIcon.\n      this-&gt;notifyIcon1 = gcnew System::Windows::Forms::NotifyIcon( this-&gt;components );\n      \n      // The Icon property sets the icon that will appear\n      // in the systray for this application.\n      notifyIcon1-&gt;Icon = gcnew System::Drawing::Icon( &quot;appicon.ico&quot; );\n      \n      // The ContextMenu property sets the menu that will\n      // appear when the systray icon is right clicked.\n      notifyIcon1-&gt;ContextMenu = this-&gt;contextMenu1;\n      \n      // The Text property sets the text that will be displayed,\n      // in a tooltip, when the mouse hovers over the systray icon.\n      notifyIcon1-&gt;Text = &quot;Form1 (NotifyIcon example)&quot;;\n      notifyIcon1-&gt;Visible = true;\n      \n      // Handle the DoubleClick event to activate the form.\n      notifyIcon1-&gt;DoubleClick += gcnew System::EventHandler( this, &amp;Form1::notifyIcon1_DoubleClick );\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void notifyIcon1_DoubleClick( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Show the form when the user double clicks on the notify icon.\n      // Set the WindowState to normal if the form is minimized.\n      if ( this-&gt;WindowState == FormWindowState::Minimized )\n            this-&gt;WindowState = FormWindowState::Normal;\n      \n      // Activate the form.\n      this-&gt;Activate();\n   }\n\n   void menuItem1_Click( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Close the form, which closes the application.\n      this-&gt;Close();\n   }\n\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIcon#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private System.Windows.Forms.NotifyIcon notifyIcon1;\n    private System.Windows.Forms.ContextMenu contextMenu1;\n    private System.Windows.Forms.MenuItem menuItem1;\n    private System.ComponentModel.IContainer components;\n\n    [STAThread]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        this.components = new System.ComponentModel.Container();\n        this.contextMenu1 = new System.Windows.Forms.ContextMenu();\n        this.menuItem1 = new System.Windows.Forms.MenuItem();\n\n        // Initialize contextMenu1\n        this.contextMenu1.MenuItems.AddRange(\n                    new System.Windows.Forms.MenuItem[] {this.menuItem1});\n\n        // Initialize menuItem1\n        this.menuItem1.Index = 0;\n        this.menuItem1.Text = &quot;E&amp;xit&quot;;\n        this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n        // Set up how the form should be displayed.\n        this.ClientSize = new System.Drawing.Size(292, 266);\n        this.Text = &quot;Notify Icon Example&quot;;\n\n        // Create the NotifyIcon.\n        this.notifyIcon1 = new System.Windows.Forms.NotifyIcon(this.components);\n\n        // The Icon property sets the icon that will appear\n        // in the systray for this application.\n        notifyIcon1.Icon = new Icon(&quot;appicon.ico&quot;);\n\n        // The ContextMenu property sets the menu that will\n        // appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = this.contextMenu1;\n\n        // The Text property sets the text that will be displayed,\n        // in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;;\n        notifyIcon1.Visible = true;\n\n        // Handle the DoubleClick event to activate the form.\n        notifyIcon1.DoubleClick += new System.EventHandler(this.notifyIcon1_DoubleClick);\n\n    }\n\n    protected override void Dispose( bool disposing )\n    {\n        // Clean up any components being used.\n        if( disposing )\n            if (components != null)\n                components.Dispose();            \n\n        base.Dispose( disposing );\n    }\n\n    private void notifyIcon1_DoubleClick(object Sender, EventArgs e) \n    {\n        // Show the form when the user double clicks on the notify icon.\n\n        // Set the WindowState to normal if the form is minimized.\n        if (this.WindowState == FormWindowState.Minimized)\n            this.WindowState = FormWindowState.Normal;\n\n        // Activate the form.\n        this.Activate();\n    }\n\n    private void menuItem1_Click(object Sender, EventArgs e) {\n        // Close the form, which closes the application.\n        this.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIcon#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic NotInheritable Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents menuItem1 As System.Windows.Forms.MenuItem\n    Friend WithEvents notifyIcon1 As System.Windows.Forms.NotifyIcon\n    Private components As System.ComponentModel.IContainer\n\n    &lt;System.STAThread()&gt; _\n    Public Shared Sub Main()\n        System.Windows.Forms.Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Public Sub New()\n\n        Me.components = New System.ComponentModel.Container\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.menuItem1 = New System.Windows.Forms.MenuItem\n\n        &#39; Initialize contextMenu1\n        Me.contextMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n                            {Me.menuItem1})\n\n        &#39; Initialize menuItem1\n        Me.menuItem1.Index = 0\n        Me.menuItem1.Text = &quot;E&amp;xit&quot;\n\n        &#39; Set up how the form should be displayed.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Text = &quot;Notify Icon Example&quot;\n\n        &#39; Create the NotifyIcon.\n        Me.notifyIcon1 = New System.Windows.Forms.NotifyIcon(Me.components)\n\n        &#39; The Icon property sets the icon that will appear\n        &#39; in the systray for this application.\n        notifyIcon1.Icon = New Icon(&quot;appicon.ico&quot;)\n\n        &#39; The ContextMenu property sets the menu that will\n        &#39; appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = Me.contextMenu1\n\n        &#39; The Text property sets the text that will be displayed,\n        &#39; in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;\n        notifyIcon1.Visible = True\n    End Sub &#39;New\n    \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        &#39; Clean up any components being used.\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n    Private Sub notifyIcon1_DoubleClick(Sender as object, e as EventArgs) handles notifyIcon1.DoubleClick\n        &#39; Show the form when the user double clicks on the notify icon.\n\n        &#39; Set the WindowState to normal if the form is minimized.\n        if (me.WindowState = FormWindowState.Minimized) then _\n            me.WindowState = FormWindowState.Normal\n\n        &#39; Activate the form.\n        me.Activate()\n    end sub\n\n    Private Sub menuItem1_Click(Sender as object, e as EventArgs) handles menuItem1.Click\n        &#39; Close the form, which closes the application.\n        me.Close()\n    end sub\n\nEnd Class &#39;Form1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_ShowBalloonTip_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_ShowBalloonTip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowBalloonTip(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Displays a balloon tip in the taskbar for the specified time period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ShowBalloonTip (int timeout);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time period, in milliseconds, the balloon tip should display.  </p>\n <div class=\"alert NOTE\"><br> This parameter is deprecated as of Windows Vista. Notification display times are now based on system accessibility settings.<br>\n</div>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Minimum and maximum timeout values are enforced by the operating system and are typically 10 and 30 seconds, respectively, however this can vary depending on the operating system. Timeout values that are too large or too small are adjusted to the appropriate minimum or maximum value. In addition, if the user does not appear to be using the computer (no keyboard or mouse events are occurring) then the system does not count this time towards the timeout.  </p>\n<p> Only one balloon tip can display on the taskbar at a time. Attempting to display a balloon tip when one is currently displayed on the taskbar causes the <code>timeout</code> value to be ignored. The behavior is slightly different depending on the operating system and whether the balloon tip is from another, or the same, application. When the second balloon tip is from another application, the first balloon tip will display for the minimum timeout value before the second appears, regardless of the value of <code>timeout</code>. In most cases, if the balloon tips are from the same application, the first balloon tip immediately closes when another call to the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ShowBalloonTip_\" data-linktype=\"relative-path\">ShowBalloonTip</a> method is made. In some cases the second balloon will open on top of the first balloon.  </p>\n<p> The title text will display in a bold font near the top of the balloon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ShowBalloonTip method. To run this example, paste the example code into a Windows Form that contains a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>notifyIcon1</code>. Call <code>SetBalloonTip</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event-handling method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">        private void SetBalloonTip()\n        {\n            notifyIcon1.Icon = SystemIcons.Exclamation;\n            notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;;\n            notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;;\n            notifyIcon1.BalloonTipIcon = ToolTipIcon.Error;\n            this.Click += new EventHandler(Form1_Click);\n        }\n        \n        void Form1_Click(object sender, EventArgs e) \n        {\n            notifyIcon1.Visible = true;\n            notifyIcon1.ShowBalloonTip(30000);\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconBalloonTip#2\">    Private Sub SetBalloonTip()\n        notifyIcon1.Icon = SystemIcons.Exclamation\n        notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;\n        notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;\n        notifyIcon1.BalloonTipIcon = ToolTipIcon.Error\n\n    End Sub\n\n    Sub Form1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles Me.Click\n\n        notifyIcon1.Visible = True\n        notifyIcon1.ShowBalloonTip(30000)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_ShowBalloonTip_System_Int32_System_String_System_String_System_Windows_Forms_ToolTipIcon_\">\r\n    \r\n            <a id=\"System_Windows_Forms_NotifyIcon_ShowBalloonTip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowBalloonTip(Int32,String,String,ToolTipIcon)</div>        \r\n          </div>\r\n    \r\n            <p>Displays a balloon tip with the specified title, text, and icon in the taskbar for the specified time period.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ShowBalloonTip (int timeout, string tipTitle, string tipText, System.Windows.Forms.ToolTipIcon tipIcon);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>timeout</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The time period, in milliseconds, the balloon tip should display.  </p>\n <div class=\"alert NOTE\"><br> This parameter is deprecated as of Windows Vista. Notification display times are now based on system accessibility settings.<br>\n</div>\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tipTitle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The title to display on the balloon tip.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tipText</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to display on the balloon tip.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>tipIcon</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.tooltipicon\" data-linktype=\"relative-path\">ToolTipIcon</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.tooltipicon\" data-linktype=\"relative-path\">ToolTipIcon</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>timeout</code> is less than 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>tipText</code> is <code>null</code> or an empty string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>tipIcon</code> is not a member of <a class=\"xref\" href=\"system.windows.forms.tooltipicon\" data-linktype=\"relative-path\">ToolTipIcon</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Minimum and maximum timeout values are enforced by the operating system and are typically 10 and 30 seconds, respectively, however this can vary depending on the operating system. Timeout values that are too large or too small are adjusted to the appropriate minimum or maximum value. In addition, if the user does not appear to be using the computer (no keyboard or mouse events are occurring) then the system does not count this time towards the timeout.  </p>\n<p> Only one balloon tip can display on the taskbar at a time. Attempting to display a balloon tip when one is currently displayed on the taskbar causes the <code>timeout</code> value to be ignored. The behavior is slightly different depending on the operating system and whether the balloon tip is from another, or the same, application. When the second balloon tip is from another application, the first balloon tip will display for the minimum timeout value before the second appears, regardless of the value of <code>timeout</code>. In most cases, if the balloon tips are from the same application, the first balloon tip immediately closes when another call to the ShowBalloonTip method is made. In some cases the second balloon will open on top of the first balloon.  </p>\n<p> The title text will display in a bold font near the top of the balloon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ShowBalloonTip method. To run this example, paste the example code into a Windows Form that contains a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>notifyIcon1</code>. Associate the <code>Form1_DoubleClick</code> method in this example with the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconBalloonTip#1\">        void Form1_DoubleClick(object sender, EventArgs e)\n        {\n            notifyIcon1.Visible = true;\n            notifyIcon1.ShowBalloonTip(20000, &quot;Information&quot;, &quot;This is the text&quot;,\n                ToolTipIcon.Info );\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconBalloonTip#1\">    Sub Form1_DoubleClick(ByVal sender As Object, ByVal e As EventArgs) _\n            Handles Me.DoubleClick\n\n        notifyIcon1.Visible = True\n        notifyIcon1.ShowBalloonTip(20000, &quot;Information&quot;, &quot;This is the text&quot;, _\n                ToolTipIcon.Info)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_BalloonTipClicked\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BalloonTipClicked</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the balloon tip is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BalloonTipClicked;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BalloonTipClicked event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the BalloonTipClicked event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#505\">private void NotifyIcon1_BalloonTipClicked(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the NotifyIcon.BalloonTipClicked event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#505\">Private Sub NotifyIcon1_BalloonTipClicked(sender as Object, e as EventArgs) _ \n     Handles NotifyIcon1.BalloonTipClicked\n\n   MessageBox.Show(&quot;You are in the NotifyIcon.BalloonTipClicked event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_BalloonTipClosed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BalloonTipClosed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the balloon tip is closed by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BalloonTipClosed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to handle the BalloonTipClosed event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconBalloonTip#4\">        void notifyIcon1_BalloonTipClosed(object sender, EventArgs e)\n        {\n            MessageBox.Show(&quot;The balloon tip is now closed.&quot;);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconBalloonTip#4\">    Sub notifyIcon1_BalloonTipClosed(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles notifyIcon1.BalloonTipClosed\n\n        MessageBox.Show(&quot;The balloon tip is now closed.&quot;)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_BalloonTipShown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BalloonTipShown</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the balloon tip is displayed on the screen.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BalloonTipShown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BalloonTipShown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the BalloonTipShown event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#507\">private void NotifyIcon1_BalloonTipShown(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the NotifyIcon.BalloonTipShown event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#507\">Private Sub NotifyIcon1_BalloonTipShown(sender as Object, e as EventArgs) _ \n     Handles NotifyIcon1.BalloonTipShown\n\n   MessageBox.Show(&quot;You are in the NotifyIcon.BalloonTipShown event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_Click\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Click</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks the icon in the notification area.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Click;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates handling the Click event. This example assumes that you have added the code to a form containing a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> object named <code>NotifyIcon1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIconExample#1\">\t// Initalize the NofifyIcon object&#39;s shortcut menu.\n\tprivate void InitializeContextMenu()\n\t{\n\t\tMenuItem[] menuList = new MenuItem[]{new MenuItem(&quot;Sign In&quot;),\n\t\t\tnew MenuItem(&quot;Get Help&quot;), new MenuItem(&quot;Open&quot;)};\n\t\tContextMenu clickMenu = new ContextMenu(menuList);\n\t\tNotifyIcon1.ContextMenu = clickMenu;\n\n\t\t// Associate the event-handling method with \n\t\t// the NotifyIcon object&#39;s click event.\n\t\tNotifyIcon1.Click +=new System.EventHandler(NotifyIcon1_Click);\n\t}\n\n\n\t// When user clicks the left mouse button display the shortcut menu.  \n\t// Use the SystemInformation.PrimaryMonitorMaximizedWindowSize property\n\t// to place the menu at the lower corner of the screen.\n\tprivate void NotifyIcon1_Click(object sender, System.EventArgs e)\n\t{\n\t\tSystem.Drawing.Size windowSize = \n\t\t\tSystemInformation.PrimaryMonitorMaximizedWindowSize;\n\t\tSystem.Drawing.Point menuPoint = \n\t\t\tnew System.Drawing.Point(windowSize.Width-180, \n\t\t\twindowSize.Height-5);\n\t\tmenuPoint = this.PointToClient(menuPoint);\n\n\t\tNotifyIcon1.ContextMenu.Show(this, menuPoint);\n\t\t\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIconExample#1\">   // Initalize the NofifyIcon object&#39;s shortcut menu.\n   void InitializeContextMenu()\n   {\n      array&lt;MenuItem^&gt;^menuList = {gcnew MenuItem( &quot;Sign In&quot; ),gcnew MenuItem( &quot;Get Help&quot; ),gcnew MenuItem( &quot;Open&quot; )};\n      System::Windows::Forms::ContextMenu^ clickMenu = gcnew System::Windows::Forms::ContextMenu( menuList );\n      NotifyIcon1-&gt;ContextMenu = clickMenu;\n      \n      // Associate the event-handling method with \n      // the NotifyIcon object&#39;s click event.\n      NotifyIcon1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::NotifyIcon1_Click );\n   }\n\n   // When user clicks the left mouse button display the shortcut menu.  \n   // Use the SystemInformation.PrimaryMonitorMaximizedWindowSize property\n   // to place the menu at the lower corner of the screen.\n   void NotifyIcon1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      System::Drawing::Size windowSize = SystemInformation::PrimaryMonitorMaximizedWindowSize;\n      System::Drawing::Point menuPoint = System::Drawing::Point( windowSize.Width - 180, windowSize.Height - 5 );\n      menuPoint = this-&gt;PointToClient( menuPoint );\n      NotifyIcon1-&gt;ContextMenu-&gt;Show( this, menuPoint );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIconExample#1\">    &#39; Initalize the NofifyIcon object&#39;s shortcut menu.\n    Private Sub InitializeContextMenu()\n        Dim menuList() As MenuItem = New MenuItem() _\n                    {New MenuItem(&quot;Sign In&quot;), New MenuItem(&quot;Get Help&quot;), _\n                    New MenuItem(&quot;Open&quot;)}\n        Dim clickMenu As New ContextMenu(menuList)\n        NotifyIcon1.ContextMenu = clickMenu\n    End Sub\n\n\n    &#39; When user clicks the left mouse button display the shortcut menu.  \n    &#39; Use the SystemInformation.PrimaryMonitorMaximizedWindowSize property\n    &#39; to place the menu at the lower corner of the screen.\n    Private Sub NotifyIcon1_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles NotifyIcon1.Click\n\n        Dim windowSize As System.Drawing.Size = _\n            SystemInformation.PrimaryMonitorMaximizedWindowSize\n        Dim menuPoint As System.Drawing.Point = New System.Drawing.Point _\n            (windowSize.Width - 180, windowSize.Height - 5)\n        menuPoint = Me.PointToClient(menuPoint)\n\n        NotifyIcon1.ContextMenu.Show(Me, menuPoint)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_DoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user double-clicks the icon in the notification area of the taskbar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler DoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> class to display an icon for an application in the notification area. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Icon_\" data-linktype=\"relative-path\">Icon</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a>, <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Text_\" data-linktype=\"relative-path\">Text</a>, and <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_Visible_\" data-linktype=\"relative-path\">Visible</a> properties and handling the DoubleClick event. A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> with an <strong>Exit</strong> item on it is assigned to the <a class=\"xref\" href=\"system.windows.forms.notifyicon#System_Windows_Forms_NotifyIcon_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property, which allows the user to close the application. When the DoubleClick event occurs, the application form is activated by calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.NotifyIcon#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   System::Windows::Forms::NotifyIcon^ notifyIcon1;\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ menuItem1;\n   System::ComponentModel::IContainer^ components;\n\npublic:\n   Form1()\n   {\n      this-&gt;components = gcnew System::ComponentModel::Container;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;menuItem1 = gcnew System::Windows::Forms::MenuItem;\n      \n      // Initialize contextMenu1\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;menuItem1};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize menuItem1\n      this-&gt;menuItem1-&gt;Index = 0;\n      this-&gt;menuItem1-&gt;Text = &quot;E&amp;xit&quot;;\n      this-&gt;menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      \n      // Set up how the form should be displayed.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Text = &quot;Notify Icon Example&quot;;\n      \n      // Create the NotifyIcon.\n      this-&gt;notifyIcon1 = gcnew System::Windows::Forms::NotifyIcon( this-&gt;components );\n      \n      // The Icon property sets the icon that will appear\n      // in the systray for this application.\n      notifyIcon1-&gt;Icon = gcnew System::Drawing::Icon( &quot;appicon.ico&quot; );\n      \n      // The ContextMenu property sets the menu that will\n      // appear when the systray icon is right clicked.\n      notifyIcon1-&gt;ContextMenu = this-&gt;contextMenu1;\n      \n      // The Text property sets the text that will be displayed,\n      // in a tooltip, when the mouse hovers over the systray icon.\n      notifyIcon1-&gt;Text = &quot;Form1 (NotifyIcon example)&quot;;\n      notifyIcon1-&gt;Visible = true;\n      \n      // Handle the DoubleClick event to activate the form.\n      notifyIcon1-&gt;DoubleClick += gcnew System::EventHandler( this, &amp;Form1::notifyIcon1_DoubleClick );\n   }\n\nprotected:\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   void notifyIcon1_DoubleClick( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Show the form when the user double clicks on the notify icon.\n      // Set the WindowState to normal if the form is minimized.\n      if ( this-&gt;WindowState == FormWindowState::Minimized )\n            this-&gt;WindowState = FormWindowState::Normal;\n      \n      // Activate the form.\n      this-&gt;Activate();\n   }\n\n   void menuItem1_Click( Object^ /*Sender*/, EventArgs^ /*e*/ )\n   {\n      \n      // Close the form, which closes the application.\n      this-&gt;Close();\n   }\n\n};\n\n[STAThread]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.NotifyIcon#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private System.Windows.Forms.NotifyIcon notifyIcon1;\n    private System.Windows.Forms.ContextMenu contextMenu1;\n    private System.Windows.Forms.MenuItem menuItem1;\n    private System.ComponentModel.IContainer components;\n\n    [STAThread]\n    static void Main() \n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        this.components = new System.ComponentModel.Container();\n        this.contextMenu1 = new System.Windows.Forms.ContextMenu();\n        this.menuItem1 = new System.Windows.Forms.MenuItem();\n\n        // Initialize contextMenu1\n        this.contextMenu1.MenuItems.AddRange(\n                    new System.Windows.Forms.MenuItem[] {this.menuItem1});\n\n        // Initialize menuItem1\n        this.menuItem1.Index = 0;\n        this.menuItem1.Text = &quot;E&amp;xit&quot;;\n        this.menuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n        // Set up how the form should be displayed.\n        this.ClientSize = new System.Drawing.Size(292, 266);\n        this.Text = &quot;Notify Icon Example&quot;;\n\n        // Create the NotifyIcon.\n        this.notifyIcon1 = new System.Windows.Forms.NotifyIcon(this.components);\n\n        // The Icon property sets the icon that will appear\n        // in the systray for this application.\n        notifyIcon1.Icon = new Icon(&quot;appicon.ico&quot;);\n\n        // The ContextMenu property sets the menu that will\n        // appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = this.contextMenu1;\n\n        // The Text property sets the text that will be displayed,\n        // in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;;\n        notifyIcon1.Visible = true;\n\n        // Handle the DoubleClick event to activate the form.\n        notifyIcon1.DoubleClick += new System.EventHandler(this.notifyIcon1_DoubleClick);\n\n    }\n\n    protected override void Dispose( bool disposing )\n    {\n        // Clean up any components being used.\n        if( disposing )\n            if (components != null)\n                components.Dispose();            \n\n        base.Dispose( disposing );\n    }\n\n    private void notifyIcon1_DoubleClick(object Sender, EventArgs e) \n    {\n        // Show the form when the user double clicks on the notify icon.\n\n        // Set the WindowState to normal if the form is minimized.\n        if (this.WindowState == FormWindowState.Minimized)\n            this.WindowState = FormWindowState.Normal;\n\n        // Activate the form.\n        this.Activate();\n    }\n\n    private void menuItem1_Click(object Sender, EventArgs e) {\n        // Close the form, which closes the application.\n        this.Close();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.NotifyIcon#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic NotInheritable Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents menuItem1 As System.Windows.Forms.MenuItem\n    Friend WithEvents notifyIcon1 As System.Windows.Forms.NotifyIcon\n    Private components As System.ComponentModel.IContainer\n\n    &lt;System.STAThread()&gt; _\n    Public Shared Sub Main()\n        System.Windows.Forms.Application.Run(New Form1)\n    End Sub &#39;Main\n\n    Public Sub New()\n\n        Me.components = New System.ComponentModel.Container\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.menuItem1 = New System.Windows.Forms.MenuItem\n\n        &#39; Initialize contextMenu1\n        Me.contextMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n                            {Me.menuItem1})\n\n        &#39; Initialize menuItem1\n        Me.menuItem1.Index = 0\n        Me.menuItem1.Text = &quot;E&amp;xit&quot;\n\n        &#39; Set up how the form should be displayed.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Text = &quot;Notify Icon Example&quot;\n\n        &#39; Create the NotifyIcon.\n        Me.notifyIcon1 = New System.Windows.Forms.NotifyIcon(Me.components)\n\n        &#39; The Icon property sets the icon that will appear\n        &#39; in the systray for this application.\n        notifyIcon1.Icon = New Icon(&quot;appicon.ico&quot;)\n\n        &#39; The ContextMenu property sets the menu that will\n        &#39; appear when the systray icon is right clicked.\n        notifyIcon1.ContextMenu = Me.contextMenu1\n\n        &#39; The Text property sets the text that will be displayed,\n        &#39; in a tooltip, when the mouse hovers over the systray icon.\n        notifyIcon1.Text = &quot;Form1 (NotifyIcon example)&quot;\n        notifyIcon1.Visible = True\n    End Sub &#39;New\n    \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        &#39; Clean up any components being used.\n        If disposing Then\n            If (components IsNot Nothing) Then\n                components.Dispose()\n            End If\n        End If\n        MyBase.Dispose(disposing)\n    End Sub &#39;Dispose\n\n    Private Sub notifyIcon1_DoubleClick(Sender as object, e as EventArgs) handles notifyIcon1.DoubleClick\n        &#39; Show the form when the user double clicks on the notify icon.\n\n        &#39; Set the WindowState to normal if the form is minimized.\n        if (me.WindowState = FormWindowState.Minimized) then _\n            me.WindowState = FormWindowState.Normal\n\n        &#39; Activate the form.\n        me.Activate()\n    end sub\n\n    Private Sub menuItem1_Click(Sender as object, e as EventArgs) handles menuItem1.Click\n        &#39; Close the form, which closes the application.\n        me.Close()\n    end sub\n\nEnd Class &#39;Form1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_MouseClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks a <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> with the mouse.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MouseEventHandler MouseClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the MouseClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#510\">private void NotifyIcon1_MouseClick(Object sender, MouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#510\">Private Sub NotifyIcon1_MouseClick(sender as Object, e as MouseEventArgs) _ \n     Handles NotifyIcon1.MouseClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_MouseDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user double-clicks the <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> with the mouse.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the MouseDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#511\">private void NotifyIcon1_MouseDoubleClick(Object sender, MouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#511\">Private Sub NotifyIcon1_MouseDoubleClick(sender as Object, e as MouseEventArgs) _ \n     Handles NotifyIcon1.MouseDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_MouseDown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseDown</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user presses the mouse button while the pointer is over the icon in the notification area of the taskbar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MouseEventHandler MouseDown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the MouseDown event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#512\">private void NotifyIcon1_MouseDown(Object sender, MouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseDown Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#512\">Private Sub NotifyIcon1_MouseDown(sender as Object, e as MouseEventArgs) _ \n     Handles NotifyIcon1.MouseDown\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseDown Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_MouseMove\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseMove</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user moves the mouse while the pointer is over the icon in the notification area of the taskbar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MouseEventHandler MouseMove;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseMove event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the MouseMove event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#513\">private void NotifyIcon1_MouseMove(Object sender, MouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseMove Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#513\">Private Sub NotifyIcon1_MouseMove(sender as Object, e as MouseEventArgs) _ \n     Handles NotifyIcon1.MouseMove\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseMove Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_NotifyIcon_MouseUp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseUp</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user releases the mouse button while the pointer is over the icon in the notification area of the taskbar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MouseEventHandler MouseUp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.notifyicon\" data-linktype=\"relative-path\">NotifyIcon</a> named <code>NotifyIcon1</code>. Then ensure that the event handler is associated with the MouseUp event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#514\">private void NotifyIcon1_MouseUp(Object sender, MouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseUp Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#514\">Private Sub NotifyIcon1_MouseUp(sender as Object, e as MouseEventArgs) _ \n     Handles NotifyIcon1.MouseUp\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseUp Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.NotifyIcon.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.NotifyIcon.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.BalloonTipClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_BalloonTipClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_BalloonTipClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.BalloonTipClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_BalloonTipClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_BalloonTipClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.BalloonTipIcon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.BalloonTipShown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_BalloonTipShown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_BalloonTipShown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.BalloonTipText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.BalloonTipTitle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.ContextMenu\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.ContextMenuStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.DoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_DoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_DoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.Icon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.MouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_MouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_MouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_MouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_MouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.add_MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.remove_MouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.ShowBalloonTip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.Tag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.NotifyIcon.Visible\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5a68fa70-300c-c859-1c7d-ee82ca95490c\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\NotifyIcon.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Specifies a component that creates an icon in the notification area. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.NotifyIcon\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.NotifyIcon.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.NotifyIcon.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.NotifyIcon","System.Windows.Forms.NotifyIcon..ctor","System.Windows.Forms.NotifyIcon.BalloonTipClicked","System.Windows.Forms.NotifyIcon.add_BalloonTipClicked","System.Windows.Forms.NotifyIcon.remove_BalloonTipClicked","System.Windows.Forms.NotifyIcon.BalloonTipClosed","System.Windows.Forms.NotifyIcon.add_BalloonTipClosed","System.Windows.Forms.NotifyIcon.remove_BalloonTipClosed","System.Windows.Forms.NotifyIcon.BalloonTipIcon","System.Windows.Forms.NotifyIcon.BalloonTipShown","System.Windows.Forms.NotifyIcon.add_BalloonTipShown","System.Windows.Forms.NotifyIcon.remove_BalloonTipShown","System.Windows.Forms.NotifyIcon.BalloonTipText","System.Windows.Forms.NotifyIcon.BalloonTipTitle","System.Windows.Forms.NotifyIcon.Click","System.Windows.Forms.NotifyIcon.add_Click","System.Windows.Forms.NotifyIcon.remove_Click","System.Windows.Forms.NotifyIcon.ContextMenu","System.Windows.Forms.NotifyIcon.ContextMenuStrip","System.Windows.Forms.NotifyIcon.Dispose","System.Windows.Forms.NotifyIcon.DoubleClick","System.Windows.Forms.NotifyIcon.add_DoubleClick","System.Windows.Forms.NotifyIcon.remove_DoubleClick","System.Windows.Forms.NotifyIcon.Icon","System.Windows.Forms.NotifyIcon.MouseClick","System.Windows.Forms.NotifyIcon.add_MouseClick","System.Windows.Forms.NotifyIcon.remove_MouseClick","System.Windows.Forms.NotifyIcon.MouseDoubleClick","System.Windows.Forms.NotifyIcon.add_MouseDoubleClick","System.Windows.Forms.NotifyIcon.remove_MouseDoubleClick","System.Windows.Forms.NotifyIcon.MouseDown","System.Windows.Forms.NotifyIcon.add_MouseDown","System.Windows.Forms.NotifyIcon.remove_MouseDown","System.Windows.Forms.NotifyIcon.MouseMove","System.Windows.Forms.NotifyIcon.add_MouseMove","System.Windows.Forms.NotifyIcon.remove_MouseMove","System.Windows.Forms.NotifyIcon.MouseUp","System.Windows.Forms.NotifyIcon.add_MouseUp","System.Windows.Forms.NotifyIcon.remove_MouseUp","System.Windows.Forms.NotifyIcon.ShowBalloonTip","System.Windows.Forms.NotifyIcon.Tag","System.Windows.Forms.NotifyIcon.Text","System.Windows.Forms.NotifyIcon.Visible"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.NotifyIcon","System::Windows::Forms::NotifyIcon","System.Windows.Forms.NotifyIcon.#ctor","System::Windows::Forms::NotifyIcon::#ctor","System.Windows.Forms.NotifyIcon.BalloonTipClicked","System::Windows::Forms::NotifyIcon::BalloonTipClicked","System.Windows.Forms.NotifyIcon.BalloonTipClosed","System::Windows::Forms::NotifyIcon::BalloonTipClosed","System.Windows.Forms.NotifyIcon.BalloonTipIcon","System::Windows::Forms::NotifyIcon::BalloonTipIcon","System.Windows.Forms.NotifyIcon.BalloonTipShown","System::Windows::Forms::NotifyIcon::BalloonTipShown","System.Windows.Forms.NotifyIcon.BalloonTipText","System::Windows::Forms::NotifyIcon::BalloonTipText","System.Windows.Forms.NotifyIcon.BalloonTipTitle","System::Windows::Forms::NotifyIcon::BalloonTipTitle","System.Windows.Forms.NotifyIcon.Click","System::Windows::Forms::NotifyIcon::Click","System.Windows.Forms.NotifyIcon.ContextMenu","System::Windows::Forms::NotifyIcon::ContextMenu","System.Windows.Forms.NotifyIcon.ContextMenuStrip","System::Windows::Forms::NotifyIcon::ContextMenuStrip","System.Windows.Forms.NotifyIcon.Dispose","System::Windows::Forms::NotifyIcon::Dispose","System.Windows.Forms.NotifyIcon.DoubleClick","System::Windows::Forms::NotifyIcon::DoubleClick","System.Windows.Forms.NotifyIcon.Icon","System::Windows::Forms::NotifyIcon::Icon","System.Windows.Forms.NotifyIcon.MouseClick","System::Windows::Forms::NotifyIcon::MouseClick","System.Windows.Forms.NotifyIcon.MouseDoubleClick","System::Windows::Forms::NotifyIcon::MouseDoubleClick","System.Windows.Forms.NotifyIcon.MouseDown","System::Windows::Forms::NotifyIcon::MouseDown","System.Windows.Forms.NotifyIcon.MouseMove","System::Windows::Forms::NotifyIcon::MouseMove","System.Windows.Forms.NotifyIcon.MouseUp","System::Windows::Forms::NotifyIcon::MouseUp","System.Windows.Forms.NotifyIcon.ShowBalloonTip","System::Windows::Forms::NotifyIcon::ShowBalloonTip","System.Windows.Forms.NotifyIcon.Tag","System::Windows::Forms::NotifyIcon::Tag","System.Windows.Forms.NotifyIcon.Text","System::Windows::Forms::NotifyIcon::Text","System.Windows.Forms.NotifyIcon.Visible","System::Windows::Forms::NotifyIcon::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5a68fa70-300c-c859-1c7d-ee82ca95490c","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\NotifyIcon.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/NotifyIcon.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NotifyIcon class | Microsoft Docs","_op_ogTitle":"NotifyIcon class","description":"Specifies a component that creates an icon in the notification area. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.NotifyIcon","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.notifyicon","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.notifyicon","fileRelativePath":"System.Windows.Forms.NotifyIcon.html"},"themesRelativePathToOutputRoot":"_themes/"}