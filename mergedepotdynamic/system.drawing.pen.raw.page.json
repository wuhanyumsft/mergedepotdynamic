{"content":"    \r\n    <h1 id=\"System_Drawing_Pen\">\r\n      <span class=\"lang-csharp\">Pen</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines an object used to draw lines and curves. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Pen</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A Pen draws a line of specified width and style. Use the <a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a> property to draw several varieties of dashed lines. The line drawn by a Pen can be filled in a variety of fill styles, including solid colors and textures. The fill style depends on brush or texture that is used as the fill object.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen__ctor_System_Drawing_Brush_\" data-linktype=\"self-bookmark\">Pen(Brush)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen__ctor_System_Drawing_Color_\" data-linktype=\"self-bookmark\">Pen(Color)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen__ctor_System_Drawing_Brush_System_Single_\" data-linktype=\"self-bookmark\">Pen(Brush,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <span class=\"xref\">stem.Drawing.Pen.Width*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen__ctor_System_Drawing_Color_System_Single_\" data-linktype=\"self-bookmark\">Pen(Color,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> and <span class=\"xref\">stem.Drawing.Pen.Width*</span> properties.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Alignment\" data-linktype=\"self-bookmark\">Alignment</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the alignment for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Brush\" data-linktype=\"self-bookmark\">Brush</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines attributes of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Color\" data-linktype=\"self-bookmark\">Color</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_CompoundArray\" data-linktype=\"self-bookmark\">CompoundArray</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an array of values that specifies a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_CustomEndCap\" data-linktype=\"self-bookmark\">CustomEndCap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a custom cap to use at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_CustomStartCap\" data-linktype=\"self-bookmark\">CustomStartCap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a custom cap to use at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_DashCap\" data-linktype=\"self-bookmark\">DashCap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_DashOffset\" data-linktype=\"self-bookmark\">DashOffset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_DashPattern\" data-linktype=\"self-bookmark\">DashPattern</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an array of custom dashes and spaces.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_DashStyle\" data-linktype=\"self-bookmark\">DashStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the style used for dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_EndCap\" data-linktype=\"self-bookmark\">EndCap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the cap style used at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_LineJoin\" data-linktype=\"self-bookmark\">LineJoin</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the join style for the ends of two consecutive lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_MiterLimit\" data-linktype=\"self-bookmark\">MiterLimit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the limit of the thickness of the join on a mitered corner.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_PenType\" data-linktype=\"self-bookmark\">PenType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the style of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_StartCap\" data-linktype=\"self-bookmark\">StartCap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the cap style used at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Transform\" data-linktype=\"self-bookmark\">Transform</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a copy of the geometric transformation for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Width\" data-linktype=\"self-bookmark\">Width</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the width of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, in units of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object used for drawing.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_MultiplyTransform_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">MultiplyTransform(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies the transformation matrix for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_MultiplyTransform_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">MultiplyTransform(Matrix,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies the transformation matrix for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_ResetTransform\" data-linktype=\"self-bookmark\">ResetTransform()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the geometric transformation matrix for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to identity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_RotateTransform_System_Single_\" data-linktype=\"self-bookmark\">RotateTransform(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates the local geometric transformation by the specified angle. This method prepends the rotation to the transformation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_RotateTransform_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">RotateTransform(Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates the local geometric transformation by the specified angle in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_ScaleTransform_System_Single_System_Single_\" data-linktype=\"self-bookmark\">ScaleTransform(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_ScaleTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">ScaleTransform(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scales the local geometric transformation by the specified factors in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_SetLineCap_System_Drawing_Drawing2D_LineCap_System_Drawing_Drawing2D_LineCap_System_Drawing_Drawing2D_DashCap_\" data-linktype=\"self-bookmark\">SetLineCap(LineCap,LineCap,DashCap)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the values that determine the style of cap used to end lines drawn by this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_TranslateTransform_System_Single_System_Single_\" data-linktype=\"self-bookmark\">TranslateTransform(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Pen_TranslateTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">TranslateTransform(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Translates the local geometric transformation by the specified dimensions in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen__ctor_System_Drawing_Brush_\">\r\n    \r\n            <a id=\"System_Drawing_Pen__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pen(Brush)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Pen (System.Drawing.Brush brush);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the fill properties of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Brush_\" data-linktype=\"relative-path\">Brush</a> property determines how the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> draws lines. Lines are drawn as if they are filled rectangles, with the characteristics of the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Width_\" data-linktype=\"relative-path\">Width</a> property of the new <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> is set to 1 (the default).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates constructing a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> with a <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Brush_\" data-linktype=\"relative-path\">Brush</a> and the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_LineJoin_\" data-linktype=\"relative-path\">LineJoin</a> property on a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowLineJoin</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#1\">    private void ShowLineJoin(PaintEventArgs e)\n    {\n\n        // Create a new pen.\n        Pen skyBluePen = new Pen(Brushes.DeepSkyBlue);\n\n        // Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F;\n\n        // Set the LineJoin property.\n        skyBluePen.LineJoin = System.Drawing.Drawing2D.LineJoin.Bevel;\n\n        // Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, \n            new Rectangle(40, 40, 150, 200));\n\n        //Dispose of the pen.\n        skyBluePen.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#1\">    Private Sub ShowLineJoin(ByVal e As PaintEventArgs)\n\n        &#39; Create a new pen.\n        Dim skyBluePen As New Pen(Brushes.DeepSkyBlue)\n\n        &#39; Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F\n\n        &#39; Set the LineJoin property.\n        skyBluePen.LineJoin = Drawing2D.LineJoin.Bevel\n\n        &#39; Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, _\n            New Rectangle(40, 40, 150, 200))\n\n        &#39;Dispose of the pen.\n        skyBluePen.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#1\">private:\n   void ShowLineJoin( PaintEventArgs^ e )\n   {\n      // Create a new pen.\n      Pen^ skyBluePen = gcnew Pen( Brushes::DeepSkyBlue );\n\n      // Set the pen&#39;s width.\n      skyBluePen-&gt;Width = 8.0F;\n\n      // Set the LineJoin property.\n      skyBluePen-&gt;LineJoin = System::Drawing::Drawing2D::LineJoin::Bevel;\n\n      // Draw a rectangle.\n      e-&gt;Graphics-&gt;DrawRectangle( skyBluePen, Rectangle(40,40,150,200) );\n\n      //Dispose of the pen.\n      delete skyBluePen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen__ctor_System_Drawing_Color_\">\r\n    \r\n            <a id=\"System_Drawing_Pen__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pen(Color)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Pen (System.Drawing.Color color);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>color</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that indicates the color of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> property is set to the color specified by the <code>color</code> parameter. The <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Width_\" data-linktype=\"relative-path\">Width</a> property is set to 1 (the default).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen__ctor_System_Drawing_Brush_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Pen__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pen(Brush,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and <span class=\"xref\">stem.Drawing.Pen.Width*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Pen (System.Drawing.Brush brush, float width);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>brush</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines the characteristics of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the new <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>brush</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> is set to the color specified in the <code>brush</code> parameter, the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Width_\" data-linktype=\"relative-path\">Width</a> property is set to the value specified in the <code>width</code> parameter, and the units are set to <a class=\"xref\" href=\"system.drawing.graphicsunit\" data-linktype=\"relative-path\">GraphicsUnit</a>.  </p>\n<p> Note that the <code>brush</code> parameter also specifies the <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> property of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> A <code>width</code> of 0 will result in the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> drawing as if the width were 1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and demonstrates the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_StartCap_\" data-linktype=\"relative-path\">StartCap</a> and <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_EndCap_\" data-linktype=\"relative-path\">EndCap</a> properties on a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowStartAndEndCaps</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.ImageExample#3\">    private void Button3_Click(System.Object sender, System.EventArgs e)\n    {\n\n        Graphics buttonGraphics = Button3.CreateGraphics();\n        Pen myPen = new Pen(Color.ForestGreen, 4.0F);\n        myPen.DashStyle = System.Drawing.Drawing2D.DashStyle.DashDotDot;\n\n        Rectangle theRectangle = Button3.ClientRectangle;\n        theRectangle.Inflate(-2, -2);\n        buttonGraphics.DrawRectangle(myPen, theRectangle);\n        buttonGraphics.Dispose();\n        myPen.Dispose();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.ImageExample#3\">private:\n   void Button3_Click( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      Graphics^ buttonGraphics = Button3-&gt;CreateGraphics();\n      Pen^ myPen = gcnew Pen( Color::ForestGreen,4.0F );\n      myPen-&gt;DashStyle = System::Drawing::Drawing2D::DashStyle::DashDotDot;\n      Rectangle theRectangle = Button3-&gt;ClientRectangle;\n      theRectangle.Inflate(  -2, -2 );\n      buttonGraphics-&gt;DrawRectangle( myPen, theRectangle );\n      delete buttonGraphics;\n      delete myPen;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ImageExample#3\">    Private Sub Button3_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button3.Click\n\n        Dim buttonGraphics As Graphics = Button3.CreateGraphics()\n        Dim myPen As Pen = New Pen(Color.ForestGreen, 4.0F)\n        myPen.DashStyle = Drawing2D.DashStyle.DashDotDot\n\n        Dim theRectangle As Rectangle = Button3.ClientRectangle\n        theRectangle.Inflate(-2, -2)\n        buttonGraphics.DrawRectangle(myPen, theRectangle)\n        buttonGraphics.Dispose()\n        myPen.Dispose()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen__ctor_System_Drawing_Color_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Pen__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pen(Color,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> class with the specified <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> and <span class=\"xref\">stem.Drawing.Pen.Width*</span> properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Pen (System.Drawing.Color color, float width);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>color</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that indicates the color of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value indicating the width of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> property is set to the color specified by the <code>color</code> parameter. The <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Width_\" data-linktype=\"relative-path\">Width</a> property is set to the value specified in the <code>width</code> parameter. A <code>width</code> of 0 will result in the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> drawing as if the width were 1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashCap_\" data-linktype=\"relative-path\">DashCap</a>, <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashPattern_\" data-linktype=\"relative-path\">DashPattern</a>, and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_SmoothingMode_\" data-linktype=\"relative-path\">SmoothingMode</a> properties.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowPensAndSmoothingMode</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing e as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#3\">    private void ShowPensAndSmoothingMode(PaintEventArgs e)\n    {\n\n        // Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.AntiAlias;\n\n        // Create a new Pen object.\n        Pen greenPen = new Pen(Color.Green);\n\n        // Set the width to 6.\n        greenPen.Width = 6.0F;\n\n        // Set the DashCap to round.\n        greenPen.DashCap = System.Drawing.Drawing2D.DashCap.Round;\n\n        // Create a custom dash pattern.\n        greenPen.DashPattern = new float[]{4.0F, 2.0F, 1.0F, 3.0F};\n\n        // Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F);\n\n        // Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.None;\n\n        // Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F);\n\n        // Dispose of the custom pen.\n        greenPen.Dispose();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#3\">    Private Sub ShowPensAndSmoothingMode(ByVal e As PaintEventArgs)\n\n        &#39; Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias\n\n        &#39; Create a new Pen object.\n        Dim greenPen As New Pen(Color.Green)\n\n        &#39; Set the width to 6.\n        greenPen.Width = 6.0F\n\n        &#39; Set the DashCap to round.\n        greenPen.DashCap = Drawing2D.DashCap.Round\n\n        &#39; Create a custom dash pattern.\n        greenPen.DashPattern = New Single() {4.0F, 2.0F, 1.0F, 3.0F}\n\n        &#39; Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F)\n\n        &#39; Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.None\n\n        &#39; Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F)\n\n        &#39; Dispose of the custom pen.\n        greenPen.Dispose()\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#3\">private:\n   void ShowPensAndSmoothingMode( PaintEventArgs^ e )\n   {\n      // Set the SmoothingMode property to smooth the line.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::AntiAlias;\n\n      // Create a new Pen object.\n      Pen^ greenPen = gcnew Pen( Color::Green );\n\n      // Set the width to 6.\n      greenPen-&gt;Width = 6.0F;\n\n      // Set the DashCap to round.\n      greenPen-&gt;DashCap = System::Drawing::Drawing2D::DashCap::Round;\n\n      // Create a custom dash pattern.\n      array&lt;Single&gt;^temp0 = {4.0F,2.0F,1.0F,3.0F};\n      greenPen-&gt;DashPattern = temp0;\n\n      // Draw a line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 20.0F, 20.0F, 100.0F, 240.0F );\n\n      // Change the SmoothingMode to none.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::None;\n\n      // Draw another line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 100.0F, 240.0F, 160.0F, 20.0F );\n\n      // Dispose of the custom pen.\n      delete greenPen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Alignment\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Alignment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Alignment</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the alignment for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a> that represents the alignment for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not a member of <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The Alignment property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property determines how the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> draws closed curves and polygons. The <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a> enumeration specifies five values; however, only two values—<a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a> and <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>—will change the appearance of a drawn line. <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon. A value of <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a> for this property specifies that the width of the pen is inside the outline of the curve or polygon. The other three values, <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>, <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>, and <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>, will result in a pen that is centered.  </p>\n<p> A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> that has its alignment set to <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position. Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <a class=\"xref\" href=\"system.drawing.drawing2d.dashcap\" data-linktype=\"relative-path\">DashCap</a> dash caps.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Brush\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Brush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Brush</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines attributes of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Brush Brush { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> that determines attributes of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The Brush property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Assigning this property causes the pen to draw filled lines and curves. It overrides the <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> property of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Color\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Color_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Color</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color Color { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> structure that represents the color of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The Color property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_CompoundArray\">\r\n    \r\n            <a id=\"System_Drawing_Pen_CompoundArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CompoundArray</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an array of values that specifies a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float[] CompoundArray { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>[]</div>\r\n                  </div>\r\n                  <p>An array of real numbers that specifies the compound array. The elements in the array must be in increasing order, not less than 0, and not greater than 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The CompoundArray property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A compound line is made up of alternating parallel lines and spaces of varying widths. The values in the array specify the starting points of each component of the compound line relative to the pen&#39;s width. The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen. The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen. The final value in the array specifies where the last component ends.  </p>\n<p> Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen&#39;s width, the width of the space that separates the two lines is 50 percent of the pen&#39; s width, and the width of the second line is 30 percent of the pen&#39;s width. Start by creating a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and an array of real numbers. Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.  </p>\n<p> Do not set this property if the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> has its <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property set to <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_CustomEndCap\">\r\n    \r\n            <a id=\"System_Drawing_Pen_CustomEndCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomEndCap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a custom cap to use at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> that represents the cap used at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The CustomEndCap property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_CustomStartCap\">\r\n    \r\n            <a id=\"System_Drawing_Pen_CustomStartCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomStartCap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a custom cap to use at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.customlinecap\" data-linktype=\"relative-path\">CustomLineCap</a> that represents the cap used at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The CustomStartCap property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_DashCap\">\r\n    \r\n            <a id=\"System_Drawing_Pen_DashCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DashCap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.DashCap DashCap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.dashcap\" data-linktype=\"relative-path\">DashCap</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.drawing2d.dashcap\" data-linktype=\"relative-path\">DashCap</a> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not a member of <a class=\"xref\" href=\"system.drawing.drawing2d.dashcap\" data-linktype=\"relative-path\">DashCap</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The DashCap property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not set this property to <a class=\"xref\" href=\"system.drawing.drawing2d.dashcap\" data-linktype=\"relative-path\">DashCap</a> if the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> has its <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property set to <a class=\"xref\" href=\"system.drawing.drawing2d.penalignment\" data-linktype=\"relative-path\">PenAlignment</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and the effects of setting the DashCap, <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashPattern_\" data-linktype=\"relative-path\">DashPattern</a>, and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_SmoothingMode_\" data-linktype=\"relative-path\">SmoothingMode</a> properties.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowPensAndSmoothingMode</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#3\">    private void ShowPensAndSmoothingMode(PaintEventArgs e)\n    {\n\n        // Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.AntiAlias;\n\n        // Create a new Pen object.\n        Pen greenPen = new Pen(Color.Green);\n\n        // Set the width to 6.\n        greenPen.Width = 6.0F;\n\n        // Set the DashCap to round.\n        greenPen.DashCap = System.Drawing.Drawing2D.DashCap.Round;\n\n        // Create a custom dash pattern.\n        greenPen.DashPattern = new float[]{4.0F, 2.0F, 1.0F, 3.0F};\n\n        // Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F);\n\n        // Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.None;\n\n        // Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F);\n\n        // Dispose of the custom pen.\n        greenPen.Dispose();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#3\">    Private Sub ShowPensAndSmoothingMode(ByVal e As PaintEventArgs)\n\n        &#39; Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias\n\n        &#39; Create a new Pen object.\n        Dim greenPen As New Pen(Color.Green)\n\n        &#39; Set the width to 6.\n        greenPen.Width = 6.0F\n\n        &#39; Set the DashCap to round.\n        greenPen.DashCap = Drawing2D.DashCap.Round\n\n        &#39; Create a custom dash pattern.\n        greenPen.DashPattern = New Single() {4.0F, 2.0F, 1.0F, 3.0F}\n\n        &#39; Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F)\n\n        &#39; Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.None\n\n        &#39; Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F)\n\n        &#39; Dispose of the custom pen.\n        greenPen.Dispose()\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#3\">private:\n   void ShowPensAndSmoothingMode( PaintEventArgs^ e )\n   {\n      // Set the SmoothingMode property to smooth the line.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::AntiAlias;\n\n      // Create a new Pen object.\n      Pen^ greenPen = gcnew Pen( Color::Green );\n\n      // Set the width to 6.\n      greenPen-&gt;Width = 6.0F;\n\n      // Set the DashCap to round.\n      greenPen-&gt;DashCap = System::Drawing::Drawing2D::DashCap::Round;\n\n      // Create a custom dash pattern.\n      array&lt;Single&gt;^temp0 = {4.0F,2.0F,1.0F,3.0F};\n      greenPen-&gt;DashPattern = temp0;\n\n      // Draw a line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 20.0F, 20.0F, 100.0F, 240.0F );\n\n      // Change the SmoothingMode to none.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::None;\n\n      // Draw another line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 100.0F, 240.0F, 160.0F, 20.0F );\n\n      // Dispose of the custom pen.\n      delete greenPen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_DashOffset\">\r\n    \r\n            <a id=\"System_Drawing_Pen_DashOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DashOffset</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float DashOffset { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The distance from the start of a line to the beginning of a dash pattern.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The DashOffset property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_DashPattern\">\r\n    \r\n            <a id=\"System_Drawing_Pen_DashPattern_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DashPattern</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an array of custom dashes and spaces.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float[] DashPattern { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>[]</div>\r\n                  </div>\r\n                  <p>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The DashPattern property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Assigning a value other than <code>null</code> to this property will set the <a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a> property for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to <a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a>.  </p>\n<p> The elements in the <code>dashArray</code> array set the length of each dash and space in the dash pattern. The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on. Consequently, each element should be a non-zero positive number.  </p>\n<p> The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashCap_\" data-linktype=\"relative-path\">DashCap</a>, DashPattern, and <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_SmoothingMode_\" data-linktype=\"relative-path\">SmoothingMode</a> properties.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowPensAndSmoothingMode</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#3\">    private void ShowPensAndSmoothingMode(PaintEventArgs e)\n    {\n\n        // Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.AntiAlias;\n\n        // Create a new Pen object.\n        Pen greenPen = new Pen(Color.Green);\n\n        // Set the width to 6.\n        greenPen.Width = 6.0F;\n\n        // Set the DashCap to round.\n        greenPen.DashCap = System.Drawing.Drawing2D.DashCap.Round;\n\n        // Create a custom dash pattern.\n        greenPen.DashPattern = new float[]{4.0F, 2.0F, 1.0F, 3.0F};\n\n        // Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F);\n\n        // Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.None;\n\n        // Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F);\n\n        // Dispose of the custom pen.\n        greenPen.Dispose();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#3\">    Private Sub ShowPensAndSmoothingMode(ByVal e As PaintEventArgs)\n\n        &#39; Set the SmoothingMode property to smooth the line.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.AntiAlias\n\n        &#39; Create a new Pen object.\n        Dim greenPen As New Pen(Color.Green)\n\n        &#39; Set the width to 6.\n        greenPen.Width = 6.0F\n\n        &#39; Set the DashCap to round.\n        greenPen.DashCap = Drawing2D.DashCap.Round\n\n        &#39; Create a custom dash pattern.\n        greenPen.DashPattern = New Single() {4.0F, 2.0F, 1.0F, 3.0F}\n\n        &#39; Draw a line.\n        e.Graphics.DrawLine(greenPen, 20.0F, 20.0F, 100.0F, 240.0F)\n\n        &#39; Change the SmoothingMode to none.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.None\n\n        &#39; Draw another line.\n        e.Graphics.DrawLine(greenPen, 100.0F, 240.0F, 160.0F, 20.0F)\n\n        &#39; Dispose of the custom pen.\n        greenPen.Dispose()\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#3\">private:\n   void ShowPensAndSmoothingMode( PaintEventArgs^ e )\n   {\n      // Set the SmoothingMode property to smooth the line.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::AntiAlias;\n\n      // Create a new Pen object.\n      Pen^ greenPen = gcnew Pen( Color::Green );\n\n      // Set the width to 6.\n      greenPen-&gt;Width = 6.0F;\n\n      // Set the DashCap to round.\n      greenPen-&gt;DashCap = System::Drawing::Drawing2D::DashCap::Round;\n\n      // Create a custom dash pattern.\n      array&lt;Single&gt;^temp0 = {4.0F,2.0F,1.0F,3.0F};\n      greenPen-&gt;DashPattern = temp0;\n\n      // Draw a line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 20.0F, 20.0F, 100.0F, 240.0F );\n\n      // Change the SmoothingMode to none.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::None;\n\n      // Draw another line.\n      e-&gt;Graphics-&gt;DrawLine( greenPen, 100.0F, 240.0F, 160.0F, 20.0F );\n\n      // Dispose of the custom pen.\n      delete greenPen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_DashStyle\">\r\n    \r\n            <a id=\"System_Drawing_Pen_DashStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DashStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the style used for dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a> that represents the style used for dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The DashStyle property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A value of <a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a> for this property specifies that a custom pattern of dashes and spaces, defined by the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashPattern_\" data-linktype=\"relative-path\">DashPattern</a> property, makes up lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>. If the value of this property is <a class=\"xref\" href=\"system.drawing.drawing2d.dashstyle\" data-linktype=\"relative-path\">DashStyle</a> and the value of the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_DashPattern_\" data-linktype=\"relative-path\">DashPattern</a> property is <code>null</code>, the pen draws solid lines.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_EndCap\">\r\n    \r\n            <a id=\"System_Drawing_Pen_EndCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndCap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the cap style used at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.LineCap EndCap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> values that represents the cap style used at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not a member of <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The EndCap property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_StartCap_\" data-linktype=\"relative-path\">StartCap</a> and EndCap properties on a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowStartAndEndCaps</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#2\">    private void ShowStartAndEndCaps(PaintEventArgs e)\n    {\n\n        // Create a new custom pen.\n        Pen redPen = new Pen(Brushes.Red, 6.0F);\n\n        // Set the StartCap property.\n        redPen.StartCap = System.Drawing.Drawing2D.LineCap.RoundAnchor;\n\n        // Set the EndCap property.\n        redPen.EndCap = System.Drawing.Drawing2D.LineCap.ArrowAnchor;\n\n        // Draw a line.\n        e.Graphics.DrawLine(redPen, 40.0F, 40.0F, 145.0F, 185.0F);\n\n        // Dispose of the custom pen.\n        redPen.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#2\">    Private Sub ShowStartAndEndCaps(ByVal e As PaintEventArgs)\n\n        &#39; Create a new custom pen.\n        Dim redPen As New Pen(Brushes.Red, 6.0F)\n\n        &#39; Set the StartCap property.\n        redPen.StartCap = Drawing2D.LineCap.RoundAnchor\n\n        &#39; Set the EndCap property.\n        redPen.EndCap = Drawing2D.LineCap.ArrowAnchor\n\n        &#39; Draw a line.\n        e.Graphics.DrawLine(redPen, 40.0F, 40.0F, 145.0F, 185.0F)\n\n        &#39; Dispose of the custom pen.\n        redPen.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#2\">private:\n   void ShowStartAndEndCaps( PaintEventArgs^ e )\n   {\n      // Create a new custom pen.\n      Pen^ redPen = gcnew Pen( Brushes::Red,6.0F );\n\n      // Set the StartCap property.\n      redPen-&gt;StartCap = System::Drawing::Drawing2D::LineCap::RoundAnchor;\n\n      // Set the EndCap property.\n      redPen-&gt;EndCap = System::Drawing::Drawing2D::LineCap::ArrowAnchor;\n\n      // Draw a line.\n      e-&gt;Graphics-&gt;DrawLine( redPen, 40.0F, 40.0F, 145.0F, 185.0F );\n\n      // Dispose of the custom pen.\n      delete redPen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_LineJoin\">\r\n    \r\n            <a id=\"System_Drawing_Pen_LineJoin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LineJoin</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the join style for the ends of two consecutive lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.linejoin\" data-linktype=\"relative-path\">LineJoin</a> that represents the join style for the ends of two consecutive lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The LineJoin property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A line join is the common area that is formed by two lines whose ends meet or overlap. There are three line join styles: miter, bevel, and round.  When you specify a line join style for a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> object, that join style will be applied to all the connected lines in any <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath\" data-linktype=\"relative-path\">GraphicsPath</a> object drawn using that pen.The following illustration shows the results of the beveled line join example.  </p>\n<p> <img src=\"add/media/pens5.gif\" alt=\"Pens\" title=\"Pens\" data-linktype=\"relative-path\"></p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Width_\" data-linktype=\"relative-path\">Width</a> and LineJoin properties on a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowLineJoin</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> .  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#1\">    private void ShowLineJoin(PaintEventArgs e)\n    {\n\n        // Create a new pen.\n        Pen skyBluePen = new Pen(Brushes.DeepSkyBlue);\n\n        // Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F;\n\n        // Set the LineJoin property.\n        skyBluePen.LineJoin = System.Drawing.Drawing2D.LineJoin.Bevel;\n\n        // Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, \n            new Rectangle(40, 40, 150, 200));\n\n        //Dispose of the pen.\n        skyBluePen.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#1\">    Private Sub ShowLineJoin(ByVal e As PaintEventArgs)\n\n        &#39; Create a new pen.\n        Dim skyBluePen As New Pen(Brushes.DeepSkyBlue)\n\n        &#39; Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F\n\n        &#39; Set the LineJoin property.\n        skyBluePen.LineJoin = Drawing2D.LineJoin.Bevel\n\n        &#39; Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, _\n            New Rectangle(40, 40, 150, 200))\n\n        &#39;Dispose of the pen.\n        skyBluePen.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#1\">private:\n   void ShowLineJoin( PaintEventArgs^ e )\n   {\n      // Create a new pen.\n      Pen^ skyBluePen = gcnew Pen( Brushes::DeepSkyBlue );\n\n      // Set the pen&#39;s width.\n      skyBluePen-&gt;Width = 8.0F;\n\n      // Set the LineJoin property.\n      skyBluePen-&gt;LineJoin = System::Drawing::Drawing2D::LineJoin::Bevel;\n\n      // Draw a rectangle.\n      e-&gt;Graphics-&gt;DrawRectangle( skyBluePen, Rectangle(40,40,150,200) );\n\n      //Dispose of the pen.\n      delete skyBluePen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_MiterLimit\">\r\n    \r\n            <a id=\"System_Drawing_Pen_MiterLimit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MiterLimit</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the limit of the thickness of the join on a mitered corner.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float MiterLimit { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The limit of the thickness of the join on a mitered corner.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The MiterLimit property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join. The miter length can be large when the angle between two lines is small. The miter limit is the maximum allowed ratio of miter length to stroke width. The default value is 10.0f.  </p>\n<p> If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_PenType\">\r\n    \r\n            <a id=\"System_Drawing_Pen_PenType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PenType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the style of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.PenType PenType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.pentype\" data-linktype=\"relative-path\">PenType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.pentype\" data-linktype=\"relative-path\">PenType</a> enumeration that specifies the style of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <a class=\"xref\" href=\"system.drawing.drawing2d.pentype\" data-linktype=\"relative-path\">PenType</a> enumeration.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_StartCap\">\r\n    \r\n            <a id=\"System_Drawing_Pen_StartCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartCap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the cap style used at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.LineCap StartCap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> values that represents the cap style used at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not a member of <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The StartCap property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effects of setting the StartCap and <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_EndCap_\" data-linktype=\"relative-path\">EndCap</a> properties on a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowStartAndEndCaps</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#2\">    private void ShowStartAndEndCaps(PaintEventArgs e)\n    {\n\n        // Create a new custom pen.\n        Pen redPen = new Pen(Brushes.Red, 6.0F);\n\n        // Set the StartCap property.\n        redPen.StartCap = System.Drawing.Drawing2D.LineCap.RoundAnchor;\n\n        // Set the EndCap property.\n        redPen.EndCap = System.Drawing.Drawing2D.LineCap.ArrowAnchor;\n\n        // Draw a line.\n        e.Graphics.DrawLine(redPen, 40.0F, 40.0F, 145.0F, 185.0F);\n\n        // Dispose of the custom pen.\n        redPen.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#2\">    Private Sub ShowStartAndEndCaps(ByVal e As PaintEventArgs)\n\n        &#39; Create a new custom pen.\n        Dim redPen As New Pen(Brushes.Red, 6.0F)\n\n        &#39; Set the StartCap property.\n        redPen.StartCap = Drawing2D.LineCap.RoundAnchor\n\n        &#39; Set the EndCap property.\n        redPen.EndCap = Drawing2D.LineCap.ArrowAnchor\n\n        &#39; Draw a line.\n        e.Graphics.DrawLine(redPen, 40.0F, 40.0F, 145.0F, 185.0F)\n\n        &#39; Dispose of the custom pen.\n        redPen.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#2\">private:\n   void ShowStartAndEndCaps( PaintEventArgs^ e )\n   {\n      // Create a new custom pen.\n      Pen^ redPen = gcnew Pen( Brushes::Red,6.0F );\n\n      // Set the StartCap property.\n      redPen-&gt;StartCap = System::Drawing::Drawing2D::LineCap::RoundAnchor;\n\n      // Set the EndCap property.\n      redPen-&gt;EndCap = System::Drawing::Drawing2D::LineCap::ArrowAnchor;\n\n      // Draw a line.\n      e-&gt;Graphics-&gt;DrawLine( redPen, 40.0F, 40.0F, 145.0F, 185.0F );\n\n      // Dispose of the custom pen.\n      delete redPen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Transform\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Transform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Transform</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a copy of the geometric transformation for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.Matrix Transform { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>A copy of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that represents the geometric transformation for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The Transform property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property defines an elliptical shape for the pen tip. This ellipse is obtained from the default circular shape by applying the transformation matrix. Note that the translation portion of the matrix is ignored. Because the matrix returned and by the Transform property is a copy of the pen&#39;s geometric transform, you should dispose of the matrix when you no longer need it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Width\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Width_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Width</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the width of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, in units of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object used for drawing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float Width { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The width of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The Width property is set on an immutable <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>, such as those returned by the <a class=\"xref\" href=\"system.drawing.pens\" data-linktype=\"relative-path\">Pens</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can access the unit of measure of the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object using its <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_PageUnit_\" data-linktype=\"relative-path\">PageUnit</a> property. The unit of measure is typically pixels. A Width of 0 will result in the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> drawing as if the Width were 1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effects of setting the Width and <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_LineJoin_\" data-linktype=\"relative-path\">LineJoin</a> properties on a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowLineJoin</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#1\">    private void ShowLineJoin(PaintEventArgs e)\n    {\n\n        // Create a new pen.\n        Pen skyBluePen = new Pen(Brushes.DeepSkyBlue);\n\n        // Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F;\n\n        // Set the LineJoin property.\n        skyBluePen.LineJoin = System.Drawing.Drawing2D.LineJoin.Bevel;\n\n        // Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, \n            new Rectangle(40, 40, 150, 200));\n\n        //Dispose of the pen.\n        skyBluePen.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#1\">    Private Sub ShowLineJoin(ByVal e As PaintEventArgs)\n\n        &#39; Create a new pen.\n        Dim skyBluePen As New Pen(Brushes.DeepSkyBlue)\n\n        &#39; Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F\n\n        &#39; Set the LineJoin property.\n        skyBluePen.LineJoin = Drawing2D.LineJoin.Bevel\n\n        &#39; Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, _\n            New Rectangle(40, 40, 150, 200))\n\n        &#39;Dispose of the pen.\n        skyBluePen.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#1\">private:\n   void ShowLineJoin( PaintEventArgs^ e )\n   {\n      // Create a new pen.\n      Pen^ skyBluePen = gcnew Pen( Brushes::DeepSkyBlue );\n\n      // Set the pen&#39;s width.\n      skyBluePen-&gt;Width = 8.0F;\n\n      // Set the LineJoin property.\n      skyBluePen-&gt;LineJoin = System::Drawing::Drawing2D::LineJoin::Bevel;\n\n      // Draw a rectangle.\n      e-&gt;Graphics-&gt;DrawRectangle( skyBluePen, Rectangle(40,40,150,200) );\n\n      //Dispose of the pen.\n      delete skyBluePen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that can be cast to a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Creates a copy of that pen.  </p>\n</li>\n<li><p>Draws a line to the screen, using the copy of the pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#1\">public:\n   void Clone_Example( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ myPen = gcnew Pen( Color::Black,5.0f );\n      \n      // Clone myPen.\n      Pen^ clonePen = dynamic_cast&lt;Pen^&gt;(myPen-&gt;Clone());\n      \n      // Draw a line with clonePen.\n      e-&gt;Graphics-&gt;DrawLine( clonePen, 0, 0, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#1\">        public void Clone_Example(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen myPen = new Pen(Color.Black, 5);\n                     \n            // Clone myPen.\n            Pen clonePen = (Pen)myPen.Clone();\n                     \n            // Draw a line with clonePen.\n            e.Graphics.DrawLine(clonePen, 0, 0, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#1\">    Public Sub Clone_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim myPen As New Pen(Color.Black, 5)\n\n        &#39; Clone myPen.\n        Dim clonePen As Pen = CType(myPen.Clone(), Pen)\n\n        &#39; Draw a line with clonePen.\n        e.Graphics.DrawLine(clonePen, 0, 0, 100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Dispose\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Dispose allows the resources used by this <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> to be reallocated for other purposes.  </p>\n<p> Call Dispose when you are finished using the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> was occupying. For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the effects of setting the <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_Width_\" data-linktype=\"relative-path\">Width</a> and <a class=\"xref\" href=\"system.drawing.pen#System_Drawing_Pen_LineJoin_\" data-linktype=\"relative-path\">LineJoin</a> properties, and shows how to call the Dispose method for a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> This example is designed to be used with Windows Forms. Paste the code into a form and call the <code>ShowLineJoin</code> method when handling the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PensExample#1\">    private void ShowLineJoin(PaintEventArgs e)\n    {\n\n        // Create a new pen.\n        Pen skyBluePen = new Pen(Brushes.DeepSkyBlue);\n\n        // Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F;\n\n        // Set the LineJoin property.\n        skyBluePen.LineJoin = System.Drawing.Drawing2D.LineJoin.Bevel;\n\n        // Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, \n            new Rectangle(40, 40, 150, 200));\n\n        //Dispose of the pen.\n        skyBluePen.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PensExample#1\">    Private Sub ShowLineJoin(ByVal e As PaintEventArgs)\n\n        &#39; Create a new pen.\n        Dim skyBluePen As New Pen(Brushes.DeepSkyBlue)\n\n        &#39; Set the pen&#39;s width.\n        skyBluePen.Width = 8.0F\n\n        &#39; Set the LineJoin property.\n        skyBluePen.LineJoin = Drawing2D.LineJoin.Bevel\n\n        &#39; Draw a rectangle.\n        e.Graphics.DrawRectangle(skyBluePen, _\n            New Rectangle(40, 40, 150, 200))\n\n        &#39;Dispose of the pen.\n        skyBluePen.Dispose()\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PensExample#1\">private:\n   void ShowLineJoin( PaintEventArgs^ e )\n   {\n      // Create a new pen.\n      Pen^ skyBluePen = gcnew Pen( Brushes::DeepSkyBlue );\n\n      // Set the pen&#39;s width.\n      skyBluePen-&gt;Width = 8.0F;\n\n      // Set the LineJoin property.\n      skyBluePen-&gt;LineJoin = System::Drawing::Drawing2D::LineJoin::Bevel;\n\n      // Draw a rectangle.\n      e-&gt;Graphics-&gt;DrawRectangle( skyBluePen, Rectangle(40,40,150,200) );\n\n      //Dispose of the pen.\n      delete skyBluePen;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_Finalize\">\r\n    \r\n            <a id=\"System_Drawing_Pen_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~Pen ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_MultiplyTransform_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_MultiplyTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiplyTransform(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies the transformation matrix for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> object by which to multiply the transformation matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method prepends the multiplication matrix specified in the <code>matrix</code> parameter to the transformation matrix for the multiplication operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Draws a line to the screen.  </p>\n</li>\n<li><p>Multiplies the transformation matrix of the pen by the specified matrix.  </p>\n</li>\n<li><p>Draws a line with the transformed pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#2\">public:\n   void MultiplyTransform_Example1( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ myPen = gcnew Pen( Color::Black,5.0f );\n      \n      // Create a translation matrix.\n      Matrix^ penMatrix = gcnew Matrix;\n      penMatrix-&gt;Scale( 3, 1 );\n      \n      // Multiply the transformation matrix of myPen by transMatrix.\n      myPen-&gt;MultiplyTransform( penMatrix );\n      \n      // Draw a line to the screen.\n      e-&gt;Graphics-&gt;DrawLine( myPen, 0, 0, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#2\">        public void MultiplyTransform_Example1(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen myPen = new Pen(Color.Black, 5);\n                     \n            // Create a translation matrix.\n            Matrix penMatrix = new Matrix();\n            penMatrix.Scale(3, 1);\n                     \n            // Multiply the transformation matrix of myPen by transMatrix.\n            myPen.MultiplyTransform(penMatrix);\n                     \n            // Draw a line to the screen.\n            e.Graphics.DrawLine(myPen, 0, 0, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#2\">    Public Sub MultiplyTransform_Example1(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim myPen As New Pen(Color.Black, 5)\n\n        &#39; Create a translation matrix.\n        Dim penMatrix As New Matrix\n        penMatrix.Scale(3, 1)\n\n        &#39; Multiply the transformation matrix of myPen by transMatrix.\n        myPen.MultiplyTransform(penMatrix)\n\n        &#39; Draw a line to the screen.\n        e.Graphics.DrawLine(myPen, 0, 0, 100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_MultiplyTransform_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_MultiplyTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiplyTransform(Matrix,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies the transformation matrix for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> by the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which to multiply the transformation matrix.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The order in which to perform the multiplication operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method uses the <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> enumeration element (either prepend or append) specified by the <code>order</code> parameter to carry out the multiplication operation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Draws a line to the screen.  </p>\n</li>\n<li><p>Multiplies the transformation matrix of the pen by the specified matrix.  </p>\n</li>\n<li><p>Draws a line with the transformed pen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#3\">public:\n   void MultiplyTransform_Example2( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ myPen = gcnew Pen( Color::Black,5.0f );\n      \n      // Create a translation matrix.\n      Matrix^ penMatrix = gcnew Matrix;\n      penMatrix-&gt;Scale( 3, 1 );\n      \n      // Multiply the transformation matrix of myPen by transMatrix.\n      myPen-&gt;MultiplyTransform( penMatrix, MatrixOrder::Prepend );\n      \n      // Draw a line to the screen.\n      e-&gt;Graphics-&gt;DrawLine( myPen, 0, 0, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#3\">        public void MultiplyTransform_Example2(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen myPen = new Pen(Color.Black, 5);\n                     \n            // Create a translation matrix.\n            Matrix penMatrix = new Matrix();\n            penMatrix.Scale(3, 1);\n                     \n            // Multiply the transformation matrix of myPen by transMatrix.\n            myPen.MultiplyTransform(penMatrix, MatrixOrder.Prepend);\n                     \n            // Draw a line to the screen.\n            e.Graphics.DrawLine(myPen, 0, 0, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#3\">    Public Sub MultiplyTransform_Example2(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim myPen As New Pen(Color.Black, 5)\n\n        &#39; Create a translation matrix.\n        Dim penMatrix As New Matrix\n        penMatrix.Scale(3, 1)\n\n        &#39; Multiply the transformation matrix of myPen by transMatrix.\n        myPen.MultiplyTransform(penMatrix, MatrixOrder.Prepend)\n\n        &#39; Draw a line to the screen.\n        e.Graphics.DrawLine(myPen, 0, 0, 100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_ResetTransform\">\r\n    \r\n            <a id=\"System_Drawing_Pen_ResetTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetTransform()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the geometric transformation matrix for this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> to identity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetTransform ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.  </p>\n</li>\n<li><p>Draws a line to the screen.  </p>\n</li>\n<li><p>Resets the transformation matrix to identity.  </p>\n</li>\n<li><p>Draws a second line to the screen.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#4\">public:\n   void ResetTransform_Example( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ myPen = gcnew Pen( Color::Black,3.0f );\n      \n      // Scale the transformation matrix of myPen.\n      myPen-&gt;ScaleTransform( 2, 1 );\n      \n      // Draw a line with myPen.\n      e-&gt;Graphics-&gt;DrawLine( myPen, 10, 0, 10, 200 );\n      \n      // Reset the transformation matrix of myPen to identity.\n      myPen-&gt;ResetTransform();\n      \n      // Draw a second line with myPen.\n      e-&gt;Graphics-&gt;DrawLine( myPen, 100, 0, 100, 200 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#4\">        public void ResetTransform_Example(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen myPen = new Pen(Color.Black, 3);\n                     \n            // Scale the transformation matrix of myPen.\n            myPen.ScaleTransform(2, 1);\n                     \n            // Draw a line with myPen.\n            e.Graphics.DrawLine(myPen, 10, 0, 10, 200);\n                     \n            // Reset the transformation matrix of myPen to identity.\n            myPen.ResetTransform();\n                     \n            // Draw a second line with myPen.\n            e.Graphics.DrawLine(myPen, 100, 0, 100, 200);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#4\">    Public Sub ResetTransform_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim myPen As New Pen(Color.Black, 3)\n\n        &#39; Scale the transformation matrix of myPen.\n        myPen.ScaleTransform(2, 1)\n\n        &#39; Draw a line with myPen.\n        e.Graphics.DrawLine(myPen, 10, 0, 10, 200)\n\n        &#39; Reset the transformation matrix of myPen to identity.\n        myPen.ResetTransform()\n\n        &#39; Draw a second line with myPen.\n        e.Graphics.DrawLine(myPen, 100, 0, 100, 200)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_RotateTransform_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_RotateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateTransform(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates the local geometric transformation by the specified angle. This method prepends the rotation to the transformation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateTransform (float angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of rotation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Draws a rectangle using the pen.  </p>\n</li>\n<li><p>Scales the pen by 2 times in the x-axis direction.  </p>\n</li>\n<li><p>Rotates the pen 90 degrees clockwise.  </p>\n</li>\n<li><p>Draws a second rectangle to demonstrate the difference.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#5\">public:\n   void RotateTransform_Example1( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ rotatePen = gcnew Pen( Color::Black,5.0f );\n      \n      // Draw a rectangle with rotatePen.\n      e-&gt;Graphics-&gt;DrawRectangle( rotatePen, 10, 10, 100, 100 );\n      \n      // Scale rotatePen by 2X in the x-direction.\n      rotatePen-&gt;ScaleTransform( 2, 1 );\n      \n      // Rotate rotatePen 90 degrees clockwise.\n      rotatePen-&gt;RotateTransform( 90 );\n      \n      // Draw a second rectangle with rotatePen.\n      e-&gt;Graphics-&gt;DrawRectangle( rotatePen, 140, 10, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#5\">        public void RotateTransform_Example1(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen rotatePen = new Pen(Color.Black, 5);\n                     \n            // Draw a rectangle with rotatePen.\n            e.Graphics.DrawRectangle(rotatePen, 10, 10, 100, 100);\n                     \n            // Scale rotatePen by 2X in the x-direction.\n            rotatePen.ScaleTransform(2, 1);\n                     \n            // Rotate rotatePen 90 degrees clockwise.\n            rotatePen.RotateTransform(90);\n                     \n            // Draw a second rectangle with rotatePen.\n            e.Graphics.DrawRectangle(rotatePen, 140, 10, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#5\">    Public Sub RotateTransform_Example1(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim rotatePen As New Pen(Color.Black, 5)\n\n        &#39; Draw a rectangle with rotatePen.\n        e.Graphics.DrawRectangle(rotatePen, 10, 10, 100, 100)\n\n        &#39; Scale rotatePen by 2X in the x-direction.\n        rotatePen.ScaleTransform(2, 1)\n\n        &#39; Rotate rotatePen 90 degrees clockwise.\n        rotatePen.RotateTransform(90)\n\n        &#39; Draw a second rectangle with rotatePen.\n        e.Graphics.DrawRectangle(rotatePen, 140, 10, 100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_RotateTransform_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_RotateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateTransform(Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates the local geometric transformation by the specified angle in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of rotation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies whether to append or prepend the rotation matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Scales the pen by 2 times in the x-axis direction.  </p>\n</li>\n<li><p>Draws a rectangle using the pen.  </p>\n</li>\n<li><p>Rotates the pen 90 degrees clockwise.  </p>\n</li>\n<li><p>Draws a second rectangle to demonstrate the difference.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#6\">public:\n   void RotateTransform_Example2( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ rotatePen = gcnew Pen( Color::Black,5.0f );\n      \n      // Scale rotatePen by 2X in the x-direction.\n      rotatePen-&gt;ScaleTransform( 2, 1 );\n      \n      // Draw a rectangle with rotatePen.\n      e-&gt;Graphics-&gt;DrawRectangle( rotatePen, 10, 10, 100, 100 );\n      \n      // Rotate rotatePen 90 degrees clockwise.\n      rotatePen-&gt;RotateTransform( 90, MatrixOrder::Append );\n      \n      // Draw a second rectangle with rotatePen.\n      e-&gt;Graphics-&gt;DrawRectangle( rotatePen, 120, 10, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#6\">        public void RotateTransform_Example2(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen rotatePen = new Pen(Color.Black, 5);\n                     \n            // Scale rotatePen by 2X in the x-direction.\n            rotatePen.ScaleTransform(2, 1);\n                     \n            // Draw a rectangle with rotatePen.\n            e.Graphics.DrawRectangle(rotatePen, 10, 10, 100, 100);\n                     \n            // Rotate rotatePen 90 degrees clockwise.\n            rotatePen.RotateTransform(90, MatrixOrder.Append);\n                     \n            // Draw a second rectangle with rotatePen.\n            e.Graphics.DrawRectangle(rotatePen, 120, 10, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#6\">    Public Sub RotateTransform_Example2(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim rotatePen As New Pen(Color.Black, 5)\n\n        &#39; Scale rotatePen by 2X in the x-direction.\n        rotatePen.ScaleTransform(2, 1)\n\n        &#39; Draw a rectangle with rotatePen.\n        e.Graphics.DrawRectangle(rotatePen, 10, 10, 100, 100)\n\n        &#39; Rotate rotatePen 90 degrees clockwise.\n        rotatePen.RotateTransform(90, MatrixOrder.Append)\n\n        &#39; Draw a second rectangle with rotatePen.\n        e.Graphics.DrawRectangle(rotatePen, 120, 10, 100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_ScaleTransform_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_ScaleTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleTransform(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleTransform (float sx, float sy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The factor by which to scale the transformation in the x-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The factor by which to scale the transformation in the y-axis direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<p> Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n<p> Draws a rectangle using the pen.  </p>\n<p> Scales the pen by 2 times in the x-axis direction.  </p>\n<p> Draws a second rectangle to demonstrate the difference.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#7\">public:\n   void ScaleTransform_Example1( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ scalePen = gcnew Pen( Color::Black,5.0f );\n      \n      // Draw a rectangle with scalePen.\n      e-&gt;Graphics-&gt;DrawRectangle( scalePen, 10, 10, 100, 100 );\n      \n      // Scale scalePen by 2X in the x-direction.\n      scalePen-&gt;ScaleTransform( 2, 1 );\n      \n      // Draw a second rectangle with rotatePen.\n      e-&gt;Graphics-&gt;DrawRectangle( scalePen, 120, 10, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#7\">        public void ScaleTransform_Example1(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen scalePen = new Pen(Color.Black, 5);\n                     \n            // Draw a rectangle with scalePen.\n            e.Graphics.DrawRectangle(scalePen, 10, 10, 100, 100);\n                     \n            // Scale scalePen by 2X in the x-direction.\n            scalePen.ScaleTransform(2, 1);\n                     \n            // Draw a second rectangle with rotatePen.\n            e.Graphics.DrawRectangle(scalePen, 120, 10, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#7\">    Public Sub ScaleTransform_Example1(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim scalePen As New Pen(Color.Black, 5)\n\n        &#39; Draw a rectangle with scalePen.\n        e.Graphics.DrawRectangle(scalePen, 10, 10, 100, 100)\n\n        &#39; Scale scalePen by 2X in the x-direction.\n        scalePen.ScaleTransform(2, 1)\n\n        &#39; Draw a second rectangle with rotatePen.\n        e.Graphics.DrawRectangle(scalePen, 120, 10, 100, 100)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_ScaleTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_ScaleTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleTransform(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Scales the local geometric transformation by the specified factors in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The factor by which to scale the transformation in the x-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The factor by which to scale the transformation in the y-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies whether to append or prepend the scaling matrix.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.  </p>\n</li>\n<li><p>Draws a rectangle using the pen.  </p>\n</li>\n<li><p>Scales the pen by 2 times in the x-axis direction.  </p>\n</li>\n<li><p>Draws a second rectangle to demonstrate the difference.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#8\">public:\n   void ScaleTransform_Example2( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object.\n      Pen^ scalePen = gcnew Pen( Color::Black,5.0f );\n      \n      // Draw a rectangle with scalePen.\n      e-&gt;Graphics-&gt;DrawRectangle( scalePen, 10, 10, 100, 100 );\n      \n      // Scale scalePen by 2X in the x-direction.\n      scalePen-&gt;ScaleTransform( 2, 1, MatrixOrder::Prepend );\n      \n      // Draw a second rectangle with rotatePen.\n      e-&gt;Graphics-&gt;DrawRectangle( scalePen, 120, 10, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#8\">        public void ScaleTransform_Example2(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object.\n            Pen scalePen = new Pen(Color.Black, 5);\n                     \n            // Draw a rectangle with scalePen.\n            e.Graphics.DrawRectangle(scalePen, 10, 10, 100, 100);\n                     \n            // Scale scalePen by 2X in the x-direction.\n            scalePen.ScaleTransform(2, 1, MatrixOrder.Prepend);\n                     \n            // Draw a second rectangle with rotatePen.\n            e.Graphics.DrawRectangle(scalePen, 120, 10, 100, 100);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#8\">    Public Sub ScaleTransform_Example2(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object.\n        Dim scalePen As New Pen(Color.Black, 5)\n\n        &#39; Draw a rectangle with scalePen.\n        e.Graphics.DrawRectangle(scalePen, 10, 10, 100, 100)\n\n        &#39; Scale scalePen by 2X in the x-direction.\n        scalePen.ScaleTransform(2, 1, MatrixOrder.Prepend)\n\n        &#39; Draw a second rectangle with rotatePen.\n        e.Graphics.DrawRectangle(scalePen, 120, 10, 100, 100)\n    End Sub\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_SetLineCap_System_Drawing_Drawing2D_LineCap_System_Drawing_Drawing2D_LineCap_System_Drawing_Drawing2D_DashCap_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_SetLineCap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLineCap(LineCap,LineCap,DashCap)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the values that determine the style of cap used to end lines drawn by this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>startCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> that represents the cap style to use at the beginning of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> that represents the cap style to use at the end of lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dashCap</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.dashcap\" data-linktype=\"relative-path\">DashCap</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.linecap\" data-linktype=\"relative-path\">LineCap</a> that represents the cap style to use at the beginning or end of dashed lines drawn with this <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, which is a parameter of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler. The code creates a <a class=\"xref\" href=\"system.drawing.pen\" data-linktype=\"relative-path\">Pen</a> and sets it to draw arrow anchor caps at the beginning of lines:  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.ClassicPenExamples#9\">public:\n   void SetLineCap_Example( PaintEventArgs^ e )\n   {\n      \n      // Create a Pen object with a dash pattern.\n      Pen^ capPen = gcnew Pen( Color::Black,5.0f );\n      capPen-&gt;DashStyle = DashStyle::Dash;\n      \n      // Set the start and end caps for capPen.\n      capPen-&gt;SetLineCap( LineCap::ArrowAnchor, LineCap::Flat, DashCap::Flat );\n      \n      // Draw a line with capPen.\n      e-&gt;Graphics-&gt;DrawLine( capPen, 10, 10, 200, 10 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.ClassicPenExamples#9\">        public void SetLineCap_Example(PaintEventArgs e)\n        {\n                     \n            // Create a Pen object with a dash pattern.\n            Pen capPen = new Pen(Color.Black, 5);\n            capPen.DashStyle = DashStyle.Dash;\n                     \n            // Set the start and end caps for capPen.\n            capPen.SetLineCap(LineCap.ArrowAnchor, LineCap.Flat, DashCap.Flat);\n                     \n            // Draw a line with capPen.\n            e.Graphics.DrawLine(capPen, 10, 10, 200, 10);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.ClassicPenExamples#9\">    Public Sub SetLineCap_Example(ByVal e As PaintEventArgs)\n\n        &#39; Create a Pen object with a dash pattern.\n        Dim capPen As New Pen(Color.Black, 5)\n        capPen.DashStyle = DashStyle.Dash\n\n        &#39; Set the start and end caps for capPen.\n        capPen.SetLineCap(LineCap.ArrowAnchor, LineCap.Flat, DashCap.Flat)\n\n        &#39; Draw a line with capPen.\n        e.Graphics.DrawLine(capPen, 10, 10, 200, 10)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_TranslateTransform_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_TranslateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateTransform(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateTransform (float dx, float dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in x.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in y.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Pen_TranslateTransform_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Pen_TranslateTransform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TranslateTransform(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Translates the local geometric transformation by the specified dimensions in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in x.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the translation in y.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The order (prepend or append) in which to apply the translation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Pen.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Pen.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Alignment\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Brush\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Color\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.CompoundArray\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.CustomEndCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.CustomStartCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.DashCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.DashOffset\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.DashPattern\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.DashStyle\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.EndCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.LineJoin\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.MiterLimit\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.MultiplyTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.PenType\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.ResetTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.RotateTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.ScaleTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.SetLineCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.StartCap\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Transform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.TranslateTransform\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Pen.Width\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f19e9003-b80d-a9d0-acd9-0ce201c5339a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines an object used to draw lines and curves. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Pen\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Pen.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Pen.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Pen","System.Drawing.Pen..ctor","System.Drawing.Pen.Alignment","System.Drawing.Pen.Brush","System.Drawing.Pen.Clone","System.Drawing.Pen.Color","System.Drawing.Pen.CompoundArray","System.Drawing.Pen.CustomEndCap","System.Drawing.Pen.CustomStartCap","System.Drawing.Pen.DashCap","System.Drawing.Pen.DashOffset","System.Drawing.Pen.DashPattern","System.Drawing.Pen.DashStyle","System.Drawing.Pen.Dispose","System.Drawing.Pen.EndCap","System.Drawing.Pen.Finalize","System.Drawing.Pen.LineJoin","System.Drawing.Pen.MiterLimit","System.Drawing.Pen.MultiplyTransform","System.Drawing.Pen.PenType","System.Drawing.Pen.ResetTransform","System.Drawing.Pen.RotateTransform","System.Drawing.Pen.ScaleTransform","System.Drawing.Pen.SetLineCap","System.Drawing.Pen.StartCap","System.Drawing.Pen.Transform","System.Drawing.Pen.TranslateTransform","System.Drawing.Pen.Width"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Pen","System::Drawing::Pen","System.Drawing.Pen.#ctor","System::Drawing::Pen::#ctor","System.Drawing.Pen.Alignment","System::Drawing::Pen::Alignment","System.Drawing.Pen.Brush","System::Drawing::Pen::Brush","System.Drawing.Pen.Clone","System::Drawing::Pen::Clone","System.Drawing.Pen.Color","System::Drawing::Pen::Color","System.Drawing.Pen.CompoundArray","System::Drawing::Pen::CompoundArray","System.Drawing.Pen.CustomEndCap","System::Drawing::Pen::CustomEndCap","System.Drawing.Pen.CustomStartCap","System::Drawing::Pen::CustomStartCap","System.Drawing.Pen.DashCap","System::Drawing::Pen::DashCap","System.Drawing.Pen.DashOffset","System::Drawing::Pen::DashOffset","System.Drawing.Pen.DashPattern","System::Drawing::Pen::DashPattern","System.Drawing.Pen.DashStyle","System::Drawing::Pen::DashStyle","System.Drawing.Pen.Dispose","System::Drawing::Pen::Dispose","System.Drawing.Pen.EndCap","System::Drawing::Pen::EndCap","System.Drawing.Pen.Finalize","System::Drawing::Pen::Finalize","System.Drawing.Pen.LineJoin","System::Drawing::Pen::LineJoin","System.Drawing.Pen.MiterLimit","System::Drawing::Pen::MiterLimit","System.Drawing.Pen.MultiplyTransform","System::Drawing::Pen::MultiplyTransform","System.Drawing.Pen.PenType","System::Drawing::Pen::PenType","System.Drawing.Pen.ResetTransform","System::Drawing::Pen::ResetTransform","System.Drawing.Pen.RotateTransform","System::Drawing::Pen::RotateTransform","System.Drawing.Pen.ScaleTransform","System::Drawing::Pen::ScaleTransform","System.Drawing.Pen.SetLineCap","System::Drawing::Pen::SetLineCap","System.Drawing.Pen.StartCap","System::Drawing::Pen::StartCap","System.Drawing.Pen.Transform","System::Drawing::Pen::Transform","System.Drawing.Pen.TranslateTransform","System::Drawing::Pen::TranslateTransform","System.Drawing.Pen.Width","System::Drawing::Pen::Width"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f19e9003-b80d-a9d0-acd9-0ce201c5339a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing/Pen.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Pen class | Microsoft Docs","_op_ogTitle":"Pen class","description":"Defines an object used to draw lines and curves. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing/toc.json","toc_rel":"_splitted/System.Drawing/toc.json","source_url":"","ms.assetid":"System.Drawing.Pen","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.pen","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.pen","fileRelativePath":"System.Drawing.Pen.html"},"themesRelativePathToOutputRoot":"_themes/"}