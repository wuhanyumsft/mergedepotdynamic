{"content":"    \r\n    <h1 id=\"System_Runtime_Serialization_FormatterServices\">\r\n      <span class=\"lang-csharp\">FormatterServices</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides static methods to aid with the implementation of a <a class=\"xref\" href=\"system.runtime.serialization.formatter\" data-linktype=\"relative-path\">Formatter</a> for serialization. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic static class FormatterServices</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FormatterServices</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_CheckTypeSecurity_System_Type_System_Runtime_Serialization_Formatters_TypeFilterLevel_\" data-linktype=\"self-bookmark\">CheckTypeSecurity(Type,TypeFilterLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> can be deserialized with the <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> property set to <code>Low</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetObjectData_System_Object_System_Reflection_MemberInfo___\" data-linktype=\"self-bookmark\">GetObjectData(Object,MemberInfo[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Extracts the data from the specified object and returns it as an array of objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetSafeUninitializedObject_System_Type_\" data-linktype=\"self-bookmark\">GetSafeUninitializedObject(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the specified object type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetSerializableMembers_System_Type_\" data-linktype=\"self-bookmark\">GetSerializableMembers(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all the serializable members for a class of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetSerializableMembers_System_Type_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetSerializableMembers(Type,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all the serializable members for a class of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and in the provided <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetSurrogateForCyclicalReference_System_Runtime_Serialization_ISerializationSurrogate_\" data-linktype=\"self-bookmark\">GetSurrogateForCyclicalReference(ISerializationSurrogate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a serialization surrogate for the specified <a class=\"xref\" href=\"system.runtime.serialization.iserializationsurrogate\" data-linktype=\"relative-path\">ISerializationSurrogate</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetTypeFromAssembly_System_Reflection_Assembly_System_String_\" data-linktype=\"self-bookmark\">GetTypeFromAssembly(Assembly,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Looks up the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the specified object in the provided <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_GetUninitializedObject_System_Type_\" data-linktype=\"self-bookmark\">GetUninitializedObject(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the specified object type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Serialization_FormatterServices_PopulateObjectMembers_System_Object_System_Reflection_MemberInfo___System_Object___\" data-linktype=\"self-bookmark\">PopulateObjectMembers(Object,MemberInfo[],Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates the specified object with values for each field drawn from the data array of objects.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_CheckTypeSecurity_System_Type_System_Runtime_Serialization_Formatters_TypeFilterLevel_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_CheckTypeSecurity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckTypeSecurity(Type,TypeFilterLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> can be deserialized with the <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> property set to <code>Low</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>t</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to check for the ability to deserialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The <code>t</code> parameter is an advanced type and cannot be deserialized when the <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> property is set to <code>Low</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to determine whether a specified type can be deserialized when the <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> property is set to <code>Low</code>.  </p>\n<p> .NET Framework remoting provides two levels of automatic deserialization, <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> and <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a>. <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality. The <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> deserialization level supports automatic deserialization of all types that remoting supports in all situations. For more information about the.NET Framework remoting types that <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> and <a class=\"xref\" href=\"system.runtime.serialization.formatters.typefilterlevel\" data-linktype=\"relative-path\">TypeFilterLevel</a> support, see <a href=\"http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b\" data-linktype=\"external\">&#91;&lt;topic://cpconAutomaticDeserializationInNETRemoting&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices\" data-linktype=\"relative-path\">FormatterServices</a> class to serialize or deserialize an object where the base class does not implement <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> but the derived class does.  </p>\n<pre><code class=\"lang-cs\" name=\"FormatterServices#1\">using System;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Reflection;\nusing System.Security.Permissions;\n\n\n// Person is a serializable base class.\n[Serializable]\npublic class Person\n{\n    private String title;\n\n    public Person(String title)\n    {\n        this.title = title;\n    }\n\n    public override String ToString()\n    {\n        return String.Format(&quot;{0}&quot;, title);\n    }\n}\n\n// Employee is a serializable class derived from Person.\n[Serializable]\npublic class Employee : Person\n{\n    private String title;\n\n    public Employee(String title) : base(&quot;Person&quot;)\n    {\n        this.title = title;\n    }\n\n    public override String ToString()\n    {\n        return String.Format(&quot;{0} -&gt; {1}&quot;, title, base.ToString());\n    }\n}\n\n// Manager is a serializable and ISerializable class derived from Employee.\n[Serializable]\npublic class Manager : Employee, ISerializable\n{\n    private String title;\n\n    public Manager() : base(&quot;Employee&quot;) \n    {\n        this.title = &quot;Manager&quot;;\n    }\n\n    [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)]\n    public void GetObjectData(SerializationInfo info, StreamingContext context)\n    {\n\n        // Serialize the desired values for this class.\n        info.AddValue(&quot;title&quot;, title);\n\n        // Get the set of serializable members for the class and base classes.\n        Type thisType = this.GetType();\n        MemberInfo[] mi = FormatterServices.GetSerializableMembers(thisType, context);\n\n        // Serialize the base class&#39;s fields to the info object.\n        for (Int32 i = 0; i &lt; mi.Length; i++)\n        {\n            // Do not serialize fields for this class.\n            if (mi[i].DeclaringType == thisType) continue;\n\n            // Skip this field if it is marked NonSerialized.\n            if (Attribute.IsDefined(mi[i], typeof(NonSerializedAttribute))) continue;\n         \n            // Get the value of this field and add it to the SerializationInfo object.\n            info.AddValue(mi[i].Name, ((FieldInfo) mi[i]).GetValue(this));\n        }\n\n        // Call the method below to see the contents of the SerializationInfo object.\n        DisplaySerializationInfo(info);\n    }\n \n    private void DisplaySerializationInfo(SerializationInfo info)\n    {\n        SerializationInfoEnumerator e = info.GetEnumerator();\n        Console.WriteLine(&quot;Values in the SerializationInfo:&quot;);\n        while (e.MoveNext())\n        {\n            Console.WriteLine(&quot;Name={0}, ObjectType={1}, Value={2}&quot;, e.Name, e.ObjectType, e.Value);\n        }\n    }\n\n    [SecurityPermissionAttribute(SecurityAction.Demand, Flags=SecurityPermissionFlag.SerializationFormatter)]\n    protected Manager(SerializationInfo info, StreamingContext context) : base(null)\n    {\n\n        // Get the set of serializable members for the class and base classes.\n        Type thisType = this.GetType();\n        MemberInfo[] mi = FormatterServices.GetSerializableMembers(thisType, context);\n\n        // Deserialize the base class&#39;s fields from the info object.\n        for (Int32 i = 0; i &lt; mi.Length; i++)\n        {\n            // Do not deserialize fields for this class.\n            if (mi[i].DeclaringType == thisType) continue;\n\n            // For easier coding, treat the member as a FieldInfo object\n            FieldInfo fi = (FieldInfo) mi[i];\n\n            // Skip this field if it is marked NonSerialized.\n            if (Attribute.IsDefined(mi[i], typeof(NonSerializedAttribute))) continue;\n\n            // Get the value of this field from the SerializationInfo object.\n            fi.SetValue(this, info.GetValue(fi.Name, fi.FieldType));\n        }\n\n        // Deserialize the values that were serialized for this class.\n        title = info.GetString(&quot;title&quot;);\n    }\n\n    public override String ToString()\n    {\n        return String.Format(&quot;{0} -&gt; {1}&quot;, title, base.ToString());\n    }\n}\n\n\npublic sealed class App\n{\n    public static void Main()\n    {\n        Run();\n    }\n\n    public static void Run()\n    {\n        using (Stream stream = new MemoryStream())\n\t{\n            IFormatter formatter = new BinaryFormatter();\n            Manager m = new Manager();\n            Console.WriteLine(m.ToString());\n            formatter.Serialize(stream, m);\n\n            stream.Position = 0;\n            m = (Manager) formatter.Deserialize(stream);\n            Console.WriteLine(m.ToString());\n        }\n    }\n}\n// This code produces the following output.\n//\n//  Manager -&gt; Employee -&gt; Person\n//  Values in the SerializaitonInfo:\n//  Name=title, ObjectType=System.String, Value=Manager\n//  Name=Employee+title, ObjectType=System.String, Value=Employee\n//  Name=Person+title, ObjectType=System.String, Value=Person\n//  Manager -&gt; Employee -&gt; Person\n</code></pre><pre><code class=\"lang-cpp\" name=\"FormatterServices#1\">using namespace System;\nusing namespace System::IO;\nusing namespace System::Runtime::Serialization;\nusing namespace System::Runtime::Serialization::Formatters;\nusing namespace System::Runtime::Serialization::Formatters::Binary;\nusing namespace System::Reflection;\nusing namespace System::Security::Permissions;\n\n// Person is a serializable base class.\n[Serializable]\npublic ref class Person\n{\nprivate:\n    String^ title;\n\npublic:\n    Person(String^ title)\n    {\n        this-&gt;title = title;\n    }\n\npublic:\n    virtual String^ ToString() override\n    {\n        return String::Format(&quot;{0}&quot;, title);\n    }\n};\n\n// Employee is a serializable class derived from Person.\n[Serializable]\npublic ref class Employee : public Person\n{\nprivate:\n    String^ title;\n\npublic:\n    Employee(String^ title) : Person(&quot;Person&quot;)\n    {\n        this-&gt;title = title;\n    }\n\npublic:\n    virtual String^ ToString() override\n    {\n        return String::Format(&quot;{0} -&gt; {1}&quot;, title, Person::ToString());\n    }\n};\n\n// Manager is a serializable and ISerializable class derived from Employee.\n[Serializable]\nref class Manager : public Employee, public ISerializable\n{\nprivate:\n    String^ title;\n\npublic:\n    Manager() : Employee(&quot;Employee&quot;)\n    {\n        this-&gt;title = &quot;Manager&quot;;\n    }\n\npublic:\n    [SecurityPermission(SecurityAction::Demand, SerializationFormatter = true)]\n    virtual void GetObjectData(SerializationInfo^ info, StreamingContext context)\n    {\n        // Serialize the desired values for this class.\n        info-&gt;AddValue(&quot;title&quot;, title);\n\n        // Get the set of serializable members for the class and base classes.\n        Type^ thisType = this-&gt;GetType();\n        array&lt;MemberInfo^&gt;^ serializableMembers =\n            FormatterServices::GetSerializableMembers(thisType, context);\n\n        // Serialize the base class&#39;s fields to the info object.\n        for each (MemberInfo^ serializableMember in serializableMembers)\n        {\n            // Do not serialize fields for this class.\n            if (serializableMember-&gt;DeclaringType != thisType)\n            {\n                // Skip this field if it is marked NonSerialized.\n                if (!(Attribute::IsDefined(serializableMember,\n                    NonSerializedAttribute::typeid)))\n                {\n                    // Get the value of this field and add it to the\n                    // SerializationInfo object.\n                    info-&gt;AddValue(serializableMember-&gt;Name,\n                        ((FieldInfo^)serializableMember)-&gt;GetValue(this));\n                }\n            }\n        }\n\n        // Call the method below to see the contents of the\n        // SerializationInfo object.\n        DisplaySerializationInfo(info);\n    }\n\nprivate:\n    static void DisplaySerializationInfo(SerializationInfo^ info)\n    {\n        Console::WriteLine(&quot;Values in the SerializationInfo:&quot;);\n        for each (SerializationEntry^ infoEntry in info)\n        {\n            Console::WriteLine(&quot;Name={0}, ObjectType={1}, Value={2}&quot;,\n                infoEntry-&gt;Name, infoEntry-&gt;ObjectType, infoEntry-&gt;Value);\n        }\n    }\n\nprotected:\n    Manager(SerializationInfo^ info,\n        StreamingContext context) : Employee(nullptr)\n    {\n        // Get the set of serializable members for the class and base classes.\n        Type^ thisType = this-&gt;GetType();\n        array&lt;MemberInfo^&gt;^ serializableMembers =\n            FormatterServices::GetSerializableMembers(thisType, context);\n\n        // Deserialize the base class&#39;s fields from the info object.\n        for each (MemberInfo^ serializableMember in serializableMembers)\n        {\n            // Do not deserialize fields for this class.\n            if (serializableMember-&gt;DeclaringType != thisType)\n            {\n                // For easier coding, treat the member as a FieldInfo object\n                FieldInfo^ fieldInformation = (FieldInfo^)serializableMember;\n\n                // Skip this field if it is marked NonSerialized.\n                if (!(Attribute::IsDefined(serializableMember,\n                    NonSerializedAttribute::typeid)))\n                {\n                    // Get the value of this field from the\n                    // SerializationInfo object.\n                    fieldInformation-&gt;SetValue(this,\n                        info-&gt;GetValue(fieldInformation-&gt;Name,\n                        fieldInformation-&gt;FieldType));\n                }\n            }\n        }\n\n        // Deserialize the values that were serialized for this class.\n        title = info-&gt;GetString(&quot;title&quot;);\n    }\n\npublic:\n    virtual String^ ToString() override\n    {\n        return String::Format(&quot;{0} -&gt; {1}&quot;, title, Employee::ToString());\n    }\n};\n\nint main()\n{\n    Stream^ stream = gcnew MemoryStream();\n    IFormatter^ formatter = gcnew BinaryFormatter();\n    Manager^ m = gcnew Manager();\n    Console::WriteLine(m-&gt;ToString());\n    formatter-&gt;Serialize(stream, m);\n\n    stream-&gt;Position = 0;\n    m = (Manager^) formatter-&gt;Deserialize(stream);\n    Console::WriteLine(m-&gt;ToString());\n}\n\n// This code produces the following output.\n//\n//  Manager -&gt; Employee -&gt; Person\n//  Values in the SerializaitonInfo:\n//  Name=title, ObjectType=System.String, Value=Manager\n//  Name=Employee+title, ObjectType=System.String, Value=Employee\n//  Name=Person+title, ObjectType=System.String, Value=Person\n//  Manager -&gt; Employee -&gt; Person\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetObjectData_System_Object_System_Reflection_MemberInfo___\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(Object,MemberInfo[])</div>        \r\n          </div>\r\n    \r\n            <p>Extracts the data from the specified object and returns it as an array of objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to write to the formatter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>members</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The members to extract from the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains data stored in <code>members</code> and associated with <code>obj</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>obj</code> or <code>members</code> parameter is <code>null</code>.  </p>\n<p> An element of <code>members</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element of <code>members</code> does not represent a field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For each supplied member of the <code>members</code> array the GetObjectData method extracts the value associated with the <code>obj</code> object, and returns it. The length of the returned array is the same as the length of the <code>members</code> array.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of a Book class and sets field values on the instance. The code then gets the type information using the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_GetSerializableMembers_\" data-linktype=\"relative-path\">GetSerializableMembers</a> method. The code copies the instance data into an object array using the GetObjectData method. A new uninitialized instance of the class is created using the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_GetSafeUninitializedObject_\" data-linktype=\"relative-path\">GetSafeUninitializedObject</a> method. Finally, the data from the first instance is copied into the second instance using the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_PopulateObjectMembers_\" data-linktype=\"relative-path\">PopulateObjectMembers</a> method.  </p>\n<pre><code class=\"lang-vb\" name=\"FormatterServices_PopulateObjects#1\">Imports System\nImports System.Collections\nImports System.Runtime.Serialization\nImports System.IO\nImports System.Reflection\nImports System.Security.Permissions\n\n&lt;Assembly: SecurityPermission(SecurityAction.RequestMinimum)&gt; \n\n&#39; The SerializableAttribute specifies that instances of the class \n&#39; can be serialized by the BinaryFormatter or SoapFormatter.\n&lt;Serializable()&gt; _\nClass Book\n    Public Title As String\n    Public Author As String\n\n    &#39; Constructor for setting new values.\n    Public Sub New(ByVal newTitle As String, _\n    ByVal newAuthor As String)\n        Title = newTitle\n        Author = newAuthor\n\n    End Sub\nEnd Class\n\n&lt;SecurityPermission(SecurityAction.Demand)&gt; _\n               Public NotInheritable Class Test\n\n    Public Shared Sub Main()\n        Try\n            Run()\n        Catch exc As System.Exception\n            Console.WriteLine(&quot;{0}: {1}&quot;, _\n            exc.Message, exc.StackTrace)\n        Finally\n            Console.WriteLine(&quot;Press &lt;Enter&gt; to exit....&quot;)\n            Console.ReadLine()\n        End Try\n\n    End Sub\n\n\n    Shared Sub Run()\n        &#39; Create an instance of a Book class \n        &#39; with a title and author.\n        Dim Book1 As New Book(&quot;Book Title 1&quot;, &quot;Masato Kawai&quot;)\n\n        &#39; Store data about the serializable members in a \n        &#39; MemberInfo array. The MemberInfo type holds \n        &#39; only type data, not instance data.\n        Dim members As MemberInfo() = _\n           FormatterServices.GetSerializableMembers(GetType(Book))\n\n        &#39; Copy the data from the first book into an \n        &#39; array of objects.\n        Dim data As Object() = _\n            FormatterServices.GetObjectData(Book1, members)\n\n        &#39; Create an uninitialized instance of the Book class.\n        Dim Book1Copy As Book = _\n        CType(FormatterServices.GetSafeUninitializedObject _\n           (GetType(Book)), Book)\n\n        &#39; Call the PopuluateObjectMembers to copy the\n        &#39; data into the new Book instance.\n        FormatterServices.PopulateObjectMembers _\n        (Book1Copy, members, data)\n\n        &#39; Print the data from the copy.\n        Console.WriteLine(&quot;Title: {0}&quot;, Book1Copy.Title)\n        Console.WriteLine(&quot;Author: {0}&quot;, Book1Copy.Author)\n\n    End Sub\n\n    &#39; A private constructor is good practice on\n    &#39; a class containing only static methods.\n    Private Sub New()\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"FormatterServices_PopulateObjects#1\">using System;\nusing System.Collections;\nusing System.Runtime.Serialization;\nusing System.IO;\nusing System.Reflection;\nusing System.Security.Permissions;\n\n[assembly: SecurityPermission(SecurityAction.RequestMinimum)]\nnamespace Examples\n{\n    // The SerializableAttribute specifies that instances of the class \n    // can be serialized by the BinaryFormatter or SoapFormatter.\n    [Serializable]\n    class Book\n    {\n        public string Title;\n        public string Author;\n\n        // Constructor for setting new values.\n        public Book(string newTitle, string newAuthor)\n        {\n            Title = newTitle;\n            Author = newAuthor;\n        }\n    }\n\n    [SecurityPermission(SecurityAction.Demand)]\n    public sealed class Test\n    {\n        public static void Main()\n        {\n            try\n            {\n                Run();\n            }\n            catch (System.Exception exc)\n            {\n                Console.WriteLine(&quot;{0}: {1}&quot;, exc.Message, exc.StackTrace);\n            }\n            finally\n            {\n                Console.WriteLine(&quot;Press &lt;Enter&gt; to exit....&quot;);\n                Console.ReadLine();\n            }\n        }\n\n        \n        static void Run()\n        {\n            // Create an instance of a Book class \n            // with a title and author.\n            Book Book1 = new Book(&quot;Book Title 1&quot;,\n                &quot;Masato Kawai&quot;);\n\n            // Store data about the serializable members in a \n            // MemberInfo array. The MemberInfo type holds \n            // only type data, not instance data.\n            MemberInfo[] members =\n               FormatterServices.GetSerializableMembers\n               (typeof(Book));\n\n            // Copy the data from the first book into an \n            // array of objects.\n            object[] data =\n                FormatterServices.GetObjectData(Book1, members);\n\n            // Create an uninitialized instance of the Book class.\n            Book Book1Copy =\n                (Book)FormatterServices.GetSafeUninitializedObject\n                (typeof(Book));\n\n            // Call the PopuluateObjectMembers to copy the\n            // data into the new Book instance.\n            FormatterServices.PopulateObjectMembers\n                (Book1Copy, members, data);\n\n            // Print the data from the copy.\n            Console.WriteLine(&quot;Title: {0}&quot;, Book1Copy.Title);\n            Console.WriteLine(&quot;Author: {0}&quot;, Book1Copy.Author);\n        }\n        // A private constructor is good practice on\n        // a class containing only static methods.\n        private Test() { }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetSafeUninitializedObject_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetSafeUninitializedObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSafeUninitializedObject(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the specified object type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetSafeUninitializedObject (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of object to create.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A zeroed object of the specified type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is not a valid common language runtime type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object. GetSafeUninitializedObject should only be used for deserialization when the user intends to immediately populate all fields. It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.  </p>\n<p> GetSafeUninitializedObject converts all class level <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a> to <a href=\"http://msdn.microsoft.com/en-us/e5283e28-2366-4519-b27d-ef5c1ddc1f48\" data-linktype=\"external\">Demands</a> to ensure that all direct and indirect callers have the permissions that the demand specifies. Use GetSafeUninitializedObject to increase the level of security when deserializing from a partially trusted source. For better performance in full trust scenarios, use <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_GetUninitializedObject_\" data-linktype=\"relative-path\">GetUninitializedObject</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetSerializableMembers_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetSerializableMembers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSerializableMembers(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Gets all the serializable members for a class of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type being serialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> of the non-transient, non-static members.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties. To be included, properties must have both a getter and a setter. A class that implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates implementing the GetSerializableMembers method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices\" data-linktype=\"relative-path\">FormatterServices</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"FormatterServices#2\">    [SecurityPermission(SecurityAction.Demand, SerializationFormatter = true)]\n    public void GetObjectData(SerializationInfo info, StreamingContext context)\n    {\n\n        // Serialize the desired values for this class.\n        info.AddValue(&quot;title&quot;, title);\n\n        // Get the set of serializable members for the class and base classes.\n        Type thisType = this.GetType();\n        MemberInfo[] mi = FormatterServices.GetSerializableMembers(thisType, context);\n\n        // Serialize the base class&#39;s fields to the info object.\n        for (Int32 i = 0; i &lt; mi.Length; i++)\n        {\n            // Do not serialize fields for this class.\n            if (mi[i].DeclaringType == thisType) continue;\n\n            // Skip this field if it is marked NonSerialized.\n            if (Attribute.IsDefined(mi[i], typeof(NonSerializedAttribute))) continue;\n         \n            // Get the value of this field and add it to the SerializationInfo object.\n            info.AddValue(mi[i].Name, ((FieldInfo) mi[i]).GetValue(this));\n        }\n\n        // Call the method below to see the contents of the SerializationInfo object.\n        DisplaySerializationInfo(info);\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"FormatterServices#2\">public:\n    [SecurityPermission(SecurityAction::Demand, SerializationFormatter = true)]\n    virtual void GetObjectData(SerializationInfo^ info, StreamingContext context)\n    {\n        // Serialize the desired values for this class.\n        info-&gt;AddValue(&quot;title&quot;, title);\n\n        // Get the set of serializable members for the class and base classes.\n        Type^ thisType = this-&gt;GetType();\n        array&lt;MemberInfo^&gt;^ serializableMembers =\n            FormatterServices::GetSerializableMembers(thisType, context);\n\n        // Serialize the base class&#39;s fields to the info object.\n        for each (MemberInfo^ serializableMember in serializableMembers)\n        {\n            // Do not serialize fields for this class.\n            if (serializableMember-&gt;DeclaringType != thisType)\n            {\n                // Skip this field if it is marked NonSerialized.\n                if (!(Attribute::IsDefined(serializableMember,\n                    NonSerializedAttribute::typeid)))\n                {\n                    // Get the value of this field and add it to the\n                    // SerializationInfo object.\n                    info-&gt;AddValue(serializableMember-&gt;Name,\n                        ((FieldInfo^)serializableMember)-&gt;GetValue(this));\n                }\n            }\n        }\n\n        // Call the method below to see the contents of the\n        // SerializationInfo object.\n        DisplaySerializationInfo(info);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetSerializableMembers_System_Type_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetSerializableMembers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSerializableMembers(Type,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Gets all the serializable members for a class of the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and in the provided <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type being serialized or cloned.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The context where the serialization occurs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> of the non-transient, non-static members.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties. To be included, properties must have both a getter and a setter. A class that implements <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.  </p>\n<p> Currently, you do not need to do anything different unless <code>context</code> has the <a class=\"xref\" href=\"system.runtime.serialization.streamingcontextstates\" data-linktype=\"relative-path\">StreamingContextStates</a> value <a class=\"xref\" href=\"system.runtime.serialization.streamingcontextstates\" data-linktype=\"relative-path\">StreamingContextStates</a> set.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetSurrogateForCyclicalReference_System_Runtime_Serialization_ISerializationSurrogate_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetSurrogateForCyclicalReference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSurrogateForCyclicalReference(ISerializationSurrogate)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a serialization surrogate for the specified <a class=\"xref\" href=\"system.runtime.serialization.iserializationsurrogate\" data-linktype=\"relative-path\">ISerializationSurrogate</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>innerSurrogate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.iserializationsurrogate\" data-linktype=\"relative-path\">ISerializationSurrogate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specified surrogate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.iserializationsurrogate\" data-linktype=\"relative-path\">ISerializationSurrogate</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.runtime.serialization.iserializationsurrogate\" data-linktype=\"relative-path\">ISerializationSurrogate</a> for the specified <code>innerSurrogate</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetTypeFromAssembly_System_Reflection_Assembly_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetTypeFromAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTypeFromAssembly(Assembly,String)</div>        \r\n          </div>\r\n    \r\n            <p>Looks up the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the specified object in the provided <a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>assem</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly where you want to look up the object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the named object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>assem</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_GetUninitializedObject_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_GetUninitializedObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUninitializedObject(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the specified object type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetUninitializedObject (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of object to create.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A zeroed object of the specified type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object. The current method should only be used for deserialization when the user intends to immediately populate all fields. It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot use the GetUninitializedObject method to create instances of types that derive from the <a class=\"xref\" href=\"system.contextboundobject\" data-linktype=\"relative-path\">ContextBoundObject</a> class.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Serialization_FormatterServices_PopulateObjectMembers_System_Object_System_Reflection_MemberInfo___System_Object___\">\r\n    \r\n            <a id=\"System_Runtime_Serialization_FormatterServices_PopulateObjectMembers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PopulateObjectMembers(Object,MemberInfo[],Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Populates the specified object with values for each field drawn from the data array of objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to populate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>members</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that describes which fields and properties to populate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that specifies the values for each field and property to populate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The newly populated object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>obj</code>, <code>members</code>, or <code>data</code> parameter is <code>null</code>.  </p>\n<p> An element of <code>members</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The length of <code>members</code> does not match the length of <code>data</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationexception\" data-linktype=\"relative-path\">SerializationException</a></div>\r\n                  </div>\r\n                  <p>An element of <code>members</code> is not an instance of <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an element in <code>data</code> is <code>null</code>, PopulateObjectMembers does not write anything to that field.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of a Book class and sets field values on the instance. The code then gets the type information using the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_GetSerializableMembers_\" data-linktype=\"relative-path\">GetSerializableMembers</a> method. The code copies the instance data into an object array using the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_GetObjectData_\" data-linktype=\"relative-path\">GetObjectData</a> method. A new uninitialized instance of the class is created using the <a class=\"xref\" href=\"system.runtime.serialization.formatterservices#System_Runtime_Serialization_FormatterServices_GetSafeUninitializedObject_\" data-linktype=\"relative-path\">GetSafeUninitializedObject</a> method. Finally, the data from the first instance is copied into the second instance using the PopulateObjectMembers method.  </p>\n<pre><code class=\"lang-vb\" name=\"FormatterServices_PopulateObjects#1\">Imports System\nImports System.Collections\nImports System.Runtime.Serialization\nImports System.IO\nImports System.Reflection\nImports System.Security.Permissions\n\n&lt;Assembly: SecurityPermission(SecurityAction.RequestMinimum)&gt; \n\n&#39; The SerializableAttribute specifies that instances of the class \n&#39; can be serialized by the BinaryFormatter or SoapFormatter.\n&lt;Serializable()&gt; _\nClass Book\n    Public Title As String\n    Public Author As String\n\n    &#39; Constructor for setting new values.\n    Public Sub New(ByVal newTitle As String, _\n    ByVal newAuthor As String)\n        Title = newTitle\n        Author = newAuthor\n\n    End Sub\nEnd Class\n\n&lt;SecurityPermission(SecurityAction.Demand)&gt; _\n               Public NotInheritable Class Test\n\n    Public Shared Sub Main()\n        Try\n            Run()\n        Catch exc As System.Exception\n            Console.WriteLine(&quot;{0}: {1}&quot;, _\n            exc.Message, exc.StackTrace)\n        Finally\n            Console.WriteLine(&quot;Press &lt;Enter&gt; to exit....&quot;)\n            Console.ReadLine()\n        End Try\n\n    End Sub\n\n\n    Shared Sub Run()\n        &#39; Create an instance of a Book class \n        &#39; with a title and author.\n        Dim Book1 As New Book(&quot;Book Title 1&quot;, &quot;Masato Kawai&quot;)\n\n        &#39; Store data about the serializable members in a \n        &#39; MemberInfo array. The MemberInfo type holds \n        &#39; only type data, not instance data.\n        Dim members As MemberInfo() = _\n           FormatterServices.GetSerializableMembers(GetType(Book))\n\n        &#39; Copy the data from the first book into an \n        &#39; array of objects.\n        Dim data As Object() = _\n            FormatterServices.GetObjectData(Book1, members)\n\n        &#39; Create an uninitialized instance of the Book class.\n        Dim Book1Copy As Book = _\n        CType(FormatterServices.GetSafeUninitializedObject _\n           (GetType(Book)), Book)\n\n        &#39; Call the PopuluateObjectMembers to copy the\n        &#39; data into the new Book instance.\n        FormatterServices.PopulateObjectMembers _\n        (Book1Copy, members, data)\n\n        &#39; Print the data from the copy.\n        Console.WriteLine(&quot;Title: {0}&quot;, Book1Copy.Title)\n        Console.WriteLine(&quot;Author: {0}&quot;, Book1Copy.Author)\n\n    End Sub\n\n    &#39; A private constructor is good practice on\n    &#39; a class containing only static methods.\n    Private Sub New()\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"FormatterServices_PopulateObjects#1\">using System;\nusing System.Collections;\nusing System.Runtime.Serialization;\nusing System.IO;\nusing System.Reflection;\nusing System.Security.Permissions;\n\n[assembly: SecurityPermission(SecurityAction.RequestMinimum)]\nnamespace Examples\n{\n    // The SerializableAttribute specifies that instances of the class \n    // can be serialized by the BinaryFormatter or SoapFormatter.\n    [Serializable]\n    class Book\n    {\n        public string Title;\n        public string Author;\n\n        // Constructor for setting new values.\n        public Book(string newTitle, string newAuthor)\n        {\n            Title = newTitle;\n            Author = newAuthor;\n        }\n    }\n\n    [SecurityPermission(SecurityAction.Demand)]\n    public sealed class Test\n    {\n        public static void Main()\n        {\n            try\n            {\n                Run();\n            }\n            catch (System.Exception exc)\n            {\n                Console.WriteLine(&quot;{0}: {1}&quot;, exc.Message, exc.StackTrace);\n            }\n            finally\n            {\n                Console.WriteLine(&quot;Press &lt;Enter&gt; to exit....&quot;);\n                Console.ReadLine();\n            }\n        }\n\n        \n        static void Run()\n        {\n            // Create an instance of a Book class \n            // with a title and author.\n            Book Book1 = new Book(&quot;Book Title 1&quot;,\n                &quot;Masato Kawai&quot;);\n\n            // Store data about the serializable members in a \n            // MemberInfo array. The MemberInfo type holds \n            // only type data, not instance data.\n            MemberInfo[] members =\n               FormatterServices.GetSerializableMembers\n               (typeof(Book));\n\n            // Copy the data from the first book into an \n            // array of objects.\n            object[] data =\n                FormatterServices.GetObjectData(Book1, members);\n\n            // Create an uninitialized instance of the Book class.\n            Book Book1Copy =\n                (Book)FormatterServices.GetSafeUninitializedObject\n                (typeof(Book));\n\n            // Call the PopuluateObjectMembers to copy the\n            // data into the new Book instance.\n            FormatterServices.PopulateObjectMembers\n                (Book1Copy, members, data);\n\n            // Print the data from the copy.\n            Console.WriteLine(&quot;Title: {0}&quot;, Book1Copy.Title);\n            Console.WriteLine(&quot;Author: {0}&quot;, Book1Copy.Author);\n        }\n        // A private constructor is good practice on\n        // a class containing only static methods.\n        private Test() { }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.FormatterServices.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.FormatterServices.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.CheckTypeSecurity\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.GetSerializableMembers\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.GetUninitializedObject\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Serialization.FormatterServices.PopulateObjectMembers\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"339d42bb-a743-44f6-0024-39cfe2f6b59f\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Serialization\\FormatterServices.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides static methods to aid with the implementation of a  for serialization. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Serialization.FormatterServices\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Serialization.FormatterServices.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Serialization.FormatterServices.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Serialization.FormatterServices","System.Runtime.Serialization.FormatterServices.CheckTypeSecurity","System.Runtime.Serialization.FormatterServices.GetObjectData","System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject","System.Runtime.Serialization.FormatterServices.GetSerializableMembers","System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference","System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly","System.Runtime.Serialization.FormatterServices.GetUninitializedObject","System.Runtime.Serialization.FormatterServices.PopulateObjectMembers"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Serialization.FormatterServices","System::Runtime::Serialization::FormatterServices","System.Runtime.Serialization.FormatterServices.CheckTypeSecurity","System::Runtime::Serialization::FormatterServices::CheckTypeSecurity","System.Runtime.Serialization.FormatterServices.GetObjectData","System::Runtime::Serialization::FormatterServices::GetObjectData","System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject","System::Runtime::Serialization::FormatterServices::GetSafeUninitializedObject","System.Runtime.Serialization.FormatterServices.GetSerializableMembers","System::Runtime::Serialization::FormatterServices::GetSerializableMembers","System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference","System::Runtime::Serialization::FormatterServices::GetSurrogateForCyclicalReference","System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly","System::Runtime::Serialization::FormatterServices::GetTypeFromAssembly","System.Runtime.Serialization.FormatterServices.GetUninitializedObject","System::Runtime::Serialization::FormatterServices::GetUninitializedObject","System.Runtime.Serialization.FormatterServices.PopulateObjectMembers","System::Runtime::Serialization::FormatterServices::PopulateObjectMembers"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"339d42bb-a743-44f6-0024-39cfe2f6b59f","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.Serialization\\FormatterServices.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Serialization/FormatterServices.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FormatterServices class | Microsoft Docs","_op_ogTitle":"FormatterServices class","description":"Provides static methods to aid with the implementation of a  for serialization. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Runtime.Serialization/toc.json","toc_rel":"_splitted/System.Runtime.Serialization/toc.json","source_url":"","ms.assetid":"System.Runtime.Serialization.FormatterServices","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.formatterservices","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.serialization.formatterservices","fileRelativePath":"System.Runtime.Serialization.FormatterServices.html"},"themesRelativePathToOutputRoot":"_themes/"}