{"content":"    \r\n    <h1 id=\"System_Web_Compilation_ClientBuildManagerParameter\">\r\n      <span class=\"lang-csharp\">ClientBuildManagerParameter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains values passed to the ASP.NET compiler during precompilation.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ClientBuildManagerParameter</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ClientBuildManagerParameter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code. For more information on precompiling an ASP.NET Web site, see <a href=\"../Topic/ASP.NET%20Web%20Site%20Project%20Precompilation%20Overview.md\" data-linktype=\"relative-path\">ASP.NET Web Site Project Precompilation Overview</a>.  </p>\n<p> The ClientBuildManagerParameter class stores values that are used during precompilation. The <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags_\" data-linktype=\"relative-path\">PrecompilationFlags</a> property determines how the assembly will be built. For example, you can set <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags_\" data-linktype=\"relative-path\">PrecompilationFlags</a> to <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> to recompile any previously compiled components, or set it to <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> to permit the resulting assembly to overwrite any components in the target directory. The <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> enumerator has a <a class=\"xref\" href=\"system.flagsattribute\" data-linktype=\"relative-path\">FlagsAttribute</a> attribute that allows a bitwise combination of its member values. The <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags_\" data-linktype=\"relative-path\">PrecompilationFlags</a> property can contain more than one value from the <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> enumeration to specify a combination of precompilation behaviors.  </p>\n<p> Either the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyContainer_\" data-linktype=\"relative-path\">StrongNameKeyContainer</a> property or the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyFile_\" data-linktype=\"relative-path\">StrongNameKeyFile</a> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.  </p>\n<p> A ClientBuildManagerParameter object is passed to the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanager\" data-linktype=\"relative-path\">ClientBuildManager</a> object through the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanager#System_Web_Compilation_ClientBuildManager__ctor_\" data-linktype=\"relative-path\">ClientBuildManager</a> constructor.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_ClientBuildManagerParameter__ctor\" data-linktype=\"self-bookmark\">ClientBuildManagerParameter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter\" data-linktype=\"relative-path\">ClientBuildManagerParameter</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_ClientBuildManagerParameter_ExcludedVirtualPaths\" data-linktype=\"self-bookmark\">ExcludedVirtualPaths</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets excluded virtual paths.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags\" data-linktype=\"self-bookmark\">PrecompilationFlags</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the flags that determine precompilation behavior.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyContainer\" data-linktype=\"self-bookmark\">StrongNameKeyContainer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the key container used during compilation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyFile\" data-linktype=\"self-bookmark\">StrongNameKeyFile</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the key file used during compilation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_ClientBuildManagerParameter__ctor\">\r\n    \r\n            <a id=\"System_Web_Compilation_ClientBuildManagerParameter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientBuildManagerParameter()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter\" data-linktype=\"relative-path\">ClientBuildManagerParameter</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ClientBuildManagerParameter ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor does not initialize any property values. Those values must be set through the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyContainer_\" data-linktype=\"relative-path\">StrongNameKeyContainer</a>, <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyFile_\" data-linktype=\"relative-path\">StrongNameKeyFile</a>, and <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags_\" data-linktype=\"relative-path\">PrecompilationFlags</a> properties after the object has been created.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is part of a code example found in the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanager\" data-linktype=\"relative-path\">ClientBuildManager</a> class overview. In the example, a <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter\" data-linktype=\"relative-path\">ClientBuildManagerParameter</a> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Compilation.ClientBuildManager#2\">                _cbmParameter = New ClientBuildManagerParameter()\n                _cbmParameter.PrecompilationFlags = _flags\n                _cbmParameter.StrongNameKeyFile = _keyFile\n\n                builder = New ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Compilation.ClientBuildManager#2\">                _cbmParameter = new ClientBuildManagerParameter();\n                _cbmParameter.PrecompilationFlags = _flags;\n                _cbmParameter.StrongNameKeyFile = _keyFile;\n\n                builder = new\n                        ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_ClientBuildManagerParameter_ExcludedVirtualPaths\">\r\n    \r\n            <a id=\"System_Web_Compilation_ClientBuildManagerParameter_ExcludedVirtualPaths_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExcludedVirtualPaths</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets excluded virtual paths.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>Excluded virtual paths.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags\">\r\n    \r\n            <a id=\"System_Web_Compilation_ClientBuildManagerParameter_PrecompilationFlags_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrecompilationFlags</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the flags that determine precompilation behavior.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> for a client build.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PrecompilationFlags property determines how the assembly will be built. For example, you can set PrecompilationFlags to <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> to recompile any previously compiled components, or set it to <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> to permit the resulting assembly to overwrite any components in the target directory. The <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> enumerator has a <a class=\"xref\" href=\"system.flagsattribute\" data-linktype=\"relative-path\">FlagsAttribute</a> attribute that allows a bitwise combination of its member values. The PrecompilationFlags property can contain more than one value from the <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> enumeration to specify a combination of precompilation behaviors.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is part of a code example found in the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanager\" data-linktype=\"relative-path\">ClientBuildManager</a> class overview. In the example, a <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter\" data-linktype=\"relative-path\">ClientBuildManagerParameter</a> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Compilation.ClientBuildManager#2\">                _cbmParameter = New ClientBuildManagerParameter()\n                _cbmParameter.PrecompilationFlags = _flags\n                _cbmParameter.StrongNameKeyFile = _keyFile\n\n                builder = New ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Compilation.ClientBuildManager#2\">                _cbmParameter = new ClientBuildManagerParameter();\n                _cbmParameter.PrecompilationFlags = _flags;\n                _cbmParameter.StrongNameKeyFile = _keyFile;\n\n                builder = new\n                        ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyContainer\">\r\n    \r\n            <a id=\"System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StrongNameKeyContainer</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the key container used during compilation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StrongNameKeyContainer { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> of the value for the key container.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Either the StrongNameKeyContainer property or the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyFile_\" data-linktype=\"relative-path\">StrongNameKeyFile</a> property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is similar to the code example found in the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanager\" data-linktype=\"relative-path\">ClientBuildManager</a> class overview except that the resulting assembly will have a strong name based on the provided key container. It will precompile according to the provided <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> values.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Compilation.ClientBuildManager_2#1\">\nusing System;\nusing System.Collections.Generic;\nusing System.Text;\nusing System.Web.Compilation;\nusing System.Security;\nusing System.Security.Permissions;\n\nnamespace PrecompBuildSystem\n{\n    [PermissionSet(SecurityAction.Demand, Unrestricted = true)]\n    public class PrecompBuilder\n    {\n        private static ClientBuildManager builder;\n        private static String _vPath;\t// Virtual\n        private static String _pPath;\t// Physical\n        private static String _tPath;\t// Target\n        private static PrecompilationFlags _flags;\n        private static ClientBuildManagerParameter _cbmParameter;\n        private static String _keyContainer;\n\n        public static void Main(string[] args)\n        {\n            // Check arguments.\n            if (ValidateAndSetArguments(args))\n            {\n                _cbmParameter = new ClientBuildManagerParameter();\n                _cbmParameter.PrecompilationFlags = _flags;\n                _cbmParameter.StrongNameKeyContainer = _keyContainer;\n\n                builder = new\n                        ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter);\n                // Pre-compile.\n                if (Precompiler())\n                {\n                    Console.Write(&quot;Build succeeded. Result is at &quot; + _tPath + &quot;.&quot;);\n                }\n            }\n        }\n\n        private static bool ValidateAndSetArguments(string[] args)\n        {\n            try\n            {\n                if (args.Length &gt; 0)\n                {\n                    _vPath = args[0];\n                }\n                else\n                {\n                    _vPath = (string)AppSettingsExpressionBuilder.GetAppSetting\n                        (&quot;virtualDirectory&quot;);\n                }\n\n                if (args.Length &gt; 1)\n                {\n                    _pPath = args[1];\n                }\n                else\n                {\n                    _pPath = (string)AppSettingsExpressionBuilder.GetAppSetting\n                        (&quot;physicalDirectory&quot;);\n                }\n\n                if (args.Length &gt; 2)\n                {\n                    _tPath = args[2];\n                }\n                else\n                {\n                    _tPath = (string)AppSettingsExpressionBuilder.GetAppSetting\n                        (&quot;targetDirectory&quot;);\n                }\n\n                if (args.Length &gt; 3)\n                {\n                    string[] precompFlags = args[3].Split(&#39;|&#39;);\n                    foreach (string flag in precompFlags)\n                    {\n                        _flags |= (PrecompilationFlags)Enum.Parse\n                            (typeof(PrecompilationFlags), flag.Trim());\n                    }\n                }\n                else\n                {\n                    _flags = PrecompilationFlags.Clean |\n                        PrecompilationFlags.ForceDebug;\n                }\n\n                if (args.Length &gt; 4)\n                {\n                    _keyContainer = args[4];\n                }\n\n                return true;\n            }\n            catch (Exception e)\n            {\n                OutputErrorList(e);\n            }\n            return false;\n        }\n        private static void OutputErrorList(Exception e)\n        {\n            Console.Write(&quot;Error: &quot; + e.Message);\n        }\n\n        private static bool Precompiler()\n        {\n            try\n            {\n                builder.PrecompileApplication();\n\n                // The precompilation was successful.\n                return true;\n            }\n            catch (Exception e)\n            {\n                OutputErrorList(e);\n            }\n\n            // The precompilation failed.\n            return false;\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Compilation.ClientBuildManager_2#1\">\nImports System.Web.Compilation\nImports System.Security\nImports System.Security.Permissions\nNamespace PrecompBuildSystem\n\n    &lt;PermissionSet(SecurityAction.Demand, Unrestricted:=true)&gt; _\n    Public Class PrecompBuilder\n        Private Shared builder As ClientBuildManager\n        Private Shared _vPath As String &#39; Virtual\n        Private Shared _pPath As String &#39; Physical\n        Private Shared _tPath As String &#39; Target\n        Private Shared _flags As PrecompilationFlags\n        Private Shared _cbmParameter As ClientBuildManagerParameter\n        Private Shared _keyContainer As String\n\n        Public Shared Sub Main(ByVal args As String())\n            &#39; Check arguments.\n            If (ValidateAndSetArguments(args)) Then\n\n                _cbmParameter = New ClientBuildManagerParameter()\n                _cbmParameter.PrecompilationFlags = _flags\n                _cbmParameter.StrongNameKeyContainer = _keyContainer\n\n                builder = New ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter)\n                &#39; Pre-compile.\n                If (Precompiler()) Then\n                    Console.Write(&quot;Build succeeded. Result is at &quot; + _tPath + &quot;.&quot;)\n                End If\n            End If\n        End Sub\n\n        Private Shared Function ValidateAndSetArguments(ByVal args As String()) As Boolean\n            Try\n                If (args.Length &gt; 0) Then\n                    _vPath = args(0)\n                Else\n                    _vPath = AppSettingsExpressionBuilder.GetAppSetting(&quot;virtualDirectory&quot;)\n                End If\n\n                If (args.Length &gt; 1) Then\n                    _pPath = args(1)\n                Else\n                    _pPath = AppSettingsExpressionBuilder.GetAppSetting(&quot;physicalDirectory&quot;)\n                End If\n\n                If (args.Length &gt; 2) Then\n                    _tPath = args(2)\n                Else\n                    _tPath = AppSettingsExpressionBuilder.GetAppSetting(&quot;targetDirectory&quot;)\n                End If\n\n                If (args.Length &gt; 3) Then\n                    Dim precompFlags As String()\n                    precompFlags = args(3).Split(&quot;|&quot;c)\n                    For Each flag As String In precompFlags\n                        _flags = _flags Or [Enum].Parse(GetType(PrecompilationFlags), flag.Trim())\n                    Next\n                Else\n                    _flags = PrecompilationFlags.Clean Or PrecompilationFlags.ForceDebug\n                End If\n\n                If (args.Length &gt; 4) Then\n                    _keyContainer = args(4)\n                End If\n                Return True\n            Catch e As Exception\n                OutputErrorList(e)\n            End Try\n            Return False\n        End Function\n\n        Private Shared Sub OutputErrorList(ByVal e As Exception)\n            Console.Write(&quot;Error: &quot; + e.Message)\n        End Sub\n\n        Private Shared Function Precompiler() As Boolean\n            Try\n                builder.PrecompileApplication()\n\n                &#39; The precompilation was successful.\n                Return True\n            Catch e As Exception\n                OutputErrorList(e)\n            End Try\n\n            &#39; The precompilation failed.\n            Return False\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyFile\">\r\n    \r\n            <a id=\"System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StrongNameKeyFile</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the key file used during compilation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StrongNameKeyFile { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> of the value for the key file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Either the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter#System_Web_Compilation_ClientBuildManagerParameter_StrongNameKeyContainer_\" data-linktype=\"relative-path\">StrongNameKeyContainer</a> property or the StrongNameKeyFile property is assigned a value to create a strong-named assembly. Both values do not need to be set to create a strong-named assembly.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is part of a code example found in the <a class=\"xref\" href=\"system.web.compilation.clientbuildmanager\" data-linktype=\"relative-path\">ClientBuildManager</a> class overview. In the example, a <a class=\"xref\" href=\"system.web.compilation.clientbuildmanagerparameter\" data-linktype=\"relative-path\">ClientBuildManagerParameter</a> object is created and its values set. The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <a class=\"xref\" href=\"system.web.compilation.precompilationflags\" data-linktype=\"relative-path\">PrecompilationFlags</a> values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.Compilation.ClientBuildManager#2\">                _cbmParameter = New ClientBuildManagerParameter()\n                _cbmParameter.PrecompilationFlags = _flags\n                _cbmParameter.StrongNameKeyFile = _keyFile\n\n                builder = New ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.Compilation.ClientBuildManager#2\">                _cbmParameter = new ClientBuildManagerParameter();\n                _cbmParameter.PrecompilationFlags = _flags;\n                _cbmParameter.StrongNameKeyFile = _keyFile;\n\n                builder = new\n                        ClientBuildManager(_vPath, _pPath, _tPath, _cbmParameter);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Compilation.ClientBuildManagerParameter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Compilation.ClientBuildManagerParameter.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.ClientBuildManagerParameter\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.ClientBuildManagerParameter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer\">\r\n<meta name=\"APIName\" content=\"System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"680bfc79-7ae8-0df6-86c6-6f37dd61bc8b\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Compilation\\ClientBuildManagerParameter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains values passed to the ASP.NET compiler during precompilation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Compilation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Compilation.ClientBuildManagerParameter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Compilation.ClientBuildManagerParameter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Compilation.ClientBuildManagerParameter.yml","open_to_public_contributors":true,"api_name":["System.Web.Compilation.ClientBuildManagerParameter","System.Web.Compilation.ClientBuildManagerParameter..ctor","System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths","System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags","System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer","System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Compilation.ClientBuildManagerParameter","System::Web::Compilation::ClientBuildManagerParameter","System.Web.Compilation.ClientBuildManagerParameter.#ctor","System::Web::Compilation::ClientBuildManagerParameter::#ctor","System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths","System::Web::Compilation::ClientBuildManagerParameter::ExcludedVirtualPaths","System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags","System::Web::Compilation::ClientBuildManagerParameter::PrecompilationFlags","System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer","System::Web::Compilation::ClientBuildManagerParameter::StrongNameKeyContainer","System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile","System::Web::Compilation::ClientBuildManagerParameter::StrongNameKeyFile"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"680bfc79-7ae8-0df6-86c6-6f37dd61bc8b","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Compilation\\ClientBuildManagerParameter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Compilation/ClientBuildManagerParameter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ClientBuildManagerParameter class | Microsoft Docs","_op_ogTitle":"ClientBuildManagerParameter class","description":"Contains values passed to the ASP.NET compiler during precompilation.\n","toc_asset_id":"_splitted/System.Web.Compilation/toc.json","toc_rel":"_splitted/System.Web.Compilation/toc.json","source_url":"","ms.assetid":"System.Web.Compilation.ClientBuildManagerParameter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.compilation.clientbuildmanagerparameter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.compilation.clientbuildmanagerparameter","fileRelativePath":"System.Web.Compilation.ClientBuildManagerParameter.html"},"themesRelativePathToOutputRoot":"_themes/"}