{"content":"    \r\n    <h1 id=\"System_Linq_IGrouping_2\">\r\n      <span class=\"lang-csharp\">IGrouping&lt;TKey,TElement&gt;</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of objects that have a common key.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTKey\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of the key of the IGrouping(TKey,.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTElement\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of the values in the IGrouping(TKey,.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An IGrouping(TKey, is an <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> that additionally has a key. The key represents the attribute that is common to each value in the IGrouping(TKey,.  </p>\n<p> The values of an IGrouping(TKey, are accessed much as the elements of an <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a> are accessed. For example, you can access the values by using a <code>foreach</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/csprcs-md.md&quot; -->Visual C#<!--END INCLUDE --> or <code>For Each</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vbprvb-md.md&quot; -->Visual Basic<!--END INCLUDE --> loop to iterate through the IGrouping(TKey, object. The Example section contains a code example that shows you how to access both the key and the values of an IGrouping(TKey, object.  </p>\n<p> The IGrouping(TKey, type is used by the &lt;xref:System.Linq.Enumerable.GroupBy%2A&gt; standard query operator methods, which return a sequence of elements of type IGrouping(TKey,.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_IGrouping_2_Key\" data-linktype=\"self-bookmark\">Key</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the key of the <span class=\"xref\">stem.Linq.IGrouping`2</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_IGrouping_2_Key\">\r\n    \r\n            <a id=\"System_Linq_IGrouping_2_Key_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Key</div>        \r\n          </div>\r\n    \r\n            <p>Gets the key of the <span class=\"xref\">stem.Linq.IGrouping`2</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TKey Key { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">TKey</span></div>\r\n                  </div>\r\n                  <p>The key of the <span class=\"xref\">stem.Linq.IGrouping`2</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The key of an <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a> represents the attribute that is common to each value in the <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the Key property to label each <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a> object in a sequence of <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a> objects. The <a class=\"xref\" href=\"system.linq.enumerable#System_Linq_Enumerable_GroupBy__2_System_Collections_Generic_IEnumerable___0__System_Func___0___1__\" data-linktype=\"relative-path\">GroupBy&lt;TSource,TKey&gt;(IEnumerable&lt;TSource&gt;,Func&lt;TSource,TKey&gt;)</a> method is used to obtain a sequence of <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a> objects. The <code>foreach</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/csprcs-md.md&quot; -->Visual C#<!--END INCLUDE --> or <code>For Each</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vbprvb-md.md&quot; -->Visual Basic<!--END INCLUDE --> loop then iterates through each <a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping&lt;TKey,TElement&gt;</a> object, outputting its key and the number of values it contains.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Linq.IGrouping#2\">            // Get a sequence of IGrouping objects.\n            IEnumerable&lt;IGrouping&lt;System.Reflection.MemberTypes, System.Reflection.MemberInfo&gt;&gt; memberQuery =\n                typeof(String).GetMembers().\n                GroupBy(member =&gt; member.MemberType);\n\n            // Output the key of each IGrouping object and the count of values.\n            foreach (IGrouping&lt;System.Reflection.MemberTypes, System.Reflection.MemberInfo&gt; group in memberQuery)\n                Console.WriteLine(&quot;(Key) {0} (Member count) {1}&quot;, group.Key, group.Count());\n\n            // The output is similar to:\n            // (Key) Method (Member count) 113\n            // (Key) Constructor (Member count) 8\n            // (Key) Property (Member count) 2\n            // (Key) Field (Member count) 1\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Linq.IGrouping#2\">        &#39; Get a sequence of IGrouping objects.\n        Dim memberQuery As  _\n        IEnumerable(Of IGrouping(Of System.Reflection.MemberTypes, System.Reflection.MemberInfo)) = _\n            Type.GetType(&quot;String&quot;).GetMembers(). _\n            GroupBy(Function(ByVal member) member.MemberType)\n\n        &#39; Output the key of each IGrouping object and the count of values.\n        For Each group As  _\n        IGrouping(Of System.Reflection.MemberTypes, System.Reflection.MemberInfo) In memberQuery\n            MsgBox(String.Format(&quot;(Key) {0} (Member count) {1}&quot;, group.Key, group.Count()))\n        Next\n\n        &#39; The output is similar to:\n        &#39; (Key) Method (Member count) 113\n        &#39; (Key) Constructor (Member count) 8\n        &#39; (Key) Property (Member count) 2\n        &#39; (Key) Field (Member count) 1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.IGrouping-2.yml\">\r\n<meta name=\"APIName\" content=\"System.Linq.IGrouping&lt;TKey,TElement&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.IGrouping&lt;TKey,TElement&gt;.Key\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-10 02:17 AM\">\r\n<meta name=\"document_id\" content=\"71eee415-87c9-fcd5-be26-d8cbf4f12572\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Linq\\IGrouping`2.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of objects that have a common key.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Linq/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Linq.IGrouping`2\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.IGrouping-2.yml","open_to_public_contributors":true,"api_name":["System.Linq.IGrouping<TKey,TElement>","System.Linq.IGrouping<TKey,TElement>.Key"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Linq.IGrouping`2","System::Linq::IGrouping`2","System.Linq.IGrouping`2.Key","System::Linq::IGrouping`2::Key"],"dev_langs":["csharp"],"updated_at":"2017-03-10 02:17 AM","document_id":"71eee415-87c9-fcd5-be26-d8cbf4f12572","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Linq\\IGrouping`2.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Linq/IGrouping`2.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IGrouping<TKey,TElement> interface | Microsoft Docs","_op_ogTitle":"IGrouping<TKey,TElement> interface","description":"Represents a collection of objects that have a common key.\n","toc_asset_id":"_splitted/System.Linq/toc.json","toc_rel":"_splitted/System.Linq/toc.json","source_url":"","ms.assetid":"System.Linq.IGrouping`2","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.igrouping-2","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.igrouping-2","fileRelativePath":"System.Linq.IGrouping-2.html"},"themesRelativePathToOutputRoot":"_themes/"}