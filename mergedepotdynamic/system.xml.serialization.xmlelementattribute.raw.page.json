{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_XmlElementAttribute\">\r\n      <span class=\"lang-csharp\">XmlElementAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Indicates that a public field or property represents an XML element when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes or deserializes the object that contains it.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)]\npublic class XmlElementAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlElementAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The XmlElementAttribute belongs to a family of attributes that controls how the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes or deserializes an object. For a complete list of similar attributes, see <a href=\"../Topic/Attributes%20That%20Control%20XML%20Serialization.md\" data-linktype=\"relative-path\">Attributes That Control XML Serialization</a>.  </p>\n<p> An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags. XML tags can be nested--that is, the data between tags can also be XML elements. This capacity of one element to enclose another allows the document to contain hierarchies of data. An XML element can also include attributes.  </p>\n<p> Apply the XmlElementAttribute to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.  </p>\n<p> The XmlElementAttribute can be applied multiple times to a field that returns an array of objects. The purpose of this is to specify (through the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property) different types that can be inserted into the array. For example, the array in the following C# code accepts both strings and integers.  </p>\n<pre><code>public class Things{  \n   [XmlElement(Type = typeof(string)),  \n   XmlElement(Type = typeof(int))]  \n   public object[] StringsAndInts;  \n}  \n</code></pre><p> This results in XML that might resemble the following.  </p>\n<pre><code>&lt;Things&gt;  \n   &lt;string&gt;Hello&lt;/string&gt;  \n   &lt;int&gt;999&lt;/int&gt;  \n   &lt;string&gt;World&lt;/string&gt;  \n&lt;/Things&gt;  \n</code></pre><p> Note that when you apply the XmlElementAttribute multiple times without specifying an <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property value, the elements are named after the type of the acceptable objects.  </p>\n<p> If you apply the XmlElementAttribute to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.  </p>\n<p> In contrast if an XmlElementAttribute is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property. (Use the <a class=\"xref\" href=\"system.xml.serialization.xmlarrayattribute\" data-linktype=\"relative-path\">XmlArrayAttribute</a> and <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute\" data-linktype=\"relative-path\">XmlArrayItemAttribute</a> attributes to control how an array is serialized.)  </p>\n<p> You can set the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the XmlElementAttribute.  </p>\n<p> If a field or property returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, you can apply multiple instances of the XmlElementAttribute to the member. For each instance, set the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_Type_\" data-linktype=\"relative-path\">Type</a> property to a type of object that can be inserted into the array.  </p>\n<p> For more information about using attributes, see <a href=\"../Topic/Extending%20Metadata%20Using%20Attributes.md\" data-linktype=\"relative-path\">Attributes</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can use the word <code>XmlElement</code> in your code instead of the longer XmlElementAttribute.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute__ctor\" data-linktype=\"self-bookmark\">XmlElementAttribute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute__ctor_System_String_\" data-linktype=\"self-bookmark\">XmlElementAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class and specifies the name of the XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute__ctor_System_Type_\" data-linktype=\"self-bookmark\">XmlElementAttribute(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class and specifies a type for the member to which the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> is applied. This type is used by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> when serializing or deserializing object that contains it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute__ctor_System_String_System_Type_\" data-linktype=\"self-bookmark\">XmlElementAttribute(String,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> and specifies the name of the XML element and a derived type for the member to which the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> is applied. This member type is used when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes the object that contains it.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_DataType\" data-linktype=\"self-bookmark\">DataType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_ElementName\" data-linktype=\"self-bookmark\">ElementName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the generated XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_Form\" data-linktype=\"self-bookmark\">Form</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the element is qualified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_IsNullable\" data-linktype=\"self-bookmark\">IsNullable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must serialize a member that is set to <code>null</code> as an empty tag with the <code>xsi:nil</code> attribute set to <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_Order\" data-linktype=\"self-bookmark\">Order</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the explicit order in which the elements are serialized or deserialized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementAttribute_Type\" data-linktype=\"self-bookmark\">Type</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object type used to represent the XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute__ctor\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlElementAttribute()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlElementAttribute ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to a class.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.XmlElementAttribute Example#1\">public class MyClass\n{\n   [XmlElement()]\n   public string TeacherName;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.XmlElementAttribute Example#1\">Public Class MyClass1\n    &lt;XmlElement()&gt; Public TeacherName As String\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.XmlElementAttribute Example#1\">public ref class MyClass\n{\npublic:\n\n   [XmlElement]\n   String^ TeacherName;\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlElementAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class and specifies the name of the XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlElementAttribute (string elementName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML element name of the serialized member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> uses the member name as the XML element name when serializing a class instance. For example, a field named <code>Vehicle</code> generates an XML element named <code>Vehicle</code>. However if you need a different element, such as <code>Cars</code>, pass it in the <code>elementName</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a simple class that contains a single field named <code>Vehicles</code>. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to the field and includes the <code>elementName</code> parameter, thereby instructing the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to generate XML elements named &quot;Cars&quot; rather than &quot;Vehicles&quot;.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.XmlElementAttribute1 Example#1\">public ref class Transportation\n{\npublic:\n\n   [XmlElement(&quot;Cars&quot;)]\n   String^ Vehicles;\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.XmlElementAttribute1 Example#1\">Public Class Transportation\n    &lt;XmlElement(&quot;Cars&quot;)&gt; Public Vehicles As String\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.XmlElementAttribute1 Example#1\">public class Transportation\n{\n   [XmlElement(&quot;Cars&quot;)]\n   public string Vehicles;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute__ctor_System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlElementAttribute(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> class and specifies a type for the member to which the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> is applied. This type is used by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> when serializing or deserializing object that contains it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlElementAttribute (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of an object derived from the member&#39;s type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <code>type</code> parameter to specify a type that is derived from a base class. For example, suppose a property named <code>MyAnimal</code> returns an <code>Animal</code> object. You want to enhance the object, so you create a new class named <code>Mammal</code> that inherits from the <code>Animal</code> class. To instruct the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to accept the <code>Mammal</code> class when it serializes the <code>MyAnimal</code> property, pass the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the <code>Mammal</code> class to the constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Orchestra</code> that contains a single field named <code>Instruments</code>, which returns an array of <code>Instrument</code> objects. A second class named <code>Brass</code> inherits from the <code>Instrument</code> class. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to the <code>Instruments</code> field, and specifies the <code>Brass</code> type, allowing the <code>Instruments</code> field to accept <code>Brass</code> objects. The example also specifies the name of the XML element by setting the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.XmlElementAttribute2 Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\npublic class Orchestra\n{\n   public Instrument[] Instruments;\n}   \n\npublic class Instrument\n{\n   public string Name;\n}\n\npublic class Brass:Instrument{\n   public bool IsValved;\n}\n\npublic class Run\n{\n    public static void Main()\n    {\n       Run test = new Run();\n       test.SerializeObject(&quot;Override.xml&quot;);\n       test.DeserializeObject(&quot;Override.xml&quot;);\n    }\n\n    public void SerializeObject(string filename)\n    {\n      // To write the file, a TextWriter is required.\n      TextWriter writer = new StreamWriter(filename);\n      \n      XmlAttributeOverrides attrOverrides = \n         new XmlAttributeOverrides();\n      XmlAttributes attrs = new XmlAttributes();\n\n      // Creates an XmlElementAttribute that overrides the Instrument type.\n      XmlElementAttribute attr = new \n      XmlElementAttribute(typeof(Brass));\n      attr.ElementName = &quot;Brass&quot;;\n\n      // Adds the element to the collection of elements.\n      attrs.XmlElements.Add(attr);\n      attrOverrides.Add(typeof(Orchestra), &quot;Instruments&quot;, attrs);\n\n      // Creates the XmlSerializer using the XmlAttributeOverrides.\n      XmlSerializer s = \n      new XmlSerializer(typeof(Orchestra), attrOverrides);\n\n      // Creates the object to serialize.\n      Orchestra band = new Orchestra();\n      \n      // Creates an object of the derived type.\n      Brass i = new Brass();\n      i.Name = &quot;Trumpet&quot;;\n      i.IsValved = true;\n      Instrument[] myInstruments = {i};\n      band.Instruments = myInstruments;\n      s.Serialize(writer,band);\n      writer.Close();\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      XmlAttributeOverrides attrOverrides = \n         new XmlAttributeOverrides();\n      XmlAttributes attrs = new XmlAttributes();\n\n      // Creates an XmlElementAttribute that override the Instrument type.\n      XmlElementAttribute attr = new \n      XmlElementAttribute(typeof(Brass));\n      attr.ElementName = &quot;Brass&quot;;\n\n      // Adds the element to the collection of elements.\n      attrs.XmlElements.Add(attr);\n      attrOverrides.Add(typeof(Orchestra), &quot;Instruments&quot;, attrs);\n\n      // Creates the XmlSerializer using the XmlAttributeOverrides.\n      XmlSerializer s = \n      new XmlSerializer(typeof(Orchestra), attrOverrides);\n\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      Orchestra band = (Orchestra) s.Deserialize(fs);\n      Console.WriteLine(&quot;Brass:&quot;);\n\n      /* Deserializing differs from serializing. To read the \n         derived-object values, declare an object of the derived \n         type (Brass) and cast the Instrument instance to it. */\n      Brass b;\n      foreach(Instrument i in band.Instruments) \n      {\n         b= (Brass)i;\n         Console.WriteLine(\n         b.Name + &quot;<br>&quot; + \n         b.IsValved);\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.XmlElementAttribute2 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\npublic ref class Instrument\n{\npublic:\n   String^ Name;\n};\n\npublic ref class Brass: public Instrument\n{\npublic:\n   bool IsValved;\n};\n\npublic ref class Orchestra\n{\npublic:\n   array&lt;Instrument^&gt;^Instruments;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // To write the file, a TextWriter is required.\n   TextWriter^ writer = gcnew StreamWriter( filename );\n   XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n   XmlAttributes^ attrs = gcnew XmlAttributes;\n\n   // Creates an XmlElementAttribute that overrides the Instrument type.\n   XmlElementAttribute^ attr = gcnew XmlElementAttribute( Brass::typeid );\n   attr-&gt;ElementName = &quot;Brass&quot;;\n\n   // Adds the element to the collection of elements.\n   attrs-&gt;XmlElements-&gt;Add( attr );\n   attrOverrides-&gt;Add( Orchestra::typeid, &quot;Instruments&quot;, attrs );\n\n   // Creates the XmlSerializer using the XmlAttributeOverrides.\n   XmlSerializer^ s = gcnew XmlSerializer( Orchestra::typeid,attrOverrides );\n\n   // Creates the object to serialize.\n   Orchestra^ band = gcnew Orchestra;\n\n   // Creates an object of the derived type.\n   Brass^ i = gcnew Brass;\n   i-&gt;Name = &quot;Trumpet&quot;;\n   i-&gt;IsValved = true;\n   array&lt;Instrument^&gt;^myInstruments = {i};\n   band-&gt;Instruments = myInstruments;\n   s-&gt;Serialize( writer, band );\n   writer-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n   XmlAttributes^ attrs = gcnew XmlAttributes;\n\n   // Creates an XmlElementAttribute that override the Instrument type.\n   XmlElementAttribute^ attr = gcnew XmlElementAttribute( Brass::typeid );\n   attr-&gt;ElementName = &quot;Brass&quot;;\n\n   // Adds the element to the collection of elements.\n   attrs-&gt;XmlElements-&gt;Add( attr );\n   attrOverrides-&gt;Add( Orchestra::typeid, &quot;Instruments&quot;, attrs );\n\n   // Creates the XmlSerializer using the XmlAttributeOverrides.\n   XmlSerializer^ s = gcnew XmlSerializer( Orchestra::typeid,attrOverrides );\n   FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n   Orchestra^ band = dynamic_cast&lt;Orchestra^&gt;(s-&gt;Deserialize( fs ));\n   Console::WriteLine( &quot;Brass:&quot; );\n\n   /* Deserializing differs from serializing. To read the \n      derived-object values, declare an object of the derived \n      type (Brass) and cast the Instrument instance to it. */\n   Brass^ b;\n   System::Collections::IEnumerator^ myEnum = band-&gt;Instruments-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Instrument^ i = safe_cast&lt;Instrument^&gt;(myEnum-&gt;Current);\n      b = dynamic_cast&lt;Brass^&gt;(i);\n      Console::WriteLine( &quot;{0}<br>{1}&quot;, b-&gt;Name, b-&gt;IsValved );\n   }\n}\n\nint main()\n{\n   SerializeObject( &quot;Override.xml&quot; );\n   DeserializeObject( &quot;Override.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.XmlElementAttribute2 Example#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n\n\nPublic Class Orchestra\n    Public Instruments() As Instrument\nEnd Class\n\nPublic Class Instrument\n    Public Name As String\nEnd Class\n\nPublic Class Brass\n    Inherits Instrument\n    Public IsValved As Boolean\nEnd Class\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;Override.xml&quot;)\n        test.DeserializeObject(&quot;Override.xml&quot;)\n    End Sub &#39;Main\n    \n    \n    Public Sub SerializeObject(filename As String)\n        &#39; To write the file, a TextWriter is required.\n        Dim writer As New StreamWriter(filename)\n        \n        Dim attrOverrides As New XmlAttributeOverrides()\n        Dim attrs As New XmlAttributes()\n        \n        &#39; Creates an XmlElementAttribute that overrides the Instrument type.\n        Dim attr As New XmlElementAttribute(GetType(Brass))\n        attr.ElementName = &quot;Brass&quot;\n        \n        &#39; Adds the element to the collection of elements.\n        attrs.XmlElements.Add(attr)\n        attrOverrides.Add(GetType(Orchestra), &quot;Instruments&quot;, attrs)\n        \n        &#39; Creates the XmlSerializer using the XmlAttributeOverrides.\n        Dim s As New XmlSerializer(GetType(Orchestra), attrOverrides)\n        \n        &#39; Creates the object to serialize.\n        Dim band As New Orchestra()\n        \n        &#39; Creates an object of the derived type.\n        Dim i As New Brass()\n        i.Name = &quot;Trumpet&quot;\n        i.IsValved = True\n        Dim myInstruments() As Instrument = {i}\n        band.Instruments = myInstruments\n        s.Serialize(writer, band)\n        writer.Close()\n    End Sub\n    \n    \n    Public Sub DeserializeObject(filename As String)\n        Dim attrOverrides As New XmlAttributeOverrides()\n        Dim attrs As New XmlAttributes()\n        \n        &#39; Create an XmlElementAttribute that override the Instrument type.\n        Dim attr As New XmlElementAttribute(GetType(Brass))\n        attr.ElementName = &quot;Brass&quot;\n        \n        &#39; Add the element to the collection of elements.\n        attrs.XmlElements.Add(attr)\n        attrOverrides.Add(GetType(Orchestra), &quot;Instruments&quot;, attrs)\n        \n        &#39; Create the XmlSerializer using the XmlAttributeOverrides.\n        Dim s As New XmlSerializer(GetType(Orchestra), attrOverrides)\n        \n        Dim fs As New FileStream(filename, FileMode.Open)\n        Dim band As Orchestra = CType(s.Deserialize(fs), Orchestra)\n        Console.WriteLine(&quot;Brass:&quot;)\n        \n        &#39; Deserializing differs from serializing. To read the\n        &#39; derived-object values, declare an object of the derived\n        &#39; type (Brass) and cast the Instrument instance to it. \n        Dim b As Brass\n        Dim i As Instrument\n        For Each i In  band.Instruments\n            b = CType(i, Brass)\n            Console.WriteLine((b.Name + ControlChars.Cr + b.IsValved.ToString()))\n        Next i\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute__ctor_System_String_System_Type_\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlElementAttribute(String,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> and specifies the name of the XML element and a derived type for the member to which the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> is applied. This member type is used when the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> serializes the object that contains it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlElementAttribute (string elementName, Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML element name of the serialized member.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of an object derived from the member&#39;s type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> uses the member name as the XML element name when serializing a class instance. For example, a field named <code>Vehicle</code> generates an XML element named <code>Vehicle</code>. However, if you need a different element, such as <code>Cars</code>, pass it in the <code>elementName</code> parameter.  </p>\n<p> Use the <code>type</code> parameter to specify a type that is derived from a base class. For example, suppose a property named <code>MyAnimal</code> returns an <code>Animal</code> object. You want to enhance the object, so you create a new class named <code>Mammal</code> that inherits from the <code>Animal</code> class. To instruct the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to accept the <code>Mammal</code> class when it serializes the <code>MyAnimal</code> property, pass the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the <code>Mammal</code> class to the constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Orchestra</code> that contains a single field named <code>Instruments</code>, which returns an array of <code>Instrument</code> objects. A second class named <code>Brass</code> inherits from the <code>Instrument</code> class. The example applies the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to the <code>Instruments</code> field, and specifies the <code>Brass</code> type, allowing the <code>Instruments</code> field to accept <code>Brass</code> objects. The example also specifies the name of the XML element by setting the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute#System_Xml_Serialization_XmlElementAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.XmlElementAttribute2 Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\n\npublic class Orchestra\n{\n   public Instrument[] Instruments;\n}   \n\npublic class Instrument\n{\n   public string Name;\n}\n\npublic class Brass:Instrument{\n   public bool IsValved;\n}\n\npublic class Run\n{\n    public static void Main()\n    {\n       Run test = new Run();\n       test.SerializeObject(&quot;Override.xml&quot;);\n       test.DeserializeObject(&quot;Override.xml&quot;);\n    }\n\n    public void SerializeObject(string filename)\n    {\n      // To write the file, a TextWriter is required.\n      TextWriter writer = new StreamWriter(filename);\n      \n      XmlAttributeOverrides attrOverrides = \n         new XmlAttributeOverrides();\n      XmlAttributes attrs = new XmlAttributes();\n\n      // Creates an XmlElementAttribute that overrides the Instrument type.\n      XmlElementAttribute attr = new \n      XmlElementAttribute(typeof(Brass));\n      attr.ElementName = &quot;Brass&quot;;\n\n      // Adds the element to the collection of elements.\n      attrs.XmlElements.Add(attr);\n      attrOverrides.Add(typeof(Orchestra), &quot;Instruments&quot;, attrs);\n\n      // Creates the XmlSerializer using the XmlAttributeOverrides.\n      XmlSerializer s = \n      new XmlSerializer(typeof(Orchestra), attrOverrides);\n\n      // Creates the object to serialize.\n      Orchestra band = new Orchestra();\n      \n      // Creates an object of the derived type.\n      Brass i = new Brass();\n      i.Name = &quot;Trumpet&quot;;\n      i.IsValved = true;\n      Instrument[] myInstruments = {i};\n      band.Instruments = myInstruments;\n      s.Serialize(writer,band);\n      writer.Close();\n   }\n\n   public void DeserializeObject(string filename)\n   {\n      XmlAttributeOverrides attrOverrides = \n         new XmlAttributeOverrides();\n      XmlAttributes attrs = new XmlAttributes();\n\n      // Creates an XmlElementAttribute that override the Instrument type.\n      XmlElementAttribute attr = new \n      XmlElementAttribute(typeof(Brass));\n      attr.ElementName = &quot;Brass&quot;;\n\n      // Adds the element to the collection of elements.\n      attrs.XmlElements.Add(attr);\n      attrOverrides.Add(typeof(Orchestra), &quot;Instruments&quot;, attrs);\n\n      // Creates the XmlSerializer using the XmlAttributeOverrides.\n      XmlSerializer s = \n      new XmlSerializer(typeof(Orchestra), attrOverrides);\n\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      Orchestra band = (Orchestra) s.Deserialize(fs);\n      Console.WriteLine(&quot;Brass:&quot;);\n\n      /* Deserializing differs from serializing. To read the \n         derived-object values, declare an object of the derived \n         type (Brass) and cast the Instrument instance to it. */\n      Brass b;\n      foreach(Instrument i in band.Instruments) \n      {\n         b= (Brass)i;\n         Console.WriteLine(\n         b.Name + &quot;<br>&quot; + \n         b.IsValved);\n      }\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.XmlElementAttribute2 Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\npublic ref class Instrument\n{\npublic:\n   String^ Name;\n};\n\npublic ref class Brass: public Instrument\n{\npublic:\n   bool IsValved;\n};\n\npublic ref class Orchestra\n{\npublic:\n   array&lt;Instrument^&gt;^Instruments;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // To write the file, a TextWriter is required.\n   TextWriter^ writer = gcnew StreamWriter( filename );\n   XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n   XmlAttributes^ attrs = gcnew XmlAttributes;\n\n   // Creates an XmlElementAttribute that overrides the Instrument type.\n   XmlElementAttribute^ attr = gcnew XmlElementAttribute( Brass::typeid );\n   attr-&gt;ElementName = &quot;Brass&quot;;\n\n   // Adds the element to the collection of elements.\n   attrs-&gt;XmlElements-&gt;Add( attr );\n   attrOverrides-&gt;Add( Orchestra::typeid, &quot;Instruments&quot;, attrs );\n\n   // Creates the XmlSerializer using the XmlAttributeOverrides.\n   XmlSerializer^ s = gcnew XmlSerializer( Orchestra::typeid,attrOverrides );\n\n   // Creates the object to serialize.\n   Orchestra^ band = gcnew Orchestra;\n\n   // Creates an object of the derived type.\n   Brass^ i = gcnew Brass;\n   i-&gt;Name = &quot;Trumpet&quot;;\n   i-&gt;IsValved = true;\n   array&lt;Instrument^&gt;^myInstruments = {i};\n   band-&gt;Instruments = myInstruments;\n   s-&gt;Serialize( writer, band );\n   writer-&gt;Close();\n}\n\nvoid DeserializeObject( String^ filename )\n{\n   XmlAttributeOverrides^ attrOverrides = gcnew XmlAttributeOverrides;\n   XmlAttributes^ attrs = gcnew XmlAttributes;\n\n   // Creates an XmlElementAttribute that override the Instrument type.\n   XmlElementAttribute^ attr = gcnew XmlElementAttribute( Brass::typeid );\n   attr-&gt;ElementName = &quot;Brass&quot;;\n\n   // Adds the element to the collection of elements.\n   attrs-&gt;XmlElements-&gt;Add( attr );\n   attrOverrides-&gt;Add( Orchestra::typeid, &quot;Instruments&quot;, attrs );\n\n   // Creates the XmlSerializer using the XmlAttributeOverrides.\n   XmlSerializer^ s = gcnew XmlSerializer( Orchestra::typeid,attrOverrides );\n   FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n   Orchestra^ band = dynamic_cast&lt;Orchestra^&gt;(s-&gt;Deserialize( fs ));\n   Console::WriteLine( &quot;Brass:&quot; );\n\n   /* Deserializing differs from serializing. To read the \n      derived-object values, declare an object of the derived \n      type (Brass) and cast the Instrument instance to it. */\n   Brass^ b;\n   System::Collections::IEnumerator^ myEnum = band-&gt;Instruments-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      Instrument^ i = safe_cast&lt;Instrument^&gt;(myEnum-&gt;Current);\n      b = dynamic_cast&lt;Brass^&gt;(i);\n      Console::WriteLine( &quot;{0}<br>{1}&quot;, b-&gt;Name, b-&gt;IsValved );\n   }\n}\n\nint main()\n{\n   SerializeObject( &quot;Override.xml&quot; );\n   DeserializeObject( &quot;Override.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.XmlElementAttribute2 Example#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml.Serialization\nImports Microsoft.VisualBasic\n\n\nPublic Class Orchestra\n    Public Instruments() As Instrument\nEnd Class\n\nPublic Class Instrument\n    Public Name As String\nEnd Class\n\nPublic Class Brass\n    Inherits Instrument\n    Public IsValved As Boolean\nEnd Class\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;Override.xml&quot;)\n        test.DeserializeObject(&quot;Override.xml&quot;)\n    End Sub &#39;Main\n    \n    \n    Public Sub SerializeObject(filename As String)\n        &#39; To write the file, a TextWriter is required.\n        Dim writer As New StreamWriter(filename)\n        \n        Dim attrOverrides As New XmlAttributeOverrides()\n        Dim attrs As New XmlAttributes()\n        \n        &#39; Creates an XmlElementAttribute that overrides the Instrument type.\n        Dim attr As New XmlElementAttribute(GetType(Brass))\n        attr.ElementName = &quot;Brass&quot;\n        \n        &#39; Adds the element to the collection of elements.\n        attrs.XmlElements.Add(attr)\n        attrOverrides.Add(GetType(Orchestra), &quot;Instruments&quot;, attrs)\n        \n        &#39; Creates the XmlSerializer using the XmlAttributeOverrides.\n        Dim s As New XmlSerializer(GetType(Orchestra), attrOverrides)\n        \n        &#39; Creates the object to serialize.\n        Dim band As New Orchestra()\n        \n        &#39; Creates an object of the derived type.\n        Dim i As New Brass()\n        i.Name = &quot;Trumpet&quot;\n        i.IsValved = True\n        Dim myInstruments() As Instrument = {i}\n        band.Instruments = myInstruments\n        s.Serialize(writer, band)\n        writer.Close()\n    End Sub\n    \n    \n    Public Sub DeserializeObject(filename As String)\n        Dim attrOverrides As New XmlAttributeOverrides()\n        Dim attrs As New XmlAttributes()\n        \n        &#39; Create an XmlElementAttribute that override the Instrument type.\n        Dim attr As New XmlElementAttribute(GetType(Brass))\n        attr.ElementName = &quot;Brass&quot;\n        \n        &#39; Add the element to the collection of elements.\n        attrs.XmlElements.Add(attr)\n        attrOverrides.Add(GetType(Orchestra), &quot;Instruments&quot;, attrs)\n        \n        &#39; Create the XmlSerializer using the XmlAttributeOverrides.\n        Dim s As New XmlSerializer(GetType(Orchestra), attrOverrides)\n        \n        Dim fs As New FileStream(filename, FileMode.Open)\n        Dim band As Orchestra = CType(s.Deserialize(fs), Orchestra)\n        Console.WriteLine(&quot;Brass:&quot;)\n        \n        &#39; Deserializing differs from serializing. To read the\n        &#39; derived-object values, declare an object of the derived\n        &#39; type (Brass) and cast the Instrument instance to it. \n        Dim b As Brass\n        Dim i As Instrument\n        For Each i In  band.Instruments\n            b = CType(i, Brass)\n            Console.WriteLine((b.Name + ControlChars.Cr + b.IsValved.ToString()))\n        Next i\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_DataType\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_DataType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DataType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named &quot;XML Schema Part 2: Datatypes&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The XML Schema data type you have specified cannot be mapped to the.NET data type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table lists the XML Schema simple data types with their.NET equivalents.  </p>\n<p> For the XML Schema <code>base64Binary</code> and <code>hexBinary</code> data types, use an array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> structures, and apply a <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> with the DataType set to &quot;base64Binary&quot; or &quot;hexBinary&quot;, as appropriate. For the XML Schema <code>time</code> and <code>date</code> data types, use the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> type and apply the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> with the DataType set to &quot;date&quot; or &quot;time&quot;.  </p>\n<p> For every XML Schema type that is mapped to a string, apply the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> with its DataType property set to the XML Schema type. It is possible that this can change the serialization format, not only the schema for the member.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.  </p>\n</div>\n<p> For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named &quot;XML Schema Part 2: Datatypes&quot;.  </p>\n<table>\n<thead>\n<tr>\n<th>XSD data type</th>\n<th>.NET data type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>anyURI</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>base64Binary</td>\n<td>Array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></td>\n</tr>\n<tr>\n<td>byte</td>\n<td><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></td>\n</tr>\n<tr>\n<td>date</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>dateTime</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>decimal</td>\n<td><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></td>\n</tr>\n<tr>\n<td>double</td>\n<td><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></td>\n</tr>\n<tr>\n<td>ENTITY</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>ENTITIES</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>float</td>\n<td><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></td>\n</tr>\n<tr>\n<td>gDay</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gMonth</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gMonthDay</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gYear</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>gYearMonth</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>hexBinary</td>\n<td>Array of <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> objects</td>\n</tr>\n<tr>\n<td>ID</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>IDREF</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>IDREFS</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>int</td>\n<td><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></td>\n</tr>\n<tr>\n<td>integer</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>language</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>long</td>\n<td><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></td>\n</tr>\n<tr>\n<td>Name</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NCName</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>negativeInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NMTOKEN</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NMTOKENS</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>normalizedString</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>nonNegativeInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>nonPositiveInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>NOTATION</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>positiveInteger</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>QName</td>\n<td><a class=\"xref\" href=\"system.xml.xmlqualifiedname\" data-linktype=\"relative-path\">XmlQualifiedName</a></td>\n</tr>\n<tr>\n<td>duration</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>string</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>short</td>\n<td><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></td>\n</tr>\n<tr>\n<td>time</td>\n<td><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></td>\n</tr>\n<tr>\n<td>token</td>\n<td><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></td>\n</tr>\n<tr>\n<td>unsignedByte</td>\n<td><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></td>\n</tr>\n<tr>\n<td>unsignedInt</td>\n<td><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></td>\n</tr>\n<tr>\n<td>unsignedLong</td>\n<td><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></td>\n</tr>\n<tr>\n<td>unsignedShort</td>\n<td><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example serializes a class named <code>Group</code> that contains a field named <code>ExtraInfo</code>, which returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>. The example applies two instances of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to the field and specifies different DataType values for each instance. Each instance enables the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to serialize the specified types inserted into the array.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.DataType Example#1\">using System;\nusing System.Collections;\nusing System.IO;\nusing System.Xml.Serialization;\n\npublic class Group\n{\n   /* Apply two XmlElementAttributes to the field. Set the DataType\n      to string an int to allow the ArrayList to accept \n      both types. The Namespace is also set to different values\n      for each type. */ \n   [XmlElement(DataType = &quot;string&quot;,\n   Type = typeof(string),\n   Namespace = &quot;http://www.cpandl.com&quot;),\n   XmlElement(DataType = &quot;int&quot;, \n   Namespace = &quot;http://www.cohowinery.com&quot;,\n   Type = typeof(int))]\n   public ArrayList ExtraInfo;\n}\n\npublic class Run\n{\n    public static void Main()\n    {\n       Run test = new Run();\n       test.SerializeObject(&quot;ElementTypes.xml&quot;);\n          }\n\n    public void SerializeObject(string filename)\n    {\n      // A TextWriter is needed to write the file.\n      TextWriter writer = new StreamWriter(filename);\n\n      // Create the XmlSerializer using the XmlAttributeOverrides.\n      XmlSerializer s = \n      new XmlSerializer(typeof(Group));\n\n      // Create the object to serialize.\n      Group myGroup = new Group();\n\n      /* Add a string and an integer to the ArrayList returned\n         by the ExtraInfo field. */\n      myGroup.ExtraInfo = new ArrayList();\n      myGroup.ExtraInfo.Add(&quot;hello&quot;);\n      myGroup.ExtraInfo.Add(100);\n\n      // Serialize the object and close the TextWriter.\n      s.Serialize(writer,myGroup);\n      writer.Close();\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.DataType Example#1\">Imports System\nImports System.Collections\nImports System.IO\nImports System.Xml.Serialization\n\n\nPublic Class Group\n    &#39; Apply two XmlElementAttributes to the field. Set the DataType\n    &#39; to string and int to allow the ArrayList to accept\n    &#39; both types. The Namespace is also set to different values\n    &#39; for each type. \n    &lt;XmlElement(DataType := &quot;string&quot;, _\n        Type := GetType(String), _\n        Namespace := &quot;http://www.cpandl.com&quot;), _\n     XmlElement(DataType := &quot;int&quot;, _                    \n        Type := GetType(Integer), _\n        Namespace := &quot;http://www.cohowinery.com&quot;)&gt; _\n    Public ExtraInfo As ArrayList\nEnd Class\n\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;ElementTypes.xml&quot;)\n    End Sub    \n    \n    Public Sub SerializeObject(filename As String)\n        &#39; A TextWriter is needed to write the file.\n        Dim writer As New StreamWriter(filename)\n        \n        &#39; Create the XmlSerializer using the XmlAttributeOverrides.\n        Dim s As New XmlSerializer(GetType(Group))\n        \n        &#39; Create the object to serialize.\n        Dim myGroup As New Group()\n        \n        &#39; Add a string and an integer to the ArrayList returned\n        &#39; by the ExtraInfo field. \n        myGroup.ExtraInfo = New ArrayList()\n        myGroup.ExtraInfo.Add(&quot;hello&quot;)\n        myGroup.ExtraInfo.Add(100)\n        \n        &#39; Serialize the object and close the TextWriter.\n        s.Serialize(writer, myGroup)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.DataType Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\npublic ref class Group\n{\npublic:\n\n   /* Apply two XmlElementAttributes to the field. Set the DataType\n      to string an int to allow the ArrayList to accept \n      both types. The Namespace is also set to different values\n      for each type. */\n\n   [XmlElement(DataType=&quot;string&quot;,\n   Type=String::typeid,\n   Namespace=&quot;http://www.cpandl.com&quot;),\n   XmlElement(DataType=&quot;snippet1&gt;&quot;,\n   Namespace=&quot;http://www.cohowinery.com&quot;,\n   Type=Int32::typeid)]\n   ArrayList^ ExtraInfo;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // A TextWriter is needed to write the file.\n   TextWriter^ writer = gcnew StreamWriter( filename );\n\n   // Create the XmlSerializer using the XmlAttributeOverrides.\n   XmlSerializer^ s = gcnew XmlSerializer( Group::typeid );\n\n   // Create the object to serialize.\n   Group^ myGroup = gcnew Group;\n\n   /* Add a string and an integer to the ArrayList returned\n      by the ExtraInfo field. */\n   myGroup-&gt;ExtraInfo = gcnew ArrayList;\n   myGroup-&gt;ExtraInfo-&gt;Add( &quot;hello&quot; );\n   myGroup-&gt;ExtraInfo-&gt;Add( 100 );\n\n   // Serialize the object and close the TextWriter.\n   s-&gt;Serialize( writer, myGroup );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   SerializeObject( &quot;ElementTypes.xml&quot; );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_ElementName\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_ElementName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ElementName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the generated XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ElementName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the generated XML element. The default is the member identifier.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specify an <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> if you want the name of the generated XML element to differ from the member&#39;s identifier.  </p>\n<p> You can set the same <a class=\"xref\" href=\"system.xml.serialization.xmlarrayattribute#System_Xml_Serialization_XmlArrayAttribute_ElementName_\" data-linktype=\"relative-path\">ElementName</a> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members. For details on how to use namespaces and prefixed names in the XML document, see the <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the ElementName property of an <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to a new value.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.ElementName Example#1\">// This is the class that will be serialized.\npublic ref class XClass\n{\npublic:\n   /* The XML element name will be XName\n   instead of the default ClassName. */\n   [XmlElement(ElementName=&quot;XName&quot;)]\n   String^ ClassName;\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.ElementName Example#1\">// This is the class that will be serialized.\npublic class XClass\n{\n   /* The XML element name will be XName\n   instead of the default ClassName. */\n   [XmlElement(ElementName = &quot;XName&quot;)]\n   public string ClassName;\n} \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.ElementName Example#1\">&#39; This is the class that will be serialized.\nPublic Class XClass\n   &#39; The XML element name will be XName\n   &#39; instead of the default ClassName.\n   &lt;XmlElement(ElementName := &quot;XName&quot;)&gt; Public ClassName() As String\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_Form\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_Form_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Form</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the element is qualified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaForm Form { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaform\" data-linktype=\"relative-path\">XmlSchemaForm</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.xml.schema.xmlschemaform\" data-linktype=\"relative-path\">XmlSchemaForm</a> values. The default is <a class=\"xref\" href=\"system.xml.schema.xmlschemaform\" data-linktype=\"relative-path\">XmlSchemaForm</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Form_\" data-linktype=\"relative-path\">Form</a> property determines whether an XML element is qualified or unqualified. The <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Form_\" data-linktype=\"relative-path\">Form</a> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, &quot;Namespaces in XML&quot;.  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property is set to any value, attempting to set the Form property to <code>XmlSchemaForm.Unqualified</code> throws an exception. The default setting, <code>XmlSchemaForm.None</code>, instructs the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> to check the schema for the XML document to determine whether the namespace is qualified. If the schema does not specify a value for an individual element or attribute, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> uses the <code>elementFormDefault</code> and <code>attributeFormDefault</code> values to determine whether an element or attribute is qualified. The following XML code shows a schema:  </p>\n<pre><code>&lt;schema elementFormDefault=&quot;qualified&quot;   \nattributeFormDefault=&quot;unqualified&quot;... &gt;  \n &lt;element name=&quot;Name&quot;/&gt;  \n &lt;attribute name=&quot;Number&quot;/&gt;  \n&lt;/schema&gt;  \n</code></pre><p> When the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> reads the schema, the <a class=\"xref\" href=\"system.xml.serialization.xmlattributeattribute#System_Xml_Serialization_XmlAttributeAttribute_Form_\" data-linktype=\"relative-path\">Form</a> value for both the <code>Name</code> and <code>Number</code> is <code>XmlSchemaForm.None</code>, but the <code>Name</code> element is qualified, while the <code>Number</code> element is unqualified.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the Form property to <code>XmlSchemaForm.Unqualified</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.Form Example#1\">public ref class MyClass\n{\npublic:\n\n   [XmlElement(Form=XmlSchemaForm::Unqualified)]\n   String^ ClassName;\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.Form Example#1\">Public Class MyClass1\n    &lt;XmlElement(Form := XmlSchemaForm.Unqualified)&gt; _\n    Public ClassName As String\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.Form Example#1\">public class MyClass\n{\n   [XmlElement(Form = XmlSchemaForm.Unqualified)]\n   public string ClassName;\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_IsNullable\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_IsNullable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsNullable</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> must serialize a member that is set to <code>null</code> as an empty tag with the <code>xsi:nil</code> attribute set to <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsNullable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates the <code>xsi:nil</code> attribute; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The XML schema specification for structures allows an XML document to explicitly signal that an element&#39;s content is missing. Such an element contains the attribute <code>xsi:nil</code> set to <code>true</code>. For more information, see the World Wide Web Consortium (www.w3.org) specification, &quot;XML Schema Part 1: Structures&quot;.  </p>\n<p> If the IsNullable property is set to <code>true</code>, the <code>xsi:nil</code> attribute is generated for class members that have been set to <code>null</code>. For example if you set a field named <code>MyStringArray</code> to <code>null</code>, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> generates the following XML code.  </p>\n<pre><code>&lt;MyStringArray xsi:nil = &quot;true&quot; /&gt;  \n</code></pre><p> If the IsNullable property is <code>false</code>, no XML element is generated for class members that have been set to <code>null</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot apply the IsNullable property to a member typed as a value type because a value type cannot contain <code>null</code>. Additionally, you cannot set this property to <code>false</code> for nullable value types. When such types are <code>null</code>, they will be serialized by setting <code>xsi:nil</code> to <code>true</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a field with the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> applied to it, and the IsNullable property set to <code>false</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.IsNullable Example#1\">public ref class MyClass\n{\npublic:\n\n   [XmlElement(IsNullable=false)]\n   String^ Group;\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.IsNullable Example#1\">public class MyClass\n{\n   [XmlElement(IsNullable = false)]\n   public string Group;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.IsNullable Example#1\">Public Class MyClass1\n    &lt;XmlElement(IsNullable := False)&gt; Public Group As String\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_Namespace\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_Namespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the namespace assigned to the XML element that results when the class is serialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Namespace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The namespace of the XML element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.serialization.xmlarrayitemattribute#System_Xml_Serialization_XmlArrayItemAttribute_Namespace_\" data-linktype=\"relative-path\">Namespace</a> property conforms to the World Wide Web Consortium (www.w3.org) specification, &quot;Namespaces in XML&quot;.  </p>\n<p> To create namespaces that are associated with a prefix, you must create an <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a> that contains the namespaces and prefixes used in the XML document. As you set the namespace for each <a class=\"xref\" href=\"system.xml.serialization.xmlarrayattribute\" data-linktype=\"relative-path\">XmlArrayAttribute</a>, it must match one of the namespaces in the <a class=\"xref\" href=\"system.xml.serialization.xmlserializernamespaces\" data-linktype=\"relative-path\">XmlSerializerNamespaces</a>. When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_Order\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_Order_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Order</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the explicit order in which the elements are serialized or deserialized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Order { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The order of the code generation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.xml.serialization.codegenerationoptions\" data-linktype=\"relative-path\">CodeGenerationOptions</a> enumeration to instruct the <a class=\"xref\" href=\"system.web.services.description.servicedescriptionimporter\" data-linktype=\"relative-path\">ServiceDescriptionImporter</a> to generate code that sets the Order property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Once the Order property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementAttribute_Type\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementAttribute_Type_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Type</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object type used to represent the XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type Type { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Type property to specify a derived type for a field or property.  </p>\n<p> If a field or property returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>, you can apply multiple instances of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to the member. For each instance, set the Type property to a type of object that can be inserted into the array.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the Type property to specify a derived object for an <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a>. The example also applies three instances of the <a class=\"xref\" href=\"system.xml.serialization.xmlelementattribute\" data-linktype=\"relative-path\">XmlElementAttribute</a> to a field that returns an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a>. Each instance specifies a type allowed in the field.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic XmlElementAttribute.Type Example#1\">Imports System\nImports System.Collections\nImports System.IO\nImports System.Xml\nImports System.Xml.Serialization\n\n\nPublic Class Group\n    &lt;XmlElement(GetType(Manager))&gt; _    \n    Public Staff() As Employee\n    \n    &lt;XmlElement(GetType(Integer)), _\n     XmlElement(GetType(String)), _\n     XmlElement(GetType(DateTime))&gt; _\n    Public ExtraInfo As ArrayList\nEnd Class\n\nPublic Class Employee\n    Public Name As String\nEnd Class\n\nPublic Class Manager\n    Inherits Employee\n    Public Level As Integer\nEnd Class\n\nPublic Class Run\n    \n    Public Shared Sub Main()\n        Dim test As New Run()\n        test.SerializeObject(&quot;TypeEx.xml&quot;)\n    End Sub    \n    \n    Public Sub SerializeObject(filename As String)\n        &#39; Create an XmlSerializer instance.\n        Dim xSer As New XmlSerializer(GetType(Group))\n        \n        &#39; Create an object and serialize it.\n        Dim myGroup As New Group()\n        \n        Dim e1 As New Manager()\n        e1.Name = &quot;Manager1&quot;\n        Dim m1 As New Manager()\n        m1.Name = &quot;Manager2&quot;\n        m1.Level = 4\n        \n        Dim emps() As Employee = {e1, m1}\n        myGroup.Staff = emps\n        \n        myGroup.ExtraInfo = New ArrayList()\n        myGroup.ExtraInfo.Add(&quot;.NET&quot;)\n        myGroup.ExtraInfo.Add(42)\n        myGroup.ExtraInfo.Add(New DateTime(2001, 1, 1))\n        \n        Dim writer As New StreamWriter(filename)\n        xSer.Serialize(writer, myGroup)\n        writer.Close()\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic XmlElementAttribute.Type Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Collections;\nusing namespace System::IO;\nusing namespace System::Xml;\nusing namespace System::Xml::Serialization;\npublic ref class Employee\n{\npublic:\n   String^ Name;\n};\n\npublic ref class Manager: public Employee\n{\npublic:\n   int Level;\n};\n\npublic ref class Group\n{\npublic:\n\n   [XmlElement(Manager::typeid)]\n   array&lt;Employee^&gt;^Staff;\n\n   [XmlElement(Int32::typeid),\n   XmlElement(String::typeid),\n   XmlElement(DateTime::typeid)]\n   ArrayList^ ExtraInfo;\n};\n\nvoid SerializeObject( String^ filename )\n{\n   // Create an XmlSerializer instance.\n   XmlSerializer^ xSer = gcnew XmlSerializer( Group::typeid );\n\n   // Create object and serialize it.\n   Group^ myGroup = gcnew Group;\n   Manager^ e1 = gcnew Manager;\n   e1-&gt;Name = &quot;Manager1&quot;;\n   Manager^ m1 = gcnew Manager;\n   m1-&gt;Name = &quot;Manager2&quot;;\n   m1-&gt;Level = 4;\n   array&lt;Employee^&gt;^emps = {e1,m1};\n   myGroup-&gt;Staff = emps;\n   myGroup-&gt;ExtraInfo = gcnew ArrayList;\n   myGroup-&gt;ExtraInfo-&gt;Add( &quot;.NET&quot; );\n   myGroup-&gt;ExtraInfo-&gt;Add( 42 );\n   myGroup-&gt;ExtraInfo-&gt;Add( DateTime(2001,1,1) );\n   TextWriter^ writer = gcnew StreamWriter( filename );\n   xSer-&gt;Serialize( writer, myGroup );\n   writer-&gt;Close();\n}\n\nint main()\n{\n   SerializeObject( &quot;TypeEx.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic XmlElementAttribute.Type Example#1\">using System;\nusing System.Collections;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.Serialization;\n\npublic class Group\n{\n   [XmlElement(typeof(Manager))]\n   public Employee [] Staff;\n\n   [XmlElement (typeof(int)),\n   XmlElement (typeof(string)),\n   XmlElement (typeof(DateTime))]\n   public ArrayList ExtraInfo;\n}\n\npublic class Employee\n{\n   public string Name;\n}\n\npublic class Manager:Employee\n{\n   public int Level;\n}\n\npublic class Run \n{\n   public static void Main()\n   {\n      Run test = new Run();\n      test.SerializeObject(&quot;TypeEx.xml&quot;);\n   }\n\n   public void SerializeObject(string filename)\n   {\n      // Create an XmlSerializer instance.\n      XmlSerializer xSer = \n      new XmlSerializer(typeof(Group));\n\n      // Create object and serialize it.\n      Group myGroup = new Group();\n      \n      Manager e1 = new Manager();\n      e1.Name = &quot;Manager1&quot;;\n      Manager m1 =  new Manager();\n      m1.Name = &quot;Manager2&quot;;\n      m1.Level = 4;\n\n      Employee[] emps = {e1, m1};\n      myGroup.Staff = emps;\n\n      myGroup.ExtraInfo = new ArrayList();\n      myGroup.ExtraInfo.Add(&quot;.NET&quot;);\n      myGroup.ExtraInfo.Add(42);\n      myGroup.ExtraInfo.Add(new DateTime(2001,1,1));\n      \n      TextWriter writer = new StreamWriter(filename);\n      xSer.Serialize(writer, myGroup);\n      writer.Close();\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlElementAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlElementAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.DataType\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.ElementName\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.Form\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.IsNullable\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.Order\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementAttribute.Type\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"c2b5919b-ed09-b95a-f15f-0b25c5c6bdef\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that a public field or property represents an XML element when the  serializes or deserializes the object that contains it.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.XmlElementAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlElementAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlElementAttribute.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.XmlElementAttribute","System.Xml.Serialization.XmlElementAttribute..ctor","System.Xml.Serialization.XmlElementAttribute.DataType","System.Xml.Serialization.XmlElementAttribute.ElementName","System.Xml.Serialization.XmlElementAttribute.Form","System.Xml.Serialization.XmlElementAttribute.IsNullable","System.Xml.Serialization.XmlElementAttribute.Namespace","System.Xml.Serialization.XmlElementAttribute.Order","System.Xml.Serialization.XmlElementAttribute.Type"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.XmlElementAttribute","System::Xml::Serialization::XmlElementAttribute","System.Xml.Serialization.XmlElementAttribute.#ctor","System::Xml::Serialization::XmlElementAttribute::#ctor","System.Xml.Serialization.XmlElementAttribute.DataType","System::Xml::Serialization::XmlElementAttribute::DataType","System.Xml.Serialization.XmlElementAttribute.ElementName","System::Xml::Serialization::XmlElementAttribute::ElementName","System.Xml.Serialization.XmlElementAttribute.Form","System::Xml::Serialization::XmlElementAttribute::Form","System.Xml.Serialization.XmlElementAttribute.IsNullable","System::Xml::Serialization::XmlElementAttribute::IsNullable","System.Xml.Serialization.XmlElementAttribute.Namespace","System::Xml::Serialization::XmlElementAttribute::Namespace","System.Xml.Serialization.XmlElementAttribute.Order","System::Xml::Serialization::XmlElementAttribute::Order","System.Xml.Serialization.XmlElementAttribute.Type","System::Xml::Serialization::XmlElementAttribute::Type"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"c2b5919b-ed09-b95a-f15f-0b25c5c6bdef","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/XmlElementAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlElementAttribute class | Microsoft Docs","_op_ogTitle":"XmlElementAttribute class","description":"Indicates that a public field or property represents an XML element when the  serializes or deserializes the object that contains it.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.XmlElementAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlelementattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlelementattribute","fileRelativePath":"System.Xml.Serialization.XmlElementAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}