{"content":"    \r\n    <h1 id=\"System_Runtime_CompilerServices_RuntimeHelpers\">\r\n      <span class=\"lang-csharp\">RuntimeHelpers</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a set of static methods and properties that provide support for compilers. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class RuntimeHelpers</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RuntimeHelpers</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_OffsetToStringData\" data-linktype=\"self-bookmark\">OffsetToStringData</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the offset, in bytes, to the data in the given string.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_EnsureSufficientExecutionStack\" data-linktype=\"self-bookmark\">EnsureSufficientExecutionStack()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ensures that the remaining stack space is large enough to execute the average .NET Framework function.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_Equals_System_Object_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> instances are considered equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_ExecuteCodeWithGuaranteedCleanup_System_Runtime_CompilerServices_RuntimeHelpers_TryCode_System_Runtime_CompilerServices_RuntimeHelpers_CleanupCode_System_Object_\" data-linktype=\"self-bookmark\">ExecuteCodeWithGuaranteedCleanup(RuntimeHelpers+TryCode,RuntimeHelpers+CleanupCode,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes code using a <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> while using another <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> to execute additional code in case of an exception.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_GetHashCode_System_Object_\" data-linktype=\"self-bookmark\">GetHashCode(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serves as a hash function for a particular object, and is suitable for use in algorithms and data structures that use hash codes, such as a hash table.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_GetObjectValue_System_Object_\" data-linktype=\"self-bookmark\">GetObjectValue(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Boxes a value type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_InitializeArray_System_Array_System_RuntimeFieldHandle_\" data-linktype=\"self-bookmark\">InitializeArray(Array,RuntimeFieldHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a fast way to initialize an array from data that is stored in a module.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegions\" data-linktype=\"self-bookmark\">PrepareConstrainedRegions()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Designates a body of code as a constrained execution region (CER).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegionsNoOP\" data-linktype=\"self-bookmark\">PrepareConstrainedRegionsNoOP()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Designates a body of code as a constrained execution region (CER) without performing any probing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_PrepareContractedDelegate_System_Delegate_\" data-linktype=\"self-bookmark\">PrepareContractedDelegate(Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a way for applications to dynamically prepare <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> event delegates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_PrepareDelegate_System_Delegate_\" data-linktype=\"self-bookmark\">PrepareDelegate(Delegate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that the specified delegate should be prepared for inclusion in a constrained execution region (CER).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_PrepareMethod_System_RuntimeMethodHandle_\" data-linktype=\"self-bookmark\">PrepareMethod(RuntimeMethodHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepares a method for inclusion in a constrained execution region (CER).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_PrepareMethod_System_RuntimeMethodHandle_System_RuntimeTypeHandle___\" data-linktype=\"self-bookmark\">PrepareMethod(RuntimeMethodHandle,RuntimeTypeHandle[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepares a method for inclusion in a constrained execution region (CER) with the specified instantiation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_ProbeForSufficientStack\" data-linktype=\"self-bookmark\">ProbeForSufficientStack()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Probes for a certain amount of stack space to ensure that a stack overflow cannot happen within a subsequent block of code (assuming that your code uses only a finite and moderate amount of stack space). We recommend that you use a constrained execution region (CER) instead of this method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_RunClassConstructor_System_RuntimeTypeHandle_\" data-linktype=\"self-bookmark\">RunClassConstructor(RuntimeTypeHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs a specified class constructor method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_CompilerServices_RuntimeHelpers_RunModuleConstructor_System_ModuleHandle_\" data-linktype=\"self-bookmark\">RunModuleConstructor(ModuleHandle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Runs a specified module constructor method.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_OffsetToStringData\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_OffsetToStringData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetToStringData</div>        \r\n          </div>\r\n    \r\n            <p>Gets the offset, in bytes, to the data in the given string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int OffsetToStringData { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The byte offset, from the start of the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> object to the first character in the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Compilers use this property for unsafe, but efficient, pointer operations on the characters in a managed string. Compilers should pin the string against movement by the garbage collector before use. Note that common language runtime strings are immutable; that is, their contents can be read but not changed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_EnsureSufficientExecutionStack\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_EnsureSufficientExecutionStack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureSufficientExecutionStack()</div>        \r\n          </div>\r\n    \r\n            <p>Ensures that the remaining stack space is large enough to execute the average .NET Framework function.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void EnsureSufficientExecutionStack ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.insufficientexecutionstackexception\" data-linktype=\"relative-path\">InsufficientExecutionStackException</a></div>\r\n                  </div>\r\n                  <p>The available stack space is insufficient to execute the average .NET Framework function.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>EnsureSufficientExecutionStack provides information about an artificially limited stack that preserves enough space for an exception to be raised and recovery action to be taken. The artificial stack limit is chosen by the common language runtime to ensure that enough space remains to throw an exception safely.  </p>\n<p> This method is useful in situations where stack overflow might occur as a result of unbounded recursion. It is intended for use in compiler services scenarios, although it can also be used safely in other development scenarios.  </p>\n<p> If the stack space is sufficient, the exception is not thrown, and most .NET Framework types and members can still be called.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is not part of the constrained execution region (CER) support, and should not be confused with the <a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers#System_Runtime_CompilerServices_RuntimeHelpers_ProbeForSufficientStack_\" data-linktype=\"relative-path\">ProbeForSufficientStack</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_Equals_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> instances are considered equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Equals (object o1, object o2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>o2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <code>o1</code> parameter is the same instance as the <code>o2</code> parameter, or if both are <code>null</code>, or if <code>o1.Equals(o2)</code> returns <code>true</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by compilers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to compare two objects by using the Equals method.  </p>\n<pre><code class=\"lang-vb\" name=\"Runtime.CompilerServices.RuntimeHelpers.Equals#1\">Imports System.Runtime.CompilerServices\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n\n        Dim x As Integer = 1\n        Dim y As Integer = 1\n\n        Dim ret As Boolean\n        ret = RuntimeHelpers.Equals(x, y)\n\n        Console.WriteLine(&quot;The return value of RuntimeHelpers.Equals is: &quot; + ret)\n    End Sub\n\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"Runtime.CompilerServices.RuntimeHelpers.Equals#1\">using System;\nusing System.Runtime.CompilerServices;\n\n\nclass Program\n{\n\n    static void Main(string[] args)\n    {\n\n        int x = 1; int y = 1;\n\n        bool ret = RuntimeHelpers.Equals(x, y);\n\n        Console.WriteLine(&quot;The return value of RuntimeHelpers.Equals is: &quot; + ret);\n\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_ExecuteCodeWithGuaranteedCleanup_System_Runtime_CompilerServices_RuntimeHelpers_TryCode_System_Runtime_CompilerServices_RuntimeHelpers_CleanupCode_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_ExecuteCodeWithGuaranteedCleanup_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExecuteCodeWithGuaranteedCleanup(RuntimeHelpers+TryCode,RuntimeHelpers+CleanupCode,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Executes code using a <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> while using another <a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a> to execute additional code in case of an exception.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void ExecuteCodeWithGuaranteedCleanup (System.Runtime.CompilerServices.RuntimeHelpers.TryCode code, System.Runtime.CompilerServices.RuntimeHelpers.CleanupCode backoutCode, object userData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>code</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers.trycode\" data-linktype=\"relative-path\">RuntimeHelpers+TryCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to the code to try.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>backoutCode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers.cleanupcode\" data-linktype=\"relative-path\">RuntimeHelpers+CleanupCode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate to the code to run if an exception occurs.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>userData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data to pass to <code>code</code> and <code>backoutCode</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by compilers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_GetHashCode_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Serves as a hash function for a particular object, and is suitable for use in algorithms and data structures that use hash codes, such as a hash table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int GetHashCode (object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object to retrieve the hash code for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the object identified by the <code>o</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetHashCode method always calls the <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> method non-virtually, even if the object&#39;s type has overridden the <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> method. Therefore, using GetHashCode might differ from calling <code>GetHashCode</code> directly on the object with the <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> method.  </p>\n<div class=\"WARNING\"><h5>Warning</h5><p> Although the GetHashCode method returns identical hash codes for identical object references, you should not use this method to test for object identity, because this hash code does not uniquely identify an object reference. To test for object identify (that is, to test that two objects reference the same object in memory), call the <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_\" data-linktype=\"relative-path\">ReferenceEquals</a> method. Nor should you use GetHashCode to test whether two strings represent equal object references, because the string is interned. To test for string interning, call the <a class=\"xref\" href=\"system.string#System_String_IsInterned_\" data-linktype=\"relative-path\">IsInterned</a> method.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> and GetHashCode methods differ as follows:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> returns a hash code that is based on the object&#39;s definition of equality. For example, two strings with identical contents will return the same value for <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a>.  </p>\n</li>\n<li><p>GetHashCode returns a hash code that indicates object identity. That is, two string variables whose contents are identical and that represent a string that is interned (see the <a href=\"#interning\" data-linktype=\"self-bookmark\">String Interning</a> section) or that represent a single string in memory return identical hash codes.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Note that GetHashCode always returns identical hash codes for equal object references. However, the reverse is not true: equal hash codes do not indicate equal object references. A particular hash code value is not unique to a particular object reference; different object references can generate identical hash codes.  </p>\n</div>\n<p> This method is used by compilers.  </p>\n<p><a name=\"interning\"></a>   </p>\n<h2 id=\"string-interning\">String Interning</h2>\n<p> The common language runtime (CLR) maintains an internal pool of strings and stores literals in the pool. If two strings (for example, <code>str1</code> and <code>str2</code>) are formed from an identical string literal, the CLR will set <code>str1</code> and <code>str2</code> to point to the same location on the managed heap to conserve memory. Calling GetHashCode on these two string objects will produce the same hash code, contrary to the second bulleted item in the previous section.  </p>\n<p> The CLR adds only literals to the pool. Results of string operations such as concatenation are not added to the pool, unless the compiler resolves the string concatenation as a single string literal. Therefore, if <code>str2</code> was created as the result of a concatenation operation, and <code>str2</code> is identical to <code>str1</code>, using GetHashCode on these two string objects will not produce the same hash code.  </p>\n<p> If you want to add a concatenated string to the pool explicitly, use the <a class=\"xref\" href=\"system.string#System_String_Intern_\" data-linktype=\"relative-path\">Intern</a> method.  </p>\n<p> You can also use the <a class=\"xref\" href=\"system.string#System_String_IsInterned_\" data-linktype=\"relative-path\">IsInterned</a> method to check whether a string has an interned reference.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the difference between the <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> and GetHashCode methods. The output from the example illustrates the following:  </p>\n<ul>\n<li><p>Both sets of hash codes for the first set of strings passed to the <code>ShowHashCodes</code> method are different, because the strings are completely different.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> generates the same hash code for the second set of strings passed to the <code>ShowHashCodes</code> method, because the strings are equal. However, the GetHashCode method does not. The first string is defined by using a string literal and so is interned. Although the value of the second string is the same, it is not interned, because it is returned by a call to the <a class=\"xref\" href=\"system.string#System_String_Format_\" data-linktype=\"relative-path\">Format</a> method.  </p>\n</li>\n<li><p>In the case of the third string, the hash codes produced by <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> for both strings are identical, as are the hash codes produced by GetHashCode. This is because the compiler has treated the value assigned to both strings as a single string literal, and so the string variables refer to the same interned string.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode#1\">using System;\nusing System.Runtime.CompilerServices;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Console.WriteLine(&quot;{0,-18} {1,6} {2,18:N0}    {3,6} {4,18:N0}<br>&quot;,\n                        &quot;&quot;, &quot;Var 1&quot;, &quot;Hash Code&quot;, &quot;Var 2&quot;, &quot;Hash Code&quot;);\n      \n      // Get hash codes of two different strings.\n      String sc1 = &quot;String #1&quot;;\n      String sc2 = &quot;String #2&quot;;\n      ShowHashCodes(&quot;sc1&quot;, sc1, &quot;sc2&quot;, sc2);\n \n      // Get hash codes of two identical non-interned strings.\n      String s1 = &quot;This string&quot;;\n      String s2 = String.Format(&quot;{0} {1}&quot;, &quot;This&quot;, &quot;string&quot;);\n      ShowHashCodes(&quot;s1&quot;, s1, &quot;s2&quot;, s2);\n\n      // Get hash codes of two (evidently concatenated) strings.\n      String si1 = &quot;This is a string!&quot;;\n      String si2 = &quot;This &quot; + &quot;is &quot; + &quot;a &quot; + &quot;string!&quot;;\n      ShowHashCodes(&quot;si1&quot;, si1, &quot;si2&quot;, si2);\n   }\n\n   private static void ShowHashCodes(String var1, Object value1, \n                                     String var2, Object value2)\n   {\n      Console.WriteLine(&quot;{0,-18} {1,6} {2,18:X8}    {3,6} {4,18:X8}&quot;,\n                        &quot;Obj.GetHashCode&quot;, var1, value1.GetHashCode(),\n                        var2, value2.GetHashCode());\n\n      Console.WriteLine(&quot;{0,-18} {1,6} {2,18:X8}    {3,6} {4,18:X8}<br>&quot;,\n                        &quot;RTH.GetHashCode&quot;, var1, RuntimeHelpers.GetHashCode(value1),\n                        var2, RuntimeHelpers.GetHashCode(value2));\n   }\n}\n// The example displays output similar to the following:\n//                        Var 1          Hash Code     Var 2          Hash Code\n//    \n//    Obj.GetHashCode       sc1           94EABD27       sc2           94EABD24\n//    RTH.GetHashCode       sc1           02BF8098       sc2           00BB8560\n//    \n//    Obj.GetHashCode        s1           29C5A397        s2           29C5A397\n//    RTH.GetHashCode        s1           0297B065        s2           03553390\n//    \n//    Obj.GetHashCode       si1           941BCEA5       si2           941BCEA5\n//    RTH.GetHashCode       si1           01FED012       si2           01FED012\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode#1\">Imports System.Runtime.CompilerServices\n\nModule Example\n   Public Sub Main()\n      Console.WriteLine(&quot;{0,-18} {1,6} {2,18:N0}    {3,6} {4,18:N0}&quot;,\n                        &quot;&quot;, &quot;Var 1&quot;, &quot;Hash Code&quot;, &quot;Var 2&quot;, &quot;Hash Code&quot;)\n      Console.WriteLine()\n      \n      &#39; Get hash codes of two different strings.\n      Dim sc1 As String = &quot;String #1&quot;\n      Dim sc2 As String = &quot;String #2&quot;\n      ShowHashCodes(&quot;sc1&quot;, sc1, &quot;sc2&quot;, sc2)\n \n      &#39; Get hash codes of two identical non-interned strings.\n      Dim s1 As String = &quot;This string&quot;\n      Dim s2 As String = String.Format(&quot;{0} {1}&quot;, &quot;This&quot;, &quot;string&quot;)\n      ShowHashCodes(&quot;s1&quot;, s1, &quot;s2&quot;, s2)\n\n      &#39; Get hash codes of two (evidently concatenated) strings.\n      Dim si1 As String = &quot;This is a string!&quot;\n      Dim si2 As String = &quot;This &quot; + &quot;is &quot; + &quot;a &quot; + &quot;string!&quot;\n      ShowHashCodes(&quot;si1&quot;, si1, &quot;si2&quot;, si2)\n   End Sub\n   \n   Private Sub ShowHashCodes(var1 As String, value1 As Object, \n                             var2 As String, value2 As Object)\n      Console.WriteLine(&quot;{0,-18} {1,6} {2,18:X8}    {3,6} {4,18:X8}&quot;,\n                        &quot;Obj.GetHashCode&quot;, var1, value1.GetHashCode,\n                        var2, value2.GetHashCode)\n\n      Console.WriteLine(&quot;{0,-18} {1,6} {2,18:X8}    {3,6} {4,18:X8}&quot;,\n                        &quot;RTH.GetHashCode&quot;, var1, RuntimeHelpers.GetHashCode(value1),\n                        var2, RuntimeHelpers.GetHashCode(value2))\n      Console.WriteLine()\n   End Sub\nEnd Module\n&#39; The example displays output similar to the following:\n&#39;                        Var 1          Hash Code     Var 2          Hash Code\n&#39;    \n&#39;    Obj.GetHashCode       sc1           94EABD27       sc2           94EABD24\n&#39;    RTH.GetHashCode       sc1           02BF8098       sc2           00BB8560\n&#39;    \n&#39;    Obj.GetHashCode        s1           29C5A397        s2           29C5A397\n&#39;    RTH.GetHashCode        s1           0297B065        s2           03553390\n&#39;    \n&#39;    Obj.GetHashCode       si1           941BCEA5       si2           941BCEA5\n&#39;    RTH.GetHashCode       si1           01FED012       si2           01FED012\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_GetObjectValue_System_Object_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_GetObjectValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectValue(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Boxes a value type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static object GetObjectValue (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value type to be boxed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A boxed copy of <code>obj</code> if it is a value class; otherwise, <code>obj</code> itself.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Boxing a value type creates an object and performs a shallow copy of the fields of the specified value type into the new object.  </p>\n<p> This method allows a value class to be manipulated as an object while it retains the aliasing behavior of a value class.  </p>\n<p> The return value depends on whether the value class is mutable or immutable:  </p>\n<ul>\n<li><p>If the value being assigned is a mutable value class, the method returns a shallow copy of the class, because value classes have copy semantics.  </p>\n</li>\n<li><p>If the value being assigned is an immutable value class, the method returns the object itself, instead of a copy of the class.  </p>\n<p>Compilers of dynamically typed languages can use this method to make sure that boxed value types work identically to unboxed value types. That is, boxed value types get cloned when you pass them around, and they are always passed by value. The compiler can call GetObjectValue to assign a value type to an object or to pass a value type as a parameter of a type object.  </p>\n<p>This method is used by compilers.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to box a value class by using the GetObjectValue method.  </p>\n<pre><code class=\"lang-cs\" name=\"Runtime.CompilerServices.RuntimeHelpers.GetObjectValue#1\">using System;\nusing System.Runtime.CompilerServices;\n\n// Declare a value type.\nstruct Point2I\n{\n    public int x;\n    public int y;\n}\n\nclass Program\n{\n\n    static void Main(string[] args)\n    {\n        // Allocate an unboxed Point2I (not on the heap).\n        Point2I pnt;\n        pnt.x = 0;\n        pnt.y = 0;\n\n        // Box the value.  (Put it in the heap.)\n        object objPntr = RuntimeHelpers.GetObjectValue(pnt);\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Runtime.CompilerServices.RuntimeHelpers.GetObjectValue#1\">Imports System.Runtime.CompilerServices\n\n&#39; Declare a value type.\nStructure Point2I\n\n    Dim x As Integer\n    Dim y As Integer\nEnd Structure\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n\n        &#39; Allocate an unboxed Point2I (not on the heap).\n        Dim pnt As Point2I\n        pnt.x = 0\n        pnt.y = 0\n\n        &#39; Box the value.  (Put it in the heap.)\n        Dim objPntr As Object = RuntimeHelpers.GetObjectValue(pnt)\n    End Sub\n\n\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_InitializeArray_System_Array_System_RuntimeFieldHandle_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_InitializeArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeArray(Array,RuntimeFieldHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Provides a fast way to initialize an array from data that is stored in a module.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void InitializeArray (Array array, RuntimeFieldHandle fldHandle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array to be initialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fldHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtimefieldhandle\" data-linktype=\"relative-path\">RuntimeFieldHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A field handle that specifies the location of the data used to initialize the array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by compilers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegions\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareConstrainedRegions()</div>        \r\n          </div>\r\n    \r\n            <p>Designates a body of code as a constrained execution region (CER).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PrepareConstrainedRegions ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Compilers use this method to mark <code>catch</code>, <code>finally</code>, and <code>fault</code> blocks as constrained execution regions (CERs). Code that is marked as a constrained region must only call other code with strong reliability contracts. It should not allocate or make virtual calls to unprepared or unreliable methods unless it is prepared to handle failures.  </p>\n<p> Note that no intermediate language opcodes, except <code>NOP</code>, are allowed between a call to the PrepareConstrainedRegions method and the <code>try</code> block. For more information about CERs, see the classes in the <a class=\"xref\" href=\"system.runtime.constrainedexecution\" data-linktype=\"relative-path\">System.Runtime.ConstrainedExecution</a> namespace.  </p>\n<p> CERs that are marked using the PrepareConstrainedRegions method do not work perfectly when a <a class=\"xref\" href=\"system.stackoverflowexception\" data-linktype=\"relative-path\">StackOverflowException</a> is generated from the <code>try</code> block. For more information, see the <a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers#System_Runtime_CompilerServices_RuntimeHelpers_ExecuteCodeWithGuaranteedCleanup_\" data-linktype=\"relative-path\">ExecuteCodeWithGuaranteedCleanup</a> method.  </p>\n<p> The PrepareConstrainedRegions method calls the <a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers#System_Runtime_CompilerServices_RuntimeHelpers_ProbeForSufficientStack_\" data-linktype=\"relative-path\">ProbeForSufficientStack</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to reliably set handles by using the PrepareConstrainedRegions method. To reliably set a handle to a specified pre-existing handle, you must ensure that the allocation of the native handle and the subsequent recording of that handle within a <a class=\"xref\" href=\"system.runtime.interopservices.safehandle\" data-linktype=\"relative-path\">SafeHandle</a> object is atomic. Any failure between these operations (such as a thread abort or out-of-memory exception) will result in the native handle being leaked. You can use the PrepareConstrainedRegions method to make sure that the handle is not leaked.  </p>\n<pre><code class=\"lang-vb\" name=\"SafeHandle-RuntimeHelpers.PrepareConstrainedRegions#1\">&lt;StructLayout(LayoutKind.Sequential)&gt; _\nStructure MyStruct\n    Public m_outputHandle As IntPtr\nEnd Structure &#39;MyStruct\n\n\nNotInheritable Class MySafeHandle\n    Inherits SafeHandle\n\n    &#39; Called by P/Invoke when returning SafeHandles\n    Public Sub New()\n        MyBase.New(IntPtr.Zero, True)\n\n    End Sub\n\n\n    Public Function AllocateHandle() As MySafeHandle\n        &#39; Allocate SafeHandle first to avoid failure later.\n        Dim sh As New MySafeHandle()\n\n        RuntimeHelpers.PrepareConstrainedRegions()\n        Try\n        Finally\n            Dim myStruct As New MyStruct()\n            NativeAllocateHandle(myStruct)\n            sh.SetHandle(myStruct.m_outputHandle)\n        End Try\n\n        Return sh\n\n    End Function\n\n</code></pre><pre><code class=\"lang-cs\" name=\"SafeHandle-RuntimeHelpers.PrepareConstrainedRegions#1\">    [StructLayout(LayoutKind.Sequential)]\n    struct MyStruct\n    {\n        public IntPtr m_outputHandle;\n    }\n\n    sealed class MySafeHandle : SafeHandle\n    {\n        // Called by P/Invoke when returning SafeHandles\n        public MySafeHandle()\n            : base(IntPtr.Zero, true)\n        {\n        }\n\n        public MySafeHandle AllocateHandle()\n        {\n            // Allocate SafeHandle first to avoid failure later.\n            MySafeHandle sh = new MySafeHandle();\n\n            RuntimeHelpers.PrepareConstrainedRegions();\n            try { }\n            finally\n            {\n                MyStruct myStruct = new MyStruct();\n                NativeAllocateHandle(ref myStruct);\n                sh.SetHandle(myStruct.m_outputHandle);\n            }\n\n            return sh;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegionsNoOP\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegionsNoOP_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareConstrainedRegionsNoOP()</div>        \r\n          </div>\r\n    \r\n            <p>Designates a body of code as a constrained execution region (CER) without performing any probing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PrepareConstrainedRegionsNoOP ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Compilers should not call this method directly. Instead, define a CER by calling the <a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers#System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegions_\" data-linktype=\"relative-path\">PrepareConstrainedRegions</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareContractedDelegate_System_Delegate_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareContractedDelegate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareContractedDelegate(Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Provides a way for applications to dynamically prepare <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> event delegates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PrepareContractedDelegate (Delegate d);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>d</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event delegate to prepare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> event delegates such as <a class=\"xref\" href=\"system.appdomain#System_AppDomain_DomainUnload\" data-linktype=\"relative-path\">DomainUnload</a>, <a class=\"xref\" href=\"system.appdomain#System_AppDomain_ProcessExit\" data-linktype=\"relative-path\">ProcessExit</a>, and <a class=\"xref\" href=\"system.appdomain#System_AppDomain_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> are not automatically prepared at startup. You can use the following methods to prepare them:  </p>\n<ul>\n<li><p>Attribute the method by using the <a class=\"xref\" href=\"system.runtime.constrainedexecution.prepreparemethodattribute\" data-linktype=\"relative-path\">PrePrepareMethodAttribute</a> attribute.  </p>\n</li>\n<li><p>Attribute the method by using the <a class=\"xref\" href=\"system.runtime.constrainedexecution.reliabilitycontractattribute\" data-linktype=\"relative-path\">ReliabilityContractAttribute</a> attribute.  </p>\n</li>\n<li><p>Call the PrepareContractedDelegate method to dynamically prepare the delegate.  </p>\n<p>For more information, see the article <a href=\"http://go.microsoft.com/fwlink/?LinkId=145491\" data-linktype=\"external\">Keep Your Code Running with the Reliability Features of the .NET Framework</a> in the MSDN Magazine.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareDelegate_System_Delegate_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareDelegate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareDelegate(Delegate)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that the specified delegate should be prepared for inclusion in a constrained execution region (CER).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PrepareDelegate (Delegate d);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>d</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.delegate\" data-linktype=\"relative-path\">Delegate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate type to prepare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Compilers use this method to prepare a delegate&#39;s invocation method and to prepare the target of that invocation (and the delegate&#39;s statically determinable call graph) as a constrained execution region (CER).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareMethod_System_RuntimeMethodHandle_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareMethod(RuntimeMethodHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Prepares a method for inclusion in a constrained execution region (CER).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PrepareMethod (RuntimeMethodHandle method);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtimemethodhandle\" data-linktype=\"relative-path\">RuntimeMethodHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to the method to prepare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Compilers use the PrepareMethod method to handle virtual calls that are made inside a constrained execution region (CER). At JIT compilation time, the common language runtime does not usually have enough information about the target of a virtual call. Therefore, the runtime does not initially prepare that segment of the call graph. If the code that is using the CER has enough knowledge to determine the target at any point in time before the CER is actually entered, it can call PrepareMethod to perform the same runtime preparation normally done for a CER rooted at the method specified as an argument.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareMethod_System_RuntimeMethodHandle_System_RuntimeTypeHandle___\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_PrepareMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareMethod(RuntimeMethodHandle,RuntimeTypeHandle[])</div>        \r\n          </div>\r\n    \r\n            <p>Prepares a method for inclusion in a constrained execution region (CER) with the specified instantiation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void PrepareMethod (RuntimeMethodHandle method, RuntimeTypeHandle[] instantiation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtimemethodhandle\" data-linktype=\"relative-path\">RuntimeMethodHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle to the method to prepare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>instantiation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtimetypehandle\" data-linktype=\"relative-path\">RuntimeTypeHandle</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The instantiation to pass to the method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can provide generics support for compilers by using the PrepareMethod method. The common language runtime cannot prepare constrained execution regions (CERs) rooted in a method that has generic type parameters (either a type parameter on the class containing the method or one on the method itself) when those type parameters are instantiated as reference types.  </p>\n<p> You can use this overload to pass a specific instantiation (such as an array of types), specifying class type parameters first (if any), followed by method type parameters (if any). The runtime prepares that instantiation of the method. (This is necessary only if the instantiations you use contain at least one reference type parameter.) Thus, you can use a CER-style <code>try</code> clause in a generic method (or a nongeneric method on a generic class) and it will work reliably with instantiations of <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> or other value types. To instantiate reference types such as <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, you must use an explicit PrepareMethod method on the CER root method first.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_ProbeForSufficientStack\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_ProbeForSufficientStack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProbeForSufficientStack()</div>        \r\n          </div>\r\n    \r\n            <p>Probes for a certain amount of stack space to ensure that a stack overflow cannot happen within a subsequent block of code (assuming that your code uses only a finite and moderate amount of stack space). We recommend that you use a constrained execution region (CER) instead of this method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void ProbeForSufficientStack ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by the constrained execution region (CER) infrastructure when running in hosts that are resilient to stack overflow such as Microsoft SQL Server and Microsoft Exchange Server. This method currently probes for 48 KB of stack space on the x86 platform, but the exact amount may change over time and may vary on other platforms.  </p>\n<p> This method is also used by compilers.  </p>\n<p> Instead of using the ProbeForSufficientStack method, you should use a standard CER. That is, if you are planning to use a moderate amount of stack space, call the <a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers#System_Runtime_CompilerServices_RuntimeHelpers_PrepareConstrainedRegions_\" data-linktype=\"relative-path\">PrepareConstrainedRegions</a> method immediately before your <code>try</code>/<code>finally</code> or <code>try</code>/<code>catch</code> block. If you are calling a recursive method or plan to use a lot of stack space, you must use the <a class=\"xref\" href=\"system.runtime.compilerservices.runtimehelpers#System_Runtime_CompilerServices_RuntimeHelpers_ExecuteCodeWithGuaranteedCleanup_\" data-linktype=\"relative-path\">ExecuteCodeWithGuaranteedCleanup</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_RunClassConstructor_System_RuntimeTypeHandle_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_RunClassConstructor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunClassConstructor(RuntimeTypeHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Runs a specified class constructor method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RunClassConstructor (RuntimeTypeHandle type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtimetypehandle\" data-linktype=\"relative-path\">RuntimeTypeHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A type handle that specifies the class constructor method to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.typeinitializationexception\" data-linktype=\"relative-path\">TypeInitializationException</a></div>\r\n                  </div>\r\n                  <p>The class initializer throws an exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by compilers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_CompilerServices_RuntimeHelpers_RunModuleConstructor_System_ModuleHandle_\">\r\n    \r\n            <a id=\"System_Runtime_CompilerServices_RuntimeHelpers_RunModuleConstructor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RunModuleConstructor(ModuleHandle)</div>        \r\n          </div>\r\n    \r\n            <p>Runs a specified module constructor method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RunModuleConstructor (ModuleHandle module);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>module</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.modulehandle\" data-linktype=\"relative-path\">ModuleHandle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handle that specifies the module constructor method to run.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.typeinitializationexception\" data-linktype=\"relative-path\">TypeInitializationException</a></div>\r\n                  </div>\r\n                  <p>The module constructor throws an exception.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used by compilers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.CompilerServices.RuntimeHelpers.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.CompilerServices.RuntimeHelpers.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.Equals\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegionsNoOP\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.PrepareContractedDelegate\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.PrepareDelegate\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.CompilerServices.RuntimeHelpers.RunModuleConstructor\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"54712d0e-354a-5638-780f-91bf93df6a8c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a set of static methods and properties that provide support for compilers. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.CompilerServices/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.CompilerServices.RuntimeHelpers\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.CompilerServices.RuntimeHelpers.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.CompilerServices.RuntimeHelpers.yml","open_to_public_contributors":true,"api_name":["System.Runtime.CompilerServices.RuntimeHelpers","System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack","System.Runtime.CompilerServices.RuntimeHelpers.Equals","System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup","System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode","System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue","System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray","System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData","System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions","System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegionsNoOP","System.Runtime.CompilerServices.RuntimeHelpers.PrepareContractedDelegate","System.Runtime.CompilerServices.RuntimeHelpers.PrepareDelegate","System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod","System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack","System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor","System.Runtime.CompilerServices.RuntimeHelpers.RunModuleConstructor"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.CompilerServices.RuntimeHelpers","System::Runtime::CompilerServices::RuntimeHelpers","System.Runtime.CompilerServices.RuntimeHelpers.EnsureSufficientExecutionStack","System::Runtime::CompilerServices::RuntimeHelpers::EnsureSufficientExecutionStack","System.Runtime.CompilerServices.RuntimeHelpers.Equals","System::Runtime::CompilerServices::RuntimeHelpers::Equals","System.Runtime.CompilerServices.RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup","System::Runtime::CompilerServices::RuntimeHelpers::ExecuteCodeWithGuaranteedCleanup","System.Runtime.CompilerServices.RuntimeHelpers.GetHashCode","System::Runtime::CompilerServices::RuntimeHelpers::GetHashCode","System.Runtime.CompilerServices.RuntimeHelpers.GetObjectValue","System::Runtime::CompilerServices::RuntimeHelpers::GetObjectValue","System.Runtime.CompilerServices.RuntimeHelpers.InitializeArray","System::Runtime::CompilerServices::RuntimeHelpers::InitializeArray","System.Runtime.CompilerServices.RuntimeHelpers.OffsetToStringData","System::Runtime::CompilerServices::RuntimeHelpers::OffsetToStringData","System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions","System::Runtime::CompilerServices::RuntimeHelpers::PrepareConstrainedRegions","System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegionsNoOP","System::Runtime::CompilerServices::RuntimeHelpers::PrepareConstrainedRegionsNoOP","System.Runtime.CompilerServices.RuntimeHelpers.PrepareContractedDelegate","System::Runtime::CompilerServices::RuntimeHelpers::PrepareContractedDelegate","System.Runtime.CompilerServices.RuntimeHelpers.PrepareDelegate","System::Runtime::CompilerServices::RuntimeHelpers::PrepareDelegate","System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod","System::Runtime::CompilerServices::RuntimeHelpers::PrepareMethod","System.Runtime.CompilerServices.RuntimeHelpers.ProbeForSufficientStack","System::Runtime::CompilerServices::RuntimeHelpers::ProbeForSufficientStack","System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor","System::Runtime::CompilerServices::RuntimeHelpers::RunClassConstructor","System.Runtime.CompilerServices.RuntimeHelpers.RunModuleConstructor","System::Runtime::CompilerServices::RuntimeHelpers::RunModuleConstructor"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"54712d0e-354a-5638-780f-91bf93df6a8c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.CompilerServices/RuntimeHelpers.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RuntimeHelpers class | Microsoft Docs","_op_ogTitle":"RuntimeHelpers class","description":"Provides a set of static methods and properties that provide support for compilers. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Runtime.CompilerServices/toc.json","toc_rel":"_splitted/System.Runtime.CompilerServices/toc.json","source_url":"","ms.assetid":"System.Runtime.CompilerServices.RuntimeHelpers","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.compilerservices.runtimehelpers","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.compilerservices.runtimehelpers","fileRelativePath":"System.Runtime.CompilerServices.RuntimeHelpers.html"},"themesRelativePathToOutputRoot":"_themes/"}