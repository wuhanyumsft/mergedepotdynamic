{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform\">\r\n      <span class=\"lang-csharp\">XmlDsigEnvelopedSignatureTransform</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the enveloped signature transform for an XML digital signature as defined by the W3C.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlDsigEnvelopedSignatureTransform : System.Security.Cryptography.Xml.Transform</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform\" data-linktype=\"relative-path\">System.Security.Cryptography.Xml.Transform</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlDsigEnvelopedSignatureTransform</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Algorithm\" data-linktype=\"relative-path\">Algorithm</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_GetDigestedOutput_System_Security_Cryptography_HashAlgorithm_\" data-linktype=\"relative-path\">GetDigestedOutput(HashAlgorithm)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_GetXml\" data-linktype=\"relative-path\">GetXml()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_PropagatedNamespaces\" data-linktype=\"relative-path\">PropagatedNamespaces</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.transform#System_Security_Cryptography_Xml_Transform_Resolver\" data-linktype=\"relative-path\">Resolver</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The XmlDsigEnvelopedSignatureTransform class removes the &lt;<code>Signatur</code>e&gt; element from an XML document before the digest is computed. With this transform, you can sign and verify all elements of an XML document except the XML digital signature elements.  </p>\n<p> Although you can create and insert a signature into an XML document, verifying the modified document using the embedded signature will fail because the document now has additional elements.  This transform removes the &lt;<code>Signatur</code>e&gt; element and allows you to verify the document using its original form.  </p>\n<p> Use the XmlDsigEnvelopedSignatureTransform class whenever you create an enveloped signature.  </p>\n<p> For more information about the enveloped signature transform, see Section 6.6.4 of the XMLDSIG specification, which is available from the W3C at www.w3.org/TR/xmldsig-core/.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform__ctor\" data-linktype=\"self-bookmark\">XmlDsigEnvelopedSignatureTransform()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform__ctor_System_Boolean_\" data-linktype=\"self-bookmark\">XmlDsigEnvelopedSignatureTransform(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class with comments, if specified.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_InputTypes\" data-linktype=\"self-bookmark\">InputTypes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of types that are valid inputs to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_OutputTypes\" data-linktype=\"self-bookmark\">OutputTypes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of types that are possible outputs from the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetInnerXml\" data-linktype=\"self-bookmark\">GetInnerXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an XML representation of the parameters of an <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object that are suitable to be included as subelements of an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetOutput\" data-linktype=\"self-bookmark\">GetOutput()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetOutput_System_Type_\" data-linktype=\"self-bookmark\">GetOutput(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object of type <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_LoadInnerXml_System_Xml_XmlNodeList_\" data-linktype=\"self-bookmark\">LoadInnerXml(XmlNodeList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Parses the specified <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> as transform-specific content of a <code>&lt;Transform&gt;</code> element and configures the internal state of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object to match the <code>&lt;Transform&gt;</code> element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_LoadInput_System_Object_\" data-linktype=\"self-bookmark\">LoadInput(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the specified input into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlDsigEnvelopedSignatureTransform()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlDsigEnvelopedSignatureTransform ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use members of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.XML-XMLDsigEnvelope#2\">    // Sign an XML file and save the signature in a new file.\n    public static void SignXmlFile(string FileName, string SignedFileName, RSA Key)\n    {\n        // Create a new XML document.\n        XmlDocument doc = new XmlDocument();\n\n        // Format the document to ignore white spaces.\n        doc.PreserveWhitespace = false;\n\n        // Load the passed XML file using it&#39;s name.\n        doc.Load(new XmlTextReader(FileName));\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(doc);\n\n        // Add the key to the SignedXml document. \n        signedXml.SigningKey = Key;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n        reference.Uri = &quot;&quot;;\n\n        // Add an enveloped transformation to the reference.\n        XmlDsigEnvelopedSignatureTransform env = new XmlDsigEnvelopedSignatureTransform();\n        reference.AddTransform(env);\n\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n\t\t\n        // Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n        KeyInfo keyInfo = new KeyInfo();\n        keyInfo.AddClause(new RSAKeyValue((RSA)Key));\n        signedXml.KeyInfo = keyInfo;\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));\n\t\t\n\t\t\n        if (doc.FirstChild is XmlDeclaration)  \n        {\n            doc.RemoveChild(doc.FirstChild);\n        }\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        XmlTextWriter xmltw = new XmlTextWriter(SignedFileName, new UTF8Encoding(false));\n        doc.WriteTo(xmltw);\n        xmltw.Close();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.XML-XMLDsigEnvelope#2\">// Sign an XML file and save the signature in a new file.\nvoid SignXmlFile( String^ FileName, String^ SignedFileName, RSA^ Key )\n{\n   \n   // Create a new XML document.\n   XmlDocument^ doc = gcnew XmlDocument;\n   \n   // Format the document to ignore white spaces.\n   doc-&gt;PreserveWhitespace = false;\n   \n   // Load the passed XML file using its name.\n   doc-&gt;Load( gcnew XmlTextReader( FileName ) );\n   \n   // Create a SignedXml object.\n   SignedXml^ signedXml = gcnew SignedXml( doc );\n   \n   // Add the key to the SignedXml document. \n   signedXml-&gt;SigningKey = Key;\n   \n   // Create a reference to be signed.\n   Reference^ reference = gcnew Reference;\n   reference-&gt;Uri = &quot;&quot;;\n   \n   // Add an enveloped transformation to the reference.\n   XmlDsigEnvelopedSignatureTransform^ env = gcnew XmlDsigEnvelopedSignatureTransform;\n   reference-&gt;AddTransform( env );\n   \n   // Add the reference to the SignedXml object.\n   signedXml-&gt;AddReference( reference );\n   \n   // Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n   KeyInfo^ keyInfo = gcnew KeyInfo;\n   keyInfo-&gt;AddClause( gcnew RSAKeyValue( safe_cast&lt;RSA^&gt;(Key) ) );\n   signedXml-&gt;KeyInfo = keyInfo;\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature and save\n   // it to an XmlElement object.\n   XmlElement^ xmlDigitalSignature = signedXml-&gt;GetXml();\n   \n   // Append the element to the XML document.\n   doc-&gt;DocumentElement-&gt;AppendChild( doc-&gt;ImportNode( xmlDigitalSignature, true ) );\n   if ( (doc-&gt;FirstChild)-&gt;GetType() == XmlDeclaration::typeid )\n   {\n      doc-&gt;RemoveChild( doc-&gt;FirstChild );\n   }\n\n   \n   // Save the signed XML document to a file specified\n   // using the passed string.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( SignedFileName,gcnew UTF8Encoding( false ) );\n   doc-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.XML-XMLDsigEnvelope#2\">   &#39; Sign an XML file and save the signature in a new file.\n   Public Shared Sub SignXmlFile(FileName As String, SignedFileName As String, Key As RSA)\n      &#39; Create a new XML document.\n      Dim doc As New XmlDocument()\n      \n      &#39; Format the document to ignore white spaces.\n      doc.PreserveWhitespace = False\n      \n      &#39; Load the passed XML file using it&#39;s name.\n      doc.Load(New XmlTextReader(FileName))\n      \n      &#39; Create a SignedXml object.\n      Dim signedXml As New SignedXml(doc)\n      \n      &#39; Add the key to the SignedXml document. \n      signedXml.SigningKey = Key\n      \n      &#39; Create a reference to be signed.\n      Dim reference As New Reference()\n      reference.Uri = &quot;&quot;\n      \n      &#39; Add an enveloped transformation to the reference.\n      Dim env As New XmlDsigEnvelopedSignatureTransform()\n      reference.AddTransform(env)\n      \n      &#39; Add the reference to the SignedXml object.\n      signedXml.AddReference(reference)\n      \n      \n      &#39; Add an RSAKeyValue KeyInfo (optional; helps recipient find key to validate).\n      Dim keyInfo As New KeyInfo()\n      keyInfo.AddClause(New RSAKeyValue(CType(Key, RSA)))\n      signedXml.KeyInfo = keyInfo\n      \n      &#39; Compute the signature.\n      signedXml.ComputeSignature()\n      \n      &#39; Get the XML representation of the signature and save\n      &#39; it to an XmlElement object.\n      Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n      \n      &#39; Append the element to the XML document.\n      doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, True))\n      \n      \n      If TypeOf doc.FirstChild Is XmlDeclaration Then\n         doc.RemoveChild(doc.FirstChild)\n      End If\n      \n      &#39; Save the signed XML document to a file specified\n      &#39; using the passed string.\n      Dim xmltw As New XmlTextWriter(SignedFileName, New UTF8Encoding(False))\n      doc.WriteTo(xmltw)\n      xmltw.Close()\n   End Sub \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform__ctor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlDsigEnvelopedSignatureTransform(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class with comments, if specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlDsigEnvelopedSignatureTransform (bool includeComments);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeComments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include comments; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the XmlDsigEnvelopedSignatureTransform constructor with a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value of <code>true</code> to include comments. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3\">                bool IncludeComments = true;\n                // This transform is created for demonstration purposes.\n                XmlDsigEnvelopedSignatureTransform secondTransform =\n                    new XmlDsigEnvelopedSignatureTransform(IncludeComments);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3\">                bool IncludeComments = true;\n                // This transform is created for demonstration purposes.\n                XmlDsigEnvelopedSignatureTransform^ secondTransform =\n                    gcnew XmlDsigEnvelopedSignatureTransform(IncludeComments);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#3\">                Dim IncludeComments As Boolean = True\n                &#39; This transform is created for demonstration purposes.\n                Dim secondTransform As _\n                    New XmlDsigEnvelopedSignatureTransform(IncludeComments)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_InputTypes\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_InputTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InputTypes</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of types that are valid inputs to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Type[] InputTypes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </div>\r\n                  <p>An array of valid input types for the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object; you can pass only objects of one of these types to the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput*</span> method of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The valid input types to <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> are <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, and <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the InputTypes property to retrieve the valid input types for the current transform. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5\">        Type[] validInTypes = xmlTransform.InputTypes;\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5\">        array&lt;Type^&gt;^ validInTypes = xmlTransform-&gt;InputTypes;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#5\">        Dim validInTypes() As Type = xmlTransform.InputTypes\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_OutputTypes\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_OutputTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutputTypes</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of types that are possible outputs from the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Type[] OutputTypes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </div>\r\n                  <p>An array of valid output types for the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object; only objects of one of these types are returned from the <span class=\"xref\">stem.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput*</span> methods of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The valid output types for <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> are <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> and <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the OutputTypes property to retrieve the valid output types for the current transform. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6\">        Type[] validOutTypes = xmlTransform.OutputTypes;\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6\">        array&lt;Type^&gt;^ validOutTypes = xmlTransform-&gt;OutputTypes;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#6\">        Dim validOutTypes() As Type = xmlTransform.OutputTypes\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetInnerXml\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetInnerXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInnerXml()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an XML representation of the parameters of an <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object that are suitable to be included as subelements of an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Xml.XmlNodeList GetInnerXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></div>\r\n                  </div>\r\n                  <p>A list of the XML nodes that represent the transform-specific content needed to describe the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object in an XMLDSIG <code>&lt;Transform&gt;</code> element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetOutput\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetOutput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOutput()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object GetOutput ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The containing XML document is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The type of the returned object must be <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigbase64transform#System_Security_Cryptography_Xml_XmlDsigBase64Transform_GetOutput_\" data-linktype=\"relative-path\">GetOutput</a> method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8\">                object outputObject = xmlTransform.GetOutput();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8\">                Object^ outputObject = xmlTransform-&gt;GetOutput();\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#8\">                Dim outputObject As Object = xmlTransform.GetOutput()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetOutput_System_Type_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_GetOutput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetOutput(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object of type <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object GetOutput (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the output to return. <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> is the only valid type for this parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object of type <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>type</code> parameter is not an <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The type of the returned object must be <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GetOutput method to retrieve the output of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9\">                    Type xmlDocumentType = typeof(System.Xml.XmlDocument);\n                    XmlDocument xmlDocumentOutput = (XmlDocument) \n                        xmlTransform.GetOutput(xmlDocumentType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9\">                Type^ xmlDocumentType = System::Xml::XmlDocument::typeid;\n                XmlDocument^ xmlDocumentOutput = (XmlDocument^)\n                    xmlTransform-&gt;GetOutput(xmlDocumentType);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#9\">                    Dim xmlDocumentType As Type\n                    xmlDocumentType = GetType(System.Xml.XmlDocument)\n\n                    Dim xmlDocumentOutput As XmlDocument\n                    xmlDocumentOutput = CType( _\n                        xmlTransform.GetOutput(xmlDocumentType), _\n                        XmlDocument)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_LoadInnerXml_System_Xml_XmlNodeList_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_LoadInnerXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadInnerXml(XmlNodeList)</div>        \r\n          </div>\r\n    \r\n            <p>Parses the specified <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> as transform-specific content of a <code>&lt;Transform&gt;</code> element and configures the internal state of the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object to match the <code>&lt;Transform&gt;</code> element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nodeList</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> to load into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because no transform-specific content is defined for <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a>, a call to this method does not change the state of the transform.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the LoadInnerXml method using the specified <a class=\"xref\" href=\"system.xml.xmlnodelist\" data-linktype=\"relative-path\">XmlNodeList</a> object to configure the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11\">                // An enveloped signature has no inner XML elements\n                secondTransform.LoadInnerXml(xmlDoc.SelectNodes(&quot;//.&quot;));\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11\">                // An enveloped signature has no inner XML elements\n                secondTransform-&gt;LoadInnerXml(xmlDoc-&gt;SelectNodes(&quot;//.&quot;));\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform#11\">                &#39; An enveloped signature has no inner XML elements\n                secondTransform.LoadInnerXml(xmlDoc.SelectNodes(&quot;//.&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_LoadInput_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_LoadInput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadInput(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the specified input into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void LoadInput (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The input to load into the current <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>obj</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The containing XML document is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The type of the input object must be one of the types in the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform#System_Security_Cryptography_Xml_XmlDsigEnvelopedSignatureTransform_InputTypes_\" data-linktype=\"relative-path\">InputTypes</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call the LoadInput method using the specified <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object as the input. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.security.cryptography.xml.xmldsigenvelopedsignaturetransform\" data-linktype=\"relative-path\">XmlDsigEnvelopedSignatureTransform</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform#12\">                string classDescription = secondTransform.ToString();\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform#12\">                Dim classDescription As String = secondTransform.ToString()\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.Xml.XmlDsigBase64Transform#12\">                    String^ classDescription = \n                        secondTransform-&gt;ToString();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"15f98739-e9e3-8352-083a-45e9acc6727e\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography.Xml\\XmlDsigEnvelopedSignatureTransform.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the enveloped signature transform for an XML digital signature as defined by the W3C.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.Xml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform..ctor","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.#ctor","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::#ctor","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetInnerXml","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::GetInnerXml","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.GetOutput","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::GetOutput","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.InputTypes","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::InputTypes","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInnerXml","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::LoadInnerXml","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.LoadInput","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::LoadInput","System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.OutputTypes","System::Security::Cryptography::Xml::XmlDsigEnvelopedSignatureTransform::OutputTypes"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"15f98739-e9e3-8352-083a-45e9acc6727e","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography.Xml\\XmlDsigEnvelopedSignatureTransform.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.Xml/XmlDsigEnvelopedSignatureTransform.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlDsigEnvelopedSignatureTransform class | Microsoft Docs","_op_ogTitle":"XmlDsigEnvelopedSignatureTransform class","description":"Represents the enveloped signature transform for an XML digital signature as defined by the W3C.\n","toc_asset_id":"_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.xmldsigenvelopedsignaturetransform","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.xmldsigenvelopedsignaturetransform","fileRelativePath":"System.Security.Cryptography.Xml.XmlDsigEnvelopedSignatureTransform.html"},"themesRelativePathToOutputRoot":"_themes/"}