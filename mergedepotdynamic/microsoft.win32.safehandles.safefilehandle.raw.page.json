{"content":"    \r\n    <h1 id=\"Microsoft_Win32_SafeHandles_SafeFileHandle\">\r\n      <span class=\"lang-csharp\">SafeFileHandle</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a wrapper class for a file handle.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Security.SecurityCritical]\npublic sealed class SafeFileHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.constrainedexecution.criticalfinalizerobject\" data-linktype=\"relative-path\">CriticalFinalizerObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle\" data-linktype=\"relative-path\">SafeHandle</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.win32.safehandles.safehandlezeroorminusoneisinvalid\" data-linktype=\"relative-path\">Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SafeFileHandle</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"microsoft.win32.safehandles.safehandlezeroorminusoneisinvalid#Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid_IsInvalid\" data-linktype=\"relative-path\">IsInvalid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_Close\" data-linktype=\"relative-path\">Close()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousAddRef_System_Boolean__\" data-linktype=\"relative-path\">DangerousAddRef(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousGetHandle\" data-linktype=\"relative-path\">DangerousGetHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousRelease\" data-linktype=\"relative-path\">DangerousRelease()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_handle\" data-linktype=\"relative-path\">handle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_IsClosed\" data-linktype=\"relative-path\">IsClosed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_SetHandle_System_IntPtr_\" data-linktype=\"relative-path\">SetHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_SetHandleAsInvalid\" data-linktype=\"relative-path\">SetHandleAsInvalid()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class is derived from <a class=\"xref\" href=\"microsoft.win32.safehandles.safehandlezeroorminusoneisinvalid\" data-linktype=\"relative-path\">SafeHandleZeroOrMinusOneIsInvalid</a>. A value of 0 or -1 is an invalid file handle.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SafeHandles_SafeFileHandle__ctor_System_IntPtr_System_Boolean_\" data-linktype=\"self-bookmark\">SafeFileHandle(IntPtr,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.win32.safehandles.safefilehandle\" data-linktype=\"relative-path\">SafeFileHandle</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Win32_SafeHandles_SafeFileHandle_ReleaseHandle\" data-linktype=\"self-bookmark\">ReleaseHandle()</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SafeHandles_SafeFileHandle__ctor_System_IntPtr_System_Boolean_\">\r\n    \r\n            <a id=\"Microsoft_Win32_SafeHandles_SafeFileHandle__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SafeFileHandle(IntPtr,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.win32.safehandles.safefilehandle\" data-linktype=\"relative-path\">SafeFileHandle</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SafeFileHandle (IntPtr preexistingHandle, bool ownsHandle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>preexistingHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> object that represents the pre-existing handle to use.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownsHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to reliably release the handle during the finalization phase; <code>false</code> to prevent reliable release (not recommended).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to open a file by using the <a class=\"xref\" href=\"microsoft.win32.safehandles.safefilehandle\" data-linktype=\"relative-path\">SafeFileHandle</a> class and the unmanaged <code>CreateFile</code> function.  </p>\n<pre><code class=\"lang-cs\" name=\"Microsoft.Win32.SafeHandles.SafeFileHandle.ctor#1\">using System;\nusing Microsoft.Win32.SafeHandles;\nusing System.Runtime.InteropServices;\nusing System.ComponentModel;\n\nclass SafeHandlesExample\n{\n\n    static void Main()\n    {\n        try\n        {\n\n            UnmanagedFileLoader loader = new UnmanagedFileLoader(&quot;example.xml&quot;);\n\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e);\n        }\n        Console.ReadLine();\n\n\n    }\n}\n\nclass UnmanagedFileLoader\n{\n\n    public const short FILE_ATTRIBUTE_NORMAL = 0x80;\n    public const short INVALID_HANDLE_VALUE = -1;\n    public const uint GENERIC_READ = 0x80000000;\n    public const uint GENERIC_WRITE = 0x40000000;\n    public const uint CREATE_NEW = 1;\n    public const uint CREATE_ALWAYS = 2;\n    public const uint OPEN_EXISTING = 3;\n\n    // Use interop to call the CreateFile function.\n    // For more information about CreateFile,\n    // see the unmanaged MSDN reference library.\n    [DllImport(&quot;kernel32.dll&quot;, SetLastError = true, CharSet = CharSet.Unicode)]\n    static extern IntPtr CreateFile(string lpFileName, uint dwDesiredAccess,\n      uint dwShareMode, IntPtr lpSecurityAttributes, uint dwCreationDisposition,\n      uint dwFlagsAndAttributes, IntPtr hTemplateFile);\n\n\n    private SafeFileHandle handleValue = null;\n\n\n    public UnmanagedFileLoader(string Path)\n    {\n        Load(Path);\n    }\n\n\n    public void Load(string Path)\n    {\n        if (Path == null &amp;&amp; Path.Length == 0)\n        {\n            throw new ArgumentNullException(&quot;Path&quot;);\n        }\n\n         // Try to open the file.\n        IntPtr ptr = CreateFile(Path, GENERIC_WRITE, 0, IntPtr.Zero, OPEN_EXISTING, 0, IntPtr.Zero);\n\n        handleValue = new SafeFileHandle(ptr, true);\n\n        // If the handle is invalid,\n         // get the last Win32 error \n         // and throw a Win32Exception.\n         if (handleValue.IsInvalid)\n         {\n             Marshal.ThrowExceptionForHR(Marshal.GetHRForLastWin32Error());\n         }\n    }\n\n    public SafeFileHandle Handle\n    {\n        get\n        {\n            // If the handle is valid,\n            // return it.\n            if (!handleValue.IsInvalid)\n            {\n                return handleValue;\n            }\n            else\n            {\n                return null;\n            }\n        }\n\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Microsoft.Win32.SafeHandles.SafeFileHandle.ctor#1\">Imports System\nImports Microsoft.Win32.SafeHandles\nImports System.Runtime.InteropServices\nImports System.ComponentModel\n\n\n\nClass SafeHandlesExample\n\n\n    Shared Sub Main()\n        Try\n\n            Dim loader As New UnmanagedFileLoader(&quot;example.xml&quot;)\n\n\n        Catch e As Exception\n            Console.WriteLine(e)\n        End Try\n        Console.ReadLine()\n\n    End Sub\nEnd Class\n\n\nClass UnmanagedFileLoader\n\n    Public Const FILE_ATTRIBUTE_NORMAL As Short = &amp;H80\n    Public Const INVALID_HANDLE_VALUE As Short = -1\n    Public Const GENERIC_READ As Long = &amp;H80000000\n    Public Const GENERIC_WRITE As UInteger = &amp;H40000000\n    Public Const CREATE_NEW As UInteger = 1\n    Public Const CREATE_ALWAYS As UInteger = 2\n    Public Const OPEN_EXISTING As UInteger = 3\n\n\n    &#39; Use interop to call the CreateFile function.\n    &#39; For more information about CreateFile,\n    &#39; see the unmanaged MSDN reference library.\n    &lt;DllImport(&quot;kernel32.dll&quot;, SetLastError:=True, CharSet:=CharSet.Unicode)&gt; _\n    Private Shared Function CreateFile(ByVal lpFileName As String, ByVal dwDesiredAccess As System.UInt32, ByVal dwShareMode As System.UInt32, ByVal lpSecurityAttributes As IntPtr, ByVal dwCreationDisposition As System.UInt32, ByVal dwFlagsAndAttributes As System.UInt32, ByVal hTemplateFile As IntPtr) As IntPtr\n\n    End Function\n\n    Private handleValue As SafeFileHandle = Nothing\n\n\n\n    Public Sub New(ByVal Path As String)\n        Load(Path)\n\n    End Sub\n\n\n    Public Sub Load(ByVal Path As String)\n        If Path Is Nothing AndAlso Path.Length = 0 Then\n            Throw New ArgumentNullException(&quot;Path&quot;)\n        End If\n\n        &#39; Try to open the file.\n\n        Dim ptr As IntPtr = CreateFile(Path, GENERIC_WRITE, 0, IntPtr.Zero, OPEN_EXISTING, 0, IntPtr.Zero)\n\n        handleValue = New SafeFileHandle(ptr, True)\n        &#39; If the handle is invalid,\n        &#39; get the last Win32 error \n        &#39; and throw a Win32Exception.\n        If handleValue.IsInvalid Then\n            Marshal.ThrowExceptionForHR(Marshal.GetHRForLastWin32Error())\n        End If\n\n    End Sub\n\n\n    Public ReadOnly Property Handle() As SafeFileHandle\n        Get\n            &#39; If the handle is valid,\n            &#39; return it.\n            If Not handleValue.IsInvalid Then\n                Return handleValue\n            Else\n                Return Nothing\n            End If\n        End Get\n    End Property\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Win32_SafeHandles_SafeFileHandle_ReleaseHandle\">\r\n    \r\n            <a id=\"Microsoft_Win32_SafeHandles_SafeFileHandle_ReleaseHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReleaseHandle()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ReleaseHandle ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Win32.SafeHandles.SafeFileHandle.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Win32.SafeHandles.SafeFileHandle.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SafeHandles.SafeFileHandle\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SafeHandles.SafeFileHandle..ctor\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2b9d0530-5594-240f-4204-c963adf2f6c1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a wrapper class for a file handle.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.Win32.SafeHandles/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Win32.SafeHandles.SafeFileHandle\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Win32.SafeHandles.SafeFileHandle.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Win32.SafeHandles.SafeFileHandle.yml","open_to_public_contributors":true,"api_name":["Microsoft.Win32.SafeHandles.SafeFileHandle","Microsoft.Win32.SafeHandles.SafeFileHandle..ctor","Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Win32.SafeHandles.SafeFileHandle","Microsoft::Win32::SafeHandles::SafeFileHandle","Microsoft.Win32.SafeHandles.SafeFileHandle.#ctor","Microsoft::Win32::SafeHandles::SafeFileHandle::#ctor","Microsoft.Win32.SafeHandles.SafeFileHandle.ReleaseHandle","Microsoft::Win32::SafeHandles::SafeFileHandle::ReleaseHandle"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2b9d0530-5594-240f-4204-c963adf2f6c1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.Win32.SafeHandles/SafeFileHandle.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SafeFileHandle class | Microsoft Docs","_op_ogTitle":"SafeFileHandle class","description":"Represents a wrapper class for a file handle.\n","toc_asset_id":"_splitted/Microsoft.Win32.SafeHandles/toc.json","toc_rel":"_splitted/Microsoft.Win32.SafeHandles/toc.json","source_url":"","ms.assetid":"Microsoft.Win32.SafeHandles.SafeFileHandle","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.win32.safehandles.safefilehandle","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.win32.safehandles.safefilehandle","fileRelativePath":"Microsoft.Win32.SafeHandles.SafeFileHandle.html"},"themesRelativePathToOutputRoot":"_themes/"}