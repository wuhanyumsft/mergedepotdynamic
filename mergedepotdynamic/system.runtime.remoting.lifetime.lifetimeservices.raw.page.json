{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_Lifetime_LifetimeServices\">\r\n      <span class=\"lang-csharp\">LifetimeServices</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls the.NET remoting lifetime services.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Security.SecurityCritical]\npublic sealed class LifetimeServices</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LifetimeServices</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Distributed garbage collection is responsible for controlling the lifetimes of server applications, and for deleting them when their lifetimes have expired. Traditionally, distributed garbage collection uses reference counts and pinging for control. This works well when there are a few clients per object, but does not work well when there are thousands of clients per each object. The lifetime service can assume the function of a traditional distributed garbage collector, and scales well when the number of clients increases.  </p>\n<p> The lifetime service associates a lease with each remotely activated object. When the lease expires, the object is removed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This class makes a link demand. A SecurityException is thrown if the immediate caller does not have infrastructure permission. See <a href=\"../Topic/Link%20Demands.md\" data-linktype=\"relative-path\">Link Demands</a> for more information.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Lifetime_LifetimeServices__ctor\" data-linktype=\"self-bookmark\">LifetimeServices()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an instance of <a class=\"xref\" href=\"system.runtime.remoting.lifetime.lifetimeservices\" data-linktype=\"relative-path\">LifetimeServices</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Lifetime_LifetimeServices_LeaseManagerPollTime\" data-linktype=\"self-bookmark\">LeaseManagerPollTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the time interval between each activation of the lease manager to clean up expired leases.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Lifetime_LifetimeServices_LeaseTime\" data-linktype=\"self-bookmark\">LeaseTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the initial lease time span for an <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Lifetime_LifetimeServices_RenewOnCallTime\" data-linktype=\"self-bookmark\">RenewOnCallTime</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time by which the lease is extended every time a call comes in on the server object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_Lifetime_LifetimeServices_SponsorshipTimeout\" data-linktype=\"self-bookmark\">SponsorshipTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time the lease manager waits for a sponsor to return with a lease renewal time.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Lifetime_LifetimeServices__ctor\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Lifetime_LifetimeServices__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LifetimeServices()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an instance of <a class=\"xref\" href=\"system.runtime.remoting.lifetime.lifetimeservices\" data-linktype=\"relative-path\">LifetimeServices</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public LifetimeServices ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_LeaseManagerPollTime\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_LeaseManagerPollTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LeaseManagerPollTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the time interval between each activation of the lease manager to clean up expired leases.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeSpan LeaseManagerPollTime { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The default amount of time the lease manager sleeps after checking for expired leases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels. This exception is thrown only when setting the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current property defines the frequency at which the lease manager becomes active to clean up expired leases. For example, if LeaseManagerPollTime is set to 100 seconds, the lease list is inspected for cleanups and renewals every 100 seconds.  </p>\n<p> The default value of the LeaseManagerPollTime property is 10 seconds.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_LeaseTime\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_LeaseTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LeaseTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the initial lease time span for an <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeSpan LeaseTime { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The initial lease <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> for objects that can have leases in the <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels. This exception is thrown only when setting the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default lease time span is 5 minutes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_RenewOnCallTime\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_RenewOnCallTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenewOnCallTime</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time by which the lease is extended every time a call comes in on the server object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeSpan RenewOnCallTime { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> by which a lifetime lease in the current <a class=\"xref\" href=\"system.appdomain\" data-linktype=\"relative-path\">AppDomain</a> is extended after each call.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels. This exception is thrown only when setting the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default renewal time by which a lifetime lease is extended is 2 minutes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"ILease_ILease#3\">   // Register the channel.\n   TcpChannel^ myChannel = gcnew TcpChannel;\n   ChannelServices::RegisterChannel( myChannel );\n   RemotingConfiguration::RegisterActivatedClientType( HelloService::typeid, &quot;Tcp://localhost:8085&quot; );\n   TimeSpan myTimeSpan = TimeSpan::FromMinutes( 10 );\n\n   // Create a remote object.\n   HelloService ^ myService = gcnew HelloService;\n   ILease^ myLease;\n   myLease = dynamic_cast&lt;ILease^&gt;(RemotingServices::GetLifetimeService( myService ));\n   if ( myLease == nullptr )\n   {\n      Console::WriteLine( &quot;Cannot lease.&quot; );\n      return  -1;\n   }\n\n   Console::WriteLine( &quot;Initial lease time is {0}&quot;, myLease-&gt;InitialLeaseTime );\n   Console::WriteLine( &quot;Current lease time is {0}&quot;, myLease-&gt;CurrentLeaseTime );\n   Console::WriteLine( &quot;Renew on call time is {0}&quot;, myLease-&gt;RenewOnCallTime );\n   Console::WriteLine( &quot;Sponsorship timeout is {0}&quot;, myLease-&gt;SponsorshipTimeout );\n   Console::WriteLine( &quot;Current lease state is {0}&quot;, myLease-&gt;CurrentState );\n</code></pre><pre><code class=\"lang-cs\" name=\"ILease_ILease#3\">         // Register the channel.\n         TcpChannel myChannel = new TcpChannel ();\n         ChannelServices.RegisterChannel(myChannel);\n         RemotingConfiguration.RegisterActivatedClientType(\n                                typeof(HelloService),&quot;Tcp://localhost:8085&quot;);\n\n         TimeSpan myTimeSpan = TimeSpan.FromMinutes(10);\n\n         // Create a remote object.\n         HelloService myService = new HelloService();\n\n         ILease myLease;\n         myLease = (ILease)RemotingServices.GetLifetimeService(myService);\n         if (myLease == null)\n         {\n            Console.WriteLine(&quot;Cannot lease.&quot;);\n            return;\n         }\n\n         Console.WriteLine (&quot;Initial lease time is &quot; + myLease.InitialLeaseTime);\n         Console.WriteLine (&quot;Current lease time is &quot; + myLease.CurrentLeaseTime);\n         Console.WriteLine (&quot;Renew on call time is &quot; + myLease.RenewOnCallTime);\n         Console.WriteLine (&quot;Sponsorship timeout is &quot; + myLease.SponsorshipTimeout);\n         Console.WriteLine (&quot;Current lease state is &quot; + myLease.CurrentState.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"ILease_ILease#3\">         &#39; Register the channel.\n         Dim myChannel As New TcpChannel()\n         ChannelServices.RegisterChannel(myChannel)\n         RemotingConfiguration.RegisterActivatedClientType( _\n                           GetType(HelloService), &quot;Tcp://localhost:8085&quot;)\n\n         Dim myTimeSpan As TimeSpan = TimeSpan.FromMinutes(10)\n\n         &#39; Create a remote object.\n         Dim myService As New HelloService()\n\n         Dim myLease As ILease\n         myLease = CType(RemotingServices.GetLifetimeService(myService), ILease)\n         If myLease Is Nothing Then\n            Console.WriteLine(&quot;Cannot lease.&quot;)\n            Return\n         End If\n\n         Console.WriteLine(&quot;Initial lease time is &quot; &amp; myLease.InitialLeaseTime.ToString())\n         Console.WriteLine(&quot;Current lease time is &quot; &amp; myLease.CurrentLeaseTime.ToString())\n         Console.WriteLine(&quot;Renew on call time is &quot; &amp; myLease.RenewOnCallTime.ToString())\n         Console.WriteLine(&quot;Sponsorship timeout is &quot; &amp; myLease.SponsorshipTimeout.ToString())\n         Console.WriteLine(&quot;Current lease state is &quot; &amp; myLease.CurrentState.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_SponsorshipTimeout\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_Lifetime_LifetimeServices_SponsorshipTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SponsorshipTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time the lease manager waits for a sponsor to return with a lease renewal time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeSpan SponsorshipTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The initial sponsorship time-out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels. This exception is thrown only when setting the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default time until a call to a sponsor is timed out is 2 minutes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"ILease_ILease#3\">   // Register the channel.\n   TcpChannel^ myChannel = gcnew TcpChannel;\n   ChannelServices::RegisterChannel( myChannel );\n   RemotingConfiguration::RegisterActivatedClientType( HelloService::typeid, &quot;Tcp://localhost:8085&quot; );\n   TimeSpan myTimeSpan = TimeSpan::FromMinutes( 10 );\n\n   // Create a remote object.\n   HelloService ^ myService = gcnew HelloService;\n   ILease^ myLease;\n   myLease = dynamic_cast&lt;ILease^&gt;(RemotingServices::GetLifetimeService( myService ));\n   if ( myLease == nullptr )\n   {\n      Console::WriteLine( &quot;Cannot lease.&quot; );\n      return  -1;\n   }\n\n   Console::WriteLine( &quot;Initial lease time is {0}&quot;, myLease-&gt;InitialLeaseTime );\n   Console::WriteLine( &quot;Current lease time is {0}&quot;, myLease-&gt;CurrentLeaseTime );\n   Console::WriteLine( &quot;Renew on call time is {0}&quot;, myLease-&gt;RenewOnCallTime );\n   Console::WriteLine( &quot;Sponsorship timeout is {0}&quot;, myLease-&gt;SponsorshipTimeout );\n   Console::WriteLine( &quot;Current lease state is {0}&quot;, myLease-&gt;CurrentState );\n</code></pre><pre><code class=\"lang-cs\" name=\"ILease_ILease#3\">         // Register the channel.\n         TcpChannel myChannel = new TcpChannel ();\n         ChannelServices.RegisterChannel(myChannel);\n         RemotingConfiguration.RegisterActivatedClientType(\n                                typeof(HelloService),&quot;Tcp://localhost:8085&quot;);\n\n         TimeSpan myTimeSpan = TimeSpan.FromMinutes(10);\n\n         // Create a remote object.\n         HelloService myService = new HelloService();\n\n         ILease myLease;\n         myLease = (ILease)RemotingServices.GetLifetimeService(myService);\n         if (myLease == null)\n         {\n            Console.WriteLine(&quot;Cannot lease.&quot;);\n            return;\n         }\n\n         Console.WriteLine (&quot;Initial lease time is &quot; + myLease.InitialLeaseTime);\n         Console.WriteLine (&quot;Current lease time is &quot; + myLease.CurrentLeaseTime);\n         Console.WriteLine (&quot;Renew on call time is &quot; + myLease.RenewOnCallTime);\n         Console.WriteLine (&quot;Sponsorship timeout is &quot; + myLease.SponsorshipTimeout);\n         Console.WriteLine (&quot;Current lease state is &quot; + myLease.CurrentState.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"ILease_ILease#3\">         &#39; Register the channel.\n         Dim myChannel As New TcpChannel()\n         ChannelServices.RegisterChannel(myChannel)\n         RemotingConfiguration.RegisterActivatedClientType( _\n                           GetType(HelloService), &quot;Tcp://localhost:8085&quot;)\n\n         Dim myTimeSpan As TimeSpan = TimeSpan.FromMinutes(10)\n\n         &#39; Create a remote object.\n         Dim myService As New HelloService()\n\n         Dim myLease As ILease\n         myLease = CType(RemotingServices.GetLifetimeService(myService), ILease)\n         If myLease Is Nothing Then\n            Console.WriteLine(&quot;Cannot lease.&quot;)\n            Return\n         End If\n\n         Console.WriteLine(&quot;Initial lease time is &quot; &amp; myLease.InitialLeaseTime.ToString())\n         Console.WriteLine(&quot;Current lease time is &quot; &amp; myLease.CurrentLeaseTime.ToString())\n         Console.WriteLine(&quot;Renew on call time is &quot; &amp; myLease.RenewOnCallTime.ToString())\n         Console.WriteLine(&quot;Sponsorship timeout is &quot; &amp; myLease.SponsorshipTimeout.ToString())\n         Console.WriteLine(&quot;Current lease state is &quot; &amp; myLease.CurrentState.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Lifetime.LifetimeServices.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Lifetime.LifetimeServices.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4b62dba6-5d15-caa7-4c0f-33c31334fa6a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls the.NET remoting lifetime services.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting.Lifetime/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.Lifetime.LifetimeServices\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.Lifetime.LifetimeServices.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.Lifetime.LifetimeServices.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.Lifetime.LifetimeServices","System.Runtime.Remoting.Lifetime.LifetimeServices..ctor","System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime","System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime","System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime","System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.Lifetime.LifetimeServices","System::Runtime::Remoting::Lifetime::LifetimeServices","System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor","System::Runtime::Remoting::Lifetime::LifetimeServices::#ctor","System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime","System::Runtime::Remoting::Lifetime::LifetimeServices::LeaseManagerPollTime","System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime","System::Runtime::Remoting::Lifetime::LifetimeServices::LeaseTime","System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime","System::Runtime::Remoting::Lifetime::LifetimeServices::RenewOnCallTime","System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout","System::Runtime::Remoting::Lifetime::LifetimeServices::SponsorshipTimeout"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4b62dba6-5d15-caa7-4c0f-33c31334fa6a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting.Lifetime/LifetimeServices.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LifetimeServices class | Microsoft Docs","_op_ogTitle":"LifetimeServices class","description":"Controls the.NET remoting lifetime services.\n","toc_asset_id":"_splitted/System.Runtime.Remoting.Lifetime/toc.json","toc_rel":"_splitted/System.Runtime.Remoting.Lifetime/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.Lifetime.LifetimeServices","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.lifetime.lifetimeservices","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.lifetime.lifetimeservices","fileRelativePath":"System.Runtime.Remoting.Lifetime.LifetimeServices.html"},"themesRelativePathToOutputRoot":"_themes/"}