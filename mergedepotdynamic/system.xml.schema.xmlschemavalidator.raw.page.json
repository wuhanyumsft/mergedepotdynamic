{"content":"    \r\n    <h1 id=\"System_Xml_Schema_XmlSchemaValidator\">\r\n      <span class=\"lang-csharp\">XmlSchemaValidator</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an XML Schema Definition Language (XSD) Schema validation engine. The XmlSchemaValidator class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class XmlSchemaValidator</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlSchemaValidator</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"IMPORTANT\"><h5>Important</h5><ul>\n<li>Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.  <ul>\n<li>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.  </li>\n<li>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers.  </li>\n</ul>\n</li>\n</ul>\n</div>\n<p> The XmlSchemaValidator class provides an efficient, high-performance mechanism to validate XML data against XML schemas in a push-based manner. For example, the XmlSchemaValidator class allows you to validate an XML infoset in-place without having to serialize it as an XML document and then reparse the document using a validating XML reader. The XmlSchemaValidator class can also be used to build validation engines over custom XML data sources or as a way to build a validating XML writer.  </p>\n<p> For more information about the XmlSchemaValidator class, see the <a href=\"../Topic/XmlSchemaValidator%20Push-Based%20Validation.md\" data-linktype=\"relative-path\">XmlSchemaValidator Push-Based Validation</a> topic.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> and <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> validation flags of an XmlSchemaValidator object are not set be default. Additionally, the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property of an XmlSchemaValidator object is <code>null</code> by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator__ctor_System_Xml_XmlNameTable_System_Xml_Schema_XmlSchemaSet_System_Xml_IXmlNamespaceResolver_System_Xml_Schema_XmlSchemaValidationFlags_\" data-linktype=\"self-bookmark\">XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_LineInfoProvider\" data-linktype=\"self-bookmark\">LineInfoProvider</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the line number information for the XML node being validated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_SourceUri\" data-linktype=\"self-bookmark\">SourceUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the source URI for the XML node being validated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidationEventSender\" data-linktype=\"self-bookmark\">ValidationEventSender</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object sent as the sender object of a validation event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_XmlResolver\" data-linktype=\"self-bookmark\">XmlResolver</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object used to resolve <code>xs:import</code> and <code>xs:include</code> elements as well as <code>xsi:schemaLocation</code> and <code>xsi:noNamespaceSchemaLocation</code> attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_AddSchema_System_Xml_Schema_XmlSchema_\" data-linktype=\"self-bookmark\">AddSchema(XmlSchema)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_EndValidation\" data-linktype=\"self-bookmark\">EndValidation()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends validation and checks identity constraints for the entire XML document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_GetExpectedAttributes\" data-linktype=\"self-bookmark\">GetExpectedAttributes()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the expected attributes for the current element context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_GetExpectedParticles\" data-linktype=\"self-bookmark\">GetExpectedParticles()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the expected particles in the current element context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_GetUnspecifiedDefaultAttributes_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">GetUnspecifiedDefaultAttributes(ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates identity constraints on the default attributes and populates the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> specified with <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> objects for any attributes with default values that have not been previously validated using the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span> method in the element context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_Initialize\" data-linktype=\"self-bookmark\">Initialize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the state of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_Initialize_System_Xml_Schema_XmlSchemaObject_\" data-linktype=\"self-bookmark\">Initialize(XmlSchemaObject)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the state of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object using the <a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a> specified for partial validation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_SkipToEndElement_System_Xml_Schema_XmlSchemaInfo_\" data-linktype=\"self-bookmark\">SkipToEndElement(XmlSchemaInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Skips validation of the current element content and prepares the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object to validate content in the parent element&#39;s context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_System_String_System_String_System_String_System_Xml_Schema_XmlSchemaInfo_\" data-linktype=\"self-bookmark\">ValidateAttribute(String,String,String,XmlSchemaInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates the attribute name, namespace URI, and value in the current element context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_System_String_System_String_System_Xml_Schema_XmlValueGetter_System_Xml_Schema_XmlSchemaInfo_\" data-linktype=\"self-bookmark\">ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates the attribute name, namespace URI, and value in the current element context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateElement_System_String_System_String_System_Xml_Schema_XmlSchemaInfo_\" data-linktype=\"self-bookmark\">ValidateElement(String,String,XmlSchemaInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates the element in the current context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateElement_System_String_System_String_System_Xml_Schema_XmlSchemaInfo_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates the element in the current context with the <code>xsi:Type</code>, <code>xsi:Nil</code>, <code>xsi:SchemaLocation</code>, and <code>xsi:NoNamespaceSchemaLocation</code> attribute values specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_System_Xml_Schema_XmlSchemaInfo_\" data-linktype=\"self-bookmark\">ValidateEndElement(XmlSchemaInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_System_Xml_Schema_XmlSchemaInfo_System_Object_\" data-linktype=\"self-bookmark\">ValidateEndElement(XmlSchemaInfo,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies if the text content of the element specified is valid according to its data type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateEndOfAttributes_System_Xml_Schema_XmlSchemaInfo_\" data-linktype=\"self-bookmark\">ValidateEndOfAttributes(XmlSchemaInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies whether all the required attributes in the element context are present and prepares the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object to validate the child content of the element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateText_System_String_\" data-linktype=\"self-bookmark\">ValidateText(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates whether the text <code>string</code> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateText_System_Xml_Schema_XmlValueGetter_\" data-linktype=\"self-bookmark\">ValidateText(XmlValueGetter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates whether the text returned by the <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateWhitespace_System_String_\" data-linktype=\"self-bookmark\">ValidateWhitespace(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates whether the white space in the <code>string</code> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidateWhitespace_System_Xml_Schema_XmlValueGetter_\" data-linktype=\"self-bookmark\">ValidateWhitespace(XmlValueGetter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Validates whether the white space returned by the <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Schema_XmlSchemaValidator_ValidationEventHandler\" data-linktype=\"self-bookmark\">ValidationEventHandler</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The <a class=\"xref\" href=\"system.xml.schema.validationeventhandler\" data-linktype=\"relative-path\">ValidationEventHandler</a> that receives schema validation warnings and errors encountered during schema validation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator__ctor_System_Xml_XmlNameTable_System_Xml_Schema_XmlSchemaSet_System_Xml_IXmlNamespaceResolver_System_Xml_Schema_XmlSchemaValidationFlags_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nameTable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlnametable\" data-linktype=\"relative-path\">XmlNameTable</a> object containing element and attribute names as atomized strings.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemas</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object containing the XML Schema Definition Language (XSD) schemas used for validation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceResolver</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> object used for resolving namespaces encountered during validation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>validationFlags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> value specifying schema validation options.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>One or more of the parameters specified are <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaexception\" data-linktype=\"relative-path\">XmlSchemaException</a></div>\r\n                  </div>\r\n                  <p>An error occurred while compiling schemas in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the XmlSchemaValidator constructor.  </p>\n<ul>\n<li><p>The contents of the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> parameter are copied into an internal <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object when the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> or the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> validation options are set. As a result, changes to the input <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object during validation do not affect the outcome of validation.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> parameter specified is not compiled, its <a class=\"xref\" href=\"system.xml.schema.xmlschemaset#System_Xml_Schema_XmlSchemaSet_Compile_\" data-linktype=\"relative-path\">Compile</a> method is called.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> parameter is especially important for validating <code>xs:QName</code> types. The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class does not copy the in-scope namespaces from the <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> object but instead holds a reference to it. This allows new namespaces to be added to the <a class=\"xref\" href=\"system.xml.ixmlnamespaceresolver\" data-linktype=\"relative-path\">IXmlNamespaceResolver</a> object during the validation process.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> and <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> validation flags of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object are not set be default. Additionally, the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_XmlResolver_\" data-linktype=\"relative-path\">XmlResolver</a> property of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object is <code>null</code> by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the XmlSchemaValidator constructor, see the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class reference topic.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_LineInfoProvider\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_LineInfoProvider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LineInfoProvider</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the line number information for the XML node being validated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.ixmllineinfo\" data-linktype=\"relative-path\">IXmlLineInfo</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.ixmllineinfo\" data-linktype=\"relative-path\">IXmlLineInfo</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <ul>\n<li><p>Line information is reported by any <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a> thrown during the validation process.  </p>\n</li>\n<li><p>The default <a class=\"xref\" href=\"system.xml.ixmllineinfo\" data-linktype=\"relative-path\">IXmlLineInfo</a> object returned by the LineInfoProvider property returns 0 for the <a class=\"xref\" href=\"system.xml.ixmllineinfo#System_Xml_IXmlLineInfo_LineNumber_\" data-linktype=\"relative-path\">LineNumber</a> and <a class=\"xref\" href=\"system.xml.ixmllineinfo#System_Xml_IXmlLineInfo_LinePosition_\" data-linktype=\"relative-path\">LinePosition</a> properties.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_SourceUri\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_SourceUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SourceUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the source URI for the XML node being validated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri SourceUri { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object representing the source URI for the XML node being validated; the default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <ul>\n<li><p>The source URI is reported by any <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a> thrown during the validation process.  </p>\n</li>\n<li><p>If the SourceUri property is not set, the file name for the XML document is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> in validation error messages.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidationEventSender\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidationEventSender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidationEventSender</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object sent as the sender object of a validation event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ValidationEventSender { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>; the default is this <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of a validation event, see the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidationEventHandler\" data-linktype=\"relative-path\">ValidationEventHandler</a> event.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_XmlResolver\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_XmlResolver_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlResolver</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object used to resolve <code>xs:import</code> and <code>xs:include</code> elements as well as <code>xsi:schemaLocation</code> and <code>xsi:noNamespaceSchemaLocation</code> attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlResolver XmlResolver { set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlresolver\" data-linktype=\"relative-path\">XmlResolver</a> object; the default is an <a class=\"xref\" href=\"system.xml.xmlurlresolver\" data-linktype=\"relative-path\">XmlUrlResolver</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> and <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> validation flags of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object are not set be default. Additionally, the XmlResolver property of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object is <code>null</code> by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_AddSchema_System_Xml_Schema_XmlSchema_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_AddSchema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSchema(XmlSchema)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an XML Schema Definition Language (XSD) schema to the set of schemas used for validation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddSchema (System.Xml.Schema.XmlSchema schema);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schema</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> object to add to the set of schemas used for validation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> parameter specified is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The target namespace of the <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> parameter matches that of any element or attribute already encountered by the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaexception\" data-linktype=\"relative-path\">XmlSchemaException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> parameter is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the AddSchema method.  </p>\n<ul>\n<li><p>The AddSchema method can be used to simulate the effect of encountering an inline XML schema in the XML document being validated.  </p>\n</li>\n<li><p>The target namespace of the <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> parameter cannot match that of any element or attribute already encountered by the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> validation option is not set, the AddSchema method does nothing.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_EndValidation\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_EndValidation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndValidation()</div>        \r\n          </div>\r\n    \r\n            <p>Ends validation and checks identity constraints for the entire XML document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndValidation ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>An identity constraint error was found in the XML document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EndValidation method ends validation and checks identity constraints for the entire XML document if the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> validation option is set.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_GetExpectedAttributes\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_GetExpectedAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetExpectedAttributes()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the expected attributes for the current element context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> objects or an empty array if there are no expected attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the GetExpectedAttributes method.  </p>\n<ul>\n<li><p>If the GetExpectedAttributes method is called immediately after the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateElement_\" data-linktype=\"relative-path\">ValidateElement</a> method, all the attributes that could appear in the XML document are returned.  </p>\n</li>\n<li><p>If the GetExpectedAttributes method is called after one or more calls to the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_\" data-linktype=\"relative-path\">ValidateAttribute</a> method, the attributes that haven&#39;t yet been validated for the current element are returned.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_GetExpectedParticles\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_GetExpectedParticles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetExpectedParticles()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the expected particles in the current element context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaparticle\" data-linktype=\"relative-path\">XmlSchemaParticle</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.xml.schema.xmlschemaparticle\" data-linktype=\"relative-path\">XmlSchemaParticle</a> objects or an empty array if there are no expected particles.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The valid particles that can be returned by the GetExpectedParticles method are instances of the <a class=\"xref\" href=\"system.xml.schema.xmlschemaelement\" data-linktype=\"relative-path\">XmlSchemaElement</a> and <a class=\"xref\" href=\"system.xml.schema.xmlschemaany\" data-linktype=\"relative-path\">XmlSchemaAny</a> classes.  </p>\n<p> When the compositor for the content model is an <code>xs:sequence</code>, only the next particle in the sequence is returned. If the compositor for the content model is an <code>xs:all</code> or an <code>xs:choice</code>, then all valid particles that could follow in the current element context are returned.  </p>\n<p> For example, in the XML Schema Definition Language (XSD) schema and XML document that follow, after validating the <code>book</code> element, the <code>book</code> element is the current element context. The GetExpectedParticles method returns an array containing a single <a class=\"xref\" href=\"system.xml.schema.xmlschemaelement\" data-linktype=\"relative-path\">XmlSchemaElement</a> object representing the <code>title</code> element. When the validation context is the <code>title</code> element, the GetExpectedParticles method returns an empty array. If the GetExpectedParticles method is called after the <code>title</code> element has been validated but before the <code>description</code> element has been validated, it returns an array containing a single <a class=\"xref\" href=\"system.xml.schema.xmlschemaelement\" data-linktype=\"relative-path\">XmlSchemaElement</a> object representing the <code>description</code> element. If the GetExpectedParticles method is called after the <code>description</code> element has been validated then it returns an array containing a single <a class=\"xref\" href=\"system.xml.schema.xmlschemaany\" data-linktype=\"relative-path\">XmlSchemaAny</a> object representing the wildcard.  </p>\n<pre><code class=\"lang-vb#\">Dim reader As XmlReader =  XmlReader.Create(&quot;input.xml&quot;)   \n\nDim schemaSet As XmlSchemaSet =  New XmlSchemaSet()   \nschemaSet.Add(Nothing, &quot;schema.xsd&quot;)  \nDim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)   \n\nDim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)  \nvalidator.Initialize()  \n\nvalidator.ValidateElement(&quot;book&quot;, &quot;&quot;, Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nFor Each element As XmlSchemaElement In validator.GetExpectedParticles()  \n    Console.WriteLine(element.Name)  \nNext  \n\nvalidator.ValidateElement(&quot;title&quot;, &quot;&quot;, Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nFor Each element As XmlSchemaElement In validator.GetExpectedParticles()  \n    Console.WriteLine(element.Name)  \nNext  \nvalidator.ValidateEndElement(Nothing)  \n\nFor Each element As XmlSchemaElement In validator.GetExpectedParticles()  \n    Console.WriteLine(element.Name)  \nNext  \n\nvalidator.ValidateElement(&quot;description&quot;, &quot;&quot;, Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateEndElement(Nothing)  \n\nFor Each particle As XmlSchemaParticle In validator.GetExpectedParticles()  \n    Console.WriteLine(particle.GetType())  \nNext  \n\nvalidator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateEndElement(Nothing)  \n\nvalidator.ValidateEndElement(Nothing)  \n</code></pre><pre><code class=\"lang-c#\">XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);  \n\nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, &quot;schema.xsd&quot;);  \nXmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);  \n\nXmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize();  \n\nvalidator.ValidateElement(&quot;book&quot;, &quot;&quot;, null);  \n\nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nforeach (XmlSchemaElement element in validator.GetExpectedParticles())  \n{  \n    Console.WriteLine(element.Name);  \n}  \n\nvalidator.ValidateElement(&quot;title&quot;, &quot;&quot;, null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nforeach (XmlSchemaElement element in validator.GetExpectedParticles())  \n{  \n    Console.WriteLine(element.Name);  \n}  \nvalidator.ValidateEndElement(null);  \n\nforeach (XmlSchemaElement element in validator.GetExpectedParticles())  \n{  \n    Console.WriteLine(element.Name);  \n}  \n\nvalidator.ValidateElement(&quot;description&quot;, &quot;&quot;, null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateEndElement(null);  \n\nforeach (XmlSchemaParticle particle in validator.GetExpectedParticles())  \n{  \n    Console.WriteLine(particle.GetType());  \n}  \n\nvalidator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateEndElement(null);  \n\nvalidator.ValidateEndElement(null);  \n</code></pre><p> The example takes the following XML as input.  </p>\n<p> <code>&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;</code>  </p>\n<p> <code>&lt;xs:element name=&quot;book&quot;&gt;</code>  </p>\n<p> <code>&lt;xs:complexType&gt;</code>  </p>\n<p> <code>&lt;xs:sequence&gt;</code>  </p>\n<p> <code>&lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;</code>  </p>\n<p> <code>&lt;xs:element name=&quot;description&quot; type=&quot;xs:string&quot; /&gt;</code>  </p>\n<p> <code>&lt;xs:any processContents =&quot;lax&quot;/&gt;</code>  </p>\n<p> <code>&lt;/xs:sequence&gt;</code>  </p>\n<p> <code>&lt;/xs:complexType&gt;</code>  </p>\n<p> <code>&lt;/xs:element&gt;</code>  </p>\n<p> <code>&lt;/xs:schema&gt;</code>  </p>\n<p> The example takes the following XSD schema as input.  </p>\n<p> <code>&lt;book&gt;</code>  </p>\n<p> <code>&lt;title&gt;My Book&lt;/title&gt;</code>  </p>\n<p> <code>&lt;description&gt;My Book&#39;s Description&lt;/description&gt;</code>  </p>\n<p> <code>&lt;namespace&gt;System.Xml.Schema&lt;/namespace&gt;</code>  </p>\n<p> <code>&lt;/book&gt;</code></p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_GetUnspecifiedDefaultAttributes_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_GetUnspecifiedDefaultAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetUnspecifiedDefaultAttributes(ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Validates identity constraints on the default attributes and populates the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> specified with <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> objects for any attributes with default values that have not been previously validated using the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span> method in the element context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> to populate with <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> objects for any attributes not yet encountered during validation in the element context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetUnspecifiedDefaultAttributes method must be called after validating all the attributes for the current element with the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_\" data-linktype=\"relative-path\">ValidateAttribute</a> method. The GetUnspecifiedDefaultAttributes method should be used to determine what default attributes are to be inserted into the XML document being validated.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_Initialize\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the state of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Initialize ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Calling the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.Initialize*</span> method is valid immediately after the construction of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object or after a call to <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.EndValidation*</span> only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Initialize method is only valid if called immediately after the construction of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object or after a call to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_EndValidation_\" data-linktype=\"relative-path\">EndValidation</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_Initialize_System_Xml_Schema_XmlSchemaObject_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize(XmlSchemaObject)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the state of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object using the <a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a> specified for partial validation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>partialValidationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemaelement\" data-linktype=\"relative-path\">XmlSchemaElement</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a>, or <a class=\"xref\" href=\"system.xml.schema.xmlschematype\" data-linktype=\"relative-path\">XmlSchemaType</a> object used to initialize the validation context of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object for partial validation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Calling the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.Initialize*</span> method is valid immediately after the construction of an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object or after a call to <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.EndValidation*</span> only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a> parameter is not an <a class=\"xref\" href=\"system.xml.schema.xmlschemaelement\" data-linktype=\"relative-path\">XmlSchemaElement</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a>, or <a class=\"xref\" href=\"system.xml.schema.xmlschematype\" data-linktype=\"relative-path\">XmlSchemaType</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a> parameter cannot be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Initialize method that takes an <a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a> as a parameter initializes an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object to its starting state for partial validation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, an <a class=\"xref\" href=\"system.xml.schema.xmlschemaobject\" data-linktype=\"relative-path\">XmlSchemaObject</a> is initialized for partial validation using the Initialize method. The <code>orderNumber</code> schema element is passed by selecting the schema element by <a class=\"xref\" href=\"system.xml.xmlqualifiedname\" data-linktype=\"relative-path\">XmlQualifiedName</a> in the <a class=\"xref\" href=\"system.xml.schema.xmlschemaobjecttable\" data-linktype=\"relative-path\">XmlSchemaObjectTable</a> collection returned by the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset#System_Xml_Schema_XmlSchemaSet_GlobalElements_\" data-linktype=\"relative-path\">GlobalElements</a> property of the <a class=\"xref\" href=\"system.xml.schema.xmlschemaset\" data-linktype=\"relative-path\">XmlSchemaSet</a> object. The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object then validates this specific element.  </p>\n<pre><code class=\"lang-vb#\">Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(Nothing, &quot;schema.xsd&quot;)  \nschemaSet.Compile()  \nDim nameTable As NameTable = New NameTable()  \nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \n\nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(&quot;orderNumber&quot;)))  \n\nvalidator.ValidateElement(&quot;orderNumber&quot;, &quot;&quot;, Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateText(&quot;123&quot;)  \nvalidator.ValidateEndElement(Nothing)  \n</code></pre><pre><code class=\"lang-c#\">XmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, &quot;schema.xsd&quot;);  \nschemaSet.Compile();  \nNameTable nameTable = new NameTable();  \nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \n\nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(&quot;orderNumber&quot;)]);  \n\nvalidator.ValidateElement(&quot;orderNumber&quot;, &quot;&quot;, null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateText(&quot;123&quot;);  \nvalidator.ValidateEndElement(null);  \n</code></pre><p> The example takes the following XML schema as input.  </p>\n<p> <code>&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;</code>  </p>\n<p> <code>&lt;xs:element name=&quot;orderNumber&quot; type=&quot;xs:int&quot; /&gt;</code>  </p>\n<p> <code>&lt;/xs:schema&gt;</code></p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_SkipToEndElement_System_Xml_Schema_XmlSchemaInfo_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_SkipToEndElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SkipToEndElement(XmlSchemaInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Skips validation of the current element content and prepares the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object to validate content in the parent element&#39;s context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set if the current element content is successfully skipped. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The SkipToEndElement method was not called in the correct sequence. For example, calling SkipToEndElement after calling SkipToEndElement.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the SkipToEndElement method.  </p>\n<ul>\n<li><p>The SkipToEndElement method skips validation of the current element content and prepares the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object to validate content in the parent element&#39;s context; it is equivalent to skipping validation for all the children of the current element and then calling the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\" data-linktype=\"relative-path\">ValidateEndElement</a> method.  </p>\n</li>\n<li><p>If the current element content is successfully skipped, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidity\" data-linktype=\"relative-path\">XmlSchemaValidity</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> No validation errors are reported on skipped content.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_System_String_System_String_System_String_System_Xml_Schema_XmlSchemaInfo_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateAttribute(String,String,String,XmlSchemaInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Validates the attribute name, namespace URI, and value in the current element context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the attribute to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the attribute to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful validation of the attribute. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The validated attribute&#39;s value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The attribute is not valid in the current element context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span> method was not called in the correct sequence. For example, calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span> after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>One or more of the parameters specified are <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateAttribute method.  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_GetUnspecifiedDefaultAttributes_\" data-linktype=\"relative-path\">GetUnspecifiedDefaultAttributes</a> method must be called after validating all the attributes for the current element with the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_\" data-linktype=\"relative-path\">ValidateAttribute</a> method.  </p>\n</li>\n<li><p>If an <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> object was passed to the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_Initialize_\" data-linktype=\"relative-path\">Initialize</a> method, the ValidateAttribute method validates the attribute against the <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> object.  </p>\n</li>\n<li><p>If the attribute is successfully validated in the current element context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaAttribute_\" data-linktype=\"relative-path\">SchemaAttribute</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaType_\" data-linktype=\"relative-path\">SchemaType</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_MemberType_\" data-linktype=\"relative-path\">MemberType</a>, and <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> properties are set with the results of the validation.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_System_String_System_String_System_Xml_Schema_XmlValueGetter_System_Xml_Schema_XmlSchemaInfo_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Validates the attribute name, namespace URI, and value in the current element context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the attribute to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a><code>delegate</code> used to pass the attribute&#39;s value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful validation of the attribute. This parameter and can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The validated attribute&#39;s value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The attribute is not valid in the current element context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span> method was not called in the correct sequence. For example, calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span> after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>One or more of the parameters specified are <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateAttribute method.  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_GetUnspecifiedDefaultAttributes_\" data-linktype=\"relative-path\">GetUnspecifiedDefaultAttributes</a> method must be called after validating all the attributes for the current element with the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateAttribute_\" data-linktype=\"relative-path\">ValidateAttribute</a> method.  </p>\n</li>\n<li><p>If an <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> object was passed to the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_Initialize_\" data-linktype=\"relative-path\">Initialize</a> method, the ValidateAttribute method validates the attribute against the <a class=\"xref\" href=\"system.xml.schema.xmlschemaattribute\" data-linktype=\"relative-path\">XmlSchemaAttribute</a> object.  </p>\n</li>\n<li><p>If the attribute is successfully validated in the current element context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaAttribute_\" data-linktype=\"relative-path\">SchemaAttribute</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaType_\" data-linktype=\"relative-path\">SchemaType</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_MemberType_\" data-linktype=\"relative-path\">MemberType</a>, and <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> properties are set with the results of the validation.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateElement_System_String_System_String_System_Xml_Schema_XmlSchemaInfo_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateElement(String,String,XmlSchemaInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Validates the element in the current context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the element to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful validation of the element&#39;s name. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The element&#39;s name is not valid in the current context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateElement*</span> method was not called in the correct sequence. For example, the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateElement*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateElement method.  </p>\n<ul>\n<li><p>If the element name is successfully validated in the current context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_IsNil_\" data-linktype=\"relative-path\">IsNil</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaType_\" data-linktype=\"relative-path\">SchemaType</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaElement_\" data-linktype=\"relative-path\">SchemaElement</a>, and <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> properties are set with the results of the validation.  </p>\n</li>\n<li><p>If the element name or any of its attributes are invalid the current context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidity\" data-linktype=\"relative-path\">XmlSchemaValidity</a>; otherwise the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidity\" data-linktype=\"relative-path\">XmlSchemaValidity</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateElement_System_String_System_String_System_Xml_Schema_XmlSchemaInfo_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Validates the element in the current context with the <code>xsi:Type</code>, <code>xsi:Nil</code>, <code>xsi:SchemaLocation</code>, and <code>xsi:NoNamespaceSchemaLocation</code> attribute values specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the element to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful validation of the element&#39;s name. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xsiType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>xsi:Type</code> attribute value of the element. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xsiNil</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>xsi:Nil</code> attribute value of the element. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xsiSchemaLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>xsi:SchemaLocation</code> attribute value of the element. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xsiNoNamespaceSchemaLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>xsi:NoNamespaceSchemaLocation</code> attribute value of the element. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The element&#39;s name is not valid in the current context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateElement*</span> method was not called in the correct sequence. For example, the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateElement*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateElement method.  </p>\n<ul>\n<li><p>If the element name is successfully validated in the current context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_IsNil_\" data-linktype=\"relative-path\">IsNil</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaType_\" data-linktype=\"relative-path\">SchemaType</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_SchemaElement_\" data-linktype=\"relative-path\">SchemaElement</a>, and <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> properties are set with the results of the validation.  </p>\n</li>\n<li><p>If the element name or any of its attributes are invalid in the current context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidity\" data-linktype=\"relative-path\">XmlSchemaValidity</a>; otherwise the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidity\" data-linktype=\"relative-path\">XmlSchemaValidity</a>.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> value was not passed as a parameter to the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator__ctor_\" data-linktype=\"relative-path\">XmlSchemaValidator</a> constructor, <code>xsi:SchemaLocation</code> and <code>xsi:NoNamespaceSchemaLocation</code> attribute values are ignored.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_System_Xml_Schema_XmlSchemaInfo_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateEndElement(XmlSchemaInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies if the text content of the element is valid according to its data type for elements with simple content, and verifies if the content of the current element is complete for elements with complex content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful validation of the element. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The parsed, typed text value of the element if the element has simple content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The element&#39;s content is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateEndElement*</span> method was not called in the correct sequence. For example, if the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateEndElement*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.SkipToEndElement*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateEndElement method.  </p>\n<ul>\n<li><p>For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the results of previous calls to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateText_\" data-linktype=\"relative-path\">ValidateText</a>.  </p>\n</li>\n<li><p>For elements with complex content, the ValidateEndElement method verifies if the content of the current element is complete.  </p>\n</li>\n<li><p>If the element has a default value, the value returned from the ValidateEndElement method is the default value for the element.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object was constructed with the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.  </p>\n</li>\n<li><p>If the element is successfully validated in the current context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_IsDefault_\" data-linktype=\"relative-path\">IsDefault</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_MemberType_\" data-linktype=\"relative-path\">MemberType</a>, and <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> properties are set with the results of the validation.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_System_Xml_Schema_XmlSchemaInfo_System_Object_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateEndElement(XmlSchemaInfo,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies if the text content of the element specified is valid according to its data type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful validation of the text content of the element. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typedValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The typed text content of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The parsed, typed simple content of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The element&#39;s text content is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateEndElement*</span> method was not called in the correct sequence (for example, if the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateEndElement*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.SkipToEndElement*</span>), calls to the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateText*</span> method have been previously made, or the element has complex content.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The typed text content parameter cannot be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> If you are validating against the <code>xs:key</code>, <code>xs:keyref</code>, or <code>xs:unique</code> identity constraints, do not use the ValidateEndElement method overload. Instead, call the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateText_\" data-linktype=\"relative-path\">ValidateText</a> method and pass it the value of the element. Then call the  <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\" data-linktype=\"relative-path\">ValidateEndElement</a> method overload, which takes <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> as an argument, to verify that the text content of the element is valid according to its data type.  </p>\n</div>\n<p> The following are important notes to consider when using the ValidateEndElement method.  </p>\n<ul>\n<li><p>For elements with simple content, the ValidateEndElement method verifies that the text content of the element is valid according to its data type and returns the parsed typed value. The text content of the element is obtained from the typed content passed as a parameter.  </p>\n</li>\n<li><p>If calls to the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateText_\" data-linktype=\"relative-path\">ValidateText</a> method have been previously made, an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown.  </p>\n</li>\n<li><p>If the element has complex content an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown.  </p>\n</li>\n<li><p>If the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object was constructed with the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationflags\" data-linktype=\"relative-path\">XmlSchemaValidationFlags</a> value as a parameter, the ValidateEndElement method checks the identity constraint rules (if any) that apply to the element.  </p>\n</li>\n<li><p>If the element is successfully validated in the current context, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_IsDefault_\" data-linktype=\"relative-path\">IsDefault</a>, <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_MemberType_\" data-linktype=\"relative-path\">MemberType</a>, and <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> properties are set with the results of the validation.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateEndOfAttributes_System_Xml_Schema_XmlSchemaInfo_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateEndOfAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateEndOfAttributes(XmlSchemaInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies whether all the required attributes in the element context are present and prepares the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> object to validate the child content of the element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemaInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object whose properties are set on successful verification that all the required attributes in the element context are present. This parameter can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>One or more of the required attributes in the current element context were not found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The ValidateEndOfAttributes method was not called in the correct sequence. For example, calling ValidateEndOfAttributes after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.SkipToEndElement*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>One or more of the parameters specified are <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateEndOfAttributes method.  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_GetUnspecifiedDefaultAttributes_\" data-linktype=\"relative-path\">GetUnspecifiedDefaultAttributes</a> method should always be called before ValidateEndOfAttributes.  </p>\n</li>\n<li><p>The ValidateEndOfAttributes method must be called before proceeding with validation of an element&#39;s content.  </p>\n</li>\n<li><p>If all the required attributes in the element context are present, the <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo\" data-linktype=\"relative-path\">XmlSchemaInfo</a> object&#39;s (if specified) <a class=\"xref\" href=\"system.xml.schema.xmlschemainfo#System_Xml_Schema_XmlSchemaInfo_Validity_\" data-linktype=\"relative-path\">Validity</a> property is set to <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidity\" data-linktype=\"relative-path\">XmlSchemaValidity</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateText_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateText(String)</div>        \r\n          </div>\r\n    \r\n            <p>Validates whether the text <code>string</code> specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateText (string elementValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A text <code>string</code> to validate in the current element context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The text <code>string</code> specified is not allowed in the current element context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateText*</span> method was not called in the correct sequence. For example, the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateText*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The text <code>string</code> parameter cannot be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateText method.  </p>\n<ul>\n<li><p>If the element has simple content, the text <code>string</code> specified is concatenated on each call to the ValidateText method until the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\" data-linktype=\"relative-path\">ValidateEndElement</a> method is called. When the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\" data-linktype=\"relative-path\">ValidateEndElement</a> method is called, all the text is validated.  </p>\n</li>\n<li><p>If the element has complex content, no text concatenation occurs.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateText_System_Xml_Schema_XmlValueGetter_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateText(XmlValueGetter)</div>        \r\n          </div>\r\n    \r\n            <p>Validates whether the text returned by the <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a> object specified is allowed in the current element context, and accumulates the text for validation if the current element has simple content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a><code>delegate</code> used to pass the text value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>The text <code>string</code> specified is not allowed in the current element context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateText*</span> method was not called in the correct sequence. For example, the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateText*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The text <code>string</code> parameter cannot be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following are important notes to consider when using the ValidateText method.  </p>\n<ul>\n<li><p>If the element has simple content, the text <code>string</code> specified is concatenated on each call to the ValidateText method until the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\" data-linktype=\"relative-path\">ValidateEndElement</a> method is called. When the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator#System_Xml_Schema_XmlSchemaValidator_ValidateEndElement_\" data-linktype=\"relative-path\">ValidateEndElement</a> method is called, all the text is validated.  </p>\n</li>\n<li><p>If the element has complex content, no text concatenation occurs.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateWhitespace_System_String_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateWhitespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateWhitespace(String)</div>        \r\n          </div>\r\n    \r\n            <p>Validates whether the white space in the <code>string</code> specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateWhitespace (string elementValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A white space <code>string</code> to validate in the current element context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>White space is not allowed in the current element context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*</span> method was not called in the correct sequence. For example, if the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidateWhitespace_System_Xml_Schema_XmlValueGetter_\">\r\n    \r\n            <a id=\"System_Xml_Schema_XmlSchemaValidator_ValidateWhitespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateWhitespace(XmlValueGetter)</div>        \r\n          </div>\r\n    \r\n            <p>Validates whether the white space returned by the <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a> object specified is allowed in the current element context, and accumulates the white space for validation if the current element has simple content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlvaluegetter\" data-linktype=\"relative-path\">XmlValueGetter</a><code>delegate</code> used to pass the white space value as a Common Language Runtime (CLR) type compatible with the XML Schema Definition Language (XSD) type of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a></div>\r\n                  </div>\r\n                  <p>White space is not allowed in the current element context.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*</span> method was not called in the correct sequence. For example, if the <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*</span> method is called after calling <span class=\"xref\">stem.Xml.Schema.XmlSchemaValidator.ValidateAttribute*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Schema_XmlSchemaValidator_ValidationEventHandler\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidationEventHandler</div>        \r\n          </div>\r\n    \r\n            <p>The <a class=\"xref\" href=\"system.xml.schema.validationeventhandler\" data-linktype=\"relative-path\">ValidationEventHandler</a> that receives schema validation warnings and errors encountered during schema validation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If no <a class=\"xref\" href=\"system.xml.schema.validationeventhandler\" data-linktype=\"relative-path\">ValidationEventHandler</a> is specified, an <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a> is thrown for all schema validation errors with an <a class=\"xref\" href=\"system.xml.schema.xmlseveritytype\" data-linktype=\"relative-path\">XmlSeverityType</a> value of <a class=\"xref\" href=\"system.xml.schema.xmlseveritytype\" data-linktype=\"relative-path\">XmlSeverityType</a>. An <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidationexception\" data-linktype=\"relative-path\">XmlSchemaValidationException</a> is not thrown for validation warnings with an <a class=\"xref\" href=\"system.xml.schema.xmlseveritytype\" data-linktype=\"relative-path\">XmlSeverityType</a> value of <a class=\"xref\" href=\"system.xml.schema.xmlseveritytype\" data-linktype=\"relative-path\">XmlSeverityType</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example validates the <code>contosoBooks.xml</code> file against the <code>contosoBooks.xsd</code> schema. The example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to deserialize the <code>contosoBooks.xml</code> file and pass the value of the nodes to the methods of the <a class=\"xref\" href=\"system.xml.schema.xmlschemavalidator\" data-linktype=\"relative-path\">XmlSchemaValidator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlSchemaValidatorExamples#1\">using System;\nusing System.Xml;\nusing System.Xml.Schema;\nusing System.Xml.Serialization;\nusing System.Collections;\n\nnamespace Microsoft.Samples.Xml.Schema\n{\n    class XmlSchemaValidatorExamples\n    {\n        static void Main()\n        {\n            // The XML document to deserialize into the XmlSerializer object.\n            XmlReader reader = XmlReader.Create(&quot;contosoBooks.xml&quot;);\n\n            // The XmlSerializer object.\n            XmlSerializer serializer = new XmlSerializer(typeof(ContosoBooks));\n            ContosoBooks books = (ContosoBooks)serializer.Deserialize(reader);\n\n            // The XmlSchemaSet object containing the schema used to validate the XML document.\n            XmlSchemaSet schemaSet = new XmlSchemaSet();\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;);\n\n            // The XmlNamespaceManager object used to handle namespaces.\n            XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);\n\n            // Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);\n            validator.ValidationEventHandler += new ValidationEventHandler(SchemaValidationEventHandler);\n\n            // Initialize the XmlSchemaValidator object.\n            validator.Initialize();\n\n            // Validate the bookstore element, verify that all required attributes are present\n            // and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, null);\n            validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n            validator.ValidateEndOfAttributes(null);\n\n            // Get the next exptected element in the bookstore context.\n            XmlSchemaParticle[] particles = validator.GetExpectedParticles();\n            XmlSchemaElement nextElement = particles[0] as XmlSchemaElement;\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name);\n\n            foreach (BookType book in books.Book)\n            {\n                // Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, null);\n\n                // Get the exptected attributes for the book element.\n                Console.Write(&quot;<br>Expected attributes: &quot;);\n                XmlSchemaAttribute[] attributes = validator.GetExpectedAttributes();\n                foreach (XmlSchemaAttribute attribute in attributes)\n                {\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name);\n                }\n                Console.WriteLine();\n\n                // Validate the genre attribute and display its post schema validation information.\n                if (book.Genre != null)\n                {\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the publicationdate attribute and display its post schema validation information.\n                if (book.PublicationDate != null)\n                {\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // Validate the ISBN attribute and display its post schema validation information.\n                if (book.Isbn != null)\n                {\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo);\n                }\n                DisplaySchemaInfo();\n\n                // After validating all the attributes for the current element with ValidateAttribute method,\n                // you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n\n                // Verify that all required attributes of the book element are present\n                // and prepare to validate child content.\n                validator.ValidateEndOfAttributes(null);\n\n                // Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Title);\n\n                // Validate the author element, verify that all required attributes are present\n                // and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.GetUnspecifiedDefaultAttributes(new ArrayList());\n                validator.ValidateEndOfAttributes(null);\n\n                if (book.Author.Name != null)\n                {\n                    // Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.Name);\n                }\n\n                if (book.Author.FirstName != null)\n                {\n                    // Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.FirstName);\n\n                }\n\n                if (book.Author.LastName != null)\n                {\n                    // Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                    validator.ValidateEndElement(null, book.Author.LastName);\n                }\n\n                // Validate the content of the author element.\n                validator.ValidateEndElement(null);\n\n                // Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, null);\n                validator.ValidateEndElement(null, book.Price);\n\n                // Validate the content of the book element.\n                validator.ValidateEndElement(null);\n            }\n\n            // Validate the content of the bookstore element.\n            validator.ValidateEndElement(null);\n\n            // Close the XmlReader object.\n            reader.Close();\n        }\n\n        static XmlSchemaInfo schemaInfo = new XmlSchemaInfo();\n        static object dateTimeGetterContent;\n\n        static object dateTimeGetterHandle()\n        {\n            return dateTimeGetterContent;\n        }\n\n        static XmlValueGetter dateTimeGetter(DateTime dateTime)\n        {\n            dateTimeGetterContent = dateTime;\n            return new XmlValueGetter(dateTimeGetterHandle);\n        }\n\n        static void DisplaySchemaInfo()\n        {\n            if (schemaInfo.SchemaElement != null)\n            {\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n            else if (schemaInfo.SchemaAttribute != null)\n            {\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;,\n                    schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity);\n            }\n        }\n\n        static void SchemaValidationEventHandler(object sender, ValidationEventArgs e)\n        {\n            switch (e.Severity)\n            {\n                case XmlSeverityType.Error:\n                    Console.WriteLine(&quot;<br>Error: {0}&quot;, e.Message);\n                    break;\n                case XmlSeverityType.Warning:\n                    Console.WriteLine(&quot;<br>Warning: {0}&quot;, e.Message);\n                    break;\n            }\n        }\n    }\n\n    [XmlRootAttribute(&quot;bookstore&quot;, Namespace = &quot;http://www.contoso.com/books&quot;, IsNullable = false)]\n    public class ContosoBooks\n    {\n        [XmlElementAttribute(&quot;book&quot;)]\n        public BookType[] Book;\n    }\n\n    public class BookType\n    {\n        [XmlAttributeAttribute(&quot;genre&quot;)]\n        public string Genre;\n\n        [XmlAttributeAttribute(&quot;publicationdate&quot;, DataType = &quot;date&quot;)]\n        public DateTime PublicationDate;\n\n        [XmlAttributeAttribute(&quot;ISBN&quot;)]\n        public string Isbn;\n\n        [XmlElementAttribute(&quot;title&quot;)]\n        public string Title;\n\n        [XmlElementAttribute(&quot;author&quot;)]\n        public BookAuthor Author;\n\n        [XmlElementAttribute(&quot;price&quot;)]\n        public Decimal Price;\n    }\n\n    public class BookAuthor\n    {\n        [XmlElementAttribute(&quot;name&quot;)]\n        public string Name;\n\n        [XmlElementAttribute(&quot;first-name&quot;)]\n        public string FirstName;\n\n        [XmlElementAttribute(&quot;last-name&quot;)]\n        public string LastName;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSchemaValidatorExamples#1\">Imports System\nImports System.Xml\nImports System.Xml.Schema\nImports System.Xml.Serialization\nImports System.Collections\n\n\nNamespace Microsoft.Samples.Xml.Schema\n\n    Class XmlSchemaValidatorExamples\n\n        Shared Sub Main()\n\n            &#39; The XML document to deserialize into the XmlSerializer object.\n            Dim reader As XmlReader = XmlReader.Create(&quot;contosoBooks.xml&quot;)\n\n            &#39; The XmlSerializer object.\n            Dim serializer As XmlSerializer = New XmlSerializer(GetType(ContosoBooks))\n            Dim books As ContosoBooks = CType(serializer.Deserialize(reader), ContosoBooks)\n\n            &#39; The XmlSchemaSet object containing the schema used to validate the XML document.\n            Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()\n            schemaSet.Add(&quot;http://www.contoso.com/books&quot;, &quot;contosoBooks.xsd&quot;)\n\n            &#39; The XmlNamespaceManager object used to handle namespaces.\n            Dim manager As XmlNamespaceManager = New XmlNamespaceManager(reader.NameTable)\n\n            &#39; Assign a ValidationEventHandler to handle schema validation warnings and errors.\n            Dim validator As XmlSchemaValidator = New XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None)\n            &#39;validator.ValidationEventHandler += New ValidationEventHandler(SchemaValidationEventHandler)\n            AddHandler validator.ValidationEventHandler, AddressOf SchemaValidationEventHandler\n\n            &#39; Initialize the XmlSchemaValidator object.\n            validator.Initialize()\n\n            &#39; Validate the bookstore element, verify that all required attributes are present\n            &#39; and prepare to validate child content.\n            validator.ValidateElement(&quot;bookstore&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n            validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n            validator.ValidateEndOfAttributes(Nothing)\n\n            &#39; Get the next exptected element in the bookstore context.\n            Dim particles() As XmlSchemaParticle = validator.GetExpectedParticles()\n            Dim nextElement As XmlSchemaElement = particles(0)\n            Console.WriteLine(&quot;Expected Element: &#39;{0}&#39;&quot;, nextElement.Name)\n\n            For Each book As BookType In books.book\n                &#39; Validate the book element.\n                validator.ValidateElement(&quot;book&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                &#39; Get the exptected attributes for the book element.\n                Console.Write(vbCrLf &amp; &quot;Expected attributes: &quot;)\n                Dim attributes() As XmlSchemaAttribute = validator.GetExpectedAttributes()\n                For Each attribute As XmlSchemaAttribute In attributes\n                    Console.Write(&quot;&#39;{0}&#39; &quot;, attribute.Name)\n                Next\n                Console.WriteLine()\n\n                &#39; Validate the genre attribute and display its post schema validation information.\n                If Not book.Genre Is Nothing Then\n                    validator.ValidateAttribute(&quot;genre&quot;, &quot;&quot;, book.Genre, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the publicationdate attribute and display its post schema validation information.\n                If Not book.PublicationDate = Nothing Then\n                    validator.ValidateAttribute(&quot;publicationdate&quot;, &quot;&quot;, dateTimeGetter(book.PublicationDate), schemaInfo)\n                End If\n                DisplaySchemaInfo()\n\n                &#39; Validate the ISBN attribute and display its post schema validation information.\n                If Not book.Isbn Is Nothing Then\n                    validator.ValidateAttribute(&quot;ISBN&quot;, &quot;&quot;, book.Isbn, schemaInfo)\n                End If\n                DisplaySchemaInfo()\n    \n                &#39; After validating all the attributes for the current element with ValidateAttribute method,\n                &#39; you must call GetUnspecifiedDefaultAttributes to validate the default attributes.\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n\n                &#39; Verify that all required attributes of the book element are present\n                &#39; and prepare to validate child content.\n                validator.ValidateEndOfAttributes(Nothing)\n\n                &#39; Validate the title element and its content.\n                validator.ValidateElement(&quot;title&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Title)\n\n                &#39; Validate the author element, verify that all required attributes are present\n                &#39; and prepare to validate child content.\n                validator.ValidateElement(&quot;author&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n\n                validator.GetUnspecifiedDefaultAttributes(New ArrayList())\n                validator.ValidateEndOfAttributes(Nothing)\n\n                If Not book.Author.Name Is Nothing Then\n                    &#39; Validate the name element and its content.\n                    validator.ValidateElement(&quot;name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.Name)\n                End If\n\n                If Not book.Author.FirstName Is Nothing Then\n                    &#39; Validate the first-name element and its content.\n                    validator.ValidateElement(&quot;first-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.FirstName)\n\n                End If\n\n                If Not book.Author.LastName Is Nothing Then\n                    &#39; Validate the last-name element and its content.\n                    validator.ValidateElement(&quot;last-name&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                    validator.ValidateEndElement(Nothing, book.Author.LastName)\n                End If\n\n                &#39; Validate the content of the author element.\n                validator.ValidateEndElement(Nothing)\n\n                &#39; Validate the price element and its content.\n                validator.ValidateElement(&quot;price&quot;, &quot;http://www.contoso.com/books&quot;, Nothing)\n                validator.ValidateEndElement(Nothing, book.Price)\n\n                &#39; Validate the content of the book element.\n                validator.ValidateEndElement(Nothing)\n            Next\n\n            &#39; Validate the content of the bookstore element.\n            validator.ValidateEndElement(Nothing)\n\n            &#39; Close the XmlReader object.\n            reader.Close()\n\n        End Sub\n\n        Shared schemaInfo As XmlSchemaInfo = New XmlSchemaInfo()\n        Shared dateTimeGetterContent As Object\n\n        Shared Function dateTimeGetterHandle() As Object\n\n            Return dateTimeGetterContent\n\n        End Function\n\n        Shared Function dateTimeGetter(ByVal dateTime As DateTime) As XmlValueGetter\n\n            dateTimeGetterContent = dateTime\n            Return New XmlValueGetter(AddressOf dateTimeGetterHandle)\n\n        End Function\n\n        Shared Sub DisplaySchemaInfo()\n\n            If Not schemaInfo.SchemaElement Is Nothing Then\n                Console.WriteLine(&quot;Element &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaElement.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            ElseIf Not schemaInfo.SchemaAttribute Is Nothing Then\n                Console.WriteLine(&quot;Attribute &#39;{0}&#39; with type &#39;{1}&#39; is &#39;{2}&#39;&quot;, schemaInfo.SchemaAttribute.Name, schemaInfo.SchemaType, schemaInfo.Validity)\n            End If\n\n        End Sub\n\n        Shared Sub SchemaValidationEventHandler(ByVal sender As Object, ByVal e As ValidationEventArgs)\n\n            Select Case e.Severity\n                Case XmlSeverityType.Error\n                    Console.WriteLine(vbCrLf &amp; &quot;Error: {0}&quot;, e.Message)\n                    Exit Sub\n                Case XmlSeverityType.Warning\n                    Console.WriteLine(vbCrLf &amp; &quot;Warning: {0}&quot;, e.Message)\n                    Exit Sub\n            End Select\n\n        End Sub\n\n    End Class\n\n    &lt;XmlRootAttribute(&quot;bookstore&quot;, Namespace:=&quot;http://www.contoso.com/books&quot;, IsNullable:=False)&gt; _\n    Public Class ContosoBooks\n\n        &lt;XmlElementAttribute(&quot;book&quot;)&gt; _\n        Public book() As BookType\n\n    End Class\n\n    Public Class BookType\n\n        &lt;XmlAttributeAttribute(&quot;genre&quot;)&gt; _\n        Public Genre As String\n\n        &lt;XmlAttributeAttribute(&quot;publicationdate&quot;, DataType:=&quot;date&quot;)&gt; _\n        Public PublicationDate As DateTime\n\n        &lt;XmlAttributeAttribute(&quot;ISBN&quot;)&gt; _\n        Public Isbn As String\n\n        &lt;XmlElementAttribute(&quot;title&quot;)&gt; _\n        Public Title As String\n\n        &lt;XmlElementAttribute(&quot;author&quot;)&gt; _\n        Public Author As BookAuthor\n\n        &lt;XmlElementAttribute(&quot;price&quot;)&gt; _\n        Public Price As Decimal\n\n    End Class\n\n    Public Class BookAuthor\n\n        &lt;XmlElementAttribute(&quot;name&quot;)&gt; _\n        Public Name As String\n\n        &lt;XmlElementAttribute(&quot;first-name&quot;)&gt; _\n        Public FirstName As String\n\n        &lt;XmlElementAttribute(&quot;last-name&quot;)&gt; _\n        Public LastName As String\n\n    End Class\n\nEnd Namespace\n</code></pre><p> The example takes the <code>contosoBooks.xml</code> file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#2\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;\n&lt;bookstore xmlns=&quot;http://www.contoso.com/books&quot;&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre><p> The example also takes the <code>contosoBooks.xsd</code> as an input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#3\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;xs:schema attributeFormDefault=&quot;unqualified&quot; elementFormDefault=&quot;qualified&quot; targetNamespace=&quot;http://www.contoso.com/books&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;\n    &lt;xs:element name=&quot;bookstore&quot;&gt;\n        &lt;xs:complexType&gt;\n            &lt;xs:sequence&gt;\n                &lt;xs:element maxOccurs=&quot;unbounded&quot; name=&quot;book&quot;&gt;\n                    &lt;xs:complexType&gt;\n                        &lt;xs:sequence&gt;\n                            &lt;xs:element name=&quot;title&quot; type=&quot;xs:string&quot; /&gt;\n                            &lt;xs:element name=&quot;author&quot;&gt;\n                                &lt;xs:complexType&gt;\n                                    &lt;xs:sequence&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;first-name&quot; type=&quot;xs:string&quot; /&gt;\n                                        &lt;xs:element minOccurs=&quot;0&quot; name=&quot;last-name&quot; type=&quot;xs:string&quot; /&gt;\n                                    &lt;/xs:sequence&gt;\n                                &lt;/xs:complexType&gt;\n                            &lt;/xs:element&gt;\n                            &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;\n                        &lt;/xs:sequence&gt;\n                        &lt;xs:attribute name=&quot;genre&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;publicationdate&quot; type=&quot;xs:date&quot; use=&quot;required&quot; /&gt;\n                        &lt;xs:attribute name=&quot;ISBN&quot; type=&quot;xs:string&quot; use=&quot;required&quot; /&gt;\n                    &lt;/xs:complexType&gt;\n                &lt;/xs:element&gt;\n            &lt;/xs:sequence&gt;\n        &lt;/xs:complexType&gt;\n    &lt;/xs:element&gt;\n&lt;/xs:schema&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Schema.XmlSchemaValidator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Schema.XmlSchemaValidator.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.AddSchema\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.EndValidation\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.LineInfoProvider\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.SkipToEndElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.SourceUri\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidateAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidateElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidateEndElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidateText\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.add_ValidationEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.remove_ValidationEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.ValidationEventSender\">\r\n<meta name=\"APIName\" content=\"System.Xml.Schema.XmlSchemaValidator.XmlResolver\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d4bcaeb9-1818-e9c5-f295-3b0be5cbcd96\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an XML Schema Definition Language (XSD) Schema validation engine. The XmlSchemaValidator class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Schema/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Schema.XmlSchemaValidator\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Schema.XmlSchemaValidator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Schema.XmlSchemaValidator.yml","open_to_public_contributors":true,"api_name":["System.Xml.Schema.XmlSchemaValidator","System.Xml.Schema.XmlSchemaValidator..ctor","System.Xml.Schema.XmlSchemaValidator.AddSchema","System.Xml.Schema.XmlSchemaValidator.EndValidation","System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes","System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles","System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes","System.Xml.Schema.XmlSchemaValidator.Initialize","System.Xml.Schema.XmlSchemaValidator.LineInfoProvider","System.Xml.Schema.XmlSchemaValidator.SkipToEndElement","System.Xml.Schema.XmlSchemaValidator.SourceUri","System.Xml.Schema.XmlSchemaValidator.ValidateAttribute","System.Xml.Schema.XmlSchemaValidator.ValidateElement","System.Xml.Schema.XmlSchemaValidator.ValidateEndElement","System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes","System.Xml.Schema.XmlSchemaValidator.ValidateText","System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace","System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler","System.Xml.Schema.XmlSchemaValidator.add_ValidationEventHandler","System.Xml.Schema.XmlSchemaValidator.remove_ValidationEventHandler","System.Xml.Schema.XmlSchemaValidator.ValidationEventSender","System.Xml.Schema.XmlSchemaValidator.XmlResolver"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Schema.XmlSchemaValidator","System::Xml::Schema::XmlSchemaValidator","System.Xml.Schema.XmlSchemaValidator.#ctor","System::Xml::Schema::XmlSchemaValidator::#ctor","System.Xml.Schema.XmlSchemaValidator.AddSchema","System::Xml::Schema::XmlSchemaValidator::AddSchema","System.Xml.Schema.XmlSchemaValidator.EndValidation","System::Xml::Schema::XmlSchemaValidator::EndValidation","System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes","System::Xml::Schema::XmlSchemaValidator::GetExpectedAttributes","System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles","System::Xml::Schema::XmlSchemaValidator::GetExpectedParticles","System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes","System::Xml::Schema::XmlSchemaValidator::GetUnspecifiedDefaultAttributes","System.Xml.Schema.XmlSchemaValidator.Initialize","System::Xml::Schema::XmlSchemaValidator::Initialize","System.Xml.Schema.XmlSchemaValidator.LineInfoProvider","System::Xml::Schema::XmlSchemaValidator::LineInfoProvider","System.Xml.Schema.XmlSchemaValidator.SkipToEndElement","System::Xml::Schema::XmlSchemaValidator::SkipToEndElement","System.Xml.Schema.XmlSchemaValidator.SourceUri","System::Xml::Schema::XmlSchemaValidator::SourceUri","System.Xml.Schema.XmlSchemaValidator.ValidateAttribute","System::Xml::Schema::XmlSchemaValidator::ValidateAttribute","System.Xml.Schema.XmlSchemaValidator.ValidateElement","System::Xml::Schema::XmlSchemaValidator::ValidateElement","System.Xml.Schema.XmlSchemaValidator.ValidateEndElement","System::Xml::Schema::XmlSchemaValidator::ValidateEndElement","System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes","System::Xml::Schema::XmlSchemaValidator::ValidateEndOfAttributes","System.Xml.Schema.XmlSchemaValidator.ValidateText","System::Xml::Schema::XmlSchemaValidator::ValidateText","System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace","System::Xml::Schema::XmlSchemaValidator::ValidateWhitespace","System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler","System::Xml::Schema::XmlSchemaValidator::ValidationEventHandler","System.Xml.Schema.XmlSchemaValidator.ValidationEventSender","System::Xml::Schema::XmlSchemaValidator::ValidationEventSender","System.Xml.Schema.XmlSchemaValidator.XmlResolver","System::Xml::Schema::XmlSchemaValidator::XmlResolver"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d4bcaeb9-1818-e9c5-f295-3b0be5cbcd96","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Schema/XmlSchemaValidator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlSchemaValidator class | Microsoft Docs","_op_ogTitle":"XmlSchemaValidator class","description":"Represents an XML Schema Definition Language (XSD) Schema validation engine. The XmlSchemaValidator class cannot be inherited.\n","toc_asset_id":"_splitted/System.Xml.Schema/toc.json","toc_rel":"_splitted/System.Xml.Schema/toc.json","source_url":"","ms.assetid":"System.Xml.Schema.XmlSchemaValidator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.schema.xmlschemavalidator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.schema.xmlschemavalidator","fileRelativePath":"System.Xml.Schema.XmlSchemaValidator.html"},"themesRelativePathToOutputRoot":"_themes/"}