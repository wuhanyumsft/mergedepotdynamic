{"content":"    \r\n    <h1 id=\"System_Windows_Xps_Packaging_XpsDocument\">\r\n      <span class=\"lang-csharp\">XpsDocument</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> that holds the content of an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> document.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XpsDocument : System.Windows.Xps.Packaging.XpsPartBase, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.xps.packaging.xpspartbase\" data-linktype=\"relative-path\">System.Windows.Xps.Packaging.XpsPartBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XpsDocument</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.xps.packaging.xpspartbase#System_Windows_Xps_Packaging_XpsPartBase_Uri\" data-linktype=\"relative-path\">Uri</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An XpsDocument contains a <a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a> that comprises one or more <a class=\"xref\" href=\"system.windows.documents.fixeddocument\" data-linktype=\"relative-path\">FixedDocument</a> elements.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument#System_Windows_Xps_Packaging_XpsDocument__ctor_\" data-linktype=\"relative-path\">XpsDocument</a> constructor is passed a reference to a <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> for writing, storing, and reading the content elements of the document.  </p>\n<p> A new empty <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> is created by using the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package__ctor_\" data-linktype=\"relative-path\">Package</a> constructor.  </p>\n<p> An existing <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> is opened by using the <a class=\"xref\" href=\"system.io.packaging.package#System_IO_Packaging_Package_Open_\" data-linktype=\"relative-path\">Open</a> method.  </p>\n<p> A <a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a> root is added to an empty <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> by calling the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument#System_Windows_Xps_Packaging_XpsDocument_AddFixedDocumentSequence_\" data-linktype=\"relative-path\">AddFixedDocumentSequence</a> method.  </p>\n<p> <a class=\"xref\" href=\"system.printing.printticket\" data-linktype=\"relative-path\">PrintTicket</a> elements with printer information and control can also be associated with the <a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a>, or on individual <a class=\"xref\" href=\"system.windows.documents.fixeddocument\" data-linktype=\"relative-path\">FixedDocument</a> and <a class=\"xref\" href=\"system.windows.documents.fixedpage\" data-linktype=\"relative-path\">FixedPage</a> elements that are stored in the XpsDocument.  </p>\n<p> For more information about <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> see the XML Paper Specification (XPS) available for download at <a href=\"http://go.microsoft.com/fwlink/?LinkID=65761\" data-linktype=\"external\">http://go.microsoft.com/fwlink/?LinkID=65761</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument__ctor_System_IO_Packaging_Package_\" data-linktype=\"self-bookmark\">XpsDocument(Package)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class with access to a specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-metro-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> and default interleaving, resource, and compression options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument__ctor_System_IO_Packaging_Package_System_IO_Packaging_CompressionOption_\" data-linktype=\"self-bookmark\">XpsDocument(Package,CompressionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with specified default interleaving, resource, and compression options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument__ctor_System_String_System_IO_FileAccess_\" data-linktype=\"self-bookmark\">XpsDocument(String,FileAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> file with default interleaving, resource, and compression options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument__ctor_System_IO_Packaging_Package_System_IO_Packaging_CompressionOption_System_String_\" data-linktype=\"self-bookmark\">XpsDocument(Package,CompressionOption,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with the specified default interleaving, resource, and compression options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument__ctor_System_String_System_IO_FileAccess_System_IO_Packaging_CompressionOption_\" data-linktype=\"self-bookmark\">XpsDocument(String,FileAccess,CompressionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> file with default interleaving, resource, and compression options.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_CoreDocumentProperties\" data-linktype=\"self-bookmark\">CoreDocumentProperties</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the core <a class=\"xref\" href=\"system.io.packaging.packageproperties\" data-linktype=\"relative-path\">PackageProperties</a> of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_FixedDocumentSequenceReader\" data-linktype=\"self-bookmark\">FixedDocumentSequenceReader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.windows.xps.packaging.ixpsfixeddocumentsequencereader\" data-linktype=\"relative-path\">IXpsFixedDocumentSequenceReader</a> for reading the document.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_IsReader\" data-linktype=\"self-bookmark\">IsReader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the package is readable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_IsSignable\" data-linktype=\"self-bookmark\">IsSignable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the package can be digitally signed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_IsWriter\" data-linktype=\"self-bookmark\">IsWriter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the package is writable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_Signatures\" data-linktype=\"self-bookmark\">Signatures</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-metro-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> signatures that are associated with the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_Thumbnail\" data-linktype=\"self-bookmark\">Thumbnail</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xps-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> thumbnail image that is associated with the document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_AddFixedDocumentSequence\" data-linktype=\"self-bookmark\">AddFixedDocumentSequence()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a root <a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a> to the package and returns a writer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_AddThumbnail_System_Windows_Xps_Packaging_XpsImageType_\" data-linktype=\"self-bookmark\">AddThumbnail(XpsImageType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a thumbnail image to the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the XPS document <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_CreateXpsDocumentWriter_System_Windows_Xps_Packaging_XpsDocument_\" data-linktype=\"self-bookmark\">CreateXpsDocumentWriter(XpsDocument)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <span class=\"xref\">stem.Windows.Xps.XpsDocumentWriter</span> for writing an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources that are used by the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> and optionally, releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_GetFixedDocumentSequence\" data-linktype=\"self-bookmark\">GetFixedDocumentSequence()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the fixed-document sequence at the root of the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_RemoveSignature_System_Windows_Xps_Packaging_XpsDigitalSignature_\" data-linktype=\"self-bookmark\">RemoveSignature(XpsDigitalSignature)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes a signature from the package.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_SignDigitally_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Windows_Xps_Packaging_XpsDigSigPartAlteringRestrictions_\" data-linktype=\"self-bookmark\">SignDigitally(X509Certificate,Boolean,XpsDigSigPartAlteringRestrictions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a collection of package parts with a specified X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_SignDigitally_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Windows_Xps_Packaging_XpsDigSigPartAlteringRestrictions_System_Guid_\" data-linktype=\"self-bookmark\">SignDigitally(X509Certificate,Boolean,XpsDigSigPartAlteringRestrictions,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a collection of package parts by using a specified X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_SignDigitally_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Windows_Xps_Packaging_XpsDigSigPartAlteringRestrictions_System_Guid_System_Boolean_\" data-linktype=\"self-bookmark\">SignDigitally(X509Certificate,Boolean,XpsDigSigPartAlteringRestrictions,Guid,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Signs a collection of package parts with a specified X.509 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Xps_Packaging_XpsDocument_System_IDisposable_Dispose\" data-linktype=\"self-bookmark\">IDisposable.Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member supports the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> infrastructure and is not intended to be used directly from your code. Use the type-safe <span class=\"xref\">stem.Windows.Xps.Packaging.XpsDocument.Dispose*</span> method instead.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_System_IO_Packaging_Package_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XpsDocument(Package)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class with access to a specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-metro-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> and default interleaving, resource, and compression options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XpsDocument (System.IO.Packaging.Package package);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>package</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-metro-md.md&quot; -->XPS<!--END INCLUDE --> package for the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\nusing (Package package = Package.Open(packageName))\n{\n    XpsDocument xpsDocument = new XpsDocument(package);\n\n    // Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, false);\n\n    // Close the package.\n    xpsDocument.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\n{\n   Package^ package = Package::Open(packageName);\n   try\n   {\n      XpsDocument^ xpsDocument = gcnew XpsDocument(package);\n\n      // Add the package content (false=without PrintTicket).\n      AddPackageContent(xpsDocument, false);\n\n      // Close the package.\n      xpsDocument-&gt;Close();\n   } finally\n   {\n      delete package;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreatePackageOpen\">&#39; Create an XpsDocument package (without PrintTicket).\nUsing package1 As Package = Package.Open(packageName)\n    Dim xpsDocument As New XpsDocument(package1)\n\n    &#39; Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, False)\n\n    &#39; Close the package.\n    xpsDocument.Close()\nEnd Using\n</code></pre><p> The following example also shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_System_IO_Packaging_Package_System_IO_Packaging_CompressionOption_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XpsDocument(Package,CompressionOption)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with specified default interleaving, resource, and compression options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XpsDocument (System.IO.Packaging.Package package, System.IO.Packaging.CompressionOption compressionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>package</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target package for the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The package compression option.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\nusing (Package package = Package.Open(packageName))\n{\n    XpsDocument xpsDocument = new XpsDocument(package);\n\n    // Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, false);\n\n    // Close the package.\n    xpsDocument.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\n{\n   Package^ package = Package::Open(packageName);\n   try\n   {\n      XpsDocument^ xpsDocument = gcnew XpsDocument(package);\n\n      // Add the package content (false=without PrintTicket).\n      AddPackageContent(xpsDocument, false);\n\n      // Close the package.\n      xpsDocument-&gt;Close();\n   } finally\n   {\n      delete package;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreatePackageOpen\">&#39; Create an XpsDocument package (without PrintTicket).\nUsing package1 As Package = Package.Open(packageName)\n    Dim xpsDocument As New XpsDocument(package1)\n\n    &#39; Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, False)\n\n    &#39; Close the package.\n    xpsDocument.Close()\nEnd Using\n</code></pre><p> The following example also shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_System_String_System_IO_FileAccess_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XpsDocument(String,FileAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> file with default interleaving, resource, and compression options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XpsDocument (string path, System.IO.FileAccess packageAccess);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path and file name of the target <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> for the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file I/O mode in which to open the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\nusing (Package package = Package.Open(packageName))\n{\n    XpsDocument xpsDocument = new XpsDocument(package);\n\n    // Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, false);\n\n    // Close the package.\n    xpsDocument.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\n{\n   Package^ package = Package::Open(packageName);\n   try\n   {\n      XpsDocument^ xpsDocument = gcnew XpsDocument(package);\n\n      // Add the package content (false=without PrintTicket).\n      AddPackageContent(xpsDocument, false);\n\n      // Close the package.\n      xpsDocument-&gt;Close();\n   } finally\n   {\n      delete package;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreatePackageOpen\">&#39; Create an XpsDocument package (without PrintTicket).\nUsing package1 As Package = Package.Open(packageName)\n    Dim xpsDocument As New XpsDocument(package1)\n\n    &#39; Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, False)\n\n    &#39; Close the package.\n    xpsDocument.Close()\nEnd Using\n</code></pre><p> The following example also shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_System_IO_Packaging_Package_System_IO_Packaging_CompressionOption_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XpsDocument(Package,CompressionOption,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> with the specified default interleaving, resource, and compression options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XpsDocument (System.IO.Packaging.Package package, System.IO.Packaging.CompressionOption compressionOption, string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>package</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target package for the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The package compression option.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-uri-md.md&quot; -->uniform resource identifier (URI)<!--END INCLUDE --> for the document as a string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\nusing (Package package = Package.Open(packageName))\n{\n    XpsDocument xpsDocument = new XpsDocument(package);\n\n    // Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, false);\n\n    // Close the package.\n    xpsDocument.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\n{\n   Package^ package = Package::Open(packageName);\n   try\n   {\n      XpsDocument^ xpsDocument = gcnew XpsDocument(package);\n\n      // Add the package content (false=without PrintTicket).\n      AddPackageContent(xpsDocument, false);\n\n      // Close the package.\n      xpsDocument-&gt;Close();\n   } finally\n   {\n      delete package;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreatePackageOpen\">&#39; Create an XpsDocument package (without PrintTicket).\nUsing package1 As Package = Package.Open(packageName)\n    Dim xpsDocument As New XpsDocument(package1)\n\n    &#39; Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, False)\n\n    &#39; Close the package.\n    xpsDocument.Close()\nEnd Using\n</code></pre><p> The following example also shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_System_String_System_IO_FileAccess_System_IO_Packaging_CompressionOption_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XpsDocument(String,FileAccess,CompressionOption)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> class that is contained in a specified <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> file with default interleaving, resource, and compression options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XpsDocument (string path, System.IO.FileAccess packageAccess, System.IO.Packaging.CompressionOption compressionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path and file name of the target <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> for the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>packageAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.fileaccess\" data-linktype=\"relative-path\">FileAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file I/O mode in which to open the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compressionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.compressionoption\" data-linktype=\"relative-path\">CompressionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The package compression option.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\nusing (Package package = Package.Open(packageName))\n{\n    XpsDocument xpsDocument = new XpsDocument(package);\n\n    // Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, false);\n\n    // Close the package.\n    xpsDocument.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\n{\n   Package^ package = Package::Open(packageName);\n   try\n   {\n      XpsDocument^ xpsDocument = gcnew XpsDocument(package);\n\n      // Add the package content (false=without PrintTicket).\n      AddPackageContent(xpsDocument, false);\n\n      // Close the package.\n      xpsDocument-&gt;Close();\n   } finally\n   {\n      delete package;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreatePackageOpen\">&#39; Create an XpsDocument package (without PrintTicket).\nUsing package1 As Package = Package.Open(packageName)\n    Dim xpsDocument As New XpsDocument(package1)\n\n    &#39; Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, False)\n\n    &#39; Close the package.\n    xpsDocument.Close()\nEnd Using\n</code></pre><p> The following example also shows how to create and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_CoreDocumentProperties\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_CoreDocumentProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CoreDocumentProperties</div>        \r\n          </div>\r\n    \r\n            <p>Gets the core <a class=\"xref\" href=\"system.io.packaging.packageproperties\" data-linktype=\"relative-path\">PackageProperties</a> of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Packaging.PackageProperties CoreDocumentProperties { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.packaging.packageproperties\" data-linktype=\"relative-path\">PackageProperties</a></div>\r\n                  </div>\r\n                  <p>The core properties of the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a><a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_FixedDocumentSequenceReader\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_FixedDocumentSequenceReader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FixedDocumentSequenceReader</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.windows.xps.packaging.ixpsfixeddocumentsequencereader\" data-linktype=\"relative-path\">IXpsFixedDocumentSequenceReader</a> for reading the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceReader FixedDocumentSequenceReader { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.ixpsfixeddocumentsequencereader\" data-linktype=\"relative-path\">IXpsFixedDocumentSequenceReader</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.xps.packaging.ixpsfixeddocumentsequencereader\" data-linktype=\"relative-path\">IXpsFixedDocumentSequenceReader</a> for reading the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this class uses a singular name, an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> can be a set (sequence) of one <a class=\"xref\" href=\"system.windows.documents.fixeddocument\" data-linktype=\"relative-path\">FixedDocument</a> or multiple documents.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to get a FixedDocumentSequenceReader in order to access <a class=\"xref\" href=\"system.windows.documents.fixeddocument\" data-linktype=\"relative-path\">FixedDocument</a> parts in an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"DocumentStructure#DocStrucFixedDoc\">ShowStatus(&quot;   Getting FixedDocumentSequenceReader.&quot;)\nDim fixedDocSeqReader As IXpsFixedDocumentSequenceReader = xpsDocument.FixedDocumentSequenceReader\n\nShowStatus(&quot;   Getting FixedDocumentReaders.&quot;)\nDim fixedDocuments As ICollection(Of IXpsFixedDocumentReader) = fixedDocSeqReader.FixedDocuments\n\nShowStatus(&quot;   Getting FixedPageReaders.&quot;)\nDim enumerator As IEnumerator(Of IXpsFixedDocumentReader) = fixedDocuments.GetEnumerator()\nenumerator.MoveNext()\nDim fixedPages As ICollection(Of IXpsFixedPageReader) = enumerator.Current.FixedPages\n\n\n&#39; Add a document structure to each fixed page.\nDim i As Integer = 0\nFor Each fixedPageReader As IXpsFixedPageReader In fixedPages\n\tDim pageStructure As XpsResource\n\tShowStatus(&quot;   Adding page structure resource:&quot; &amp; vbLf &amp; &quot;       &#39;&quot; &amp; Filename(_fixedPageStructures(i)) &amp; &quot;&#39;&quot;)\n\tTry\n\t\tpageStructure = fixedPageReader.AddStoryFragment()\n\tCatch e2 As InvalidOperationException\n                 System.Windows.MessageBox.Show(xpsUnstructuredFile &amp; vbLf &amp; vbLf &amp; &quot;Document structure cannot be added.&quot; &amp; vbLf &amp; vbLf &amp; Filename(xpsUnstructuredFile) &amp; &quot; might already &quot; &amp; &quot;contain an existing document structure.&quot;,\n                                 &quot;Cannot Add Document Structure&quot;,\n                                 MessageBoxButton.OK,\n                                 MessageBoxImage.Error)\n\t\tExit For\n\tEnd Try\n\n\t&#39; Copy the page structure to the new StoryFragment.\n\tWriteResource(pageStructure, _fixedPageStructures(i))\n\ti += 1\nNext fixedPageReader\n\nShowStatus(&quot;   Saving and closing the new document.&quot; &amp; vbLf)\nxpsDocument.Close()\n</code></pre><pre><code class=\"lang-cs\" name=\"DocumentStructure#DocStrucFixedDoc\">ShowStatus(&quot;   Getting FixedDocumentSequenceReader.&quot;);\nIXpsFixedDocumentSequenceReader fixedDocSeqReader =\n    xpsDocument.FixedDocumentSequenceReader;\n\nShowStatus(&quot;   Getting FixedDocumentReaders.&quot;);\nICollection&lt;IXpsFixedDocumentReader&gt; fixedDocuments =\n    fixedDocSeqReader.FixedDocuments;\n\nShowStatus(&quot;   Getting FixedPageReaders.&quot;);\nIEnumerator&lt;IXpsFixedDocumentReader&gt; enumerator =\n    fixedDocuments.GetEnumerator();\nenumerator.MoveNext();\nICollection&lt;IXpsFixedPageReader&gt; fixedPages =\n    enumerator.Current.FixedPages;\n\n\n// Add a document structure to each fixed page.\nint i = 0;\nforeach (IXpsFixedPageReader fixedPageReader in fixedPages)\n{\n    XpsResource pageStructure;\n    ShowStatus(&quot;   Adding page structure resource:<br>       &#39;&quot; +\n                       Filename(_fixedPageStructures[i]) + &quot;&#39;&quot;);\n    try\n    {   // Add a new StoryFragment to hold the page structure.\n        pageStructure = fixedPageReader.AddStoryFragment();\n    }\n    catch (System.InvalidOperationException)\n    {\n        MessageBox.Show(xpsUnstructuredFile +\n            &quot;<br><br>Document structure cannot be added.<br><br>&quot; +\n            Filename(xpsUnstructuredFile) + &quot; might already &quot; +\n            &quot;contain an existing document structure.&quot;,\n            &quot;Cannot Add Document Structure&quot;,\n            MessageBoxButton.OK, MessageBoxImage.Error);\n        break;\n    }\n\n    // Copy the page structure to the new StoryFragment.\n    WriteResource(pageStructure, _fixedPageStructures[i++]);\n}\n\nShowStatus(&quot;   Saving and closing the new document.<br>&quot;);\nxpsDocument.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_IsReader\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_IsReader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReader</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the package is readable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReader { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the package is readable; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_IsSignable\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_IsSignable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSignable</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the package can be digitally signed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSignable { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the package can be signed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_IsWriter\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_IsWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWriter</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the package is writable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsWriter { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the package is writable; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_Signatures\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_Signatures_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Signatures</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-metro-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> signatures that are associated with the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Xps.Packaging.XpsDigitalSignature&gt; Signatures { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Collections.ObjectModel.ReadOnlyCollection`1</span> of <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a> objects that represent the signatures that are associated with the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Signatures list identifies what parts are signed and whether the signatures are valid.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_Thumbnail\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_Thumbnail_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Thumbnail</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xps-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> thumbnail image that is associated with the document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.XpsThumbnail Thumbnail { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsthumbnail\" data-linktype=\"relative-path\">XpsThumbnail</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.xps.packaging.xpsthumbnail\" data-linktype=\"relative-path\">XpsThumbnail</a> that represents the thumbnail image that is associated with the document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_AddFixedDocumentSequence\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_AddFixedDocumentSequence_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddFixedDocumentSequence()</div>        \r\n          </div>\r\n    \r\n            <p>Adds a root <a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a> to the package and returns a writer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.IXpsFixedDocumentSequenceWriter AddFixedDocumentSequence ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.ixpsfixeddocumentsequencewriter\" data-linktype=\"relative-path\">IXpsFixedDocumentSequenceWriter</a></div>\r\n                  </div>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xps-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> fixed-document sequence writer for this <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this class uses a singular name, an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> can be a set (sequence) of one <a class=\"xref\" href=\"system.windows.documents.fixeddocument\" data-linktype=\"relative-path\">FixedDocument</a> or multiple documents.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the AddFixedDocumentSequence method to insert content into an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreateAddPkgContent\">// ------------------------- AddPackageContent ----------------------------\n/// &lt;summary&gt;\n///   Adds a predefined set of content to a given XPS document.&lt;/summary&gt;\n/// &lt;param name=&quot;xpsDocument&quot;&gt;\n///   The package to add the document content to.&lt;/param&gt;\n/// &lt;param name=&quot;attachPrintTicket&quot;&gt;\n///   true to include a PrintTicket with the\n///   document; otherwise, false.&lt;/param&gt;\nprivate void AddPackageContent(\n    XpsDocument xpsDocument, bool attachPrintTicket)\n{\n    try\n    {\n        PrintTicket printTicket = GetPrintTicketFromPrinter();\n        // PrintTicket is null, there is no need to attach one.\n        if (printTicket == null)\n            attachPrintTicket = false;\n\n        // Add a FixedDocumentSequence at the Package root\n        IXpsFixedDocumentSequenceWriter documentSequenceWriter =\n            xpsDocument.AddFixedDocumentSequence();\n\n        // Add the 1st FixedDocument to the FixedDocumentSequence. - - - - -\n        IXpsFixedDocumentWriter fixedDocumentWriter =\n            documentSequenceWriter.AddFixedDocument();\n\n        // Add content to the 1st document\n        AddDocumentContent(fixedDocumentWriter);\n\n        // Commit the 1st Document\n        fixedDocumentWriter.Commit();\n\n        // Add a 2nd FixedDocument to the FixedDocumentSequence. - - - - - -\n        fixedDocumentWriter = documentSequenceWriter.AddFixedDocument();\n\n        // Add content to the 2nd document.\n        AddDocumentContent(fixedDocumentWriter);\n\n        // If attaching PrintTickets, attach one at the FixedDocument level.\n        if (attachPrintTicket)\n            fixedDocumentWriter.PrintTicket = printTicket;\n\n        // Commit the 2nd document.\n        fixedDocumentWriter.Commit();\n\n        // If attaching PrintTickets, attach one at\n        // the package FixedDocumentSequence level.\n        if (attachPrintTicket)\n            documentSequenceWriter.PrintTicket = printTicket;\n\n        // Commit the FixedDocumentSequence\n        documentSequenceWriter.Commit();\n    }\n    catch (XpsPackagingException xpsException)\n    {\n        throw xpsException;\n    }\n}// end:AddPackageContent()\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreateAddPkgContent\">// ------------------------- AddPackageContent ----------------------------\n/// &lt;summary&gt;\n///   Adds a predefined set of content to a given XPS document.&lt;/summary&gt;\n/// &lt;param name=&quot;xpsDocument&quot;&gt;\n///   The package to add the document content to.&lt;/param&gt;\n/// &lt;param name=&quot;attachPrintTicket&quot;&gt;\n///   true to include a PrintTicket with the\n///   document; otherwise, false.&lt;/param&gt;\nvoid AddPackageContent (XpsDocument^ xpsDocument, bool attachPrintTicket) \n{\n   try\n   {\n      PrintTicket^ printTicket = GetPrintTicketFromPrinter();\n      // PrintTicket is null, there is no need to attach one.\n      if (printTicket == nullptr)\n      {\n         attachPrintTicket = false;\n      }\n      // Add a FixedDocumentSequence at the Package root\n      IXpsFixedDocumentSequenceWriter^ documentSequenceWriter = xpsDocument-&gt;AddFixedDocumentSequence();\n\n      // Add the 1st FixedDocument to the FixedDocumentSequence. - - - - -\n      IXpsFixedDocumentWriter^ fixedDocumentWriter = documentSequenceWriter-&gt;AddFixedDocument();\n\n      AddDocumentContent(fixedDocumentWriter);\n\n      // Commit the 1st Document\n      fixedDocumentWriter-&gt;Commit();\n\n      // Add a 2nd FixedDocument to the FixedDocumentSequence. - - - - - -\n      fixedDocumentWriter = documentSequenceWriter-&gt;AddFixedDocument();\n\n      // Add content to the 2nd document.\n      AddDocumentContent(fixedDocumentWriter);\n\n      // If attaching PrintTickets, attach one at the FixedDocument level.\n      if (attachPrintTicket)\n      {\n         fixedDocumentWriter-&gt;PrintTicket = printTicket;\n      }\n      // Commit the 2nd document.\n      fixedDocumentWriter-&gt;Commit();\n\n      // If attaching PrintTickets, attach one at\n      // the package FixedDocumentSequence level.\n      if (attachPrintTicket)\n      {\n         documentSequenceWriter-&gt;PrintTicket = printTicket;\n      }\n      // Commit the FixedDocumentSequence\n      documentSequenceWriter-&gt;Commit();\n   } catch (XpsPackagingException^ xpsException)\n   {\n      throw xpsException;\n\n   } \n};// end:AddPackageContent()\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreateAddPkgContent\">&#39; ------------------------- AddPackageContent ----------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Adds a predefined set of content to a given XPS document.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;xpsDocument&quot;&gt;\n&#39;&#39;&#39;   The package to add the document content to.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;attachPrintTicket&quot;&gt;\n&#39;&#39;&#39;   true to include a PrintTicket with the\n&#39;&#39;&#39;   document; otherwise, false.&lt;/param&gt;\nPrivate Sub AddPackageContent(ByVal xpsDocument As XpsDocument, ByVal attachPrintTicket As Boolean)\n    Try\n        Dim printTicket As PrintTicket = GetPrintTicketFromPrinter()\n        &#39; PrintTicket is null, there is no need to attach one.\n        If printTicket Is Nothing Then\n            attachPrintTicket = False\n        End If\n\n        &#39; Add a FixedDocumentSequence at the Package root\n        Dim documentSequenceWriter As IXpsFixedDocumentSequenceWriter = xpsDocument.AddFixedDocumentSequence()\n\n        &#39; Add the 1st FixedDocument to the FixedDocumentSequence. - - - - -\n        Dim fixedDocumentWriter As IXpsFixedDocumentWriter = documentSequenceWriter.AddFixedDocument()\n\n        &#39; Add content to the 1st document\n        AddDocumentContent(fixedDocumentWriter)\n\n        &#39; Commit the 1st Document\n        fixedDocumentWriter.Commit()\n\n        &#39; Add a 2nd FixedDocument to the FixedDocumentSequence. - - - - - -\n        fixedDocumentWriter = documentSequenceWriter.AddFixedDocument()\n\n        &#39; Add content to the 2nd document.\n        AddDocumentContent(fixedDocumentWriter)\n\n        &#39; If attaching PrintTickets, attach one at the FixedDocument level.\n        If attachPrintTicket Then\n            fixedDocumentWriter.PrintTicket = printTicket\n        End If\n\n        &#39; Commit the 2nd document.\n        fixedDocumentWriter.Commit()\n\n        &#39; If attaching PrintTickets, attach one at\n        &#39; the package FixedDocumentSequence level.\n        If attachPrintTicket Then\n            documentSequenceWriter.PrintTicket = printTicket\n        End If\n\n        &#39; Commit the FixedDocumentSequence\n        documentSequenceWriter.Commit()\n    Catch xpsException As XpsPackagingException\n        Throw xpsException\n    End Try\nEnd Sub &#39; end:AddPackageContent()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_AddThumbnail_System_Windows_Xps_Packaging_XpsImageType_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_AddThumbnail_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddThumbnail(XpsImageType)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a thumbnail image to the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.XpsThumbnail AddThumbnail (System.Windows.Xps.Packaging.XpsImageType imageType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>imageType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsimagetype\" data-linktype=\"relative-path\">XpsImageType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format of the image.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsthumbnail\" data-linktype=\"relative-path\">XpsThumbnail</a></div>\r\n                  </div>\r\n                  <p>The newly added <a class=\"xref\" href=\"system.windows.xps.packaging.xpsthumbnail\" data-linktype=\"relative-path\">XpsThumbnail</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_Close\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the XPS document <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> was opened for write access, data buffers are written to the store and the physical document <a class=\"xref\" href=\"system.io.packaging.package\" data-linktype=\"relative-path\">Package</a> is closed.  </p>\n<p> After Close has been called, no parts of the document can be accessed with this <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to open, insert content, and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\nusing (Package package = Package.Open(packageName))\n{\n    XpsDocument xpsDocument = new XpsDocument(package);\n\n    // Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, false);\n\n    // Close the package.\n    xpsDocument.Close();\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XpsCreate#XpsCreatePackageOpen\">// Create an XpsDocument package (without PrintTicket).\n{\n   Package^ package = Package::Open(packageName);\n   try\n   {\n      XpsDocument^ xpsDocument = gcnew XpsDocument(package);\n\n      // Add the package content (false=without PrintTicket).\n      AddPackageContent(xpsDocument, false);\n\n      // Close the package.\n      xpsDocument-&gt;Close();\n   } finally\n   {\n      delete package;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsCreate#XpsCreatePackageOpen\">&#39; Create an XpsDocument package (without PrintTicket).\nUsing package1 As Package = Package.Open(packageName)\n    Dim xpsDocument As New XpsDocument(package1)\n\n    &#39; Add the package content (false=without PrintTicket).\n    AddPackageContent(xpsDocument, False)\n\n    &#39; Close the package.\n    xpsDocument.Close()\nEnd Using\n</code></pre><p> The following example also shows how to open, write to, and close an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_CreateXpsDocumentWriter_System_Windows_Xps_Packaging_XpsDocument_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_CreateXpsDocumentWriter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateXpsDocumentWriter(XpsDocument)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <span class=\"xref\">stem.Windows.Xps.XpsDocumentWriter</span> for writing an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Windows.Xps.Packaging.XpsDocument xpsDocument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xpsDocument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-xps-md.md&quot; -->XPS<!--END INCLUDE --> document to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">System.Windows.Xps.XpsDocumentWriter</span></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Xps.XpsDocumentWriter</span> to use for writing the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-xps-md.md&quot; -->XML Paper Specification (XPS)<!--END INCLUDE --> document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the CreateXpsDocumentWriter method in order to write an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"DocumentSerialize#DocSerializeLinked\">// Save as a WordXML document.\nWordXmlSerializer.SaveToFile(fileName, flowDocument.ContentStart, flowDocument.ContentEnd);\nreturn true;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources that are used by the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> and optionally, releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is true, this method releases all resources that are held by any managed objects that this <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_GetFixedDocumentSequence\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_GetFixedDocumentSequence_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFixedDocumentSequence()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the fixed-document sequence at the root of the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Documents.FixedDocumentSequence GetFixedDocumentSequence ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.documents.fixeddocumentsequence\" data-linktype=\"relative-path\">FixedDocumentSequence</a> of the package.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this class uses a singular name, an <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument\" data-linktype=\"relative-path\">XpsDocument</a> can be a set (sequence) of one <a class=\"xref\" href=\"system.windows.documents.fixeddocument\" data-linktype=\"relative-path\">FixedDocument</a> or multiple documents.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_RemoveSignature_System_Windows_Xps_Packaging_XpsDigitalSignature_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_RemoveSignature_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveSignature(XpsDigitalSignature)</div>        \r\n          </div>\r\n    \r\n            <p>Deletes a signature from the package.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveSignature (System.Windows.Xps.Packaging.XpsDigitalSignature signature);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>signature</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The signature that is deleted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_SignDigitally_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Windows_Xps_Packaging_XpsDigSigPartAlteringRestrictions_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_SignDigitally_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignDigitally(X509Certificate,Boolean,XpsDigSigPartAlteringRestrictions)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a collection of package parts with a specified X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally (System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use in signing each part; or <code>null</code> to prompt the user to select an installed certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>embedCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to store the certificate in the package; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>restrictions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigsigpartalteringrestrictions\" data-linktype=\"relative-path\">XpsDigSigPartAlteringRestrictions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags that indicate what dependent parts must be excluded from the signing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a> that contains information about the signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>certificate</code> is <code>null</code>, a dialog box appears that enables the user to select an installed X.509 certificate, such as from a smart card reader.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the SignDigitally method.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsReadWriteSign#SignXpsDocument\">\n// ------------------------------ SignXps -----------------------------\n/// &lt;summary&gt;\n///   Signs an XPS document with a given X509 certificate, and if one\n///   exists, associates the signature with a given SignatureDefintion\n///   spotId GUID.&lt;/summary&gt;\n/// &lt;param name=&quot;xpsDocument&quot;&gt;\n///   The XPS document to sign.&lt;/param&gt;\n/// &lt;param name=&quot;cert&quot;&gt;\n///   The X509 certificate to use for signing.&lt;/param&gt;\n/// &lt;param name=&quot;spotId&quot;&gt;\n///   The nullable spotId GUID of the signature definition.&lt;/param&gt;\npublic void SignXps(\n    XpsDocument xpsDocument, X509Certificate cert, Guid? spotId )\n{\n    // If there&#39;s a SignatureDefinition spotId,\n    // associate it with the signature.\n    if (spotId != null)\n    {\n        xpsDocument.SignDigitally(\n            cert, true, XpsDigSigPartAlteringRestrictions.None,\n            spotId.Value);\n    }\n    else\n    {\n        xpsDocument.SignDigitally(\n            cert, true, XpsDigSigPartAlteringRestrictions.None);\n    }\n\n}// end:SignXps()\n\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsReadWriteSign#SignXpsDocument\">\n&#39; ------------------------------ SignXps -----------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Signs an XPS document with a given X509 certificate, and if one\n&#39;&#39;&#39;   exists, associates the signature with a given SignatureDefintion\n&#39;&#39;&#39;   spotId GUID.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;xpsDocument&quot;&gt;\n&#39;&#39;&#39;   The XPS document to sign.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;cert&quot;&gt;\n&#39;&#39;&#39;   The X509 certificate to use for signing.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;spotId&quot;&gt;\n&#39;&#39;&#39;   The nullable spotId GUID of the signature definition.&lt;/param&gt;\nPublic Sub SignXps(ByVal xpsDocument As XpsDocument, ByVal cert As X509Certificate, ByVal spotId? As Guid)\n\t&#39; If there&#39;s a SignatureDefinition spotId,\n\t&#39; associate it with the signature.\n\tIf spotId IsNot Nothing Then\n\t\txpsDocument.SignDigitally(cert, True, XpsDigSigPartAlteringRestrictions.None, spotId.Value)\n\tElse\n\t\txpsDocument.SignDigitally(cert, True, XpsDigSigPartAlteringRestrictions.None)\n\tEnd If\n\nEnd Sub &#39; end:SignXps()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_SignDigitally_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Windows_Xps_Packaging_XpsDigSigPartAlteringRestrictions_System_Guid_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_SignDigitally_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignDigitally(X509Certificate,Boolean,XpsDigSigPartAlteringRestrictions,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a collection of package parts by using a specified X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally (System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions, Guid id);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use in signing each part; or <code>null</code> to prompt the user to select an installed certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>embedCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to store the certificate in the package; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>restrictions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigsigpartalteringrestrictions\" data-linktype=\"relative-path\">XpsDigSigPartAlteringRestrictions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags that indicate what dependent parts are excluded from the signing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-id-md.md&quot; --> ID <!--END INCLUDE --> to assign to the signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a> that contains information about the signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>certificate</code> is <code>null</code>, a dialog box appears that enables the user to select an installed X.509 certificate, such as from a smart card reader.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument#System_Windows_Xps_Packaging_XpsDocument_SignDigitally_\" data-linktype=\"relative-path\">SignDigitally</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsReadWriteSign#SignXpsDocument\">\n// ------------------------------ SignXps -----------------------------\n/// &lt;summary&gt;\n///   Signs an XPS document with a given X509 certificate, and if one\n///   exists, associates the signature with a given SignatureDefintion\n///   spotId GUID.&lt;/summary&gt;\n/// &lt;param name=&quot;xpsDocument&quot;&gt;\n///   The XPS document to sign.&lt;/param&gt;\n/// &lt;param name=&quot;cert&quot;&gt;\n///   The X509 certificate to use for signing.&lt;/param&gt;\n/// &lt;param name=&quot;spotId&quot;&gt;\n///   The nullable spotId GUID of the signature definition.&lt;/param&gt;\npublic void SignXps(\n    XpsDocument xpsDocument, X509Certificate cert, Guid? spotId )\n{\n    // If there&#39;s a SignatureDefinition spotId,\n    // associate it with the signature.\n    if (spotId != null)\n    {\n        xpsDocument.SignDigitally(\n            cert, true, XpsDigSigPartAlteringRestrictions.None,\n            spotId.Value);\n    }\n    else\n    {\n        xpsDocument.SignDigitally(\n            cert, true, XpsDigSigPartAlteringRestrictions.None);\n    }\n\n}// end:SignXps()\n\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsReadWriteSign#SignXpsDocument\">\n&#39; ------------------------------ SignXps -----------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Signs an XPS document with a given X509 certificate, and if one\n&#39;&#39;&#39;   exists, associates the signature with a given SignatureDefintion\n&#39;&#39;&#39;   spotId GUID.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;xpsDocument&quot;&gt;\n&#39;&#39;&#39;   The XPS document to sign.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;cert&quot;&gt;\n&#39;&#39;&#39;   The X509 certificate to use for signing.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;spotId&quot;&gt;\n&#39;&#39;&#39;   The nullable spotId GUID of the signature definition.&lt;/param&gt;\nPublic Sub SignXps(ByVal xpsDocument As XpsDocument, ByVal cert As X509Certificate, ByVal spotId? As Guid)\n\t&#39; If there&#39;s a SignatureDefinition spotId,\n\t&#39; associate it with the signature.\n\tIf spotId IsNot Nothing Then\n\t\txpsDocument.SignDigitally(cert, True, XpsDigSigPartAlteringRestrictions.None, spotId.Value)\n\tElse\n\t\txpsDocument.SignDigitally(cert, True, XpsDigSigPartAlteringRestrictions.None)\n\tEnd If\n\nEnd Sub &#39; end:SignXps()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_SignDigitally_System_Security_Cryptography_X509Certificates_X509Certificate_System_Boolean_System_Windows_Xps_Packaging_XpsDigSigPartAlteringRestrictions_System_Guid_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_SignDigitally_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SignDigitally(X509Certificate,Boolean,XpsDigSigPartAlteringRestrictions,Guid,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Signs a collection of package parts with a specified X.509 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Xps.Packaging.XpsDigitalSignature SignDigitally (System.Security.Cryptography.X509Certificates.X509Certificate certificate, bool embedCertificate, System.Windows.Xps.Packaging.XpsDigSigPartAlteringRestrictions restrictions, Guid id, bool testIsSignable);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The X.509 certificate to use in signing each part; or <code>null</code> to prompt the user to select an installed certificate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>embedCertificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to store the certificate in the package; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>restrictions</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigsigpartalteringrestrictions\" data-linktype=\"relative-path\">XpsDigSigPartAlteringRestrictions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Flags that indicate what dependent parts to exclude from the signing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>id</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-id-md.md&quot; --> ID <!--END INCLUDE --> to assign to the signature.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>testIsSignable</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to verify that <span class=\"xref\">stem.Windows.Xps.Packaging.XpsDocument.IsSignable*</span> is <code>true</code> before signing; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdigitalsignature\" data-linktype=\"relative-path\">XpsDigitalSignature</a> that contains information about the signature.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>certificate</code> is <code>null</code>, a dialog box is presented that enables the user to select an installed X.509 certificate, such as from a smart card reader.  </p>\n<p> <a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a> is thrown if <code>certificate</code> is <code>null</code> and no certificates are installed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use the <a class=\"xref\" href=\"system.windows.xps.packaging.xpsdocument#System_Windows_Xps_Packaging_XpsDocument_SignDigitally_\" data-linktype=\"relative-path\">SignDigitally</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"XpsReadWriteSign#SignXpsDocument\">\n// ------------------------------ SignXps -----------------------------\n/// &lt;summary&gt;\n///   Signs an XPS document with a given X509 certificate, and if one\n///   exists, associates the signature with a given SignatureDefintion\n///   spotId GUID.&lt;/summary&gt;\n/// &lt;param name=&quot;xpsDocument&quot;&gt;\n///   The XPS document to sign.&lt;/param&gt;\n/// &lt;param name=&quot;cert&quot;&gt;\n///   The X509 certificate to use for signing.&lt;/param&gt;\n/// &lt;param name=&quot;spotId&quot;&gt;\n///   The nullable spotId GUID of the signature definition.&lt;/param&gt;\npublic void SignXps(\n    XpsDocument xpsDocument, X509Certificate cert, Guid? spotId )\n{\n    // If there&#39;s a SignatureDefinition spotId,\n    // associate it with the signature.\n    if (spotId != null)\n    {\n        xpsDocument.SignDigitally(\n            cert, true, XpsDigSigPartAlteringRestrictions.None,\n            spotId.Value);\n    }\n    else\n    {\n        xpsDocument.SignDigitally(\n            cert, true, XpsDigSigPartAlteringRestrictions.None);\n    }\n\n}// end:SignXps()\n\n</code></pre><pre><code class=\"lang-vb\" name=\"XpsReadWriteSign#SignXpsDocument\">\n&#39; ------------------------------ SignXps -----------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39;   Signs an XPS document with a given X509 certificate, and if one\n&#39;&#39;&#39;   exists, associates the signature with a given SignatureDefintion\n&#39;&#39;&#39;   spotId GUID.&lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;xpsDocument&quot;&gt;\n&#39;&#39;&#39;   The XPS document to sign.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;cert&quot;&gt;\n&#39;&#39;&#39;   The X509 certificate to use for signing.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;spotId&quot;&gt;\n&#39;&#39;&#39;   The nullable spotId GUID of the signature definition.&lt;/param&gt;\nPublic Sub SignXps(ByVal xpsDocument As XpsDocument, ByVal cert As X509Certificate, ByVal spotId? As Guid)\n\t&#39; If there&#39;s a SignatureDefinition spotId,\n\t&#39; associate it with the signature.\n\tIf spotId IsNot Nothing Then\n\t\txpsDocument.SignDigitally(cert, True, XpsDigSigPartAlteringRestrictions.None, spotId.Value)\n\tElse\n\t\txpsDocument.SignDigitally(cert, True, XpsDigSigPartAlteringRestrictions.None)\n\tEnd If\n\nEnd Sub &#39; end:SignXps()\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Xps_Packaging_XpsDocument_System_IDisposable_Dispose\">\r\n    \r\n            <a id=\"System_Windows_Xps_Packaging_XpsDocument_System_IDisposable_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDisposable.Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>This member supports the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-winclient-md.md&quot; -->Windows Presentation Foundation (WPF)<!--END INCLUDE --> infrastructure and is not intended to be used directly from your code. Use the type-safe <span class=\"xref\">stem.Windows.Xps.Packaging.XpsDocument.Dispose*</span> method instead.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IDisposable.Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Xps.Packaging.XpsDocument.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Xps.Packaging.XpsDocument.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.AddThumbnail\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.Close\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.CoreDocumentProperties\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.IsReader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.IsSignable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.IsWriter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.RemoveSignature\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.Signatures\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.SignDigitally\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.IDisposable.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Xps.Packaging.XpsDocument.Thumbnail\">\r\n<meta name=\"APILocation\" content=\"ReachFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a5b808b5-9059-772f-0629-9752191be2c2\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Xps.Packaging\\XpsDocument.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a  that holds the content of an XPS document.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Xps.Packaging/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Xps.Packaging.XpsDocument\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Xps.Packaging.XpsDocument.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Xps.Packaging.XpsDocument.yml","open_to_public_contributors":true,"api_name":["System.Windows.Xps.Packaging.XpsDocument","System.Windows.Xps.Packaging.XpsDocument..ctor","System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence","System.Windows.Xps.Packaging.XpsDocument.AddThumbnail","System.Windows.Xps.Packaging.XpsDocument.Close","System.Windows.Xps.Packaging.XpsDocument.CoreDocumentProperties","System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter","System.Windows.Xps.Packaging.XpsDocument.Dispose","System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader","System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence","System.Windows.Xps.Packaging.XpsDocument.IsReader","System.Windows.Xps.Packaging.XpsDocument.IsSignable","System.Windows.Xps.Packaging.XpsDocument.IsWriter","System.Windows.Xps.Packaging.XpsDocument.RemoveSignature","System.Windows.Xps.Packaging.XpsDocument.Signatures","System.Windows.Xps.Packaging.XpsDocument.SignDigitally","System.Windows.Xps.Packaging.XpsDocument.IDisposable.Dispose","System.Windows.Xps.Packaging.XpsDocument.Thumbnail"],"api_location":["ReachFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Xps.Packaging.XpsDocument","System::Windows::Xps::Packaging::XpsDocument","System.Windows.Xps.Packaging.XpsDocument.#ctor","System::Windows::Xps::Packaging::XpsDocument::#ctor","System.Windows.Xps.Packaging.XpsDocument.AddFixedDocumentSequence","System::Windows::Xps::Packaging::XpsDocument::AddFixedDocumentSequence","System.Windows.Xps.Packaging.XpsDocument.AddThumbnail","System::Windows::Xps::Packaging::XpsDocument::AddThumbnail","System.Windows.Xps.Packaging.XpsDocument.Close","System::Windows::Xps::Packaging::XpsDocument::Close","System.Windows.Xps.Packaging.XpsDocument.CoreDocumentProperties","System::Windows::Xps::Packaging::XpsDocument::CoreDocumentProperties","System.Windows.Xps.Packaging.XpsDocument.CreateXpsDocumentWriter","System::Windows::Xps::Packaging::XpsDocument::CreateXpsDocumentWriter","System.Windows.Xps.Packaging.XpsDocument.Dispose","System::Windows::Xps::Packaging::XpsDocument::Dispose","System.Windows.Xps.Packaging.XpsDocument.FixedDocumentSequenceReader","System::Windows::Xps::Packaging::XpsDocument::FixedDocumentSequenceReader","System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence","System::Windows::Xps::Packaging::XpsDocument::GetFixedDocumentSequence","System.Windows.Xps.Packaging.XpsDocument.IsReader","System::Windows::Xps::Packaging::XpsDocument::IsReader","System.Windows.Xps.Packaging.XpsDocument.IsSignable","System::Windows::Xps::Packaging::XpsDocument::IsSignable","System.Windows.Xps.Packaging.XpsDocument.IsWriter","System::Windows::Xps::Packaging::XpsDocument::IsWriter","System.Windows.Xps.Packaging.XpsDocument.RemoveSignature","System::Windows::Xps::Packaging::XpsDocument::RemoveSignature","System.Windows.Xps.Packaging.XpsDocument.Signatures","System::Windows::Xps::Packaging::XpsDocument::Signatures","System.Windows.Xps.Packaging.XpsDocument.SignDigitally","System::Windows::Xps::Packaging::XpsDocument::SignDigitally","System.Windows.Xps.Packaging.XpsDocument.System#IDisposable#Dispose","System::Windows::Xps::Packaging::XpsDocument::System#IDisposable#Dispose","System.Windows.Xps.Packaging.XpsDocument.Thumbnail","System::Windows::Xps::Packaging::XpsDocument::Thumbnail"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a5b808b5-9059-772f-0629-9752191be2c2","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Xps.Packaging\\XpsDocument.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Xps.Packaging/XpsDocument.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XpsDocument class | Microsoft Docs","_op_ogTitle":"XpsDocument class","description":"Provides a  that holds the content of an XPS document.\n","toc_asset_id":"_splitted/System.Windows.Xps.Packaging/toc.json","toc_rel":"_splitted/System.Windows.Xps.Packaging/toc.json","source_url":"","ms.assetid":"System.Windows.Xps.Packaging.XpsDocument","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.xps.packaging.xpsdocument","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.xps.packaging.xpsdocument","fileRelativePath":"System.Windows.Xps.Packaging.XpsDocument.html"},"themesRelativePathToOutputRoot":"_themes/"}