{"content":"    \r\n    <h1 id=\"System_Net_FtpWebResponse\">\r\n      <span class=\"lang-csharp\">FtpWebResponse</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates a File Transfer Protocol (FTP) server&#39;s response to a request.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class FtpWebResponse : System.Net.WebResponse, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">System.Net.WebResponse</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">FtpWebResponse</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_ContentType\" data-linktype=\"relative-path\">ContentType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_IsFromCache\" data-linktype=\"relative-path\">IsFromCache</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_IsMutuallyAuthenticated\" data-linktype=\"relative-path\">IsMutuallyAuthenticated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.webresponse#System_Net_WebResponse_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Instances of FtpWebResponse are obtained by calling the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method. The returned object must be cast to an FtpWebResponse. When your application no longer needs the FtpWebResponse object, call the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_Close_\" data-linktype=\"relative-path\">Close</a> method to free the resources held by the FtpWebResponse.  </p>\n<p> The <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_StatusCode_\" data-linktype=\"relative-path\">StatusCode</a> property contains the status code returned by the server, and the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_StatusDescription_\" data-linktype=\"relative-path\">StatusDescription</a> property returns the status code and a message that describes the status. The values returned by these properties change as the messages are returned by the server.  </p>\n<p> Any data returned by the request, such as the list of file names returned for a <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_ListDirectory\" data-linktype=\"relative-path\">ListDirectory</a> request, is available in the stream returned by the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_GetResponseStream_\" data-linktype=\"relative-path\">GetResponseStream</a> method. The length of the stream data can be obtained from the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_ContentLength_\" data-linktype=\"relative-path\">ContentLength</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_BannerMessage\" data-linktype=\"self-bookmark\">BannerMessage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the message sent by the FTP server when a connection is established prior to logon.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_ContentLength\" data-linktype=\"self-bookmark\">ContentLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the length of the data received from the FTP server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_ExitMessage\" data-linktype=\"self-bookmark\">ExitMessage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the message sent by the server when the FTP session is ending.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an empty <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_LastModified\" data-linktype=\"self-bookmark\">LastModified</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the date and time that a file on an FTP server was last modified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_ResponseUri\" data-linktype=\"self-bookmark\">ResponseUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URI that sent the response to the request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_StatusCode\" data-linktype=\"self-bookmark\">StatusCode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the most recent status code sent from the FTP server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_StatusDescription\" data-linktype=\"self-bookmark\">StatusDescription</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets text that describes a status code sent from the FTP server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_SupportsHeaders\" data-linktype=\"self-bookmark\">SupportsHeaders</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <span class=\"xref\">stem.Net.FtpWebResponse.Headers*</span> property is supported by the <a class=\"xref\" href=\"system.net.ftpwebresponse\" data-linktype=\"relative-path\">FtpWebResponse</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_WelcomeMessage\" data-linktype=\"self-bookmark\">WelcomeMessage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the message sent by the FTP server when authentication is complete.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Frees the resources held by the response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_FtpWebResponse_GetResponseStream\" data-linktype=\"self-bookmark\">GetResponseStream()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the stream that contains response data sent from an FTP server.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_BannerMessage\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_BannerMessage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BannerMessage</div>        \r\n          </div>\r\n    \r\n            <p>Gets the message sent by the FTP server when a connection is established prior to logon.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BannerMessage { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the banner message sent by the server; otherwise, <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if no message is sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclFtpClient#12\">      Console::WriteLine( &quot;Banner message: {0}&quot;, response-&gt;BannerMessage );\n</code></pre><pre><code class=\"lang-cs\" name=\"NclFtpClient#12\">            Console.WriteLine(&quot;Banner message: {0}&quot;, \n                response.BannerMessage);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_ContentLength\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_ContentLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentLength</div>        \r\n          </div>\r\n    \r\n            <p>Gets the length of the data received from the FTP server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override long ContentLength { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that contains the number of bytes of data received from the FTP server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a response stream is returned by the FTP server, the ContentLength property contains the number of bytes in the stream. ContentLength returns âˆ’1 if no data was returned in the response or if the server did not send content length information. The return value is greater than or equal to zero if data was or should have been returned. For example, for requests that use the <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_ListDirectory\" data-linktype=\"relative-path\">ListDirectory</a> field, the ContentLength property always returns âˆ’1. For requests that use the <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_UploadFile\" data-linktype=\"relative-path\">UploadFile</a> method, the ContentLength property is always zero. For requests that use the <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_DownloadFile\" data-linktype=\"relative-path\">DownloadFile</a> method, the property is greater than zero if the downloaded file contained data and is zero if it was empty.  </p>\n<p> For requests that use the <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_GetFileSize\" data-linktype=\"relative-path\">GetFileSize</a> method, ContentLength returns the size of the specified file on the server.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example downloads a file from on the specified FTP server. This property contains the number of bytes in the downloaded file.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLFtpClient#9\">   static bool DownloadFileFromServer( Uri^ serverUri, String^ localFileName )\n   {\n      // The serverUri parameter should start with the ftp:// scheme.\n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      // Note that the cast to FtpWebRequest is done only\n      // for the purposes of illustration. If your application\n      // does not set any properties other than those defined in the\n      // System.Net.WebRequest class, you can use the following line instead:\n      // WebRequest request = WebRequest.Create(serverUri);\n      //\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::DownloadFile;\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n      Stream^ responseStream = nullptr;\n      StreamReader^ readStream = nullptr;\n      StreamWriter^ writeStream = nullptr;\n      try\n      {\n         responseStream = response-&gt;GetResponseStream();\n         readStream = gcnew StreamReader( responseStream,System::Text::Encoding::UTF8 );\n         \n         // Display information about the data received from the server.\n         Console::WriteLine( &quot;Bytes received: {0}&quot;, response-&gt;ContentLength );\n         Console::WriteLine( &quot;Message from server: {0}&quot;, response-&gt;StatusDescription );\n         Console::WriteLine( &quot;Resource: {0}&quot;, response-&gt;ResponseUri );\n\n         // Write the bytes received from the server to the local file.\n         if ( readStream != nullptr )\n         {\n            writeStream = gcnew StreamWriter( localFileName,false );\n            writeStream-&gt;Write( readStream-&gt;ReadToEnd() );\n         }\n      }\n      finally\n      {\n         if ( readStream != nullptr )\n         {\n            readStream-&gt;Close();\n         }\n\n         if ( response != nullptr )\n         {\n            response-&gt;Close();\n         }\n\n         if ( writeStream != nullptr )\n         {\n            writeStream-&gt;Close();\n         }\n      }\n\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLFtpClient#9\">        public static bool DownloadFileFromServer(Uri serverUri, string localFileName)\n        {\n            // The serverUri parameter should start with the ftp:// scheme.\n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n            // Get the object used to communicate with the server.\n            // Note that the cast to FtpWebRequest is done only\n            // for the purposes of illustration. If your application\n            // does not set any properties other than those defined in the\n            // System.Net.WebRequest class, you can use the following line instead:\n            // WebRequest request = WebRequest.Create(serverUri);\n            //\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(serverUri);\n            request.Method = WebRequestMethods.Ftp.DownloadFile;\n            \n            FtpWebResponse response = (FtpWebResponse) request.GetResponse();\n            \n            Stream responseStream = null;\n            StreamReader readStream = null;\n            StreamWriter writeStream = null;\n            try\n            {\n                responseStream = response.GetResponseStream(); \n                readStream = new StreamReader(responseStream, System.Text.Encoding.UTF8);\n                // Display information about the data received from the server.\n                Console.WriteLine(&quot;Bytes received: {0}&quot;,response.ContentLength);   \n                 \n                Console.WriteLine(&quot;Message from server: {0}&quot;, response.StatusDescription);\n                Console.WriteLine(&quot;Resource: {0}&quot;, response.ResponseUri);\n               \n                // Write the bytes received from the server to the local file.\n                if (readStream != null)\n                {\n                    writeStream = new StreamWriter(localFileName, false);\n                    writeStream.Write(readStream.ReadToEnd());\n                }\n            }\n            finally\n            {\n                if (readStream != null)\n                {\n                    readStream.Close();\n                }\n                if (response != null)\n                {\n                    response.Close();\n                }\n                if (writeStream != null)\n                {\n                    writeStream.Close();\n                }\n            }\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_ExitMessage\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_ExitMessage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExitMessage</div>        \r\n          </div>\r\n    \r\n            <p>Gets the message sent by the server when the FTP session is ending.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ExitMessage { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the exit message sent by the server; otherwise, <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if no message is sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExitMessage property is not available until the connection to the server is closed or reused. If the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_KeepAlive_\" data-linktype=\"relative-path\">KeepAlive</a> property is <code>true</code>, the connection used by this request is not closed, which prevents the server from sending an exit message.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclFtpClient#17\">      Console::WriteLine( &quot;Exit message: {0}&quot;, response-&gt;ExitMessage );\n</code></pre><pre><code class=\"lang-cs\" name=\"NclFtpClient#17\">            Console.WriteLine(&quot;Exit message: {0}&quot;, \n                response.ExitMessage);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_Headers\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets an empty <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Net.WebHeaderCollection Headers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a></div>\r\n                  </div>\r\n                  <p>An empty <a class=\"xref\" href=\"system.net.webheadercollection\" data-linktype=\"relative-path\">WebHeaderCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Headers property is provided only for compatibility with other implementations of the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> and <a class=\"xref\" href=\"system.net.webresponse\" data-linktype=\"relative-path\">WebResponse</a> classes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_LastModified\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_LastModified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LastModified</div>        \r\n          </div>\r\n    \r\n            <p>Gets the date and time that a file on an FTP server was last modified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime LastModified { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that contains the last modified date and time for a file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LastModified property returns the data requested by the <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_GetDateTimestamp\" data-linktype=\"relative-path\">GetDateTimestamp</a> method. For requests sent using any other method, LastModified returns <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the date and time that a file on an FTP server was last modified.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclFtpClient#21\">   static bool GetDateTimestampOnServer( Uri^ serverUri )\n   {\n      // The serverUri should start with the ftp:// scheme.\n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::GetDateTimestamp;\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n      Console::WriteLine( &quot;{0} {1}&quot;, serverUri, response-&gt;LastModified );\n\n      // The output from this method will vary depening on the \n      // file specified and your regional settings. It is similar to:\n      // ftp://contoso.com/Data.txt 4/15/2003 10:46:02 AM\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NclFtpClient#21\">        public static bool GetDateTimestampOnServer (Uri serverUri)\n        {\n            // The serverUri should start with the ftp:// scheme.\n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n\n            // Get the object used to communicate with the server.\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create (serverUri);\n            request.Method = WebRequestMethods.Ftp.GetDateTimestamp;\n            FtpWebResponse response = (FtpWebResponse)request.GetResponse ();\n            Console.WriteLine (&quot;{0} {1}&quot;,serverUri,response.LastModified);\n\n            // The output from this method will vary depending on the \n            // file specified and your regional settings. It is similar to:\n            // ftp://contoso.com/Data.txt 4/15/2003 10:46:02 AM\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_ResponseUri\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_ResponseUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResponseUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URI that sent the response to the request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override Uri ResponseUri { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that identifies the resource associated with this response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because of server- and resource-specific behaviors, such as redirection, the value returned by the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_RequestUri_\" data-linktype=\"relative-path\">RequestUri</a> property is not always the same as the value returned by the ResponseUri property.  </p>\n<p> For requests that use the <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_UploadFileWithUniqueName\" data-linktype=\"relative-path\">UploadFileWithUniqueName</a> method, ResponseUri returns the name of the file on the server.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLFtpClient#9\">   static bool DownloadFileFromServer( Uri^ serverUri, String^ localFileName )\n   {\n      // The serverUri parameter should start with the ftp:// scheme.\n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      // Note that the cast to FtpWebRequest is done only\n      // for the purposes of illustration. If your application\n      // does not set any properties other than those defined in the\n      // System.Net.WebRequest class, you can use the following line instead:\n      // WebRequest request = WebRequest.Create(serverUri);\n      //\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::DownloadFile;\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n      Stream^ responseStream = nullptr;\n      StreamReader^ readStream = nullptr;\n      StreamWriter^ writeStream = nullptr;\n      try\n      {\n         responseStream = response-&gt;GetResponseStream();\n         readStream = gcnew StreamReader( responseStream,System::Text::Encoding::UTF8 );\n         \n         // Display information about the data received from the server.\n         Console::WriteLine( &quot;Bytes received: {0}&quot;, response-&gt;ContentLength );\n         Console::WriteLine( &quot;Message from server: {0}&quot;, response-&gt;StatusDescription );\n         Console::WriteLine( &quot;Resource: {0}&quot;, response-&gt;ResponseUri );\n\n         // Write the bytes received from the server to the local file.\n         if ( readStream != nullptr )\n         {\n            writeStream = gcnew StreamWriter( localFileName,false );\n            writeStream-&gt;Write( readStream-&gt;ReadToEnd() );\n         }\n      }\n      finally\n      {\n         if ( readStream != nullptr )\n         {\n            readStream-&gt;Close();\n         }\n\n         if ( response != nullptr )\n         {\n            response-&gt;Close();\n         }\n\n         if ( writeStream != nullptr )\n         {\n            writeStream-&gt;Close();\n         }\n      }\n\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLFtpClient#9\">        public static bool DownloadFileFromServer(Uri serverUri, string localFileName)\n        {\n            // The serverUri parameter should start with the ftp:// scheme.\n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n            // Get the object used to communicate with the server.\n            // Note that the cast to FtpWebRequest is done only\n            // for the purposes of illustration. If your application\n            // does not set any properties other than those defined in the\n            // System.Net.WebRequest class, you can use the following line instead:\n            // WebRequest request = WebRequest.Create(serverUri);\n            //\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(serverUri);\n            request.Method = WebRequestMethods.Ftp.DownloadFile;\n            \n            FtpWebResponse response = (FtpWebResponse) request.GetResponse();\n            \n            Stream responseStream = null;\n            StreamReader readStream = null;\n            StreamWriter writeStream = null;\n            try\n            {\n                responseStream = response.GetResponseStream(); \n                readStream = new StreamReader(responseStream, System.Text.Encoding.UTF8);\n                // Display information about the data received from the server.\n                Console.WriteLine(&quot;Bytes received: {0}&quot;,response.ContentLength);   \n                 \n                Console.WriteLine(&quot;Message from server: {0}&quot;, response.StatusDescription);\n                Console.WriteLine(&quot;Resource: {0}&quot;, response.ResponseUri);\n               \n                // Write the bytes received from the server to the local file.\n                if (readStream != null)\n                {\n                    writeStream = new StreamWriter(localFileName, false);\n                    writeStream.Write(readStream.ReadToEnd());\n                }\n            }\n            finally\n            {\n                if (readStream != null)\n                {\n                    readStream.Close();\n                }\n                if (response != null)\n                {\n                    response.Close();\n                }\n                if (writeStream != null)\n                {\n                    writeStream.Close();\n                }\n            }\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_StatusCode\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_StatusCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StatusCode</div>        \r\n          </div>\r\n    \r\n            <p>Gets the most recent status code sent from the FTP server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.FtpStatusCode StatusCode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ftpstatuscode\" data-linktype=\"relative-path\">FtpStatusCode</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.ftpstatuscode\" data-linktype=\"relative-path\">FtpStatusCode</a> value that indicates the most recent status code returned with this response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by the StatusCode property is included in the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_StatusDescription_\" data-linktype=\"relative-path\">StatusDescription</a> property. When you are downloading data, the value of StatusCode changes as status codes are returned by the FTP server. After you call the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method, StatusCode contains an intermediate status code. When you call the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_Close_\" data-linktype=\"relative-path\">Close</a> method, StatusCode contains the final status.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uploads a file to a server and displays the status.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLFtpClient#2\">   static bool UploadFileToServer( String^ fileName, Uri^ serverUri )\n   {\n      // The URI described by serverUri should use the ftp:// scheme.\n      // It contains the name of the file on the server.\n      // Example: ftp://contoso.com/someFile.txt.\n      // \n      // The fileName parameter identifies the file containing the data to be uploaded.\n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::UploadFile;\n\n      // Don&#39;t set a time limit for the operation to complete.\n      request-&gt;Timeout = System::Threading::Timeout::Infinite;\n\n      // Copy the file contents to the request stream.\n      const int bufferLength = 2048;\n      array&lt;Byte&gt;^buffer = gcnew array&lt;Byte&gt;(bufferLength);\n      int count = 0;\n      int readBytes = 0;\n      FileStream^ stream = File::OpenRead( fileName );\n      Stream^ requestStream = request-&gt;GetRequestStream();\n      do\n      {\n         readBytes = stream-&gt;Read( buffer, 0, bufferLength );\n         requestStream-&gt;Write( buffer, 0, bufferLength );\n         count += readBytes;\n      }\n      while ( readBytes != 0 );\n\n      Console::WriteLine( &quot;Writing {0} bytes to the stream.&quot;, count );\n      \n      // IMPORTANT: Close the request stream before sending the request.\n      requestStream-&gt;Close();\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n      Console::WriteLine( &quot;Upload status: {0}, {1}&quot;, response-&gt;StatusCode, response-&gt;StatusDescription );\n      response-&gt;Close();\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLFtpClient#2\">        public static bool UploadFileToServer(string fileName, Uri serverUri)\n        {\n            // The URI described by serverUri should use the ftp:// scheme.\n            // It contains the name of the file on the server.\n            // Example: ftp://contoso.com/someFile.txt.\n            // \n            // The fileName parameter identifies the file containing the data to be uploaded.\n\n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n            // Get the object used to communicate with the server.\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(serverUri);\n            request.Method = WebRequestMethods.Ftp.UploadFile;\n            // Don&#39;t set a time limit for the operation to complete.\n            request.Timeout = System.Threading.Timeout.Infinite;            \n            \n            // Copy the file contents to the request stream.\n            const int bufferLength = 2048;\n            byte[] buffer = new byte[bufferLength];\n           \n            int count = 0;\n            int readBytes = 0;\n            FileStream stream = File.OpenRead(fileName);\n            Stream requestStream = request.GetRequestStream();\n            do\n            {\n                readBytes = stream.Read(buffer, 0, bufferLength);\n                requestStream.Write(buffer, 0, bufferLength);\n                count += readBytes;\n            }\n            while (readBytes != 0);\n            \n            Console.WriteLine (&quot;Writing {0} bytes to the stream.&quot;, count);\n            // IMPORTANT: Close the request stream before sending the request.\n            requestStream.Close();\n\n            FtpWebResponse response = (FtpWebResponse) request.GetResponse();\n            Console.WriteLine(&quot;Upload status: {0}, {1}&quot;, response.StatusCode, response.StatusDescription);\n            \n            response.Close();\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_StatusDescription\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_StatusDescription_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StatusDescription</div>        \r\n          </div>\r\n    \r\n            <p>Gets text that describes a status code sent from the FTP server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StatusDescription { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance that contains the status code and message returned with this response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The text returned by the StatusDescription property includes the 3-digit <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_StatusCode_\" data-linktype=\"relative-path\">StatusCode</a> property value. When downloading data, the value of StatusDescription changes as status codes are returned by the FTP server. After you call the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_GetResponse_\" data-linktype=\"relative-path\">GetResponse</a> method, StatusDescription contains an intermediate status code. When you call the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_Close_\" data-linktype=\"relative-path\">Close</a> method, StatusDescription contains the final status.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sends a request to delete a file on an FTP server and displays the status message from the server&#39;s response to the request.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLFtpClient#4\">   static bool DeleteFileOnServer( Uri^ serverUri )\n   {\n      // The serverUri parameter should use the ftp:// scheme.\n      // It contains the name of the server file that is to be deleted.\n      // Example: ftp://contoso.com/someFile.txt.\n      // \n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::DeleteFile;\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n      Console::WriteLine( &quot;Delete status: {0}&quot;, response-&gt;StatusDescription );\n      response-&gt;Close();\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLFtpClient#4\">        public static bool DeleteFileOnServer(Uri serverUri)\n        {\n            // The serverUri parameter should use the ftp:// scheme.\n            // It contains the name of the server file that is to be deleted.\n            // Example: ftp://contoso.com/someFile.txt.\n            // \n            \n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n            // Get the object used to communicate with the server.\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(serverUri);\n            request.Method = WebRequestMethods.Ftp.DeleteFile;\n         \n            FtpWebResponse response = (FtpWebResponse) request.GetResponse();\n            Console.WriteLine(&quot;Delete status: {0}&quot;,response.StatusDescription);  \n            response.Close();\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_SupportsHeaders\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_SupportsHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SupportsHeaders</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <span class=\"xref\">stem.Net.FtpWebResponse.Headers*</span> property is supported by the <a class=\"xref\" href=\"system.net.ftpwebresponse\" data-linktype=\"relative-path\">FtpWebResponse</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool SupportsHeaders { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>.  </p>\n<p> <code>true</code> if the <span class=\"xref\">stem.Net.FtpWebResponse.Headers*</span> property is supported by the <a class=\"xref\" href=\"system.net.ftpwebresponse\" data-linktype=\"relative-path\">FtpWebResponse</a> instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is always true for <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/net-v45-md.md&quot; -->.NET Framework 4.5<!--END INCLUDE -->.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_WelcomeMessage\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_WelcomeMessage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WelcomeMessage</div>        \r\n          </div>\r\n    \r\n            <p>Gets the message sent by the FTP server when authentication is complete.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string WelcomeMessage { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the welcome message sent by the server; otherwise, <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> if no message is sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the connection is being reused (the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_KeepAlive_\" data-linktype=\"relative-path\">KeepAlive</a> property is set to <code>true</code>), the WelcomeMessage property returns the first welcome message received with the connection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the value of this property.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclFtpClient#13\">      Console::WriteLine( &quot;Welcome message: {0}&quot;, response-&gt;WelcomeMessage );\n</code></pre><pre><code class=\"lang-cs\" name=\"NclFtpClient#13\">            Console.WriteLine(&quot;Welcome message: {0}&quot;, \n                response.WelcomeMessage);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_Close\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Frees the resources held by the response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Close method closes the data stream returned by the <a class=\"xref\" href=\"system.net.ftpwebresponse#System_Net_FtpWebResponse_GetResponseStream_\" data-linktype=\"relative-path\">GetResponseStream</a> method if the <a class=\"xref\" href=\"system.net.ftpwebrequest#System_Net_FtpWebRequest_KeepAlive_\" data-linktype=\"relative-path\">KeepAlive</a> property is <code>false</code>. During the close, data might be sent to the server on the control connection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example downloads data from a server, reads the data from the response stream, and then closes it.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLFtpClient#9\">   static bool DownloadFileFromServer( Uri^ serverUri, String^ localFileName )\n   {\n      // The serverUri parameter should start with the ftp:// scheme.\n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      // Note that the cast to FtpWebRequest is done only\n      // for the purposes of illustration. If your application\n      // does not set any properties other than those defined in the\n      // System.Net.WebRequest class, you can use the following line instead:\n      // WebRequest request = WebRequest.Create(serverUri);\n      //\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::DownloadFile;\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n      Stream^ responseStream = nullptr;\n      StreamReader^ readStream = nullptr;\n      StreamWriter^ writeStream = nullptr;\n      try\n      {\n         responseStream = response-&gt;GetResponseStream();\n         readStream = gcnew StreamReader( responseStream,System::Text::Encoding::UTF8 );\n         \n         // Display information about the data received from the server.\n         Console::WriteLine( &quot;Bytes received: {0}&quot;, response-&gt;ContentLength );\n         Console::WriteLine( &quot;Message from server: {0}&quot;, response-&gt;StatusDescription );\n         Console::WriteLine( &quot;Resource: {0}&quot;, response-&gt;ResponseUri );\n\n         // Write the bytes received from the server to the local file.\n         if ( readStream != nullptr )\n         {\n            writeStream = gcnew StreamWriter( localFileName,false );\n            writeStream-&gt;Write( readStream-&gt;ReadToEnd() );\n         }\n      }\n      finally\n      {\n         if ( readStream != nullptr )\n         {\n            readStream-&gt;Close();\n         }\n\n         if ( response != nullptr )\n         {\n            response-&gt;Close();\n         }\n\n         if ( writeStream != nullptr )\n         {\n            writeStream-&gt;Close();\n         }\n      }\n\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLFtpClient#9\">        public static bool DownloadFileFromServer(Uri serverUri, string localFileName)\n        {\n            // The serverUri parameter should start with the ftp:// scheme.\n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n            // Get the object used to communicate with the server.\n            // Note that the cast to FtpWebRequest is done only\n            // for the purposes of illustration. If your application\n            // does not set any properties other than those defined in the\n            // System.Net.WebRequest class, you can use the following line instead:\n            // WebRequest request = WebRequest.Create(serverUri);\n            //\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(serverUri);\n            request.Method = WebRequestMethods.Ftp.DownloadFile;\n            \n            FtpWebResponse response = (FtpWebResponse) request.GetResponse();\n            \n            Stream responseStream = null;\n            StreamReader readStream = null;\n            StreamWriter writeStream = null;\n            try\n            {\n                responseStream = response.GetResponseStream(); \n                readStream = new StreamReader(responseStream, System.Text.Encoding.UTF8);\n                // Display information about the data received from the server.\n                Console.WriteLine(&quot;Bytes received: {0}&quot;,response.ContentLength);   \n                 \n                Console.WriteLine(&quot;Message from server: {0}&quot;, response.StatusDescription);\n                Console.WriteLine(&quot;Resource: {0}&quot;, response.ResponseUri);\n               \n                // Write the bytes received from the server to the local file.\n                if (readStream != null)\n                {\n                    writeStream = new StreamWriter(localFileName, false);\n                    writeStream.Write(readStream.ReadToEnd());\n                }\n            }\n            finally\n            {\n                if (readStream != null)\n                {\n                    readStream.Close();\n                }\n                if (response != null)\n                {\n                    response.Close();\n                }\n                if (writeStream != null)\n                {\n                    writeStream.Close();\n                }\n            }\n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_FtpWebResponse_GetResponseStream\">\r\n    \r\n            <a id=\"System_Net_FtpWebResponse_GetResponseStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetResponseStream()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the stream that contains response data sent from an FTP server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.IO.Stream GetResponseStream ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>A readable <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> instance that contains data returned with the response; otherwise, <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> if no response data was returned by the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The response did not return a data stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After reading the data, you must close the stream. The stream is automatically closed when you close the <a class=\"xref\" href=\"system.net.ftpwebresponse\" data-linktype=\"relative-path\">FtpWebResponse</a> object that contains it.  </p>\n<p> An exception is thrown unless the request method is <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_DownloadFile\" data-linktype=\"relative-path\">DownloadFile</a> or <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_ListDirectory\" data-linktype=\"relative-path\">ListDirectory</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates getting the response stream for a <a class=\"xref\" href=\"system.net.webrequestmethods.ftp#System_Net_WebRequestMethods_Ftp_ListDirectory\" data-linktype=\"relative-path\">ListDirectory</a> request.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLFtpClient#1\">   static bool ListFilesOnServer( Uri^ serverUri )\n   {\n      // The serverUri should start with the ftp:// scheme.\n      if ( serverUri-&gt;Scheme != Uri::UriSchemeFtp )\n      {\n         return false;\n      }\n\n      // Get the object used to communicate with the server.\n      FtpWebRequest^ request = dynamic_cast&lt;FtpWebRequest^&gt;(WebRequest::Create( serverUri ));\n      request-&gt;Method = WebRequestMethods::Ftp::ListDirectory;\n\n      // Get the ServicePoint object used for this request, and limit it to one connection.\n      // In a real-world application you might use the default number of connections (2),\n      // or select a value that works best for your application.\n      ServicePoint^ sp = request-&gt;ServicePoint;\n      Console::WriteLine( &quot;ServicePoint connections = {0}.&quot;, sp-&gt;ConnectionLimit );\n      sp-&gt;ConnectionLimit = 1;\n      FtpWebResponse^ response = dynamic_cast&lt;FtpWebResponse^&gt;(request-&gt;GetResponse());\n\n      // The following streams are used to read the data returned from the server.\n      Stream^ responseStream = nullptr;\n      StreamReader^ readStream = nullptr;\n      try\n      {\n         responseStream = response-&gt;GetResponseStream();\n         readStream = gcnew StreamReader( responseStream,System::Text::Encoding::UTF8 );\n         if ( readStream != nullptr )\n         {\n            // Display the data received from the server.\n            Console::WriteLine( readStream-&gt;ReadToEnd() );\n         }\n\n         Console::WriteLine( &quot;List status: {0}&quot;, response-&gt;StatusDescription );\n      }\n      finally\n      {\n         if ( readStream != nullptr )\n         {\n            readStream-&gt;Close();\n         }\n\n         if ( response != nullptr )\n         {\n            response-&gt;Close();\n         }\n      }\n\n      return true;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLFtpClient#1\">        public static bool ListFilesOnServer(Uri serverUri)\n        {\n            // The serverUri should start with the ftp:// scheme.\n            if (serverUri.Scheme != Uri.UriSchemeFtp)\n            {\n                return false;\n            }\n            // Get the object used to communicate with the server.\n            FtpWebRequest request = (FtpWebRequest)WebRequest.Create(serverUri);\n            request.Method = WebRequestMethods.Ftp.ListDirectory;\n            \n            // Get the ServicePoint object used for this request, and limit it to one connection.\n            // In a real-world application you might use the default number of connections (2),\n            // or select a value that works best for your application.\n            \n            ServicePoint sp = request.ServicePoint;\n            Console.WriteLine(&quot;ServicePoint connections = {0}.&quot;, sp.ConnectionLimit);\n            sp.ConnectionLimit = 1;\n            \n            FtpWebResponse response = (FtpWebResponse) request.GetResponse();\n             \n            // The following streams are used to read the data returned from the server.\n            Stream responseStream = null;\n            StreamReader readStream = null;\n            try\n            {\n                responseStream = response.GetResponseStream(); \n                readStream = new StreamReader(responseStream, System.Text.Encoding.UTF8);\n \n                if (readStream != null)\n                {\n                    // Display the data received from the server.\n                    Console.WriteLine(readStream.ReadToEnd());\n                } \n                Console.WriteLine(&quot;List status: {0}&quot;,response.StatusDescription);            \n            }\n            finally\n            {\n                if (readStream != null)\n                {\n                    readStream.Close();\n                }\n                if (response != null)\n                {\n                    response.Close();\n                }\n            }\n           \n            return true;\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.FtpWebResponse.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.FtpWebResponse.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.BannerMessage\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.Close\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.ContentLength\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.ExitMessage\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.GetResponseStream\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.Headers\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.LastModified\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.ResponseUri\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.StatusCode\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.StatusDescription\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.SupportsHeaders\">\r\n<meta name=\"APIName\" content=\"System.Net.FtpWebResponse.WelcomeMessage\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"52441104-1e91-378b-ed13-f1c5659c3c8e\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Net\\FtpWebResponse.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates a File Transfer Protocol (FTP) server&amp;#39;s response to a request.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.FtpWebResponse\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.FtpWebResponse.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.FtpWebResponse.yml","open_to_public_contributors":true,"api_name":["System.Net.FtpWebResponse","System.Net.FtpWebResponse.BannerMessage","System.Net.FtpWebResponse.Close","System.Net.FtpWebResponse.ContentLength","System.Net.FtpWebResponse.ExitMessage","System.Net.FtpWebResponse.GetResponseStream","System.Net.FtpWebResponse.Headers","System.Net.FtpWebResponse.LastModified","System.Net.FtpWebResponse.ResponseUri","System.Net.FtpWebResponse.StatusCode","System.Net.FtpWebResponse.StatusDescription","System.Net.FtpWebResponse.SupportsHeaders","System.Net.FtpWebResponse.WelcomeMessage"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.FtpWebResponse","System::Net::FtpWebResponse","System.Net.FtpWebResponse.BannerMessage","System::Net::FtpWebResponse::BannerMessage","System.Net.FtpWebResponse.Close","System::Net::FtpWebResponse::Close","System.Net.FtpWebResponse.ContentLength","System::Net::FtpWebResponse::ContentLength","System.Net.FtpWebResponse.ExitMessage","System::Net::FtpWebResponse::ExitMessage","System.Net.FtpWebResponse.GetResponseStream","System::Net::FtpWebResponse::GetResponseStream","System.Net.FtpWebResponse.Headers","System::Net::FtpWebResponse::Headers","System.Net.FtpWebResponse.LastModified","System::Net::FtpWebResponse::LastModified","System.Net.FtpWebResponse.ResponseUri","System::Net::FtpWebResponse::ResponseUri","System.Net.FtpWebResponse.StatusCode","System::Net::FtpWebResponse::StatusCode","System.Net.FtpWebResponse.StatusDescription","System::Net::FtpWebResponse::StatusDescription","System.Net.FtpWebResponse.SupportsHeaders","System::Net::FtpWebResponse::SupportsHeaders","System.Net.FtpWebResponse.WelcomeMessage","System::Net::FtpWebResponse::WelcomeMessage"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"52441104-1e91-378b-ed13-f1c5659c3c8e","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Net\\FtpWebResponse.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/FtpWebResponse.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FtpWebResponse class | Microsoft Docs","_op_ogTitle":"FtpWebResponse class","description":"Encapsulates a File Transfer Protocol (FTP) server&#39;s response to a request.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.FtpWebResponse","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.ftpwebresponse","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.ftpwebresponse","fileRelativePath":"System.Net.FtpWebResponse.html"},"themesRelativePathToOutputRoot":"_themes/"}