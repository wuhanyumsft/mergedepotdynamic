{"content":"    \r\n    <h1 id=\"System_UriTemplateTable\">\r\n      <span class=\"lang-csharp\">UriTemplateTable</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>A class that represents an associative set of <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.CompilerServices.TypeForwardedFrom(&quot;System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot;)]\npublic class UriTemplateTable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">UriTemplateTable</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A UriTemplateTable is an associative set of <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> objects bound to an object of the developer&#39;s choosing. It allows you to match candidate Uniform Resource Identifiers (URIs) against the templates in the set and retrieve the data associated with the matching templates. The contents of UriTemplateTable can be changed until the <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"relative-path\">MakeReadOnly(Boolean)</a> method is called, at which time one of following types of validation occurs:  </p>\n<ul>\n<li><p>When <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"relative-path\">MakeReadOnly(Boolean)</a> is called passing in <code>false</code>, the UriTemplateTable checks to make sure the table contains no multiple structurally-equivalent templates. If it finds such templates, it throws an exception. This type of validation is used in conjunction with <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MatchSingle_System_Uri_\" data-linktype=\"relative-path\">MatchSingle(Uri)</a> when you want to ensure only one template matches an incoming URI.  </p>\n</li>\n<li><p>When <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"relative-path\">MakeReadOnly(Boolean)</a> is called passing in <code>true</code>, multiple structurally-equivalent templates can be contained within a UriTemplateTable. However, any query strings in the templates must not be ambiguous; identical query strings are allowed. For more information about ambiguous query strings, see <a href=\"../Topic/UriTemplate%20and%20UriTemplateTable.md\" data-linktype=\"relative-path\">UriTemplate and UriTemplateTable</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable__ctor\" data-linktype=\"self-bookmark\">UriTemplateTable()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_UriTemplate_System_Object___\" data-linktype=\"self-bookmark\">UriTemplateTable(IEnumerable&lt;KeyValuePair&lt;UriTemplate,Object&gt;&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class with the specified collection of key/value pairs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable__ctor_System_Uri_\" data-linktype=\"self-bookmark\">UriTemplateTable(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class with the specified base address.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable__ctor_System_Uri_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_UriTemplate_System_Object___\" data-linktype=\"self-bookmark\">UriTemplateTable(Uri,IEnumerable&lt;KeyValuePair&lt;UriTemplate,Object&gt;&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class with the specified base address and collection of key/value pairs.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_BaseAddress\" data-linktype=\"self-bookmark\">BaseAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the base address for the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> is read only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_KeyValuePairs\" data-linktype=\"self-bookmark\">KeyValuePairs</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of key/value pairs that consist of <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> objects and their associated data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_OriginalBaseAddress\" data-linktype=\"self-bookmark\">OriginalBaseAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the original base address.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"self-bookmark\">MakeReadOnly(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> read only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_Match_System_Uri_\" data-linktype=\"self-bookmark\">Match(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to match a candidate <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> to the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_UriTemplateTable_MatchSingle_System_Uri_\" data-linktype=\"self-bookmark\">MatchSingle(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to match a candidate <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> to the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable__ctor\">\r\n    \r\n            <a id=\"System_UriTemplateTable__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriTemplateTable()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplateTable ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to instantiate the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#1\">            Uri prefix = new Uri(&quot;http://localhost/&quot;);\n\n            //Create a series of templates\n            UriTemplate weatherByCity  = new UriTemplate(&quot;weather/ state}/ city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/ country}/ village}&quot;);       \n            UriTemplate weatherByState = new UriTemplate(&quot;weather/ state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(prefix);\n            //Add each template to the table with some associated data\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            table.MakeReadOnly(true);\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#1\">        Dim prefix As New Uri(&quot;http://localhost/&quot;)\n\n        &#39; Create a series of templates\n        Dim weatherByCity As New UriTemplate(&quot;weather/ state}/ city}&quot;)\n        Dim weatherByCountry As New UriTemplate(&quot;weather/ country}/ village}&quot;)\n        Dim weatherByState As New UriTemplate(&quot;weather/ state}&quot;)\n        Dim traffic As New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard As New UriTemplate(&quot;*&quot;)\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(prefix)\n        &#39; Add each template to the table with some associated data\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        table.MakeReadOnly(True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable__ctor_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_UriTemplate_System_Object___\">\r\n    \r\n            <a id=\"System_UriTemplateTable__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriTemplateTable(IEnumerable&lt;KeyValuePair&lt;UriTemplate,Object&gt;&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class with the specified collection of key/value pairs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplateTable (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyValuePairs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of key/value pairs that consist of URI templates and associated data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to instantiate the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#2\">            //Create a series of templates\n            UriTemplate weatherByCity = new UriTemplate(&quot;weather/{state}/{city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/{country}/{village}&quot;);\n            UriTemplate weatherByState = new UriTemplate(&quot;weather/{state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Add each template to the table with some associated data\n            List&lt;KeyValuePair&lt;UriTemplate,Object&gt;&gt; list = new List&lt;KeyValuePair&lt;UriTemplate,object&gt;&gt;();\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(list);\n            table.BaseAddress = new Uri(&quot;http://localhost/&quot;);\n            table.MakeReadOnly(true);\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#2\">        &#39; Create a series of templates\n        Dim weatherByCity As New UriTemplate(&quot;weather/{state}/{city}&quot;)\n        Dim weatherByCountry As New UriTemplate(&quot;weather/{country}/{village}&quot;)\n        Dim weatherByState As New UriTemplate(&quot;weather/{state}&quot;)\n        Dim traffic As New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard As New UriTemplate(&quot;*&quot;)\n\n        &#39; Add each template to the table with some associated data\n        Dim list As New List(Of KeyValuePair(Of UriTemplate, Object))()\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        &#39;Create a template table\n        Dim table As New UriTemplateTable(list)\n        table.BaseAddress = New Uri(&quot;http://localhost/&quot;)\n        table.MakeReadOnly(True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable__ctor_System_Uri_\">\r\n    \r\n            <a id=\"System_UriTemplateTable__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriTemplateTable(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class with the specified base address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplateTable (Uri baseAddress);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that contains the base address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#3\">            Uri prefix = new Uri(&quot;http://localhost/&quot;);\n\n            //Create a series of templates\n            UriTemplate weatherByCity  = new UriTemplate(&quot;weather/ state}/ city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/ country}/ village}&quot;);       \n            UriTemplate weatherByState = new UriTemplate(&quot;weather/ state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(prefix);\n            //Add each template to the table with some associated data\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            table.MakeReadOnly(true);\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#3\">        Dim prefix As New Uri(&quot;http://localhost/&quot;)\n\n        &#39; Create a series of templates\n        Dim weatherByCity As New UriTemplate(&quot;weather/ state}/ city}&quot;)\n        Dim weatherByCountry As New UriTemplate(&quot;weather/ country}/ village}&quot;)\n        Dim weatherByState As New UriTemplate(&quot;weather/ state}&quot;)\n        Dim traffic As New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard As New UriTemplate(&quot;*&quot;)\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(prefix)\n        &#39; Add each template to the table with some associated data\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        table.MakeReadOnly(True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable__ctor_System_Uri_System_Collections_Generic_IEnumerable_System_Collections_Generic_KeyValuePair_System_UriTemplate_System_Object___\">\r\n    \r\n            <a id=\"System_UriTemplateTable__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriTemplateTable(Uri,IEnumerable&lt;KeyValuePair&lt;UriTemplate,Object&gt;&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> class with the specified base address and collection of key/value pairs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplateTable (Uri baseAddress, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; keyValuePairs);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that contains the base address.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyValuePairs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of key/value pairs that consist of URI templates and associated data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this constructor.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#4\">            Uri baseAddress = new Uri(&quot;http://localhost/&quot;);\n            //Create a series of templates\n            UriTemplate weatherByCity = new UriTemplate(&quot;weather/{state}/{city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/{country}/{village}&quot;);\n            UriTemplate weatherByState = new UriTemplate(&quot;weather/{state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Add each template to the table with some associated data\n            List&lt;KeyValuePair&lt;UriTemplate, Object&gt;&gt; list = new List&lt;KeyValuePair&lt;UriTemplate, object&gt;&gt;();\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(baseAddress, list);\n            table.MakeReadOnly(true);\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#4\">        Dim baseAddress As New Uri(&quot;http://localhost/&quot;)\n        &#39; Create a series of templates\n        Dim weatherByCity = New UriTemplate(&quot;weather/{state}/{city}&quot;)\n        Dim weatherByCountry = New UriTemplate(&quot;weather/{country}/{village}&quot;)\n        Dim weatherByState = New UriTemplate(&quot;weather/{state}&quot;)\n        Dim traffic = New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard = New UriTemplate(&quot;*&quot;)\n\n        &#39; Add each template to the table with some associated data\n        Dim list As New List(Of KeyValuePair(Of UriTemplate, Object))()\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(baseAddress, list)\n        table.MakeReadOnly(True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_BaseAddress\">\r\n    \r\n            <a id=\"System_UriTemplateTable_BaseAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the base address for the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri BaseAddress { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that contains the base address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BaseAddress property can only be set prior to calling <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"relative-path\">MakeReadOnly(Boolean)</a> or <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_Match_System_Uri_\" data-linktype=\"relative-path\">Match(Uri)</a> or <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MatchSingle_System_Uri_\" data-linktype=\"relative-path\">MatchSingle(Uri)</a> otherwise an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access the BaseAddress property.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#5\">            //Create a series of templates\n            UriTemplate weatherByCity = new UriTemplate(&quot;weather/{state}/{city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/{country}/{village}&quot;);\n            UriTemplate weatherByState = new UriTemplate(&quot;weather/{state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Add each template to the table with some associated data\n            List&lt;KeyValuePair&lt;UriTemplate,Object&gt;&gt; list = new List&lt;KeyValuePair&lt;UriTemplate,object&gt;&gt;();\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(list);\n            table.BaseAddress = new Uri(&quot;http://localhost/&quot;);\n            table.MakeReadOnly(true);\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#5\">        &#39; Create a series of templates\n        Dim weatherByCity As New UriTemplate(&quot;weather/{state}/{city}&quot;)\n        Dim weatherByCountry As New UriTemplate(&quot;weather/{country}/{village}&quot;)\n        Dim weatherByState As New UriTemplate(&quot;weather/{state}&quot;)\n        Dim traffic As New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard As New UriTemplate(&quot;*&quot;)\n\n        &#39; Add each template to the table with some associated data\n        Dim list As New List(Of KeyValuePair(Of UriTemplate, Object))()\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        &#39;Create a template table\n        Dim table As New UriTemplateTable(list)\n        table.BaseAddress = New Uri(&quot;http://localhost/&quot;)\n        table.MakeReadOnly(True)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_IsReadOnly\">\r\n    \r\n            <a id=\"System_UriTemplateTable_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> is read only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> property is read only; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> is read only after the <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"relative-path\">MakeReadOnly(Boolean)</a> method is called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access the IsReadOnly property.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#6\">            Uri baseAddress = new Uri(&quot;http://localhost/&quot;);\n            //Create a series of templates\n            UriTemplate weatherByCity = new UriTemplate(&quot;weather/{state}/{city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/{country}/{village}&quot;);\n            UriTemplate weatherByState = new UriTemplate(&quot;weather/{state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Add each template to the table with some associated data\n            List&lt;KeyValuePair&lt;UriTemplate, Object&gt;&gt; list = new List&lt;KeyValuePair&lt;UriTemplate, object&gt;&gt;();\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            list.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(baseAddress, list);\n            table.MakeReadOnly(true);\n            if (table.IsReadOnly)\n                Console.WriteLine(&quot;UriTemplateTable is read only&quot;);\n            else\n                Console.WriteLine(&quot;UriTemplateTable is not read only&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#6\">        Dim baseAddress As New Uri(&quot;http://localhost/&quot;)\n        &#39; Create a series of templates\n        Dim weatherByCity = New UriTemplate(&quot;weather/{state}/{city}&quot;)\n        Dim weatherByCountry = New UriTemplate(&quot;weather/{country}/{village}&quot;)\n        Dim weatherByState = New UriTemplate(&quot;weather/{state}&quot;)\n        Dim traffic = New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard = New UriTemplate(&quot;*&quot;)\n\n        &#39; Add each template to the table with some associated data\n        Dim list As New List(Of KeyValuePair(Of UriTemplate, Object))()\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        list.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(baseAddress, list)\n        table.MakeReadOnly(True)\n        If (table.IsReadOnly) Then\n            Console.WriteLine(&quot;UriTemplateTable is read only&quot;)\n        Else\n            Console.WriteLine(&quot;UriTemplateTable is not read only&quot;)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_KeyValuePairs\">\r\n    \r\n            <a id=\"System_UriTemplateTable_KeyValuePairs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyValuePairs</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of key/value pairs that consist of <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> objects and their associated data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IList&lt;System.Collections.Generic.KeyValuePair&lt;UriTemplate,object&gt;&gt; KeyValuePairs { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.collections.generic.keyvaluepair-2\" data-linktype=\"relative-path\">KeyValuePair</a>&lt;<a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a>,<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;&gt;</div>\r\n                  </div>\r\n                  <p>A collection of key/value pairs that consist of <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> objects and their associated data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instance in the table has data associated with it. The KeyValuePairs property contains a collection of key value pairs where the key is a <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instance and the value is the data associated with the <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a>. Values can only be added to KeyValuePairs property prior to calling <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MakeReadOnly_System_Boolean_\" data-linktype=\"relative-path\">MakeReadOnly(Boolean)</a> or <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_Match_System_Uri_\" data-linktype=\"relative-path\">Match(Uri)</a> or <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MatchSingle_System_Uri_\" data-linktype=\"relative-path\">MatchSingle(Uri)</a> otherwise a <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to access the KeyValuePairs property.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#7\">            Uri prefix = new Uri(&quot;http://localhost/&quot;);\n\n            //Create a series of templates\n            UriTemplate weatherByCity = new UriTemplate(&quot;weather/ state}/ city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/ country}/ village}&quot;);\n            UriTemplate weatherByState = new UriTemplate(&quot;weather/ state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(prefix);\n            //Add each template to the table with some associated data\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            table.MakeReadOnly(true);\n\n            Console.WriteLine(&quot;KeyValuePairs:&quot;);\n            foreach (KeyValuePair&lt;UriTemplate, Object&gt; keyPair in table.KeyValuePairs)\n            {\n                Console.WriteLine(&quot;     0},  1}&quot;, keyPair.Key, keyPair.Value);\n            }\n\n            Console.WriteLine();\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#7\">        Dim prefix As New Uri(&quot;http://localhost/&quot;)\n\n        &#39; Create a series of templates\n        Dim weatherByCity = New UriTemplate(&quot;weather/ state}/ city}&quot;)\n        Dim weatherByCountry = New UriTemplate(&quot;weather/ country}/ village}&quot;)\n        Dim weatherByState = New UriTemplate(&quot;weather/ state}&quot;)\n        Dim traffic = New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard = New UriTemplate(&quot;*&quot;)\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(prefix)\n        &#39; Add each template to the table with some associated data\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        table.MakeReadOnly(True)\n\n        Console.WriteLine(&quot;KeyValuePairs:&quot;)\n        For Each keyPair As KeyValuePair(Of UriTemplate, Object) In table.KeyValuePairs\n            Console.WriteLine(&quot;     0},  1}&quot;, keyPair.Key, keyPair.Value)\n        Next\n\n        Console.WriteLine()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_OriginalBaseAddress\">\r\n    \r\n            <a id=\"System_UriTemplateTable_OriginalBaseAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OriginalBaseAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets the original base address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri OriginalBaseAddress { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>The original base address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_MakeReadOnly_System_Boolean_\">\r\n    \r\n            <a id=\"System_UriTemplateTable_MakeReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MakeReadOnly(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> read only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MakeReadOnly (bool allowDuplicateEquivalentUriTemplates);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowDuplicateEquivalentUriTemplates</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies whether to allow duplicate equivalent <a class=\"xref\" href=\"system.uritemplate\" data-linktype=\"relative-path\">UriTemplate</a> instances in the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the MakeReadOnly method is called, one of the following types of validation occurs:  </p>\n<ul>\n<li><p>When MakeReadOnly is called passing in <code>false</code>, the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a> checks to make sure the table contains no multiple structurally-equivalent templates. If it finds such templates, an exception is thrown. This type of validation is used in conjunction with <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_MatchSingle_System_Uri_\" data-linktype=\"relative-path\">MatchSingle(Uri)</a> when you want to ensure only one template matches an incoming URI.  </p>\n</li>\n<li><p>When MakeReadOnly is called passing in <code>true</code>, multiple structurally-equivalent templates can be contained within a <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a>. However, any query strings in the templates must not be ambiguous; identical query strings are allowed. This type of validation is used in conjunction with <a class=\"xref\" href=\"system.uritemplatetable#System_UriTemplateTable_Match_System_Uri_\" data-linktype=\"relative-path\">Match(Uri)</a> when multiple template matches are allowed on the candidate URI.  </p>\n<p>Only the first call to MakeReadOnly is honored, subsequent calls are ignored without any exception being thrown.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_Match_System_Uri_\">\r\n    \r\n            <a id=\"System_UriTemplateTable_Match_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Match(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to match a candidate <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> to the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.Collection&lt;UriTemplateMatch&gt; Match (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The candidate URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.collection-1\" data-linktype=\"relative-path\">Collection</a>&lt;<a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instances.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method may return multiple matches.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call the Match method.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#9\">            Uri prefix = new Uri(&quot;http://localhost/&quot;);\n\n            //Create a series of templates\n            UriTemplate weatherByCity  = new UriTemplate(&quot;weather/ state}/ city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/ country}/ village}&quot;);       \n            UriTemplate weatherByState = new UriTemplate(&quot;weather/ state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(prefix);\n            //Add each template to the table with some associated data\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            table.MakeReadOnly(true);\n\n            //Call Match to retrieve some match results:\n            ICollection&lt;UriTemplateMatch&gt; results = null;\n            Uri weatherInSeattle = new Uri(&quot;http://localhost/weather/Washington/Seattle&quot;);\n\n            results = table.Match(weatherInSeattle);\n            if( results != null)\n            {\n                Console.WriteLine(&quot;Matching templates:&quot;);\n                foreach (UriTemplateMatch match in results)\n                {\n                    Console.WriteLine(&quot;    0}&quot;, match.Template);\n                }\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#9\">        Dim prefix As New Uri(&quot;http://localhost/&quot;)\n\n        &#39; Create a series of templates\n        Dim weatherByCity = New UriTemplate(&quot;weather/ state}/ city}&quot;)\n        Dim weatherByCountry = New UriTemplate(&quot;weather/ country}/ village}&quot;)\n        Dim weatherByState = New UriTemplate(&quot;weather/ state}&quot;)\n        Dim traffic = New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard = New UriTemplate(&quot;*&quot;)\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(prefix)\n        &#39; Add each template to the table with some associated data\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        table.MakeReadOnly(True)\n\n        &#39; Call Match to retrieve some match results:\n        Dim results As ICollection(Of UriTemplateMatch)\n        results = Nothing\n        Dim weatherInSeattle As New Uri(&quot;http://localhost/weather/Washington/Seattle&quot;)\n\n        results = table.Match(weatherInSeattle)\n        If (results IsNot Nothing) Then\n\n            Console.WriteLine(&quot;Matching templates:&quot;)\n            For Each match As UriTemplateMatch In results\n                Console.WriteLine(&quot;    0}&quot;, match.Template)\n            Next\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_UriTemplateTable_MatchSingle_System_Uri_\">\r\n    \r\n            <a id=\"System_UriTemplateTable_MatchSingle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MatchSingle(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to match a candidate <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> to the <a class=\"xref\" href=\"system.uritemplatetable\" data-linktype=\"relative-path\">UriTemplateTable</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriTemplateMatch MatchSingle (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The candidate URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a></div>\r\n                  </div>\r\n                  <p>A single <a class=\"xref\" href=\"system.uritemplatematch\" data-linktype=\"relative-path\">UriTemplateMatch</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns, at most, one match. If more than one match is found, a <a class=\"xref\" href=\"system.uritemplatematchexception\" data-linktype=\"relative-path\">UriTemplateMatchException</a> is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call the MatchSingle method.  </p>\n<pre><code class=\"lang-cs\" name=\"UriTemplateTable#10\">            Uri prefix = new Uri(&quot;http://localhost/&quot;);\n\n            //Create a series of templates\n            UriTemplate weatherByCity = new UriTemplate(&quot;weather/ state}/ city}&quot;);\n            UriTemplate weatherByCountry = new UriTemplate(&quot;weather/ country}/ village}&quot;);\n            UriTemplate weatherByState = new UriTemplate(&quot;weather/ state}&quot;);\n            UriTemplate traffic = new UriTemplate(&quot;traffic/*&quot;);\n            UriTemplate wildcard = new UriTemplate(&quot;*&quot;);\n\n            //Create a template table\n            UriTemplateTable table = new UriTemplateTable(prefix);\n            //Add each template to the table with some associated data\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCity, &quot;weatherByCity&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByCountry, &quot;weatherByCountry&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(weatherByState, &quot;weatherByState&quot;));\n            table.KeyValuePairs.Add(new KeyValuePair&lt;UriTemplate, Object&gt;(traffic, &quot;traffic&quot;));\n\n            table.MakeReadOnly(true);\n\n            //Call MatchSingle to retrieve some match results:\n            Uri weatherInSeattle = new Uri(&quot;http://localhost/weather/Washington/Seattle&quot;);\n            UriTemplateMatch match = table.MatchSingle(weatherInSeattle);\n\n            Console.WriteLine(&quot;Matching template: {0}&quot;, match.Template.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"UriTemplateTable#10\">        Dim prefix As New Uri(&quot;http://localhost/&quot;)\n\n        &#39; Create a series of templates\n        Dim weatherByCity As New UriTemplate(&quot;weather/ state}/ city}&quot;)\n        Dim weatherByCountry As New UriTemplate(&quot;weather/ country}/ village}&quot;)\n        Dim weatherByState As New UriTemplate(&quot;weather/ state}&quot;)\n        Dim traffic As New UriTemplate(&quot;traffic/*&quot;)\n        Dim wildcard = New UriTemplate(&quot;*&quot;)\n\n        &#39; Create a template table\n        Dim table As New UriTemplateTable(prefix)\n        &#39; Add each template to the table with some associated data\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCity, &quot;weatherByCity&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByCountry, &quot;weatherByCountry&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(weatherByState, &quot;weatherByState&quot;))\n        table.KeyValuePairs.Add(New KeyValuePair(Of UriTemplate, Object)(traffic, &quot;traffic&quot;))\n\n        table.MakeReadOnly(True)\n\n        &#39; Call MatchSingle to retrieve some match results:\n        Dim weatherInSeattle As New Uri(&quot;http://localhost/weather/Washington/Seattle&quot;)\n        Dim match As UriTemplateMatch\n        match = table.MatchSingle(weatherInSeattle)\n\n        Console.WriteLine(&quot;Matching template: {0}&quot;, match.Template.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.UriTemplateTable.yml\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable..ctor\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.BaseAddress\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.KeyValuePairs\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.MakeReadOnly\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.Match\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.MatchSingle\">\r\n<meta name=\"APIName\" content=\"System.UriTemplateTable.OriginalBaseAddress\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.Web.dll\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"76155d22-b9db-8c0f-5276-b0aa975142e4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"A class that represents an associative set of  objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.UriTemplateTable\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.UriTemplateTable.yml","open_to_public_contributors":true,"api_name":["System.UriTemplateTable","System.UriTemplateTable..ctor","System.UriTemplateTable.BaseAddress","System.UriTemplateTable.IsReadOnly","System.UriTemplateTable.KeyValuePairs","System.UriTemplateTable.MakeReadOnly","System.UriTemplateTable.Match","System.UriTemplateTable.MatchSingle","System.UriTemplateTable.OriginalBaseAddress"],"api_location":["System.ServiceModel.Web.dll","System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.UriTemplateTable","System::UriTemplateTable","System.UriTemplateTable.#ctor","System::UriTemplateTable::#ctor","System.UriTemplateTable.BaseAddress","System::UriTemplateTable::BaseAddress","System.UriTemplateTable.IsReadOnly","System::UriTemplateTable::IsReadOnly","System.UriTemplateTable.KeyValuePairs","System::UriTemplateTable::KeyValuePairs","System.UriTemplateTable.MakeReadOnly","System::UriTemplateTable::MakeReadOnly","System.UriTemplateTable.Match","System::UriTemplateTable::Match","System.UriTemplateTable.MatchSingle","System::UriTemplateTable::MatchSingle","System.UriTemplateTable.OriginalBaseAddress","System::UriTemplateTable::OriginalBaseAddress"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"76155d22-b9db-8c0f-5276-b0aa975142e4","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/UriTemplateTable.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"UriTemplateTable class | Microsoft Docs","_op_ogTitle":"UriTemplateTable class","description":"A class that represents an associative set of  objects.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.UriTemplateTable","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uritemplatetable","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uritemplatetable","fileRelativePath":"System.UriTemplateTable.html"},"themesRelativePathToOutputRoot":"_themes/"}