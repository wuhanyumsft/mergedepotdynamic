{"content":"    \r\n    <h1 id=\"System_Net_WebPermission\">\r\n      <span class=\"lang-csharp\">WebPermission</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls rights to access HTTP Internet resources.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission\" data-linktype=\"relative-path\">System.Security.CodeAccessPermission</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WebPermission</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Assert\" data-linktype=\"relative-path\">Assert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Demand\" data-linktype=\"relative-path\">Demand()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny\" data-linktype=\"relative-path\">Deny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_PermitOnly\" data-linktype=\"relative-path\">PermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAll\" data-linktype=\"relative-path\">RevertAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertAssert\" data-linktype=\"relative-path\">RevertAssert()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertDeny\" data-linktype=\"relative-path\">RevertDeny()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_RevertPermitOnly\" data-linktype=\"relative-path\">RevertPermitOnly()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>WebPermission provides a set of methods and properties to control access to Internet resources. You can use a WebPermission to provide either restricted or unrestricted access to your resource, based on the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> that is set when the WebPermission is created.  </p>\n<p> Create a WebPermission instance by calling its constructor using one of the following sets of parameters:  </p>\n<ul>\n<li><p>No parameters. The default <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> is <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>. Specify either <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> to allow any URI to be used in the target class, or <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> to allow access only to URIs that you specify through the use of the <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a> method.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> value and a URI string. The specified URI has permissions granted by the <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> value.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> specifier and URI regular expression.  </p>\n<p>The <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_ConnectList_\" data-linktype=\"relative-path\">ConnectList</a> and <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a> hold the URIs to which you have granted access permission. To add a URI to either of these lists, use <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a>. If you pass <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> as the <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> parameter, the URI will be added to the <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a>. WebPermission will allow connections to your target class with URIs matching the <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a>.  </p>\n</li>\n</ul>\n<div class=\"CAUTION\"><h5>Caution</h5><p> To deny access to an Internet resource, you must deny access to all the possible paths to that resource. This requires calling <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission__ctor_\" data-linktype=\"relative-path\">WebPermission</a> with state parameter set to <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Deny_\" data-linktype=\"relative-path\">Deny</a>. A better approach is to allow access to the specific resource only. For more information about this subject, refer to the <a href=\"http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25\" data-linktype=\"external\">NIB: Using the Deny Method</a> topic.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> You need to deny access using only the resource canonical path. There is no need to use all the path&#39;s syntactical variations.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> User name and default port information is stripped from the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> before the comparison with the regular expression argument that is supplied to the <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission__ctor_System_Net_NetworkAccess_System_Text_RegularExpressions_Regex_\" data-linktype=\"relative-path\">WebPermission(NetworkAccess,Regex)</a> constructor. If the regular expression contains user information or the default port number, then all incoming <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>s will fail to match the regular expression.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission__ctor\" data-linktype=\"self-bookmark\">WebPermission()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission__ctor_System_Security_Permissions_PermissionState_\" data-linktype=\"self-bookmark\">WebPermission(PermissionState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class that passes all demands or fails all demands.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission__ctor_System_Net_NetworkAccess_System_String_\" data-linktype=\"self-bookmark\">WebPermission(NetworkAccess,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class with the specified access rights for the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission__ctor_System_Net_NetworkAccess_System_Text_RegularExpressions_Regex_\" data-linktype=\"self-bookmark\">WebPermission(NetworkAccess,Regex)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class with the specified access rights for the specified URI regular expression.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_AcceptList\" data-linktype=\"self-bookmark\">AcceptList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property returns an enumeration of a single accept permissions held by this <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. The possible objects types contained in the returned enumeration are <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> and <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_ConnectList\" data-linktype=\"self-bookmark\">ConnectList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property returns an enumeration of a single connect permissions held by this <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. The possible objects types contained in the returned enumeration are <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> and <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_AddPermission_System_Net_NetworkAccess_System_String_\" data-linktype=\"self-bookmark\">AddPermission(NetworkAccess,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified URI string with the specified access rights to the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_AddPermission_System_Net_NetworkAccess_System_Text_RegularExpressions_Regex_\" data-linktype=\"self-bookmark\">AddPermission(NetworkAccess,Regex)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified URI with the specified access rights to the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_Copy\" data-linktype=\"self-bookmark\">Copy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_FromXml_System_Security_SecurityElement_\" data-linktype=\"self-bookmark\">FromXml(SecurityElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reconstructs a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> from an XML encoding.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_Intersect_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Intersect(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the logical intersection of two <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_IsSubsetOf_System_Security_IPermission_\" data-linktype=\"self-bookmark\">IsSubsetOf(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> is a subset of the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_IsUnrestricted\" data-linktype=\"self-bookmark\">IsUnrestricted()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks the overall permission state of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_ToXml\" data-linktype=\"self-bookmark\">ToXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an XML encoding of a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> and its current state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_WebPermission_Union_System_Security_IPermission_\" data-linktype=\"self-bookmark\">Union(IPermission)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the logical union between two instances of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission__ctor\">\r\n    \r\n            <a id=\"System_Net_WebPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebPermission()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebPermission ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class. This constructor creates an empty permission that does not grant any rights.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission__ctor_System_Security_Permissions_PermissionState_\">\r\n    \r\n            <a id=\"System_Net_WebPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebPermission(PermissionState)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class that passes all demands or fails all demands.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebPermission (System.Security.Permissions.PermissionState state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the <code>state</code> parameter is either <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">System.Security.Permissions.PermissionState</a> or <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">System.Security.Permissions.PermissionState</a>, respectively yielding fully restricted or fully unrestricted access to all security variables. If you specify <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">System.Security.Permissions.PermissionState</a>, then you can give access to individual URIs using <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> and gives access rights to specific URLs.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_Copy#1\">      &#39; Create a WebPermission instance.  \n      Dim myWebPermission1 As New WebPermission(PermissionState.None)\n      \n      &#39; Allow access to the first set of URL&#39;s.\n      myWebPermission1.AddPermission(NetworkAccess.Connect, &quot;http://www.microsoft.com/default.htm&quot;)\n      myWebPermission1.AddPermission(NetworkAccess.Connect, &quot;http://www.msn.com&quot;)\n      \n      &#39; Check whether all callers higher in the call stack have been granted the permissionor not.\n      myWebPermission1.Demand()\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_Copy#1\">      // Create a WebPermission instance.\n      WebPermission^ myWebPermission1 = gcnew WebPermission( PermissionState::None );\n      \n      // Allow access to the first set of URL&#39;s.\n      myWebPermission1-&gt;AddPermission( NetworkAccess::Connect, &quot;http://www.microsoft.com/default.htm&quot; );\n      myWebPermission1-&gt;AddPermission( NetworkAccess::Connect, &quot;http://www.msn.com&quot; );\n      \n      // Check whether all callers higher in the call stack have been granted the permissionor not.\n      myWebPermission1-&gt;Demand();\n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_Copy#1\">    // Create a WebPermission instance.  \n    WebPermission myWebPermission1 = new WebPermission(PermissionState.None);\n\n    // Allow access to the first set of URL&#39;s.\n    myWebPermission1.AddPermission(NetworkAccess.Connect,&quot;http://www.microsoft.com/default.htm&quot;);\n    myWebPermission1.AddPermission(NetworkAccess.Connect,&quot;http://www.msn.com&quot;);\n\n    // Check whether all callers higher in the call stack have been granted the permissionor not.\n    myWebPermission1.Demand();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission__ctor_System_Net_NetworkAccess_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebPermission(NetworkAccess,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class with the specified access rights for the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebPermission (System.Net.NetworkAccess access, string uriString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A NetworkAccess value that indicates what kind of access to grant to the specified URI. <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> indicates that the application is allowed to accept connections from the Internet on a local resource. <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> indicates that the application is allowed to connect to specific Internet resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URI string to which access rights are granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> and grants its target permission to either make a remote host connection or accept a remote host connection using the URI described by the <code>uriString</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> with connect rights for the specified URI.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebPermission_Union#1\">      // Create a WebPermission::instance.\n      WebPermission^ myWebPermission1 = gcnew WebPermission( NetworkAccess::Connect,&quot;http://www.contoso.com/default.htm&quot; );\n      myWebPermission1-&gt;Demand();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebPermission_Union#1\">      &#39; Create a WebPermission.instance.\n      Dim myWebPermission1 As New WebPermission(NetworkAccess.Connect, &quot;http://www.contoso.com/default.htm&quot;)\n      myWebPermission1.Demand()\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_Union#1\">\n    // Create a WebPermission.instance.\n    WebPermission myWebPermission1 = new WebPermission(NetworkAccess.Connect,&quot;http://www.contoso.com/default.htm&quot;);\n    myWebPermission1.Demand();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission__ctor_System_Net_NetworkAccess_System_Text_RegularExpressions_Regex_\">\r\n    \r\n            <a id=\"System_Net_WebPermission__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WebPermission(NetworkAccess,Regex)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class with the specified access rights for the specified URI regular expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> value that indicates what kind of access to grant to the specified URI. <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> indicates that the application is allowed to accept connections from the Internet on a local resource. <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> indicates that the application is allowed to connect to specific Internet resources.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriRegex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A regular expression that describes the URI to which access is to be granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor initializes a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> and grants its target permission to either make a remote host connection or accept a remote host connection using the URI described by the <code>uriRegex</code>parameter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> It is recommended that you create <code>uriRegex</code> using the <a class=\"xref\" href=\"system.text.regularexpressions.regexoptions\" data-linktype=\"relative-path\">System.Text.RegularExpressions.RegexOptions</a>, <a class=\"xref\" href=\"system.text.regularexpressions.regexoptions\" data-linktype=\"relative-path\">System.Text.RegularExpressions.RegexOptions</a>, and <a class=\"xref\" href=\"system.text.regularexpressions.regexoptions\" data-linktype=\"relative-path\">System.Text.RegularExpressions.RegexOptions</a> flags.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A candidate URI string is checked against the list of relevant regular expressions (<a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a> or <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_ConnectList_\" data-linktype=\"relative-path\">ConnectList</a>) in two ways. First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and checked against the appropriate list.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> with connect rights for the specified <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">System.Text.RegularExpressions.Regex</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_Constructor4#1\">  &#39;  Creates an instance of &#39;Regex&#39; that accepts all  URL&#39;s containing the host fragment &#39;www.contoso.com&#39;.\n  Dim myRegex As New Regex(&quot;http://www\\.contoso\\.com/.*&quot;)\n    \n     &#39; Creates a &#39;WebPermission&#39; that gives the permissions to all the hosts containing same host fragment.\n     Dim myWebPermission As New WebPermission(NetworkAccess.Connect, myRegex)\n     \n    &#39;  Checks all callers higher in the call stack have been granted the permission.\n    myWebPermission.Demand()\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_Constructor4#1\">      // Create an instance of &#39;Regex&#39; that accepts all URL&#39;s containing the host\n      // fragment &#39;www.contoso.com&#39;.\n      Regex^ myRegex = gcnew Regex( &quot;http://www.contoso.com/.*&quot; );\n      \n      // Create a WebPermission that gives the permissions to all the hosts containing\n      // the same fragment.\n      WebPermission^ myWebPermission = gcnew WebPermission( NetworkAccess::Connect,myRegex );\n      \n      // Checks all callers higher in the call stack have been granted the permission.\n      myWebPermission-&gt;Demand();\n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_Constructor4#1\">\n      // Create an instance of &#39;Regex&#39; that accepts all  URL&#39;s containing the host \n      // fragment &#39;www.contoso.com&#39;.\n      Regex myRegex = new Regex(@&quot;http://www\\.contoso\\.com/.*&quot;);\n\n     // Create a WebPermission that gives the permissions to all the hosts containing \n     // the same fragment.\n     WebPermission myWebPermission = new WebPermission(NetworkAccess.Connect,myRegex);\n        \n     // Checks all callers higher in the call stack have been granted the permission.\n     myWebPermission.Demand();\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_AcceptList\">\r\n    \r\n            <a id=\"System_Net_WebPermission_AcceptList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptList</div>        \r\n          </div>\r\n    \r\n            <p>This property returns an enumeration of a single accept permissions held by this <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. The possible objects types contained in the returned enumeration are <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> and <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator AcceptList { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains accept permissions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gets a list of local resources permitted by this <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. The class to which you have applied <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> only has permission to receive an incoming connection to local resources found in this list.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can add URIs to this list using <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A candidate URI string is checked against the list of relevant regular expressions (AcceptList or <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_ConnectList_\" data-linktype=\"relative-path\">ConnectList</a>) in two ways. First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and checked against the appropriate list.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example prints the URLs in the AcceptList to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_AcceptConnectList#2\">      &#39; Get all URI&#39;s with Accept permission.  \n      Dim myEnum1 As IEnumerator = myWebPermission1.AcceptList\n      Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;The URIs with Accept permission are :&quot; + ControlChars.Cr)\n      While myEnum1.MoveNext()\n         Console.WriteLine((ControlChars.Tab + &quot;The URI is : &quot; + myEnum1.Current))\n      End While \n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_AcceptConnectList#2\">    \n   // Get all URI&#39;s with Accept permission.  \n   IEnumerator myEnum1 = myWebPermission1.AcceptList;\n   Console.WriteLine(&quot;<br><br>The URIs with Accept permission are :<br>&quot;);\n    while (myEnum1.MoveNext())\n    { Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;The URI is : &quot;+myEnum1.Current); }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_AcceptConnectList#2\">      // Get all URI&#39;s with Accept permission.\n      IEnumerator^ myEnum1 = myWebPermission1-&gt;AcceptList;\n      Console::WriteLine( &quot;<br><br>The URIs with Accept permission are :<br>&quot; );\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;The URI is : {0}&quot;, myEnum1-&gt;Current );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_ConnectList\">\r\n    \r\n            <a id=\"System_Net_WebPermission_ConnectList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectList</div>        \r\n          </div>\r\n    \r\n            <p>This property returns an enumeration of a single connect permissions held by this <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. The possible objects types contained in the returned enumeration are <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> and <a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator ConnectList { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface that contains connect permissions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property gets a list of remote resources that are permitted by this <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. The class to which you have applied <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> only has permission to connect with resources found in this list.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can add URIs to this list using <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A candidate URI string is checked against the list of relevant regular expressions (<a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a> or ConnectList) in two ways. First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and checked against the appropriate list.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example prints the URLs in the ConnectList to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_AcceptConnectList#1\">      &#39; Gets all URIs with Connect permission.\n      Dim myEnum As IEnumerator = myWebPermission1.ConnectList\n      Console.WriteLine(ControlChars.Cr + &quot;The URIs with Connect permission are :&quot; + ControlChars.Cr)\n      While myEnum.MoveNext()\n         Console.WriteLine((ControlChars.Tab + &quot;The URI is : &quot; + myEnum.Current))\n      End While \n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_AcceptConnectList#1\">    \n    // Gets all URIs with Connect permission.\n    IEnumerator myEnum = myWebPermission1.ConnectList;\n    Console.WriteLine(&quot;<br>The URIs with Connect permission are :<br>&quot;);\n    while (myEnum.MoveNext())\n    { Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;The URI is : &quot;+myEnum.Current); }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_AcceptConnectList#1\">      // Gets all URIs with Connect permission.\n      IEnumerator^ myEnum = myWebPermission1-&gt;ConnectList;\n      Console::WriteLine( &quot;<br>The URIs with Connect permission are :<br>&quot; );\n      while ( myEnum-&gt;MoveNext() )\n      {\n         Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;The URI is : {0}&quot;, myEnum-&gt;Current );\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_AddPermission_System_Net_NetworkAccess_System_String_\">\r\n    \r\n            <a id=\"System_Net_WebPermission_AddPermission_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPermission(NetworkAccess,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified URI string with the specified access rights to the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPermission (System.Net.NetworkAccess access, string uriString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> that specifies the access rights that are granted to the URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that describes the URI to which access rights are granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you have specified <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> as the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>, use AddPermission to permit the use of <code>uriString</code> in the target class. The way that <code>uriString</code> can be used by the target class is specified by <code>access</code>. Specify <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> as the access parameter to add the URI specified by the <code>uriString</code> parameter to the list of URI accept strings, or specify <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> as the access parameter to add the URI to the list of URI connect strings.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Calling AddPermission on <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a><a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> will have no effect, because permission is granted to all URIs.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A candidate URI string is checked against the list of relevant regular expressions (<a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a> or <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_ConnectList_\" data-linktype=\"relative-path\">ConnectList</a>) in two ways. First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and checked against the appropriate list.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to add access rights to particular URL strings.  </p>\n<pre><code class=\"lang-cs\" name=\"WebPermission_Intersect#2\">\n    // Allow access to the first set of resources.\n    myWebPermission1.AddPermission(NetworkAccess.Connect,&quot;http://www.contoso.com/default.htm&quot;);\n    myWebPermission1.AddPermission(NetworkAccess.Connect,&quot;http://www.adventure-works.com/default.htm&quot;);\n  \n    // Check whether if the callers higher in the call stack have been granted \n    // access permissions.\n    myWebPermission1.Demand();\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_Intersect#2\">      // Allow access to the first set of resources.\n      myWebPermission1-&gt;AddPermission( NetworkAccess::Connect, &quot;http://www.contoso.com/default.htm&quot; );\n      myWebPermission1-&gt;AddPermission( NetworkAccess::Connect, &quot;http://www.adventure-works.com/default.htm&quot; );\n      \n      // Check whether if the callers higher in the call stack have been granted\n      // access permissions.\n      myWebPermission1-&gt;Demand();\n</code></pre><pre><code class=\"lang-vb\" name=\"WebPermission_Intersect#2\">      &#39; Allow access to the first set of resources.\n      myWebPermission1.AddPermission(NetworkAccess.Connect, &quot;http://www.contoso.com/default.htm&quot;)\n      myWebPermission1.AddPermission(NetworkAccess.Connect, &quot;http://www.adventure-works.com/default.htm&quot;)\n      \n      &#39; Check whether if the callers higher in the call stack have been granted \n      &#39; access permissions.\n      myWebPermission1.Demand()\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_AddPermission_System_Net_NetworkAccess_System_Text_RegularExpressions_Regex_\">\r\n    \r\n            <a id=\"System_Net_WebPermission_AddPermission_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddPermission(NetworkAccess,Regex)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified URI with the specified access rights to the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>access</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A NetworkAccess that specifies the access rights that are granted to the URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriRegex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.regularexpressions.regex\" data-linktype=\"relative-path\">Regex</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A regular expression that describes the set of URIs to which access rights are granted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>uriRegex</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you have specified <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a> as the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>, use <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a> to allow the use of <code>uriRegex</code> in the target class. Specify <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> as the <code>access</code> parameter to add the URI specified by the <code>uriRegex</code> parameter to the list of URI accept strings, or specify <a class=\"xref\" href=\"system.net.networkaccess\" data-linktype=\"relative-path\">NetworkAccess</a> as the access parameter to add the URI to the list of URI connect strings.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Calling <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a> on an <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a><a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> instance will have no effect as permission is granted to all URIs.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> It is recommended that you create <code>uriRegex</code> using the <a class=\"xref\" href=\"system.text.regularexpressions.regexoptions\" data-linktype=\"relative-path\">System.Text.RegularExpressions.RegexOptions</a>, <a class=\"xref\" href=\"system.text.regularexpressions.regexoptions\" data-linktype=\"relative-path\">System.Text.RegularExpressions.RegexOptions</a>, and <a class=\"xref\" href=\"system.text.regularexpressions.regexoptions\" data-linktype=\"relative-path\">System.Text.RegularExpressions.RegexOptions</a> flags.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A candidate URI string is checked against the list of relevant regular expressions (<a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AcceptList_\" data-linktype=\"relative-path\">AcceptList</a> or <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_ConnectList_\" data-linktype=\"relative-path\">ConnectList</a>) in two ways. First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and checked against the appropriate list.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a> to give access rights for the specified URI.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_IsSubset#1\">      &#39; Create a WebPermission.\n      Dim myWebPermission1 As New WebPermission()\n      \n      &#39; Allow Connect access to the specified URLs.\n      myWebPermission1.AddPermission(NetworkAccess.Connect, New Regex(&quot;http://www\\.contoso\\.com/.*&quot;, RegexOptions.Compiled Or RegexOptions.IgnoreCase Or RegexOptions.Singleline))\n      \n      myWebPermission1.Demand()\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_IsSubset#1\">    // Create a WebPermission.\n    WebPermission myWebPermission1 = new WebPermission();\n\n    // Allow Connect access to the specified URLs.\n    myWebPermission1.AddPermission(NetworkAccess.Connect,new Regex(&quot;http://www\\\\.contoso\\\\.com/.*&quot;, \n      RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.Singleline));\n     \n    myWebPermission1.Demand();\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_IsSubset#1\">      // Create a WebPermission.\n      WebPermission^ myWebPermission1 = gcnew WebPermission;\n\n      // Allow Connect access to the specified URLs.\n      myWebPermission1-&gt;AddPermission( NetworkAccess::Connect, gcnew Regex( &quot;http://www\\\\.contoso\\\\.com/.*&quot;,\n         (RegexOptions)(RegexOptions::Compiled | RegexOptions::IgnoreCase | RegexOptions::Singleline) ) );\n\n      myWebPermission1-&gt;Demand();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_Copy\">\r\n    \r\n            <a id=\"System_Net_WebPermission_Copy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Copy()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Copy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new instance of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class that has the same values as the original.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> returned by this method represents the same access to resources as the original <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>. This method overrides <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Copy_\" data-linktype=\"relative-path\">Copy</a> and is implemented to support the <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a second instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> using Copy. This second instance is identical to the first.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_Copy#2\">      &#39; Create another WebPermission instance that is the copy of the above WebPermission instance.\n      Dim myWebPermission2 As WebPermission = CType(myWebPermission1.Copy(), WebPermission)\n      \n      &#39; Check whether all callers higher in the call stack have been granted the permissionor not.\n      myWebPermission2.Demand()\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_Copy#2\">      // Create another WebPermission instance that is the copy of the above WebPermission instance.\n      WebPermission^ myWebPermission2 = (WebPermission^)(myWebPermission1-&gt;Copy());\n      \n      // Check whether all callers higher in the call stack have been granted the permissionor not.\n      myWebPermission2-&gt;Demand();\n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_Copy#2\">    // Create another WebPermission instance that is the copy of the above WebPermission instance.\n     WebPermission myWebPermission2 = (WebPermission) myWebPermission1.Copy();\n\n    // Check whether all callers higher in the call stack have been granted the permissionor not.\n    myWebPermission2.Demand();\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_FromXml_System_Security_SecurityElement_\">\r\n    \r\n            <a id=\"System_Net_WebPermission_FromXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromXml(SecurityElement)</div>        \r\n          </div>\r\n    \r\n            <p>Reconstructs a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> from an XML encoding.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void FromXml (System.Security.SecurityElement securityElement);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>securityElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XML encoding from which to reconstruct the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>securityElement</code> parameter is <code>null.</code></p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>securityElement</code> is not a permission element for this type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FromXml method reconstructs a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> from an XML encoding that is defined by the <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> class.  </p>\n<p> Use the <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_ToXml_\" data-linktype=\"relative-path\">ToXml</a> method to XML-encode the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>, including state information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">System.Security.SecurityElement</a>, populates its attributes, and uses FromXml to transfer this information to an instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_FromToXml#1\">      &#39; Create  a WebPermission without permission on the protected resource.\n      Dim myWebPermission1 As New WebPermission(PermissionState.None)\n      \n      &#39; Create a SecurityElement by calling the ToXml method on the WebPermission \n      &#39; instance and display its attributes (which hold the XML encoding of \n      &#39; the WebPermission).\n      Console.WriteLine(&quot;Attributes and Values of the WebPermission are :&quot;)\n      myWebPermission1.ToXml().ToString()\n      \n      &#39; Create another WebPermission with no permission on the protected resource.\n      Dim myWebPermission2 As New WebPermission(PermissionState.None)\n      \n      &#39;Converts the new WebPermission from XML using myWebPermission1.\n      myWebPermission2.FromXml(myWebPermission1.ToXml())\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_FromToXml#1\">      // Create  a WebPermission without permission on the protected resource\n      WebPermission^ myWebPermission1 = gcnew WebPermission( PermissionState::None );\n      \n      // Create a SecurityElement by calling the ToXml method on the WebPermission\n      // instance and display its attributes (which hold the XML encoding of\n      // the WebPermission).\n      Console::WriteLine( &quot;Attributes and Values of the WebPermission are:&quot; );\n      myWebPermission1-&gt;ToXml();\n      \n      // Create another WebPermission with no permission on the protected resource\n      WebPermission^ myWebPermission2 = gcnew WebPermission( PermissionState::None );\n      \n      //Converts the new WebPermission from XML using myWebPermission1.\n      myWebPermission2-&gt;FromXml( myWebPermission1-&gt;ToXml() );\n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_FromToXml#1\">\n    // Create  a WebPermission without permission on the protected resource.\n    WebPermission myWebPermission1 = new WebPermission(PermissionState.None);\n\n    // Create a SecurityElement by calling the ToXml method on the WebPermission \n    // instance and display its attributes (which hold the XML encoding of \n    // the WebPermission).\n    Console.WriteLine(&quot;Attributes and Values of the WebPermission are :&quot;);\n    myWebPermission1.ToXml().ToString();\n\n    // Create another WebPermission with no permission on the protected resource.\n    WebPermission myWebPermission2 = new WebPermission(PermissionState.None);\n\n    //Converts the new WebPermission from XML using myWebPermission1.\n    myWebPermission2.FromXml(myWebPermission1.ToXml());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_Intersect_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Net_WebPermission_Intersect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Intersect(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the logical intersection of two <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Intersect (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> to compare with the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> that represents the intersection of the current instance and the <code>target</code> parameter. If the intersection is empty, the method returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>target</code> is not <code>null</code> or of type <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Intersect returns a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> that contains those permissions that are common in both <code>target</code> and the current instance.  </p>\n<p> This method overrides <a class=\"xref\" href=\"system.security.codeaccesspermission#System_Security_CodeAccessPermission_Intersect_\" data-linktype=\"relative-path\">Intersect</a> and is implemented to support the <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to create an instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> using the logical intersection of two existing <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> instances.  </p>\n<pre><code class=\"lang-cs\" name=\"WebPermission_Intersect#3\">\n    // Create a third WebPermission instance via the logical intersection of the previous\n    // two WebPermission instances.\n    WebPermission myWebPermission3 =(WebPermission) myWebPermission1.Intersect(myWebPermission2);\n\n    Console.WriteLine(&quot;<br>Attributes and Values of  the WebPermission instance after the Intersect are:<br>&quot;);   \n    Console.WriteLine(myWebPermission3.ToXml().ToString());\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_Intersect#3\">      // Create a third WebPermission instance via the logical intersection of the previous\n      // two WebPermission instances.\n      WebPermission^ myWebPermission3 = (WebPermission^)(myWebPermission1-&gt;Intersect( myWebPermission2 ));\n\n      Console::WriteLine( &quot;<br>Attributes and Values of  the WebPermission instance after the Intersect are:<br>&quot; );\n      Console::WriteLine( myWebPermission3-&gt;ToXml() );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebPermission_Intersect#3\">      &#39; Create a third WebPermission instance via the logical intersection of the previous\n      &#39; two WebPermission instances.\n      Dim myWebPermission3 As WebPermission = CType(myWebPermission1.Intersect(myWebPermission2), WebPermission)\n      \n      Console.WriteLine(ControlChars.Cr + &quot;Attributes and Values of  the WebPermission instance after the Intersect are:&quot; + ControlChars.Cr)\n      Console.WriteLine(myWebPermission3.ToXml().ToString())\n   End Sub &#39;CreateIntersect\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_IsSubsetOf_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Net_WebPermission_IsSubsetOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSubsetOf(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> is a subset of the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsSubsetOf (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> to compare to the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current instance is a subset of the <code>target</code> parameter; otherwise, <code>false</code>. If the target is <code>null</code>, the method returns <code>true</code> for an empty current permission that is not unrestricted and <code>false</code> otherwise.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The target parameter is not an instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The current instance contains a Regex-encoded right and there is not exactly the same right found in the target instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> specifies a set of associated resources that is wholly contained by the <code>target</code> parameter, then the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> is a subset of <code>target</code>. This method overrides IsSubsetOf and is implemented to support the <a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a> interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses IsSubsetOf to determine whether the access rights found in one instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> are found in another instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WebPermission_IsSubset2#1\">\n    // Create the target permission.\n    WebPermission targetPermission = new WebPermission();\n    targetPermission.AddPermission(NetworkAccess.Connect, new Regex(&quot;www\\\\.contoso\\\\.com/Public/.*&quot;));\n\n    // Create the permission for a URI matching target.\n    WebPermission connectPermission = new WebPermission();\n    connectPermission.AddPermission(NetworkAccess.Connect, &quot;www.contoso.com/Public/default.htm&quot;);\n\n    //The following statement prints true.\n    Console.WriteLine(&quot;Is the second URI a subset of the first one?: &quot; + connectPermission.IsSubsetOf(targetPermission));\n</code></pre><pre><code class=\"lang-vb\" name=\"WebPermission_IsSubset2#1\">      &#39; Create the target permission.\n      Dim targetPermission As New WebPermission()\n      targetPermission.AddPermission(NetworkAccess.Connect, New Regex(&quot;www\\.contoso\\.com/Public/.*&quot;))\n      \n      &#39; Create the permission for a URI matching target.\n      Dim connectPermission As New WebPermission()\n      connectPermission.AddPermission(NetworkAccess.Connect, &quot;www.contoso.com/Public/default.htm&quot;)\n      \n      &#39;The following statement prints true.\n      Console.WriteLine((&quot;Is the second URI a subset of the first one?: &quot; &amp; connectPermission.IsSubsetOf(targetPermission)))\n   End Sub &#39;myIsSubsetExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_IsSubset2#1\">   // Create the target permission.\n   WebPermission^ targetPermission = gcnew WebPermission;\n   targetPermission-&gt;AddPermission( NetworkAccess::Connect, gcnew Regex( &quot;www\\\\.contoso\\\\.com/Public/.*&quot; ) );\n   \n   // Create the permission for a URI matching target.\n   WebPermission^ connectPermission = gcnew WebPermission;\n   connectPermission-&gt;AddPermission( NetworkAccess::Connect, &quot;www.contoso.com/Public/default.htm&quot; );\n   \n   //The following statement prints true.\n   Console::WriteLine( &quot;Is the second URI a subset of the first one?: {0}&quot;, connectPermission-&gt;IsSubsetOf( targetPermission ) );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_IsUnrestricted\">\r\n    \r\n            <a id=\"System_Net_WebPermission_IsUnrestricted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUnrestricted()</div>        \r\n          </div>\r\n    \r\n            <p>Checks the overall permission state of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsUnrestricted ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> was created with the <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a><a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> is <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>, then the target class can use all URIs. Otherwise, specific permission must be given for any URI you want to use with the target class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Use <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_AddPermission_\" data-linktype=\"relative-path\">AddPermission</a> to add a URI and specify its permissions.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_ToXml\">\r\n    \r\n            <a id=\"System_Net_WebPermission_ToXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToXml()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an XML encoding of a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> and its current state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.SecurityElement ToXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a> that contains an XML-encoded representation of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>, including state information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.net.webpermission#System_Net_WebPermission_FromXml_\" data-linktype=\"relative-path\">FromXml</a> method to restore the state information from a <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use ToXml to create a <a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">System.Security.SecurityElement</a> and print its attributes to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"WebPermission_FromToXml#1\">      &#39; Create  a WebPermission without permission on the protected resource.\n      Dim myWebPermission1 As New WebPermission(PermissionState.None)\n      \n      &#39; Create a SecurityElement by calling the ToXml method on the WebPermission \n      &#39; instance and display its attributes (which hold the XML encoding of \n      &#39; the WebPermission).\n      Console.WriteLine(&quot;Attributes and Values of the WebPermission are :&quot;)\n      myWebPermission1.ToXml().ToString()\n      \n      &#39; Create another WebPermission with no permission on the protected resource.\n      Dim myWebPermission2 As New WebPermission(PermissionState.None)\n      \n      &#39;Converts the new WebPermission from XML using myWebPermission1.\n      myWebPermission2.FromXml(myWebPermission1.ToXml())\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"WebPermission_FromToXml#1\">      // Create  a WebPermission without permission on the protected resource\n      WebPermission^ myWebPermission1 = gcnew WebPermission( PermissionState::None );\n      \n      // Create a SecurityElement by calling the ToXml method on the WebPermission\n      // instance and display its attributes (which hold the XML encoding of\n      // the WebPermission).\n      Console::WriteLine( &quot;Attributes and Values of the WebPermission are:&quot; );\n      myWebPermission1-&gt;ToXml();\n      \n      // Create another WebPermission with no permission on the protected resource\n      WebPermission^ myWebPermission2 = gcnew WebPermission( PermissionState::None );\n      \n      //Converts the new WebPermission from XML using myWebPermission1.\n      myWebPermission2-&gt;FromXml( myWebPermission1-&gt;ToXml() );\n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_FromToXml#1\">\n    // Create  a WebPermission without permission on the protected resource.\n    WebPermission myWebPermission1 = new WebPermission(PermissionState.None);\n\n    // Create a SecurityElement by calling the ToXml method on the WebPermission \n    // instance and display its attributes (which hold the XML encoding of \n    // the WebPermission).\n    Console.WriteLine(&quot;Attributes and Values of the WebPermission are :&quot;);\n    myWebPermission1.ToXml().ToString();\n\n    // Create another WebPermission with no permission on the protected resource.\n    WebPermission myWebPermission2 = new WebPermission(PermissionState.None);\n\n    //Converts the new WebPermission from XML using myWebPermission1.\n    myWebPermission2.FromXml(myWebPermission1.ToXml());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_WebPermission_Union_System_Security_IPermission_\">\r\n    \r\n            <a id=\"System_Net_WebPermission_Union_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Union(IPermission)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the logical union between two instances of the <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.IPermission Union (System.Security.IPermission target);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> to combine with the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.ipermission\" data-linktype=\"relative-path\">IPermission</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> that represents the union of the current instance and the <code>target</code> parameter. If either <code>WebPermission</code> is <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>, the method returns a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> that is <a class=\"xref\" href=\"system.security.permissions.permissionstate\" data-linktype=\"relative-path\">PermissionState</a>. If the target is <code>null</code>, the method returns a copy of the current <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>target is not <code>null</code> or of type <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Union returns a <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> that contains all the permissions in both <code>target</code> and the current instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example takes the logical union of two <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> instances to create a third instance of <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"WebPermission_Union#2\">      // Create another WebPermission that is the Union of previous two WebPermission\n      // instances.\n      WebPermission^ myWebPermission3 = (WebPermission^)(myWebPermission1-&gt;Union( myWebPermission2 ));\n      Console::WriteLine( &quot;<br>Attributes and values of the WebPermission after the Union are : &quot; );\n      // Display the attributes, values and children.\n      Console::WriteLine( myWebPermission3-&gt;ToXml() );\n</code></pre><pre><code class=\"lang-vb\" name=\"WebPermission_Union#2\">      &#39; Create another WebPermission that is the Union of previous two WebPermission \n      &#39; instances.\n      Dim myWebPermission3 As WebPermission = CType(myWebPermission1.Union(myWebPermission2), WebPermission)\n      Console.WriteLine(ControlChars.Cr + &quot;Attributes and values of the WebPermission after the Union are : &quot;)\n      &#39; Display the attributes,values and children.\n      Console.WriteLine(myWebPermission3.ToXml().ToString())\n   End Sub &#39;CreateUnion\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"WebPermission_Union#2\">\n    // Create another WebPermission that is the Union of previous two WebPermission \n    // instances.\n    WebPermission myWebPermission3 =(WebPermission) myWebPermission1.Union(myWebPermission2);\n    Console.WriteLine(&quot;<br>Attributes and values of the WebPermission after the Union are : &quot;);\n    // Display the attributes,values and children.\n    Console.WriteLine(myWebPermission3.ToXml().ToString());\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.WebPermission.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebPermission.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.AcceptList\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.AddPermission\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.ConnectList\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.Copy\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.FromXml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.Intersect\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.IsSubsetOf\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.IsUnrestricted\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.ToXml\">\r\n<meta name=\"APIName\" content=\"System.Net.WebPermission.Union\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"8af73ca2-355c-9815-8d39-7ad88045cf1a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\WebPermission.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls rights to access HTTP Internet resources.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.WebPermission\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.WebPermission.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.WebPermission.yml","open_to_public_contributors":true,"api_name":["System.Net.WebPermission","System.Net.WebPermission..ctor","System.Net.WebPermission.AcceptList","System.Net.WebPermission.AddPermission","System.Net.WebPermission.ConnectList","System.Net.WebPermission.Copy","System.Net.WebPermission.FromXml","System.Net.WebPermission.Intersect","System.Net.WebPermission.IsSubsetOf","System.Net.WebPermission.IsUnrestricted","System.Net.WebPermission.ToXml","System.Net.WebPermission.Union"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.WebPermission","System::Net::WebPermission","System.Net.WebPermission.#ctor","System::Net::WebPermission::#ctor","System.Net.WebPermission.AcceptList","System::Net::WebPermission::AcceptList","System.Net.WebPermission.AddPermission","System::Net::WebPermission::AddPermission","System.Net.WebPermission.ConnectList","System::Net::WebPermission::ConnectList","System.Net.WebPermission.Copy","System::Net::WebPermission::Copy","System.Net.WebPermission.FromXml","System::Net::WebPermission::FromXml","System.Net.WebPermission.Intersect","System::Net::WebPermission::Intersect","System.Net.WebPermission.IsSubsetOf","System::Net::WebPermission::IsSubsetOf","System.Net.WebPermission.IsUnrestricted","System::Net::WebPermission::IsUnrestricted","System.Net.WebPermission.ToXml","System::Net::WebPermission::ToXml","System.Net.WebPermission.Union","System::Net::WebPermission::Union"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"8af73ca2-355c-9815-8d39-7ad88045cf1a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\WebPermission.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/WebPermission.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WebPermission class | Microsoft Docs","_op_ogTitle":"WebPermission class","description":"Controls rights to access HTTP Internet resources.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.WebPermission","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webpermission","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.webpermission","fileRelativePath":"System.Net.WebPermission.html"},"themesRelativePathToOutputRoot":"_themes/"}