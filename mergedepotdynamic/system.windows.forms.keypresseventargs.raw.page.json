{"content":"    \r\n    <h1 id=\"System_Windows_Forms_KeyPressEventArgs\">\r\n      <span class=\"lang-csharp\">KeyPressEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class KeyPressEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">KeyPressEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A KeyPressEventArgs specifies the character that is composed when the user presses a key. For example, when the user presses SHIFT + K, the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_KeyChar_\" data-linktype=\"relative-path\">KeyChar</a> property returns an uppercase K.  </p>\n<p> A <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event occurs when the user presses a key. Two events that are closely related to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event are <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event precedes each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event when the user presses a key, and a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event occurs when the user releases a key. When the user holds down a key, duplicate <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> events occur each time the character repeats. One <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event is generated upon release.  </p>\n<p> With each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event, a KeyPressEventArgs is passed. A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> is passed with each <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event. A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> specifies whether any modifier keys (CTRL, SHIFT, or ALT) were pressed along with another key. (This modifier information can also be obtained through the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys_\" data-linktype=\"relative-path\">ModifierKeys</a> property of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class.)  </p>\n<p> Set <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> to <code>true</code> to cancel the <code>KeyPress</code> event. This keeps the control from processing the key press.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some controls will process certain key strokes on <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>. For example, <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> processes the Enter key before <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> is called. In such cases, you cannot cancel the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event, and must cancel the key stroke from <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> instead.  </p>\n</div>\n<p> For information about the event model, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_KeyPressEventArgs__ctor_System_Char_\" data-linktype=\"self-bookmark\">KeyPressEventArgs(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_KeyPressEventArgs_Handled\" data-linktype=\"self-bookmark\">Handled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event was handled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_KeyPressEventArgs_KeyChar\" data-linktype=\"self-bookmark\">KeyChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the character corresponding to the key pressed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_KeyPressEventArgs__ctor_System_Char_\">\r\n    \r\n            <a id=\"System_Windows_Forms_KeyPressEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyPressEventArgs(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KeyPressEventArgs (char keyChar);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ASCII character corresponding to the key the user pressed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys_\" data-linktype=\"relative-path\">ModifierKeys</a> property to get the current state of the modifier keys.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays a message box that shows the current state of the SHIFT key.</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_KeyPressEventArgs_Handled\">\r\n    \r\n            <a id=\"System_Windows_Forms_KeyPressEventArgs_Handled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Handled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event was handled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Handled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event is handled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the event is not handled, it will be sent to the operating system for default processing. Set Handled to <code>true</code> to cancel the <code>KeyPress</code> event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. The <code>keypressed</code> method uses the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_KeyChar_\" data-linktype=\"relative-path\">KeyChar</a> property to check whether the ENTER key is pressed. If the ENTER key is pressed, the Handled property is set to <code>true</code>, which indicates the event is handled.  </p>\n<pre><code class=\"lang-vb\" name=\"KeyPressEventArgs#1\">Imports System\nImports System.Windows.Forms\n\nPublic Class Form1\n    Inherits Form\n\n    Public Sub New()\n        &#39; Create a TextBox control.\n        Dim tb As New TextBox()\n        Me.Controls.Add(tb)\n        AddHandler tb.KeyPress, AddressOf keypressed\n    End Sub &#39;New\n\n    Private Sub keypressed(ByVal o As [Object], ByVal e As KeyPressEventArgs)\n        &#39; The keypressed method uses the KeyChar property to check \n        &#39; whether the ENTER key is pressed. \n\n        &#39; If the ENTER key is pressed, the Handled property is set to true, \n        &#39; to indicate the event is handled.\n\n        If e.KeyChar = Microsoft.VisualBasic.ChrW(Keys.Return) Then\n            e.Handled = True\n        End If\n    End Sub &#39;keypressed\n\n    Public Shared Sub Main()\n        Application.Run(New Form1())\n    End Sub &#39;Main\nEnd Class &#39;Form1\n</code></pre><pre><code class=\"lang-cs\" name=\"KeyPressEventArgs#1\">\nusing System;\nusing System.Windows.Forms;\n\npublic class Form1: Form\n{\n    public Form1()\n    {\n        // Create a TextBox control.\n        TextBox tb = new TextBox();\n        this.Controls.Add(tb);\n        tb.KeyPress += new KeyPressEventHandler(keypressed);\n    }\n\n    private void keypressed(Object o, KeyPressEventArgs e)\n    {\n        // The keypressed method uses the KeyChar property to check \n        // whether the ENTER key is pressed. \n\n        // If the ENTER key is pressed, the Handled property is set to true, \n        // to indicate the event is handled.\n        if (e.KeyChar == (char)Keys.Return)\n        {\n            e.Handled = true;\n        }\n    }\n\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"KeyPressEventArgs#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\n\npublic ref class Form1: public Form\n{\npublic:\n   Form1()\n   {\n      // Create a TextBox control.\n      TextBox^ tb = gcnew TextBox;\n      this-&gt;Controls-&gt;Add( tb );\n      tb-&gt;KeyPress += gcnew KeyPressEventHandler( this, &amp;Form1::keypressed );\n   }\n\nprivate:\n   void keypressed( Object^ /*o*/, KeyPressEventArgs^ e )\n   {\n      // The keypressed method uses the KeyChar property to check \n      // whether the ENTER key is pressed. \n      // If the ENTER key is pressed, the Handled property is set to true, \n      // to indicate the event is handled.\n      if ( e-&gt;KeyChar == (char)13 )\n            e-&gt;Handled = true;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_KeyPressEventArgs_KeyChar\">\r\n    \r\n            <a id=\"System_Windows_Forms_KeyPressEventArgs_KeyChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyChar</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the character corresponding to the key pressed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public char KeyChar { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The ASCII character that is composed. For example, if the user presses SHIFT + K, this property returns an uppercase K.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the KeyChar property to sample keystrokes at run time and to modify keystrokes under special run-time circumstances. For example, you can use KeyChar to disable non-numeric keypresses when the user enters a ZIP code, change all alphabetical keypresses to uppercase in a data entry field, or monitor the keyboard or other key input device for specific key combinations.  </p>\n<p> You can get or set the following keys:  </p>\n<ul>\n<li><p>a-z, A-Z.  </p>\n</li>\n<li><p>CTRL.  </p>\n</li>\n<li><p>Punctuation marks.  </p>\n</li>\n<li><p>Number keys, both across the top of the keyboard and on the numeric keypad.  </p>\n</li>\n<li><p>ENTER.  </p>\n<p>You cannot get or set the following keys:  </p>\n</li>\n<li><p>The TAB key.  </p>\n</li>\n<li><p>INSERT and DELETE.  </p>\n</li>\n<li><p>HOME.  </p>\n</li>\n<li><p>END.  </p>\n</li>\n<li><p>PAGE UP and PAGE DOWN.  </p>\n</li>\n<li><p>F1-F2.  </p>\n</li>\n<li><p>ALT.  </p>\n</li>\n<li><p>Arrow keys.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> For information about how to detect any of the non-character keys mentioned above, see the <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> class.  </p>\n</div>\n<p>-</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. The <code>keypressed</code> method uses the KeyChar property to check whether the ENTER key pressed. If the ENTER key is pressed, the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> property is set to <code>true</code>, which indicates the event is handled.  </p>\n<pre><code class=\"lang-vb\" name=\"KeyPressEventArgs#1\">Imports System\nImports System.Windows.Forms\n\nPublic Class Form1\n    Inherits Form\n\n    Public Sub New()\n        &#39; Create a TextBox control.\n        Dim tb As New TextBox()\n        Me.Controls.Add(tb)\n        AddHandler tb.KeyPress, AddressOf keypressed\n    End Sub &#39;New\n\n    Private Sub keypressed(ByVal o As [Object], ByVal e As KeyPressEventArgs)\n        &#39; The keypressed method uses the KeyChar property to check \n        &#39; whether the ENTER key is pressed. \n\n        &#39; If the ENTER key is pressed, the Handled property is set to true, \n        &#39; to indicate the event is handled.\n\n        If e.KeyChar = Microsoft.VisualBasic.ChrW(Keys.Return) Then\n            e.Handled = True\n        End If\n    End Sub &#39;keypressed\n\n    Public Shared Sub Main()\n        Application.Run(New Form1())\n    End Sub &#39;Main\nEnd Class &#39;Form1\n</code></pre><pre><code class=\"lang-cs\" name=\"KeyPressEventArgs#1\">\nusing System;\nusing System.Windows.Forms;\n\npublic class Form1: Form\n{\n    public Form1()\n    {\n        // Create a TextBox control.\n        TextBox tb = new TextBox();\n        this.Controls.Add(tb);\n        tb.KeyPress += new KeyPressEventHandler(keypressed);\n    }\n\n    private void keypressed(Object o, KeyPressEventArgs e)\n    {\n        // The keypressed method uses the KeyChar property to check \n        // whether the ENTER key is pressed. \n\n        // If the ENTER key is pressed, the Handled property is set to true, \n        // to indicate the event is handled.\n        if (e.KeyChar == (char)Keys.Return)\n        {\n            e.Handled = true;\n        }\n    }\n\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"KeyPressEventArgs#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\n\npublic ref class Form1: public Form\n{\npublic:\n   Form1()\n   {\n      // Create a TextBox control.\n      TextBox^ tb = gcnew TextBox;\n      this-&gt;Controls-&gt;Add( tb );\n      tb-&gt;KeyPress += gcnew KeyPressEventHandler( this, &amp;Form1::keypressed );\n   }\n\nprivate:\n   void keypressed( Object^ /*o*/, KeyPressEventArgs^ e )\n   {\n      // The keypressed method uses the KeyChar property to check \n      // whether the ENTER key is pressed. \n      // If the ENTER key is pressed, the Handled property is set to true, \n      // to indicate the event is handled.\n      if ( e-&gt;KeyChar == (char)13 )\n            e-&gt;Handled = true;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.KeyPressEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.KeyPressEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs.Handled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.KeyPressEventArgs.KeyChar\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a630ced9-000a-915c-eb8e-198674ae0b03\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.KeyPressEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.KeyPressEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.KeyPressEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.KeyPressEventArgs","System.Windows.Forms.KeyPressEventArgs..ctor","System.Windows.Forms.KeyPressEventArgs.Handled","System.Windows.Forms.KeyPressEventArgs.KeyChar"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.KeyPressEventArgs","System::Windows::Forms::KeyPressEventArgs","System.Windows.Forms.KeyPressEventArgs.#ctor","System::Windows::Forms::KeyPressEventArgs::#ctor","System.Windows.Forms.KeyPressEventArgs.Handled","System::Windows::Forms::KeyPressEventArgs::Handled","System.Windows.Forms.KeyPressEventArgs.KeyChar","System::Windows::Forms::KeyPressEventArgs::KeyChar"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a630ced9-000a-915c-eb8e-198674ae0b03","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/KeyPressEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KeyPressEventArgs class | Microsoft Docs","_op_ogTitle":"KeyPressEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.KeyPressEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.keypresseventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.keypresseventargs","fileRelativePath":"System.Windows.Forms.KeyPressEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}