{"content":"    \r\n    <h1 id=\"System_Diagnostics_Tracing_EventSource\">\r\n      <span class=\"lang-csharp\">EventSource</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the ability to create events for event tracing for Windows (ETW).</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class EventSource : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EventSource</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class is intended to be inherited by a user class that provides specific events to be used for ETW. The <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> methods are called to log the events.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the â€œUsing an Object that Implements IDisposableâ€ section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.  </p>\n</div>\n<p> The basic functionality of EventSource is sufficient for most applications.  If you want more control over the ETW manifest that is created, you can apply the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute\" data-linktype=\"relative-path\">EventAttribute</a> attribute to the methods. For advanced event source applications, it is possible to intercept the commands being sent to the derived event source and change the filtering, or to cause actions (such as dumping a data structure) to be performed by the inheritor.  An event source can be activated with Windows ETW controllers, such as the Logman tool, immediately.  It is also possible to programmatically control and intercept the data dispatcher.  The <a class=\"xref\" href=\"system.diagnostics.tracing.eventlistener\" data-linktype=\"relative-path\">EventListener</a> class provides additional functionality.  </p>\n<p> Starting with .NET Framework 4.6, EventSource provides channel support and some of the event source validation rules have been relaxed. This means:  </p>\n<ul>\n<li><p>EventSource types may now implement interfaces. This enables the use of event source types in advanced logging systems that use interfaces to define a common logging target.  </p>\n</li>\n<li><p>The concept of a utility event source type has been introduced. This feature enables sharing code across multiple event source types in a project to enable scenarios such as optimized <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> overloads.  </p>\n<p>For a version of the EventSource class that provides features such as channel support you are targeting .NET Framework 4.5.1 or earlier, see <a href=\"https://www.nuget.org/packages/Microsoft.Diagnostics.Tracing.EventSource\" data-linktype=\"external\">Microsoft EventSource Library 1.0.16</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor\" data-linktype=\"self-bookmark\">EventSource()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor_System_Boolean_\" data-linktype=\"self-bookmark\">EventSource(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor_System_Diagnostics_Tracing_EventSourceSettings_\" data-linktype=\"self-bookmark\">EventSource(EventSourceSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified configuration settings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor_System_String_\" data-linktype=\"self-bookmark\">EventSource(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor_System_Diagnostics_Tracing_EventSourceSettings_System_String___\" data-linktype=\"self-bookmark\">EventSource(EventSourceSettings,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> to be used with non-contract events that contains the specified settings and traits.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor_System_String_System_Diagnostics_Tracing_EventSourceSettings_\" data-linktype=\"self-bookmark\">EventSource(String,EventSourceSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified name and settings.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource__ctor_System_String_System_Diagnostics_Tracing_EventSourceSettings_System_String___\" data-linktype=\"self-bookmark\">EventSource(String,EventSourceSettings,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified configuration settings.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_ConstructionException\" data-linktype=\"self-bookmark\">ConstructionException</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Gets any exception that was thrown during the construction of the event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_CurrentThreadActivityId\" data-linktype=\"self-bookmark\">CurrentThreadActivityId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Gets the activity ID of the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Guid\" data-linktype=\"self-bookmark\">Guid</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The unique identifier for the event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The friendly name of the class that is derived from the event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Settings\" data-linktype=\"self-bookmark\">Settings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the settings applied to this event source.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_GenerateManifest_System_Type_System_String_\" data-linktype=\"self-bookmark\">GenerateManifest(Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string of the XML manifest that is associated with the current event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_GenerateManifest_System_Type_System_String_System_Diagnostics_Tracing_EventManifestOptions_\" data-linktype=\"self-bookmark\">GenerateManifest(Type,String,EventManifestOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string of the XML manifest that is associated with the current event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_GetGuid_System_Type_\" data-linktype=\"self-bookmark\">GetGuid(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the unique identifier for this implementation of the event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_GetName_System_Type_\" data-linktype=\"self-bookmark\">GetName(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the friendly name of the event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_GetSources\" data-linktype=\"self-bookmark\">GetSources()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a snapshot of all the event sources for the application domain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_GetTrait_System_String_\" data-linktype=\"self-bookmark\">GetTrait(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the trait value associated with the specified key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_IsEnabled\" data-linktype=\"self-bookmark\">IsEnabled()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current event source is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_IsEnabled_System_Diagnostics_Tracing_EventLevel_System_Diagnostics_Tracing_EventKeywords_\" data-linktype=\"self-bookmark\">IsEnabled(EventLevel,EventKeywords)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current event source that has the specified level and keyword is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_IsEnabled_System_Diagnostics_Tracing_EventLevel_System_Diagnostics_Tracing_EventKeywords_System_Diagnostics_Tracing_EventChannel_\" data-linktype=\"self-bookmark\">IsEnabled(EventLevel,EventKeywords,EventChannel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current event source is enabled for events with the specified level, keywords and channel.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_OnEventCommand_System_Diagnostics_Tracing_EventCommandEventArgs_\" data-linktype=\"self-bookmark\">OnEventCommand(EventCommandEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when the current event source is updated by the controller.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_SendCommand_System_Diagnostics_Tracing_EventSource_System_Diagnostics_Tracing_EventCommand_System_Collections_Generic_IDictionary_System_String_System_String__\" data-linktype=\"self-bookmark\">SendCommand(EventSource,EventCommand,IDictionary&lt;String,String&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends a command to a specified event source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_System_Guid_\" data-linktype=\"self-bookmark\">SetCurrentThreadActivityId(Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Sets the activity ID on the current thread.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_System_Guid_System_Guid__\" data-linktype=\"self-bookmark\">SetCurrentThreadActivityId(Guid,Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Sets the activity ID on the current thread, and returns the previous activity ID.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obtains a string representation of the current event source instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event without fields, but with the specified name and default options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Write_System_String_System_Diagnostics_Tracing_EventSourceOptions_\" data-linktype=\"self-bookmark\">Write(String,EventSourceOptions)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event without fields, but with the specified name and options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Write__1_System_String___0_\" data-linktype=\"self-bookmark\">Write&lt;T&gt;(String,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event with the specified name and data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Write__1_System_String_System_Diagnostics_Tracing_EventSourceOptions___0_\" data-linktype=\"self-bookmark\">Write&lt;T&gt;(String,EventSourceOptions,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event with the specified name, event data and options.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Write__1_System_String_System_Diagnostics_Tracing_EventSourceOptions____0__\" data-linktype=\"self-bookmark\">Write&lt;T&gt;(String,EventSourceOptions,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event with the specified name, options and event data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_Write__1_System_String_System_Diagnostics_Tracing_EventSourceOptions__System_Guid__System_Guid____0__\" data-linktype=\"self-bookmark\">Write&lt;T&gt;(String,EventSourceOptions,Guid,Guid,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event with the specified name, options, related activity and event data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_\" data-linktype=\"self-bookmark\">WriteEvent(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Byte___\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and byte array argument.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 32-bit integer argument.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 64-bit integer argument.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Object___\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and array of arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and string argument.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 32-bit integer arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_System_String_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int32,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 32-bit integer and string arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_Byte___\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int64,Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_Int64_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int64,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 64-bit arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_String_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int64,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_Int32_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_Int64_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,String,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and string arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 32-bit integer arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_Int64_System_Int64_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,Int64,Int64,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and 64-bit arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,String,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteEvent(Int32,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an event by using the provided event identifier and string arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEventCore_System_Int32_System_Int32_System_Diagnostics_Tracing_EventSource_EventData__\" data-linktype=\"self-bookmark\">WriteEventCore(Int32,Int32,EventSource+EventData*)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <span class=\"xref\">stem.Diagnostics.Tracing.EventSource.WriteEvent*</span> overload by using the provided event identifier and event data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityId_System_Int32_System_Guid_System_Object___\" data-linktype=\"self-bookmark\">WriteEventWithRelatedActivityId(Int32,Guid,Object[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Writes an event that indicates that the current activity is related to another activity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityIdCore_System_Int32_System_Guid__System_Int32_System_Diagnostics_Tracing_EventSource_EventData__\" data-linktype=\"self-bookmark\">WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Writes an event that indicates that the current activity is related to another activity.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_Tracing_EventSource_EventCommandExecuted\" data-linktype=\"self-bookmark\">EventCommandExecuted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a command comes from an event listener.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EventSource ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class and specifies whether to throw an exception when an error occurs in the underlying Windows code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EventSource (bool throwOnEventWriteErrors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>throwOnEventWriteErrors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to throw an exception when an error occurs in the underlying Windows code; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor_System_Diagnostics_Tracing_EventSourceSettings_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource(EventSourceSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified configuration settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourcesettings\" data-linktype=\"relative-path\">EventSourceSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specifying <code>settings</code> when the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format. In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EventSource (string eventSourceName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to apply to the event source. Must not be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventSourceName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor_System_Diagnostics_Tracing_EventSourceSettings_System_String___\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource(EventSourceSettings,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> to be used with non-contract events that contains the specified settings and traits.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EventSource (System.Diagnostics.Tracing.EventSourceSettings settings, string[] traits);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourcesettings\" data-linktype=\"relative-path\">EventSourceSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traits</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key-value pairs that specify traits for the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>traits</code> is not specified in key-value pairs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Traits provide additional information for an event and are interpreted by an event listener. Traits are specified as key-value pairs and if not specified in pairs, an exception will occur. You can retrieve a trait by passing the key to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_GetTrait_\" data-linktype=\"relative-path\">GetTrait</a>, method.  </p>\n<p> Specifying <code>settings</code> when the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format. In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor_System_String_System_Diagnostics_Tracing_EventSourceSettings_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource(String,EventSourceSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified name and settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to apply to the event source. Must not be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>config</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourcesettings\" data-linktype=\"relative-path\">EventSourceSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventSourceName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Specifying <code>settings</code> when the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format. In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource__ctor_System_String_System_Diagnostics_Tracing_EventSourceSettings_System_String___\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventSource(String,EventSourceSettings,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class with the specified configuration settings.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EventSource (string eventSourceName, System.Diagnostics.Tracing.EventSourceSettings config, string[] traits);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to apply to the event source. Must not be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>config</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourcesettings\" data-linktype=\"relative-path\">EventSourceSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify the configuration settings to apply to the event source.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>traits</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key-value pairs that specify traits for the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventSourceName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>traits</code> is not specified in key-value pairs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Traits provide additional information for an event and are interpreted by an event listener. Traits are specified as key-value pairs and if not specified in pairs, an exception will occur. You can retrieve a trait by passing the key to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_GetTrait_\" data-linktype=\"relative-path\">GetTrait</a>, method.  </p>\n<p> Specifying <code>config</code> when the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> is constructed enables you to  specify whether the event is written in a manifest-based or a self-describing format. In addition, you can specify that an exception should be raised when an error occurs during the event-writing process.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_ConstructionException\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_ConstructionException_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConstructionException</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Gets any exception that was thrown during the construction of the event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Exception ConstructionException { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The exception that was thrown during the construction of the event source, or <code>null</code> if no exception was thrown.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> constructors do not throw exceptions. Instead, any exception that is thrown is assigned to the ConstructionException property and logged by the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_CurrentThreadActivityId\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_CurrentThreadActivityId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentThreadActivityId</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Gets the activity ID of the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Guid CurrentThreadActivityId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>The activity ID of the current thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Guid\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Guid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Guid</div>        \r\n          </div>\r\n    \r\n            <p>The unique identifier for the event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Guid Guid { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A unique identifier for the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Name\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>The friendly name of the class that is derived from the event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The friendly name of the derived class.  The default is the simple name of the class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Settings\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Settings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Settings</div>        \r\n          </div>\r\n    \r\n            <p>Gets the settings applied to this event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.Tracing.EventSourceSettings Settings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourcesettings\" data-linktype=\"relative-path\">EventSourceSettings</a></div>\r\n                  </div>\r\n                  <p>The settings applied to this event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Dispose\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <code>Finalize</code> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <code>Finalize</code> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Finalize\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> object to attempt to free resources and perform other cleanup operations before the  object is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~EventSource ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_GenerateManifest_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_GenerateManifest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateManifest(Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string of the XML manifest that is associated with the current event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the event source.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyPathToIncludeInManifest</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the assembly file (.dll) to include in the <a href=\"http://msdn.microsoft.com/library/windows/desktop/aa384022(v=vs.85).aspx\" data-linktype=\"external\">provider</a> element of the manifest.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML data string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The information about the XML schema for the event manifest, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=228077\" data-linktype=\"external\">Event Manifest Schema</a> in the MSDN Library.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_GenerateManifest_System_Type_System_String_System_Diagnostics_Tracing_EventManifestOptions_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_GenerateManifest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GenerateManifest(Type,String,EventManifestOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string of the XML manifest that is associated with the current event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GenerateManifest (Type eventSourceType, string assemblyPathToIncludeInManifest, System.Diagnostics.Tracing.EventManifestOptions flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the event source.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyPathToIncludeInManifest</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The path to the assembly file (.dll) file to include in the <a href=\"http://msdn.microsoft.com/library/windows/desktop/aa384022(v=vs.85).aspx\" data-linktype=\"external\">provider</a> element of the manifest.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventmanifestoptions\" data-linktype=\"relative-path\">EventManifestOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the enumeration values that specify how the manifest is generated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The XML data string or <code>null</code> (see remarks).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>flags</code> specifies <code>OnlyIfNeededForRegistration</code> and the <code>eventSourceType</code> specified does not require explicit registration, GenerateManifest returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_GetGuid_System_Type_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_GetGuid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetGuid(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the unique identifier for this implementation of the event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Guid GetGuid (Type eventSourceType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A unique identifier for this event source type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_GetName_System_Type_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_GetName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetName(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the friendly name of the event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string GetName (Type eventSourceType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSourceType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The friendly name of the event source. The default is the simple name of the class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_GetSources\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_GetSources_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSources()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a snapshot of all the event sources for the application domain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.IEnumerable&lt;System.Diagnostics.Tracing.EventSource&gt; GetSources ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>&gt;</div>\r\n                  </div>\r\n                  <p>An enumeration of all the event sources in the application domain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_GetTrait_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_GetTrait_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetTrait(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the trait value associated with the specified key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetTrait (string key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the trait to get.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The trait value associated with the specified key. If the key is not found, returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Traits provide additional information for an event and are interpreted by an event listener. Traits are specified as key-value pairs when the event source is constructed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_IsEnabled\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_IsEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEnabled()</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current event source is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEnabled ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current event source is enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_IsEnabled_System_Diagnostics_Tracing_EventLevel_System_Diagnostics_Tracing_EventKeywords_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_IsEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEnabled(EventLevel,EventKeywords)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current event source that has the specified level and keyword is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>level</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventlevel\" data-linktype=\"relative-path\">EventLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The level of the event source.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keywords</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventkeywords\" data-linktype=\"relative-path\">EventKeywords</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The keyword of the event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event source is enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The result of this method is only an approximation of whether a particular event is active.  Use it to avoid expensive computation for logging when logging is disabled.   Event sources may have additional filtering that determines their activity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_IsEnabled_System_Diagnostics_Tracing_EventLevel_System_Diagnostics_Tracing_EventKeywords_System_Diagnostics_Tracing_EventChannel_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_IsEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEnabled(EventLevel,EventKeywords,EventChannel)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current event source is enabled for events with the specified level, keywords and channel.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEnabled (System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords keywords, System.Diagnostics.Tracing.EventChannel channel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>level</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventlevel\" data-linktype=\"relative-path\">EventLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event level to check. An event source will be considered enabled when its level is greater than or equal to <code>level</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keywords</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventkeywords\" data-linktype=\"relative-path\">EventKeywords</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event keywords to check.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>channel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventchannel\" data-linktype=\"relative-path\">EventChannel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event channel to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event source is enabled for the specified event level, keywords and channel; otherwise, <code>false</code>.  </p>\n<p> The result of this method is only an approximation of whether a particular event is active.  Use it to avoid expensive computation for logging when logging is disabled.   Event sources may have additional filtering that determines their activity..</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_OnEventCommand_System_Diagnostics_Tracing_EventCommandEventArgs_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_OnEventCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEventCommand(EventCommandEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Called when the current event source is updated by the controller.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnEventCommand (System.Diagnostics.Tracing.EventCommandEventArgs command);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventcommandeventargs\" data-linktype=\"relative-path\">EventCommandEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_SendCommand_System_Diagnostics_Tracing_EventSource_System_Diagnostics_Tracing_EventCommand_System_Collections_Generic_IDictionary_System_String_System_String__\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_SendCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendCommand(EventSource,EventCommand,IDictionary&lt;String,String&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Sends a command to a specified event source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SendCommand (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventCommand command, System.Collections.Generic.IDictionary&lt;string,string&gt; commandArguments);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event source to send the command to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>command</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventcommand\" data-linktype=\"relative-path\">EventCommand</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event command to send.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>commandArguments</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.idictionary-2\" data-linktype=\"relative-path\">IDictionary</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>,<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The arguments for the event command.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling SendCommand forwards the command to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_OnEventCommand_\" data-linktype=\"relative-path\">OnEventCommand</a> callback.  What the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> does with the command and its arguments is specific to the event source.  The command and command arguments are passed to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_OnEventCommand_\" data-linktype=\"relative-path\">OnEventCommand</a> callback of the specified event source.   If possible, the current event source should not affect other event listeners&#39; filtering events; however, that may not be possible if the command causes a garbage collection, a system flush, or some other global activity.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_System_Guid_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCurrentThreadActivityId(Guid)</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Sets the activity ID on the current thread.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetCurrentThreadActivityId (Guid activityId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activityId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current thread&#39;s new activity ID, or <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> to indicate that work on the current thread is not associated with any activity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling the SetCurrentThreadActivityId method sets the activity ID on a per-thread basis. All events on the thread will have that activity ID until a new activity is started on the same thread.  </p>\n<p> This method is called only by libraries that manage their own threads.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_System_Guid_System_Guid__\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCurrentThreadActivityId(Guid,Guid)</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Sets the activity ID on the current thread, and returns the previous activity ID.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SetCurrentThreadActivityId (Guid activityId, out Guid oldActivityThatWillContinue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activityId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current thread&#39;s new activity ID, or <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> to indicate that work on the current thread is not associated with any activity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>oldActivityThatWillContinue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the previous activity ID on the current thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can call the SetCurrentThreadActivityId method to temporarily overwrite the current thread&#39;s activity ID with a new activity ID. You must then restore the previous activity ID by passing the <code>oldActivityThatWillContinue</code> argument to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_SetCurrentThreadActivityId_System_Guid_\" data-linktype=\"relative-path\">SetCurrentThreadActivityId(Guid)</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_ToString\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Obtains a string representation of the current event source instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name and unique identifier that identify the current event source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Write_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event without fields, but with the specified name and default options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (string eventName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Write_System_String_System_Diagnostics_Tracing_EventSourceOptions_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String,EventSourceOptions)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event without fields, but with the specified name and options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (string eventName, System.Diagnostics.Tracing.EventSourceOptions options);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourceoptions\" data-linktype=\"relative-path\">EventSourceOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The options such as level, keywords and operation code for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>eventName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Write__1_System_String___0_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Write_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write&lt;T&gt;(String,T)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event with the specified name and data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write&lt;T&gt; (string eventName, T data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event data. This type must be an anonymous type or marked with the <a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute\" data-linktype=\"relative-path\">EventDataAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>eventName</code> is <code>null</code>, the event name is automatically derived from the type Tâ€™s event data (<a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute#System_Diagnostics_Tracing_EventDataAttribute_Name_\" data-linktype=\"relative-path\">Name</a>) or determined based on the name of type <code>T</code>. The public instance properties of <code>data</code> will be written recursively to create the event fields.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Write__1_System_String_System_Diagnostics_Tracing_EventSourceOptions___0_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Write_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write&lt;T&gt;(String,EventSourceOptions,T)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event with the specified name, event data and options.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write&lt;T&gt; (string eventName, System.Diagnostics.Tracing.EventSourceOptions options, T data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourceoptions\" data-linktype=\"relative-path\">EventSourceOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event options.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event data. This type must be an anonymous type or marked with the <a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute\" data-linktype=\"relative-path\">EventDataAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>eventName</code> is <code>null</code>, the event name is automatically derived from the type Tâ€™s event data (<a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute#System_Diagnostics_Tracing_EventDataAttribute_Name_\" data-linktype=\"relative-path\">Name</a>) or determined based on the name of type <code>T</code>. The public instance properties of <code>data</code> will be written recursively to create the event fields.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Write__1_System_String_System_Diagnostics_Tracing_EventSourceOptions____0__\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Write_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write&lt;T&gt;(String,EventSourceOptions,T)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event with the specified name, options and event data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref T data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourceoptions\" data-linktype=\"relative-path\">EventSourceOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event options.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event data. This type must be an anonymous type or marked with the <a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute\" data-linktype=\"relative-path\">EventDataAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>eventName</code> is <code>null</code>, the event name is automatically derived from the type Tâ€™s event data (<a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute#System_Diagnostics_Tracing_EventDataAttribute_Name_\" data-linktype=\"relative-path\">Name</a>) or determined based on the name of type <code>T</code>. The public instance properties of <code>data</code> will be written recursively to create the event fields.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_Write__1_System_String_System_Diagnostics_Tracing_EventSourceOptions__System_Guid__System_Guid____0__\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_Write_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write&lt;T&gt;(String,EventSourceOptions,Guid,Guid,T)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event with the specified name, options, related activity and event data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write&lt;T&gt; (string eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, ref Guid activityId, ref Guid relatedActivityId, ref T data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>options</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.tracing.eventsourceoptions\" data-linktype=\"relative-path\">EventSourceOptions</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event options.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>activityId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID of the activity associated with the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relatedActivityId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID of an associated activity, or <a class=\"xref\" href=\"system.guid#System_Guid_Empty\" data-linktype=\"relative-path\">Empty</a> if there is no associated activity.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event data. This type must be an anonymous type or marked with the <a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute\" data-linktype=\"relative-path\">EventDataAttribute</a> attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>eventName</code> is <code>null</code>, the event name is automatically derived from the type Tâ€™s event data (<a class=\"xref\" href=\"system.diagnostics.tracing.eventdataattribute#System_Diagnostics_Tracing_EventDataAttribute_Name_\" data-linktype=\"relative-path\">Name</a>) or determined based on the name of type <code>T</code>. The public instance properties of <code>data</code> will be written recursively to create the event fields.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier. This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method overload to write an event. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#5\">    &lt;[Event](1, Message:=&quot;Application Failure: {0}&quot;, Level:=EventLevel.Error, Keywords:=Keywords.Diagnostic)&gt; _\n    Public Sub Failure(ByVal message As String)\n        WriteEvent(1, message)\n    End Sub &#39;Failure\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#5\">        [Event(1, Message = &quot;Application Failure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]\n        public void Failure(string message) { WriteEvent(1, message); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Byte___\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and byte array argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, byte[] arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(byte[] arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 32-bit integer argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, int arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(int  arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method overload to write an event. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#8\">    &lt;[Event](4, Opcode:=EventOpcode.Stop, Task:=Tasks.Page, Keywords:=Keywords.Page, Level:=EventLevel.Informational)&gt; _\n    Public Sub PageStop(ByVal ID As Integer)\n        If IsEnabled() Then\n            WriteEvent(4, ID)\n        End If\n    End Sub &#39;PageStop\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#8\">        [Event(4, Opcode = EventOpcode.Stop, Task = Tasks.Page, Keywords = Keywords.Page, Level = EventLevel.Informational)]\n        public void PageStop(int ID) { if (IsEnabled()) WriteEvent(4, ID); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 64-bit integer argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, long arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Object___\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and array of arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the compiler calls this overload if the parameters for the call do not match one of the other method overloads. This overload is much slower than the other overloads, because it does the following:  </p>\n<ol>\n<li><p>It allocates an array to hold the variable argument.  </p>\n</li>\n<li><p>It casts each parameter to an object (which causes allocations for primitive types).  </p>\n</li>\n<li><p>It assigns these objects to the array.  </p>\n</li>\n<li><p>It calls the function, which then determines the type of each argument so it can be serialized for ETW.  </p>\n<p>The high overhead for this overload is not significant when tracing low-volume events, because the method is used only when the provider is enabled. However, for high-volume events, the performance overhead can be significant.  You can avoid using WriteEvent for high-volume payloads by creating a new, faster  overload with the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEventCore_\" data-linktype=\"relative-path\">WriteEventCore</a> method.  </p>\n<p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p>When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n</li>\n</ol>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and string argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, string arg1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this method overload to write an event. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"ETWTrace#5\">    &lt;[Event](1, Message:=&quot;Application Failure: {0}&quot;, Level:=EventLevel.Error, Keywords:=Keywords.Diagnostic)&gt; _\n    Public Sub Failure(ByVal message As String)\n        WriteEvent(1, message)\n    End Sub &#39;Failure\n</code></pre><pre><code class=\"lang-cs\" name=\"ETWTrace#5\">        [Event(1, Message = &quot;Application Failure: {0}&quot;, Level = EventLevel.Error, Keywords = Keywords.Diagnostic)]\n        public void Failure(string message) { WriteEvent(1, message); }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 32-bit integer arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, int arg1, int arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code class=\"lang-c#\">[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(int arg1, int arg2, int arg3)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int32,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 32-bit integer and string arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, int arg1, string arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier. This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 32-bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_Byte___\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int64,Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes the event data using the specified indentifier and 64-bit integer and byte array arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, long arg1, byte[] arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64-bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(Int64 arg1, Byte[] arg2)  \n{  \n base.WriteEvent(2, arg1, arg2);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_Int64_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int64,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 64-bit arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, long arg1, long arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int64,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 64-bit integer, and string arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, long arg1, string arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64-bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(Int64 arg1, string arg2)  \n{  \n base.WriteEvent(2, arg1, arg2);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, string arg1, int arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 32 bit integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_Int64_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,String,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, string arg1, long arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and string arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, string arg1, string arg2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 32-bit integer arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, int arg1, int arg2, int arg3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_Int64_System_Int64_System_Int64_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,Int64,Int64,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and 64-bit arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, long arg1, long arg2, long arg3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 64 bit integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,String,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, string arg1, int arg2, int arg3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 32 bit integer argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A 32 bit integer argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_System_Int32_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEvent(Int32,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an event by using the provided event identifier and string arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEvent (int eventId, string arg1, string arg2, string arg3);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.  This value should be between 0 and 65535.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>arg3</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> When you implement a method that is identified as an ETW event in an <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>-derived class. You must call the base class <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> method passing the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_EventId_\" data-linktype=\"relative-path\">EventId</a> and the same arguments as the implemented method similar to the following example.  </p>\n<pre><code>[Event(2, Level = EventLevel.Informational)]  \npublic void Info1(string arg1)  \n{  \n base.WriteEvent(2, arg1);  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEventCore_System_Int32_System_Int32_System_Diagnostics_Tracing_EventSource_EventData__\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEventCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEventCore(Int32,Int32,EventSource+EventData*)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <span class=\"xref\">stem.Diagnostics.Tracing.EventSource.WriteEvent*</span> overload by using the provided event identifier and event data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEventCore (int eventId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventDataCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of event data items.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The structure that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventid</code> should be greater than 0 or less than 65535 or errors can occur in the operation. If errors do occur, you can get more information about the source of the error by checking the output stream of the debugger, if you have a debugger attached to the process firing events. You can also look for errors reported in the ETW event stream, if you have an ETW listener on the event source where the error occurs.  </p>\n<p> This protected method  enables users to define new <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> overloads that are faster than the provided overloads.   Creating a new overload involves unsafe code.  The basic procedure is to stack-allocate an array of event data descriptors that matches the number of payload items.   For each payload item, set the correct size and value in the event data array.Call WriteEventCore with the initialized array.  </p>\n<p> The following example shows how to add a <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a> overload that accepts four arguments. An example would be if you have a logging event that logs a string and 3 integers.  </p>\n<pre><code class=\"lang-c#\">\n[Event(1)]  \npublic void LogTime(string tag, int hour, int minute, int second)   \n{  \n    WriteEvent(1, tag, hour, minute, second);  \n}  \n</code></pre><p> You could do this without calling WriteEventCore, but it would be slower than it needs to be. That is because it uses arrays and reflection to figure out what to do. If you log these at a high rate (&gt; 1000 / sec), it can be worth making a fast helper, as shown in the following example. The method shadows the existing <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEvent_\" data-linktype=\"relative-path\">WriteEvent</a>. Thus the original caller code (LogTime) does not actually change, but the C# compiler will use the more specialized version which will be faster.  </p>\n<p> To compile unsafe code, you must specify the <a href=\"../Topic/-unsafe%20(C%23%20Compiler%20Options).md\" data-linktype=\"relative-path\">/unsafe (C# Compiler Options)</a> compiler option.  </p>\n<pre><code class=\"lang-c#\">class AnotherEventSource : EventSource {  \n\n    [NonEvent]  \n    public unsafe void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4)  \n    {  \n\n        fixed (char* arg1Ptr = arg1)  \n        {  \n            EventData* dataDesc = stackalloc EventProvider.EventData[4];  \n\n            dataDesc[0].DataPointer = (IntPtr)arg1Ptr;  \n            dataDesc[0].Size = (arg1.Length + 1) * 2; // Size in bytes, including a null terminator.   \n            dataDesc[1].DataPointer = (IntPtr)(&amp;arg2);  \n            dataDesc[1].Size = 4;  \n            dataDesc[2].DataPointer = (IntPtr)(&amp;arg3);  \n            dataDesc[2].Size = 4;  \n            dataDesc[3].DataPointer = (IntPtr)(&amp;arg4);  \n            dataDesc[3].Size = 4;  \n\n            WriteEventCore(eventId, 4, (IntPtr)dataDesc);  \n        }  \n    }  \n}  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityId_System_Int32_System_Guid_System_Object___\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEventWithRelatedActivityId(Int32,Guid,Object[])</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Writes an event that indicates that the current activity is related to another activity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEventWithRelatedActivityId (int eventId, Guid relatedActivityId, object[] args);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An identifier that uniquely identifies this event within the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childActivityID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects that contain data about the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The WriteEventWithRelatedActivityId method logs a transfer event. The activity of the current thread is logged with the event, and this allows two activities to be related by a consumer of events.  </p>\n<p> Your ETW event method calling this function must follow these guidelines:  </p>\n<ol>\n<li><p>Specify the first parameter as a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> named <code>relatedActivityId</code>.  </p>\n</li>\n<li><p>Specify either <a class=\"xref\" href=\"system.diagnostics.tracing.eventopcode\" data-linktype=\"relative-path\">EventOpcode</a> or <a class=\"xref\" href=\"system.diagnostics.tracing.eventopcode\" data-linktype=\"relative-path\">EventOpcode</a> as the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_Opcode_\" data-linktype=\"relative-path\">Opcode</a> property.  </p>\n</li>\n<li><p>Call WriteEventWithRelatedActivityId passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.  </p>\n<p>If <code>args</code> is not used, it is converted to an empty array for the resulting call to ETW.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how you might can specify an event source that calls WriteEventWithRelatedActivityId.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.EventSource.WriteEventWithId#1\">        [EventSource(Name = &quot;Litware-ProductName-ComponentName&quot;)]\n        public sealed class LitwareComponentNameEventSource : EventSource\n        {\n            [Event(1, Task = Tasks.Request, Opcode = EventOpcode.Send)]\n            public void RequestStart(Guid relatedActivityId, int reqId, string url)\n            {\n                WriteEventWithRelatedActivityId(1, relatedActivityId, reqId, url);\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.EventSource.WriteEventWithId#1\">    &lt;EventSource(Name:=&quot;Litware-ProductName-ComponentName&quot;)&gt; _\n    Public NotInheritable Class LitwareComponentNameEventSource\n        Inherits EventSource\n        &lt;[Event](1, Task:=Tasks.Request, Opcode:=EventOpcode.Send)&gt; _\n        Public Sub RequestStart(relatedActivityId As Guid, reqId As Integer, url As String)\n            WriteEventWithRelatedActivityId(1, relatedActivityId, reqId, url)\n        End Sub\n\n    End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.EventSource.WriteEventWithId#2\">        [EventSource(Name = &quot;Contoso-ProductName-ComponentName&quot;)]\n        public sealed class CustomizedForPerfEventSource : EventSource\n        {\n            [Event(1, Task = Tasks.Request, Opcode = EventOpcode.Send)]\n            public void RequestStart(Guid relatedActivityId, int reqId, string url)\n            {\n                if (IsEnabled())\n                    WriteEventWithRelatedActivityId(1, relatedActivityId, reqId, url);\n            }\n\n            [NonEvent]\n            unsafe protected void WriteEventWithRelatedActivityId(int eventId, Guid relatedActivityId,\n                            int arg1, string arg2)\n            {\n                if (IsEnabled())\n                {\n                    if (arg2 == null) arg2 = string.Empty;\n                    fixed (char* stringBytes = arg2)\n                    {\n                        EventData* descrs = stackalloc EventData[2];\n                        descrs[0].DataPointer = (IntPtr)(&amp;arg1);\n                        descrs[0].Size = 4;\n                        descrs[1].DataPointer = (IntPtr)stringBytes;\n                        descrs[1].Size = ((arg2.Length + 1) * 2);\n                        WriteEventWithRelatedActivityIdCore(eventId,\n                        &amp;relatedActivityId, 2, descrs);\n                    }\n                }\n            }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityIdCore_System_Int32_System_Guid__System_Int32_System_Diagnostics_Tracing_EventSource_EventData__\">\r\n    \r\n            <a id=\"System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityIdCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventSource+EventData*)</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Writes an event that indicates that the current activity is related to another activity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void WriteEventWithRelatedActivityIdCore (int eventId, Guid* relatedActivityId, int eventDataCount, System.Diagnostics.Tracing.EventSource.EventData* data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An identifier that uniquely identifies this event within the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource\" data-linktype=\"relative-path\">EventSource</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childActivityID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>*</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventDataCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of items in the <code>data</code> field.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A pointer to the first item in the event data field.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>WriteEventWithRelatedActivityIdCore is similar to the <a class=\"xref\" href=\"system.diagnostics.tracing.eventsource#System_Diagnostics_Tracing_EventSource_WriteEventWithRelatedActivityId_\" data-linktype=\"relative-path\">WriteEventWithRelatedActivityId</a> method but offers better performance, bevcause it does not have to unbox the <code>childActivityID</code> and <code>data</code> arguments.  </p>\n<p> Your ETW event method calling this function must follow these guidelines:  </p>\n<ol>\n<li><p>Specify the first parameter as a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> named <code>relatedActivityId</code>.  </p>\n</li>\n<li><p>Specify either <a class=\"xref\" href=\"system.diagnostics.tracing.eventopcode\" data-linktype=\"relative-path\">EventOpcode</a> or <a class=\"xref\" href=\"system.diagnostics.tracing.eventopcode\" data-linktype=\"relative-path\">EventOpcode</a> as the <a class=\"xref\" href=\"system.diagnostics.tracing.eventattribute#System_Diagnostics_Tracing_EventAttribute_Opcode_\" data-linktype=\"relative-path\">Opcode</a> property.  </p>\n</li>\n<li><p>Call WriteEventWithRelatedActivityIdCore passing in the event ID, followed by the related ID GUID, followed by all the parameters the event method is passed, in the same order.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following C# code example shows how to define a method overload that calls WriteEventWithRelatedActivityIdCore.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.EventSource.WriteEventWithId#5\">        [EventSource(Name = &quot;Litware-ProductName-ComponentName&quot;)]\n        public sealed class LitwareComponentNameEventSource : EventSource\n        {\n            [Event(1, Task = Tasks.Request, Opcode = EventOpcode.Send)]\n            public void RequestStart(Guid relatedActivityId, int reqId, string url)\n            {\n                WriteEventWithRelatedActivityIdCore(1, relatedActivityId, reqId, url);\n            }\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.EventSource.WriteEventWithId#5\">    &lt;EventSource(Name:=&quot;Litware-ProductName-ComponentName&quot;)&gt; _\n    Public NotInheritable Class LitwareComponentNameEventSource\n        Inherits EventSource\n        &lt;[Event](1, Task:=Tasks.Request, Opcode:=EventOpcode.Send)&gt; _\n        Public Sub RequestStart(relatedActivityId As Guid, reqId As Integer, url As String)\n            WriteEventWithRelatedActivityIdCore(1, relatedActivityId, reqId, url)\n        End Sub\n\n    End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.EventSource.WriteEventWithId#3\">            #region Keywords / Task / Opcodes\n            public static class Tasks\n            {\n                public const EventTask Request = (EventTask)0x1;\n            }\n            #endregion\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.EventSource.WriteEventWithId#3\">#Region &quot;Keywords / Task / Opcodes&quot;\n    Public NotInheritable Class Tasks\n        Private Sub New()\n        End Sub\n        Public Const Request As EventTask = DirectCast(&amp;H1, EventTask)\n    End Class\n#End Region\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_Tracing_EventSource_EventCommandExecuted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EventCommandExecuted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a command comes from an event listener.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler&lt;System.Diagnostics.Tracing.EventCommandEventArgs&gt; EventCommandExecuted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.Tracing.EventSource.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.ConstructionException\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.EventCommandExecuted\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.add_EventCommandExecuted\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.remove_EventCommandExecuted\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.GenerateManifest\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.GetGuid\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.GetName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.GetSources\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.GetTrait\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Guid\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.IsEnabled\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Name\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.OnEventCommand\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.SendCommand\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Settings\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.ToString\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Write\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.Write&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.WriteEvent\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.WriteEventCore\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"4c3eea43-39a2-10e0-46b1-600650f7f090\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the ability to create events for event tracing for Windows (ETW).\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics.Tracing/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.Tracing.EventSource\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.Tracing.EventSource.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.Tracing.EventSource","System.Diagnostics.Tracing.EventSource..ctor","System.Diagnostics.Tracing.EventSource.ConstructionException","System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId","System.Diagnostics.Tracing.EventSource.Dispose","System.Diagnostics.Tracing.EventSource.EventCommandExecuted","System.Diagnostics.Tracing.EventSource.add_EventCommandExecuted","System.Diagnostics.Tracing.EventSource.remove_EventCommandExecuted","System.Diagnostics.Tracing.EventSource.Finalize","System.Diagnostics.Tracing.EventSource.GenerateManifest","System.Diagnostics.Tracing.EventSource.GetGuid","System.Diagnostics.Tracing.EventSource.GetName","System.Diagnostics.Tracing.EventSource.GetSources","System.Diagnostics.Tracing.EventSource.GetTrait","System.Diagnostics.Tracing.EventSource.Guid","System.Diagnostics.Tracing.EventSource.IsEnabled","System.Diagnostics.Tracing.EventSource.Name","System.Diagnostics.Tracing.EventSource.OnEventCommand","System.Diagnostics.Tracing.EventSource.SendCommand","System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId","System.Diagnostics.Tracing.EventSource.Settings","System.Diagnostics.Tracing.EventSource.ToString","System.Diagnostics.Tracing.EventSource.Write","System.Diagnostics.Tracing.EventSource.Write<T>","System.Diagnostics.Tracing.EventSource.WriteEvent","System.Diagnostics.Tracing.EventSource.WriteEventCore","System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId","System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.Tracing.EventSource","System::Diagnostics::Tracing::EventSource","System.Diagnostics.Tracing.EventSource.#ctor","System::Diagnostics::Tracing::EventSource::#ctor","System.Diagnostics.Tracing.EventSource.ConstructionException","System::Diagnostics::Tracing::EventSource::ConstructionException","System.Diagnostics.Tracing.EventSource.CurrentThreadActivityId","System::Diagnostics::Tracing::EventSource::CurrentThreadActivityId","System.Diagnostics.Tracing.EventSource.Dispose","System::Diagnostics::Tracing::EventSource::Dispose","System.Diagnostics.Tracing.EventSource.EventCommandExecuted","System::Diagnostics::Tracing::EventSource::EventCommandExecuted","System.Diagnostics.Tracing.EventSource.Finalize","System::Diagnostics::Tracing::EventSource::Finalize","System.Diagnostics.Tracing.EventSource.GenerateManifest","System::Diagnostics::Tracing::EventSource::GenerateManifest","System.Diagnostics.Tracing.EventSource.GetGuid","System::Diagnostics::Tracing::EventSource::GetGuid","System.Diagnostics.Tracing.EventSource.GetName","System::Diagnostics::Tracing::EventSource::GetName","System.Diagnostics.Tracing.EventSource.GetSources","System::Diagnostics::Tracing::EventSource::GetSources","System.Diagnostics.Tracing.EventSource.GetTrait","System::Diagnostics::Tracing::EventSource::GetTrait","System.Diagnostics.Tracing.EventSource.Guid","System::Diagnostics::Tracing::EventSource::Guid","System.Diagnostics.Tracing.EventSource.IsEnabled","System::Diagnostics::Tracing::EventSource::IsEnabled","System.Diagnostics.Tracing.EventSource.Name","System::Diagnostics::Tracing::EventSource::Name","System.Diagnostics.Tracing.EventSource.OnEventCommand","System::Diagnostics::Tracing::EventSource::OnEventCommand","System.Diagnostics.Tracing.EventSource.SendCommand","System::Diagnostics::Tracing::EventSource::SendCommand","System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId","System::Diagnostics::Tracing::EventSource::SetCurrentThreadActivityId","System.Diagnostics.Tracing.EventSource.Settings","System::Diagnostics::Tracing::EventSource::Settings","System.Diagnostics.Tracing.EventSource.ToString","System::Diagnostics::Tracing::EventSource::ToString","System.Diagnostics.Tracing.EventSource.Write","System::Diagnostics::Tracing::EventSource::Write","System.Diagnostics.Tracing.EventSource.Write``1","System::Diagnostics::Tracing::EventSource::Write``1","System.Diagnostics.Tracing.EventSource.WriteEvent","System::Diagnostics::Tracing::EventSource::WriteEvent","System.Diagnostics.Tracing.EventSource.WriteEventCore","System::Diagnostics::Tracing::EventSource::WriteEventCore","System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityId","System::Diagnostics::Tracing::EventSource::WriteEventWithRelatedActivityId","System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore","System::Diagnostics::Tracing::EventSource::WriteEventWithRelatedActivityIdCore"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"4c3eea43-39a2-10e0-46b1-600650f7f090","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics.Tracing/EventSource.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EventSource class | Microsoft Docs","_op_ogTitle":"EventSource class","description":"Provides the ability to create events for event tracing for Windows (ETW).\n","toc_asset_id":"_splitted/System.Diagnostics.Tracing/toc.json","toc_rel":"_splitted/System.Diagnostics.Tracing/toc.json","source_url":"","ms.assetid":"System.Diagnostics.Tracing.EventSource","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.tracing.eventsource","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.tracing.eventsource","fileRelativePath":"System.Diagnostics.Tracing.EventSource.html"},"themesRelativePathToOutputRoot":"_themes/"}