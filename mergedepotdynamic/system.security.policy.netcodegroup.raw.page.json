{"content":"    \r\n    <h1 id=\"System_Security_Policy_NetCodeGroup\">\r\n      <span class=\"lang-csharp\">NetCodeGroup</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class NetCodeGroup : System.Security.Policy.CodeGroup</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup\" data-linktype=\"relative-path\">System.Security.Policy.CodeGroup</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">NetCodeGroup</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_AddChild_System_Security_Policy_CodeGroup_\" data-linktype=\"relative-path\">AddChild(CodeGroup)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_Children\" data-linktype=\"relative-path\">Children</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_Description\" data-linktype=\"relative-path\">Description</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_Equals_System_Security_Policy_CodeGroup_System_Boolean_\" data-linktype=\"relative-path\">Equals(CodeGroup,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_FromXml_System_Security_SecurityElement_\" data-linktype=\"relative-path\">FromXml(SecurityElement)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_FromXml_System_Security_SecurityElement_System_Security_Policy_PolicyLevel_\" data-linktype=\"relative-path\">FromXml(SecurityElement,PolicyLevel)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_MembershipCondition\" data-linktype=\"relative-path\">MembershipCondition</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_PolicyStatement\" data-linktype=\"relative-path\">PolicyStatement</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_RemoveChild_System_Security_Policy_CodeGroup_\" data-linktype=\"relative-path\">RemoveChild(CodeGroup)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_ToXml\" data-linktype=\"relative-path\">ToXml()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_ToXml_System_Security_Policy_PolicyLevel_\" data-linktype=\"relative-path\">ToXml(PolicyLevel)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have one or more child code groups. Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.  </p>\n<p> NetCodeGroup has the same merge semantics as that of <a class=\"xref\" href=\"system.security.policy.unioncodegroup\" data-linktype=\"relative-path\">UnionCodeGroup</a>; it forms the union of the <a class=\"xref\" href=\"system.security.policy.policystatement\" data-linktype=\"relative-path\">PolicyStatement</a> objects of all matching child code groups and the <a class=\"xref\" href=\"system.security.policy.policystatement\" data-linktype=\"relative-path\">PolicyStatement</a> it generates from the input <a class=\"xref\" href=\"system.security.policy.url\" data-linktype=\"relative-path\">Url</a> evidence. However, NetCodeGroup returns a permission containing a dynamically calculated <a class=\"xref\" href=\"system.net.webpermission\" data-linktype=\"relative-path\">WebPermission</a> that grants connect access to the site from which the code is run; <a class=\"xref\" href=\"system.security.policy.unioncodegroup\" data-linktype=\"relative-path\">UnionCodeGroup</a> simply returns a static permission set.  </p>\n<p> When a NetCodeGroup is created, it contains the default connection access rules shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>URI Scheme</th>\n<th>Rule</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file</td>\n<td>No connection access to the origin server is permitted.</td>\n</tr>\n<tr>\n<td>http</td>\n<td>HTTP and HTTPS access is permitted using the origin port.</td>\n</tr>\n<tr>\n<td>https</td>\n<td>HTTPS access is permitted using the origin port.</td>\n</tr>\n</tbody>\n</table>\n<p> You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object with the appropriate <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Scheme_\" data-linktype=\"relative-path\">Scheme</a> and <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_Port_\" data-linktype=\"relative-path\">Port</a> property values to the <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AddConnectAccess_\" data-linktype=\"relative-path\">AddConnectAccess</a> method. You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AbsentOriginScheme\" data-linktype=\"relative-path\">AbsentOriginScheme</a> (&quot;&quot;) as the scheme. You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AnyOtherOriginScheme\" data-linktype=\"relative-path\">AnyOtherOriginScheme</a> (&quot;*&quot;) as the scheme.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup__ctor_System_Security_Policy_IMembershipCondition_\" data-linktype=\"self-bookmark\">NetCodeGroup(IMembershipCondition)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_AbsentOriginScheme\" data-linktype=\"self-bookmark\">AbsentOriginScheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_AnyOtherOriginScheme\" data-linktype=\"self-bookmark\">AnyOtherOriginScheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains a value used to specify any other unspecified origin scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_AttributeString\" data-linktype=\"self-bookmark\">AttributeString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string representation of the attributes of the policy statement for the code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_MergeLogic\" data-linktype=\"self-bookmark\">MergeLogic</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the logic to use for merging groups.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_PermissionSetName\" data-linktype=\"self-bookmark\">PermissionSetName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the <a class=\"xref\" href=\"system.security.namedpermissionset\" data-linktype=\"relative-path\">NamedPermissionSet</a> for the code group.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_AddConnectAccess_System_String_System_Security_Policy_CodeConnectAccess_\" data-linktype=\"self-bookmark\">AddConnectAccess(String,CodeConnectAccess)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified connection access to the current code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_Copy\" data-linktype=\"self-bookmark\">Copy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes a deep copy of the current code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_CreateXml_System_Security_SecurityElement_System_Security_Policy_PolicyLevel_\" data-linktype=\"self-bookmark\">CreateXml(SecurityElement,PolicyLevel)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified code group is equivalent to the current code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_GetConnectAccessRules\" data-linktype=\"self-bookmark\">GetConnectAccessRules()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the connection access information for the current code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the hash code of the current code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_ParseXml_System_Security_SecurityElement_System_Security_Policy_PolicyLevel_\" data-linktype=\"self-bookmark\">ParseXml(SecurityElement,PolicyLevel)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_ResetConnectAccess\" data-linktype=\"self-bookmark\">ResetConnectAccess()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all connection access information for the current code group.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_Resolve_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">Resolve(Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resolves policy for the code group and its descendants for a set of evidence.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Policy_NetCodeGroup_ResolveMatchingCodeGroups_System_Security_Policy_Evidence_\" data-linktype=\"self-bookmark\">ResolveMatchingCodeGroups(Evidence)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resolves matching code groups.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup__ctor_System_Security_Policy_IMembershipCondition_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetCodeGroup(IMembershipCondition)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>membershipCondition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.imembershipcondition\" data-linktype=\"relative-path\">IMembershipCondition</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A membership condition that tests evidence to determine whether this code group applies code access security policy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>membershipCondition</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The type of the <code>membershipCondition</code> parameter is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> is created, it contains the default connection access rules shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Scheme</th>\n<th>Rule</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file</td>\n<td>No connection access to the origin server is permitted.</td>\n</tr>\n<tr>\n<td>http</td>\n<td>HTTP and HTTPS access is permitted using the origin port.</td>\n</tr>\n<tr>\n<td>https</td>\n<td>HTTPS access is permitted using the origin port.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating a <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> and adding <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects for code downloaded using the HTTP scheme.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#3\">    public static void SetNetCodeGroupAccess()\n    {\n        const string userPolicyLevel = &quot;User&quot;;\n        // Locate the User policy level.\n        PolicyLevel level = null;\n        System.Collections.IEnumerator ph = \n            System.Security.SecurityManager.PolicyHierarchy();\n        while(ph.MoveNext())\n        {\n            level = (PolicyLevel)ph.Current;\n            if( level.Label == userPolicyLevel )\n            {\n                break;\n            }\n        }\n        if (level.Label != userPolicyLevel)\n            throw new ApplicationException(&quot;Could not find User policy level.&quot;);\n\n        IMembershipCondition membership =\n            new UrlMembershipCondition(@&quot;http://www.contoso.com/*&quot;);\n        NetCodeGroup codeGroup = new NetCodeGroup(membership);\n        // Delete default settings.\n        codeGroup.ResetConnectAccess();\n        // Create an object that represents access to the FTP scheme and default port.\n        CodeConnectAccess a1 = new CodeConnectAccess(Uri.UriSchemeFtp, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the HTTPS scheme and default port.\n        CodeConnectAccess a2 = new CodeConnectAccess(Uri.UriSchemeHttps, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the origin scheme and port.\n        CodeConnectAccess a3 = CodeConnectAccess.CreateOriginSchemeAccess(CodeConnectAccess.OriginPort);\n        // Add connection access objects to the NetCodeGroup object.\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a1);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a2);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a3);\n        // Provide name and description information for caspol.exe tool.\n        codeGroup.Name = &quot;ContosoHttpCodeGroup&quot;;\n        codeGroup.Description = &quot;Code originating from contoso.com can connect back using the FTP or HTTPS.&quot;;\n        // Add the code group to the User policy&#39;s root node.\n        level.RootCodeGroup.AddChild(codeGroup);\n        // Save the changes to the policy level.\n        System.Security.SecurityManager.SavePolicy();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#3\">\nstatic void SetNetCodeGroupAccess()\n{\n    String^ userPolicyLevel = &quot;User&quot;;\n    // Locate the User policy level.\n    PolicyLevel^ level = nullptr;\n    System::Collections::IEnumerator^ ph = \n        System::Security::SecurityManager::PolicyHierarchy();\n    while(ph-&gt;MoveNext())\n    {\n        level = (PolicyLevel^)ph-&gt;Current;\n        if (level-&gt;Label == userPolicyLevel)\n        {\n            break;       \n        }\n    }\n    if (level-&gt;Label != userPolicyLevel)\n        throw gcnew ApplicationException(&quot;Could not find User policy level.&quot;);\n\n    IMembershipCondition^ membership =\n        gcnew UrlMembershipCondition(&quot;http://www.contoso.com/*&quot;);\n    NetCodeGroup^ codeGroup = gcnew NetCodeGroup(membership);\n    // Delete default settings.\n    codeGroup-&gt;ResetConnectAccess();\n    // Create an object that represents access to the FTP scheme and \n    // default port.\n    CodeConnectAccess^ CodeAccessFtp = \n        gcnew CodeConnectAccess(Uri::UriSchemeFtp, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the HTTPS scheme \n    // and default port.\n    CodeConnectAccess^ CodeAccessHttps = \n        gcnew CodeConnectAccess(Uri::UriSchemeHttps, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the origin \n    // scheme and port.\n    CodeConnectAccess^ CodeAccessOrigin = \n        CodeConnectAccess::CreateOriginSchemeAccess\n        (CodeConnectAccess::OriginPort);\n    // Add connection access objects to the NetCodeGroup object.\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessFtp);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessHttps);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessOrigin);\n    // Provide name and description information for caspol.exe tool.\n    codeGroup-&gt;Name = &quot;ContosoHttpCodeGroup&quot;;\n    codeGroup-&gt;Description = &quot;Code originating from contoso.com can&quot; +\n        &quot; connect back using the FTP or HTTPS.&quot;;\n    // Add the code group to the User policy&#39;s root node.\n    level-&gt;RootCodeGroup-&gt;AddChild(codeGroup);\n    // Save the changes to the policy level.\n    System::Security::SecurityManager::SavePolicy();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_AbsentOriginScheme\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AbsentOriginScheme</div>        \r\n          </div>\r\n    \r\n            <p>Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string AbsentOriginScheme;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When calling the <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AddConnectAccess_\" data-linktype=\"relative-path\">AddConnectAccess</a> method, you specify a scheme and an associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object. Any <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects that you add to the <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> using AbsentOriginScheme as the origin scheme are applied when the code&#39;s origin scheme is not present in its evidence, or is not a scheme recognized by the <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> object.  </p>\n<p> To specify the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects to use when the code&#39;s origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> object, use the <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AnyOtherOriginScheme\" data-linktype=\"relative-path\">AnyOtherOriginScheme</a> value.  </p>\n<p> The value of the AbsentOriginScheme field is an empty string (&quot;&quot;).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_AnyOtherOriginScheme\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AnyOtherOriginScheme</div>        \r\n          </div>\r\n    \r\n            <p>Contains a value used to specify any other unspecified origin scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string AnyOtherOriginScheme;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When calling the <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AddConnectAccess_\" data-linktype=\"relative-path\">AddConnectAccess</a> method, you specify a scheme and an associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> object. You can use the value of the AnyOtherOriginScheme field to specify the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> object.  </p>\n<p> The <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects specified with the AnyOtherOriginScheme field are only used if the code&#39;s origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> object.  </p>\n<p> To specify the <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects to apply when the code&#39;s origin scheme is not available in its evidence or is not recognized, use the <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AbsentOriginScheme\" data-linktype=\"relative-path\">AbsentOriginScheme</a> value.  </p>\n<p> The value of the AnyOtherOriginScheme field is &quot;*&quot;.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_AttributeString\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_AttributeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttributeString</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string representation of the attributes of the policy statement for the code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string AttributeString { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Always <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_MergeLogic\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_MergeLogic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MergeLogic</div>        \r\n          </div>\r\n    \r\n            <p>Gets the logic to use for merging groups.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string MergeLogic { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string &quot;Union&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_PermissionSetName\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_PermissionSetName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PermissionSetName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the <a class=\"xref\" href=\"system.security.namedpermissionset\" data-linktype=\"relative-path\">NamedPermissionSet</a> for the code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string PermissionSetName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Always the string &quot;Same site Web.&quot;</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_AddConnectAccess_System_String_System_Security_Policy_CodeConnectAccess_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_AddConnectAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddConnectAccess(String,CodeConnectAccess)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified connection access to the current code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>originScheme</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the scheme to match against the code&#39;s scheme.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>connectAccess</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> that specifies the scheme and port code can use to connect back to its origin server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>originScheme</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>originScheme</code> contains characters that are not permitted in schemes.  </p>\n<p> -or-  </p>\n<p> <code>originScheme</code> = <a class=\"xref\" href=\"system.security.policy.netcodegroup#System_Security_Policy_NetCodeGroup_AbsentOriginScheme\" data-linktype=\"relative-path\">AbsentOriginScheme</a> and <code>connectAccess</code> specifies <a class=\"xref\" href=\"system.security.policy.codeconnectaccess#System_Security_Policy_CodeConnectAccess_OriginScheme\" data-linktype=\"relative-path\">OriginScheme</a> as its scheme.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can add multiple <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects for the same <code>origin scheme</code>. If an <code>origin scheme</code> already has one or more associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects, specifying <code>null</code> for <code>connectAccess</code> has no effect. If the origin scheme does not have associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects, specifying <code>null</code> for <code>connectAccess</code> prevents code with an origin scheme that matches <code>originScheme</code> from accessing its origin server.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates creating and adding <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects to a <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#3\">    public static void SetNetCodeGroupAccess()\n    {\n        const string userPolicyLevel = &quot;User&quot;;\n        // Locate the User policy level.\n        PolicyLevel level = null;\n        System.Collections.IEnumerator ph = \n            System.Security.SecurityManager.PolicyHierarchy();\n        while(ph.MoveNext())\n        {\n            level = (PolicyLevel)ph.Current;\n            if( level.Label == userPolicyLevel )\n            {\n                break;\n            }\n        }\n        if (level.Label != userPolicyLevel)\n            throw new ApplicationException(&quot;Could not find User policy level.&quot;);\n\n        IMembershipCondition membership =\n            new UrlMembershipCondition(@&quot;http://www.contoso.com/*&quot;);\n        NetCodeGroup codeGroup = new NetCodeGroup(membership);\n        // Delete default settings.\n        codeGroup.ResetConnectAccess();\n        // Create an object that represents access to the FTP scheme and default port.\n        CodeConnectAccess a1 = new CodeConnectAccess(Uri.UriSchemeFtp, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the HTTPS scheme and default port.\n        CodeConnectAccess a2 = new CodeConnectAccess(Uri.UriSchemeHttps, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the origin scheme and port.\n        CodeConnectAccess a3 = CodeConnectAccess.CreateOriginSchemeAccess(CodeConnectAccess.OriginPort);\n        // Add connection access objects to the NetCodeGroup object.\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a1);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a2);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a3);\n        // Provide name and description information for caspol.exe tool.\n        codeGroup.Name = &quot;ContosoHttpCodeGroup&quot;;\n        codeGroup.Description = &quot;Code originating from contoso.com can connect back using the FTP or HTTPS.&quot;;\n        // Add the code group to the User policy&#39;s root node.\n        level.RootCodeGroup.AddChild(codeGroup);\n        // Save the changes to the policy level.\n        System.Security.SecurityManager.SavePolicy();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#3\">\nstatic void SetNetCodeGroupAccess()\n{\n    String^ userPolicyLevel = &quot;User&quot;;\n    // Locate the User policy level.\n    PolicyLevel^ level = nullptr;\n    System::Collections::IEnumerator^ ph = \n        System::Security::SecurityManager::PolicyHierarchy();\n    while(ph-&gt;MoveNext())\n    {\n        level = (PolicyLevel^)ph-&gt;Current;\n        if (level-&gt;Label == userPolicyLevel)\n        {\n            break;       \n        }\n    }\n    if (level-&gt;Label != userPolicyLevel)\n        throw gcnew ApplicationException(&quot;Could not find User policy level.&quot;);\n\n    IMembershipCondition^ membership =\n        gcnew UrlMembershipCondition(&quot;http://www.contoso.com/*&quot;);\n    NetCodeGroup^ codeGroup = gcnew NetCodeGroup(membership);\n    // Delete default settings.\n    codeGroup-&gt;ResetConnectAccess();\n    // Create an object that represents access to the FTP scheme and \n    // default port.\n    CodeConnectAccess^ CodeAccessFtp = \n        gcnew CodeConnectAccess(Uri::UriSchemeFtp, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the HTTPS scheme \n    // and default port.\n    CodeConnectAccess^ CodeAccessHttps = \n        gcnew CodeConnectAccess(Uri::UriSchemeHttps, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the origin \n    // scheme and port.\n    CodeConnectAccess^ CodeAccessOrigin = \n        CodeConnectAccess::CreateOriginSchemeAccess\n        (CodeConnectAccess::OriginPort);\n    // Add connection access objects to the NetCodeGroup object.\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessFtp);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessHttps);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessOrigin);\n    // Provide name and description information for caspol.exe tool.\n    codeGroup-&gt;Name = &quot;ContosoHttpCodeGroup&quot;;\n    codeGroup-&gt;Description = &quot;Code originating from contoso.com can&quot; +\n        &quot; connect back using the FTP or HTTPS.&quot;;\n    // Add the code group to the User policy&#39;s root node.\n    level-&gt;RootCodeGroup-&gt;AddChild(codeGroup);\n    // Save the changes to the policy level.\n    System::Security::SecurityManager::SavePolicy();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_Copy\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_Copy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Copy()</div>        \r\n          </div>\r\n    \r\n            <p>Makes a deep copy of the current code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.Policy.CodeGroup Copy ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.codegroup\" data-linktype=\"relative-path\">System.Security.Policy.CodeGroup</a></div>\r\n                  </div>\r\n                  <p>An equivalent copy of the current code group, including its membership conditions and child code groups.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_CreateXml_System_Security_SecurityElement_System_Security_Policy_PolicyLevel_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_CreateXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateXml(SecurityElement,PolicyLevel)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>level</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified code group is equivalent to the current code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object o);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>o</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> object to compare with the current code group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified code group is equivalent to the current code group; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following data are used to determine the equality of two <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> objects:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_Description_\" data-linktype=\"relative-path\">Description</a> properties.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.security.policy.codegroup#System_Security_Policy_CodeGroup_MembershipCondition_\" data-linktype=\"relative-path\">MembershipCondition</a> property.  </p>\n</li>\n<li><p>The set of origin schemes and the associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_GetConnectAccessRules\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_GetConnectAccessRules_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetConnectAccessRules()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the connection access information for the current code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.DictionaryEntry[] GetConnectAccessRules ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">DictionaryEntry</a> array containing connection access information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In each dictionary entry, the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Key_\" data-linktype=\"relative-path\">Key</a> property value is the origin scheme, and the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Value_\" data-linktype=\"relative-path\">Value</a> property value is the array of associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects. If there are no associated <a class=\"xref\" href=\"system.security.policy.codeconnectaccess\" data-linktype=\"relative-path\">CodeConnectAccess</a> objects, <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Value_\" data-linktype=\"relative-path\">Value</a> returns an empty array.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates displaying the connection access rules for a <a class=\"xref\" href=\"system.security.policy.netcodegroup\" data-linktype=\"relative-path\">NetCodeGroup</a> object.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#8\">    public static void DisplayConnectionAccessRules(NetCodeGroup group)\n    {\n        System.Collections.DictionaryEntry[] rules = group.GetConnectAccessRules();\n        foreach (System.Collections.DictionaryEntry o in rules)\n        {\n            string key = o.Key as string;\n            CodeConnectAccess[] values = (CodeConnectAccess[]) o.Value;\n            Console.WriteLine(&quot;Origin scheme: {0}&quot;, key);\n            foreach (CodeConnectAccess c in values)\n            {\n                Console.WriteLine(&quot;Scheme {0} Port: {1}&quot;, c.Scheme, c.Port);\n            }\n            Console.WriteLine(&quot;__________________________&quot;);\n        }\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#8\">\nstatic void DisplayConnectionAccessRules(NetCodeGroup^ group)\n{\n    array&lt;System::Collections::DictionaryEntry&gt;^ rules = \n        group-&gt;GetConnectAccessRules();\n    for each (System::Collections::DictionaryEntry^ o in rules)\n    {\n        String^ key = (String^)(o-&gt;Key);\n        array&lt;CodeConnectAccess^&gt;^ values = (array&lt;CodeConnectAccess^&gt;^)(o-&gt;Value);\n        Console::WriteLine(&quot;Origin scheme: {0}&quot;, key);\n        for each (CodeConnectAccess^ c in values)\n        {\n            Console::WriteLine(&quot;Scheme {0} Port: {1}&quot;, c-&gt;Scheme, c-&gt;Port);\n        }\n        Console::WriteLine(&quot;__________________________&quot;);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_GetHashCode\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the hash code of the current code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code of the current code group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_ParseXml_System_Security_SecurityElement_System_Security_Policy_PolicyLevel_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_ParseXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParseXml(SecurityElement,PolicyLevel)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityelement\" data-linktype=\"relative-path\">SecurityElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>level</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policylevel\" data-linktype=\"relative-path\">PolicyLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_ResetConnectAccess\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_ResetConnectAccess_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetConnectAccess()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all connection access information for the current code group.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ResetConnectAccess ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to remove the system-supplied default connection access rules.  </p>\n<p> The default rules are shown in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Scheme</th>\n<th>Rule</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file</td>\n<td>No connection access to the origin server is permitted.</td>\n</tr>\n<tr>\n<td>http</td>\n<td>HTTP and HTTPS access is permitted using the origin port.</td>\n</tr>\n<tr>\n<td>https</td>\n<td>HTTPS access is permitted using the origin port.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates calling this method to remove the default code access connection rules.  </p>\n<pre><code class=\"lang-cs\" name=\"NclCodeGroup#3\">    public static void SetNetCodeGroupAccess()\n    {\n        const string userPolicyLevel = &quot;User&quot;;\n        // Locate the User policy level.\n        PolicyLevel level = null;\n        System.Collections.IEnumerator ph = \n            System.Security.SecurityManager.PolicyHierarchy();\n        while(ph.MoveNext())\n        {\n            level = (PolicyLevel)ph.Current;\n            if( level.Label == userPolicyLevel )\n            {\n                break;\n            }\n        }\n        if (level.Label != userPolicyLevel)\n            throw new ApplicationException(&quot;Could not find User policy level.&quot;);\n\n        IMembershipCondition membership =\n            new UrlMembershipCondition(@&quot;http://www.contoso.com/*&quot;);\n        NetCodeGroup codeGroup = new NetCodeGroup(membership);\n        // Delete default settings.\n        codeGroup.ResetConnectAccess();\n        // Create an object that represents access to the FTP scheme and default port.\n        CodeConnectAccess a1 = new CodeConnectAccess(Uri.UriSchemeFtp, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the HTTPS scheme and default port.\n        CodeConnectAccess a2 = new CodeConnectAccess(Uri.UriSchemeHttps, CodeConnectAccess.DefaultPort);\n        // Create an object that represents access to the origin scheme and port.\n        CodeConnectAccess a3 = CodeConnectAccess.CreateOriginSchemeAccess(CodeConnectAccess.OriginPort);\n        // Add connection access objects to the NetCodeGroup object.\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a1);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a2);\n        codeGroup.AddConnectAccess(Uri.UriSchemeHttp, a3);\n        // Provide name and description information for caspol.exe tool.\n        codeGroup.Name = &quot;ContosoHttpCodeGroup&quot;;\n        codeGroup.Description = &quot;Code originating from contoso.com can connect back using the FTP or HTTPS.&quot;;\n        // Add the code group to the User policy&#39;s root node.\n        level.RootCodeGroup.AddChild(codeGroup);\n        // Save the changes to the policy level.\n        System.Security.SecurityManager.SavePolicy();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"NclCodeGroup#3\">\nstatic void SetNetCodeGroupAccess()\n{\n    String^ userPolicyLevel = &quot;User&quot;;\n    // Locate the User policy level.\n    PolicyLevel^ level = nullptr;\n    System::Collections::IEnumerator^ ph = \n        System::Security::SecurityManager::PolicyHierarchy();\n    while(ph-&gt;MoveNext())\n    {\n        level = (PolicyLevel^)ph-&gt;Current;\n        if (level-&gt;Label == userPolicyLevel)\n        {\n            break;       \n        }\n    }\n    if (level-&gt;Label != userPolicyLevel)\n        throw gcnew ApplicationException(&quot;Could not find User policy level.&quot;);\n\n    IMembershipCondition^ membership =\n        gcnew UrlMembershipCondition(&quot;http://www.contoso.com/*&quot;);\n    NetCodeGroup^ codeGroup = gcnew NetCodeGroup(membership);\n    // Delete default settings.\n    codeGroup-&gt;ResetConnectAccess();\n    // Create an object that represents access to the FTP scheme and \n    // default port.\n    CodeConnectAccess^ CodeAccessFtp = \n        gcnew CodeConnectAccess(Uri::UriSchemeFtp, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the HTTPS scheme \n    // and default port.\n    CodeConnectAccess^ CodeAccessHttps = \n        gcnew CodeConnectAccess(Uri::UriSchemeHttps, \n        CodeConnectAccess::DefaultPort);\n    // Create an object that represents access to the origin \n    // scheme and port.\n    CodeConnectAccess^ CodeAccessOrigin = \n        CodeConnectAccess::CreateOriginSchemeAccess\n        (CodeConnectAccess::OriginPort);\n    // Add connection access objects to the NetCodeGroup object.\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessFtp);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessHttps);\n    codeGroup-&gt;AddConnectAccess(Uri::UriSchemeHttp, CodeAccessOrigin);\n    // Provide name and description information for caspol.exe tool.\n    codeGroup-&gt;Name = &quot;ContosoHttpCodeGroup&quot;;\n    codeGroup-&gt;Description = &quot;Code originating from contoso.com can&quot; +\n        &quot; connect back using the FTP or HTTPS.&quot;;\n    // Add the code group to the User policy&#39;s root node.\n    level-&gt;RootCodeGroup-&gt;AddChild(codeGroup);\n    // Save the changes to the policy level.\n    System::Security::SecurityManager::SavePolicy();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_Resolve_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_Resolve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resolve(Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Resolves policy for the code group and its descendants for a set of evidence.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a> for the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policystatement\" data-linktype=\"relative-path\">PolicyStatement</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.security.policy.policystatement\" data-linktype=\"relative-path\">PolicyStatement</a> that consists of the permissions granted by the code group with optional attributes, or <code>null</code> if the code group does not apply (the membership condition does not match the specified evidence).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>evidence</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.policyexception\" data-linktype=\"relative-path\">PolicyException</a></div>\r\n                  </div>\r\n                  <p>More than one code group (including the parent code group and any child code groups) is marked <a class=\"xref\" href=\"system.security.policy.policystatementattribute\" data-linktype=\"relative-path\">PolicyStatementAttribute</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.  </p>\n<p> The operation of this method is as follows:  </p>\n<p> If the membership condition does not match the specified evidence, return <code>null</code>; otherwise, set the permission set to be returned (P) equal to the code group&#39;s policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not <code>null</code>, return that policy statement. If no child code group matched, return P (the parent&#39;s policy statement).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Policy_NetCodeGroup_ResolveMatchingCodeGroups_System_Security_Policy_Evidence_\">\r\n    \r\n            <a id=\"System_Security_Policy_NetCodeGroup_ResolveMatchingCodeGroups_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResolveMatchingCodeGroups(Evidence)</div>        \r\n          </div>\r\n    \r\n            <p>Resolves matching code groups.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>evidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.evidence\" data-linktype=\"relative-path\">Evidence</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The evidence for the assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.policy.codegroup\" data-linktype=\"relative-path\">System.Security.Policy.CodeGroup</a></div>\r\n                  </div>\r\n                  <p>The complete set of code groups that were matched by the evidence.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>evidence</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Policy.NetCodeGroup.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Policy.NetCodeGroup.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.AbsentOriginScheme\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.AddConnectAccess\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.AttributeString\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.Copy\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.CreateXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.Equals\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.GetConnectAccessRules\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.MergeLogic\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.ParseXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.PermissionSetName\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.ResetConnectAccess\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.Resolve\">\r\n<meta name=\"APIName\" content=\"System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f1f223fa-941e-033d-7ad9-ee5bbb604717\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Policy/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Policy.NetCodeGroup\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Policy.NetCodeGroup.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Policy.NetCodeGroup.yml","open_to_public_contributors":true,"api_name":["System.Security.Policy.NetCodeGroup","System.Security.Policy.NetCodeGroup..ctor","System.Security.Policy.NetCodeGroup.AbsentOriginScheme","System.Security.Policy.NetCodeGroup.AddConnectAccess","System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme","System.Security.Policy.NetCodeGroup.AttributeString","System.Security.Policy.NetCodeGroup.Copy","System.Security.Policy.NetCodeGroup.CreateXml","System.Security.Policy.NetCodeGroup.Equals","System.Security.Policy.NetCodeGroup.GetConnectAccessRules","System.Security.Policy.NetCodeGroup.GetHashCode","System.Security.Policy.NetCodeGroup.MergeLogic","System.Security.Policy.NetCodeGroup.ParseXml","System.Security.Policy.NetCodeGroup.PermissionSetName","System.Security.Policy.NetCodeGroup.ResetConnectAccess","System.Security.Policy.NetCodeGroup.Resolve","System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Policy.NetCodeGroup","System::Security::Policy::NetCodeGroup","System.Security.Policy.NetCodeGroup.#ctor","System::Security::Policy::NetCodeGroup::#ctor","System.Security.Policy.NetCodeGroup.AbsentOriginScheme","System::Security::Policy::NetCodeGroup::AbsentOriginScheme","System.Security.Policy.NetCodeGroup.AddConnectAccess","System::Security::Policy::NetCodeGroup::AddConnectAccess","System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme","System::Security::Policy::NetCodeGroup::AnyOtherOriginScheme","System.Security.Policy.NetCodeGroup.AttributeString","System::Security::Policy::NetCodeGroup::AttributeString","System.Security.Policy.NetCodeGroup.Copy","System::Security::Policy::NetCodeGroup::Copy","System.Security.Policy.NetCodeGroup.CreateXml","System::Security::Policy::NetCodeGroup::CreateXml","System.Security.Policy.NetCodeGroup.Equals","System::Security::Policy::NetCodeGroup::Equals","System.Security.Policy.NetCodeGroup.GetConnectAccessRules","System::Security::Policy::NetCodeGroup::GetConnectAccessRules","System.Security.Policy.NetCodeGroup.GetHashCode","System::Security::Policy::NetCodeGroup::GetHashCode","System.Security.Policy.NetCodeGroup.MergeLogic","System::Security::Policy::NetCodeGroup::MergeLogic","System.Security.Policy.NetCodeGroup.ParseXml","System::Security::Policy::NetCodeGroup::ParseXml","System.Security.Policy.NetCodeGroup.PermissionSetName","System::Security::Policy::NetCodeGroup::PermissionSetName","System.Security.Policy.NetCodeGroup.ResetConnectAccess","System::Security::Policy::NetCodeGroup::ResetConnectAccess","System.Security.Policy.NetCodeGroup.Resolve","System::Security::Policy::NetCodeGroup::Resolve","System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups","System::Security::Policy::NetCodeGroup::ResolveMatchingCodeGroups"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f1f223fa-941e-033d-7ad9-ee5bbb604717","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Policy/NetCodeGroup.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NetCodeGroup class | Microsoft Docs","_op_ogTitle":"NetCodeGroup class","description":"Grants Web permission to the site from which the assembly was downloaded. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Policy/toc.json","toc_rel":"_splitted/System.Security.Policy/toc.json","source_url":"","ms.assetid":"System.Security.Policy.NetCodeGroup","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.policy.netcodegroup","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.policy.netcodegroup","fileRelativePath":"System.Security.Policy.NetCodeGroup.html"},"themesRelativePathToOutputRoot":"_themes/"}