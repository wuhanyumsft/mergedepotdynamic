{"content":"    \r\n    <h1 id=\"System_Diagnostics_PerformanceCounterCategory\">\r\n      <span class=\"lang-csharp\">PerformanceCounterCategory</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a performance object, which defines a category of performance counters.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class PerformanceCounterCategory</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PerformanceCounterCategory</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"IMPORTANT\"><h5>Important</h5><p> Creating or deleting a performance counter requires synchronization of the underlying code by using a named mutex. If a highly privileged application locks the named mutex, attempts to create or delete a performance counter causes the application to stop responding until the lock is released. To help avoid this problem, never grant <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission to untrusted code. In addition, <a class=\"xref\" href=\"system.security.permissions.securitypermissionflag\" data-linktype=\"relative-path\">SecurityPermissionFlag</a> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.  </p>\n</div>\n<p> The PerformanceCounterCategory instance&#39;s <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> property is displayed in the Performance Object field of the Performance Viewer application&#39;s Add Counter dialog box.  </p>\n<p> The PerformanceCounterCategory class provides several methods for interacting with counters and categories on the computer. The <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_Create_\" data-linktype=\"relative-path\">Create</a> methods enable you to define custom categories. The <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_Delete_\" data-linktype=\"relative-path\">Delete</a> method provides a way to remove categories from the computer. The <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCategories_\" data-linktype=\"relative-path\">GetCategories</a> method enables you to view the list of categories, while <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_ReadCategory_\" data-linktype=\"relative-path\">ReadCategory</a> retrieves all the counter and instance data associated with a single category.  </p>\n<p> A performance counter publishes performance data about an application. Categories include physical components (such as processors, disks, and memory) and system objects (such as processes and threads). System counters that are related to the same performance object are grouped into a category that indicates their common focus. When you create an instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class, you first indicate the category with which the component will interact, and then you choose a counter from that category.  </p>\n<p> For example, one Windows counter category is the Memory category. System counters within this category track memory data such as the number of bytes available and the number of bytes cached. If you wanted to work with the bytes cached in your application, you would create an instance of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> component, connect it to the Memory category, and then pick the appropriate counter (in this case, Cached Bytes) from that category.  </p>\n<p> Although your system makes many more counter categories available, the categories that you will probably interact with most frequently are the Cache, Memory, Objects, PhysicalDisk, Process, Processor, Server, System, and Thread categories.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.diagnostics.performancecounter#System_Diagnostics_PerformanceCounter_RemoveInstance_\" data-linktype=\"relative-path\">RemoveInstance</a> method in the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class will release the counter and, if the reuse option is selected for that category, the instance of the counter will be reused. This could cause a race condition if another process or even another part of the code is trying to write to the counter instance.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Performance counter categories installed with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnlong-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE --> use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<em>&lt;category name&gt;</em>\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the <code>fileMappingSize</code> attribute value for the <code>performanceCounters</code> element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry. For more information about the file mapping size, see <a href=\"../Topic/%3CperformanceCounters%3E%20Element.md\" data-linktype=\"relative-path\">&amp;lt;performanceCounters&amp;gt;</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory__ctor\" data-linktype=\"self-bookmark\">PerformanceCounterCategory()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> class, leaves the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property empty, and sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> property to the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory__ctor_System_String_\" data-linktype=\"self-bookmark\">PerformanceCounterCategory(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> class, sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property to the specified value, and sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> property to the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">PerformanceCounterCategory(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> class and sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> and <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> properties to the specified values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_CategoryHelp\" data-linktype=\"self-bookmark\">CategoryHelp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the category&#39;s help text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_CategoryName\" data-linktype=\"self-bookmark\">CategoryName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the performance object that defines this category.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_CategoryType\" data-linktype=\"self-bookmark\">CategoryType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the performance counter category type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_MachineName\" data-linktype=\"self-bookmark\">MachineName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the computer on which this category exists.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_CounterExists_System_String_\" data-linktype=\"self-bookmark\">CounterExists(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified counter is registered to this category, which is indicated by the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> and <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> properties.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_CounterExists_System_String_System_String_\" data-linktype=\"self-bookmark\">CounterExists(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified counter is registered to the specified category on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_CounterExists_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">CounterExists(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified counter is registered to the specified category on a remote computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_Diagnostics_CounterCreationDataCollection_\" data-linktype=\"self-bookmark\">Create(String,String,CounterCreationDataCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers the custom performance counter category containing the specified counters on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_Diagnostics_PerformanceCounterCategoryType_System_Diagnostics_CounterCreationDataCollection_\" data-linktype=\"self-bookmark\">Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers the custom performance counter category containing the specified counters on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">Create(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a custom performance counter category containing a single counter of type <code>NumberOfItems32</code> on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_Diagnostics_PerformanceCounterCategoryType_System_String_System_String_\" data-linktype=\"self-bookmark\">Create(String,String,PerformanceCounterCategoryType,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers the custom performance counter category containing a single counter of type <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Delete_System_String_\" data-linktype=\"self-bookmark\">Delete(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the category and its associated counters from the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Exists_System_String_\" data-linktype=\"self-bookmark\">Exists(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the category is registered on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_Exists_System_String_System_String_\" data-linktype=\"self-bookmark\">Exists(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the category is registered on the specified computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_GetCategories\" data-linktype=\"self-bookmark\">GetCategories()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a list of the performance counter categories that are registered on the local computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_GetCategories_System_String_\" data-linktype=\"self-bookmark\">GetCategories(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a list of the performance counter categories that are registered on the specified computer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_GetCounters\" data-linktype=\"self-bookmark\">GetCounters()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a list of the counters in a performance counter category that contains exactly one instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_GetCounters_System_String_\" data-linktype=\"self-bookmark\">GetCounters(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a list of the counters in a performance counter category that contains one or more instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_GetInstanceNames\" data-linktype=\"self-bookmark\">GetInstanceNames()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the list of performance object instances that are associated with this category.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_InstanceExists_System_String_\" data-linktype=\"self-bookmark\">InstanceExists(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified performance object instance exists in the category that is identified by this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object&#39;s <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_InstanceExists_System_String_System_String_\" data-linktype=\"self-bookmark\">InstanceExists(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a specified category on the local computer contains the specified performance object instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_InstanceExists_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">InstanceExists(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a specified category on a specified computer contains the specified performance object instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_PerformanceCounterCategory_ReadCategory\" data-linktype=\"self-bookmark\">ReadCategory()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads all the counter and performance object instance data that is associated with this performance counter category.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory__ctor\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounterCategory()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> class, leaves the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property empty, and sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> property to the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounterCategory ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> property must be set before associating this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> instance with a performance object on the server. Otherwise, an exception is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example accepts a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> name and a computer name from the command line.  It creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> using the constructor overload appropriate for the number of parameters provided, then displays its properties.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#4\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        // Create a PerformanceCounterCategory object using \n        // the appropriate constructor.\n        if (categoryName.Length==0)\n        {\n            pcc = new PerformanceCounterCategory();\n        }\n        else if(machineName.Length==0)\n        {\n            pcc = new PerformanceCounterCategory(categoryName);\n        }\n        else\n        {\n            pcc = new PerformanceCounterCategory(categoryName, machineName);\n        }\n\n        // Display the properties of the PerformanceCounterCategory object.\n        try\n        {\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName);\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName);\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp);\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Error getting the properties of the &quot; +\n                &quot;PerformanceCounterCategory object:&quot;);\n            Console.WriteLine(ex.Message);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#4\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            machineName = IIf(args(1) = &quot;.&quot;, &quot;&quot;, args(1))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        &#39; Create a PerformanceCounterCategory object using \n        &#39; the appropriate constructor.\n        If categoryName.Length = 0 Then\n            pcc = New PerformanceCounterCategory\n        ElseIf machineName.Length = 0 Then\n            pcc = New PerformanceCounterCategory(categoryName)\n        Else\n            pcc = New PerformanceCounterCategory(categoryName, machineName)\n        End If\n\n        &#39; Display the properties of the PerformanceCounterCategory object.\n        Try\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName)\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName)\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Error getting the properties of the &quot; &amp; _\n                &quot;PerformanceCounterCategory object:&quot;)\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounterCategory(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> class, sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property to the specified value, and sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> property to the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounterCategory (string categoryName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category, or performance object, with which to associate this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example accepts a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> name and a computer name from the command line. It creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> using the constructor overload that is appropriate for the number of parameters provided, then displays its properties.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#4\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        // Create a PerformanceCounterCategory object using \n        // the appropriate constructor.\n        if (categoryName.Length==0)\n        {\n            pcc = new PerformanceCounterCategory();\n        }\n        else if(machineName.Length==0)\n        {\n            pcc = new PerformanceCounterCategory(categoryName);\n        }\n        else\n        {\n            pcc = new PerformanceCounterCategory(categoryName, machineName);\n        }\n\n        // Display the properties of the PerformanceCounterCategory object.\n        try\n        {\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName);\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName);\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp);\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Error getting the properties of the &quot; +\n                &quot;PerformanceCounterCategory object:&quot;);\n            Console.WriteLine(ex.Message);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#4\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            machineName = IIf(args(1) = &quot;.&quot;, &quot;&quot;, args(1))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        &#39; Create a PerformanceCounterCategory object using \n        &#39; the appropriate constructor.\n        If categoryName.Length = 0 Then\n            pcc = New PerformanceCounterCategory\n        ElseIf machineName.Length = 0 Then\n            pcc = New PerformanceCounterCategory(categoryName)\n        Else\n            pcc = New PerformanceCounterCategory(categoryName, machineName)\n        End If\n\n        &#39; Display the properties of the PerformanceCounterCategory object.\n        Try\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName)\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName)\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Error getting the properties of the &quot; &amp; _\n                &quot;PerformanceCounterCategory object:&quot;)\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformanceCounterCategory(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> class and sets the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> and <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> properties to the specified values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PerformanceCounterCategory (string categoryName, string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category, or performance object, with which to associate this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer on which the performance counter category and its associated counters exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>machineName</code> syntax is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example accepts a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> name and a computer name from the command line. It creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> using the constructor overload that is appropriate for the number of parameters provided, then displays its properties.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#4\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        // Create a PerformanceCounterCategory object using \n        // the appropriate constructor.\n        if (categoryName.Length==0)\n        {\n            pcc = new PerformanceCounterCategory();\n        }\n        else if(machineName.Length==0)\n        {\n            pcc = new PerformanceCounterCategory(categoryName);\n        }\n        else\n        {\n            pcc = new PerformanceCounterCategory(categoryName, machineName);\n        }\n\n        // Display the properties of the PerformanceCounterCategory object.\n        try\n        {\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName);\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName);\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp);\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Error getting the properties of the &quot; +\n                &quot;PerformanceCounterCategory object:&quot;);\n            Console.WriteLine(ex.Message);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#4\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            machineName = IIf(args(1) = &quot;.&quot;, &quot;&quot;, args(1))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        &#39; Create a PerformanceCounterCategory object using \n        &#39; the appropriate constructor.\n        If categoryName.Length = 0 Then\n            pcc = New PerformanceCounterCategory\n        ElseIf machineName.Length = 0 Then\n            pcc = New PerformanceCounterCategory(categoryName)\n        Else\n            pcc = New PerformanceCounterCategory(categoryName, machineName)\n        End If\n\n        &#39; Display the properties of the PerformanceCounterCategory object.\n        Try\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName)\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName)\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Error getting the properties of the &quot; &amp; _\n                &quot;PerformanceCounterCategory object:&quot;)\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_CategoryHelp\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_CategoryHelp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CategoryHelp</div>        \r\n          </div>\r\n    \r\n            <p>Gets the category&#39;s help text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CategoryHelp { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A description of the performance object that this category measures.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property is <code>null</code>. The category name must be set before getting the category help.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> with the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory__ctor\" data-linktype=\"relative-path\">PerformanceCounterCategory()</a>. It prompts the user for the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> and computer names, then sets the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> and <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties from the entered values. It then displays the values of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, and CategoryHelp properties, or it displays an error message if the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> cannot be accessed.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#8\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc = new PerformanceCounterCategory();\n\n        // Prompt for fields and set the corresponding properties.\n        while (categoryName.Length==0)\n        {\n            Console.Write(&quot;Please enter a non-blank category name: &quot;);\n            categoryName = Console.ReadLine().Trim();\n            if (categoryName.Length&gt;0)\n            {\n                pcc.CategoryName = categoryName;\n            }\n        }\n        while (machineName.Length==0)\n        {\n            Console.Write(&quot;Enter a non-blank computer name [&#39;.&#39; for local]: &quot;);\n            machineName = Console.ReadLine().Trim();\n            if (machineName.Length&gt;0)\n            {\n                pcc.MachineName = machineName;\n            }\n        }\n\n        // Display the properties of the PerformanceCounterCategory object.\n        try\n        {\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName);\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName);\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp);\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Error getting the properties of the &quot; +\n                &quot;PerformanceCounterCategory object:&quot;);\n            Console.WriteLine(ex.Message);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#8\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As New PerformanceCounterCategory\n\n        &#39; Prompt for fields and set the corresponding properties.\n        While categoryName.Length = 0\n            Console.Write(&quot;Please enter a non-blank category name: &quot;)\n            categoryName = Console.ReadLine().Trim\n            If categoryName.Length &gt; 0 Then\n                pcc.CategoryName = categoryName\n            End If\n        End While\n        While machineName.Length = 0\n            Console.Write( _\n                &quot;Enter a non-blank computer name [&#39;.&#39; for local]: &quot;)\n            machineName = Console.ReadLine().Trim\n            If machineName.Length &gt; 0 Then\n                pcc.MachineName = machineName\n            End If\n        End While\n\n        &#39; Display the properties of the PerformanceCounterCategory object.\n        Try\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName)\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName)\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Error getting the properties of the &quot; &amp; _\n                &quot;PerformanceCounterCategory object:&quot;)\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_CategoryName\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_CategoryName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CategoryName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the performance object that defines this category.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CategoryName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the performance counter category, or performance object, with which to associate this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The CategoryName is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The CategoryName is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> with the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory__ctor\" data-linktype=\"relative-path\">PerformanceCounterCategory()</a>. It prompts the user for the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> and computer names, then sets the CategoryName and <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_MachineName_\" data-linktype=\"relative-path\">MachineName</a> properties from the entered values. It then displays the values of the CategoryName, <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_MachineName_\" data-linktype=\"relative-path\">MachineName</a>, and <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryHelp_\" data-linktype=\"relative-path\">CategoryHelp</a> properties, or it displays an error message if the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> cannot be accessed.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#8\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc = new PerformanceCounterCategory();\n\n        // Prompt for fields and set the corresponding properties.\n        while (categoryName.Length==0)\n        {\n            Console.Write(&quot;Please enter a non-blank category name: &quot;);\n            categoryName = Console.ReadLine().Trim();\n            if (categoryName.Length&gt;0)\n            {\n                pcc.CategoryName = categoryName;\n            }\n        }\n        while (machineName.Length==0)\n        {\n            Console.Write(&quot;Enter a non-blank computer name [&#39;.&#39; for local]: &quot;);\n            machineName = Console.ReadLine().Trim();\n            if (machineName.Length&gt;0)\n            {\n                pcc.MachineName = machineName;\n            }\n        }\n\n        // Display the properties of the PerformanceCounterCategory object.\n        try\n        {\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName);\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName);\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp);\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Error getting the properties of the &quot; +\n                &quot;PerformanceCounterCategory object:&quot;);\n            Console.WriteLine(ex.Message);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#8\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As New PerformanceCounterCategory\n\n        &#39; Prompt for fields and set the corresponding properties.\n        While categoryName.Length = 0\n            Console.Write(&quot;Please enter a non-blank category name: &quot;)\n            categoryName = Console.ReadLine().Trim\n            If categoryName.Length &gt; 0 Then\n                pcc.CategoryName = categoryName\n            End If\n        End While\n        While machineName.Length = 0\n            Console.Write( _\n                &quot;Enter a non-blank computer name [&#39;.&#39; for local]: &quot;)\n            machineName = Console.ReadLine().Trim\n            If machineName.Length &gt; 0 Then\n                pcc.MachineName = machineName\n            End If\n        End While\n\n        &#39; Display the properties of the PerformanceCounterCategory object.\n        Try\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName)\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName)\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Error getting the properties of the &quot; &amp; _\n                &quot;PerformanceCounterCategory object:&quot;)\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_CategoryType\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_CategoryType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CategoryType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the performance counter category type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.PerformanceCounterCategoryType CategoryType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CategoryType property indicates whether the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object can have multiple instances. The possible values are <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>, <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>, or <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>.  </p>\n<p> There are two types of performance counter categories: single-instance and multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnext-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE -->, the <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a> enumeration is used to indicate whether a performance counter can have multiple instances.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_MachineName\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_MachineName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MachineName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the computer on which this category exists.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MachineName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the computer on which the performance counter category and its associated counters exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The MachineName syntax is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> with the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory__ctor\" data-linktype=\"relative-path\">PerformanceCounterCategory()</a> constructor. It prompts the user for the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> and the computer names, then sets the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> and MachineName properties from the entered values. It then displays the values of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a>, MachineName, and <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryHelp_\" data-linktype=\"relative-path\">CategoryHelp</a> properties, or it displays an error message if the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> cannot be accessed.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#8\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc = new PerformanceCounterCategory();\n\n        // Prompt for fields and set the corresponding properties.\n        while (categoryName.Length==0)\n        {\n            Console.Write(&quot;Please enter a non-blank category name: &quot;);\n            categoryName = Console.ReadLine().Trim();\n            if (categoryName.Length&gt;0)\n            {\n                pcc.CategoryName = categoryName;\n            }\n        }\n        while (machineName.Length==0)\n        {\n            Console.Write(&quot;Enter a non-blank computer name [&#39;.&#39; for local]: &quot;);\n            machineName = Console.ReadLine().Trim();\n            if (machineName.Length&gt;0)\n            {\n                pcc.MachineName = machineName;\n            }\n        }\n\n        // Display the properties of the PerformanceCounterCategory object.\n        try\n        {\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName);\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName);\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp);\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Error getting the properties of the &quot; +\n                &quot;PerformanceCounterCategory object:&quot;);\n            Console.WriteLine(ex.Message);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#8\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As New PerformanceCounterCategory\n\n        &#39; Prompt for fields and set the corresponding properties.\n        While categoryName.Length = 0\n            Console.Write(&quot;Please enter a non-blank category name: &quot;)\n            categoryName = Console.ReadLine().Trim\n            If categoryName.Length &gt; 0 Then\n                pcc.CategoryName = categoryName\n            End If\n        End While\n        While machineName.Length = 0\n            Console.Write( _\n                &quot;Enter a non-blank computer name [&#39;.&#39; for local]: &quot;)\n            machineName = Console.ReadLine().Trim\n            If machineName.Length &gt; 0 Then\n                pcc.MachineName = machineName\n            End If\n        End While\n\n        &#39; Display the properties of the PerformanceCounterCategory object.\n        Try\n            Console.WriteLine(&quot;  Category:  {0}&quot;, pcc.CategoryName)\n            Console.WriteLine(&quot;  Computer:  {0}&quot;, pcc.MachineName)\n            Console.WriteLine(&quot;  Help text: {0}&quot;, pcc.CategoryHelp)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Error getting the properties of the &quot; &amp; _\n                &quot;PerformanceCounterCategory object:&quot;)\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_CounterExists_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_CounterExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterExists(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified counter is registered to this category, which is indicated by the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> and <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CounterExists (string counterName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter to look for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the counter is registered to the category that is specified by the <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> and <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.MachineName*</span> properties; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property has not been set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must set the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> property before calling this method. Otherwise, an exception is thrown.  </p>\n<p> If you have not set the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_MachineName_\" data-linktype=\"relative-path\">MachineName</a> property, this method uses the local computer (&quot;.&quot;).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object using the appropriate <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory__ctor_\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. It then uses the CounterExists method to determine whether the specified <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> exists, and informs the user.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#4\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string counterName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        bool objectExists = false;\n        PerformanceCounterCategory pcc;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            counterName = args[1];\n            machineName = (args[2]==&quot;.&quot;? &quot;&quot;: args[2]);\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            if (machineName.Length==0)\n            {\n                pcc = new PerformanceCounterCategory(categoryName);\n            }\n            else\n            {\n                pcc = new PerformanceCounterCategory(categoryName, machineName);\n            }\n\n            // Check whether the specified counter exists.\n            // Use the per-instance overload of CounterExists.\n            objectExists = pcc.CounterExists(counterName);\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; +\n                &quot;counter \\&quot;{0}\\&quot; in category \\&quot;{1}\\&quot; on &quot;+\n                (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;)+ &quot;<br>&quot; + \n                ex.Message, counterName, categoryName, machineName);\n            return;\n        }\n\n        // Tell the user whether the counter exists.\n        Console.WriteLine(&quot;Counter \\&quot;{0}\\&quot; &quot; + (objectExists? &quot;exists&quot;: &quot;does not exist&quot;) + \n            &quot; in category \\&quot;{1}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;), \n            counterName, pcc.CategoryName, pcc.MachineName);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#4\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim counterName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim objectExists As Boolean = False\n        Dim pcc As PerformanceCounterCategory\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            counterName = args(1)\n            machineName = IIf(args(2) = &quot;.&quot;, &quot;&quot;, args(2))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Try\n            If machineName.Length = 0 Then\n                pcc = New PerformanceCounterCategory(categoryName)\n            Else\n                pcc = New PerformanceCounterCategory(categoryName, machineName)\n            End If\n\n            &#39; Check whether the specified counter exists.\n            &#39; Use the per-instance overload of CounterExists.\n            objectExists = pcc.CounterExists(counterName)\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; &amp; _\n                &quot;counter &quot;&quot;{0}&quot;&quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;) &amp; vbCrLf &amp; _\n                ex.Message, counterName, categoryName, machineName)\n            Return\n        End Try\n\n        &#39; Tell the user whether the counter exists.\n        Console.WriteLine(&quot;Counter &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            IIf(objectExists, &quot;exists&quot;, &quot;does not exist&quot;) &amp; _\n            &quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;), _\n            counterName, pcc.CategoryName, pcc.MachineName)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_CounterExists_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_CounterExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterExists(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified counter is registered to the specified category on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool CounterExists (string counterName, string categoryName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter to look for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category, or performance object, with which the specified performance counter is associated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if the counter is registered to the specified category on the local computer; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category name does not exist.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It uses the static overloads of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CounterExists_\" data-linktype=\"relative-path\">CounterExists</a> method to determine whether the specified <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> name exists in the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. The overload is selected based on whether a computer name is provided.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#8\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string counterName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        bool objectExists = false;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            counterName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Check whether the specified counter exists.\n            // Use the static forms of the CounterExists method.\n            if (machineName.Length==0)\n            {\n                objectExists = PerformanceCounterCategory.CounterExists(counterName, categoryName);\n            }\n            else\n            {\n                objectExists = PerformanceCounterCategory.CounterExists(counterName, categoryName, machineName);\n            }\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; +\n                &quot;counter \\&quot;{0}\\&quot; in category \\&quot;{1}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;) + &quot;<br>&quot; + \n                ex.Message, counterName, categoryName, machineName);\n            return;\n        }\n\n        // Tell the user whether the counter exists.\n        Console.WriteLine(&quot;Counter \\&quot;{0}\\&quot; &quot;+ (objectExists? &quot;exists&quot;: &quot;does not exist&quot;) + \n            &quot; in category \\&quot;{1}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;), \n            counterName, categoryName, machineName);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#8\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim counterName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim objectExists As Boolean = False\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            counterName = args(1)\n            machineName = IIf(args(2) = &quot;.&quot;, &quot;&quot;, args(2))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Try\n            &#39; Check whether the specified counter exists.\n            &#39; Use the static forms of the CounterExists method.\n            If machineName.Length = 0 Then\n                objectExists = PerformanceCounterCategory.CounterExists( _\n                    counterName, categoryName)\n            Else\n                objectExists = PerformanceCounterCategory.CounterExists( _\n                    counterName, categoryName, machineName)\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; &amp; _\n                &quot;counter &quot;&quot;{0}&quot;&quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;) &amp; vbCrLf &amp; _\n                ex.Message, counterName, categoryName, machineName)\n            Return\n        End Try\n\n        &#39; Tell the user whether the counter exists.\n        Console.WriteLine(&quot;Counter &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            IIf(objectExists, &quot;exists&quot;, &quot;does not exist&quot;) &amp; _\n            &quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;), _\n            counterName, categoryName, machineName)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_CounterExists_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_CounterExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CounterExists(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified counter is registered to the specified category on a remote computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool CounterExists (string counterName, string categoryName, string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter to look for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category, or performance object, with which the specified performance counter is associated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the computer on which the performance counter category and its associated counters exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if the counter is registered to the specified category on the specified computer; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>counterName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>machineName</code> is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category name does not exist.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> exists. It gets a category name, counter name, and computer name from the command line, if they are given. It uses the static overloads of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CounterExists_\" data-linktype=\"relative-path\">CounterExists</a> method to determine whether the specified <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> name exists in the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. The overload is selected based on whether a computer name is provided.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#8\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string counterName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        bool objectExists = false;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            counterName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Check whether the specified counter exists.\n            // Use the static forms of the CounterExists method.\n            if (machineName.Length==0)\n            {\n                objectExists = PerformanceCounterCategory.CounterExists(counterName, categoryName);\n            }\n            else\n            {\n                objectExists = PerformanceCounterCategory.CounterExists(counterName, categoryName, machineName);\n            }\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; +\n                &quot;counter \\&quot;{0}\\&quot; in category \\&quot;{1}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;) + &quot;<br>&quot; + \n                ex.Message, counterName, categoryName, machineName);\n            return;\n        }\n\n        // Tell the user whether the counter exists.\n        Console.WriteLine(&quot;Counter \\&quot;{0}\\&quot; &quot;+ (objectExists? &quot;exists&quot;: &quot;does not exist&quot;) + \n            &quot; in category \\&quot;{1}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;), \n            counterName, categoryName, machineName);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#8\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim counterName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim objectExists As Boolean = False\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            counterName = args(1)\n            machineName = IIf(args(2) = &quot;.&quot;, &quot;&quot;, args(2))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Try\n            &#39; Check whether the specified counter exists.\n            &#39; Use the static forms of the CounterExists method.\n            If machineName.Length = 0 Then\n                objectExists = PerformanceCounterCategory.CounterExists( _\n                    counterName, categoryName)\n            Else\n                objectExists = PerformanceCounterCategory.CounterExists( _\n                    counterName, categoryName, machineName)\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; &amp; _\n                &quot;counter &quot;&quot;{0}&quot;&quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;) &amp; vbCrLf &amp; _\n                ex.Message, counterName, categoryName, machineName)\n            Return\n        End Try\n\n        &#39; Tell the user whether the counter exists.\n        Console.WriteLine(&quot;Counter &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            IIf(objectExists, &quot;exists&quot;, &quot;does not exist&quot;) &amp; _\n            &quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;), _\n            counterName, categoryName, machineName)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_Diagnostics_CounterCreationDataCollection_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,String,CounterCreationDataCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Registers the custom performance counter category containing the specified counters on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.CounterCreationDataCollection counterData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the custom performance counter category to create and register with the system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A description of the custom category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> that specifies the counters to create as part of the new category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> that is associated with the new custom category, or performance object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>A counter name that is specified within the <code>counterData</code> collection is <code>null</code> or an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> A counter that is specified within the <code>counterData</code> collection already exists.  </p>\n<p> -or-  </p>\n<p> The <code>counterName</code> parameter has invalid syntax. It might contain backslash characters (&quot;\\&quot;) or have length greater than 80 characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category already exists on the local computer.  </p>\n<p> -or-  </p>\n<p> The layout of the <code>counterData</code> collection is incorrect for base counters. A counter of type <code>AverageCount64</code>, <code>AverageTimer32</code>, <code>CounterMultiTimer</code>, <code>CounterMultiTimerInverse</code>, <code>CounterMultiTimer100Ns</code>, <code>CounterMultiTimer100NsInverse</code>, <code>RawFraction</code>, <code>SampleFraction</code> or <code>SampleCounter</code> has to be immediately followed by one of the base counter types (<code>AverageBase</code>, <code>MultiBase</code>, <code>RawBase</code>, or <code>SampleBase</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object named &quot;orders&quot; exists. If not, it creates the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object by using a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> object that contains two performance counters.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerfCounter_ccd#1\">   if (  !PerformanceCounterCategory::Exists( &quot;Orders&quot; ) )\n   {\n      CounterCreationData^ milk = gcnew CounterCreationData;\n      milk-&gt;CounterName = &quot;milk&quot;;\n      milk-&gt;CounterType = PerformanceCounterType::NumberOfItems32;\n\n      CounterCreationData^ milkPerSecond = gcnew CounterCreationData;\n      milkPerSecond-&gt;CounterName = &quot;milk orders/second&quot;;\n      milkPerSecond-&gt;CounterType = PerformanceCounterType::RateOfCountsPerSecond32;\n\n      CounterCreationDataCollection^ ccds = gcnew CounterCreationDataCollection;\n      ccds-&gt;Add( milkPerSecond );\n      ccds-&gt;Add( milk );\n      PerformanceCounterCategory::Create( &quot;Orders&quot;, &quot;Number of processed orders&quot;, ccds );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter_ccd#1\">        If Not PerformanceCounterCategory.Exists(&quot;Orders&quot;) Then        \n            Dim milk As New CounterCreationData()\n            milk.CounterName = &quot;milk&quot;\n            milk.CounterType = PerformanceCounterType.NumberOfItems32\n            \n            Dim milkPerSecond As New CounterCreationData()\n            milkPerSecond.CounterName = &quot;milk orders/second&quot;\n            milkPerSecond.CounterType = PerformanceCounterType.RateOfCountsPerSecond32\n            \n            Dim ccds As New CounterCreationDataCollection()\n            ccds.Add(milkPerSecond)\n            ccds.Add(milk)\n            \n            PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Number of processed orders&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, ccds)\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"PerfCounter_ccd#1\">        if (!PerformanceCounterCategory.Exists(&quot;Orders&quot;))\n        {\n            CounterCreationData milk = new CounterCreationData();\n            milk.CounterName = &quot;milk&quot;;\n            milk.CounterType = PerformanceCounterType.NumberOfItems32;\n\n            CounterCreationData milkPerSecond = new CounterCreationData();\n            milkPerSecond.CounterName = &quot;milk orders/second&quot;;\n            milkPerSecond.CounterType = PerformanceCounterType.RateOfCountsPerSecond32;\n\n            CounterCreationDataCollection ccds = new CounterCreationDataCollection();\n            ccds.Add(milkPerSecond);\n            ccds.Add(milk);\n\n            PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Number of processed orders&quot;,\n                PerformanceCounterCategoryType.SingleInstance, ccds);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_Diagnostics_PerformanceCounterCategoryType_System_Diagnostics_CounterCreationDataCollection_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,String,PerformanceCounterCategoryType,CounterCreationDataCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Registers the custom performance counter category containing the specified counters on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, System.Diagnostics.CounterCreationDataCollection counterData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the custom performance counter category to create and register with the system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A description of the custom category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> that specifies the counters to create as part of the new category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> that is associated with the new custom category, or performance object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>A counter name that is specified within the <code>counterData</code> collection is <code>null</code> or an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> A counter that is specified within the <code>counterData</code> collection already exists.  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> has invalid syntax. It might contain backslash characters (&quot;\\&quot;) or have length greater than 80 characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>counterData</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>categoryType</code> value is outside of the range of the following values: <code>MultiInstance</code>, <code>SingleInstance</code>, or <code>Unknown</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category already exists on the local computer.  </p>\n<p> -or-  </p>\n<p> The layout of the <code>counterData</code> collection is incorrect for base counters. A counter of type <code>AverageCount64</code>, <code>AverageTimer32</code>, <code>CounterMultiTimer</code>, <code>CounterMultiTimerInverse</code>, <code>CounterMultiTimer100Ns</code>, <code>CounterMultiTimer100NsInverse</code>, <code>RawFraction</code>, <code>SampleFraction</code>, or <code>SampleCounter</code> must be immediately followed by one of the base counter types (<code>AverageBase</code>, <code>MultiBase</code>, <code>RawBase</code>, or <code>SampleBase</code>).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>categoryType</code> parameter specifies whether the performance counter category is single-instance or multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the  .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnext-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE -->, the <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a> enumeration is used to indicate whether a performance counter can have multiple instances.  </p>\n<p> Performance counter categories installed with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnlong-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE --> use separate shared memory, with each performance counter category having its own memory.  You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<em>&lt;category name&gt;</em>\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the <code>fileMappingSize</code> attribute value for the <code>performanceCounters</code> element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Create method. The example shows how to create a custom, multi-instance performance counter category for the number of orders per second.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategoryType#2\">            CounterCreationData data1 = new CounterCreationData(&quot;Trucks&quot;,\n                &quot;Number of orders&quot;, PerformanceCounterType.NumberOfItems32);\n            CounterCreationData data2 = new CounterCreationData(&quot;Rate of sales&quot;,\n                &quot;Orders/second&quot;, PerformanceCounterType.RateOfCountsPerSecond32);\n            CounterCreationDataCollection ccds = new CounterCreationDataCollection();\n            ccds.Add(data1);\n            ccds.Add(data2);\n            Console.WriteLine(&quot;Creating Orders custom counter.&quot;);\n            if (!PerformanceCounterCategory.Exists(&quot;Orders&quot;))\n                PerformanceCounterCategory.Create(&quot;Orders&quot;,\n                    &quot;Processed orders&quot;,\n                    PerformanceCounterCategoryType.MultiInstance,\n                    ccds);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategoryType#2\">            Dim data1 As New CounterCreationData(&quot;Trucks&quot;, &quot;Number of orders&quot;, PerformanceCounterType.NumberOfItems32)\n            Dim data2 As New CounterCreationData(&quot;Rate of sales&quot;, &quot;Orders/second&quot;, PerformanceCounterType.RateOfCountsPerSecond32)\n            Dim ccds As New CounterCreationDataCollection()\n            ccds.Add(data1)\n            ccds.Add(data2)\n            Console.WriteLine(&quot;Creating Orders custom counter.&quot;)\n            If Not PerformanceCounterCategory.Exists(&quot;Orders&quot;) Then\n                PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Processed orders&quot;, PerformanceCounterCategoryType.MultiInstance, ccds)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a custom performance counter category containing a single counter of type <code>NumberOfItems32</code> on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, string counterName, string counterHelp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the custom performance counter category to create and register with the system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A description of the custom category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a new counter, of type <code>NumberOfItems32</code>, to create as part of the new category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A description of the counter that is associated with the new custom category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> that is associated with the new system category, or performance object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>counterName</code> is <code>null</code> or is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The counter that is specified by <code>counterName</code> already exists.  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> has invalid syntax. It might contain backslash characters (&quot;\\&quot;) or have length greater than 80 characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category already exists on the local computer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>counterHelp</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> and single <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> with help text for each, using the Create method.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#2\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim counterName As String = &quot;&quot;\n        Dim categoryHelp As String = &quot;&quot;\n        Dim counterHelp As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            counterName = args(1)\n            categoryHelp = args(2)\n            counterHelp = args(3)\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Console.WriteLine(&quot;Category name: &quot;&quot;{0}&quot;&quot;&quot;, categoryName)\n        Console.WriteLine(&quot;Category help: &quot;&quot;{0}&quot;&quot;&quot;, categoryHelp)\n        Console.WriteLine(&quot;Counter name:  &quot;&quot;{0}&quot;&quot;&quot;, counterName)\n        Console.WriteLine(&quot;Counter help:  &quot;&quot;{0}&quot;&quot;&quot;, counterHelp)\n\n        &#39; Use the Create overload that creates a single counter.\n        Try\n            pcc = PerformanceCounterCategory.Create( _\n                categoryName, categoryHelp, counterName, counterHelp)\n            Console.WriteLine(&quot;Category &quot;&quot;{0}&quot;&quot; created.&quot;, pcc.CategoryName)\n\n        Catch ex As Exception\n            Console.WriteLine( _\n                &quot;Unable to create the above category and counter:&quot; &amp; _\n                vbCrLf &amp; ex.Message)\n        End Try\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#2\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string counterName = &quot;&quot;;\n        string categoryHelp = &quot;&quot;;\n        string counterHelp = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            counterName = args[1];\n            categoryHelp = args[2];\n            counterHelp = args[3];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        Console.WriteLine(&quot;Category name: \\&quot;{0}\\&quot;&quot;, categoryName);\n        Console.WriteLine(&quot;Category help: \\&quot;{0}\\&quot;&quot;, categoryHelp);\n        Console.WriteLine(&quot;Counter name:  \\&quot;{0}\\&quot;&quot;, counterName);\n        Console.WriteLine(&quot;Counter help:  \\&quot;{0}\\&quot;&quot;, counterHelp);\n\n        // Use the Create overload that creates a single counter.\n        try\n        {\n            pcc = PerformanceCounterCategory.Create(categoryName, categoryHelp, counterName, counterHelp);\n            Console.WriteLine(&quot;Category \\&quot;{0}\\&quot; created.&quot;, pcc.CategoryName);\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to create the above category and counter:&quot; + &quot;<br>&quot; + ex.Message);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Create_System_String_System_String_System_Diagnostics_PerformanceCounterCategoryType_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,String,PerformanceCounterCategoryType,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Registers the custom performance counter category containing a single counter of type <a class=\"xref\" href=\"system.diagnostics.performancecountertype\" data-linktype=\"relative-path\">PerformanceCounterType</a> on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.PerformanceCounterCategory Create (string categoryName, string categoryHelp, System.Diagnostics.PerformanceCounterCategoryType categoryType, string counterName, string counterHelp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the custom performance counter category to create and register with the system.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A description of the custom category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a> values specifying whether the category is <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>, <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>, or <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of a new counter to create as part of the new category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>counterHelp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A description of the counter that is associated with the new custom category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> that is associated with the new system category, or performance object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>counterName</code> is <code>null</code> or is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The counter that is specified by <code>counterName</code> already exists.  </p>\n<p> -or-  </p>\n<p> <code>counterName</code> has invalid syntax. It might contain backslash characters (&quot;\\&quot;) or have length greater than 80 characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category already exists on the local computer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>categoryName</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>counterHelp</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>categoryType</code> parameter specifies whether the performance counter category is single-instance or multi-instance. By default, a category is single-instance when it is created and becomes multi-instance when another instance is added. Categories are created when an application is set up, and instances are added at run time. In the .NET Framework versions 1.0 and 1.1, it is not necessary to know if a performance counter category is multi-instance or single-instance. In the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnext-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE -->, the <a class=\"xref\" href=\"system.diagnostics.performancecountercategorytype\" data-linktype=\"relative-path\">PerformanceCounterCategoryType</a> enumeration is used to indicate whether a performance counter can have multiple instances.  </p>\n<p> Performance counter categories installed with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnlong-md.md&quot; -->.NET Framework 2.0<!--END INCLUDE --> use separate shared memory, with each performance counter category having its own memory. You can specify the size of separate shared memory by creating a DWORD named FileMappingSize in the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\<em>&lt;category name&gt;</em>\\Performance. The FileMappingSize value is set to the shared memory size of the category. The default size is 131072 decimal. If the FileMappingSize value is not present, the <code>fileMappingSize</code> attribute value for the <code>performanceCounters</code> element specified in the Machine.config file is used, causing additional overhead for configuration file processing. You can realize a performance improvement for application startup by setting the file mapping size in the registry.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> It is strongly recommended that new performance counter categories be created during the installation of the application, not during the execution of the application. This allows time for the operating system to refresh its list of registered performance counter categories. If the list has not been refreshed, the attempt to use the category will fail.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Create method. The example shows how to create a custom, single instance performance counter category.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategoryType#3\">            Console.WriteLine(&quot;Creating Inventory custom counter&quot;);\n            if (!PerformanceCounterCategory.Exists(&quot;Inventory&quot;))\n                PerformanceCounterCategory.Create(&quot;Inventory&quot;,\n                    &quot;Truck inventory&quot;,\n                    PerformanceCounterCategoryType.SingleInstance,\n                    &quot;Trucks&quot;, &quot;Number of trucks on hand&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategoryType#3\">            Console.WriteLine(&quot;Creating Inventory custom counter&quot;)\n            If Not PerformanceCounterCategory.Exists(&quot;Inventory&quot;) Then\n                PerformanceCounterCategory.Create(&quot;Inventory&quot;, &quot;Truck inventory&quot;, PerformanceCounterCategoryType.SingleInstance, &quot;Trucks&quot;, &quot;Number of trucks on hand&quot;)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Delete_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Delete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Delete(String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the category and its associated counters from the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Delete (string categoryName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the custom performance counter category to delete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter has invalid syntax. It might contain backslash characters (&quot;\\&quot;) or have length greater than 80 characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category cannot be deleted because it is not a custom category.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can delete only custom performance counter categories from the system. You cannot delete a counter from a category. To do so, delete the category and recreate the category with the counters you want to retain. To avoid an exception, confirm that the category exists before you attempt to delete it.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Delete method to delete a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> and the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects that it contains.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#6\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n\n        // Copy the supplied argument into the local variable.\n        try\n        {\n            categoryName = args[0];\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(&quot;Missing argument identifying category to be deleted.&quot;);\n        }\n\n        // Delete the specified category.\n        try\n        {\n            if (PerformanceCounterCategory.Exists(categoryName))\n            {\n                PerformanceCounterCategory.Delete(categoryName);\n                Console.WriteLine(&quot;Category \\&quot;{0}\\&quot; deleted from this computer.&quot;, categoryName);\n            }\n            else\n            {\n                Console.WriteLine(&quot;Category name not found&quot;);\n            }\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to delete &quot; +\n                &quot;category \\&quot;{0}\\&quot; from this computer:&quot; + &quot;<br>&quot; + ex.Message, categoryName);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.OtherMembers#6\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n\n        &#39; Copy the supplied argument into the local variable.\n        Try\n            categoryName = args(0)\n        Catch ex As Exception\n            Console.WriteLine(&quot;Missing argument identifying category to be deleted.&quot;)\n        End Try\n\n        &#39; Delete the specified category.\n        Try\n            If (PerformanceCounterCategory.Exists(categoryName)) Then\n                PerformanceCounterCategory.Delete(categoryName)\n                Console.WriteLine( _\n                    &quot;Category &quot;&quot;{0}&quot;&quot; deleted from this computer.&quot;, categoryName)\n            Else\n                Console.WriteLine(&quot;Category name not found&quot;)\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to delete &quot; &amp; _\n                &quot;category &quot;&quot;{0}&quot;&quot; from this computer:&quot; &amp; vbCrLf &amp; _\n                ex.Message, categoryName)\n        End Try\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Exists_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Exists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exists(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the category is registered on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Exists (string categoryName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category to look for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the category is registered; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability. If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter. There is no way to avoid the performance counter search when reading from performance counters.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object named &quot;orders&quot; exists. If not, it creates the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object by using a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> object that contains two performance counters.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerfCounter_ccd#1\">   if (  !PerformanceCounterCategory::Exists( &quot;Orders&quot; ) )\n   {\n      CounterCreationData^ milk = gcnew CounterCreationData;\n      milk-&gt;CounterName = &quot;milk&quot;;\n      milk-&gt;CounterType = PerformanceCounterType::NumberOfItems32;\n\n      CounterCreationData^ milkPerSecond = gcnew CounterCreationData;\n      milkPerSecond-&gt;CounterName = &quot;milk orders/second&quot;;\n      milkPerSecond-&gt;CounterType = PerformanceCounterType::RateOfCountsPerSecond32;\n\n      CounterCreationDataCollection^ ccds = gcnew CounterCreationDataCollection;\n      ccds-&gt;Add( milkPerSecond );\n      ccds-&gt;Add( milk );\n      PerformanceCounterCategory::Create( &quot;Orders&quot;, &quot;Number of processed orders&quot;, ccds );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter_ccd#1\">        If Not PerformanceCounterCategory.Exists(&quot;Orders&quot;) Then        \n            Dim milk As New CounterCreationData()\n            milk.CounterName = &quot;milk&quot;\n            milk.CounterType = PerformanceCounterType.NumberOfItems32\n            \n            Dim milkPerSecond As New CounterCreationData()\n            milkPerSecond.CounterName = &quot;milk orders/second&quot;\n            milkPerSecond.CounterType = PerformanceCounterType.RateOfCountsPerSecond32\n            \n            Dim ccds As New CounterCreationDataCollection()\n            ccds.Add(milkPerSecond)\n            ccds.Add(milk)\n            \n            PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Number of processed orders&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, ccds)\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"PerfCounter_ccd#1\">        if (!PerformanceCounterCategory.Exists(&quot;Orders&quot;))\n        {\n            CounterCreationData milk = new CounterCreationData();\n            milk.CounterName = &quot;milk&quot;;\n            milk.CounterType = PerformanceCounterType.NumberOfItems32;\n\n            CounterCreationData milkPerSecond = new CounterCreationData();\n            milkPerSecond.CounterName = &quot;milk orders/second&quot;;\n            milkPerSecond.CounterType = PerformanceCounterType.RateOfCountsPerSecond32;\n\n            CounterCreationDataCollection ccds = new CounterCreationDataCollection();\n            ccds.Add(milkPerSecond);\n            ccds.Add(milk);\n\n            PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Number of processed orders&quot;,\n                PerformanceCounterCategoryType.SingleInstance, ccds);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_Exists_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_Exists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exists(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the category is registered on the specified computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Exists (string categoryName, string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the performance counter category to look for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the computer to examine for the category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the category is registered; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>machineName</code> parameter is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The network path cannot be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>The caller does not have the required permission.  </p>\n<p> -or-  </p>\n<p> Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use of the Exists method can result in a noticeable performance penalty while all performance counters on the machine are checked for availability. If you are only writing to a performance counter, you can avoid the global search for performance counters by creating the performance counter when the application is installed and assuming the category exists when accessing the counter. There is no way to avoid the performance counter search when reading from performance counters.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object named <code>Orders</code> exists. If it does not exist, the example creates the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object by using a <a class=\"xref\" href=\"system.diagnostics.countercreationdatacollection\" data-linktype=\"relative-path\">CounterCreationDataCollection</a> object that contains two performance counters.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerfCounter_ccd#1\">   if (  !PerformanceCounterCategory::Exists( &quot;Orders&quot; ) )\n   {\n      CounterCreationData^ milk = gcnew CounterCreationData;\n      milk-&gt;CounterName = &quot;milk&quot;;\n      milk-&gt;CounterType = PerformanceCounterType::NumberOfItems32;\n\n      CounterCreationData^ milkPerSecond = gcnew CounterCreationData;\n      milkPerSecond-&gt;CounterName = &quot;milk orders/second&quot;;\n      milkPerSecond-&gt;CounterType = PerformanceCounterType::RateOfCountsPerSecond32;\n\n      CounterCreationDataCollection^ ccds = gcnew CounterCreationDataCollection;\n      ccds-&gt;Add( milkPerSecond );\n      ccds-&gt;Add( milk );\n      PerformanceCounterCategory::Create( &quot;Orders&quot;, &quot;Number of processed orders&quot;, ccds );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"PerfCounter_ccd#1\">        If Not PerformanceCounterCategory.Exists(&quot;Orders&quot;) Then        \n            Dim milk As New CounterCreationData()\n            milk.CounterName = &quot;milk&quot;\n            milk.CounterType = PerformanceCounterType.NumberOfItems32\n            \n            Dim milkPerSecond As New CounterCreationData()\n            milkPerSecond.CounterName = &quot;milk orders/second&quot;\n            milkPerSecond.CounterType = PerformanceCounterType.RateOfCountsPerSecond32\n            \n            Dim ccds As New CounterCreationDataCollection()\n            ccds.Add(milkPerSecond)\n            ccds.Add(milk)\n            \n            PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Number of processed orders&quot;, _\n                   PerformanceCounterCategoryType.SingleInstance, ccds)\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"PerfCounter_ccd#1\">        if (!PerformanceCounterCategory.Exists(&quot;Orders&quot;))\n        {\n            CounterCreationData milk = new CounterCreationData();\n            milk.CounterName = &quot;milk&quot;;\n            milk.CounterType = PerformanceCounterType.NumberOfItems32;\n\n            CounterCreationData milkPerSecond = new CounterCreationData();\n            milkPerSecond.CounterName = &quot;milk orders/second&quot;;\n            milkPerSecond.CounterType = PerformanceCounterType.RateOfCountsPerSecond32;\n\n            CounterCreationDataCollection ccds = new CounterCreationDataCollection();\n            ccds.Add(milkPerSecond);\n            ccds.Add(milk);\n\n            PerformanceCounterCategory.Create(&quot;Orders&quot;, &quot;Number of processed orders&quot;,\n                PerformanceCounterCategoryType.SingleInstance, ccds);\n\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_GetCategories\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_GetCategories_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCategories()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a list of the performance counter categories that are registered on the local computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.PerformanceCounterCategory[] GetCategories ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> objects indicating the categories that are registered on the local computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCategories_\" data-linktype=\"relative-path\">GetCategories</a> method to return an array of <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> objects from the local computer or a specified computer. It converts the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> array into an array of category names, which it sorts and displays for the user. The <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCategories_\" data-linktype=\"relative-path\">GetCategories</a> overload is selected based on whether a computer name was specified.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#2\">    Sub Main(ByVal args() As String)\n        Dim machineName As String = &quot;&quot;\n        Dim categories() As PerformanceCounterCategory\n\n        &#39; Copy the machine name argument into the local variable.\n        Try\n            machineName = IIf(args(0) = &quot;.&quot;, &quot;&quot;, args(0))\n        Catch ex As Exception\n        End Try\n\n        &#39; Generate a list of categories registered on the specified computer.\n        Try\n            If machineName.Length &gt; 0 Then\n                categories = _\n                    PerformanceCounterCategory.GetCategories(machineName)\n            Else\n                categories = PerformanceCounterCategory.GetCategories()\n            End If\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to get categories on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, &quot;computer &quot;&quot;{0}&quot;&quot;:&quot;, _\n                &quot;this computer:&quot;), machineName)\n            Console.WriteLine(ex.Message)\n            Return\n        End Try\n\n        Console.WriteLine(&quot;These categories are registered on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{0}&quot;&quot;:&quot;, &quot;this computer:&quot;), machineName)\n\n        &#39; Create and sort an array of category names.\n        Dim categoryNames(categories.Length - 1) As String\n        Dim objX As Integer\n        For objX = 0 To categories.Length - 1\n            Console.WriteLine(&quot;{0}, {1}&quot;, objX, categories(objX).CategoryName)\n            categoryNames(objX) = categories(objX).CategoryName\n        Next objX\n        Array.Sort(categoryNames)\n\n        For objX = 0 To categories.Length - 1\n            Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, categoryNames(objX))\n        Next objX\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#2\">public:\n    static void Main(array&lt;String^&gt;^ args)\n    {\n        String^ machineName = &quot;&quot;;\n        array&lt;PerformanceCounterCategory^&gt;^ categories;\n\n        // Copy the machine name argument into the local variable.\n        try\n        {\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n        }\n        catch (...)\n        {\n        }\n\n        // Generate a list of categories registered on the specified computer.\n        try\n        {\n            if (machineName-&gt;Length &gt; 0)\n            {\n                categories = PerformanceCounterCategory::GetCategories(machineName);\n            }\n            else\n            {\n                categories = PerformanceCounterCategory::GetCategories();\n            }\n        }\n        catch(Exception^ ex)\n        {\n            Console::WriteLine(&quot;Unable to get categories on &quot; +\n                (machineName-&gt;Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n            Console::WriteLine(ex-&gt;Message);\n            return;\n        }\n\n        Console::WriteLine(&quot;These categories are registered on &quot; +\n            (machineName-&gt;Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n\n        // Create and sort an array of category names.\n        array&lt;String^&gt;^ categoryNames = gcnew array&lt;String^&gt;(categories-&gt;Length);\n        int objX;\n        for (objX = 0; objX &lt; categories-&gt;Length; objX++)\n        {\n            categoryNames[objX] = categories[objX]-&gt;CategoryName;\n        }\n        Array::Sort(categoryNames);\n\n        for (objX = 0; objX &lt; categories-&gt;Length; objX++)\n        {\n            Console::WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, categoryNames[objX]);\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#2\">    public static void Main(string[] args)\n    {\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory[] categories;\n\n        // Copy the machine name argument into the local variable.\n        try\n        {\n            machineName = args[0]==&quot;.&quot;? &quot;&quot;: args[0];\n        }\n        catch\n        {\n        }\n\n        // Generate a list of categories registered on the specified computer.\n        try\n        {\n            if (machineName.Length &gt; 0)\n            {\n                categories = PerformanceCounterCategory.GetCategories(machineName);\n            }\n            else\n            {\n                categories = PerformanceCounterCategory.GetCategories();\n            }\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to get categories on &quot; + \n                (machineName.Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n            Console.WriteLine(ex.Message);\n            return;\n        }\n\n        Console.WriteLine(&quot;These categories are registered on &quot; + \n            (machineName.Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n\n        // Create and sort an array of category names.\n        string[] categoryNames = new string[categories.Length];\n        int objX;\n        for(objX = 0; objX &lt; categories.Length; objX++)\n        {\n            categoryNames[objX] = categories[objX].CategoryName;\n        }\n        Array.Sort(categoryNames);\n\n        for(objX = 0; objX &lt; categories.Length; objX++)\n        {\n            Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, categoryNames[objX]);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_GetCategories_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_GetCategories_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCategories(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a list of the performance counter categories that are registered on the specified computer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Diagnostics.PerformanceCounterCategory[] GetCategories (string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The computer to look on.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> objects indicating the categories that are registered on the specified computer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>machineName</code> parameter is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To retrieve the categories on the local computer, use another overload or pass &quot;.&quot; as the <code>machineName</code> parameter.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCategories_\" data-linktype=\"relative-path\">GetCategories</a> method to return an array of <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> objects from the local computer or a specified computer. It converts the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> array into an array of category names, which it sorts and displays for the user. The <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCategories_\" data-linktype=\"relative-path\">GetCategories</a> overload is selected based on whether a computer name was specified.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#2\">    Sub Main(ByVal args() As String)\n        Dim machineName As String = &quot;&quot;\n        Dim categories() As PerformanceCounterCategory\n\n        &#39; Copy the machine name argument into the local variable.\n        Try\n            machineName = IIf(args(0) = &quot;.&quot;, &quot;&quot;, args(0))\n        Catch ex As Exception\n        End Try\n\n        &#39; Generate a list of categories registered on the specified computer.\n        Try\n            If machineName.Length &gt; 0 Then\n                categories = _\n                    PerformanceCounterCategory.GetCategories(machineName)\n            Else\n                categories = PerformanceCounterCategory.GetCategories()\n            End If\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to get categories on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, &quot;computer &quot;&quot;{0}&quot;&quot;:&quot;, _\n                &quot;this computer:&quot;), machineName)\n            Console.WriteLine(ex.Message)\n            Return\n        End Try\n\n        Console.WriteLine(&quot;These categories are registered on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{0}&quot;&quot;:&quot;, &quot;this computer:&quot;), machineName)\n\n        &#39; Create and sort an array of category names.\n        Dim categoryNames(categories.Length - 1) As String\n        Dim objX As Integer\n        For objX = 0 To categories.Length - 1\n            Console.WriteLine(&quot;{0}, {1}&quot;, objX, categories(objX).CategoryName)\n            categoryNames(objX) = categories(objX).CategoryName\n        Next objX\n        Array.Sort(categoryNames)\n\n        For objX = 0 To categories.Length - 1\n            Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, categoryNames(objX))\n        Next objX\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#2\">public:\n    static void Main(array&lt;String^&gt;^ args)\n    {\n        String^ machineName = &quot;&quot;;\n        array&lt;PerformanceCounterCategory^&gt;^ categories;\n\n        // Copy the machine name argument into the local variable.\n        try\n        {\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n        }\n        catch (...)\n        {\n        }\n\n        // Generate a list of categories registered on the specified computer.\n        try\n        {\n            if (machineName-&gt;Length &gt; 0)\n            {\n                categories = PerformanceCounterCategory::GetCategories(machineName);\n            }\n            else\n            {\n                categories = PerformanceCounterCategory::GetCategories();\n            }\n        }\n        catch(Exception^ ex)\n        {\n            Console::WriteLine(&quot;Unable to get categories on &quot; +\n                (machineName-&gt;Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n            Console::WriteLine(ex-&gt;Message);\n            return;\n        }\n\n        Console::WriteLine(&quot;These categories are registered on &quot; +\n            (machineName-&gt;Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n\n        // Create and sort an array of category names.\n        array&lt;String^&gt;^ categoryNames = gcnew array&lt;String^&gt;(categories-&gt;Length);\n        int objX;\n        for (objX = 0; objX &lt; categories-&gt;Length; objX++)\n        {\n            categoryNames[objX] = categories[objX]-&gt;CategoryName;\n        }\n        Array::Sort(categoryNames);\n\n        for (objX = 0; objX &lt; categories-&gt;Length; objX++)\n        {\n            Console::WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, categoryNames[objX]);\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#2\">    public static void Main(string[] args)\n    {\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory[] categories;\n\n        // Copy the machine name argument into the local variable.\n        try\n        {\n            machineName = args[0]==&quot;.&quot;? &quot;&quot;: args[0];\n        }\n        catch\n        {\n        }\n\n        // Generate a list of categories registered on the specified computer.\n        try\n        {\n            if (machineName.Length &gt; 0)\n            {\n                categories = PerformanceCounterCategory.GetCategories(machineName);\n            }\n            else\n            {\n                categories = PerformanceCounterCategory.GetCategories();\n            }\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to get categories on &quot; + \n                (machineName.Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n            Console.WriteLine(ex.Message);\n            return;\n        }\n\n        Console.WriteLine(&quot;These categories are registered on &quot; + \n            (machineName.Length &gt; 0 ? &quot;computer \\&quot;{0}\\&quot;:&quot;: &quot;this computer:&quot;), machineName);\n\n        // Create and sort an array of category names.\n        string[] categoryNames = new string[categories.Length];\n        int objX;\n        for(objX = 0; objX &lt; categories.Length; objX++)\n        {\n            categoryNames[objX] = categories[objX].CategoryName;\n        }\n        Array.Sort(categoryNames);\n\n        for(objX = 0; objX &lt; categories.Length; objX++)\n        {\n            Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, categoryNames[objX]);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_GetCounters\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_GetCounters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCounters()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a list of the counters in a performance counter category that contains exactly one instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.PerformanceCounter[] GetCounters ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects indicating the counters that are associated with this single-instance performance counter category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The category is not a single instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The category does not have an associated instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about performance object instances, see the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class overview.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets a list of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects in a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. It first creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> with the appropriate constructor, based on whether a computer name was specified. It then uses the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCounters_\" data-linktype=\"relative-path\">GetCounters</a> method to return an array of <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects, selecting the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCounters_\" data-linktype=\"relative-path\">GetCounters</a> overload based on whether an instance name was specified.  </p>\n<p> This GetCounters overload fails unless it is used with a single-instance category.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#4\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim instanceName As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n        Dim counters() As PerformanceCounter\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            machineName = IIf(args(1) = &quot;.&quot;, &quot;&quot;, args(1))\n            instanceName = args(2)\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Try\n            &#39; Create the appropriate PerformanceCounterCategory object.\n            If machineName.Length &gt; 0 Then\n                pcc = New PerformanceCounterCategory(categoryName, machineName)\n            Else\n                pcc = New PerformanceCounterCategory(categoryName)\n            End If\n\n            &#39; Get the counters for this instance or a single instance \n            &#39; of the selected category.\n            If instanceName.Length &gt; 0 Then\n                counters = pcc.GetCounters(instanceName)\n            Else\n                counters = pcc.GetCounters()\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to get counter information for &quot; &amp; _\n                IIf(instanceName.Length &gt; 0, &quot;instance &quot;&quot;{2}&quot;&quot; in &quot;, _\n                &quot;single-instance &quot;) &amp; &quot;category &quot;&quot;{0}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, &quot;computer &quot;&quot;{1}&quot;&quot;:&quot;, _\n                &quot;this computer:&quot;), _\n                categoryName, machineName, instanceName)\n            Console.WriteLine(ex.Message)\n            Return\n        End Try\n\n        &#39; Display the counter names if GetCounters was successful.\n        If Not counters Is Nothing Then\n            Console.WriteLine(&quot;These counters exist in &quot; &amp; _\n                IIf(instanceName.Length &gt; 0, &quot;instance &quot;&quot;{1}&quot;&quot; of&quot;, _\n                &quot;single instance&quot;) &amp; &quot; category {0} on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                    &quot;computer &quot;&quot;{2}&quot;&quot;:&quot;, &quot;this computer:&quot;), _\n                categoryName, instanceName, machineName)\n\n            &#39; Display a numbered list of the counter names.\n            Dim objX As Integer\n            For objX = 0 To counters.Length - 1\n                Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, _\n                    counters(objX).CounterName)\n            Next objX\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#4\">public:\n    static void Main(array&lt;String^&gt;^ args)\n    {\n        String^ categoryName = &quot;&quot;;\n        String^ machineName = &quot;&quot;;\n        String^ instanceName = &quot;&quot;;\n        PerformanceCounterCategory^ pcc;\n        array&lt;PerformanceCounter^&gt;^ counters;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n            instanceName = args[3];\n        }\n        catch (...)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Create the appropriate PerformanceCounterCategory object.\n            if (machineName-&gt;Length&gt;0)\n            {\n                pcc = gcnew PerformanceCounterCategory(categoryName, machineName);\n            }\n            else\n            {\n                pcc = gcnew PerformanceCounterCategory(categoryName);\n            }\n\n            // Get the counters for this instance or a single instance\n            // of the selected category.\n            if (instanceName-&gt;Length &gt; 0)\n            {\n                counters = pcc-&gt;GetCounters(instanceName);\n            }\n            else\n            {\n                counters = pcc-&gt;GetCounters();\n            }\n\n        }\n        catch (Exception^ ex)\n        {\n            Console::WriteLine(&quot;Unable to get counter information for &quot; +\n                (instanceName-&gt;Length&gt;0? &quot;instance \\&quot;{2}\\&quot; in &quot;: &quot;single-instance &quot;) +\n                &quot;category \\&quot;{0}\\&quot; on &quot; + (machineName-&gt;Length&gt;0? &quot;computer \\&quot;{1}\\&quot;:&quot;: &quot;this computer:&quot;),\n                categoryName, machineName, instanceName);\n            Console::WriteLine(ex-&gt;Message);\n            return;\n        }\n\n        // Display the counter names if GetCounters was successful.\n        if (counters != nullptr)\n        {\n            Console::WriteLine(&quot;These counters exist in &quot; +\n                (instanceName-&gt;Length &gt; 0 ? &quot;instance \\&quot;{1}\\&quot; of&quot; : &quot;single instance&quot;) +\n                &quot; category {0} on &quot; + (machineName-&gt;Length &gt; 0 ? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;),\n                categoryName, instanceName, machineName);\n\n            // Display a numbered list of the counter names.\n            int objX;\n            for(objX = 0; objX &lt; counters-&gt;Length; objX++)\n            {\n                Console::WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, counters[objX]-&gt;CounterName);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#4\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        string instanceName = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n        PerformanceCounter[] counters;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n            instanceName = args[2];\n        }\n        catch\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Create the appropriate PerformanceCounterCategory object.\n            if (machineName.Length&gt;0)\n            {\n                pcc = new PerformanceCounterCategory(categoryName, machineName);\n            }\n            else\n            {\n                pcc = new PerformanceCounterCategory(categoryName);\n            }\n\n            // Get the counters for this instance or a single instance \n            // of the selected category.\n            if (instanceName.Length&gt;0)\n            {\n                counters = pcc.GetCounters(instanceName);\n            }\n            else\n            {\n                counters = pcc.GetCounters();\n            }\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to get counter information for &quot; + \n                (instanceName.Length&gt;0? &quot;instance \\&quot;{2}\\&quot; in &quot;: &quot;single-instance &quot;) + \n                &quot;category \\&quot;{0}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{1}\\&quot;:&quot;: &quot;this computer:&quot;), \n                categoryName, machineName, instanceName);\n            Console.WriteLine(ex.Message);\n            return;\n        }\n\n        // Display the counter names if GetCounters was successful.\n        if (counters!=null)\n        {\n            Console.WriteLine(&quot;These counters exist in &quot; + \n                (instanceName.Length&gt;0? &quot;instance \\&quot;{1}\\&quot; of&quot;: &quot;single instance&quot;) + \n                &quot; category {0} on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;), \n                categoryName, instanceName, machineName);\n\n            // Display a numbered list of the counter names.\n            int objX;\n            for(objX=0; objX&lt;counters.Length; objX++)\n            {\n                Console.WriteLine(&quot;{0,4} - {1}&quot;, objX+1, counters[objX].CounterName);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_GetCounters_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_GetCounters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCounters(String)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a list of the counters in a performance counter category that contains one or more instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.PerformanceCounter[] GetCounters (string instanceName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The performance object instance for which to retrieve the list of associated counters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects indicating the counters that are associated with the specified object instance of this performance counter category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>instanceName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property for this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> instance has not been set.  </p>\n<p> -or-  </p>\n<p> The category does not contain the instance that is specified by the <code>instanceName</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To represent a single-instance category, pass an empty string (&quot;&quot;) for the <code>instanceName</code> parameter.  </p>\n<p> For more information about performance object instances, see the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> class overview.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets a list of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects in a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. It first creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> with the appropriate constructor, based on whether a computer name was specified. It then uses the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCounters_\" data-linktype=\"relative-path\">GetCounters</a> method to return an array of <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects, selecting the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_GetCounters_\" data-linktype=\"relative-path\">GetCounters</a> overload based on whether an instance name was specified.  </p>\n<p> This GetCounters overload fails unless it is used with a category that contains instances.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#4\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim instanceName As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n        Dim counters() As PerformanceCounter\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            machineName = IIf(args(1) = &quot;.&quot;, &quot;&quot;, args(1))\n            instanceName = args(2)\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Try\n            &#39; Create the appropriate PerformanceCounterCategory object.\n            If machineName.Length &gt; 0 Then\n                pcc = New PerformanceCounterCategory(categoryName, machineName)\n            Else\n                pcc = New PerformanceCounterCategory(categoryName)\n            End If\n\n            &#39; Get the counters for this instance or a single instance \n            &#39; of the selected category.\n            If instanceName.Length &gt; 0 Then\n                counters = pcc.GetCounters(instanceName)\n            Else\n                counters = pcc.GetCounters()\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to get counter information for &quot; &amp; _\n                IIf(instanceName.Length &gt; 0, &quot;instance &quot;&quot;{2}&quot;&quot; in &quot;, _\n                &quot;single-instance &quot;) &amp; &quot;category &quot;&quot;{0}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, &quot;computer &quot;&quot;{1}&quot;&quot;:&quot;, _\n                &quot;this computer:&quot;), _\n                categoryName, machineName, instanceName)\n            Console.WriteLine(ex.Message)\n            Return\n        End Try\n\n        &#39; Display the counter names if GetCounters was successful.\n        If Not counters Is Nothing Then\n            Console.WriteLine(&quot;These counters exist in &quot; &amp; _\n                IIf(instanceName.Length &gt; 0, &quot;instance &quot;&quot;{1}&quot;&quot; of&quot;, _\n                &quot;single instance&quot;) &amp; &quot; category {0} on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                    &quot;computer &quot;&quot;{2}&quot;&quot;:&quot;, &quot;this computer:&quot;), _\n                categoryName, instanceName, machineName)\n\n            &#39; Display a numbered list of the counter names.\n            Dim objX As Integer\n            For objX = 0 To counters.Length - 1\n                Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, _\n                    counters(objX).CounterName)\n            Next objX\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#4\">public:\n    static void Main(array&lt;String^&gt;^ args)\n    {\n        String^ categoryName = &quot;&quot;;\n        String^ machineName = &quot;&quot;;\n        String^ instanceName = &quot;&quot;;\n        PerformanceCounterCategory^ pcc;\n        array&lt;PerformanceCounter^&gt;^ counters;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n            instanceName = args[3];\n        }\n        catch (...)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Create the appropriate PerformanceCounterCategory object.\n            if (machineName-&gt;Length&gt;0)\n            {\n                pcc = gcnew PerformanceCounterCategory(categoryName, machineName);\n            }\n            else\n            {\n                pcc = gcnew PerformanceCounterCategory(categoryName);\n            }\n\n            // Get the counters for this instance or a single instance\n            // of the selected category.\n            if (instanceName-&gt;Length &gt; 0)\n            {\n                counters = pcc-&gt;GetCounters(instanceName);\n            }\n            else\n            {\n                counters = pcc-&gt;GetCounters();\n            }\n\n        }\n        catch (Exception^ ex)\n        {\n            Console::WriteLine(&quot;Unable to get counter information for &quot; +\n                (instanceName-&gt;Length&gt;0? &quot;instance \\&quot;{2}\\&quot; in &quot;: &quot;single-instance &quot;) +\n                &quot;category \\&quot;{0}\\&quot; on &quot; + (machineName-&gt;Length&gt;0? &quot;computer \\&quot;{1}\\&quot;:&quot;: &quot;this computer:&quot;),\n                categoryName, machineName, instanceName);\n            Console::WriteLine(ex-&gt;Message);\n            return;\n        }\n\n        // Display the counter names if GetCounters was successful.\n        if (counters != nullptr)\n        {\n            Console::WriteLine(&quot;These counters exist in &quot; +\n                (instanceName-&gt;Length &gt; 0 ? &quot;instance \\&quot;{1}\\&quot; of&quot; : &quot;single instance&quot;) +\n                &quot; category {0} on &quot; + (machineName-&gt;Length &gt; 0 ? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;),\n                categoryName, instanceName, machineName);\n\n            // Display a numbered list of the counter names.\n            int objX;\n            for(objX = 0; objX &lt; counters-&gt;Length; objX++)\n            {\n                Console::WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, counters[objX]-&gt;CounterName);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#4\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        string instanceName = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n        PerformanceCounter[] counters;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n            instanceName = args[2];\n        }\n        catch\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Create the appropriate PerformanceCounterCategory object.\n            if (machineName.Length&gt;0)\n            {\n                pcc = new PerformanceCounterCategory(categoryName, machineName);\n            }\n            else\n            {\n                pcc = new PerformanceCounterCategory(categoryName);\n            }\n\n            // Get the counters for this instance or a single instance \n            // of the selected category.\n            if (instanceName.Length&gt;0)\n            {\n                counters = pcc.GetCounters(instanceName);\n            }\n            else\n            {\n                counters = pcc.GetCounters();\n            }\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to get counter information for &quot; + \n                (instanceName.Length&gt;0? &quot;instance \\&quot;{2}\\&quot; in &quot;: &quot;single-instance &quot;) + \n                &quot;category \\&quot;{0}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{1}\\&quot;:&quot;: &quot;this computer:&quot;), \n                categoryName, machineName, instanceName);\n            Console.WriteLine(ex.Message);\n            return;\n        }\n\n        // Display the counter names if GetCounters was successful.\n        if (counters!=null)\n        {\n            Console.WriteLine(&quot;These counters exist in &quot; + \n                (instanceName.Length&gt;0? &quot;instance \\&quot;{1}\\&quot; of&quot;: &quot;single instance&quot;) + \n                &quot; category {0} on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;), \n                categoryName, instanceName, machineName);\n\n            // Display a numbered list of the counter names.\n            int objX;\n            for(objX=0; objX&lt;counters.Length; objX++)\n            {\n                Console.WriteLine(&quot;{0,4} - {1}&quot;, objX+1, counters[objX].CounterName);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_GetInstanceNames\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_GetInstanceNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetInstanceNames()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the list of performance object instances that are associated with this category.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] GetInstanceNames ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array of strings representing the performance object instance names that are associated with this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property is <code>null</code>. The property might not have been set.  </p>\n<p> -or-  </p>\n<p> The category does not have an associated instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets a list of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects in a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. It first creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object, using the appropriate constructor based on whether a computer name was specified. It then uses GetInstanceNames to return the instance names as an array of <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, which it sorts and displays.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#6\">public:\n    static void Main(array&lt;String^&gt;^ args)\n    {\n        String^ categoryName = &quot;&quot;;\n        String^ machineName = &quot;&quot;;\n        PerformanceCounterCategory^ pcc;\n        array&lt;String^&gt;^ instances;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n        }\n        catch (...)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Create the appropriate PerformanceCounterCategory object.\n            if (machineName-&gt;Length &gt; 0)\n            {\n                pcc = gcnew PerformanceCounterCategory(categoryName, machineName);\n            }\n            else\n            {\n                pcc = gcnew PerformanceCounterCategory(categoryName);\n            }\n\n            // Get the instances associated with this category.\n            instances = pcc-&gt;GetInstanceNames();\n\n        }\n        catch (Exception^ ex)\n        {\n            Console::WriteLine(&quot;Unable to get instance information for &quot; +\n                &quot;category \\&quot;{0}\\&quot; on &quot; + \n                (machineName-&gt;Length&gt;0? &quot;computer \\&quot;{1}\\&quot;:&quot;: &quot;this computer:&quot;),\n                categoryName, machineName);\n            Console::WriteLine(ex-&gt;Message);\n            return;\n        }\n\n        //If an empty array is returned, the category has a single instance.\n        if (instances-&gt;Length==0)\n        {\n            Console::WriteLine(&quot;Category \\&quot;{0}\\&quot; on &quot; +\n                (machineName-&gt;Length&gt;0? &quot;computer \\&quot;{1}\\&quot;&quot;: &quot;this computer&quot;) +\n                &quot; is single-instance.&quot;, pcc-&gt;CategoryName, pcc-&gt;MachineName);\n        }\n        else\n        {\n            // Otherwise, display the instances.\n            Console::WriteLine(&quot;These instances exist in category \\&quot;{0}\\&quot; on &quot; +\n                (machineName-&gt;Length&gt;0? &quot;computer \\&quot;{1}\\&quot;.&quot;: &quot;this computer:&quot;),\n                pcc-&gt;CategoryName, pcc-&gt;MachineName);\n\n            Array::Sort(instances);\n            int objX;\n            for (objX = 0; objX &lt; instances-&gt;Length; objX++)\n            {\n                Console::WriteLine(&quot;{0,4} - {1}&quot;, objX+1, instances[objX]);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#6\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        PerformanceCounterCategory pcc;\n        string[] instances;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            machineName = args[1]==&quot;.&quot;? &quot;&quot;: args[1];\n        }\n        catch\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        try\n        {\n            // Create the appropriate PerformanceCounterCategory object.\n            if (machineName.Length&gt;0)\n            {\n                pcc = new PerformanceCounterCategory(categoryName, machineName);\n            }\n            else\n            {\n                pcc = new PerformanceCounterCategory(categoryName);\n            }\n\n            // Get the instances associated with this category.\n            instances = pcc.GetInstanceNames();\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to get instance information for &quot; +\n                &quot;category \\&quot;{0}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{1}\\&quot;:&quot;: &quot;this computer:&quot;), \n                categoryName, machineName);\n            Console.WriteLine(ex.Message);\n            return;\n        }\n\n        //If an empty array is returned, the category has a single instance.\n        if (instances.Length==0)\n        {\n            Console.WriteLine(&quot;Category \\&quot;{0}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{1}\\&quot;&quot;: &quot;this computer&quot;) + \n                &quot; is single-instance.&quot;, pcc.CategoryName, pcc.MachineName);\n        }\n        else\n        {\n            // Otherwise, display the instances.\n            Console.WriteLine(&quot;These instances exist in category \\&quot;{0}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{1}\\&quot;.&quot;: &quot;this computer:&quot;), \n                pcc.CategoryName, pcc.MachineName);\n\n            Array.Sort(instances);\n            int objX;\n            for(objX=0; objX&lt;instances.Length; objX++)\n            {\n                Console.WriteLine(&quot;{0,4} - {1}&quot;, objX+1, instances[objX]);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.GetMembers#6\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim pcc As PerformanceCounterCategory\n        Dim instances() As String\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            machineName = IIf(args(1) = &quot;.&quot;, &quot;&quot;, args(1))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        Try\n            &#39; Create the appropriate PerformanceCounterCategory object.\n            If machineName.Length &gt; 0 Then\n                pcc = New PerformanceCounterCategory(categoryName, machineName)\n            Else\n                pcc = New PerformanceCounterCategory(categoryName)\n            End If\n\n            &#39; Get the instances associated with this category.\n            instances = pcc.GetInstanceNames()\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to get instance information for &quot; &amp; _\n                 &quot;category &quot;&quot;{0}&quot;&quot; on &quot; &amp; IIf(machineName.Length &gt; 0, _\n                 &quot;computer &quot;&quot;{1}&quot;&quot;:&quot;, &quot;this computer:&quot;), _\n                 categoryName, machineName)\n            Console.WriteLine(ex.Message)\n            Return\n        End Try\n\n        &#39;If an empty array is returned, the category has a single instance.\n        If instances.Length = 0 Then\n            Console.WriteLine( _\n                &quot;Category &quot;&quot;{0}&quot;&quot; on &quot; &amp; IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{1}&quot;&quot;&quot;, &quot;this computer&quot;) &amp; _\n                &quot; is single-instance.&quot;, pcc.CategoryName, pcc.MachineName)\n        Else\n            &#39; Otherwise, display the instances.\n            Console.WriteLine( _\n                &quot;These instances exist in category &quot;&quot;{0}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                    &quot;computer &quot;&quot;{1}&quot;&quot;.&quot;, &quot;this computer:&quot;), _\n                pcc.CategoryName, pcc.MachineName)\n\n            Array.Sort(instances)\n            Dim objX As Integer\n            For objX = 0 To instances.Length - 1\n                Console.WriteLine(&quot;{0,4} - {1}&quot;, objX + 1, instances(objX))\n            Next objX\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_InstanceExists_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_InstanceExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstanceExists(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified performance object instance exists in the category that is identified by this <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object&#39;s <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool InstanceExists (string instanceName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The performance object instance in this performance counter category to search for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the category contains the specified performance object instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property is <code>null</code>. The property might not have been set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>instanceName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload of InstanceExists is not <code>static</code>. It requires you to create a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object and to set the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance exists within a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. It first creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> object, using the appropriate constructor based on whether a computer name was specified. It then uses InstanceExists to determine whether the specified instance exists, then informs the user. If no instance name is specified, the example uses the default single-instance name.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#2\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string instanceName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        bool objectExists = false;\n        PerformanceCounterCategory pcc;\n        const string SINGLE_INSTANCE_NAME = &quot;systemdiagnosticsperfcounterlibsingleinstance&quot;;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            instanceName = args[1];\n            machineName = (args[2]==&quot;.&quot;? &quot;&quot;: args[2]);\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        // Use the given instance name or use the default single-instance name.\n        if (instanceName.Length==0)\n        {\n            instanceName = SINGLE_INSTANCE_NAME;\n        }\n\n        try\n        {\n            if (machineName.Length==0)\n            {\n                pcc = new PerformanceCounterCategory(categoryName);\n            }\n            else\n            {\n                pcc = new PerformanceCounterCategory(categoryName, machineName);\n            }\n\n            // Check whether the instance exists.\n            // Use the per-instance overload of InstanceExists.\n            objectExists = pcc.InstanceExists(instanceName);\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; +\n                &quot;instance \\&quot;{0}\\&quot; in category \\&quot;{1}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;) + \n                &quot;<br>&quot; + ex.Message, instanceName, categoryName, machineName);\n            return;\n        }\n\n        // Tell the user whether the instance exists.\n        Console.WriteLine(&quot;Instance \\&quot;{0}\\&quot; &quot; + (objectExists? &quot;exists&quot;: &quot;does not exist&quot;) + \n            &quot; in category \\&quot;{1}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;), \n            instanceName, pcc.CategoryName, pcc.MachineName);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#2\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim instanceName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim objectExists As Boolean = False\n        Dim pcc As PerformanceCounterCategory\n        Const SINGLE_INSTANCE_NAME As String = _\n            &quot;systemdiagnosticsperfcounterlibsingleinstance&quot;\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            instanceName = args(1)\n            machineName = IIf(args(2) = &quot;.&quot;, &quot;&quot;, args(2))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        &#39; Use the given instance name or use the default single-instance name.\n        If instanceName.Length = 0 Then\n            instanceName = SINGLE_INSTANCE_NAME\n        End If\n\n        Try\n            If machineName.Length = 0 Then\n                pcc = New PerformanceCounterCategory(categoryName)\n            Else\n                pcc = New PerformanceCounterCategory(categoryName, machineName)\n            End If\n\n            &#39; Check whether the instance exists.\n            &#39; Use the per-instance overload of InstanceExists.\n            objectExists = pcc.InstanceExists(instanceName)\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; &amp; _\n                &quot;instance &quot;&quot;{0}&quot;&quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;:&quot;, &quot;this computer:&quot;) &amp; vbCrLf &amp; _\n                ex.Message, instanceName, categoryName, machineName)\n            Return\n        End Try\n\n        &#39; Tell the user whether the instance exists.\n        Console.WriteLine(&quot;Instance &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            IIf(objectExists, &quot;exists&quot;, &quot;does not exist&quot;) &amp; _\n            &quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;), _\n            instanceName, pcc.CategoryName, pcc.MachineName)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_InstanceExists_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_InstanceExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstanceExists(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a specified category on the local computer contains the specified performance object instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool InstanceExists (string instanceName, string categoryName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The performance object instance to search for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The performance counter category to search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the category contains the specified performance object instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>instanceName</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>categoryName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the static overloads of <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_InstanceExists_\" data-linktype=\"relative-path\">InstanceExists</a> to determine whether the given <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance exists in the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. The overload is selected based on whether a computer name is specified. If no instance name is specified, the example uses the default single-instance name.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#10\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim instanceName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim objectExists As Boolean = False\n        Const SINGLE_INSTANCE_NAME As String = _\n            &quot;systemdiagnosticsperfcounterlibsingleinstance&quot;\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            instanceName = args(1)\n            machineName = IIf(args(2) = &quot;.&quot;, &quot;&quot;, args(2))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        &#39; Use the given instance name or use the default single-instance name.\n        If instanceName.Length = 0 Then\n            instanceName = SINGLE_INSTANCE_NAME\n        End If\n\n        Try\n            &#39; Check whether the specified instance exists.\n            &#39; Use the static forms of the InstanceExists method.\n            If machineName.Length = 0 Then\n                objectExists = PerformanceCounterCategory.InstanceExists( _\n                    instanceName, categoryName)\n            Else\n                objectExists = PerformanceCounterCategory.InstanceExists( _\n                    instanceName, categoryName, machineName)\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; &amp; _\n                &quot;instance &quot;&quot;{0}&quot;&quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;:&quot;, &quot;this computer:&quot;) &amp; vbCrLf &amp; _\n                ex.Message, instanceName, categoryName, machineName)\n            Return\n        End Try\n\n        &#39; Tell the user whether the instance exists.\n        Console.WriteLine(&quot;Instance &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            IIf(objectExists, &quot;exists&quot;, &quot;does not exist&quot;) &amp; _\n            &quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;), _\n            instanceName, categoryName, machineName)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#10\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string instanceName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        bool objectExists = false;\n        const string SINGLE_INSTANCE_NAME = &quot;systemdiagnosticsperfcounterlibsingleinstance&quot;;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            instanceName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        // Use the given instance name or use the default single-instance name.\n        if (instanceName.Length==0)\n        {\n            instanceName = SINGLE_INSTANCE_NAME;\n        }\n\n        try\n        {\n            // Check whether the specified instance exists.\n            // Use the static forms of the InstanceExists method.\n            if (machineName.Length==0)\n            {\n                objectExists = PerformanceCounterCategory.InstanceExists(instanceName, categoryName);\n            }\n            else\n            {\n                objectExists = PerformanceCounterCategory.InstanceExists(instanceName, categoryName, machineName);\n            }\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; +\n                &quot;instance \\&quot;{0}\\&quot; in category \\&quot;{1}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;) + &quot;<br>&quot; + \n                ex.Message, instanceName, categoryName, machineName);\n            return;\n        }\n\n        // Tell the user whether the instance exists.\n        Console.WriteLine(&quot;Instance \\&quot;{0}\\&quot; &quot; + (objectExists? &quot;exists&quot;: &quot;does not exist&quot;) + \n            &quot; in category \\&quot;{1}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;), \n            instanceName, categoryName, machineName);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_InstanceExists_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_InstanceExists_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InstanceExists(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a specified category on a specified computer contains the specified performance object instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool InstanceExists (string instanceName, string categoryName, string machineName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The performance object instance to search for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>categoryName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The performance counter category to search.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>machineName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the computer on which to look for the category instance pair.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the category contains the specified performance object instance; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>instanceName</code> parameter is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> The <code>categoryName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>categoryName</code> parameter is an empty string (&quot;&quot;).  </p>\n<p> -or-  </p>\n<p> The <code>machineName</code> parameter is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>It is not possible to determine whether a performance object instance exists on a computer without specifying a specific category to look in.  </p>\n<p> You can use &quot;.&quot; to specify the local computer.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the static overloads of <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_InstanceExists_\" data-linktype=\"relative-path\">InstanceExists</a> to determine whether the given <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> instance exists in the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>. The overload is selected based on whether a computer name is specified. If no instance name is specified, the example uses the default single-instance name.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#10\">    Sub Main(ByVal args() As String)\n        Dim categoryName As String = &quot;&quot;\n        Dim instanceName As String = &quot;&quot;\n        Dim machineName As String = &quot;&quot;\n        Dim objectExists As Boolean = False\n        Const SINGLE_INSTANCE_NAME As String = _\n            &quot;systemdiagnosticsperfcounterlibsingleinstance&quot;\n\n        &#39; Copy the supplied arguments into the local variables.\n        Try\n            categoryName = args(0)\n            instanceName = args(1)\n            machineName = IIf(args(2) = &quot;.&quot;, &quot;&quot;, args(2))\n        Catch ex As Exception\n            &#39; Ignore the exception from non-supplied arguments.\n        End Try\n\n        &#39; Use the given instance name or use the default single-instance name.\n        If instanceName.Length = 0 Then\n            instanceName = SINGLE_INSTANCE_NAME\n        End If\n\n        Try\n            &#39; Check whether the specified instance exists.\n            &#39; Use the static forms of the InstanceExists method.\n            If machineName.Length = 0 Then\n                objectExists = PerformanceCounterCategory.InstanceExists( _\n                    instanceName, categoryName)\n            Else\n                objectExists = PerformanceCounterCategory.InstanceExists( _\n                    instanceName, categoryName, machineName)\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; &amp; _\n                &quot;instance &quot;&quot;{0}&quot;&quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n                IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;:&quot;, &quot;this computer:&quot;) &amp; vbCrLf &amp; _\n                ex.Message, instanceName, categoryName, machineName)\n            Return\n        End Try\n\n        &#39; Tell the user whether the instance exists.\n        Console.WriteLine(&quot;Instance &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            IIf(objectExists, &quot;exists&quot;, &quot;does not exist&quot;) &amp; _\n            &quot; in category &quot;&quot;{1}&quot;&quot; on &quot; &amp; _\n            IIf(machineName.Length &gt; 0, _\n                &quot;computer &quot;&quot;{2}&quot;&quot;.&quot;, &quot;this computer.&quot;), _\n            instanceName, categoryName, machineName)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.PerformanceCounterCategory.ExistMembers#10\">    public static void Main(string[] args)\n    {\n        string categoryName = &quot;&quot;;\n        string instanceName = &quot;&quot;;\n        string machineName = &quot;&quot;;\n        bool objectExists = false;\n        const string SINGLE_INSTANCE_NAME = &quot;systemdiagnosticsperfcounterlibsingleinstance&quot;;\n\n        // Copy the supplied arguments into the local variables.\n        try\n        {\n            categoryName = args[0];\n            instanceName = args[1];\n            machineName = args[2]==&quot;.&quot;? &quot;&quot;: args[2];\n        }\n        catch(Exception ex)\n        {\n            // Ignore the exception from non-supplied arguments.\n        }\n\n        // Use the given instance name or use the default single-instance name.\n        if (instanceName.Length==0)\n        {\n            instanceName = SINGLE_INSTANCE_NAME;\n        }\n\n        try\n        {\n            // Check whether the specified instance exists.\n            // Use the static forms of the InstanceExists method.\n            if (machineName.Length==0)\n            {\n                objectExists = PerformanceCounterCategory.InstanceExists(instanceName, categoryName);\n            }\n            else\n            {\n                objectExists = PerformanceCounterCategory.InstanceExists(instanceName, categoryName, machineName);\n            }\n\n        }\n        catch(Exception ex)\n        {\n            Console.WriteLine(&quot;Unable to check for the existence of &quot; +\n                &quot;instance \\&quot;{0}\\&quot; in category \\&quot;{1}\\&quot; on &quot; + \n                (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;:&quot;: &quot;this computer:&quot;) + &quot;<br>&quot; + \n                ex.Message, instanceName, categoryName, machineName);\n            return;\n        }\n\n        // Tell the user whether the instance exists.\n        Console.WriteLine(&quot;Instance \\&quot;{0}\\&quot; &quot; + (objectExists? &quot;exists&quot;: &quot;does not exist&quot;) + \n            &quot; in category \\&quot;{1}\\&quot; on &quot; + (machineName.Length&gt;0? &quot;computer \\&quot;{2}\\&quot;.&quot;: &quot;this computer.&quot;), \n            instanceName, categoryName, machineName);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_PerformanceCounterCategory_ReadCategory\">\r\n    \r\n            <a id=\"System_Diagnostics_PerformanceCounterCategory_ReadCategory_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadCategory()</div>        \r\n          </div>\r\n    \r\n            <p>Reads all the counter and performance object instance data that is associated with this performance counter category.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Diagnostics.InstanceDataCollectionCollection ReadCategory ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.diagnostics.instancedatacollectioncollection\" data-linktype=\"relative-path\">InstanceDataCollectionCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.diagnostics.instancedatacollectioncollection\" data-linktype=\"relative-path\">InstanceDataCollectionCollection</a> that contains the counter and performance object instance data for the category.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Diagnostics.PerformanceCounterCategory.CategoryName*</span> property is <code>null</code>. The property might not have been set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.win32exception\" data-linktype=\"relative-path\">Win32Exception</a></div>\r\n                  </div>\r\n                  <p>A call to an underlying system API failed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Code that is executing without administrative privileges attempted to read a performance counter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must set the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory#System_Diagnostics_PerformanceCounterCategory_CategoryName_\" data-linktype=\"relative-path\">CategoryName</a> property before you call ReadCategory.  </p>\n<p> Reading the entire category at once can be as efficient as reading a single counter because of the way that the system provides the data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To read performance counters in Windows Vista and later, Windows XP Professional x64 Edition, or Windows Server 2003, you must either be a member of the Performance Monitor Users group or have administrative privileges.  </p>\n<p> To avoid having to elevate your privileges to access performance counters in Windows Vista and later, add yourself to the Performance Monitor Users group.  </p>\n<p> In Windows Vista and later, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator. You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> for a specified <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a> name. It then uses ReadCategory to return an <a class=\"xref\" href=\"system.diagnostics.instancedatacollectioncollection\" data-linktype=\"relative-path\">InstanceDataCollectionCollection</a> that contains instance data for all the instances of the <a class=\"xref\" href=\"system.diagnostics.performancecounter\" data-linktype=\"relative-path\">PerformanceCounter</a> objects within the <a class=\"xref\" href=\"system.diagnostics.performancecountercategory\" data-linktype=\"relative-path\">PerformanceCounterCategory</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.InstanceData.CopyTo#6\">\n        // Process the InstanceDataCollectionCollection for this category.\n        PerformanceCounterCategory pcc = new PerformanceCounterCategory(categoryName);\n        InstanceDataCollectionCollection idColCol = pcc.ReadCategory();\n        InstanceDataCollection[] idColArray = new InstanceDataCollection[idColCol.Count];\n\n        Console.WriteLine(&quot;InstanceDataCollectionCollection for \\&quot;{0}\\&quot; &quot; +\n            &quot;has {1} elements.&quot;, categoryName, idColCol.Count);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.InstanceData.CopyTo#6\">\n        &#39; Process the InstanceDataCollectionCollection for this category.\n        Dim pcc As New PerformanceCounterCategory(categoryName)\n        Dim idColCol As InstanceDataCollectionCollection = pcc.ReadCategory()\n        Dim idColArray(idColCol.Count - 1) As InstanceDataCollection\n\n        Console.WriteLine(&quot;InstanceDataCollectionCollection for &quot;&quot;{0}&quot;&quot; &quot; &amp; _\n            &quot;has {1} elements.&quot;, categoryName, idColCol.Count)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.PerformanceCounterCategory.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.PerformanceCounterCategory.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.CategoryHelp\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.CategoryName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.CategoryType\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.CounterExists\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.Create\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.Delete\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.Exists\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.GetCategories\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.GetCounters\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.GetInstanceNames\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.InstanceExists\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.MachineName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.PerformanceCounterCategory.ReadCategory\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3910a939-e2c0-d56a-95f3-2badd6b8db55\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\PerformanceCounterCategory.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a performance object, which defines a category of performance counters.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.PerformanceCounterCategory\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.PerformanceCounterCategory.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.PerformanceCounterCategory.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.PerformanceCounterCategory","System.Diagnostics.PerformanceCounterCategory..ctor","System.Diagnostics.PerformanceCounterCategory.CategoryHelp","System.Diagnostics.PerformanceCounterCategory.CategoryName","System.Diagnostics.PerformanceCounterCategory.CategoryType","System.Diagnostics.PerformanceCounterCategory.CounterExists","System.Diagnostics.PerformanceCounterCategory.Create","System.Diagnostics.PerformanceCounterCategory.Delete","System.Diagnostics.PerformanceCounterCategory.Exists","System.Diagnostics.PerformanceCounterCategory.GetCategories","System.Diagnostics.PerformanceCounterCategory.GetCounters","System.Diagnostics.PerformanceCounterCategory.GetInstanceNames","System.Diagnostics.PerformanceCounterCategory.InstanceExists","System.Diagnostics.PerformanceCounterCategory.MachineName","System.Diagnostics.PerformanceCounterCategory.ReadCategory"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.PerformanceCounterCategory","System::Diagnostics::PerformanceCounterCategory","System.Diagnostics.PerformanceCounterCategory.#ctor","System::Diagnostics::PerformanceCounterCategory::#ctor","System.Diagnostics.PerformanceCounterCategory.CategoryHelp","System::Diagnostics::PerformanceCounterCategory::CategoryHelp","System.Diagnostics.PerformanceCounterCategory.CategoryName","System::Diagnostics::PerformanceCounterCategory::CategoryName","System.Diagnostics.PerformanceCounterCategory.CategoryType","System::Diagnostics::PerformanceCounterCategory::CategoryType","System.Diagnostics.PerformanceCounterCategory.CounterExists","System::Diagnostics::PerformanceCounterCategory::CounterExists","System.Diagnostics.PerformanceCounterCategory.Create","System::Diagnostics::PerformanceCounterCategory::Create","System.Diagnostics.PerformanceCounterCategory.Delete","System::Diagnostics::PerformanceCounterCategory::Delete","System.Diagnostics.PerformanceCounterCategory.Exists","System::Diagnostics::PerformanceCounterCategory::Exists","System.Diagnostics.PerformanceCounterCategory.GetCategories","System::Diagnostics::PerformanceCounterCategory::GetCategories","System.Diagnostics.PerformanceCounterCategory.GetCounters","System::Diagnostics::PerformanceCounterCategory::GetCounters","System.Diagnostics.PerformanceCounterCategory.GetInstanceNames","System::Diagnostics::PerformanceCounterCategory::GetInstanceNames","System.Diagnostics.PerformanceCounterCategory.InstanceExists","System::Diagnostics::PerformanceCounterCategory::InstanceExists","System.Diagnostics.PerformanceCounterCategory.MachineName","System::Diagnostics::PerformanceCounterCategory::MachineName","System.Diagnostics.PerformanceCounterCategory.ReadCategory","System::Diagnostics::PerformanceCounterCategory::ReadCategory"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3910a939-e2c0-d56a-95f3-2badd6b8db55","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\PerformanceCounterCategory.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/PerformanceCounterCategory.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PerformanceCounterCategory class | Microsoft Docs","_op_ogTitle":"PerformanceCounterCategory class","description":"Represents a performance object, which defines a category of performance counters.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.PerformanceCounterCategory","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.performancecountercategory","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.performancecountercategory","fileRelativePath":"System.Diagnostics.PerformanceCounterCategory.html"},"themesRelativePathToOutputRoot":"_themes/"}