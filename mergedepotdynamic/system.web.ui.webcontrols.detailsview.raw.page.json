{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_DetailsView\">\r\n      <span class=\"lang-csharp\">DetailsView</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Displays the values of a single record from a data source in a table, where each data row represents a field of the record. The DetailsView control allows you to edit, delete, and insert records.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;PageIndexChanging&quot;)]\n[System.ComponentModel.Designer(&quot;System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Web.UI.ControlValueProperty(&quot;SelectedValue&quot;)]\n[System.Web.UI.DataKeyProperty(&quot;DataKey&quot;)]\n[System.Web.UI.SupportsEventValidation]\n[System.Web.UI.ToolboxData(&quot;&lt;{0}:DetailsView runat=&quot;server&quot; Width=&quot;125px&quot; Height=&quot;50px&quot;&gt;&lt;/{0}:DetailsView&gt;&quot;)]\npublic class DetailsView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPostBackContainer</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol\" data-linktype=\"relative-path\">WebControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol\" data-linktype=\"relative-path\">BaseDataBoundControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol\" data-linktype=\"relative-path\">DataBoundControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l5\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol\" data-linktype=\"relative-path\">System.Web.UI.WebControls.CompositeDataBoundControl</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l6\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DetailsView</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Adapter\" data-linktype=\"relative-path\">Adapter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AddedControl_System_Web_UI_Control_System_Int32_\" data-linktype=\"relative-path\">AddedControl(Control,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AddParsedSubObject_System_Object_\" data-linktype=\"relative-path\">AddParsedSubObject(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ApplyStyleSheetSkin_System_Web_UI_Page_\" data-linktype=\"relative-path\">ApplyStyleSheetSkin(Page)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_AppRelativeTemplateSourceDirectory\" data-linktype=\"relative-path\">AppRelativeTemplateSourceDirectory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BeginRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"relative-path\">BeginRenderTracing(TextWriter,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BindingContainer\" data-linktype=\"relative-path\">BindingContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_BuildProfileTree_System_String_System_Boolean_\" data-linktype=\"relative-path\">BuildProfileTree(String,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ChildControlsCreated\" data-linktype=\"relative-path\">ChildControlsCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearCachedClientID\" data-linktype=\"relative-path\">ClearCachedClientID()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildControlState\" data-linktype=\"relative-path\">ClearChildControlState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildState\" data-linktype=\"relative-path\">ClearChildState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearChildViewState\" data-linktype=\"relative-path\">ClearChildViewState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClearEffectiveClientIDMode\" data-linktype=\"relative-path\">ClearEffectiveClientIDMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientID\" data-linktype=\"relative-path\">ClientID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDMode\" data-linktype=\"relative-path\">ClientIDMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ClientIDSeparator\" data-linktype=\"relative-path\">ClientIDSeparator</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Context\" data-linktype=\"relative-path\">Context</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_CreateControlCollection\" data-linktype=\"relative-path\">CreateControlCollection()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_System_Boolean_\" data-linktype=\"relative-path\">DataBind(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBindChildren\" data-linktype=\"relative-path\">DataBindChildren()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataItemContainer\" data-linktype=\"relative-path\">DataItemContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataKeysContainer\" data-linktype=\"relative-path\">DataKeysContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState\" data-linktype=\"relative-path\">EnableViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EndRenderTracing_System_IO_TextWriter_System_Object_\" data-linktype=\"relative-path\">EndRenderTracing(TextWriter,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnsureChildControls\" data-linktype=\"relative-path\">EnsureChildControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnsureID\" data-linktype=\"relative-path\">EnsureID()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_System_String_\" data-linktype=\"relative-path\">FindControl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_FindControl_System_String_System_Int32_\" data-linktype=\"relative-path\">FindControl(String,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetDesignModeState\" data-linktype=\"relative-path\">GetDesignModeState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_Object_\" data-linktype=\"relative-path\">GetRouteUrl(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_String_System_Object_\" data-linktype=\"relative-path\">GetRouteUrl(String,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">GetRouteUrl(String,RouteValueDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetRouteUrl_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"relative-path\">GetRouteUrl(RouteValueDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_GetUniqueIDRelativeTo_System_Web_UI_Control_\" data-linktype=\"relative-path\">GetUniqueIDRelativeTo(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasChildViewState\" data-linktype=\"relative-path\">HasChildViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasControls\" data-linktype=\"relative-path\">HasControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_HasEvents\" data-linktype=\"relative-path\">HasEvents()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID\" data-linktype=\"relative-path\">ID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IdSeparator\" data-linktype=\"relative-path\">IdSeparator</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsChildControlStateCleared\" data-linktype=\"relative-path\">IsChildControlStateCleared</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsLiteralContent\" data-linktype=\"relative-path\">IsLiteralContent()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsTrackingViewState\" data-linktype=\"relative-path\">IsTrackingViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_IsViewStateEnabled\" data-linktype=\"relative-path\">IsViewStateEnabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_LoadViewStateByID\" data-linktype=\"relative-path\">LoadViewStateByID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_MapPathSecure_System_String_\" data-linktype=\"relative-path\">MapPathSecure(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_NamingContainer\" data-linktype=\"relative-path\">NamingContainer</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnDataBinding_System_EventArgs_\" data-linktype=\"relative-path\">OnDataBinding(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnUnload_System_EventArgs_\" data-linktype=\"relative-path\">OnUnload(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OpenFile_System_String_\" data-linktype=\"relative-path\">OpenFile(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Page\" data-linktype=\"relative-path\">Page</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RaiseBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"relative-path\">RaiseBubbleEvent(Object,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RemovedControl_System_Web_UI_Control_\" data-linktype=\"relative-path\">RemovedControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderChildren_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderChildren(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderControl(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderControl_System_Web_UI_HtmlTextWriter_System_Web_UI_Adapters_ControlAdapter_\" data-linktype=\"relative-path\">RenderControl(HtmlTextWriter,ControlAdapter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_RenderingCompatibility\" data-linktype=\"relative-path\">RenderingCompatibility</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveAdapter\" data-linktype=\"relative-path\">ResolveAdapter()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveClientUrl_System_String_\" data-linktype=\"relative-path\">ResolveClientUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ResolveUrl_System_String_\" data-linktype=\"relative-path\">ResolveUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"relative-path\">SetDesignModeState(IDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetRenderMethodDelegate_System_Web_UI_RenderMethod_\" data-linktype=\"relative-path\">SetRenderMethodDelegate(RenderMethod)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetTraceData_System_Object_System_Object_\" data-linktype=\"relative-path\">SetTraceData(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_SetTraceData_System_Object_System_Object_System_Object_\" data-linktype=\"relative-path\">SetTraceData(Object,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlBuilderAccessor_ControlBuilder\" data-linktype=\"relative-path\">IControlBuilderAccessor.ControlBuilder</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_GetDesignModeState\" data-linktype=\"relative-path\">IControlDesignerAccessor.GetDesignModeState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetDesignModeState_System_Collections_IDictionary_\" data-linktype=\"relative-path\">IControlDesignerAccessor.SetDesignModeState(IDictionary)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_SetOwnerControl_System_Web_UI_Control_\" data-linktype=\"relative-path\">IControlDesignerAccessor.SetOwnerControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IControlDesignerAccessor_UserData\" data-linktype=\"relative-path\">IControlDesignerAccessor.UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_DataBindings\" data-linktype=\"relative-path\">IDataBindingsAccessor.DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IDataBindingsAccessor_HasDataBindings\" data-linktype=\"relative-path\">IDataBindingsAccessor.HasDataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_Expressions\" data-linktype=\"relative-path\">IExpressionsAccessor.Expressions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IExpressionsAccessor_HasExpressions\" data-linktype=\"relative-path\">IExpressionsAccessor.HasExpressions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_System_Web_UI_IParserAccessor_AddParsedSubObject_System_Object_\" data-linktype=\"relative-path\">IParserAccessor.AddParsedSubObject(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateControl\" data-linktype=\"relative-path\">TemplateControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_TemplateSourceDirectory\" data-linktype=\"relative-path\">TemplateSourceDirectory</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_UniqueID\" data-linktype=\"relative-path\">UniqueID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Unload\" data-linktype=\"relative-path\">Unload</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ValidateRequestMode\" data-linktype=\"relative-path\">ValidateRequestMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewState\" data-linktype=\"relative-path\">ViewState</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateIgnoresCase\" data-linktype=\"relative-path\">ViewStateIgnoresCase</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ViewStateMode\" data-linktype=\"relative-path\">ViewStateMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_ConfirmInitState\" data-linktype=\"relative-path\">ConfirmInitState()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataBound\" data-linktype=\"relative-path\">DataBound</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource\" data-linktype=\"relative-path\">DataSource</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_Initialized\" data-linktype=\"relative-path\">Initialized</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_IsBoundUsingDataSourceID\" data-linktype=\"relative-path\">IsBoundUsingDataSourceID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_IsDataBindingAutomatic\" data-linktype=\"relative-path\">IsDataBindingAutomatic</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_OnDataBound_System_EventArgs_\" data-linktype=\"relative-path\">OnDataBound(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_RequiresDataBinding\" data-linktype=\"relative-path\">RequiresDataBinding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_SupportsDisabledAttribute\" data-linktype=\"relative-path\">SupportsDisabledAttribute</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_CreateChildControls\" data-linktype=\"relative-path\">CreateChildControls()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.compositedataboundcontrol#System_Web_UI_WebControls_CompositeDataBoundControl_IsUsingModelBinders\" data-linktype=\"relative-path\">IsUsingModelBinders</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_CallingDataMethods\" data-linktype=\"relative-path\">CallingDataMethods</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_CreatingModelDataSource\" data-linktype=\"relative-path\">CreatingModelDataSource</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataMember\" data-linktype=\"relative-path\">DataMember</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceID\" data-linktype=\"relative-path\">DataSourceID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceObject\" data-linktype=\"relative-path\">DataSourceObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_GetData\" data-linktype=\"relative-path\">GetData()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_GetDataSource\" data-linktype=\"relative-path\">GetDataSource()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ItemType\" data-linktype=\"relative-path\">ItemType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_MarkAsDataBound\" data-linktype=\"relative-path\">MarkAsDataBound()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_OnCreatingModelDataSource_System_Web_UI_WebControls_CreatingModelDataSourceEventArgs_\" data-linktype=\"relative-path\">OnCreatingModelDataSource(CreatingModelDataSourceEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_OnDataPropertyChanged\" data-linktype=\"relative-path\">OnDataPropertyChanged()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_OnLoad_System_EventArgs_\" data-linktype=\"relative-path\">OnLoad(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_PerformSelect\" data-linktype=\"relative-path\">PerformSelect()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_SelectArguments\" data-linktype=\"relative-path\">SelectArguments</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_SelectMethod\" data-linktype=\"relative-path\">SelectMethod</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_ValidateDataSource_System_Object_\" data-linktype=\"relative-path\">ValidateDataSource(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_AccessKey\" data-linktype=\"relative-path\">AccessKey</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_AddAttributesToRender_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">AddAttributesToRender(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ApplyStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"relative-path\">ApplyStyle(Style)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BackColor\" data-linktype=\"relative-path\">BackColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BorderColor\" data-linktype=\"relative-path\">BorderColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BorderStyle\" data-linktype=\"relative-path\">BorderStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_BorderWidth\" data-linktype=\"relative-path\">BorderWidth</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ControlStyle\" data-linktype=\"relative-path\">ControlStyle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ControlStyleCreated\" data-linktype=\"relative-path\">ControlStyleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_CopyBaseAttributes_System_Web_UI_WebControls_WebControl_\" data-linktype=\"relative-path\">CopyBaseAttributes(WebControl)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_CssClass\" data-linktype=\"relative-path\">CssClass</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_DisabledCssClass\" data-linktype=\"relative-path\">DisabledCssClass</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Enabled\" data-linktype=\"relative-path\">Enabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_EnableTheming\" data-linktype=\"relative-path\">EnableTheming</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Font\" data-linktype=\"relative-path\">Font</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ForeColor\" data-linktype=\"relative-path\">ForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_HasAttributes\" data-linktype=\"relative-path\">HasAttributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Height\" data-linktype=\"relative-path\">Height</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_IsEnabled\" data-linktype=\"relative-path\">IsEnabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_MergeStyle_System_Web_UI_WebControls_Style_\" data-linktype=\"relative-path\">MergeStyle(Style)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_RenderBeginTag_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderBeginTag(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_RenderContents_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderContents(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_RenderEndTag_System_Web_UI_HtmlTextWriter_\" data-linktype=\"relative-path\">RenderEndTag(HtmlTextWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_SkinID\" data-linktype=\"relative-path\">SkinID</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Style\" data-linktype=\"relative-path\">Style</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_System_Web_UI_IAttributeAccessor_GetAttribute_System_String_\" data-linktype=\"relative-path\">IAttributeAccessor.GetAttribute(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_System_Web_UI_IAttributeAccessor_SetAttribute_System_String_System_String_\" data-linktype=\"relative-path\">IAttributeAccessor.SetAttribute(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_TabIndex\" data-linktype=\"relative-path\">TabIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_TagName\" data-linktype=\"relative-path\">TagName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_ToolTip\" data-linktype=\"relative-path\">ToolTip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.ui.webcontrols.webcontrol#System_Web_UI_WebControls_WebControl_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In this topic:  </p>\n<ul>\n<li><p><a href=\"#introduction\" data-linktype=\"self-bookmark\">Introduction</a>  </p>\n</li>\n<li><p><a href=\"#row_fields\" data-linktype=\"self-bookmark\">Row Fields</a>  </p>\n</li>\n<li><p><a href=\"#binding_to_data\" data-linktype=\"self-bookmark\">Binding to Data</a>  </p>\n</li>\n<li><p><a href=\"#security\" data-linktype=\"self-bookmark\">Security</a>  </p>\n</li>\n<li><p><a href=\"#data_operations\" data-linktype=\"self-bookmark\">Data Operations</a>  </p>\n</li>\n<li><p><a href=\"#customizing_the_user_interface\" data-linktype=\"self-bookmark\">Customizing the User Interface</a>  </p>\n</li>\n<li><p><a href=\"#events\" data-linktype=\"self-bookmark\">Events</a>  </p>\n</li>\n<li><p><a href=\"#Accessibility\" data-linktype=\"self-bookmark\">Accessibility</a>  </p>\n</li>\n<li><p><a href=\"#DeclarativeSyntax\" data-linktype=\"self-bookmark\">Declarative Syntax</a>  </p>\n</li>\n</ul>\n<p><a name=\"introduction\"></a>   </p>\n<h2 id=\"introduction\">Introduction</h2>\n<p> The DetailsView control is used to display a single record from a data source in a table, where each field of the record is displayed in a row of the table. It can be used in combination with a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control for master-detail scenarios. The DetailsView control supports the following features:  </p>\n<ul>\n<li><p>Binding to data source controls, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a>.  </p>\n</li>\n<li><p>Built-in inserting capabilities.  </p>\n</li>\n<li><p>Built-in updating and deleting capabilities.  </p>\n</li>\n<li><p>Built-in paging capabilities.  </p>\n</li>\n<li><p>Programmatic access to the DetailsView object model to dynamically set properties, handle events, and so on.  </p>\n</li>\n<li><p>Customizable appearance through themes and styles.  </p>\n</li>\n</ul>\n<p><a name=\"row_fields\"></a>   </p>\n<h2 id=\"row-fields\">Row Fields</h2>\n<p> Each data row in the DetailsView control is created by declaring a field control. Different row field types determine the behavior of the rows in the control. Field controls derive from <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a>. The following table lists the different row field types that can be used.  </p>\n<table>\n<thead>\n<tr>\n<th>Column field type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a></td>\n<td>Displays the value of a field in a data source as text.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a></td>\n<td>Displays a command button in the DetailsView control. This allows you to display a row with a custom button control, such as an Add or a Remove button.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.checkboxfield\" data-linktype=\"relative-path\">CheckBoxField</a></td>\n<td>Displays a check box in the DetailsView control. This row field type is commonly used to display fields with a Boolean value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a></td>\n<td>Displays built-in command buttons to perform edit, insert, or delete operations in the DetailsView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlinkfield\" data-linktype=\"relative-path\">HyperLinkField</a></td>\n<td>Displays the value of a field in a data source as a hyperlink. This row field type allows you to bind a second field to the hyperlink&#39;s URL.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.imagefield\" data-linktype=\"relative-path\">ImageField</a></td>\n<td>Displays an image in the DetailsView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a></td>\n<td>Displays user-defined content for a row in the DetailsView control according to a specified template. This row field type allows you to create a custom row field.</td>\n</tr>\n</tbody>\n</table>\n<p> By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\" data-linktype=\"relative-path\">AutoGenerateRows</a> property is set to <code>true</code>, which automatically generates a bound row field object for each field of a bindable type in the data source. Valid bindable types are <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>, <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>, <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>, and the set of primitive types. Each field is then displayed in a row as text, in the order in which each field appears in the data source.  </p>\n<p> Automatically generating the rows provides a quick and easy way to display every field in the record. However, to make use of the DetailsView control&#39;s advanced capabilities you must explicitly declare the row fields to include in the DetailsView control. To declare the row fields, first set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\" data-linktype=\"relative-path\">AutoGenerateRows</a> property to <code>false</code>. Next, add opening and closing <code>&lt;Fields&gt;</code> tags between the opening and closing tags of the DetailsView control. Finally, list the row fields that you want to include between the opening and closing <code>&lt;Fields&gt;</code> tags. The row fields specified are added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Fields_\" data-linktype=\"relative-path\">Fields</a> collection in the order listed. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Fields_\" data-linktype=\"relative-path\">Fields</a> collection allows you to programmatically manage the row fields in the DetailsView control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Automatically generated row fields are not added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Fields_\" data-linktype=\"relative-path\">Fields</a> collection.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> Explicitly declared row fields can be displayed in combination with automatically generated row fields. When both are used, explicitly declared row fields are rendered first, followed by the automatically generated row fields.  </p>\n</div>\n<p><a name=\"binding_to_data\"></a>   </p>\n<h2 id=\"binding-to-data\">Binding to Data</h2>\n<p> The DetailsView control can be bound to a data source control (such as the <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a> control or <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasource\" data-linktype=\"relative-path\">ObjectDataSource</a> control) or to any data source collection that implements the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">System.Collections.IEnumerable</a> interface, such as <a class=\"xref\" href=\"system.data.dataview\" data-linktype=\"relative-path\">System.Data.DataView</a>, <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">System.Collections.ArrayList</a>, <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">System.Collections.Generic.List&lt;T&gt;</a>, or other collection types. Use one of the following methods to bind the DetailsView control to the appropriate data source type:  </p>\n<ul>\n<li><p>To bind to a data source control, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_DataSourceID_\" data-linktype=\"relative-path\">DataSourceID</a> property of the DetailsView control to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_ID_\" data-linktype=\"relative-path\">ID</a> value of the data source control. The DetailsView control automatically binds to the specified data source control. This is the preferred method to bind to data.  </p>\n</li>\n<li><p>To bind to a data source that implements the <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">System.Collections.IEnumerable</a> interface, programmatically set the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property of the DetailsView control to the data source and then call the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method.  </p>\n<p>For more information on data binding, see <a href=\"http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742\" data-linktype=\"external\">Binding to Databases</a>.  </p>\n</li>\n</ul>\n<p><a name=\"security\"></a>   </p>\n<h2 id=\"security\">Security</h2>\n<p> This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. For more information, see <a href=\"../Topic/Script%20Exploits%20Overview.md\" data-linktype=\"relative-path\">Script Exploits Overview</a>. Validation server controls are also provided to assess user input. For more information, see <a href=\"http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133\" data-linktype=\"external\">Validation Server Control Syntax</a>.  </p>\n<p><a name=\"data_operations\"></a>   </p>\n<h2 id=\"data-operations\">Data Operations</h2>\n<p> The DetailsView control provides built-in capabilities that allow the user to update, delete, insert, and page through items in the control. When the DetailsView control is bound to a data source control, the DetailsView control can take advantage of the data source control&#39;s capabilities and provide automatic updating, deleting, inserting, and paging functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The DetailsView control can provide support for update, delete, insert, and paging operations with other types of data sources; however, you must provide the implementation for these operations in an appropriate event handler. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a>.  </p>\n</div>\n<p> The DetailsView control can automatically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> row field with an Edit, Delete, or New button by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateEditButton_\" data-linktype=\"relative-path\">AutoGenerateEditButton</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateDeleteButton_\" data-linktype=\"relative-path\">AutoGenerateDeleteButton</a>, or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateInsertButton_\" data-linktype=\"relative-path\">AutoGenerateInsertButton</a> properties to <code>true</code>, respectively. Unlike the Delete button (which deletes the selected record immediately), when the Edit or New button is clicked, the DetailsView control goes into edit or insert mode, respectively. In edit mode, the Edit button is replaced with an Update and a Cancel button. Input controls that are appropriate for the field&#39;s data type (such as a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> or a <a class=\"xref\" href=\"system.web.ui.webcontrols.checkbox\" data-linktype=\"relative-path\">CheckBox</a> control) are displayed with a field&#39;s value for the user to modify. Clicking the Update button updates the record in the data source, while clicking the Cancel button abandons any changes. Likewise, in insert mode, the New button is replaced with an Insert and a Cancel button, and empty input controls are displayed for the user to enter the values for the new record.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can also manually define the update, delete, and insert command buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a>, or <a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a> row field. The DetailsView control recognizes buttons with the <a class=\"xref\" href=\"system.web.ui.webcontrols.button#System_Web_UI_WebControls_Button_CommandName_\" data-linktype=\"relative-path\">CommandName</a> property set to &quot;Edit&quot;, &quot;Update&quot;, &quot;Delete&quot;, &quot;New&quot;, &quot;Insert&quot;, or &quot;Cancel&quot;; however, you still must provide the functionality yourself. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a>.  </p>\n</div>\n<p> The DetailsView control provides a paging feature, which allows the user to navigate to other records in the data source. When enabled, page navigation controls are displayed in a pager row. To enable paging, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>. The pager row can be customized using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerSettings_\" data-linktype=\"relative-path\">PagerSettings</a> properties.  </p>\n<p><a name=\"customizing_the_user_interface\"></a>   </p>\n<h2 id=\"customizing-the-user-interface\">Customizing the User Interface</h2>\n<p> You can customize the appearance of the DetailsView control by setting the style properties for different parts of the control. The following table lists the style properties that you can set.  </p>\n<table>\n<thead>\n<tr>\n<th>Style property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a></td>\n<td>The style settings for the alternating data rows in the DetailsView control. When this property is set, the data rows are displayed in bands, alternating between the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a> settings and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> settings.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CommandRowStyle_\" data-linktype=\"relative-path\">CommandRowStyle</a></td>\n<td>The style settings for the row that contains the built-in command buttons.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EditRowStyle_\" data-linktype=\"relative-path\">EditRowStyle</a></td>\n<td>The style settings for the data rows when the DetailsView control is in edit mode.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataRowStyle_\" data-linktype=\"relative-path\">EmptyDataRowStyle</a></td>\n<td>The style settings for the empty data row that are displayed in the DetailsView control when the data source does not contain any records.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a></td>\n<td>The style settings for the footer row.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a></td>\n<td>The style settings for the header row.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_InsertRowStyle_\" data-linktype=\"relative-path\">InsertRowStyle</a></td>\n<td>The style settings for the data rows when the DetailsView control is in insert mode.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a></td>\n<td>The style settings for the pager row.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a></td>\n<td>The style settings for the data rows in the DetailsView control. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> property is also set, the data rows are displayed alternating between the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a> settings and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> settings.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FieldHeaderStyle_\" data-linktype=\"relative-path\">FieldHeaderStyle</a></td>\n<td>The style settings for the header column.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"events\"></a>   </p>\n<h2 id=\"events\">Events</h2>\n<p> The DetailsView control provides several events that you can program against. This allows you to run a custom routine whenever an event occurs. The following table lists the events supported by the DetailsView control. The DetailsView control also inherits these events from its base classes: <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBinding\" data-linktype=\"relative-path\">DataBinding</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataBound\" data-linktype=\"relative-path\">DataBound</a>, <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Disposed\" data-linktype=\"relative-path\">Disposed</a>, <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a>, <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Load\" data-linktype=\"relative-path\">Load</a>, <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a>, and <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Render_\" data-linktype=\"relative-path\">Render</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a></td>\n<td>Occurs when a button is clicked in the DetailsView control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a></td>\n<td>Occurs after all <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> objects are created in the DetailsView control. This event is often used to modify the values of a record before it is displayed.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a></td>\n<td>Occurs when a Delete button is clicked, but after the DetailsView control deletes the record from the data source. This event is often used to check the results of the delete operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a></td>\n<td>Occurs when a Delete button is clicked, but before the DetailsView control deletes the record from the data source. This event is often used to cancel the delete operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"relative-path\">ItemInserted</a></td>\n<td>Occurs when an Insert button is clicked, but after the DetailsView control inserts the record. This event is often used to check the results of the insert operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a></td>\n<td>Occurs when an Insert button is clicked, but before the DetailsView control inserts the record. This event is often used to cancel the insert operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"relative-path\">ItemUpdated</a></td>\n<td>Occurs when an Update button is clicked, but after the DetailsView control updates the row. This event is often used to check the results of the update operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a></td>\n<td>Occurs when an Update button is clicked, but before the DetailsView control updates the record. This event is often used to cancel the update operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a></td>\n<td>Occurs after the DetailsView control changes modes (edit, insert, or read-only mode). This event is often used to perform a task when the DetailsView control changes modes.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a></td>\n<td>Occurs before the DetailsView control changes modes (edit, insert, or read-only mode). This event is often used to cancel a mode change.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a></td>\n<td>Occurs when one of the pager buttons is clicked, but after the DetailsView control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different record in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a></td>\n<td>Occurs when one of the pager buttons is clicked, but before the DetailsView control handles the paging operation. This event is often used to cancel the paging operation.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"Accessibility\"></a>   </p>\n<h2 id=\"accessibility\">Accessibility</h2>\n<p> For information about how to configure this control so that it generates markup that conforms to accessibility standards, see <a href=\"../Topic/Accessibility%20in%20Visual%20Studio%20and%20ASP.NET.md\" data-linktype=\"relative-path\">Accessibility in Visual Studio and ASP.NET</a> and <a href=\"../Topic/ASP.NET%20Controls%20and%20Accessibility.md\" data-linktype=\"relative-path\">ASP.NET Controls and Accessibility</a>.  </p>\n<p><a name=\"DeclarativeSyntax\"></a>   </p>\n<h2 id=\"declarative-syntax\">Declarative Syntax</h2>\n<pre><code>&lt;asp:DetailsView  \n    AccessKey=&quot;string&quot;  \n    AllowPaging=&quot;True|False&quot;  \n    AutoGenerateDeleteButton=&quot;True|False&quot;  \n    AutoGenerateEditButton=&quot;True|False&quot;  \n    AutoGenerateInsertButton=&quot;True|False&quot;  \n    AutoGenerateRows=&quot;True|False&quot;  \n    BackColor=&quot;color name|#dddddd&quot;  \n    BackImageUrl=&quot;uri&quot;  \n    BorderColor=&quot;color name|#dddddd&quot;  \n    BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  \n        Inset|Outset&quot;  \n    BorderWidth=&quot;size&quot;  \n    Caption=&quot;string&quot;  \n    CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;  \n    CellPadding=&quot;integer&quot;  \n    CellSpacing=&quot;integer&quot;  \n    CssClass=&quot;string&quot;  \n    DataKeyNames=&quot;string&quot;  \n    DataMember=&quot;string&quot;  \n    DataSource=&quot;string&quot;  \n    DataSourceID=&quot;string&quot;  \n    DefaultMode=&quot;ReadOnly|Edit|Insert&quot;  \n    EmptyDataText=&quot;string&quot;  \n    Enabled=&quot;True|False&quot;  \n    EnablePagingCallbacks=&quot;True|False&quot;  \n    EnableTheming=&quot;True|False&quot;  \n    EnableViewState=&quot;True|False&quot;  \n    Font-Bold=&quot;True|False&quot;  \n    Font-Italic=&quot;True|False&quot;  \n    Font-Names=&quot;string&quot;  \n    Font-Overline=&quot;True|False&quot;  \n    Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  \n        Large|X-Large|XX-Large&quot;  \n    Font-Strikeout=&quot;True|False&quot;  \n    Font-Underline=&quot;True|False&quot;  \n    FooterText=&quot;string&quot;  \n    ForeColor=&quot;color name|#dddddd&quot;  \n    GridLines=&quot;None|Horizontal|Vertical|Both&quot;  \n    HeaderText=&quot;string&quot;  \n    Height=&quot;size&quot;  \n    HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;  \n    ID=&quot;string&quot;  \n    OnDataBinding=&quot;DataBinding event handler&quot;  \n    OnDataBound=&quot;DataBound event handler&quot;  \n    OnDisposed=&quot;Disposed event handler&quot;  \n    OnInit=&quot;Init event handler&quot;  \n    OnItemCommand=&quot;ItemCommand event handler&quot;  \n    OnItemCreated=&quot;ItemCreated event handler&quot;  \n    OnItemDeleted=&quot;ItemDeleted event handler&quot;  \n    OnItemDeleting=&quot;ItemDeleting event handler&quot;  \n    OnItemInserted=&quot;ItemInserted event handler&quot;  \n    OnItemInserting=&quot;ItemInserting event handler&quot;  \n    OnItemUpdated=&quot;ItemUpdated event handler&quot;  \n    OnItemUpdating=&quot;ItemUpdating event handler&quot;  \n    OnLoad=&quot;Load event handler&quot;  \n    OnModeChanged=&quot;ModeChanged event handler&quot;  \n    OnModeChanging=&quot;ModeChanging event handler&quot;  \n    OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;  \n    OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;  \n    OnPreRender=&quot;PreRender event handler&quot;  \n    OnUnload=&quot;Unload event handler&quot;  \n    PageIndex=&quot;integer&quot;  \n    PagerSettings-FirstPageImageUrl=&quot;uri&quot;  \n    PagerSettings-FirstPageText=&quot;string&quot;  \n    PagerSettings-LastPageImageUrl=&quot;uri&quot;  \n    PagerSettings-LastPageText=&quot;string&quot;  \n    PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|NumericFirstLast&quot;  \n    PagerSettings-NextPageImageUrl=&quot;uri&quot;  \n    PagerSettings-NextPageText=&quot;string&quot;  \n    PagerSettings-PageButtonCount=&quot;integer&quot;  \n    PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;  \n    PagerSettings-PreviousPageImageUrl=&quot;uri&quot;  \n    PagerSettings-PreviousPageText=&quot;string&quot;  \n    PagerSettings-Visible=&quot;True|False&quot;  \n    runat=&quot;server&quot;  \n    SkinID=&quot;string&quot;  \n    Style=&quot;string&quot;  \n    TabIndex=&quot;integer&quot;  \n    ToolTip=&quot;string&quot;  \n    Visible=&quot;True|False&quot;  \n    Width=&quot;size&quot;  \n&gt;  \n        &lt;AlternatingRowStyle /&gt;  \n        &lt;CommandRowStyle /&gt;  \n        &lt;EditRowStyle /&gt;  \n        &lt;EmptyDataRowStyle /&gt;  \n        &lt;EmptyDataTemplate&gt;  \n            &lt;!-- child controls --&gt;  \n        &lt;/EmptyDataTemplate&gt;  \n        &lt;FieldHeaderStyle /&gt;  \n        &lt;Fields&gt;  \n                &lt;asp:BoundField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ApplyFormatInEditMode=&quot;True|False&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DataField=&quot;string&quot;  \n                    DataFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    HtmlEncode=&quot;True|False&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NullDisplayText=&quot;string&quot;  \n                    ReadOnly=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:BoundField&gt;  \n                &lt;asp:ButtonField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ButtonType=&quot;Button|Image|Link&quot;  \n                    CausesValidation=&quot;True|False&quot;  \n                    CommandName=&quot;string&quot;  \n                    DataTextField=&quot;string&quot;  \n                    DataTextFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    ImageUrl=&quot;uri&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Text=&quot;string&quot;  \n                    ValidationGroup=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:ButtonField&gt;  \n                &lt;asp:CheckBoxField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    DataField=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    ReadOnly=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Text=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:CheckBoxField&gt;  \n                &lt;asp:CommandField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ButtonType=&quot;Button|Image|Link&quot;  \n                    CancelImageUrl=&quot;uri&quot;  \n                    CancelText=&quot;string&quot;  \n                    CausesValidation=&quot;True|False&quot;  \n                    DeleteImageUrl=&quot;uri&quot;  \n                    DeleteText=&quot;string&quot;  \n                    EditImageUrl=&quot;uri&quot;  \n                    EditText=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertImageUrl=&quot;uri&quot;  \n                    InsertText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NewImageUrl=&quot;uri&quot;  \n                    NewText=&quot;string&quot;  \n                    SelectImageUrl=&quot;uri&quot;  \n                    SelectText=&quot;string&quot;  \n                    ShowCancelButton=&quot;True|False&quot;  \n                    ShowDeleteButton=&quot;True|False&quot;  \n                    ShowEditButton=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    ShowInsertButton=&quot;True|False&quot;  \n                    ShowSelectButton=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    UpdateImageUrl=&quot;uri&quot;  \n                    UpdateText=&quot;string&quot;  \n                    ValidationGroup=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:CommandField&gt;  \n                &lt;asp:DynamicField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ApplyFormatInEditMode=&quot;True|False&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DataField=&quot;string&quot;  \n                    DataFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    HtmlEncode=&quot;True|False&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NullDisplayText=&quot;string&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    UIHint=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:DynamicField&gt;  \n                &lt;asp:HyperLinkField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    DataNavigateUrlFields=&quot;string&quot;  \n                    DataNavigateUrlFormatString=&quot;string&quot;  \n                    DataTextField=&quot;string&quot;  \n                    DataTextFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NavigateUrl=&quot;uri&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Target=&quot;string|_blank|_parent|_search|_self|_top&quot;  \n                    Text=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:HyperLinkField&gt;  \n                &lt;asp:ImageField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    AlternateText=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    DataAlternateTextField=&quot;string&quot;  \n                    DataAlternateTextFormatString=&quot;string&quot;  \n                    DataImageUrlField=&quot;string&quot;  \n                    DataImageUrlFormatString=&quot;string&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    NullDisplayText=&quot;string&quot;  \n                    NullImageUrl=&quot;uri&quot;  \n                    ReadOnly=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                        &lt;ControlStyle /&gt;  \n                        &lt;FooterStyle /&gt;  \n                        &lt;HeaderStyle /&gt;  \n                        &lt;ItemStyle /&gt;  \n                &lt;/asp:ImageField&gt;  \n                &lt;asp:TemplateField  \n                    AccessibleHeaderText=&quot;string&quot;  \n                    ConvertEmptyStringToNull=&quot;True|False&quot;  \n                    FooterText=&quot;string&quot;  \n                    HeaderImageUrl=&quot;uri&quot;  \n                    HeaderText=&quot;string&quot;  \n                    InsertVisible=&quot;True|False&quot;  \n                    ShowHeader=&quot;True|False&quot;  \n                    SortExpression=&quot;string&quot;  \n                    Visible=&quot;True|False&quot;  \n&gt;  \n                            &lt;ControlStyle /&gt;  \n                            &lt;FooterStyle /&gt;  \n                            &lt;HeaderStyle /&gt;  \n                            &lt;ItemStyle /&gt;  \n                        &lt;AlternatingItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/AlternatingItemTemplate&gt;  \n                        &lt;EditItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/EditItemTemplate&gt;  \n                        &lt;FooterTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/FooterTemplate&gt;  \n                        &lt;HeaderTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/HeaderTemplate&gt;  \n                        &lt;InsertItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/InsertItemTemplate&gt;  \n                        &lt;ItemTemplate&gt;  \n                            &lt;!-- child controls --&gt;  \n                        &lt;/ItemTemplate&gt;  \n                &lt;/asp:TemplateField&gt;  \n        &lt;/Fields&gt;  \n        &lt;FooterStyle /&gt;  \n        &lt;FooterTemplate&gt;  \n            &lt;!-- child controls --&gt;  \n        &lt;/FooterTemplate&gt;  \n        &lt;HeaderStyle /&gt;  \n        &lt;HeaderTemplate&gt;  \n            &lt;!-- child controls --&gt;  \n        &lt;/HeaderTemplate&gt;  \n        &lt;InsertRowStyle /&gt;  \n        &lt;PagerSettings  \n            FirstPageImageUrl=&quot;uri&quot;  \n            FirstPageText=&quot;string&quot;  \n            LastPageImageUrl=&quot;uri&quot;  \n            LastPageText=&quot;string&quot;  \n            Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|  \n                NumericFirstLast&quot;  \n            NextPageImageUrl=&quot;uri&quot;  \n            NextPageText=&quot;string&quot;  \n            OnPropertyChanged=&quot;PropertyChanged event handler&quot;  \n            PageButtonCount=&quot;integer&quot;  \n            Position=&quot;Bottom|Top|TopAndBottom&quot;  \n            PreviousPageImageUrl=&quot;uri&quot;  \n            PreviousPageText=&quot;string&quot;  \n            Visible=&quot;True|False&quot;  \n        /&gt;  \n        &lt;PagerStyle /&gt;  \n        &lt;PagerTemplate&gt;  \n            &lt;!-- child controls --&gt;  \n        &lt;/PagerTemplate&gt;  \n        &lt;RowStyle        /&gt;  \n&lt;/asp:DetailsView&gt;  \n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView__ctor\" data-linktype=\"self-bookmark\">DetailsView()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_AllowPaging\" data-linktype=\"self-bookmark\">AllowPaging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the paging feature is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle\" data-linktype=\"self-bookmark\">AlternatingRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_AutoGenerateDeleteButton\" data-linktype=\"self-bookmark\">AutoGenerateDeleteButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the built-in control to delete the current record is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_AutoGenerateEditButton\" data-linktype=\"self-bookmark\">AutoGenerateEditButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the built-in controls to edit the current record are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_AutoGenerateInsertButton\" data-linktype=\"self-bookmark\">AutoGenerateInsertButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the built-in controls to insert a new record are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_AutoGenerateRows\" data-linktype=\"self-bookmark\">AutoGenerateRows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether row fields for each field in the data source are automatically generated and displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_BackImageUrl\" data-linktype=\"self-bookmark\">BackImageUrl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the URL to an image to display in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_BottomPagerRow\" data-linktype=\"self-bookmark\">BottomPagerRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the bottom pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_Caption\" data-linktype=\"self-bookmark\">Caption</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CaptionAlign\" data-linktype=\"self-bookmark\">CaptionAlign</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the horizontal or vertical position of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CellPadding\" data-linktype=\"self-bookmark\">CellPadding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of space between the contents of a cell and the cell&#39;s border.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CellSpacing\" data-linktype=\"self-bookmark\">CellSpacing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of space between cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CommandRowStyle\" data-linktype=\"self-bookmark\">CommandRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of a command row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CurrentMode\" data-linktype=\"self-bookmark\">CurrentMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current data-entry mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DataItem\" data-linktype=\"self-bookmark\">DataItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the data item bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DataItemCount\" data-linktype=\"self-bookmark\">DataItemCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of items in the underlying data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DataItemIndex\" data-linktype=\"self-bookmark\">DataItemIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the item being displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control from the underlying data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DataKey\" data-linktype=\"self-bookmark\">DataKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object that represents the primary key of the displayed record.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DataKeyNames\" data-linktype=\"self-bookmark\">DataKeyNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an array that contains the names of the key fields for the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DefaultMode\" data-linktype=\"self-bookmark\">DefaultMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Get or sets the default data-entry mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DeleteMethod\" data-linktype=\"self-bookmark\">DeleteMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method on the page that is called when the control performs a delete operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EditRowStyle\" data-linktype=\"self-bookmark\">EditRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the data rows when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EmptyDataRowStyle\" data-linktype=\"self-bookmark\">EmptyDataRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the empty data row displayed when the data source bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control does not contain any records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EmptyDataTemplate\" data-linktype=\"self-bookmark\">EmptyDataTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user-defined content for the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is bound to a data source that does not contain any records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EmptyDataText\" data-linktype=\"self-bookmark\">EmptyDataText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to display in the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is bound to a data source that does not contain any records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EnableModelValidation\" data-linktype=\"self-bookmark\">EnableModelValidation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether data-model validation is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EnablePagingCallbacks\" data-linktype=\"self-bookmark\">EnablePagingCallbacks</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether client-side callback functions are used for paging operations in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_FieldHeaderStyle\" data-linktype=\"self-bookmark\">FieldHeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the header column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_Fields\" data-linktype=\"self-bookmark\">Fields</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> objects that represent the explicitly declared row fields in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_FooterRow\" data-linktype=\"self-bookmark\">FooterRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_FooterStyle\" data-linktype=\"self-bookmark\">FooterStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_FooterTemplate\" data-linktype=\"self-bookmark\">FooterTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user-defined content for the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_FooterText\" data-linktype=\"self-bookmark\">FooterText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to display in the footer row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_GridLines\" data-linktype=\"self-bookmark\">GridLines</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the gridline style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_HeaderRow\" data-linktype=\"self-bookmark\">HeaderRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_HeaderStyle\" data-linktype=\"self-bookmark\">HeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_HeaderTemplate\" data-linktype=\"self-bookmark\">HeaderTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user-defined content for the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_HeaderText\" data-linktype=\"self-bookmark\">HeaderText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text to display in the header row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_HorizontalAlign\" data-linktype=\"self-bookmark\">HorizontalAlign</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the horizontal alignment of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control on the page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_InsertMethod\" data-linktype=\"self-bookmark\">InsertMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method on the page that is called when the control performs an insert operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_InsertRowStyle\" data-linktype=\"self-bookmark\">InsertRowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PageCount\" data-linktype=\"self-bookmark\">PageCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of records in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PageIndex\" data-linktype=\"self-bookmark\">PageIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the displayed record.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PagerSettings\" data-linktype=\"self-bookmark\">PagerSettings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object that allows you to set the properties of the pager buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PagerStyle\" data-linktype=\"self-bookmark\">PagerStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PagerTemplate\" data-linktype=\"self-bookmark\">PagerTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the custom content for the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_Rows\" data-linktype=\"self-bookmark\">Rows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> objects that represent the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_RowsGenerator\" data-linktype=\"self-bookmark\">RowsGenerator</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an object that implements the <a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a> interface in order to automatically populate rows in the view.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_RowStyle\" data-linktype=\"self-bookmark\">RowStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_SelectedValue\" data-linktype=\"self-bookmark\">SelectedValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the data key value of the current record in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_TagKey\" data-linktype=\"self-bookmark\">TagKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_TopPagerRow\" data-linktype=\"self-bookmark\">TopPagerRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the top pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_UpdateMethod\" data-linktype=\"self-bookmark\">UpdateMethod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the method on the page that is called when the control performs an update operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ChangeMode_System_Web_UI_WebControls_DetailsViewMode_\" data-linktype=\"self-bookmark\">ChangeMode(DetailsViewMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Switches the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to the specified mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateAutoGeneratedRow_System_Web_UI_WebControls_AutoGeneratedFieldProperties_\" data-linktype=\"self-bookmark\">CreateAutoGeneratedRow(AutoGeneratedFieldProperties)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a> object that represents an automatically generated row field using the specified field properties.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateAutoGeneratedRows_System_Object_\" data-linktype=\"self-bookmark\">CreateAutoGeneratedRows(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a set of automatically generated row fields for the specified data item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateChildControls_System_Collections_IEnumerable_System_Boolean_\" data-linktype=\"self-bookmark\">CreateChildControls(IEnumerable,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the control hierarchy used to render the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateControlStyle\" data-linktype=\"self-bookmark\">CreateControlStyle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a default table style object for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateDataSourceSelectArguments\" data-linktype=\"self-bookmark\">CreateDataSourceSelectArguments()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object that gets passed to the Select command.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateFieldSet_System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">CreateFieldSet(Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the complete set of automatically generated and user-defined row fields used to generate the control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateRow_System_Int32_System_Web_UI_WebControls_DataControlRowType_System_Web_UI_WebControls_DataControlRowState_\" data-linktype=\"self-bookmark\">CreateRow(Int32,DataControlRowType,DataControlRowState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object using the specified item index, row type, and row state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_CreateTable\" data-linktype=\"self-bookmark\">CreateTable()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the containing table for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DataBind\" data-linktype=\"self-bookmark\">DataBind()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calls the <span class=\"xref\">stem.Web.UI.WebControls.BaseDataBoundControl.DataBind*</span> method of the base class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_DeleteItem\" data-linktype=\"self-bookmark\">DeleteItem()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Deletes the current record from the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_EnsureDataBound\" data-linktype=\"self-bookmark\">EnsureDataBound()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calls the <span class=\"xref\">stem.Web.UI.WebControls.BaseDataBoundControl.DataBind*</span> method after verifying that the data listing control requires data binding and that a valid data source control is specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ExtractRowValues_System_Collections_Specialized_IOrderedDictionary_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">ExtractRowValues(IOrderedDictionary,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the values of each field displayed and stores them in the specified <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_GetCallbackResult\" data-linktype=\"self-bookmark\">GetCallbackResult()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the result of a callback event that targets a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\" data-linktype=\"self-bookmark\">GetCallbackScript(IButtonControl,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the callback string created using the specified argument.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_InitializePager_System_Web_UI_WebControls_DetailsViewRow_System_Web_UI_WebControls_PagedDataSource_\" data-linktype=\"self-bookmark\">InitializePager(DetailsViewRow,PagedDataSource)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the pager row for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_InitializeRow_System_Web_UI_WebControls_DetailsViewRow_System_Web_UI_WebControls_DataControlField_\" data-linktype=\"self-bookmark\">InitializeRow(DetailsViewRow,DataControlField)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_InsertItem_System_Boolean_\" data-linktype=\"self-bookmark\">InsertItem(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the current record in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_IsBindableType_System_Type_\" data-linktype=\"self-bookmark\">IsBindableType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified data type can be bound to a field in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_LoadControlState_System_Object_\" data-linktype=\"self-bookmark\">LoadControlState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnBubbleEvent_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBubbleEvent(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the event for the Web server control is passed up the page&#39;s user interface (UI) server control hierarchy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnDataSourceViewChanged_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDataSourceViewChanged(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_DataSourceViewChanged\" data-linktype=\"relative-path\">DataSourceViewChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnInit_System_EventArgs_\" data-linktype=\"self-bookmark\">OnInit(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemCommand_System_Web_UI_WebControls_DetailsViewCommandEventArgs_\" data-linktype=\"self-bookmark\">OnItemCommand(DetailsViewCommandEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemCreated_System_EventArgs_\" data-linktype=\"self-bookmark\">OnItemCreated(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemDeleted_System_Web_UI_WebControls_DetailsViewDeletedEventArgs_\" data-linktype=\"self-bookmark\">OnItemDeleted(DetailsViewDeletedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemDeleting_System_Web_UI_WebControls_DetailsViewDeleteEventArgs_\" data-linktype=\"self-bookmark\">OnItemDeleting(DetailsViewDeleteEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemInserted_System_Web_UI_WebControls_DetailsViewInsertedEventArgs_\" data-linktype=\"self-bookmark\">OnItemInserted(DetailsViewInsertedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"relative-path\">ItemInserted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemInserting_System_Web_UI_WebControls_DetailsViewInsertEventArgs_\" data-linktype=\"self-bookmark\">OnItemInserting(DetailsViewInsertEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemUpdated_System_Web_UI_WebControls_DetailsViewUpdatedEventArgs_\" data-linktype=\"self-bookmark\">OnItemUpdated(DetailsViewUpdatedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"relative-path\">ItemUpdated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnItemUpdating_System_Web_UI_WebControls_DetailsViewUpdateEventArgs_\" data-linktype=\"self-bookmark\">OnItemUpdating(DetailsViewUpdateEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnModeChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnModeChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnModeChanging_System_Web_UI_WebControls_DetailsViewModeEventArgs_\" data-linktype=\"self-bookmark\">OnModeChanging(DetailsViewModeEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnPageIndexChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPageIndexChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnPageIndexChanging_System_Web_UI_WebControls_DetailsViewPageEventArgs_\" data-linktype=\"self-bookmark\">OnPageIndexChanging(DetailsViewPageEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnPagePreLoad_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPagePreLoad(Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the initialized state of the data-bound control before the control is loaded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_OnPreRender_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPreRender(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PerformDataBinding_System_Collections_IEnumerable_\" data-linktype=\"self-bookmark\">PerformDataBinding(IEnumerable)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Binds the specified data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PrepareControlHierarchy\" data-linktype=\"self-bookmark\">PrepareControlHierarchy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets up the control hierarchy of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_RaiseCallbackEvent_System_String_\" data-linktype=\"self-bookmark\">RaiseCallbackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the arguments for the callback handler in the <span class=\"xref\">stem.Web.UI.ClientScriptManager.GetCallbackEventReference*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_RaisePostBackEvent_System_String_\" data-linktype=\"self-bookmark\">RaisePostBackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the appropriate events for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when it posts back to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_Render_System_Web_UI_HtmlTextWriter_\" data-linktype=\"self-bookmark\">Render(HtmlTextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Displays the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control on the client using the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_SaveControlState\" data-linktype=\"self-bookmark\">SaveControlState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_SaveViewState\" data-linktype=\"self-bookmark\">SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the current view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_SetPageIndex_System_Int32_\" data-linktype=\"self-bookmark\">SetPageIndex(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the index of the currently displayed page in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_TrackViewState\" data-linktype=\"self-bookmark\">TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Marks the starting point to begin tracking and saving view-state changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_UpdateItem_System_Boolean_\" data-linktype=\"self-bookmark\">UpdateItem(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the current record in the data source.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemCommand\" data-linktype=\"self-bookmark\">ItemCommand</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"self-bookmark\">ItemCreated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a record is created in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"self-bookmark\">ItemDeleted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a Delete button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the delete operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"self-bookmark\">ItemDeleting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a Delete button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the delete operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"self-bookmark\">ItemInserted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an Insert button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the insert operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"self-bookmark\">ItemInserting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an Insert button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the insert operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"self-bookmark\">ItemUpdated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an Update button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the update operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"self-bookmark\">ItemUpdating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an Update button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the update operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"self-bookmark\">ModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control attempts to change between edit, insert, and read-only mode, but after the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.CurrentMode*</span> property is updated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"self-bookmark\">ModeChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control attempts to change between edit, insert, and read-only mode, but before the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.CurrentMode*</span> property is updated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PageIndexChanged\" data-linktype=\"self-bookmark\">PageIndexChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.PageIndex*</span> property changes after a paging operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"self-bookmark\">PageIndexChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.PageIndex*</span> property changes before a paging operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_ICallbackEventHandler_GetCallbackResult\" data-linktype=\"self-bookmark\">ICallbackEventHandler.GetCallbackResult()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>See the method <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.GetCallbackResult*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_System_String_\" data-linktype=\"self-bookmark\">ICallbackEventHandler.RaiseCallbackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the callback event using the specified arguments.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_IDataItemContainer_DataItemIndex\" data-linktype=\"self-bookmark\">IDataItemContainer.DataItemIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.DataItemIndex*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_IDataItemContainer_DisplayIndex\" data-linktype=\"self-bookmark\">IDataItemContainer.DisplayIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IDataItemContainer.DisplayIndex*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_IPostBackEventHandler_RaisePostBackEvent_System_String_\" data-linktype=\"self-bookmark\">IPostBackEventHandler.RaisePostBackEvent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IPostBackEventHandler.RaisePostBackEvent*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_ICallbackContainer_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\" data-linktype=\"self-bookmark\">ICallbackContainer.GetCallbackScript(IButtonControl,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the callback script for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataKeyNames\" data-linktype=\"self-bookmark\">IDataBoundControl.DataKeyNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataKeyNames*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataMember\" data-linktype=\"self-bookmark\">IDataBoundControl.DataMember</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataMember*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSource\" data-linktype=\"self-bookmark\">IDataBoundControl.DataSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataSource*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSourceID\" data-linktype=\"self-bookmark\">IDataBoundControl.DataSourceID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataSourceID*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSourceObject\" data-linktype=\"self-bookmark\">IDataBoundControl.DataSourceObject</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataSourceObject*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundItemControl_DataKey\" data-linktype=\"self-bookmark\">IDataBoundItemControl.DataKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundItemControl.DataKey*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundItemControl_Mode\" data-linktype=\"self-bookmark\">IDataBoundItemControl.Mode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundItemControl.Mode*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IFieldControl_FieldsGenerator\" data-linktype=\"self-bookmark\">IFieldControl.FieldsGenerator</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IFieldControl.FieldsGenerator*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IPostBackContainer_GetPostBackOptions_System_Web_UI_WebControls_IButtonControl_\" data-linktype=\"self-bookmark\">IPostBackContainer.GetPostBackOptions(IButtonControl)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView__ctor\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DetailsView()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DetailsView ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class. To dynamically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to a page, create a new <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> object, set its properties, and then add it to the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection of a container control, such as <a class=\"xref\" href=\"system.web.ui.webcontrols.placeholder\" data-linktype=\"relative-path\">PlaceHolder</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the constructor to dynamically add a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to a page.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewCtor#1\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head&gt;\n    &lt;title&gt;DetailsView Constructor Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n    \n      Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n        \n        &#39; Create a new DetailsView object.\n        Dim storeDetailsView As New DetailsView()\n        \n        &#39; Set the DetailsView object&#39;s properties.\n        storeDetailsView.ID = &quot;StoresDetailsView&quot;\n        storeDetailsView.DataSourceID = &quot;StoresSqlDataSource&quot;\n        storeDetailsView.AutoGenerateRows = True\n        storeDetailsView.AllowPaging = True\n        storeDetailsView.PagerSettings.Mode = _\n          PagerButtons.NextPrevious\n\n        &#39; Add the DetailsView object to the Controls collection\n        &#39; of the PlaceHolder control.\n        DetailsViewPlaceHolder.Controls.Add(storeDetailsView)\n\n      End Sub\n    \n    &lt;/script&gt;\n  \n  &lt;/head&gt;\n  \n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Constructor Example&lt;/h3&gt;\n        \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:PlaceHolder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;  \n        &lt;asp:sqldatasource id=&quot;StoresSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], \n            [city], [state], [zip] FROM [stores]&quot;\n          connectionstring=\n            &quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n          runat=&quot;server&quot;&gt;          \n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewCtor#1\">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head&gt;\n    &lt;title&gt;DetailsView Constructor Example&lt;/title&gt;\n&lt;script runat=&quot;server&quot;&gt;\n    \n      void Page_Load(Object sender, EventArgs e)\n      {\n        \n        // Create a new DetailsView object.\n        DetailsView storeDetailsView = new DetailsView();\n        \n        // Set the DetailsView object&#39;s properties.\n        storeDetailsView.ID = &quot;StoresDetailsView&quot;;\n        storeDetailsView.DataSourceID = &quot;StoresSqlDataSource&quot;;\n        storeDetailsView.AutoGenerateRows = true;\n        storeDetailsView.AllowPaging = true;\n        storeDetailsView.PagerSettings.Mode = \n          PagerButtons.NextPrevious;\n\n        // Add the DetailsView object to the Controls collection\n        // of the PlaceHolder control.\n        DetailsViewPlaceHolder.Controls.Add(storeDetailsView);\n\n      }\n    \n    &lt;/script&gt;\n  \n  &lt;/head&gt;\n  \n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Constructor Example&lt;/h3&gt;\n        \n        &lt;!-- Use a PlaceHolder control as the container for the --&gt;\n        &lt;!-- dynamically generated DetailsView control.         --&gt;       \n        &lt;asp:PlaceHolder id=&quot;DetailsViewPlaceHolder&quot;\n          runat=&quot;server&quot;/&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;  \n        &lt;asp:sqldatasource id=&quot;StoresSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], \n            [city], [state], [zip] FROM [stores]&quot;\n          connectionstring=\n            &quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n          runat=&quot;server&quot;&gt;          \n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_AllowPaging\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_AllowPaging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowPaging</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the paging feature is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AllowPaging { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to enable the paging feature; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control has built-in paging capabilities, which allow a user to navigate to a different record in the data source.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control can perform both user interface (UI) and data source paging. The UI paging feature can be used with any data source object that supports the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">System.Collections.ICollection</a> interface. For each paging operation, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control queries the data source for the entire data collection and selects the row to display, essentially discarding the remaining data.  </p>\n<p> If a data source implements <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a> and the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_CanPage_\" data-linktype=\"relative-path\">CanPage</a> property returns <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control will use data source paging instead of UI paging. In this case, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control will query for only the row needed for each paging operation. Thus, data source paging is more efficient than UI paging. Only the <a class=\"xref\" href=\"system.web.ui.webcontrols.objectdatasourceview\" data-linktype=\"relative-path\">ObjectDataSourceView</a> object supports data source paging without modification.  </p>\n<p> To enable the paging feature, set the AllowPaging property to <code>true</code>. You can determine the total number of items in the underlying data source by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageCount_\" data-linktype=\"relative-path\">PageCount</a> property. To determine the index of the currently displayed item, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property.  </p>\n<p> When paging is enabled, an additional row called the pager row is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The pager row contains the page navigation controls and can be displayed at the top, bottom, or both the top and bottom of the control. The pager row has two built-in pager display modes: numbered pages and next and previous page links (default). The numbered pages mode displays links for the individual pages, allowing the user to navigate to a specific page. The next and previous links mode displays controls that allow the user to navigate to the next or the previous page.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control automatically hides the pager row when the data source contains fewer than two records.  </p>\n</div>\n<p> You can control the settings of the pager row (such as the pager display mode, the number of page links to display at a time, and the pager control&#39;s text label) by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerSettings_\" data-linktype=\"relative-path\">PagerSettings</a> property. To control the appearance of the pager row (including its background color, font color, and position), use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a> property. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control also allows you to define a custom template for the pager row. For more information on creating a custom pager row template, see <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerTemplate_\" data-linktype=\"relative-path\">PagerTemplate</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control provides several events that you can use to perform a custom action when paging occurs. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a></td>\n<td>Occurs when one of the pager buttons is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control handles the paging operation. This event is commonly used when you need to perform a task after the user navigates to a different record in the control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a></td>\n<td>Occurs when one of the pager buttons is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control handles the paging operation. This event is often used to cancel the paging operation.</td>\n</tr>\n</tbody>\n</table>\n<p> The value of AllowPaging is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AllowPaging property to enable the paging capabilities of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewAllowPaging#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AllowPaging Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;Customers&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings mode=&quot;NextPreviousFirstLast&quot;\n            firstpagetext=&quot;First&quot;\n            lastpagetext=&quot;Last&quot;\n            nextpagetext=&quot;Next&quot;\n            previouspagetext=&quot;Prev&quot;/&gt;\n            \n          &lt;pagerstyle forecolor=&quot;White&quot;\n            backcolor=&quot;Blue&quot;\n            font-names=&quot;Arial&quot;\n            font-size=&quot;8&quot; /&gt;   \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database. --&gt;           \n        &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n          SelectCommand=&quot;SELECT [CompanyName], [ContactName], \n             [CustomerID] FROM [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewAllowPaging#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AllowPaging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AllowPaging Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;Customers&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings mode=&quot;NextPreviousFirstLast&quot;\n            firstpagetext=&quot;First&quot;\n            lastpagetext=&quot;Last&quot;\n            nextpagetext=&quot;Next&quot;\n            previouspagetext=&quot;Prev&quot;/&gt;\n            \n          &lt;pagerstyle forecolor=&quot;White&quot;\n            backcolor=&quot;Blue&quot;\n            font-names=&quot;Arial&quot;\n            font-size=&quot;8&quot; /&gt;   \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database. --&gt;           \n        &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n          SelectCommand=&quot;SELECT [CompanyName], [ContactName], \n             [CustomerID] FROM [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_AlternatingRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternatingRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AlternatingRowStyle property to control the appearance of alternating data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. When this property is set, the data rows are displayed alternating between the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_RowStyle_\" data-linktype=\"relative-path\">RowStyle</a> settings and the AlternatingRowStyle settings. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>AlternatingRowStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>AlternatingRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AlternatingRowStyle property to specify the font and style settings for the alternating data rows in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewRowStyle#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersView&quot;\n          datasourceid=&quot;Customers&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;RowStyle BackColor=&quot;LightGray&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n            \n          &lt;AlternatingRowStyle BackColor=&quot;White&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database. --&gt;           \n        &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n          ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n          SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID], [Phone] FROM [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewRowStyle#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersView&quot;\n          datasourceid=&quot;Customers&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;RowStyle BackColor=&quot;LightGray&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n            \n          &lt;AlternatingRowStyle BackColor=&quot;White&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database. --&gt;           \n        &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n          ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n          SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID], [Phone] FROM [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateDeleteButton\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateDeleteButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateDeleteButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the built-in control to delete the current record is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateDeleteButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the built-in control to delete the current record; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is bound to an object that inherits from <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a> and the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_CanDelete_\" data-linktype=\"relative-path\">CanDelete</a> property returns <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control can take advantage of the data source control&#39;s capabilities and provide automatic deleting functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasourceview\" data-linktype=\"relative-path\">SqlDataSourceView</a> object to delete data, the <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource#System_Web_UI_WebControls_SqlDataSource_DeleteCommand_\" data-linktype=\"relative-path\">DeleteCommand</a> property of the underlying <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a> object must be set with a delete query statement.  </p>\n</div>\n<p> When the AutoGenerateDeleteButton property is set to <code>true</code>, a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> row field with a Delete button is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. Clicking the Delete button permanently removes that record from the data source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must also set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property for the automatic deletion feature to work.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control provides several events that you can use to perform a custom action when a record is deleted. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a></td>\n<td>Occurs when the Delete button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control deletes the record from the data source. This event is often used to check the results of the delete operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a></td>\n<td>Occurs when the Delete button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control deletes the record from the data source. This event is often used to cancel the delete operation.</td>\n</tr>\n</tbody>\n</table>\n<p> The value of AutoGenerateDeleteButton is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AutoGenerateDeleteButton property to display the built-in control to delete the current record.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewAutoGenerateDeleteButton#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateDeleteButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateDeleteButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneratedeletebutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n            ConnectionString=\n              &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n              [CompanyName], [Address], [City], [PostalCode], [Country]) \n              VALUES (@CustomerID, @CompanyName, @Address, @City, \n              @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] From \n              [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewAutoGenerateDeleteButton#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateDeleteButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateDeleteButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneratedeletebutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n            ConnectionString=\n              &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n              [CompanyName], [Address], [City], [PostalCode], [Country]) \n              VALUES (@CustomerID, @CompanyName, @Address, @City, \n              @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] From \n              [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateEditButton\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateEditButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateEditButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the built-in controls to edit the current record are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateEditButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the built-in controls to edit the current record; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a data source control that supports updating is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control can take advantage of the data source control&#39;s capabilities and provide automatic updating functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a data source control to update data, its <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource#System_Web_UI_WebControls_SqlDataSource_UpdateCommand_\" data-linktype=\"relative-path\">UpdateCommand</a> property must be set with an update query statement.  </p>\n</div>\n<p> When the AutoGenerateEditButton property is set to <code>true</code>, a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> row field with an Edit button is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. Clicking the Edit button puts that <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control in edit mode. When in edit mode, each bound field in the control that is not read-only displays the appropriate input control, such as a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control, for the field&#39;s data type. This allows the user to modify the field&#39;s value.  </p>\n<p> When clicked, the Edit button is also replaced with an Update button and a Cancel button. Clicking the Update button updates the record in the data source with any value changes and returns the control to the mode specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DefaultMode_\" data-linktype=\"relative-path\">DefaultMode</a> property. Clicking the Cancel button abandons any value changes and returns the control to the default mode.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To put a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control in edit mode programmatically, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ChangeMode_\" data-linktype=\"relative-path\">ChangeMode</a> method.  </p>\n</div>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\" data-linktype=\"relative-path\">AutoGenerateRows</a> property is also set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control automatically ensures that the field or fields specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property are read-only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Unless you implement your own updating functionality, you must set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property for the automatic updating feature to work.  </p>\n</div>\n<p> You can control the appearance of the data rows when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EditRowStyle_\" data-linktype=\"relative-path\">EditRowStyle</a> property. Common settings usually include a custom background color, foreground color, and font properties.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control provides several events that you can use to perform a custom action when a record is updated. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"relative-path\">ItemUpdated</a></td>\n<td>Occurs when the Update button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control updates the record. This event is often used to check the results of the update operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a></td>\n<td>Occurs when the Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control updates the record. This event is often used to cancel the update operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a></td>\n<td>Occurs after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control changes modes.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a></td>\n<td>Occurs before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control changes modes. This event is often used to cancel the mode change.</td>\n</tr>\n</tbody>\n</table>\n<p> The value of AutoGenerateEditButton is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AutoGenerateEditButton property to display the built-in controls to edit the current record.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewAutoGenerateEditButton#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateEditButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateEditButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewAutoGenerateEditButton#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateEditButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateEditButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateInsertButton\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateInsertButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateInsertButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the built-in controls to insert a new record are displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateInsertButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the built-in controls to insert a new record; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a data source control that supports inserting is bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control can take advantage of the data source control&#39;s capabilities and provide automatic inserting functionality.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For a data source control to insert data, its <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource#System_Web_UI_WebControls_SqlDataSource_InsertCommand_\" data-linktype=\"relative-path\">InsertCommand</a> property must be set with an insert query statement.  </p>\n</div>\n<p> When the AutoGenerateInsertButton property is set to <code>true</code>, a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a> row field with a New button is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. Clicking the New button puts that <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control in insert mode. When in insert mode, each bound field in the control that is not read-only displays the appropriate input control, such as a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control, for the field&#39;s data type. This allows the user to enter the field&#39;s value for the new record.  </p>\n<p> When clicked, the New button is also replaced with an Insert button and a Cancel button. Clicking the Insert button inserts the new record in the data source and returns the control to the mode specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DefaultMode_\" data-linktype=\"relative-path\">DefaultMode</a> property. Clicking the Cancel button abandons the insert operation and returns the control to the default mode.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To put a row in insert mode programmatically, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ChangeMode_\" data-linktype=\"relative-path\">ChangeMode</a> method.  </p>\n</div>\n<p> You can control the appearance of a record that is in insert mode by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_InsertRowStyle_\" data-linktype=\"relative-path\">InsertRowStyle</a> property. Common settings usually include a custom background color, foreground color, and font properties.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control provides several events that you can use to perform a custom action when a new record is inserted. The following table lists the available events.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"relative-path\">ItemInserted</a></td>\n<td>Occurs when the Insert button is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control inserts the record. This event is often used to check the results of the insert operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a></td>\n<td>Occurs when the Insert button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control inserts the record. This event is often used to cancel the insert operation.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a></td>\n<td>Occurs after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control changes modes.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a></td>\n<td>Occurs before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control changes modes. This event is often used to cancel the mode change.</td>\n</tr>\n</tbody>\n</table>\n<p> The value of AutoGenerateInsertButton is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AutoGenerateInsertButton property to display the built-in controls to insert a new record in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewAutoGenerateInsertButton#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateInsertButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateInsertButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateinsertbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewAutoGenerateInsertButton#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateInsertButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateInsertButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateinsertbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateRows\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateRows</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether row fields for each field in the data source are automatically generated and displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool AutoGenerateRows { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display automatically generated bound row fields for each field in the data source; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each data row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is represented by a row field. When the AutoGenerateRows property is set to <code>true</code>, an automatically generated bound row field is created for each field in the data source. Each field is then displayed in a row as text, in the order in which each field appears in the data source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Automatically generated bound row fields are not added to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Fields_\" data-linktype=\"relative-path\">Fields</a> collection.  </p>\n</div>\n<p> Automatically generating the rows provides a quick and easy way to display every field in the record. However, to make use of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control&#39;s advanced capabilities you must explicitly declare the row fields to include in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. For more information, see <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Fields_\" data-linktype=\"relative-path\">Fields</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Explicitly declared row fields can be used in combination with automatically generated row fields. When both are used, explicitly declared row fields are rendered first, followed by the automatically generated row fields.  </p>\n</div>\n<p> The value of AutoGenerateRows is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AutoGenerateRows property to automatically create bound row fields for each field in the data source.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewAutoGenerateRows#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateRows Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateRows Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewAutoGenerateRows#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateRows Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateRows Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_BackImageUrl\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_BackImageUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackImageUrl</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the URL to an image to display in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string BackImageUrl { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL to an image to display in the background of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the BackImageUrl property to specify the URL to an image to display in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the specified image is smaller than the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, the image is tiled to fill in the background. If the image is larger than the control, the image is cropped.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. You must provide your own image for this example to work.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewBackImageUrl#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView BackImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView BackImageUrl Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          backimageurl=&quot;~\\images\\BackgroundImage.jpg&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewBackImageUrl#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView BackImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView BackImageUrl Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          backimageurl=&quot;~\\images\\BackgroundImage.jpg&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n             From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_BottomPagerRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_BottomPagerRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BottomPagerRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the bottom pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DetailsViewRow BottomPagerRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> that represents the bottom pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When paging is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), an additional row called the pager row is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The pager row contains controls that allow the user to navigate to other records, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the BottomPagerRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the bottom pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The BottomPagerRow property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control creates the bottom pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the bottom pager row, for example when adding custom content. Any modification to the BottomPagerRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the BottomPagerRow property to access the bottom pager row of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control during the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event. Two <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> controls within the custom pager row are then updated with the current page number and total number of pages.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n      // Get the pager row.\n      DetailsViewRow pagerRow = CustomerDetailView.BottomPagerRow;\n\n      // Get the Label controls that display the current page information \n      // from the pager row.\n      Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n      Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n      if ((pageNum != null) &amp;&amp; (totalNum != null))\n      {\n          // Update the Label controls with the current page values.\n          int page = CustomerDetailView.DataItemIndex + 1;\n          int count = CustomerDetailView.DataItemCount;\n\n          pageNum.Text = page.ToString();\n          totalNum.Text = count.ToString();\n      }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.BottomPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n        \n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_Caption\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_Caption_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Caption</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Caption { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The default value is an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Caption property to specify the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The text that you specify provides assistive technology devices with a description of the table that can be used to make the control more accessible.  </p>\n<p> Additional accessibility support for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is provided by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CaptionAlign_\" data-linktype=\"relative-path\">CaptionAlign</a> property. Use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CaptionAlign_\" data-linktype=\"relative-path\">CaptionAlign</a> property to specify the alignment of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<p> The value of Caption is stored in view state.  </p>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewCaption#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Caption and CaptionAlign Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          caption=&quot;Customer Details&quot;\n          captionalign=&quot;Left&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewCaption#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Caption and CaptionAlign Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          caption=&quot;Customer Details&quot;\n          captionalign=&quot;Left&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CaptionAlign\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CaptionAlign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CaptionAlign</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the horizontal or vertical position of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a> values. The default is <code>TableCaptionAlign.NotSet</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not one of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CaptionAlign property to specify the horizontal or vertical position of the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is provided to make the control more accessible to users of assistive technology devices.  </p>\n<p> This property is set using one of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecaptionalign\" data-linktype=\"relative-path\">TableCaptionAlign</a> enumeration values. The following table lists the possible values.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>TableCaptionAlign.Bottom</code></td>\n<td>The caption element is aligned with the bottom of the table.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.Left</code></td>\n<td>The caption element is aligned with the left side of the table.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.NotSet</code></td>\n<td>The caption element&#39;s alignment is not set.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.Right</code></td>\n<td>The caption element is aligned with the right side of the table.</td>\n</tr>\n<tr>\n<td><code>TableCaptionAlign.Top</code></td>\n<td>The caption element is aligned with the top of the table.</td>\n</tr>\n</tbody>\n</table>\n<p> Additional accessibility support for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is provided by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Caption_\" data-linktype=\"relative-path\">Caption</a> property. Use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Caption_\" data-linktype=\"relative-path\">Caption</a> property to specify the text to render in an HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<p> The value of CaptionAlign is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control should be rendered on the left side of the control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewCaption#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Caption and CaptionAlign Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          caption=&quot;Customer Details&quot;\n          captionalign=&quot;Left&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewCaption#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Caption and CaptionAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Caption and CaptionAlign Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          caption=&quot;Customer Details&quot;\n          captionalign=&quot;Left&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] \n            From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CellPadding\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CellPadding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellPadding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of space between the contents of a cell and the cell&#39;s border.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int CellPadding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The amount of space, in pixels, between the contents of a cell and the cell&#39;s border. The default value is -1, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CellPadding property to control the spacing between the contents of a cell and the cell&#39;s border. The padding amount specified is added to all four sides of the cell.  </p>\n<p> All cells in the same column of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control have the same width. The padding amount is applied to the widest cell and all other cells in the column are adjusted to that cell width. Similarly, all cells in the same row have the same height. The padding amount is applied to the tallest cell in the row and all other cells in the row are adjusted to that cell height. Individual cell sizes cannot be specified.  </p>\n<p> To adjust the spacing between cells, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CellSpacing_\" data-linktype=\"relative-path\">CellSpacing</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell&#39;s border.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewCellPadding#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView CellPadding and CellSpacing Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          cellpadding=&quot;10&quot;\n          cellspacing=&quot;5&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewCellPadding#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView CellPadding and CellSpacing Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          cellpadding=&quot;10&quot;\n          cellspacing=&quot;5&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CellSpacing\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CellSpacing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellSpacing</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of space between cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int CellSpacing { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The amount of space, in pixels, between cells. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CellSpacing property to control the spacing between adjacent cells in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This spacing is applied both vertically and horizontally. The cell spacing is uniform for the entire control. Individual cell spacing between rows or columns cannot be specified.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you set this property to a value greater than 0, and then set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_GridLines_\" data-linktype=\"relative-path\">GridLines</a> property to a value that displays the cell borders, a gap is displayed between the borders of adjacent cells. In this situation, the CellSpacing property controls the size of the gap.  </p>\n</div>\n<p> To adjust the spacing between the contents of a cell and the cell&#39;s border, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CellPadding_\" data-linktype=\"relative-path\">CellPadding</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewCellPadding#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView CellPadding and CellSpacing Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          cellpadding=&quot;10&quot;\n          cellspacing=&quot;5&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewCellPadding#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView CellPadding and CellSpacing Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView CellPadding and CellSpacing Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          cellpadding=&quot;10&quot;\n          cellspacing=&quot;5&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CommandRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CommandRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommandRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of a command row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle CommandRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of a command row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CommandRowStyle property to control the appearance of a command row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. A command row contains the command buttons to perform operations such as editing, deleting, and inserting. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>CommandRowStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>CommandRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CommandRowStyle property to specify the font and style settings for the command row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewCommandRowStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView CommandRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView CommandRowStyle Example&lt;/h3&gt;\n\n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;false&quot;  \n          datakeynames=&quot;CustomerID&quot;     \n          gridlines=&quot;Both&quot;\n          allowpaging=&quot;true&quot;     \n          runat=&quot;server&quot;&gt;\n          \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot; /&gt;\n                      \n          &lt;commandrowstyle backcolor=&quot;LightCyan&quot;\n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                              \n          &lt;fields&gt;\n          \n            &lt;asp:commandfield ButtonType=&quot;Link&quot;\n              ShowEditButton=&quot;true&quot;/&gt;\n            \n            &lt;asp:boundfield datafield=&quot;CustomerID&quot;\n              headertext=&quot;Customer ID&quot;\n              readonly=&quot;true&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;CompanyName&quot;\n              headertext=&quot;Company Name&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;Address&quot;\n              headertext=&quot;Address&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;City&quot;\n              headertext=&quot;City&quot;/&gt;\n                  \n            &lt;asp:boundfield datafield=&quot;PostalCode&quot;\n              headertext=&quot;Postal Code&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;Country&quot;\n              headertext=&quot;Country&quot;/&gt;\n              \n          &lt;/fields&gt;\n              \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewCommandRowStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView CommandRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView CommandRowStyle Example&lt;/h3&gt;\n\n        &lt;asp:detailsview id=&quot;CustomerDetailsView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;false&quot;  \n          datakeynames=&quot;CustomerID&quot;     \n          gridlines=&quot;Both&quot;\n          allowpaging=&quot;true&quot;     \n          runat=&quot;server&quot;&gt;\n          \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot; /&gt;\n                      \n          &lt;commandrowstyle backcolor=&quot;LightCyan&quot;\n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                              \n          &lt;fields&gt;\n          \n            &lt;asp:commandfield ButtonType=&quot;Link&quot;\n              ShowEditButton=&quot;true&quot;/&gt;\n            \n            &lt;asp:boundfield datafield=&quot;CustomerID&quot;\n              headertext=&quot;Customer ID&quot;\n              readonly=&quot;true&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;CompanyName&quot;\n              headertext=&quot;Company Name&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;Address&quot;\n              headertext=&quot;Address&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;City&quot;\n              headertext=&quot;City&quot;/&gt;\n                  \n            &lt;asp:boundfield datafield=&quot;PostalCode&quot;\n              headertext=&quot;Postal Code&quot;/&gt;\n              \n            &lt;asp:boundfield datafield=&quot;Country&quot;\n              headertext=&quot;Country&quot;/&gt;\n              \n          &lt;/fields&gt;\n              \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CurrentMode\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CurrentMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current data-entry mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.DetailsViewMode CurrentMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the CurrentMode property to determine whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit, insert, or read-only mode. The following table lists the different mode values.  </p>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DetailsViewMode.Edit</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode, which allows the user to update the values of a record.</td>\n</tr>\n<tr>\n<td><code>DetailsViewMode.Insert</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode, which allows the user to add a new record to the data source.</td>\n</tr>\n<tr>\n<td><code>DetailsViewMode.ReadOnly</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in read-only mode, which is the normal display mode.</td>\n</tr>\n</tbody>\n</table>\n<p> This value is normally set automatically by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control by when the New, Update, Insert, Delete, or Cancel command button is clicked. You can also programmatically change the mode by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ChangeMode_\" data-linktype=\"relative-path\">ChangeMode</a> method.  </p>\n<p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control changes modes, the events in the following table are raised. This allows you to create a custom event handler that performs a routine when the event occurs.  </p>\n<table>\n<thead>\n<tr>\n<th>Event</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a></td>\n<td>Occurs when a command button that changes the mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the mode changes.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a></td>\n<td>Occurs when a command button that changes the mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the mode changes.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CurrentMode property to determine whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit, insert, or read-only mode. If the user attempts to navigate to a different record while the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode, the paging operation is canceled.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewCurrentMode#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n\n    Sub CustomerDetailView_ItemCommand(ByVal sender As Object, _\n      ByVal e As DetailsViewCommandEventArgs)\n        &#39; Clear the error message if the user cancels the edit \n        &#39; operation.\n        If e.CommandName = &quot;Cancel&quot; Then\n            ErrorMessageLabel.Text = &quot;&quot;\n        End If\n    End Sub\n\n    Protected Sub CustomerDetailView_PageIndexChanging( _\n    ByVal sender As Object, ByVal e As DetailsViewPageEventArgs)\n        &#39; Cancel the paging operation if the user tries to navigate \n        &#39; to another record while in edit mode.\n        If CustomerDetailView.CurrentMode = DetailsViewMode.Edit Then\n            e.Cancel = True\n            &#39; Display an error message.\n            ErrorMessageLabel.Text = _\n                &quot;You cannot navigate to another record while in edit mode.&quot;\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView CurrentMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView CurrentMode Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n          DataSourceID=&quot;DetailsViewSource&quot; \n          AutoGenerateRows=&quot;true&quot;\n          AutoGenerateEditButton=&quot;true&quot; \n          DataKeyNames=&quot;CustomerID&quot; \n          GridLines=&quot;Both&quot; \n          AllowPaging=&quot;true&quot;\n          OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot; \n          runat=&quot;server&quot; \n          OnPageIndexChanging=&quot;CustomerDetailView_PageIndexChanging&quot;&gt;\n          \n          &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;br /&gt;\n        \n        &lt;asp:Label ID=&quot;ErrorMessageLabel&quot; \n          ForeColor=&quot;Red&quot; runat=&quot;server&quot; /&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewCurrentMode#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n\n    void CustomerDetailView_ItemCommand(Object sender, \n      DetailsViewCommandEventArgs e)\n    {\n        // Clear the error message if the user cancels the edit \n        // operation.\n        if (e.CommandName == &quot;Cancel&quot;)\n        {\n            ErrorMessageLabel.Text = &quot;&quot;;\n        }\n    }\n\n    protected void CustomerDetailView_PageIndexChanging(\n      object sender, DetailsViewPageEventArgs e)\n    {\n        // Cancel the paging operation if the user tries to \n        // navigate to another record while in edit mode.\n        if (CustomerDetailView.CurrentMode == DetailsViewMode.Edit)\n        {\n            e.Cancel = true;\n            // Display an error message.\n            ErrorMessageLabel.Text = \n              &quot;You cannot navigate to another record while in edit mode.&quot;;\n        }\n\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView CurrentMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView CurrentMode Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n          DataSourceID=&quot;DetailsViewSource&quot; \n          AutoGenerateRows=&quot;true&quot;\n          AutoGenerateEditButton=&quot;true&quot; \n          DataKeyNames=&quot;CustomerID&quot; \n          GridLines=&quot;Both&quot; \n          AllowPaging=&quot;true&quot;\n          OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot; \n          runat=&quot;server&quot; \n          OnPageIndexChanging=&quot;CustomerDetailView_PageIndexChanging&quot;&gt;\n          \n          &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;br /&gt;\n        \n        &lt;asp:Label ID=&quot;ErrorMessageLabel&quot; \n          ForeColor=&quot;Red&quot; runat=&quot;server&quot; /&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DataItem\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DataItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets the data item bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual object DataItem { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the data item bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataItem property to access the data item bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The data item is often used to access the field values of the current record directly. The type of the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> returned by this property varies depending on the data source. For example, when a <a class=\"xref\" href=\"system.web.ui.webcontrols.sqldatasource\" data-linktype=\"relative-path\">SqlDataSource</a> control is bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, a <a class=\"xref\" href=\"system.data.datarowview\" data-linktype=\"relative-path\">DataRowView</a> object is returned.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property is available only after data binding has occurred. Before data binding occurs, this property returns <code>null</code>. This property is also not applicable when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode and returns <code>null</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataItem property to determine the value of a field in the data item.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewDataItem#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;%@ import namespace=&quot;System.Data&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n    protected void CustomerDetailView_DataBound(object sender, \n      EventArgs e)\n    {\n        DataRowView rowView = (DataRowView)CustomerDetailView.DataItem;\n        if (rowView.Row[0].ToString() == &quot;SpecialID&quot;)\n        {\n            CustomerDetailView.FieldHeaderStyle.BackColor = \n              System.Drawing.Color.Red;\n        }\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ModeChanging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ModeChanging Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewDataItem#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;%@ import namespace=&quot;System.Data&quot;%&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n    Protected Sub CustomerDetailView_DataBound( _\n        ByVal sender As Object, ByVal e As EventArgs)\n        Dim rowView As DataRowView = _\n          CType(CustomerDetailView.DataItem, DataRowView)\n        If rowView.Row(0).ToString() = &quot;SpecialID&quot; Then\n            CustomerDetailView.FieldHeaderStyle.BackColor = _\n              System.Drawing.Color.Red\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ModeChanging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ModeChanging Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DataItemCount\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DataItemCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataItemCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of items in the underlying data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int DataItemCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of items in the underlying data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), use the DataItemCount property to determine the total number of records in the underlying data source.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control displays only one record at a time, this value also corresponds to the total number of pages required to display every record in the data source.  </p>\n</div>\n<p> To determine the index of the current record from the underlying data source, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataItemIndex_\" data-linktype=\"relative-path\">DataItemIndex</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataItemCount property to determine the number of items in the data source. This value is used to display the page count in a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control contained within a custom pager row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n      // Get the pager row.\n      DetailsViewRow pagerRow = CustomerDetailView.BottomPagerRow;\n\n      // Get the Label controls that display the current page information \n      // from the pager row.\n      Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n      Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n      if ((pageNum != null) &amp;&amp; (totalNum != null))\n      {\n          // Update the Label controls with the current page values.\n          int page = CustomerDetailView.DataItemIndex + 1;\n          int count = CustomerDetailView.DataItemCount;\n\n          pageNum.Text = page.ToString();\n          totalNum.Text = count.ToString();\n      }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.BottomPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n        \n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DataItemIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DataItemIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataItemIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the item being displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control from the underlying data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int DataItemIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the data item being displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control from the underlying data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), use the DataItemIndex property to determine the index of the currently displayed record. You can also use this property to programmatically change the displayed record.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the paging feature is enabled, you can also use this property to determine the page number of the record displayed; however, be aware that this property is zero-based.  </p>\n</div>\n<p> To determine the total number of items in the data source, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataItemCount_\" data-linktype=\"relative-path\">DataItemCount</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataItemIndex property to determine the index of the current item in the data source. This value is used to display the current page number in a <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control contained in a custom pager row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n      // Get the pager row.\n      DetailsViewRow pagerRow = CustomerDetailView.BottomPagerRow;\n\n      // Get the Label controls that display the current page information \n      // from the pager row.\n      Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n      Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n      if ((pageNum != null) &amp;&amp; (totalNum != null))\n      {\n          // Update the Label controls with the current page values.\n          int page = CustomerDetailView.DataItemIndex + 1;\n          int count = CustomerDetailView.DataItemCount;\n\n          pageNum.Text = page.ToString();\n          totalNum.Text = count.ToString();\n      }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.BottomPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n        \n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DataKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DataKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object that represents the primary key of the displayed record.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DataKey DataKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> that represents the primary key of the displayed record.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property is set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control automatically creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object that represents the key field or fields for the current record. Use the DataKey property to get this <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object. This property is commonly used to obtain the keys and their corresponding values for the fields specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> As a shortcut, you can also use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_SelectedValue_\" data-linktype=\"relative-path\">SelectedValue</a> property to determine the value of the first key field listed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataKey property to determine the key field and corresponding value for the current record.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewDataKey#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomerDetailView_ItemUpdated(Object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n  \n    // Create a dictionary that contains the key fields and values using\n    // the AllValues method of the DataKey object contained in the DataKey \n    // property.\n    IOrderedDictionary keyList = CustomerDetailView.DataKey.Values;\n\n    // Get the ArrayList objects that represent the key fields and values.\n    ArrayList keys = (ArrayList)keyList.Keys;\n    ArrayList values = (ArrayList)keyList.Values;\n\n    // Get the key field and value for the current record. \n    String keyField = keys[0].ToString();\n    String keyValue = values[0].ToString();\n    \n    // Log the update operation using the key field and value.\n    LogUpdate(keyField, keyValue);\n\n  }\n\n  void LogUpdate(String keyField, String keyValue)\n  {\n    // Insert code to log the update operation.\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView DataKey Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView DataKey Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          onitemupdated=&quot;CustomerDetailView_ItemUpdated&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n                    InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n          UpdateCommand=&quot;UPDATE [Customers] SET \n            [CompanyName] = @CompanyName, \n            [Address] = @Address, [City] = @City,\n            [PostalCode] = @PostalCode, [Country] = @Country\n            WHERE [CustomerID] = @CustomerID&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewDataKey#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemUpdated(ByVal sender As Object, _\n        ByVal e As DetailsViewUpdatedEventArgs)\n    \n        &#39; Create a dictionary that contains the key fields and values \n        &#39; using the AllValues method of the DataKey object contained \n        &#39; in the DataKey property.\n        \n        Dim keyList As IOrderedDictionary = _\n            CustomerDetailsView.DataKey.Values\n\n        &#39; Get the ArrayList objects that represent the key fields \n        &#39; and values.\n        Dim keys As ArrayList = CType(keyList.Keys, ArrayList)\n        Dim values As ArrayList = CType(keyList.Values, ArrayList)\n\n        &#39; Get the key field and value for the current record. \n        Dim keyField As String = keys(0).ToString()\n        Dim keyValue As String = values(0).ToString()\n    \n        &#39; Log the update operation using the key field and value.\n        LogUpdate(keyField, keyValue)\n\n    End Sub\n\n    Sub LogUpdate(ByVal keyField As String, ByVal keyValue As String)\n  \n        &#39; Insert code to log the update operation.\n  \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView DataKey Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView DataKey Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailsView&quot; \n          DataSourceID=&quot;DetailsViewSource&quot; \n          DataKeyNames=&quot;CustomerID&quot;\n          AutoGenerateRows=&quot;true&quot; \n          AutoGenerateEditButton=&quot;true&quot; \n          AllowPaging=&quot;true&quot; \n          OnItemUpdated=&quot;CustomerDetailView_ItemUpdated&quot;\n          runat=&quot;server&quot;&gt;\n          \n          &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n        &lt;/asp:DetailsView&gt;\n\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] \n              From [Customers]&quot;\n            UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n            [Address] = @Address, [City] = @City,\n            [PostalCode] = @PostalCode, [Country] = @Country\n            WHERE [CustomerID] = @CustomerID&quot;&gt;&lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DataKeyNames\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DataKeyNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataKeyNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an array that contains the names of the key fields for the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string[] DataKeyNames { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array that contains the names of the key fields of the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DataKeyNames property to specify a comma-separated list of field names that represent the primary key of the data source. When the DataKeyNames property is set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control automatically creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a> object that represents the key field or fields for the current record and stores it in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKey_\" data-linktype=\"relative-path\">DataKey</a> property. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is also set to <code>true</code>, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control automatically ensures that the field or fields specified in the DataKeyNames property are read-only.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must set the DataKeyNames property for the automatic updating, deleting, and inserting features of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to work.  </p>\n</div>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property of a row field is set to <code>false</code>, the row is not displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control and the data for the row does not make a round trip to the client. If you want the data for a row that is not visible to make a round trip, add the field name to the DataKeyNames property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DataKeyNames property to identify the key field for the data source bound to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewAutoGenerateDeleteButton#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateDeleteButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateDeleteButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneratedeletebutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n            ConnectionString=\n              &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n              [CompanyName], [Address], [City], [PostalCode], [Country]) \n              VALUES (@CustomerID, @CompanyName, @Address, @City, \n              @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] From \n              [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewAutoGenerateDeleteButton#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView AutoGenerateDeleteButton Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView AutoGenerateDeleteButton Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneratedeletebutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n            ConnectionString=\n              &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], \n              [CompanyName], [Address], [City], [PostalCode], [Country]) \n              VALUES (@CustomerID, @CompanyName, @Address, @City, \n              @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] From \n              [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DefaultMode\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DefaultMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultMode</div>        \r\n          </div>\r\n    \r\n            <p>Get or sets the default data-entry mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DetailsViewMode DefaultMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a> values. The default is <code>DetailsViewMode.ReadOnly</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value is not one of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DefaultMode property to specify whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control returns to edit, insert, or read-only mode after an edit or insert operation is performed. By default, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control returns to read-only mode; however, you can keep the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control in edit or insert mode by setting this property to the appropriate value. The following table lists the different mode values.  </p>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DetailsViewMode.Edit</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode, which allows the user to update the values of a record.</td>\n</tr>\n<tr>\n<td><code>DetailsViewMode.Insert</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode, which allows the user to add a new record to the data source.</td>\n</tr>\n<tr>\n<td><code>DetailsViewMode.ReadOnly</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in read-only mode, which is the normal display mode.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the DefaultMode property to specify that the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control should remain in edit mode after a record has been updated.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewDefaultMode#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView DefaultMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView DefaultMode Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;   \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          defaultmode=&quot;Edit&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewDefaultMode#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView DefaultMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView DefaultMode Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;   \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          defaultmode=&quot;Edit&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DeleteMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DeleteMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method on the page that is called when the control performs a delete operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string DeleteMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the method on the page that is called when the control performs a delete operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a tutorial series on using model binding with Web Forms, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=286117\" data-linktype=\"external\">Model Binding and Web Forms</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EditRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EditRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the data rows when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the data rows when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EditRowStyle property to control the appearance of the data rows when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>EditRowStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>EditRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EditRowStyle property to specify the font and style settings for the data rows when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewEditRowStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EditRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EditRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;editrowstyle backcolor=&quot;LightCyan&quot;\n            forecolor=&quot;Blue&quot;\n            font-names=&quot;Arial&quot; /&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewEditRowStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EditRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EditRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;editrowstyle backcolor=&quot;LightCyan&quot;\n            forecolor=&quot;Blue&quot;\n            font-names=&quot;Arial&quot; /&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EmptyDataRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EmptyDataRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EmptyDataRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the empty data row displayed when the data source bound to a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control does not contain any records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that allows you to set the appearance of the empty data row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EmptyDataRowStyle property to control the appearance of the empty data row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The empty data row is displayed when the data source that is bound to the control does not contain any records. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>EmptyDataRowStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>EmptyDataRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EmptyDataRowStyle property to specify the font and style settings for the empty data row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewEmptyDataText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EmptyDataText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EmptyDataText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;StoresDetailsSqlDataSource&quot;\n          autogeneraterows=&quot;true&quot; \n          EmptyDataText=&quot;No records.&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;emptydatarowstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;Red&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;\n        \n        &lt;!-- The select query of the following SqlDataSource     --&gt;\n        &lt;!-- control has been intentionally set to return no     --&gt; \n        &lt;!-- results to demonstrate the empty data row.          --&gt;      \n        &lt;asp:sqldatasource id=&quot;StoresDetailsSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], [city], [state], [zip] FROM [stores] WHERE [state]=&#39;FL&#39;&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewEmptyDataText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EmptyDataText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EmptyDataText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;StoresDetailsSqlDataSource&quot;\n          autogeneraterows=&quot;true&quot; \n          EmptyDataText=&quot;No records.&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;emptydatarowstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;Red&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;\n        \n        &lt;!-- The select query of the following SqlDataSource     --&gt;\n        &lt;!-- control has been intentionally set to return no     --&gt; \n        &lt;!-- results to demonstrate the empty data row.          --&gt;      \n        &lt;asp:sqldatasource id=&quot;StoresDetailsSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], [city], [state], [zip] FROM [stores] WHERE [state]=&#39;FL&#39;&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EmptyDataTemplate\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EmptyDataTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EmptyDataTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user-defined content for the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is bound to a data source that does not contain any records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a> that contains the custom content for the empty data row. The default value is <code>null</code>, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The empty data row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the data source that is bound to the control does not contain any records. You can define your own custom user interface (UI) for the empty data row by using the EmptyDataTemplate property. To specify a custom template for the null row, first place <code>&lt;EmptyDataTemplate&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. You can then list the contents of the template between the opening and closing <code>&lt;EmptyDataTemplate&gt;</code> tags. To control the style of the empty data row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataRowStyle_\" data-linktype=\"relative-path\">EmptyDataRowStyle</a> property. Alternatively, you can use the built-in UI for the empty data row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataText_\" data-linktype=\"relative-path\">EmptyDataText</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataText_\" data-linktype=\"relative-path\">EmptyDataText</a> and EmptyDataTemplate properties are set, the EmptyDataTemplate property takes precedence.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EmptyDataTemplate property to create a custom empty data row.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewEmptyDataTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EmptyDataTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EmptyDataTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;StoresDetailsSqlDataSource&quot;\n          autogeneraterows=&quot;true&quot; \n          EmptyDataText=&quot;No records.&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;emptydatarowstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;Red&quot;/&gt;\n            \n          &lt;emptydatatemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n            \n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:Image id=&quot;NoRecordsImage&quot;\n                    AlternateText=&#39;No Records&#39; \n                    imageurl=&quot;~\\images<br>oRecords.jpg&quot;\n                    runat=&quot;server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td&gt;\n                  &lt;asp:Label id=&quot;NoRecordsMessageLabel&quot;\n                    forecolor=&quot;Red&quot;\n                    text=&quot;No records.&quot;\n                    runat=&quot;server&quot;/&gt; \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            \n            &lt;/table&gt;\n          \n          &lt;/emptydatatemplate&gt; \n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;\n        \n        &lt;!-- The select query of the following SqlDataSource     --&gt;\n        &lt;!-- control has been intentionally set to return no     --&gt; \n        &lt;!-- results to demonstrate the empty data row.          --&gt;      \n        &lt;asp:sqldatasource id=&quot;StoresDetailsSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], [city], [state], [zip] FROM [stores] WHERE [state]=&#39;FL&#39;&quot;\n          connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewEmptyDataTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EmptyDataTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EmptyDataTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;StoresDetailsSqlDataSource&quot;\n          autogeneraterows=&quot;true&quot; \n          EmptyDataText=&quot;No records.&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;emptydatarowstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;Red&quot;/&gt;\n            \n          &lt;emptydatatemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n            \n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:Image id=&quot;NoRecordsImage&quot;\n                    AlternateText=&#39;No records&#39; \n                    imageurl=&quot;~\\images<br>oRecords.jpg&quot;\n                    runat=&quot;server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td&gt;\n                  &lt;asp:Label id=&quot;NoRecordsMessageLabel&quot;\n                    forecolor=&quot;Red&quot;\n                    text=&quot;No Records.&quot;\n                    runat=&quot;server&quot;/&gt; \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            \n            &lt;/table&gt;\n          \n          &lt;/emptydatatemplate&gt; \n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;\n        \n        &lt;!-- The select query of the following SqlDataSource     --&gt;\n        &lt;!-- control has been intentionally set to return no     --&gt; \n        &lt;!-- results to demonstrate the empty data row.          --&gt;      \n        &lt;asp:sqldatasource id=&quot;StoresDetailsSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], [city], [state], [zip] FROM [stores] WHERE [state]=&#39;FL&#39;&quot;\n          connectionstring=&quot;server=localhost;database=pubs;integrated security=SSPI&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EmptyDataText\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EmptyDataText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EmptyDataText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to display in the empty data row rendered when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is bound to a data source that does not contain any records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string EmptyDataText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display in the empty data row. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The empty data row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the data source that is bound to the control does not contain any records. Use the EmptyDataText property to specify the text to display in the empty data row. To control the style of the empty data row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataRowStyle_\" data-linktype=\"relative-path\">EmptyDataRowStyle</a> property. Alternatively, you can define your own custom user interface (UI) for the empty data row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataTemplate_\" data-linktype=\"relative-path\">EmptyDataTemplate</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the EmptyDataText and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataTemplate_\" data-linktype=\"relative-path\">EmptyDataTemplate</a> properties are set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_EmptyDataTemplate_\" data-linktype=\"relative-path\">EmptyDataTemplate</a> property takes precedence.  </p>\n</div>\n<p> The value of EmptyDataText is stored in view state.  </p>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewEmptyDataText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EmptyDataText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EmptyDataText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;StoresDetailsSqlDataSource&quot;\n          autogeneraterows=&quot;true&quot; \n          EmptyDataText=&quot;No records.&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;emptydatarowstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;Red&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;\n        \n        &lt;!-- The select query of the following SqlDataSource     --&gt;\n        &lt;!-- control has been intentionally set to return no     --&gt; \n        &lt;!-- results to demonstrate the empty data row.          --&gt;      \n        &lt;asp:sqldatasource id=&quot;StoresDetailsSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], [city], [state], [zip] FROM [stores] WHERE [state]=&#39;FL&#39;&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewEmptyDataText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EmptyDataText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EmptyDataText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;StoresDetailView&quot;\n          datasourceid=&quot;StoresDetailsSqlDataSource&quot;\n          autogeneraterows=&quot;true&quot; \n          EmptyDataText=&quot;No records.&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;emptydatarowstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;Red&quot;/&gt; \n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Pubs sample database.                        --&gt;\n        \n        &lt;!-- The select query of the following SqlDataSource     --&gt;\n        &lt;!-- control has been intentionally set to return no     --&gt; \n        &lt;!-- results to demonstrate the empty data row.          --&gt;      \n        &lt;asp:sqldatasource id=&quot;StoresDetailsSqlDataSource&quot;  \n          selectcommand=&quot;SELECT [stor_id], [stor_name], [stor_address], [city], [state], [zip] FROM [stores] WHERE [state]=&#39;FL&#39;&quot;\n          connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          runat=&quot;server&quot;&gt;\n        &lt;/asp:sqldatasource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EnableModelValidation\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EnableModelValidation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableModelValidation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether data-model validation is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnableModelValidation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if data model validation is enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EnablePagingCallbacks\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EnablePagingCallbacks_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnablePagingCallbacks</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether client-side callback functions are used for paging operations in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool EnablePagingCallbacks { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to use client-side callback functions for paging operations; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EnablePagingCallbacks property to specify whether paging operations are performed using client-side callback functions. When enabled, paging is performed using the callback feature, which prevents the need to post the page back to the server.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The client-side paging feature is only supported in Microsoft Internet Explorer 5.5 and later and Netscape 6.0 and later.  </p>\n</div>\n<p> The value of EnablePagingCallbacks is stored in view state.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the EnablePagingCallbacks property to enable the use of client-side callback functions for paging operations.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewEnablePagingCallbacks#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EnablePagingCallbacks Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EnablePagingCallbacks Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          enablepagingcallbacks=&quot;true&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings mode=&quot;NextPreviousFirstLast&quot;\n            firstpagetext=&quot;First&quot;\n            lastpagetext=&quot;Last&quot;\n            nextpagetext=&quot;Next&quot;\n            previouspagetext=&quot;Prev&quot;/&gt;\n            \n          &lt;pagerstyle forecolor=&quot;White&quot;\n            backcolor=&quot;Blue&quot;\n            font-names=&quot;Arial&quot;\n            font-size=&quot;8&quot; /&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewEnablePagingCallbacks#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView EnablePagingCallbacks Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView EnablePagingCallbacks Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          enablepagingcallbacks=&quot;true&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings mode=&quot;NextPreviousFirstLast&quot;\n            firstpagetext=&quot;First&quot;\n            lastpagetext=&quot;Last&quot;\n            nextpagetext=&quot;Next&quot;\n            previouspagetext=&quot;Prev&quot;/&gt;\n            \n          &lt;pagerstyle forecolor=&quot;White&quot;\n            backcolor=&quot;Blue&quot;\n            font-names=&quot;Arial&quot;\n            font-size=&quot;8&quot; /&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_FieldHeaderStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_FieldHeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FieldHeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the header column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle FieldHeaderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the header column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the FieldHeaderStyle property to control the appearance of the field header column in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This is the column that contains the field names of the data values. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>FieldHeaderStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>FieldHeaderStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FieldHeaderStyle property to specify the font and style settings for the field header row.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewFieldHeaderStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FontHeaderStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FontHeaderStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;\n            Font-Bold=&quot;true&quot;\n            Font-Italic=&quot;true&quot;\n            /&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewFieldHeaderStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FontHeaderStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FontHeaderStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;\n            Font-Bold=&quot;true&quot;\n            Font-Italic=&quot;true&quot;\n            /&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_Fields\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_Fields_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Fields</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> objects that represent the explicitly declared row fields in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DataControlFieldCollection Fields { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcollection\" data-linktype=\"relative-path\">DataControlFieldCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfieldcollection\" data-linktype=\"relative-path\">DataControlFieldCollection</a> that contains all explicitly declared row fields in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you explicitly declare the row fields for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, these row fields are stored in the Fields property (collection). The Fields collection also allows you to programmatically manage the collection of explicitly declared rows.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Explicitly declared row fields can be used in combination with automatically generated row fields. When both are used, explicitly declared row fields are rendered first, followed by the automatically generated row fields. Automatically generated row fields are not added to the Fields collection.  </p>\n</div>\n<p> Different row field types determine the behavior of the rows in the control. The following table shows the different row field types that can be used in the Fields collection.  </p>\n<table>\n<thead>\n<tr>\n<th>Row field type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.boundfield\" data-linktype=\"relative-path\">BoundField</a></td>\n<td>Displays the value of a field in a data source as text.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.buttonfield\" data-linktype=\"relative-path\">ButtonField</a></td>\n<td>Displays a command button in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This allows you to display a row with a custom button control, such as an Add or a Remove button.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.checkboxfield\" data-linktype=\"relative-path\">CheckBoxField</a></td>\n<td>Displays a check box in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This row field type is commonly used to display fields with a Boolean value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.commandfield\" data-linktype=\"relative-path\">CommandField</a></td>\n<td>Displays built-in command buttons to perform edit, insert, or delete operations in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlinkfield\" data-linktype=\"relative-path\">HyperLinkField</a></td>\n<td>Displays the value of a field in a data source as a hyperlink. This row field type allows you to bind a second field to the hyperlink&#39;s URL.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.imagefield\" data-linktype=\"relative-path\">ImageField</a></td>\n<td>Displays an image in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.templatefield\" data-linktype=\"relative-path\">TemplateField</a></td>\n<td>Displays user-defined content for a row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control according to a specified template. This row field type allows you to create a custom row field.</td>\n</tr>\n</tbody>\n</table>\n<p> To explicitly declare the row fields for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, first set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\" data-linktype=\"relative-path\">AutoGenerateRows</a> property to <code>false</code>. Next, add opening and closing <code>&lt;Fields&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. Finally, list the row fields that you want to include between the opening and closing <code>&lt;Fields&gt;</code> tags. The row fields are displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control in the order that the row fields appear in the Fields collection.  </p>\n<p> Although you can programmatically add row fields to the Fields collection, it is easier to list the row fields declaratively in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control and then use the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property of each row field to show or hide the row field.  </p>\n<p> If the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield#System_Web_UI_WebControls_DataControlField_Visible_\" data-linktype=\"relative-path\">Visible</a> property of a row field is set to <code>false</code>, the row is not displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control and the data for the row does not make a round trip to the client. If you want the data for a row that is not visible to make a round trip, add the field name to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to declaratively add row fields to the Fields collection of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewFields#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Fields Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Fields Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          AutoGenerateRows=&quot;false&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n        &lt;Fields&gt;\n         &lt;asp:BoundField \n           DataField=&quot;CompanyName&quot; \n           HeaderText=&quot;Company Name&quot;/&gt;\n         &lt;asp:BoundField \n           DataField=&quot;City&quot; \n           HeaderText=&quot;City&quot;/&gt;\n        &lt;/Fields&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewFields#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Fields Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView Fields Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          AutoGenerateRows=&quot;false&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot;&gt;\n               \n        &lt;Fields&gt;\n         &lt;asp:BoundField \n           DataField=&quot;CompanyName&quot; \n           HeaderText=&quot;Company Name&quot;/&gt;\n         &lt;asp:BoundField \n           DataField=&quot;City&quot; \n           HeaderText=&quot;City&quot;/&gt;\n        &lt;/Fields&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_FooterRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_FooterRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DetailsViewRow FooterRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> that represents the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The footer row is displayed at the bottom of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterText_\" data-linktype=\"relative-path\">FooterText</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterTemplate_\" data-linktype=\"relative-path\">FooterTemplate</a> property is set. Use the FooterRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the footer row.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_FooterRow_\" data-linktype=\"relative-path\">FooterRow</a> property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control creates the footer row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the footer row, for example when adding custom content. Any modification to the FooterRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control will overwrite any changes.  </p>\n<p> To control the style of the footer row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FooterRow property to access the footer row of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control during the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event. A <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control within the custom footer row is then updated with the current page number.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewFooterTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, \n        EventArgs e)\n    {\n        // Get the footer row.\n        DetailsViewRow footerRow = CustomerDetailView.FooterRow;\n\n        // Get the Label control that displays the current page \n        // information from the footer row.\n        Label pageNum = \n            (Label)footerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n\n        if (pageNum != null)\n        {\n\n            // Update the Label control with the current page number.\n            int page = CustomerDetailView.DataItemIndex + 1;\n            pageNum.Text = &quot;Page &quot; + page.ToString();\n\n        }\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;FooterTemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/FooterTemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewFooterTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; Get the footer row.\n        Dim footerRow As DetailsViewRow = CustomerDetailView.FooterRow\n\n        &#39; Get the Label control that displays the current page \n        &#39; information from the footer row.\n        Dim pageNum As Label = _\n            CType(footerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n\n        If pageNum IsNot Nothing Then\n            &#39; Update the Label control with the current page number.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            pageNum.Text = &quot;Page &quot; + page.ToString()\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;FooterTemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/FooterTemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_FooterStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_FooterStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The footer row is displayed at the bottom of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterText_\" data-linktype=\"relative-path\">FooterText</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterTemplate_\" data-linktype=\"relative-path\">FooterTemplate</a> property is set. Use the FooterStyle property to control the appearance of the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>FooterStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>FooterStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FooterStyle property to specify the font and style settings for the footer row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewFooterText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          footertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;footerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewFooterText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          footertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;footerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_FooterTemplate\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_FooterTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user-defined content for the footer row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a> that contains the custom content for the footer row. The default value is <code>null</code>, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The footer row is displayed at the bottom of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterText_\" data-linktype=\"relative-path\">FooterText</a> or FooterTemplate property is set. You can define your own custom user interface (UI) for the footer row by using the FooterTemplate property. To specify a custom template for the footer row, first place <code>&lt;FooterTemplate&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. You can then list the contents of the template between the opening and closing <code>&lt;FooterTemplate&gt;</code> tags. To control the style of the footer row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a> property. Alternatively, you can simply display text in the footer row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterText_\" data-linktype=\"relative-path\">FooterText</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterText_\" data-linktype=\"relative-path\">FooterText</a> and FooterTemplate properties are set, the FooterTemplate property takes precedence.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FooterTemplate property to create a custom footer row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewFooterTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, \n        EventArgs e)\n    {\n        // Get the footer row.\n        DetailsViewRow footerRow = CustomerDetailView.FooterRow;\n\n        // Get the Label control that displays the current page \n        // information from the footer row.\n        Label pageNum = \n            (Label)footerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n\n        if (pageNum != null)\n        {\n\n            // Update the Label control with the current page number.\n            int page = CustomerDetailView.DataItemIndex + 1;\n            pageNum.Text = &quot;Page &quot; + page.ToString();\n\n        }\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;FooterTemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/FooterTemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewFooterTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; Get the footer row.\n        Dim footerRow As DetailsViewRow = CustomerDetailView.FooterRow\n\n        &#39; Get the Label control that displays the current page \n        &#39; information from the footer row.\n        Dim pageNum As Label = _\n            CType(footerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n\n        If pageNum IsNot Nothing Then\n            &#39; Update the Label control with the current page number.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            pageNum.Text = &quot;Page &quot; + page.ToString()\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;FooterTemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/FooterTemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_FooterText\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_FooterText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to display in the footer row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string FooterText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display in the footer row. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The footer row is displayed at the bottom of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the FooterText or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterTemplate_\" data-linktype=\"relative-path\">FooterTemplate</a> property is set. Use the FooterText property to specify the text to display in the footer row. To control the style of the footer row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterStyle_\" data-linktype=\"relative-path\">FooterStyle</a> property. Alternatively, you can define your own custom user interface (UI) for the footer row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterTemplate_\" data-linktype=\"relative-path\">FooterTemplate</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the FooterText and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterTemplate_\" data-linktype=\"relative-path\">FooterTemplate</a> properties are set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterTemplate_\" data-linktype=\"relative-path\">FooterTemplate</a> property takes precedence.  </p>\n</div>\n<p> The value of FooterText is stored in view state.  </p>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FooterText property to specify the text to display in the footer row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewFooterText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          footertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;footerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewFooterText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView FooterText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          footertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;footerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_GridLines\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_GridLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLines</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the gridline style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.gridlines\" data-linktype=\"relative-path\">GridLines</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridlines\" data-linktype=\"relative-path\">GridLines</a> values. The default is <code>GridLines.Both</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the GridLines property to specify the gridline style for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The following table lists the available styles.  </p>\n<table>\n<thead>\n<tr>\n<th>Style</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>GridLines.None</code></td>\n<td>No gridlines are displayed.</td>\n</tr>\n<tr>\n<td><code>GridLines.Horizontal</code></td>\n<td>Displays the horizontal gridlines only.</td>\n</tr>\n<tr>\n<td><code>GridLines.Vertical</code></td>\n<td>Displays the vertical gridlines only.</td>\n</tr>\n<tr>\n<td><code>GridLines.Both</code></td>\n<td>Displays both the horizontal and vertical gridlines.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the GridLines property to hide all gridlines in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewGridLines#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView GridLines Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView GridLines Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          gridlines=&quot;None&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewGridLines#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView GridLines Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView GridLines Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          gridlines=&quot;None&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_HeaderRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_HeaderRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DetailsViewRow HeaderRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> that represents the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The header row is displayed at the top of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderTemplate_\" data-linktype=\"relative-path\">HeaderTemplate</a> property is set. Use the HeaderRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the header row.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_HeaderRow_\" data-linktype=\"relative-path\">HeaderRow</a> property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control creates the header row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the header row, for example when adding custom content. Any modification to the HeaderRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderRow property to access the header row of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control during the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event. A <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> control within the custom header row is then updated with the current page number.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewHeaderTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemCreated(Object sender, EventArgs e)\n  {\n    \n    // Get the header row.\n      DetailsViewRow headerRow = CustomerDetailView.HeaderRow;\n\n    // Get the Label control that displays the current page information \n    // from the header row.\n    Label pageNum = (Label)headerRow.FindControl(&quot;PageNumberLabel&quot;);\n\n    if(pageNum != null)\n    {\n      // Update the Label control with the current page number.\n        int page = CustomerDetailView.DataItemIndex + 1;\n      pageNum.Text = &quot;Page &quot; + page.ToString ();\n    }\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemcreated=&quot;CustomerDetailView_ItemCreated&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;headertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/headertemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewHeaderTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemCreated(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; Get the header row.\n        Dim headerRow As DetailsViewRow = CustomerDetailView.HeaderRow\n\n        &#39; Get the Label control that displays the current page information \n        &#39; from the header row.\n        Dim pageNum As Label = _\n            CType(headerRow.FindControl(&quot;PageNumberLabel&quot;), Label)\n\n        If Not pageNum Is Nothing Then\n    \n            &#39; Update the Label control with the current page number.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            pageNum.Text = &quot;Page &quot; &amp; page.ToString()\n    \n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemcreated=&quot;CustomerDetailView_ItemCreated&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;headertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/headertemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_HeaderStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_HeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The header row is displayed at the top of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderTemplate_\" data-linktype=\"relative-path\">HeaderTemplate</a> property is set. Use the HeaderStyle property to control the appearance of the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>HeaderStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>HeaderStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderStyle property to specify the font and style settings for the header row.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewHeaderText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          headertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;headerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewHeaderText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          headertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;headerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_HeaderTemplate\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_HeaderTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user-defined content for the header row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a> that contains the custom content for the header row. The default value is <code>null</code>, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The header row is displayed at the top of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> or HeaderTemplate property is set. You can define your own custom user interface (UI) for the header row by using the HeaderTemplate property. To specify a custom template for the header row, first place <code>&lt;HeaderTemplate&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. You can then list the contents of the template between the opening and closing <code>&lt;HeaderTemplate&gt;</code> tags. To control the style of the header row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> property. Alternatively, you can simply display text in the header row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> and HeaderTemplate properties are set, the HeaderTemplate property takes precedence.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderTemplate property to create a custom header row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewHeaderTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemCreated(Object sender, EventArgs e)\n  {\n    \n    // Get the header row.\n      DetailsViewRow headerRow = CustomerDetailView.HeaderRow;\n\n    // Get the Label control that displays the current page information \n    // from the header row.\n    Label pageNum = (Label)headerRow.FindControl(&quot;PageNumberLabel&quot;);\n\n    if(pageNum != null)\n    {\n      // Update the Label control with the current page number.\n        int page = CustomerDetailView.DataItemIndex + 1;\n      pageNum.Text = &quot;Page &quot; + page.ToString ();\n    }\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemcreated=&quot;CustomerDetailView_ItemCreated&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;headertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/headertemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewHeaderTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemCreated(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; Get the header row.\n        Dim headerRow As DetailsViewRow = CustomerDetailView.HeaderRow\n\n        &#39; Get the Label control that displays the current page information \n        &#39; from the header row.\n        Dim pageNum As Label = _\n            CType(headerRow.FindControl(&quot;PageNumberLabel&quot;), Label)\n\n        If Not pageNum Is Nothing Then\n    \n            &#39; Update the Label control with the current page number.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            pageNum.Text = &quot;Page &quot; &amp; page.ToString()\n    \n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemcreated=&quot;CustomerDetailView_ItemCreated&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;headertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/headertemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_HeaderText\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_HeaderText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text to display in the header row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string HeaderText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display in the header row. The default is an empty string (&quot;&quot;), which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The header row is displayed at the top of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the HeaderText or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderTemplate_\" data-linktype=\"relative-path\">HeaderTemplate</a> property is set. Use the HeaderText property to specify the text to display in the header row. To control the style of the header row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> property. Alternatively, you can define your own custom user interface (UI) for the header row by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderTemplate_\" data-linktype=\"relative-path\">HeaderTemplate</a> property instead of this property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If both the HeaderText and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderTemplate_\" data-linktype=\"relative-path\">HeaderTemplate</a> properties are set, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderTemplate_\" data-linktype=\"relative-path\">HeaderTemplate</a> property takes precedence.  </p>\n</div>\n<p> The value of HeaderText is stored in view state.  </p>\n<p> The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <a class=\"xref\" href=\"system.componentmodel.localizableattribute\" data-linktype=\"relative-path\">LocalizableAttribute</a> and <a href=\"../Topic/ASP.NET%20Globalization%20and%20Localization.md\" data-linktype=\"relative-path\">Globalization and Localization</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderText property to specify the text to display in the header row.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewHeaderText#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          headertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;headerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewHeaderText#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderText Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          headertext=&quot;Confidential&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;headerstyle forecolor=&quot;Red&quot;\n            backcolor=&quot;LightBlue&quot; \n            font-names=&quot;Arial&quot;\n            font-size=&quot;10&quot;\n            font-bold=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_HorizontalAlign\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_HorizontalAlign_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontalAlign</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the horizontal alignment of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control on the page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.horizontalalign\" data-linktype=\"relative-path\">HorizontalAlign</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.horizontalalign\" data-linktype=\"relative-path\">HorizontalAlign</a> values. The default is <code>HorizontalAlign.NotSet</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the HorizontalAlign property to specify the horizontal alignment of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control within the page. The following table lists the different horizontal alignment styles.  </p>\n<table>\n<thead>\n<tr>\n<th>HorizontalAlign value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>HorizontalAlign.NotSet</code></td>\n<td>The horizontal alignment of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control has not been set.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Left</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is left-aligned on the page.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Center</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is centered on the page.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Right</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is right-aligned on the page.</td>\n</tr>\n<tr>\n<td><code>HorizontalAlign.Justify</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is aligned with both the left and right margins of the page.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HorizontalAlign property to specify that a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control should be centered on the page.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewHorizontalAlign#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HorizontalAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HorizontalAlign Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          horizontalalign=&quot;Center&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewHorizontalAlign#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HorizontalAlign Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HorizontalAlign Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          horizontalalign=&quot;Center&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_InsertMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_InsertMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method on the page that is called when the control performs an insert operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string InsertMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the method on the page that is called when the control performs an insert operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a tutorial series on using model binding with Web Forms, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=286117\" data-linktype=\"external\">Model Binding and Web Forms</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_InsertRowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_InsertRowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertRowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The data rows in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control are displayed using this style when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode. Use the InsertRowStyle property to control the appearance of the data rows in insert mode. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>InsertRowStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>InsertRowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the InsertRowStyle property to specify the font and style settings for the data rows when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewInsertRowStyle#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView InsertRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView InsertRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateinsertbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;insertrowstyle backcolor=&quot;Yellow&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewInsertRowStyle#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView InsertRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView InsertRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateinsertbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;  \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;insertrowstyle backcolor=&quot;Yellow&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PageCount\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PageCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of records in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int PageCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of records in the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is <code>null</code>, <code>0</code> is returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PageIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PageIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the displayed record.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int PageIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the data item being displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control from the underlying data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The selected value is less than <code>-1</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the paging feature is enabled (when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property is set to <code>true</code>), use the PageIndex property to determine the index of the currently displayed record. You can also use this property to programmatically change the displayed record.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the paging feature is enabled, you can also use this property to determine the page number of the record displayed; however, be aware that this property is zero-based.  </p>\n</div>\n<p> To determine the total number of items in the data source, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageCount_\" data-linktype=\"relative-path\">PageCount</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PagerSettings\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PagerSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PagerSettings</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object that allows you to set the properties of the pager buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> that allows you to set the properties of the pager buttons in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the PagerSettings property to control the settings of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The pager row is displayed when the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>) and contains the controls that allow the user to navigate to the different records in the control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.pagersettings\" data-linktype=\"relative-path\">PagerSettings</a> object (for example, <code>PagerSetting-Mode</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>PagerSetting.Mode</code>). Common settings usually include the pager row&#39;s display mode and custom text or images for the navigation controls.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n      // Get the pager row.\n      DetailsViewRow pagerRow = CustomerDetailView.BottomPagerRow;\n\n      // Get the Label controls that display the current page information \n      // from the pager row.\n      Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n      Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n      if ((pageNum != null) &amp;&amp; (totalNum != null))\n      {\n          // Update the Label controls with the current page values.\n          int page = CustomerDetailView.DataItemIndex + 1;\n          int count = CustomerDetailView.DataItemCount;\n\n          pageNum.Text = page.ToString();\n          totalNum.Text = count.ToString();\n      }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.BottomPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n        \n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PagerStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PagerStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PagerStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the PagerStyle property to control the appearance of the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The pager row is displayed when the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>) and contains the controls that allow the user to navigate to the different pages in the control. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>PagerStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>PagerStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the PagerStyle property to specify the font and style settings for the pager row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n      // Get the pager row.\n      DetailsViewRow pagerRow = CustomerDetailView.BottomPagerRow;\n\n      // Get the Label controls that display the current page information \n      // from the pager row.\n      Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n      Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n      if ((pageNum != null) &amp;&amp; (totalNum != null))\n      {\n          // Update the Label controls with the current page values.\n          int page = CustomerDetailView.DataItemIndex + 1;\n          int count = CustomerDetailView.DataItemCount;\n\n          pageNum.Text = page.ToString();\n          totalNum.Text = count.ToString();\n      }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.BottomPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n        \n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PagerTemplate\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PagerTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PagerTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the custom content for the pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.itemplate\" data-linktype=\"relative-path\">ITemplate</a> that contains the custom content for the pager row. The default value is null, which indicates that this property is not set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A pager row is displayed in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when the paging feature is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to true). The pager row contains the controls that allow the user to navigate to the different pages in the control. Instead of using the built-in pager row user interface (UI), you can define your own UI by using the PagerTemplate property. To specify a custom template for the pager row, first place <code>&lt;PagerTemplate&gt;</code> tags between the opening and closing tags of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. You can then list the contents of the template between the opening and closing <code>&lt;PagerTemplate&gt;</code> tags. To control the appearance of the pager row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PagerStyle_\" data-linktype=\"relative-path\">PagerStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the PagerTemplate property to create a custom pager row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n      // Get the pager row.\n      DetailsViewRow pagerRow = CustomerDetailView.BottomPagerRow;\n\n      // Get the Label controls that display the current page information \n      // from the pager row.\n      Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n      Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n      if ((pageNum != null) &amp;&amp; (totalNum != null))\n      {\n          // Update the Label controls with the current page values.\n          int page = CustomerDetailView.DataItemIndex + 1;\n          int count = CustomerDetailView.DataItemCount;\n\n          pageNum.Text = page.ToString();\n          totalNum.Text = count.ToString();\n      }\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewPagerTemplate#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.BottomPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n        \n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView PagerTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView PagerTemplate Example&lt;/h3&gt;\n                \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set &quot;Page&quot; and the CommandArgument  --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n        \n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagerstyle VerticalAlign=&quot;Bottom&quot; /&gt;\n            \n          &lt;pagertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot; /&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot; /&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_Rows\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_Rows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rows</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection of <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> objects that represent the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DetailsViewRowCollection Rows { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrowcollection\" data-linktype=\"relative-path\">DetailsViewRowCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrowcollection\" data-linktype=\"relative-path\">DetailsViewRowCollection</a> that contains all the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Rows property (collection) is used to store the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control automatically populates the Rows collection by creating a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object for each record in the data source and then adding the object to the collection. This property is commonly used to access a specific row in the control or to iterate though the entire collection of rows.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Only data rows are stored in the Rows collection. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> objects that represent the header, footer, and pager rows are not included in the collection.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Rows property to access a data row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The data row is used to retrieve the value of a field from the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewItemCommand#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomerDetailView_ItemCommand(ByVal sender As Object, ByVal e As DetailsViewCommandEventArgs)\n    \n        &#39; Use the CommandName property to determine which button\n        &#39; was clicked. \n        If e.CommandName = &quot;Add&quot; Then\n\n            &#39; Add the current store to the contact list. \n     \n            &#39; Get the row that contains the store name. In this\n            &#39; example, the store name is in the second row (index 1)  \n            &#39; of the DetailsView control.\n            Dim row As DetailsViewRow = CustomerDetailView.Rows(1)\n      \n            &#39; Get the store&#39;s name from the appropriate cell.\n            &#39; In this example, the store name is in the second cell  \n            &#39; (index 1) of the row.\n            Dim name As String = row.Cells(1).Text\n\n            &#39; Create a ListItem object with the store&#39;s name.\n            Dim item As New ListItem(name)\n\n            &#39; Add the ListItem object to the ListBox, if the \n            &#39; item doesn&#39;t already exist.\n            If Not ContactListBox.Items.Contains(item) Then\n      \n                ContactListBox.Items.Add(item)\n      \n            End If\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView ItemCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView ItemCommand Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n            DataSourceID=&quot;DetailsViewSource&quot;\n            AutoGenerateRows=&quot;false&quot; \n            DataKeyNames=&quot;CustomerID&quot; \n            AllowPaging=&quot;true&quot; \n            OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot;\n            runat=&quot;server&quot;&gt;\n            \n            &lt;FieldHeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            \n            &lt;Fields&gt;\n                &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;Store ID&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;Store Name&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n                &lt;asp:ButtonField CommandName=&quot;Add&quot; Text=&quot;Add Contact&quot; /&gt;\n            &lt;/Fields&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;hr /&gt;\n        \n        Contacts:&lt;br /&gt;\n        &lt;asp:ListBox ID=&quot;ContactListBox&quot; runat=&quot;server&quot; /&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewItemCommand#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemCommand(Object sender, DetailsViewCommandEventArgs e)\n    {\n\n        // Use the CommandName property to determine which button\n        // was clicked. \n        if (e.CommandName == &quot;Add&quot;)\n        {\n\n            // Add the current store to the contact list. \n\n            // Get the row that contains the store name. In this\n            // example, the store name is in the second row (index 1)  \n            // of the DetailsView control.\n            DetailsViewRow row = CustomerDetailView.Rows[1];\n\n            // Get the store&#39;s name from the appropriate cell.\n            // In this example, the store name is in the second cell  \n            // (index 1) of the row.\n            String name = row.Cells[1].Text;\n\n            // Create a ListItem object with the store&#39;s name.\n            ListItem item = new ListItem(name);\n\n            // Add the ListItem object to the ListBox, if the \n            // item doesn&#39;t already exist.\n            if (!ContactListBox.Items.Contains(item))\n            {\n                ContactListBox.Items.Add(item);\n            }\n\n        }\n\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView ItemCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView ItemCommand Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n            DataSourceID=&quot;DetailsViewSource&quot;\n            AutoGenerateRows=&quot;false&quot; \n            DataKeyNames=&quot;CustomerID&quot; \n            AllowPaging=&quot;true&quot; \n            OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot;\n            runat=&quot;server&quot;&gt;\n            \n            &lt;FieldHeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            \n            &lt;Fields&gt;\n                &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;Store ID&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;Store Name&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n                &lt;asp:ButtonField CommandName=&quot;Add&quot; Text=&quot;Add Contact&quot; /&gt;\n            &lt;/Fields&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;hr /&gt;\n        \n        Contacts:&lt;br /&gt;\n        &lt;asp:ListBox ID=&quot;ContactListBox&quot; runat=&quot;server&quot; /&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_RowsGenerator\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_RowsGenerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowsGenerator</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an object that implements the <a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a> interface in order to automatically populate rows in the view.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.IAutoFieldGenerator RowsGenerator { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a></div>\r\n                  </div>\r\n                  <p>An object that implement the <a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a> interface.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_RowStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_RowStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object that allows you to set the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A reference to the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that represents the style of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the RowStyle property to control the appearance of the data rows in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> property is also set, the data rows are displayed alternating between the RowStyle settings and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AlternatingRowStyle_\" data-linktype=\"relative-path\">AlternatingRowStyle</a> settings. This property is read-only; however, you can set the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object it returns. The properties can be set declaratively in the form <code>Property-Subproperty</code>, where <code>Subproperty</code> is a property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> object (for example, <code>RowStyle-ForeColor</code>). The properties can also be set programmatically in the form <code>Property.Subproperty</code> (for example, <code>RowStyle.ForeColor</code>). Common settings usually include a custom background color, foreground color, and font properties.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the RowStyle property to specify the font and style settings for the data rows in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewRowStyle#1\">&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersView&quot;\n          datasourceid=&quot;Customers&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;RowStyle BackColor=&quot;LightGray&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n            \n          &lt;AlternatingRowStyle BackColor=&quot;White&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database. --&gt;           \n        &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n          ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n          SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID], [Phone] FROM [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewRowStyle#1\">&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView RowStyle and AlternatingRowStyle Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomersView&quot;\n          datasourceid=&quot;Customers&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;RowStyle BackColor=&quot;LightGray&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n            \n          &lt;AlternatingRowStyle BackColor=&quot;White&quot;\n            ForeColor=&quot;Blue&quot;\n            Font-Names=&quot;Arial&quot;\n            Font-Size=&quot;10&quot;\n            Font-Italic=&quot;true&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n            \n        &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n        &lt;!-- to the Northwind sample database. --&gt;           \n        &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n          ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n          SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID], [Phone] FROM [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n            \n      &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_SelectedValue\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_SelectedValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets the data key value of the current record in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SelectedValue { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The data key value of the current record in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SelectedValue property to determine the data key value for the current record. To retrieve the actual <a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">System.Web.UI.WebControls.DataKey</a> object that represents the data key for the record, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_DataKey_\" data-linktype=\"relative-path\">DataKey</a> property.  </p>\n<p> This property is the default property that a <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a> object binds to at run time. For more information, see <a class=\"xref\" href=\"system.web.ui.controlvaluepropertyattribute\" data-linktype=\"relative-path\">ControlValuePropertyAttribute</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.controlparameter\" data-linktype=\"relative-path\">ControlParameter</a>, and <a href=\"../Topic/Using%20Parameters%20with%20Data%20Source%20Controls%20for%20Filtering.md\" data-linktype=\"relative-path\">Using Parameters with Data Source Controls for Filtering</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SelectedValue property to determine the data key value for the current record.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewSelectedValue#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemUpdated(Object sender, DetailsViewUpdatedEventArgs e)\n  {\n    // Log the update operation using the key value contained\n    // in the SelectedValue property.\n      String keyValue = CustomerDetailView.SelectedValue.ToString();\n    LogUpdate(keyValue);\n  }\n\n  void LogUpdate(String keyValue)\n  {\n    // Insert code to log the update operation.\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView SelectedValue Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView SelectedValue Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          onitemupdated=&quot;CustomerDetailView_ItemUpdated&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] \n              From [Customers]&quot;\n                        UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n            [Address] = @Address, [City] = @City,\n            [PostalCode] = @PostalCode, [Country] = @Country\n            WHERE [CustomerID] = @CustomerID&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewSelectedValue#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemUpdated(ByVal sender As Object, ByVal e As DetailsViewUpdatedEventArgs)\n        &#39; Log the update operation using the key value contained\n        &#39; in the SelectedValue property.\n        Dim keyValue As String = CustomerDetailView.SelectedValue.ToString()\n        LogUpdate(keyValue)\n\n    End Sub\n\n    Sub LogUpdate(ByVal keyValue As String)\n        &#39; Insert code to log the update operation.\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView SelectedValue Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView SelectedValue Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; DataSourceID=&quot;DetailsViewSource&quot; DataKeyNames=&quot;CustomerID&quot;\n            AutoGenerateRows=&quot;true&quot; AutoGenerateEditButton=&quot;true&quot; AllowPaging=&quot;true&quot; OnItemUpdated=&quot;CustomerDetailView_ItemUpdated&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;FieldHeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n        &lt;/asp:DetailsView&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] \n              From [Customers]&quot;\n            UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n            [Address] = @Address, [City] = @City,\n            [PostalCode] = @PostalCode, [Country] = @Country\n            WHERE [CustomerID] = @CustomerID&quot;&gt;&lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_TagKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_TagKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TagKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a> value for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a></div>\r\n                  </div>\r\n                  <p>If <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.EnablePagingCallbacks*</span> is <code>true</code>, this property returns <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a>. Otherwise, it returns <a class=\"xref\" href=\"system.web.ui.htmltextwritertag\" data-linktype=\"relative-path\">HtmlTextWriterTag</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TagKey property allows the output stream to write the appropriate HTML markup for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_TopPagerRow\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_TopPagerRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TopPagerRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the top pager row in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.DetailsViewRow TopPagerRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> that represents the top pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When paging is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AllowPaging_\" data-linktype=\"relative-path\">AllowPaging</a> property to <code>true</code>), an additional row called the pager row is automatically displayed in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. The pager row contains controls that allow the user to navigate to other records, and can be displayed at the top, the bottom, or both the top and bottom of the control. Use the TopPagerRow property to programmatically access the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object that represents the top pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The TopPagerRow property is available only after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control creates the bottom pager row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event.  </p>\n</div>\n<p> This property is commonly used when you need to programmatically manipulate the top pager row, for example when adding custom content. Any modification to the TopPagerRow property must be performed after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control has been rendered; otherwise, the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control will overwrite any changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the TopPagerRow property to access the top pager row of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control during the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event. Two <a class=\"xref\" href=\"system.web.ui.webcontrols.label\" data-linktype=\"relative-path\">Label</a> controls within the custom pager row are then updated with the current page number and total number of pages.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewTopPagerRow#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Protected Sub CustomerDetailView_DataBound(ByVal sender As Object, ByVal e As EventArgs)\n        &#39; Get the pager row.\n        Dim pagerRow As DetailsViewRow = CustomerDetailView.TopPagerRow\n\n        &#39; Get the Label controls that display the current page information \n        &#39; from the pager row.\n        Dim pageNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;PageNumberLabel&quot;), Label)\n        Dim totalNum As Label = CType(pagerRow.Cells(0).FindControl(&quot;TotalPagesLabel&quot;), Label)\n\n        If (pageNum IsNot Nothing) And (totalNum IsNot Nothing) Then\n            &#39; Update the Label controls with the current page values.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            Dim count As Integer = CustomerDetailView.DataItemCount\n\n            pageNum.Text = Page.ToString()\n            totalNum.Text = count.ToString()\n        End If\n    End Sub\n\n    &lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView TopPagerRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView TopPagerRow Example&lt;/h3&gt;\n              \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set to &quot;Page&quot;                       --&gt;\n        &lt;!-- and the CommandArgument                            --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot; \n          OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;PagerSettings Position=&quot;top&quot; /&gt; \n          \n          &lt;pagertemplate&gt;\n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot;/&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot;/&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewTopPagerRow#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    protected void CustomerDetailView_DataBound(object sender, EventArgs e)\n    {\n\n        // Get the pager row.\n        DetailsViewRow pagerRow = CustomerDetailView.TopPagerRow;\n\n        // Get the Label controls that display the current page information \n        // from the pager row.\n        Label pageNum = (Label)pagerRow.Cells[0].FindControl(&quot;PageNumberLabel&quot;);\n        Label totalNum = (Label)pagerRow.Cells[0].FindControl(&quot;TotalPagesLabel&quot;);\n\n        if ((pageNum != null) &amp;&amp; (totalNum != null))\n        {\n            // Update the Label controls with the current page values.\n            int page = CustomerDetailView.DataItemIndex + 1;\n            int count = CustomerDetailView.DataItemCount;\n\n            pageNum.Text = page.ToString();\n            totalNum.Text = count.ToString();\n        }\n\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView TopPagerRow Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView TopPagerRow Example&lt;/h3&gt;\n              \n        &lt;!-- Notice that the LinkButton controls in the pager   --&gt;\n        &lt;!-- template have their CommandName properties set.    --&gt;\n        &lt;!-- The DetailsView control automatically recognizes   --&gt;\n        &lt;!-- certain command names and performs the appropriate --&gt;\n        &lt;!-- operation. In this example, the CommandName        --&gt;\n        &lt;!-- properties are set to &quot;Next&quot; and &quot;Prev&quot;, which     --&gt;\n        &lt;!-- causes the DetailsView control to navigate to the  --&gt;\n        &lt;!-- next and previous record, respectively.            --&gt;        \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          autogeneraterows=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          runat=&quot;server&quot; OnDataBound=&quot;CustomerDetailView_DataBound&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;PagerSettings Position=&quot;top&quot; /&gt; \n          \n          &lt;pagertemplate&gt;\n            &lt;table width=&quot;100%&quot;&gt;\n              &lt;tr&gt;\n                &lt;td&gt;\n                  &lt;asp:LinkButton id=&quot;PreviousButton&quot;\n                    text=&quot;&lt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Prev&quot;\n                    runat=&quot;Server&quot;/&gt;\n                  &lt;asp:LinkButton id=&quot;NextButton&quot;\n                    text=&quot;&gt;&quot;\n                    CommandName=&quot;Page&quot;\n                    CommandArgument=&quot;Next&quot;\n                    runat=&quot;Server&quot;/&gt; \n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot;&gt;                \n                  Page &lt;asp:Label id=&quot;PageNumberLabel&quot; runat=&quot;server&quot;/&gt; \n                  of &lt;asp:Label id=&quot;TotalPagesLabel&quot; runat=&quot;server&quot;/&gt;                \n                &lt;/td&gt;\n              &lt;/tr&gt;\n            &lt;/table&gt;          \n          &lt;/pagertemplate&gt;   \n                    \n        &lt;/asp:detailsview&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_UpdateMethod\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_UpdateMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateMethod</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the method on the page that is called when the control performs an update operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string UpdateMethod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the method on the page that is called when the control performs an update operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a tutorial series on using model binding with Web Forms, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=286117\" data-linktype=\"external\">Model Binding and Web Forms</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ChangeMode_System_Web_UI_WebControls_DetailsViewMode_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_ChangeMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ChangeMode(DetailsViewMode)</div>        \r\n          </div>\r\n    \r\n            <p>Switches the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to the specified mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ChangeMode (System.Web.UI.WebControls.DetailsViewMode newMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmode\" data-linktype=\"relative-path\">DetailsViewMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ChangeMode method to programmatically switch the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control between edit, insert, and read-only mode. This method also updates the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CurrentMode_\" data-linktype=\"relative-path\">CurrentMode</a> property with the specified mode. The following table lists the different mode values.  </p>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DetailsViewMode.Edit</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode, which allows the user to update the values of a record.</td>\n</tr>\n<tr>\n<td><code>DetailsViewMode.Insert</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode, which allows the user to add a new record to the data source.</td>\n</tr>\n<tr>\n<td><code>DetailsView.ReadOnly</code></td>\n<td>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in read-only mode, which is the normal display mode.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ChangeMode method to return the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to read-only mode whenever the user navigates to another record.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewChangeMode#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomerDetailView_PageIndexChanged(Object sender, EventArgs e)\n  {\n    // By default, if the DetailsView control is in edit mode and\n    // user navigates to another page, the DetailsView control\n    // remains in edit mode. In this example, the ChangeMode \n    // method is used to put the DetailsView control in read-only  \n    // mode whenever the user navigates to another record.\n      CustomerDetailView.ChangeMode(DetailsViewMode.ReadOnly);\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ChangeMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ChangeMode Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          OnPageIndexChanged=&quot;CustomerDetailView_PageIndexChanged&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewChangeMode#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_PageIndexChanged(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; By default, if the DetailsView control is in edit mode and\n        &#39; user navigates to another page, the DetailsView control\n        &#39; remains in edit mode. In this example, the ChangeMode \n        &#39; method is used to put the DetailsView control in read-only  \n        &#39; mode whenever the user navigates to another record.\n        CustomerDetailView.ChangeMode(DetailsViewMode.ReadOnly)\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ChangeMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ChangeMode Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          OnPageIndexChanged=&quot;CustomerDetailView_PageIndexChanged&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateAutoGeneratedRow_System_Web_UI_WebControls_AutoGeneratedFieldProperties_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateAutoGeneratedRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAutoGeneratedRow(AutoGeneratedFieldProperties)</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a> object that represents an automatically generated row field using the specified field properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedRow (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fieldProperties</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfieldproperties\" data-linktype=\"relative-path\">AutoGeneratedFieldProperties</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfieldproperties\" data-linktype=\"relative-path\">AutoGeneratedFieldProperties</a> that contains the properties for the <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.webcontrols.autogeneratedfield\" data-linktype=\"relative-path\">AutoGeneratedField</a> that contains the field properties specified by the <code>fieldProperties</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateAutoGeneratedRow method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create an automatically generated row field using the specified field properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateAutoGeneratedRows_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateAutoGeneratedRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAutoGeneratedRows(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a set of automatically generated row fields for the specified data item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Collections.ICollection CreateAutoGeneratedRows (object dataItem);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataItem</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data item for which to create the automatically generated row fields.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the automatically generated row fields for the specified data item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control does not have any properties or attributes from which to generate fields.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\" data-linktype=\"relative-path\">AutoGenerateRows</a> property is set to <code>true</code>, the CreateAutoGeneratedRows method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create a set of automatically generated row fields for the current data item.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateChildControls_System_Collections_IEnumerable_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateChildControls_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateChildControls(IEnumerable,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the control hierarchy used to render the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> that represents the data source for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataBinding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that this method is being called during data binding; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of items in the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>dataSource</code> returns a null <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a>.  </p>\n<p> - or -  </p>\n<p> d<code>ataSource</code> is not an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> and cannot return a total row count.  </p>\n<p> - or -  </p>\n<p> <code>dataBinding</code> is <code>false</code> and <code>dataSource</code> does not implement the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface.  </p>\n<p> - or -  </p>\n<p> <code>dataSource</code> does not implement the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface and <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.AllowPaging*</span> is set to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateChildControls method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create the control hierarchy for the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateControlStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateControlStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateControlStyle()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a default table style object for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.WebControls.Style CreateControlStyle ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.style\" data-linktype=\"relative-path\">Style</a> that contains the default table style for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateControlStyle method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create its default table style object. In addition to the default style setting of a <a class=\"xref\" href=\"system.web.ui.webcontrols.tablestyle\" data-linktype=\"relative-path\">TableStyle</a> object, this method also sets the properties in the following table.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.tablestyle#System_Web_UI_WebControls_TableStyle_GridLines_\" data-linktype=\"relative-path\">GridLines</a></td>\n<td><code>GridLines.Both</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.tablestyle#System_Web_UI_WebControls_TableStyle_CellSpacing_\" data-linktype=\"relative-path\">CellSpacing</a></td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateDataSourceSelectArguments\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateDataSourceSelectArguments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateDataSourceSelectArguments()</div>        \r\n          </div>\r\n    \r\n            <p>Creates the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object that gets passed to the Select command.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> that gets passed to the Select command</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateDataSourceSelectArguments method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create the <a class=\"xref\" href=\"system.web.ui.datasourceselectarguments\" data-linktype=\"relative-path\">DataSourceSelectArguments</a> object that gets passed to the Select command.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateFieldSet_System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateFieldSet_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateFieldSet(Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the complete set of automatically generated and user-defined row fields used to generate the control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Collections.ICollection CreateFieldSet (object dataItem, bool useDataSource);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataItem</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data item for which to create the row fields.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>useDataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to use the data item to create the automatically generated row fields; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains both the automatically generated and the user-defined row fields for the specified data item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateFieldSet method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create the complete set of row fields for the control. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_AutoGenerateRows_\" data-linktype=\"relative-path\">AutoGenerateRows</a> property is set to <code>true</code>, automatically generated row fields are appended to the user-defined row fields contained in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Fields_\" data-linktype=\"relative-path\">Fields</a> collection. To create the automatically generated row fields based on the data item, pass in <code>true</code> for the <code>useDataSource</code> parameter; otherwise, the automatically generated row fields are created based on properties of the existing row fields in the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateRow_System_Int32_System_Web_UI_WebControls_DataControlRowType_System_Web_UI_WebControls_DataControlRowState_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRow(Int32,DataControlRowType,DataControlRowState)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object using the specified item index, row type, and row state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.WebControls.DetailsViewRow CreateRow (int rowIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the data item to display.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowtype\" data-linktype=\"relative-path\">DataControlRowType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowtype\" data-linktype=\"relative-path\">DataControlRowType</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowstate\" data-linktype=\"relative-path\">DataControlRowState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolrowstate\" data-linktype=\"relative-path\">DataControlRowState</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> with the specified item index, row type, and row state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateRow method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_CreateTable\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_CreateTable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateTable()</div>        \r\n          </div>\r\n    \r\n            <p>Creates the containing table for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Web.UI.WebControls.Table CreateTable ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.table\" data-linktype=\"relative-path\">Table</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.table\" data-linktype=\"relative-path\">Table</a> that represents the containing table for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CreateTable method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create a table that acts as the container for the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DataBind\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DataBind_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBind()</div>        \r\n          </div>\r\n    \r\n            <p>Calls the <span class=\"xref\">stem.Web.UI.WebControls.BaseDataBoundControl.DataBind*</span> method of the base class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override sealed void DataBind ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Data-bound controls should override <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PerformDataBinding_\" data-linktype=\"relative-path\">PerformDataBinding</a> instead of DataBind.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_DeleteItem\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_DeleteItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteItem()</div>        \r\n          </div>\r\n    \r\n            <p>Deletes the current record from the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void DeleteItem ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The deletion does not occur if the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in Insert mode. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event is raised immediately before the item is deleted. Set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code> to cancel the deletion.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_EnsureDataBound\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_EnsureDataBound_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureDataBound()</div>        \r\n          </div>\r\n    \r\n            <p>Calls the <span class=\"xref\">stem.Web.UI.WebControls.BaseDataBoundControl.DataBind*</span> method after verifying that the data listing control requires data binding and that a valid data source control is specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void EnsureDataBound ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The data binding does not occur if the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in Insert mode.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ExtractRowValues_System_Collections_Specialized_IOrderedDictionary_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_ExtractRowValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExtractRowValues(IOrderedDictionary,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the values of each field displayed and stores them in the specified <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fieldValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> used to store the field values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeReadOnlyFields</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include read-only fields; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeKeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include the primary key field or fields; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ExtractRowValues method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to retrieve the values of each field. The values can them be used for data source operations. You can specify whether the extracted values include read-only fields and key fields by using the <code>includeReadOnlyFields</code> and <code>includePrimaryKey</code> parameters, respectively.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_GetCallbackResult\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_GetCallbackResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCallbackResult()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the result of a callback event that targets a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetCallbackResult ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The results of the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control implements the <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler\" data-linktype=\"relative-path\">ICallbackEventHandler</a> interface and uses the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_RaisePostBackEvent_\" data-linktype=\"relative-path\">RaisePostBackEvent</a> to retrieve data and the GetCallbackResult method to return the retrieved data to the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_GetCallbackScript_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCallbackScript(IButtonControl,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the callback string created using the specified argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buttonControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The control that initiated the callback.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The callback code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The complete callback string to be sent to the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_InitializePager_System_Web_UI_WebControls_DetailsViewRow_System_Web_UI_WebControls_PagedDataSource_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_InitializePager_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializePager(DetailsViewRow,PagedDataSource)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the pager row for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void InitializePager (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>row</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> that contains the pager row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pagedDataSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a> that contains the data for the current page.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitializePager method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create the pager row. It creates a <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecell\" data-linktype=\"relative-path\">TableCell</a> object that contains the navigation controls using the properties of the <a class=\"xref\" href=\"system.web.ui.webcontrols.pageddatasource\" data-linktype=\"relative-path\">PagedDataSource</a> object contained in the <code>pagedDataSource</code> parameter. The cell is then added to the row specified by the <code>row</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_InitializeRow_System_Web_UI_WebControls_DetailsViewRow_System_Web_UI_WebControls_DataControlField_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_InitializeRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeRow(DetailsViewRow,DataControlField)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void InitializeRow (System.Web.UI.WebControls.DetailsViewRow row, System.Web.UI.WebControls.DataControlField field);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>row</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> to initialize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>field</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> that corresponds to the row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitializeRow method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to initialize the specified <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewrow\" data-linktype=\"relative-path\">DetailsViewRow</a> object. The row is initialized for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datacontrolfield\" data-linktype=\"relative-path\">DataControlField</a> object contained in the <code>field</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_InsertItem_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_InsertItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertItem(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the current record in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void InsertItem (bool causesValidation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>causesValidation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to perform page validation when the method is called; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>This method is called when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is not in insert mode.  </p>\n<p> - or -  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a> associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in insert mode, use the InsertItem method to programmatically insert the current record in the data source. This method is commonly used when you need to insert the current record from outside of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, such as from a different control on the page.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control must be in insert mode when this method is called; otherwise, an <a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a> exception is thrown.  </p>\n</div>\n<p> To specify whether page validation is performed before the insert operation, use the <code>causesValidation</code> parameter. Calling this method also raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"relative-path\">ItemInserted</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a> events.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_IsBindableType_System_Type_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_IsBindableType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBindableType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified data type can be bound to a field in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsBindableType (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> that represents the data type to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified data type can be bound to a field in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsBindableType method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to determine whether the specified data type can be bound to a field in the control. The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control supports the following data types:  </p>\n<p> All primitive data types, such as <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a>, <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>, and <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>  </p>\n <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>  \n\n <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>  \n\n <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>  \n\n <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_LoadControlState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_LoadControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadControlState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void LoadControlState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LoadControlState method is used to load the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that need to be persisted, even when the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property is set to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void LoadViewState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code. However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.  </p>\n<p> The LoadViewState method is used to load the previously saved view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnBubbleEvent_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnBubbleEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBubbleEvent(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the event for the Web server control is passed up the page&#39;s user interface (UI) server control hierarchy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool OnBubbleEvent (object source, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the event has been canceled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnBubbleEvent method implements the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_OnBubbleEvent_\" data-linktype=\"relative-path\">OnBubbleEvent</a> method to pass events from child controls to the page hierarchy.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnDataSourceViewChanged_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnDataSourceViewChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataSourceViewChanged(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_DataSourceViewChanged\" data-linktype=\"relative-path\">DataSourceViewChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnDataSourceViewChanged (object sender, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The source of the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnDataSourceViewChanged method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.datasourceview#System_Web_UI_DataSourceView_DataSourceViewChanged\" data-linktype=\"relative-path\">DataSourceViewChanged</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnDataSourceViewChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnInit_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInit(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnInit (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnInit method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_Init\" data-linktype=\"relative-path\">Init</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnInit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemCommand_System_Web_UI_WebControls_DetailsViewCommandEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemCommand_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemCommand(DetailsViewCommandEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemCommand (System.Web.UI.WebControls.DetailsViewCommandEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewcommandeventargs\" data-linktype=\"relative-path\">DetailsViewCommandEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewcommandeventargs\" data-linktype=\"relative-path\">DetailsViewCommandEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemCommand method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCommand\" data-linktype=\"relative-path\">ItemCommand</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemCommand method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemCreated_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemCreated(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemCreated (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemCreated method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemCreated\" data-linktype=\"relative-path\">ItemCreated</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemDeleted_System_Web_UI_WebControls_DetailsViewDeletedEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemDeleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemDeleted(DetailsViewDeletedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemDeleted (System.Web.UI.WebControls.DetailsViewDeletedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeletedeventargs\" data-linktype=\"relative-path\">DetailsViewDeletedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeletedeventargs\" data-linktype=\"relative-path\">DetailsViewDeletedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemDeleted method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleted\" data-linktype=\"relative-path\">ItemDeleted</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemDeleted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemDeleting_System_Web_UI_WebControls_DetailsViewDeleteEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemDeleting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemDeleting(DetailsViewDeleteEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemDeleting (System.Web.UI.WebControls.DetailsViewDeleteEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeleteeventargs\" data-linktype=\"relative-path\">DetailsViewDeleteEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeleteeventargs\" data-linktype=\"relative-path\">DetailsViewDeleteEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemDeleting method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemDeleting\" data-linktype=\"relative-path\">ItemDeleting</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemDeleting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemInserted_System_Web_UI_WebControls_DetailsViewInsertedEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemInserted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemInserted(DetailsViewInsertedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"relative-path\">ItemInserted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemInserted (System.Web.UI.WebControls.DetailsViewInsertedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinsertedeventargs\" data-linktype=\"relative-path\">DetailsViewInsertedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinsertedeventargs\" data-linktype=\"relative-path\">DetailsViewInsertedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemInserted method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserted\" data-linktype=\"relative-path\">ItemInserted</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemInserted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemInserting_System_Web_UI_WebControls_DetailsViewInsertEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemInserting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemInserting(DetailsViewInsertEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemInserting (System.Web.UI.WebControls.DetailsViewInsertEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinserteventargs\" data-linktype=\"relative-path\">DetailsViewInsertEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinserteventargs\" data-linktype=\"relative-path\">DetailsViewInsertEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemInserting method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemInserting\" data-linktype=\"relative-path\">ItemInserting</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemInserting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemUpdated_System_Web_UI_WebControls_DetailsViewUpdatedEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemUpdated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemUpdated(DetailsViewUpdatedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"relative-path\">ItemUpdated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemUpdated (System.Web.UI.WebControls.DetailsViewUpdatedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs\" data-linktype=\"relative-path\">DetailsViewUpdatedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs\" data-linktype=\"relative-path\">DetailsViewUpdatedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemUpdated method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"relative-path\">ItemUpdated</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemUpdated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnItemUpdating_System_Web_UI_WebControls_DetailsViewUpdateEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnItemUpdating_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemUpdating(DetailsViewUpdateEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemUpdating (System.Web.UI.WebControls.DetailsViewUpdateEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnItemUpdating method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnItemUpdating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnModeChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnModeChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnModeChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnModeChanged method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanged\" data-linktype=\"relative-path\">ModeChanged</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnModeChanging_System_Web_UI_WebControls_DetailsViewModeEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnModeChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnModeChanging(DetailsViewModeEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnModeChanging (System.Web.UI.WebControls.DetailsViewModeEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmodeeventargs\" data-linktype=\"relative-path\">DetailsViewModeEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmodeeventargs\" data-linktype=\"relative-path\">DetailsViewModeEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>There is no handler for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnModeChanging method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ModeChanging\" data-linktype=\"relative-path\">ModeChanging</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnModeChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnPageIndexChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnPageIndexChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPageIndexChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPageIndexChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnPageIndexChanged method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanged\" data-linktype=\"relative-path\">PageIndexChanged</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPageIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnPageIndexChanging_System_Web_UI_WebControls_DetailsViewPageEventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnPageIndexChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPageIndexChanging(DetailsViewPageEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.DetailsViewPageEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewpageeventargs\" data-linktype=\"relative-path\">DetailsViewPageEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewpageeventargs\" data-linktype=\"relative-path\">DetailsViewPageEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>This method is called when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is not bound to a data source control, the paging operation was not canceled, and an event handler is not registered for the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnPageIndexChanging method is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to raise the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndexChanging\" data-linktype=\"relative-path\">PageIndexChanging</a> event. It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPageIndexChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnPagePreLoad_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnPagePreLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPagePreLoad(Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the initialized state of the data-bound control before the control is loaded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPagePreLoad (object sender, EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sender</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a> that raised the event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The OnPagePreLoad method is used to control when data binding occurs within the life cycle of the page. It does this by setting the internal initialized state of the data-bound control. Because the control&#39;s initialized state is set during the <a class=\"xref\" href=\"system.web.ui.page#System_Web_UI_Page_PreLoad\" data-linktype=\"relative-path\">PreLoad</a> phase of the page&#39;s life cycle, the <a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrol#System_Web_UI_WebControls_DataBoundControl_OnDataPropertyChanged_\" data-linktype=\"relative-path\">OnDataPropertyChanged</a> event handler is called any time a data property of the control is changed after that phase, to signal that the control must re-bind to its data before rendering.  </p>\n<p> The OnPagePreLoad method is overridden by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class to set the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedataboundcontrol#System_Web_UI_WebControls_BaseDataBoundControl_RequiresDataBinding_\" data-linktype=\"relative-path\">RequiresDataBinding</a> property to <code>true</code> in cases where the HTTP request is a postback and view state is enabled but the data-bound control has not yet been bound. This scenario is common with controls such as <a class=\"xref\" href=\"system.web.ui.webcontrols.wizard\" data-linktype=\"relative-path\">Wizard</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.multiview\" data-linktype=\"relative-path\">MultiView</a>, where the visibility of the control is changed at run time.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_OnPreRender_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_OnPreRender_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPreRender(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_PreRender\" data-linktype=\"relative-path\">PreRender</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPreRender (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method notifies the server control to perform any necessary prerendering steps prior to saving view state and rendering content .It is generally used by control developers when extending the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> class.  </p>\n<p> The OnPreRender method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PerformDataBinding_System_Collections_IEnumerable_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PerformDataBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformDataBinding(IEnumerable)</div>        \r\n          </div>\r\n    \r\n            <p>Binds the specified data source to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void PerformDataBinding (System.Collections.IEnumerable data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a> that represents the data source.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PerformDataBinding method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to bind the specified data source to the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PrepareControlHierarchy\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_PrepareControlHierarchy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrepareControlHierarchy()</div>        \r\n          </div>\r\n    \r\n            <p>Sets up the control hierarchy of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PrepareControlHierarchy ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PrepareControlHierarchy method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to set up the control hierarchy in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control before the control is rendered.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_RaiseCallbackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_RaiseCallbackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaiseCallbackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the arguments for the callback handler in the <span class=\"xref\">stem.Web.UI.ClientScriptManager.GetCallbackEventReference*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void RaiseCallbackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument to pass to the event handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RaiseCallbackEvent method is a helper method used by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to create the arguments for the callback handler in the <a class=\"xref\" href=\"system.web.ui.clientscriptmanager#System_Web_UI_ClientScriptManager_GetCallbackEventReference_\" data-linktype=\"relative-path\">GetCallbackEventReference</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_RaisePostBackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_RaisePostBackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaisePostBackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the appropriate events for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control when it posts back to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void RaisePostBackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event argument from which to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> for the event or events that are raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The page calls the RaisePostBackEvent method when a postback event occurs that raises the appropriate events for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This call occurs in the page life cycle after loading and change notification are complete, but before prerendering occurs. This method has been implemented to create a <a class=\"xref\" href=\"system.web.ui.webcontrols.commandeventargs\" data-linktype=\"relative-path\">CommandEventArgs</a> object for the events that are raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_Render_System_Web_UI_HtmlTextWriter_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_Render_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Render(HtmlTextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Displays the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control on the client using the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Render (System.Web.UI.HtmlTextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> that contains the output stream to render on the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Render method is used to render the server control content to the client&#39;s browser using the specified <a class=\"xref\" href=\"system.web.ui.htmltextwriter\" data-linktype=\"relative-path\">HtmlTextWriter</a> object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_SaveControlState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_SaveControlState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveControlState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that need to be persisted, even when the <span class=\"xref\">stem.Web.UI.Control.EnableViewState*</span> property is set to <code>false</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override object SaveControlState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>Returns the server control&#39;s current view state. If there is no view state associated with the control, this method returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to save the state of the properties in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that need to be persisted, even when the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_EnableViewState_\" data-linktype=\"relative-path\">EnableViewState</a> property is set to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is used primarily by control developers to extend the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the current view state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override object SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SaveViewState method is a helper method called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to save the state of the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_SetPageIndex_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_SetPageIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetPageIndex(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the index of the currently displayed page in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetPageIndex (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index value to set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Marks the starting point to begin tracking and saving view-state changes to the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the control&#39;s view state.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_UpdateItem_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_UpdateItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateItem(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Updates the current record in the data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void UpdateItem (bool causesValidation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>causesValidation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to perform page validation when the method is called; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>This method is called when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is not in edit mode.  </p>\n<p> - or -  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.datasourceview\" data-linktype=\"relative-path\">DataSourceView</a> associated with the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode, use the UpdateItem method to programmatically update the current record in the data source. This method is commonly used when you need to update the current record from outside of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control, such as from a different control on the page.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control must be in edit mode when this method is called; otherwise, an <a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a> exception is thrown.  </p>\n</div>\n<p> To specify whether page validation is performed before the update operation, use the <code>causesValidation</code> parameter. Calling this method also raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdated\" data-linktype=\"relative-path\">ItemUpdated</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_ItemUpdating\" data-linktype=\"relative-path\">ItemUpdating</a> events.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemCommand\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemCommand</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewCommandEventHandler ItemCommand;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemCommand event is raised when a button within the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked. This allows you to provide an event handler that performs a custom routine whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewcommandeventargs\" data-linktype=\"relative-path\">DetailsViewCommandEventArgs</a> object is passed to the event handler, which allows you to determine the command name and command argument of the button clicked. To determine the index of the current record, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemCommand event to handle a button click in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. When the user clicks the Add Contact button, the item is added to a <a class=\"xref\" href=\"system.web.ui.webcontrols.listbox\" data-linktype=\"relative-path\">ListBox</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewItemCommand#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomerDetailView_ItemCommand(ByVal sender As Object, ByVal e As DetailsViewCommandEventArgs)\n    \n        &#39; Use the CommandName property to determine which button\n        &#39; was clicked. \n        If e.CommandName = &quot;Add&quot; Then\n\n            &#39; Add the current store to the contact list. \n     \n            &#39; Get the row that contains the store name. In this\n            &#39; example, the store name is in the second row (index 1)  \n            &#39; of the DetailsView control.\n            Dim row As DetailsViewRow = CustomerDetailView.Rows(1)\n      \n            &#39; Get the store&#39;s name from the appropriate cell.\n            &#39; In this example, the store name is in the second cell  \n            &#39; (index 1) of the row.\n            Dim name As String = row.Cells(1).Text\n\n            &#39; Create a ListItem object with the store&#39;s name.\n            Dim item As New ListItem(name)\n\n            &#39; Add the ListItem object to the ListBox, if the \n            &#39; item doesn&#39;t already exist.\n            If Not ContactListBox.Items.Contains(item) Then\n      \n                ContactListBox.Items.Add(item)\n      \n            End If\n        \n        End If\n    \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView ItemCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView ItemCommand Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n            DataSourceID=&quot;DetailsViewSource&quot;\n            AutoGenerateRows=&quot;false&quot; \n            DataKeyNames=&quot;CustomerID&quot; \n            AllowPaging=&quot;true&quot; \n            OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot;\n            runat=&quot;server&quot;&gt;\n            \n            &lt;FieldHeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            \n            &lt;Fields&gt;\n                &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;Store ID&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;Store Name&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n                &lt;asp:ButtonField CommandName=&quot;Add&quot; Text=&quot;Add Contact&quot; /&gt;\n            &lt;/Fields&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;hr /&gt;\n        \n        Contacts:&lt;br /&gt;\n        &lt;asp:ListBox ID=&quot;ContactListBox&quot; runat=&quot;server&quot; /&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewItemCommand#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemCommand(Object sender, DetailsViewCommandEventArgs e)\n    {\n\n        // Use the CommandName property to determine which button\n        // was clicked. \n        if (e.CommandName == &quot;Add&quot;)\n        {\n\n            // Add the current store to the contact list. \n\n            // Get the row that contains the store name. In this\n            // example, the store name is in the second row (index 1)  \n            // of the DetailsView control.\n            DetailsViewRow row = CustomerDetailView.Rows[1];\n\n            // Get the store&#39;s name from the appropriate cell.\n            // In this example, the store name is in the second cell  \n            // (index 1) of the row.\n            String name = row.Cells[1].Text;\n\n            // Create a ListItem object with the store&#39;s name.\n            ListItem item = new ListItem(name);\n\n            // Add the ListItem object to the ListBox, if the \n            // item doesn&#39;t already exist.\n            if (!ContactListBox.Items.Contains(item))\n            {\n                ContactListBox.Items.Add(item);\n            }\n\n        }\n\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView ItemCommand Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView ItemCommand Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n            DataSourceID=&quot;DetailsViewSource&quot;\n            AutoGenerateRows=&quot;false&quot; \n            DataKeyNames=&quot;CustomerID&quot; \n            AllowPaging=&quot;true&quot; \n            OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot;\n            runat=&quot;server&quot;&gt;\n            \n            &lt;FieldHeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            \n            &lt;Fields&gt;\n                &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;Store ID&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;Store Name&quot; /&gt;\n                &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n                &lt;asp:ButtonField CommandName=&quot;Add&quot; Text=&quot;Add Contact&quot; /&gt;\n            &lt;/Fields&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;hr /&gt;\n        \n        Contacts:&lt;br /&gt;\n        &lt;asp:ListBox ID=&quot;ContactListBox&quot; runat=&quot;server&quot; /&gt;\n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemCreated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemCreated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a record is created in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ItemCreated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemCreated event is raised each time a record is created in a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This can occur when the control is first rendered, or when the user navigates to another record. You can use this event to provide an event handler that performs a custom routine, such as adding custom content to a row, whenever this event occurs.  </p>\n<p> You can access the header, footer, and pager rows in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_HeaderRow_\" data-linktype=\"relative-path\">HeaderRow</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_FooterRow_\" data-linktype=\"relative-path\">FooterRow</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_TopPagerRow_\" data-linktype=\"relative-path\">TopPagerRow</a>, or <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_BottomPagerRow_\" data-linktype=\"relative-path\">BottomPagerRow</a> properties, respectively. To access one of the data rows, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemCreated event to update a custom pager row with current paging statistics.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewHeaderTemplate#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemCreated(Object sender, EventArgs e)\n  {\n    \n    // Get the header row.\n      DetailsViewRow headerRow = CustomerDetailView.HeaderRow;\n\n    // Get the Label control that displays the current page information \n    // from the header row.\n    Label pageNum = (Label)headerRow.FindControl(&quot;PageNumberLabel&quot;);\n\n    if(pageNum != null)\n    {\n      // Update the Label control with the current page number.\n        int page = CustomerDetailView.DataItemIndex + 1;\n      pageNum.Text = &quot;Page &quot; + page.ToString ();\n    }\n  }\n  \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemcreated=&quot;CustomerDetailView_ItemCreated&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;headertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/headertemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewHeaderTemplate#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemCreated(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; Get the header row.\n        Dim headerRow As DetailsViewRow = CustomerDetailView.HeaderRow\n\n        &#39; Get the Label control that displays the current page information \n        &#39; from the header row.\n        Dim pageNum As Label = _\n            CType(headerRow.FindControl(&quot;PageNumberLabel&quot;), Label)\n\n        If Not pageNum Is Nothing Then\n    \n            &#39; Update the Label control with the current page number.\n            Dim page As Integer = CustomerDetailView.DataItemIndex + 1\n            pageNum.Text = &quot;Page &quot; &amp; page.ToString()\n    \n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView HeaderTemplate Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView HeaderTemplate Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemcreated=&quot;CustomerDetailView_ItemCreated&quot;   \n          runat=&quot;server&quot;&gt;\n               \n          &lt;headerstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;pagersettings Mode=&quot;NextPreviousFirstLast&quot;/&gt;  \n            \n          &lt;headertemplate&gt;\n          \n            &lt;table width=&quot;100%&quot;&gt;            \n              &lt;tr&gt;\n                &lt;td align=&quot;left&quot;&gt;\n                  &lt;asp:Image id=&quot;LogoImage&quot;\n                    imageurl=&quot;~\\images\\Logo.jpg&quot;\n                    AlternateText=&quot;Our logo&quot; \n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n                &lt;td align=&quot;right&quot; valign=&quot;bottom&quot;&gt;\n                  &lt;asp:Label id=&quot;PageNumberLabel&quot;\n                    font-size=&quot;9&quot;\n                    forecolor=&quot;DodgerBlue&quot;\n                    runat=&quot;server&quot;/&gt;\n                &lt;/td&gt;\n              &lt;/tr&gt;            \n            &lt;/table&gt;\n          \n          &lt;/headertemplate&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemDeleted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemDeleted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a Delete button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the delete operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewDeletedEventHandler ItemDeleted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemDeleted event is raised when a Delete button within the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the delete operation. This allows you to provide an event handler that performs a custom routine, such as checking the results of the delete operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeletedeventargs\" data-linktype=\"relative-path\">DetailsViewDeletedEventArgs</a> object is passed to the event handler, which allows you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event handler by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeletedeventargs#System_Web_UI_WebControls_DetailsViewDeletedEventArgs_ExceptionHandled_\" data-linktype=\"relative-path\">ExceptionHandled</a> property.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemDeleted event to refresh a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control after a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control performs a delete operation. This keeps the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control synchronized with the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewComplex#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  Sub CustomerDetail_ItemInserted(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertedEventArgs)\n    &#39; Refresh the GridView control after a new record is inserted in \n    &#39; the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemInserting(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.Values.Count - 1\n      If e.Values(i) IsNot Nothing Then\n        e.Values(i) = Server.HtmlEncode(e.Values(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdated(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdatedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.NewValues.Count - 1\n      If e.NewValues(i) IsNot Nothing Then\n        e.NewValues(i) = Server.HtmlEncode(e.NewValues(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemDeleted(ByVal sender As Object, _\n    ByVal e As DetailsViewDeletedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers&#39;s detailed      --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; DataSourceID=&quot;Details&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, \n        @ContactTitle, @Address, @City, @Region, @PostalCode, \n        @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET \n        [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewComplex#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  void CustomerDetail_ItemInserted(object sender, \n    DetailsViewInsertedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is inserted \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemInserting(object sender, \n    DetailsViewInsertEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.Values.Count; i++)\n    {\n      if (e.Values[i] != null)\n      {\n        e.Values[i] = Server.HtmlEncode(e.Values[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemUpdated(object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemUpdating(object sender, \n    DetailsViewUpdateEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.NewValues.Count; i++)\n    {\n      if (e.NewValues[i] != null)\n      {\n        e.NewValues[i] = Server.HtmlEncode(e.NewValues[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemDeleted(object sender, \n    DetailsViewDeletedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n      DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n      DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers//s detailed     --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; \n            DataSourceID=&quot;Details&quot; AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, @ContactTitle, \n        @Address, @City, @Region, @PostalCode, @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemDeleting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemDeleting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a Delete button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the delete operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewDeleteEventHandler ItemDeleting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemDeleting event is raised when a Delete button within the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the delete operation. This allows you to provide an event handler that performs a custom routine, such as canceling the delete operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeleteeventargs\" data-linktype=\"relative-path\">DetailsViewDeleteEventArgs</a> object is passed to the event handler, which allows you to determine the index of the record being deleted and to indicate that the delete operation should be canceled. To cancel the delete operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>. You can also manipulate the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeleteeventargs#System_Web_UI_WebControls_DetailsViewDeleteEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewdeleteeventargs#System_Web_UI_WebControls_DetailsViewDeleteEventArgs_Values_\" data-linktype=\"relative-path\">Values</a> collections, if necessary, before the values are passed to the data source.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemDeleting event to cancel the delete operation if the user attempts to delete the last item from the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewItemDeleting#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ItemDeleting(ByVal sender As Object, ByVal e As DetailsViewDeleteEventArgs)\n        &#39; Cancel the delete operation if the user attempts to delete the last\n        &#39; record from the data source.\n        If (CustomerDetailView.DataItemCount &lt;= 1) Then\n            e.Cancel = True\n            MessageLabel.Text = &quot;You must keep at least one store.&quot;\n        Else\n            MessageLabel.Text = &quot;&quot;\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ItemDeleting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ItemDeleting Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneratedeletebutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemdeleting=&quot;CustomerDetailView_ItemDeleting&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;asp:Label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] \n              From [Customers]&quot;\n            DeleteCommand=&quot;DELETE FROM [Customers] WHERE [CustomerID] = @CustomerID&quot; &gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewItemDeleting#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ItemDeleting(Object sender, DetailsViewDeleteEventArgs e)\n  {\n    // Cancel the delete operation if the user attempts to delete the last\n    // record from the data source.\n      if (CustomerDetailView.DataItemCount &lt;= 1)\n    {\n      e.Cancel = true;\n      MessageLabel.Text = &quot;You must keep at least one store.&quot;;\n    }\n    else\n    {\n      MessageLabel.Text = &quot;&quot;;\n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ItemDeleting Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ItemDeleting Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneratedeletebutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          onitemdeleting=&quot;CustomerDetailView_ItemDeleting&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;asp:Label id=&quot;MessageLabel&quot;\n          forecolor=&quot;Red&quot;\n          runat=&quot;server&quot;/&gt;\n          \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n            SelectCommand=&quot;Select [CustomerID], [CompanyName], \n              [Address], [City], [PostalCode], [Country] \n              From [Customers]&quot;\n            DeleteCommand=&quot;DELETE FROM [Customers] WHERE [CustomerID] = @CustomerID&quot; &gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemInserted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemInserted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an Insert button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the insert operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewInsertedEventHandler ItemInserted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemInserted event is raised when an Insert button within the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the insert operation. This allows you to provide an event handler that performs a custom routine, such as checking the results of the insert operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinsertedeventargs\" data-linktype=\"relative-path\">DetailsViewInsertedEventArgs</a> object is passed to the event handler, which allows you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event handler by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinsertedeventargs#System_Web_UI_WebControls_DetailsViewInsertedEventArgs_ExceptionHandled_\" data-linktype=\"relative-path\">ExceptionHandled</a> property. To keep the control in insert mode after an insert operation, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinsertedeventargs#System_Web_UI_WebControls_DetailsViewInsertedEventArgs_KeepInInsertMode_\" data-linktype=\"relative-path\">KeepInInsertMode</a> property to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemInserted event to refresh a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control after a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control performs an insert operation. This keeps the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control synchronized with the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewComplex#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  Sub CustomerDetail_ItemInserted(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertedEventArgs)\n    &#39; Refresh the GridView control after a new record is inserted in \n    &#39; the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemInserting(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.Values.Count - 1\n      If e.Values(i) IsNot Nothing Then\n        e.Values(i) = Server.HtmlEncode(e.Values(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdated(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdatedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.NewValues.Count - 1\n      If e.NewValues(i) IsNot Nothing Then\n        e.NewValues(i) = Server.HtmlEncode(e.NewValues(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemDeleted(ByVal sender As Object, _\n    ByVal e As DetailsViewDeletedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers&#39;s detailed      --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; DataSourceID=&quot;Details&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, \n        @ContactTitle, @Address, @City, @Region, @PostalCode, \n        @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET \n        [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewComplex#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  void CustomerDetail_ItemInserted(object sender, \n    DetailsViewInsertedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is inserted \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemInserting(object sender, \n    DetailsViewInsertEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.Values.Count; i++)\n    {\n      if (e.Values[i] != null)\n      {\n        e.Values[i] = Server.HtmlEncode(e.Values[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemUpdated(object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemUpdating(object sender, \n    DetailsViewUpdateEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.NewValues.Count; i++)\n    {\n      if (e.NewValues[i] != null)\n      {\n        e.NewValues[i] = Server.HtmlEncode(e.NewValues[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemDeleted(object sender, \n    DetailsViewDeletedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n      DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n      DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers//s detailed     --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; \n            DataSourceID=&quot;Details&quot; AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, @ContactTitle, \n        @Address, @City, @Region, @PostalCode, @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemInserting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemInserting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an Insert button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the insert operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewInsertEventHandler ItemInserting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemInserting event is raised when an Insert button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the insert operation. This allows you to provide an event handler that performs a custom routine, such as canceling the insert operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinserteventargs\" data-linktype=\"relative-path\">DetailsViewInsertEventArgs</a> object is passed to the event handler, which allows you to indicate that the insert operation should be canceled. To cancel the insert operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>. You can also manipulate the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewinserteventargs#System_Web_UI_WebControls_DetailsViewInsertEventArgs_Values_\" data-linktype=\"relative-path\">Values</a> collection, if necessary, before the values are passed to the data source.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemInserting event to HTML-encode the values entered by the user before a new record is added to the data source.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewComplex#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  Sub CustomerDetail_ItemInserted(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertedEventArgs)\n    &#39; Refresh the GridView control after a new record is inserted in \n    &#39; the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemInserting(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.Values.Count - 1\n      If e.Values(i) IsNot Nothing Then\n        e.Values(i) = Server.HtmlEncode(e.Values(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdated(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdatedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.NewValues.Count - 1\n      If e.NewValues(i) IsNot Nothing Then\n        e.NewValues(i) = Server.HtmlEncode(e.NewValues(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemDeleted(ByVal sender As Object, _\n    ByVal e As DetailsViewDeletedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers&#39;s detailed      --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; DataSourceID=&quot;Details&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, \n        @ContactTitle, @Address, @City, @Region, @PostalCode, \n        @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET \n        [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewComplex#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  void CustomerDetail_ItemInserted(object sender, \n    DetailsViewInsertedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is inserted \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemInserting(object sender, \n    DetailsViewInsertEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.Values.Count; i++)\n    {\n      if (e.Values[i] != null)\n      {\n        e.Values[i] = Server.HtmlEncode(e.Values[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemUpdated(object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemUpdating(object sender, \n    DetailsViewUpdateEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.NewValues.Count; i++)\n    {\n      if (e.NewValues[i] != null)\n      {\n        e.NewValues[i] = Server.HtmlEncode(e.NewValues[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemDeleted(object sender, \n    DetailsViewDeletedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n      DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n      DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers//s detailed     --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; \n            DataSourceID=&quot;Details&quot; AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, @ContactTitle, \n        @Address, @City, @Region, @PostalCode, @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemUpdated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemUpdated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an Update button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the update operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewUpdatedEventHandler ItemUpdated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemUpdated event is raised when an Update button within the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but after the update operation. This allows you to provide an event handler that performs a custom routine, such as checking the results of the update operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs\" data-linktype=\"relative-path\">DetailsViewUpdatedEventArgs</a> object is passed to the event handler, which allows you to determine the number of rows affected and any exceptions that might have occurred. You can also indicate whether the exception was handled in the event handler by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs#System_Web_UI_WebControls_DetailsViewUpdatedEventArgs_ExceptionHandled_\" data-linktype=\"relative-path\">ExceptionHandled</a> property. To keep the control in edit mode after an update operation, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdatedeventargs#System_Web_UI_WebControls_DetailsViewUpdatedEventArgs_KeepInEditMode_\" data-linktype=\"relative-path\">KeepInEditMode</a> property to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemUpdated event to refresh a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control after a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control performs an update operation. This keeps the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control synchronized with the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewComplex#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  Sub CustomerDetail_ItemInserted(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertedEventArgs)\n    &#39; Refresh the GridView control after a new record is inserted in \n    &#39; the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemInserting(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.Values.Count - 1\n      If e.Values(i) IsNot Nothing Then\n        e.Values(i) = Server.HtmlEncode(e.Values(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdated(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdatedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.NewValues.Count - 1\n      If e.NewValues(i) IsNot Nothing Then\n        e.NewValues(i) = Server.HtmlEncode(e.NewValues(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemDeleted(ByVal sender As Object, _\n    ByVal e As DetailsViewDeletedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers&#39;s detailed      --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; DataSourceID=&quot;Details&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, \n        @ContactTitle, @Address, @City, @Region, @PostalCode, \n        @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET \n        [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewComplex#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  void CustomerDetail_ItemInserted(object sender, \n    DetailsViewInsertedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is inserted \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemInserting(object sender, \n    DetailsViewInsertEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.Values.Count; i++)\n    {\n      if (e.Values[i] != null)\n      {\n        e.Values[i] = Server.HtmlEncode(e.Values[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemUpdated(object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemUpdating(object sender, \n    DetailsViewUpdateEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.NewValues.Count; i++)\n    {\n      if (e.NewValues[i] != null)\n      {\n        e.NewValues[i] = Server.HtmlEncode(e.NewValues[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemDeleted(object sender, \n    DetailsViewDeletedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n      DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n      DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers//s detailed     --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; \n            DataSourceID=&quot;Details&quot; AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, @ContactTitle, \n        @Address, @City, @Region, @PostalCode, @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ItemUpdating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemUpdating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an Update button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the update operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewUpdateEventHandler ItemUpdating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemUpdating event is raised when an Update button within a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is clicked, but before the update operation. This allows you to provide an event handler that performs a custom routine, such as canceling the update operation, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs\" data-linktype=\"relative-path\">DetailsViewUpdateEventArgs</a> object is passed to the event handler, which allows you to determine the index of the record being updated and to indicate that the update operation should be canceled. To cancel the update operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>. You can also manipulate the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewupdateeventargs#System_Web_UI_WebControls_DetailsViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemUpdating event to HTML-encode the values entered by the user before a record is updated in the data source.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewComplex#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  Sub CustomerDetail_ItemInserted(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertedEventArgs)\n    &#39; Refresh the GridView control after a new record is inserted in \n    &#39; the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemInserting(ByVal sender As Object, _\n    ByVal e As DetailsViewInsertEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.Values.Count - 1\n      If e.Values(i) IsNot Nothing Then\n        e.Values(i) = Server.HtmlEncode(e.Values(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdated(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdatedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n  \n  Sub CustomerDetail_ItemUpdating(ByVal sender As Object, _\n    ByVal e As DetailsViewUpdateEventArgs)\n    &#39; Iterate though the values entered by the user and HTML encode \n    &#39; the values. This helps prevent malicious values from being \n    &#39; stored in the data source.\n    For i As Integer = 0 To e.NewValues.Count - 1\n      If e.NewValues(i) IsNot Nothing Then\n        e.NewValues(i) = Server.HtmlEncode(e.NewValues(i).ToString())\n      End If\n    Next\n  End Sub\n  \n  Sub CustomerDetail_ItemDeleted(ByVal sender As Object, _\n    ByVal e As DetailsViewDeletedEventArgs)\n    &#39; Refresh the GridView control after a new record is updated \n    &#39; in the DetailsView control.\n    CustomersView.DataBind()\n  End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers&#39;s detailed      --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; DataSourceID=&quot;Details&quot; \n            AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; \n                ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, \n        @ContactTitle, @Address, @City, @Region, @PostalCode, \n        @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET \n        [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewComplex#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n  void CustomerDetail_ItemInserted(object sender, \n    DetailsViewInsertedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is inserted \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemInserting(object sender, \n    DetailsViewInsertEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.Values.Count; i++)\n    {\n      if (e.Values[i] != null)\n      {\n        e.Values[i] = Server.HtmlEncode(e.Values[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemUpdated(object sender, \n    DetailsViewUpdatedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n\n  void CustomerDetail_ItemUpdating(object sender, \n    DetailsViewUpdateEventArgs e)\n  {\n    // Iterate though the values entered by the user and HTML encode \n    // the values. This helps prevent malicious values from being \n    // stored in the data source.\n    for (int i = 0; i &lt; e.NewValues.Count; i++)\n    {\n      if (e.NewValues[i] != null)\n      {\n        e.NewValues[i] = Server.HtmlEncode(e.NewValues[i].ToString());\n      }\n    }\n  }\n\n  void CustomerDetail_ItemDeleted(object sender, \n    DetailsViewDeletedEventArgs e)\n  {\n    // Refresh the GridView control after a new record is updated \n    // in the DetailsView control.\n    CustomersView.DataBind();\n  }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n      DetailsView Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n    &lt;h3&gt;\n      DetailsView Example&lt;/h3&gt;\n    &lt;table cellspacing=&quot;10&quot;&gt;\n      &lt;tr&gt;\n        &lt;td&gt;\n          &lt;!-- Use a GridView control in combination with      --&gt;\n          &lt;!-- a DetailsView control to display master-detail  --&gt;\n          &lt;!-- information. When the user selects a store from --&gt;\n          &lt;!-- GridView control, the customers//s detailed     --&gt;\n          &lt;!-- information is displayed in the DetailsView     --&gt;\n          &lt;!-- control.                                        --&gt;\n          &lt;asp:GridView ID=&quot;CustomersView&quot; DataSourceID=&quot;Customers&quot; \n            AutoGenerateColumns=&quot;False&quot;\n            DataKeyNames=&quot;CustomerID&quot; runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Blue&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;Columns&gt;\n              &lt;asp:CommandField ShowSelectButton=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; \n                HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; \n                HeaderText=&quot;CompanyName&quot; /&gt;\n            &lt;/Columns&gt;\n          &lt;/asp:GridView&gt;\n        &lt;/td&gt;\n        &lt;td valign=&quot;top&quot;&gt;\n          &lt;asp:DetailsView ID=&quot;CustomerDetail&quot; \n            DataSourceID=&quot;Details&quot; AutoGenerateRows=&quot;false&quot;\n            AutoGenerateInsertButton=&quot;true&quot; \n            AutoGenerateEditButton=&quot;true&quot; \n            AutoGenerateDeleteButton=&quot;true&quot;\n            EmptyDataText=&quot;No records.&quot; \n            DataKeyNames=&quot;CustomerID&quot; GridLines=&quot;Both&quot; \n            OnItemInserted=&quot;CustomerDetail_ItemInserted&quot;\n            OnItemInserting=&quot;CustomerDetail_ItemInserting&quot; \n            OnItemUpdated=&quot;CustomerDetail_ItemUpdated&quot;\n            OnItemUpdating=&quot;CustomerDetail_ItemUpdating&quot; \n            OnItemDeleted=&quot;CustomerDetail_ItemDeleted&quot;\n            runat=&quot;server&quot;&gt;\n            &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n            &lt;RowStyle BackColor=&quot;White&quot; /&gt;\n            &lt;AlternatingRowStyle BackColor=&quot;LightGray&quot; /&gt;\n            &lt;EditRowStyle BackColor=&quot;LightCyan&quot; /&gt;\n            &lt;Fields&gt;\n              &lt;asp:BoundField DataField=&quot;CustomerID&quot; HeaderText=&quot;CustomerID&quot; ReadOnly=&quot;True&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactName&quot; HeaderText=&quot;ContactName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;ContactTitle&quot; HeaderText=&quot;ContactTitle&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;CompanyName&quot; HeaderText=&quot;CompanyName&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Address&quot; HeaderText=&quot;Address&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;City&quot; HeaderText=&quot;City&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Region&quot; HeaderText=&quot;Region&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;PostalCode&quot; HeaderText=&quot;PostalCode&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Country&quot; HeaderText=&quot;Country&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Phone&quot; HeaderText=&quot;Phone&quot; /&gt;\n              &lt;asp:BoundField DataField=&quot;Fax&quot; HeaderText=&quot;Fax&quot; /&gt;\n            &lt;/Fields&gt;\n          &lt;/asp:DetailsView&gt;\n        &lt;/td&gt;\n      &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n    &lt;!-- to the Northwind sample database.                   --&gt;\n    &lt;!-- It is strongly recommended that each data-bound     --&gt;\n    &lt;!-- control uses a separate data source control.        --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Customers&quot; runat=&quot;server&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      SelectCommand=&quot;SELECT [CompanyName], [ContactName], [CustomerID] \n        FROM [Customers]&quot;&gt;\n    &lt;/asp:SqlDataSource&gt;\n    &lt;!-- Add a filter to the data source control for the     --&gt;\n    &lt;!-- DetailsView control to display the details of the   --&gt;\n    &lt;!-- store selected in the GridView control.             --&gt;\n    &lt;asp:SqlDataSource ID=&quot;Details&quot; \n      ConnectionString=\n        &quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n      runat=&quot;server&quot; \n      SelectCommand=&quot;SELECT * FROM [Customers] \n        WHERE ([CustomerID] = @CustomerID)&quot;\n      DeleteCommand=&quot;DELETE FROM [Customers] \n        WHERE [CustomerID] = @CustomerID&quot;\n      InsertCommand=&quot;INSERT INTO [Customers] ([CustomerID], \n        [CompanyName], [ContactName], [ContactTitle], [Address], \n        [City], [Region], [PostalCode], [Country], [Phone], [Fax]) \n        VALUES (@CustomerID, @CompanyName, @ContactName, @ContactTitle, \n        @Address, @City, @Region, @PostalCode, @Country, @Phone, @Fax)&quot;\n      UpdateCommand=&quot;UPDATE [Customers] SET [CompanyName] = @CompanyName, \n        [ContactName] = @ContactName, [ContactTitle] = @ContactTitle, \n        [Address] = @Address, [City] = @City, [Region] = @Region, \n        [PostalCode] = @PostalCode, [Country] = @Country, \n        [Phone] = @Phone, [Fax] = @Fax \n        WHERE [CustomerID] = @CustomerID&quot;&gt;\n      &lt;SelectParameters&gt;\n        &lt;asp:ControlParameter ControlID=&quot;CustomersView&quot; \n          Name=&quot;CustomerID&quot; PropertyName=&quot;SelectedValue&quot;\n          Type=&quot;String&quot; /&gt;\n      &lt;/SelectParameters&gt;\n      &lt;DeleteParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/DeleteParameters&gt;\n      &lt;UpdateParameters&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n      &lt;/UpdateParameters&gt;\n      &lt;InsertParameters&gt;\n        &lt;asp:Parameter Name=&quot;CustomerID&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;CompanyName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactName&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;ContactTitle&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Address&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;City&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Region&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;PostalCode&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Country&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Phone&quot; Type=&quot;String&quot; /&gt;\n        &lt;asp:Parameter Name=&quot;Fax&quot; Type=&quot;String&quot; /&gt;\n      &lt;/InsertParameters&gt;\n    &lt;/asp:SqlDataSource&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control attempts to change between edit, insert, and read-only mode, but after the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.CurrentMode*</span> property is updated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ModeChanged event is raised when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control attempts to change between edit, insert, and read-only mode, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CurrentMode_\" data-linktype=\"relative-path\">CurrentMode</a> property is updated. This allows you to provide an event handler that performs a custom routine, such as synchronizing the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control with another control, whenever this event occurs.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ModeChanged event to display the current mode in the header row.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewModeChanged#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ModeChanged(Object sender, EventArgs e)\n  {\n    // Display the current mode in the header row.\n      switch (CustomerDetailView.CurrentMode)\n    {\n      case DetailsViewMode.Edit:\n        CustomerDetailView.HeaderText = &quot;Edit Mode&quot;;\n        CustomerDetailView.HeaderStyle.ForeColor = System.Drawing.Color.Red;\n        CustomerDetailView.HeaderStyle.BackColor = System.Drawing.Color.LightGray;\n        break;\n      case DetailsViewMode.Insert:\n        CustomerDetailView.HeaderText = &quot;Insert Mode&quot;;\n        CustomerDetailView.HeaderStyle.ForeColor = System.Drawing.Color.Green;\n        CustomerDetailView.HeaderStyle.BackColor = System.Drawing.Color.Yellow;\n        break;\n      case DetailsViewMode.ReadOnly:\n        CustomerDetailView.HeaderText = &quot;Read-Only Mode&quot;;\n        CustomerDetailView.HeaderStyle.ForeColor = System.Drawing.Color.Blue;\n        CustomerDetailView.HeaderStyle.BackColor = System.Drawing.Color.White;\n        break;\n      default:\n          CustomerDetailView.HeaderText = &quot;Error!&quot;;\n        break;\n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ModeChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ModeChanged Example&lt;/h3&gt;      \n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;\n          autogenerateinsertbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          headertext=&quot;Read-Only Mode&quot; \n          onmodechanged=&quot;CustomerDetailView_ModeChanged&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;headerstyle forecolor=&quot;Blue&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewModeChanged#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ModeChanged(ByVal sender As Object, ByVal e As EventArgs)\n  \n        &#39; Display the current mode in the header row.\n        Select Case CustomerDetailView.CurrentMode\n\n            Case DetailsViewMode.Edit\n                CustomerDetailView.HeaderText = &quot;Edit Mode&quot;\n                CustomerDetailView.HeaderStyle.ForeColor = System.Drawing.Color.Red\n                CustomerDetailView.HeaderStyle.BackColor = System.Drawing.Color.LightGray\n\n            Case DetailsViewMode.Insert\n                CustomerDetailView.HeaderText = &quot;Insert Mode&quot;\n                CustomerDetailView.HeaderStyle.ForeColor = System.Drawing.Color.Green\n                CustomerDetailView.HeaderStyle.BackColor = System.Drawing.Color.Yellow\n\n            Case DetailsViewMode.ReadOnly\n                CustomerDetailView.HeaderText = &quot;Read-Only Mode&quot;\n                CustomerDetailView.HeaderStyle.ForeColor = System.Drawing.Color.Blue\n                CustomerDetailView.HeaderStyle.BackColor = System.Drawing.Color.White\n\n            Case Else\n                CustomerDetailView.HeaderText = &quot;Error!&quot;\n        \n        End Select\n    \n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ModeChanged Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ModeChanged Example&lt;/h3&gt;      \n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot;\n          autogenerateinsertbutton=&quot;true&quot;  \n          allowpaging=&quot;true&quot;\n          headertext=&quot;Read-Only Mode&quot; \n          onmodechanged=&quot;CustomerDetailView_ModeChanged&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n            \n          &lt;headerstyle forecolor=&quot;Blue&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_ModeChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ModeChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control attempts to change between edit, insert, and read-only mode, but before the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.CurrentMode*</span> property is updated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewModeEventHandler ModeChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ModeChanging event is raised when a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control attempts to change between edit, insert, and read-only mode, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_CurrentMode_\" data-linktype=\"relative-path\">CurrentMode</a> property is updated. This allows you to provide an event handler that performs a custom routine, such as canceling the mode change, whenever this event occurs.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmodeeventargs\" data-linktype=\"relative-path\">DetailsViewModeEventArgs</a> object is passed to the event handler, which allows you to determine the new mode, to determine whether the mode change was a result of the user canceling an edit operation, or to cancel the mode change. To determine the new mode, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmodeeventargs#System_Web_UI_WebControls_DetailsViewModeEventArgs_NewMode_\" data-linktype=\"relative-path\">NewMode</a> property. To determine whether the mode change was a result of the user canceling an edit operation, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewmodeeventargs#System_Web_UI_WebControls_DetailsViewModeEventArgs_CancelingEdit_\" data-linktype=\"relative-path\">CancelingEdit</a> property. You can cancel the mode change by setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ModeChanging event to disable the paging feature when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control is in edit mode.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewModeChanging#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    void CustomerDetailView_ModeChanging(Object sender, DetailsViewModeEventArgs e)\n  {\n    // Disable the paging feature in edit mode.\n    if (e.NewMode == DetailsViewMode.Edit)\n    {\n        CustomerDetailView.AllowPaging = false;\n    }\n    else\n    {\n        CustomerDetailView.AllowPaging = true;\n    }\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ModeChanging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ModeChanging Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          onmodechanging=&quot;CustomerDetailView_ModeChanging&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewModeChanging#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_ModeChanging(ByVal sender As Object, ByVal e As DetailsViewModeEventArgs)\n        &#39; Disable the paging feature in edit mode.\n        If e.NewMode = DetailsViewMode.Edit Then\n            CustomerDetailView.AllowPaging = False\n        Else\n            CustomerDetailView.AllowPaging = True\n        End If\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ModeChanging Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ModeChanging Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogeneraterows=&quot;true&quot;\n          autogenerateeditbutton=&quot;true&quot; \n          allowpaging=&quot;true&quot;\n          onmodechanging=&quot;CustomerDetailView_ModeChanging&quot; \n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n            InsertCommand=&quot;INSERT INTO [Customers]([CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country]) VALUES (@CustomerID, @CompanyName, @Address, @City, @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PageIndexChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageIndexChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.PageIndex*</span> property changes after a paging operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PageIndexChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the PageIndexChanged event when a pager button (a button with its <code>CommandName</code> property set to &quot;Page&quot;) within the control is clicked, but after the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control handles the paging operation. This allows you to provide an event handler that performs a custom routine whenever this event occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This event is not raised when you programmatically set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property.  </p>\n</div>\n<p> Pager buttons are usually located in the pager row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control. This event is often used to synchronize a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control with a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control or to set the behavior of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control after a paging operation.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the PageIndexChanged event to return the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> to read-only mode when the user navigates to another record.  </p>\n<pre><code class=\"lang-cs\" name=\"DetailsViewChangeMode#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomerDetailView_PageIndexChanged(Object sender, EventArgs e)\n  {\n    // By default, if the DetailsView control is in edit mode and\n    // user navigates to another page, the DetailsView control\n    // remains in edit mode. In this example, the ChangeMode \n    // method is used to put the DetailsView control in read-only  \n    // mode whenever the user navigates to another record.\n      CustomerDetailView.ChangeMode(DetailsViewMode.ReadOnly);\n  }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ChangeMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ChangeMode Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          OnPageIndexChanged=&quot;CustomerDetailView_PageIndexChanged&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DetailsViewChangeMode#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Sub CustomerDetailView_PageIndexChanged(ByVal sender As Object, _\n        ByVal e As EventArgs)\n        &#39; By default, if the DetailsView control is in edit mode and\n        &#39; user navigates to another page, the DetailsView control\n        &#39; remains in edit mode. In this example, the ChangeMode \n        &#39; method is used to put the DetailsView control in read-only  \n        &#39; mode whenever the user navigates to another record.\n        CustomerDetailView.ChangeMode(DetailsViewMode.ReadOnly)\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DetailsView ChangeMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;DetailsView ChangeMode Example&lt;/h3&gt;\n                \n        &lt;asp:detailsview id=&quot;CustomerDetailView&quot;\n          datasourceid=&quot;DetailsViewSource&quot;\n          datakeynames=&quot;CustomerID&quot;\n          autogenerateeditbutton=&quot;true&quot;  \n          autogeneraterows=&quot;true&quot;\n          allowpaging=&quot;true&quot;\n          OnPageIndexChanged=&quot;CustomerDetailView_PageIndexChanged&quot;\n          runat=&quot;server&quot;&gt;\n               \n          &lt;fieldheaderstyle backcolor=&quot;Navy&quot;\n            forecolor=&quot;White&quot;/&gt;\n                    \n        &lt;/asp:detailsview&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_PageIndexChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PageIndexChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.PageIndex*</span> property changes before a paging operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Web.UI.WebControls.DetailsViewPageEventHandler PageIndexChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control raises the PageIndexChanging event when a pager button (a button with its <code>CommandName</code> property set to &quot;Page&quot;) within the control is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control handles the paging operation. This allows you to provide an event handler that performs a custom routine, such as canceling the paging operation, whenever this event occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This event is not raised when you programmatically set the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_PageIndex_\" data-linktype=\"relative-path\">PageIndex</a> property.  </p>\n</div>\n<p> Pager buttons are usually located in the pager row of a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.  </p>\n<p> A <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewpageeventargs\" data-linktype=\"relative-path\">DetailsViewPageEventArgs</a> object is passed to the event handler, which allows you to determine the index of the page selected by the user and to indicate that the paging operation should be canceled. To determine the index of the page selected by the user, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewpageeventargs#System_Web_UI_WebControls_DetailsViewPageEventArgs_NewPageIndex_\" data-linktype=\"relative-path\">NewPageIndex</a> property. To cancel the paging operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsviewpageeventargs\" data-linktype=\"relative-path\">DetailsViewPageEventArgs</a> object to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  </p>\n<pre><code class=\"lang-vb\" name=\"DetailsViewCurrentMode#1\">\n&lt;%@ Page Language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n\n    Sub CustomerDetailView_ItemCommand(ByVal sender As Object, _\n      ByVal e As DetailsViewCommandEventArgs)\n        &#39; Clear the error message if the user cancels the edit \n        &#39; operation.\n        If e.CommandName = &quot;Cancel&quot; Then\n            ErrorMessageLabel.Text = &quot;&quot;\n        End If\n    End Sub\n\n    Protected Sub CustomerDetailView_PageIndexChanging( _\n    ByVal sender As Object, ByVal e As DetailsViewPageEventArgs)\n        &#39; Cancel the paging operation if the user tries to navigate \n        &#39; to another record while in edit mode.\n        If CustomerDetailView.CurrentMode = DetailsViewMode.Edit Then\n            e.Cancel = True\n            &#39; Display an error message.\n            ErrorMessageLabel.Text = _\n                &quot;You cannot navigate to another record while in edit mode.&quot;\n        End If\n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView CurrentMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView CurrentMode Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n          DataSourceID=&quot;DetailsViewSource&quot; \n          AutoGenerateRows=&quot;true&quot;\n          AutoGenerateEditButton=&quot;true&quot; \n          DataKeyNames=&quot;CustomerID&quot; \n          GridLines=&quot;Both&quot; \n          AllowPaging=&quot;true&quot;\n          OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot; \n          runat=&quot;server&quot; \n          OnPageIndexChanging=&quot;CustomerDetailView_PageIndexChanging&quot;&gt;\n          \n          &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;br /&gt;\n        \n        &lt;asp:Label ID=&quot;ErrorMessageLabel&quot; \n          ForeColor=&quot;Red&quot; runat=&quot;server&quot; /&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DetailsViewCurrentMode#1\">\n&lt;%@ Page Language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n\n    void CustomerDetailView_ItemCommand(Object sender, \n      DetailsViewCommandEventArgs e)\n    {\n        // Clear the error message if the user cancels the edit \n        // operation.\n        if (e.CommandName == &quot;Cancel&quot;)\n        {\n            ErrorMessageLabel.Text = &quot;&quot;;\n        }\n    }\n\n    protected void CustomerDetailView_PageIndexChanging(\n      object sender, DetailsViewPageEventArgs e)\n    {\n        // Cancel the paging operation if the user tries to \n        // navigate to another record while in edit mode.\n        if (CustomerDetailView.CurrentMode == DetailsViewMode.Edit)\n        {\n            e.Cancel = true;\n            // Display an error message.\n            ErrorMessageLabel.Text = \n              &quot;You cannot navigate to another record while in edit mode.&quot;;\n        }\n\n    }\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;\n            DetailsView CurrentMode Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        &lt;h3&gt;\n            DetailsView CurrentMode Example&lt;/h3&gt;\n        &lt;asp:DetailsView ID=&quot;CustomerDetailView&quot; \n          DataSourceID=&quot;DetailsViewSource&quot; \n          AutoGenerateRows=&quot;true&quot;\n          AutoGenerateEditButton=&quot;true&quot; \n          DataKeyNames=&quot;CustomerID&quot; \n          GridLines=&quot;Both&quot; \n          AllowPaging=&quot;true&quot;\n          OnItemCommand=&quot;CustomerDetailView_ItemCommand&quot; \n          runat=&quot;server&quot; \n          OnPageIndexChanging=&quot;CustomerDetailView_PageIndexChanging&quot;&gt;\n          \n          &lt;HeaderStyle BackColor=&quot;Navy&quot; ForeColor=&quot;White&quot; /&gt;\n        &lt;/asp:DetailsView&gt;\n        \n        &lt;br /&gt;\n        \n        &lt;asp:Label ID=&quot;ErrorMessageLabel&quot; \n          ForeColor=&quot;Red&quot; runat=&quot;server&quot; /&gt;\n        \n        &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n        &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n        &lt;!-- expression to retrieve the connection string value   --&gt;\n        &lt;!-- from the web.config file.                            --&gt;\n        &lt;asp:SqlDataSource ID=&quot;DetailsViewSource&quot; runat=&quot;server&quot; \n          ConnectionString=\n            &quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n          InsertCommand=&quot;INSERT INTO [Customers]([CustomerID],\n            [CompanyName], [Address], [City], [PostalCode], [Country]) \n            VALUES (@CustomerID, @CompanyName, @Address, @City, \n            @PostalCode, @Country)&quot;\n          SelectCommand=&quot;Select [CustomerID], [CompanyName], \n            [Address], [City], [PostalCode], [Country] From \n            [Customers]&quot;&gt;\n        &lt;/asp:SqlDataSource&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_ICallbackEventHandler_GetCallbackResult\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_ICallbackEventHandler_GetCallbackResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICallbackEventHandler.GetCallbackResult()</div>        \r\n          </div>\r\n    \r\n            <p>See the method <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.GetCallbackResult*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string ICallbackEventHandler.GetCallbackResult ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The results of the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control implements the <a class=\"xref\" href=\"system.web.ui.icallbackeventhandler\" data-linktype=\"relative-path\">ICallbackEventHandler</a> interface and uses the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_RaisePostBackEvent_\" data-linktype=\"relative-path\">RaisePostBackEvent</a> to retrieve data and the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview#System_Web_UI_WebControls_DetailsView_GetCallbackResult_\" data-linktype=\"relative-path\">GetCallbackResult</a> method to return the retrieved data to the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_ICallbackEventHandler_RaiseCallbackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICallbackEventHandler.RaiseCallbackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the callback event using the specified arguments.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event arguments.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_IDataItemContainer_DataItemIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_IDataItemContainer_DataItemIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataItemContainer.DataItemIndex</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.DataItemIndex*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int System.Web.UI.IDataItemContainer.DataItemIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns the <span class=\"xref\">stem.Web.UI.WebControls.DetailsView.DataItemIndex*</span> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to the <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_IDataItemContainer_DisplayIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_IDataItemContainer_DisplayIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataItemContainer.DisplayIndex</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IDataItemContainer.DisplayIndex*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int System.Web.UI.IDataItemContainer.DisplayIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns <code>0</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to the <a class=\"xref\" href=\"system.web.ui.idataitemcontainer\" data-linktype=\"relative-path\">IDataItemContainer</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_IPostBackEventHandler_RaisePostBackEvent_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_IPostBackEventHandler_RaisePostBackEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPostBackEventHandler.RaisePostBackEvent(String)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.IPostBackEventHandler.RaisePostBackEvent*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents an optional event argument to pass to the event handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to the <a class=\"xref\" href=\"system.web.ui.ipostbackeventhandler\" data-linktype=\"relative-path\">IPostBackEventHandler</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_ICallbackContainer_GetCallbackScript_System_Web_UI_WebControls_IButtonControl_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_ICallbackContainer_GetCallbackScript_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICallbackContainer.GetCallbackScript(IButtonControl,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates the callback script for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buttonControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The button control that posted the page back to the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>argument</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The argument for the callback event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The callback script for the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a helper method that is called by the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control to generate its callback script. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control does not render client script, or if the <code>argument</code> parameter is <code>null</code> or an empty string (&quot;&quot;), this method returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataKeyNames\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataKeyNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataKeyNames</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataKeyNames*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array that contains the names of the primary-key fields of the items that are displayed in a data-bound control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataMember\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataMember</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataMember*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the list of data that the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control binds to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSource\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataSource</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataSource*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An object that represents the data source from which the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control retrieves its data. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSourceID\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSourceID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataSourceID</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataSourceID*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The ID of the data source control that contains the list of data items that the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control retrieves.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSourceObject\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundControl_DataSourceObject_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundControl.DataSourceObject</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundControl.DataSourceObject*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.idatasource\" data-linktype=\"relative-path\">IDataSource</a></div>\r\n                  </div>\r\n                  <p>An object that contains the list of data items that the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control retrieves.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundItemControl_DataKey\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundItemControl_DataKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundItemControl.DataKey</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundItemControl.DataKey*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datakey\" data-linktype=\"relative-path\">DataKey</a></div>\r\n                  </div>\r\n                  <p>An object that represents the data-key value of the row in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundItemControl_Mode\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IDataBoundItemControl_Mode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IDataBoundItemControl.Mode</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IDataBoundItemControl.Mode*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.databoundcontrolmode\" data-linktype=\"relative-path\">DataBoundControlMode</a></div>\r\n                  </div>\r\n                  <p>The current mode of the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.idataboundcontrol\" data-linktype=\"relative-path\">IDataBoundControl</a>interface.  </p>\n<p> The <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> can be set to <code>ReadOnly</code>, <code>Edit</code> or <code>Delete</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IFieldControl_FieldsGenerator\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IFieldControl_FieldsGenerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IFieldControl.FieldsGenerator</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this property, see <span class=\"xref\">stem.Web.UI.WebControls.IFieldControl.FieldsGenerator*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.iautofieldgenerator\" data-linktype=\"relative-path\">IAutoFieldGenerator</a></div>\r\n                  </div>\r\n                  <p>The control that automatically generates the columns for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to an <a class=\"xref\" href=\"system.web.ui.webcontrols.ifieldcontrol\" data-linktype=\"relative-path\">IFieldControl</a> interface.  </p>\n<p> This property is used to automatically generate the columns for a <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control that uses ASP.NET Dynamic Data features.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IPostBackContainer_GetPostBackOptions_System_Web_UI_WebControls_IButtonControl_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DetailsView_System_Web_UI_WebControls_IPostBackContainer_GetPostBackOptions_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPostBackContainer.GetPostBackOptions(IButtonControl)</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buttonControl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The control generating the client-side postback event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.postbackoptions\" data-linktype=\"relative-path\">PostBackOptions</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.postbackoptions\" data-linktype=\"relative-path\">PostBackOptions</a> with the information required for <span class=\"xref\">stem.Web.UI.Page.GetPostBackEventReference*</span> to construct a valid script that, when executed on the client, initiates a client postback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buttonControl</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>buttonControl</code> causes validation in the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control and attempts to use the same <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> control as a postback target.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.web.ui.webcontrols.detailsview\" data-linktype=\"relative-path\">DetailsView</a> instance is cast to the <a class=\"xref\" href=\"system.web.ui.ipostbackeventhandler\" data-linktype=\"relative-path\">IPostBackEventHandler</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DetailsView.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DetailsView.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.AllowPaging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.AlternatingRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.AutoGenerateRows\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.BackImageUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.BottomPagerRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.Caption\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CaptionAlign\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CellPadding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CellSpacing\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ChangeMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CommandRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateChildControls\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateControlStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateFieldSet\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CreateTable\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.CurrentMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DataBind\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DataItem\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DataItemCount\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DataItemIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DataKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DataKeyNames\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DefaultMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DeleteItem\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.DeleteMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EditRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EmptyDataTemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EmptyDataText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EnableModelValidation\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.EnsureDataBound\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ExtractRowValues\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.FieldHeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.Fields\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.FooterRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.FooterStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.FooterTemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.FooterText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.GetCallbackResult\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.GetCallbackScript\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.GridLines\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.HeaderRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.HeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.HeaderTemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.HeaderText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.HorizontalAlign\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.InitializePager\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.InitializeRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.InsertItem\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.InsertMethod\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.InsertRowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IsBindableType\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemInserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemInserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemInserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemInserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemInserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemInserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ItemUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ItemUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ItemUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.LoadControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ModeChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_ModeChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_ModeChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnBubbleEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnInit\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemCommand\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemCreated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemDeleted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemDeleting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemInserted\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemInserting\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemUpdated\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnItemUpdating\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnModeChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnPageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnPageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnPagePreLoad\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.OnPreRender\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PageCount\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PageIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_PageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_PageIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.add_PageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.remove_PageIndexChanging\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PagerSettings\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PagerStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PagerTemplate\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PerformDataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.RaisePostBackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.Render\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.Rows\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.RowsGenerator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.RowStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.SaveControlState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.SelectedValue\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.SetPageIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ICallbackEventHandler.GetCallbackResult\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ICallbackEventHandler.RaiseCallbackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataItemContainer.DataItemIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataItemContainer.DisplayIndex\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IPostBackEventHandler.RaisePostBackEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.ICallbackContainer.GetCallbackScript\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataKeyNames\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataMember\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataSourceID\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataSourceObject\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundItemControl.DataKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IDataBoundItemControl.Mode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IFieldControl.FieldsGenerator\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.IPostBackContainer.GetPostBackOptions\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.TagKey\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.TopPagerRow\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.TrackViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.UpdateItem\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DetailsView.UpdateMethod\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"17e96a38-4eeb-b79f-fa66-3bf47af22bee\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Displays the values of a single record from a data source in a table, where each data row represents a field of the record. The DetailsView control allows you to edit, delete, and insert records.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DetailsView\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DetailsView.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DetailsView.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.DetailsView","System.Web.UI.WebControls.DetailsView..ctor","System.Web.UI.WebControls.DetailsView.AllowPaging","System.Web.UI.WebControls.DetailsView.AlternatingRowStyle","System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton","System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton","System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton","System.Web.UI.WebControls.DetailsView.AutoGenerateRows","System.Web.UI.WebControls.DetailsView.BackImageUrl","System.Web.UI.WebControls.DetailsView.BottomPagerRow","System.Web.UI.WebControls.DetailsView.Caption","System.Web.UI.WebControls.DetailsView.CaptionAlign","System.Web.UI.WebControls.DetailsView.CellPadding","System.Web.UI.WebControls.DetailsView.CellSpacing","System.Web.UI.WebControls.DetailsView.ChangeMode","System.Web.UI.WebControls.DetailsView.CommandRowStyle","System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow","System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows","System.Web.UI.WebControls.DetailsView.CreateChildControls","System.Web.UI.WebControls.DetailsView.CreateControlStyle","System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments","System.Web.UI.WebControls.DetailsView.CreateFieldSet","System.Web.UI.WebControls.DetailsView.CreateRow","System.Web.UI.WebControls.DetailsView.CreateTable","System.Web.UI.WebControls.DetailsView.CurrentMode","System.Web.UI.WebControls.DetailsView.DataBind","System.Web.UI.WebControls.DetailsView.DataItem","System.Web.UI.WebControls.DetailsView.DataItemCount","System.Web.UI.WebControls.DetailsView.DataItemIndex","System.Web.UI.WebControls.DetailsView.DataKey","System.Web.UI.WebControls.DetailsView.DataKeyNames","System.Web.UI.WebControls.DetailsView.DefaultMode","System.Web.UI.WebControls.DetailsView.DeleteItem","System.Web.UI.WebControls.DetailsView.DeleteMethod","System.Web.UI.WebControls.DetailsView.EditRowStyle","System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle","System.Web.UI.WebControls.DetailsView.EmptyDataTemplate","System.Web.UI.WebControls.DetailsView.EmptyDataText","System.Web.UI.WebControls.DetailsView.EnableModelValidation","System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks","System.Web.UI.WebControls.DetailsView.EnsureDataBound","System.Web.UI.WebControls.DetailsView.ExtractRowValues","System.Web.UI.WebControls.DetailsView.FieldHeaderStyle","System.Web.UI.WebControls.DetailsView.Fields","System.Web.UI.WebControls.DetailsView.FooterRow","System.Web.UI.WebControls.DetailsView.FooterStyle","System.Web.UI.WebControls.DetailsView.FooterTemplate","System.Web.UI.WebControls.DetailsView.FooterText","System.Web.UI.WebControls.DetailsView.GetCallbackResult","System.Web.UI.WebControls.DetailsView.GetCallbackScript","System.Web.UI.WebControls.DetailsView.GridLines","System.Web.UI.WebControls.DetailsView.HeaderRow","System.Web.UI.WebControls.DetailsView.HeaderStyle","System.Web.UI.WebControls.DetailsView.HeaderTemplate","System.Web.UI.WebControls.DetailsView.HeaderText","System.Web.UI.WebControls.DetailsView.HorizontalAlign","System.Web.UI.WebControls.DetailsView.InitializePager","System.Web.UI.WebControls.DetailsView.InitializeRow","System.Web.UI.WebControls.DetailsView.InsertItem","System.Web.UI.WebControls.DetailsView.InsertMethod","System.Web.UI.WebControls.DetailsView.InsertRowStyle","System.Web.UI.WebControls.DetailsView.IsBindableType","System.Web.UI.WebControls.DetailsView.ItemCommand","System.Web.UI.WebControls.DetailsView.add_ItemCommand","System.Web.UI.WebControls.DetailsView.remove_ItemCommand","System.Web.UI.WebControls.DetailsView.ItemCreated","System.Web.UI.WebControls.DetailsView.add_ItemCreated","System.Web.UI.WebControls.DetailsView.remove_ItemCreated","System.Web.UI.WebControls.DetailsView.ItemDeleted","System.Web.UI.WebControls.DetailsView.add_ItemDeleted","System.Web.UI.WebControls.DetailsView.remove_ItemDeleted","System.Web.UI.WebControls.DetailsView.ItemDeleting","System.Web.UI.WebControls.DetailsView.add_ItemDeleting","System.Web.UI.WebControls.DetailsView.remove_ItemDeleting","System.Web.UI.WebControls.DetailsView.ItemInserted","System.Web.UI.WebControls.DetailsView.add_ItemInserted","System.Web.UI.WebControls.DetailsView.remove_ItemInserted","System.Web.UI.WebControls.DetailsView.ItemInserting","System.Web.UI.WebControls.DetailsView.add_ItemInserting","System.Web.UI.WebControls.DetailsView.remove_ItemInserting","System.Web.UI.WebControls.DetailsView.ItemUpdated","System.Web.UI.WebControls.DetailsView.add_ItemUpdated","System.Web.UI.WebControls.DetailsView.remove_ItemUpdated","System.Web.UI.WebControls.DetailsView.ItemUpdating","System.Web.UI.WebControls.DetailsView.add_ItemUpdating","System.Web.UI.WebControls.DetailsView.remove_ItemUpdating","System.Web.UI.WebControls.DetailsView.LoadControlState","System.Web.UI.WebControls.DetailsView.LoadViewState","System.Web.UI.WebControls.DetailsView.ModeChanged","System.Web.UI.WebControls.DetailsView.add_ModeChanged","System.Web.UI.WebControls.DetailsView.remove_ModeChanged","System.Web.UI.WebControls.DetailsView.ModeChanging","System.Web.UI.WebControls.DetailsView.add_ModeChanging","System.Web.UI.WebControls.DetailsView.remove_ModeChanging","System.Web.UI.WebControls.DetailsView.OnBubbleEvent","System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged","System.Web.UI.WebControls.DetailsView.OnInit","System.Web.UI.WebControls.DetailsView.OnItemCommand","System.Web.UI.WebControls.DetailsView.OnItemCreated","System.Web.UI.WebControls.DetailsView.OnItemDeleted","System.Web.UI.WebControls.DetailsView.OnItemDeleting","System.Web.UI.WebControls.DetailsView.OnItemInserted","System.Web.UI.WebControls.DetailsView.OnItemInserting","System.Web.UI.WebControls.DetailsView.OnItemUpdated","System.Web.UI.WebControls.DetailsView.OnItemUpdating","System.Web.UI.WebControls.DetailsView.OnModeChanged","System.Web.UI.WebControls.DetailsView.OnModeChanging","System.Web.UI.WebControls.DetailsView.OnPageIndexChanged","System.Web.UI.WebControls.DetailsView.OnPageIndexChanging","System.Web.UI.WebControls.DetailsView.OnPagePreLoad","System.Web.UI.WebControls.DetailsView.OnPreRender","System.Web.UI.WebControls.DetailsView.PageCount","System.Web.UI.WebControls.DetailsView.PageIndex","System.Web.UI.WebControls.DetailsView.PageIndexChanged","System.Web.UI.WebControls.DetailsView.add_PageIndexChanged","System.Web.UI.WebControls.DetailsView.remove_PageIndexChanged","System.Web.UI.WebControls.DetailsView.PageIndexChanging","System.Web.UI.WebControls.DetailsView.add_PageIndexChanging","System.Web.UI.WebControls.DetailsView.remove_PageIndexChanging","System.Web.UI.WebControls.DetailsView.PagerSettings","System.Web.UI.WebControls.DetailsView.PagerStyle","System.Web.UI.WebControls.DetailsView.PagerTemplate","System.Web.UI.WebControls.DetailsView.PerformDataBinding","System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy","System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent","System.Web.UI.WebControls.DetailsView.RaisePostBackEvent","System.Web.UI.WebControls.DetailsView.Render","System.Web.UI.WebControls.DetailsView.Rows","System.Web.UI.WebControls.DetailsView.RowsGenerator","System.Web.UI.WebControls.DetailsView.RowStyle","System.Web.UI.WebControls.DetailsView.SaveControlState","System.Web.UI.WebControls.DetailsView.SaveViewState","System.Web.UI.WebControls.DetailsView.SelectedValue","System.Web.UI.WebControls.DetailsView.SetPageIndex","System.Web.UI.WebControls.DetailsView.ICallbackEventHandler.GetCallbackResult","System.Web.UI.WebControls.DetailsView.ICallbackEventHandler.RaiseCallbackEvent","System.Web.UI.WebControls.DetailsView.IDataItemContainer.DataItemIndex","System.Web.UI.WebControls.DetailsView.IDataItemContainer.DisplayIndex","System.Web.UI.WebControls.DetailsView.IPostBackEventHandler.RaisePostBackEvent","System.Web.UI.WebControls.DetailsView.ICallbackContainer.GetCallbackScript","System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataKeyNames","System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataMember","System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataSource","System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataSourceID","System.Web.UI.WebControls.DetailsView.IDataBoundControl.DataSourceObject","System.Web.UI.WebControls.DetailsView.IDataBoundItemControl.DataKey","System.Web.UI.WebControls.DetailsView.IDataBoundItemControl.Mode","System.Web.UI.WebControls.DetailsView.IFieldControl.FieldsGenerator","System.Web.UI.WebControls.DetailsView.IPostBackContainer.GetPostBackOptions","System.Web.UI.WebControls.DetailsView.TagKey","System.Web.UI.WebControls.DetailsView.TopPagerRow","System.Web.UI.WebControls.DetailsView.TrackViewState","System.Web.UI.WebControls.DetailsView.UpdateItem","System.Web.UI.WebControls.DetailsView.UpdateMethod"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DetailsView","System::Web::UI::WebControls::DetailsView","System.Web.UI.WebControls.DetailsView.#ctor","System::Web::UI::WebControls::DetailsView::#ctor","System.Web.UI.WebControls.DetailsView.AllowPaging","System::Web::UI::WebControls::DetailsView::AllowPaging","System.Web.UI.WebControls.DetailsView.AlternatingRowStyle","System::Web::UI::WebControls::DetailsView::AlternatingRowStyle","System.Web.UI.WebControls.DetailsView.AutoGenerateDeleteButton","System::Web::UI::WebControls::DetailsView::AutoGenerateDeleteButton","System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton","System::Web::UI::WebControls::DetailsView::AutoGenerateEditButton","System.Web.UI.WebControls.DetailsView.AutoGenerateInsertButton","System::Web::UI::WebControls::DetailsView::AutoGenerateInsertButton","System.Web.UI.WebControls.DetailsView.AutoGenerateRows","System::Web::UI::WebControls::DetailsView::AutoGenerateRows","System.Web.UI.WebControls.DetailsView.BackImageUrl","System::Web::UI::WebControls::DetailsView::BackImageUrl","System.Web.UI.WebControls.DetailsView.BottomPagerRow","System::Web::UI::WebControls::DetailsView::BottomPagerRow","System.Web.UI.WebControls.DetailsView.Caption","System::Web::UI::WebControls::DetailsView::Caption","System.Web.UI.WebControls.DetailsView.CaptionAlign","System::Web::UI::WebControls::DetailsView::CaptionAlign","System.Web.UI.WebControls.DetailsView.CellPadding","System::Web::UI::WebControls::DetailsView::CellPadding","System.Web.UI.WebControls.DetailsView.CellSpacing","System::Web::UI::WebControls::DetailsView::CellSpacing","System.Web.UI.WebControls.DetailsView.ChangeMode","System::Web::UI::WebControls::DetailsView::ChangeMode","System.Web.UI.WebControls.DetailsView.CommandRowStyle","System::Web::UI::WebControls::DetailsView::CommandRowStyle","System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRow","System::Web::UI::WebControls::DetailsView::CreateAutoGeneratedRow","System.Web.UI.WebControls.DetailsView.CreateAutoGeneratedRows","System::Web::UI::WebControls::DetailsView::CreateAutoGeneratedRows","System.Web.UI.WebControls.DetailsView.CreateChildControls","System::Web::UI::WebControls::DetailsView::CreateChildControls","System.Web.UI.WebControls.DetailsView.CreateControlStyle","System::Web::UI::WebControls::DetailsView::CreateControlStyle","System.Web.UI.WebControls.DetailsView.CreateDataSourceSelectArguments","System::Web::UI::WebControls::DetailsView::CreateDataSourceSelectArguments","System.Web.UI.WebControls.DetailsView.CreateFieldSet","System::Web::UI::WebControls::DetailsView::CreateFieldSet","System.Web.UI.WebControls.DetailsView.CreateRow","System::Web::UI::WebControls::DetailsView::CreateRow","System.Web.UI.WebControls.DetailsView.CreateTable","System::Web::UI::WebControls::DetailsView::CreateTable","System.Web.UI.WebControls.DetailsView.CurrentMode","System::Web::UI::WebControls::DetailsView::CurrentMode","System.Web.UI.WebControls.DetailsView.DataBind","System::Web::UI::WebControls::DetailsView::DataBind","System.Web.UI.WebControls.DetailsView.DataItem","System::Web::UI::WebControls::DetailsView::DataItem","System.Web.UI.WebControls.DetailsView.DataItemCount","System::Web::UI::WebControls::DetailsView::DataItemCount","System.Web.UI.WebControls.DetailsView.DataItemIndex","System::Web::UI::WebControls::DetailsView::DataItemIndex","System.Web.UI.WebControls.DetailsView.DataKey","System::Web::UI::WebControls::DetailsView::DataKey","System.Web.UI.WebControls.DetailsView.DataKeyNames","System::Web::UI::WebControls::DetailsView::DataKeyNames","System.Web.UI.WebControls.DetailsView.DefaultMode","System::Web::UI::WebControls::DetailsView::DefaultMode","System.Web.UI.WebControls.DetailsView.DeleteItem","System::Web::UI::WebControls::DetailsView::DeleteItem","System.Web.UI.WebControls.DetailsView.DeleteMethod","System::Web::UI::WebControls::DetailsView::DeleteMethod","System.Web.UI.WebControls.DetailsView.EditRowStyle","System::Web::UI::WebControls::DetailsView::EditRowStyle","System.Web.UI.WebControls.DetailsView.EmptyDataRowStyle","System::Web::UI::WebControls::DetailsView::EmptyDataRowStyle","System.Web.UI.WebControls.DetailsView.EmptyDataTemplate","System::Web::UI::WebControls::DetailsView::EmptyDataTemplate","System.Web.UI.WebControls.DetailsView.EmptyDataText","System::Web::UI::WebControls::DetailsView::EmptyDataText","System.Web.UI.WebControls.DetailsView.EnableModelValidation","System::Web::UI::WebControls::DetailsView::EnableModelValidation","System.Web.UI.WebControls.DetailsView.EnablePagingCallbacks","System::Web::UI::WebControls::DetailsView::EnablePagingCallbacks","System.Web.UI.WebControls.DetailsView.EnsureDataBound","System::Web::UI::WebControls::DetailsView::EnsureDataBound","System.Web.UI.WebControls.DetailsView.ExtractRowValues","System::Web::UI::WebControls::DetailsView::ExtractRowValues","System.Web.UI.WebControls.DetailsView.FieldHeaderStyle","System::Web::UI::WebControls::DetailsView::FieldHeaderStyle","System.Web.UI.WebControls.DetailsView.Fields","System::Web::UI::WebControls::DetailsView::Fields","System.Web.UI.WebControls.DetailsView.FooterRow","System::Web::UI::WebControls::DetailsView::FooterRow","System.Web.UI.WebControls.DetailsView.FooterStyle","System::Web::UI::WebControls::DetailsView::FooterStyle","System.Web.UI.WebControls.DetailsView.FooterTemplate","System::Web::UI::WebControls::DetailsView::FooterTemplate","System.Web.UI.WebControls.DetailsView.FooterText","System::Web::UI::WebControls::DetailsView::FooterText","System.Web.UI.WebControls.DetailsView.GetCallbackResult","System::Web::UI::WebControls::DetailsView::GetCallbackResult","System.Web.UI.WebControls.DetailsView.GetCallbackScript","System::Web::UI::WebControls::DetailsView::GetCallbackScript","System.Web.UI.WebControls.DetailsView.GridLines","System::Web::UI::WebControls::DetailsView::GridLines","System.Web.UI.WebControls.DetailsView.HeaderRow","System::Web::UI::WebControls::DetailsView::HeaderRow","System.Web.UI.WebControls.DetailsView.HeaderStyle","System::Web::UI::WebControls::DetailsView::HeaderStyle","System.Web.UI.WebControls.DetailsView.HeaderTemplate","System::Web::UI::WebControls::DetailsView::HeaderTemplate","System.Web.UI.WebControls.DetailsView.HeaderText","System::Web::UI::WebControls::DetailsView::HeaderText","System.Web.UI.WebControls.DetailsView.HorizontalAlign","System::Web::UI::WebControls::DetailsView::HorizontalAlign","System.Web.UI.WebControls.DetailsView.InitializePager","System::Web::UI::WebControls::DetailsView::InitializePager","System.Web.UI.WebControls.DetailsView.InitializeRow","System::Web::UI::WebControls::DetailsView::InitializeRow","System.Web.UI.WebControls.DetailsView.InsertItem","System::Web::UI::WebControls::DetailsView::InsertItem","System.Web.UI.WebControls.DetailsView.InsertMethod","System::Web::UI::WebControls::DetailsView::InsertMethod","System.Web.UI.WebControls.DetailsView.InsertRowStyle","System::Web::UI::WebControls::DetailsView::InsertRowStyle","System.Web.UI.WebControls.DetailsView.IsBindableType","System::Web::UI::WebControls::DetailsView::IsBindableType","System.Web.UI.WebControls.DetailsView.ItemCommand","System::Web::UI::WebControls::DetailsView::ItemCommand","System.Web.UI.WebControls.DetailsView.ItemCreated","System::Web::UI::WebControls::DetailsView::ItemCreated","System.Web.UI.WebControls.DetailsView.ItemDeleted","System::Web::UI::WebControls::DetailsView::ItemDeleted","System.Web.UI.WebControls.DetailsView.ItemDeleting","System::Web::UI::WebControls::DetailsView::ItemDeleting","System.Web.UI.WebControls.DetailsView.ItemInserted","System::Web::UI::WebControls::DetailsView::ItemInserted","System.Web.UI.WebControls.DetailsView.ItemInserting","System::Web::UI::WebControls::DetailsView::ItemInserting","System.Web.UI.WebControls.DetailsView.ItemUpdated","System::Web::UI::WebControls::DetailsView::ItemUpdated","System.Web.UI.WebControls.DetailsView.ItemUpdating","System::Web::UI::WebControls::DetailsView::ItemUpdating","System.Web.UI.WebControls.DetailsView.LoadControlState","System::Web::UI::WebControls::DetailsView::LoadControlState","System.Web.UI.WebControls.DetailsView.LoadViewState","System::Web::UI::WebControls::DetailsView::LoadViewState","System.Web.UI.WebControls.DetailsView.ModeChanged","System::Web::UI::WebControls::DetailsView::ModeChanged","System.Web.UI.WebControls.DetailsView.ModeChanging","System::Web::UI::WebControls::DetailsView::ModeChanging","System.Web.UI.WebControls.DetailsView.OnBubbleEvent","System::Web::UI::WebControls::DetailsView::OnBubbleEvent","System.Web.UI.WebControls.DetailsView.OnDataSourceViewChanged","System::Web::UI::WebControls::DetailsView::OnDataSourceViewChanged","System.Web.UI.WebControls.DetailsView.OnInit","System::Web::UI::WebControls::DetailsView::OnInit","System.Web.UI.WebControls.DetailsView.OnItemCommand","System::Web::UI::WebControls::DetailsView::OnItemCommand","System.Web.UI.WebControls.DetailsView.OnItemCreated","System::Web::UI::WebControls::DetailsView::OnItemCreated","System.Web.UI.WebControls.DetailsView.OnItemDeleted","System::Web::UI::WebControls::DetailsView::OnItemDeleted","System.Web.UI.WebControls.DetailsView.OnItemDeleting","System::Web::UI::WebControls::DetailsView::OnItemDeleting","System.Web.UI.WebControls.DetailsView.OnItemInserted","System::Web::UI::WebControls::DetailsView::OnItemInserted","System.Web.UI.WebControls.DetailsView.OnItemInserting","System::Web::UI::WebControls::DetailsView::OnItemInserting","System.Web.UI.WebControls.DetailsView.OnItemUpdated","System::Web::UI::WebControls::DetailsView::OnItemUpdated","System.Web.UI.WebControls.DetailsView.OnItemUpdating","System::Web::UI::WebControls::DetailsView::OnItemUpdating","System.Web.UI.WebControls.DetailsView.OnModeChanged","System::Web::UI::WebControls::DetailsView::OnModeChanged","System.Web.UI.WebControls.DetailsView.OnModeChanging","System::Web::UI::WebControls::DetailsView::OnModeChanging","System.Web.UI.WebControls.DetailsView.OnPageIndexChanged","System::Web::UI::WebControls::DetailsView::OnPageIndexChanged","System.Web.UI.WebControls.DetailsView.OnPageIndexChanging","System::Web::UI::WebControls::DetailsView::OnPageIndexChanging","System.Web.UI.WebControls.DetailsView.OnPagePreLoad","System::Web::UI::WebControls::DetailsView::OnPagePreLoad","System.Web.UI.WebControls.DetailsView.OnPreRender","System::Web::UI::WebControls::DetailsView::OnPreRender","System.Web.UI.WebControls.DetailsView.PageCount","System::Web::UI::WebControls::DetailsView::PageCount","System.Web.UI.WebControls.DetailsView.PageIndex","System::Web::UI::WebControls::DetailsView::PageIndex","System.Web.UI.WebControls.DetailsView.PageIndexChanged","System::Web::UI::WebControls::DetailsView::PageIndexChanged","System.Web.UI.WebControls.DetailsView.PageIndexChanging","System::Web::UI::WebControls::DetailsView::PageIndexChanging","System.Web.UI.WebControls.DetailsView.PagerSettings","System::Web::UI::WebControls::DetailsView::PagerSettings","System.Web.UI.WebControls.DetailsView.PagerStyle","System::Web::UI::WebControls::DetailsView::PagerStyle","System.Web.UI.WebControls.DetailsView.PagerTemplate","System::Web::UI::WebControls::DetailsView::PagerTemplate","System.Web.UI.WebControls.DetailsView.PerformDataBinding","System::Web::UI::WebControls::DetailsView::PerformDataBinding","System.Web.UI.WebControls.DetailsView.PrepareControlHierarchy","System::Web::UI::WebControls::DetailsView::PrepareControlHierarchy","System.Web.UI.WebControls.DetailsView.RaiseCallbackEvent","System::Web::UI::WebControls::DetailsView::RaiseCallbackEvent","System.Web.UI.WebControls.DetailsView.RaisePostBackEvent","System::Web::UI::WebControls::DetailsView::RaisePostBackEvent","System.Web.UI.WebControls.DetailsView.Render","System::Web::UI::WebControls::DetailsView::Render","System.Web.UI.WebControls.DetailsView.Rows","System::Web::UI::WebControls::DetailsView::Rows","System.Web.UI.WebControls.DetailsView.RowsGenerator","System::Web::UI::WebControls::DetailsView::RowsGenerator","System.Web.UI.WebControls.DetailsView.RowStyle","System::Web::UI::WebControls::DetailsView::RowStyle","System.Web.UI.WebControls.DetailsView.SaveControlState","System::Web::UI::WebControls::DetailsView::SaveControlState","System.Web.UI.WebControls.DetailsView.SaveViewState","System::Web::UI::WebControls::DetailsView::SaveViewState","System.Web.UI.WebControls.DetailsView.SelectedValue","System::Web::UI::WebControls::DetailsView::SelectedValue","System.Web.UI.WebControls.DetailsView.SetPageIndex","System::Web::UI::WebControls::DetailsView::SetPageIndex","System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#GetCallbackResult","System::Web::UI::WebControls::DetailsView::System#Web#UI#ICallbackEventHandler#GetCallbackResult","System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent","System::Web::UI::WebControls::DetailsView::System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent","System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DataItemIndex","System::Web::UI::WebControls::DetailsView::System#Web#UI#IDataItemContainer#DataItemIndex","System.Web.UI.WebControls.DetailsView.System#Web#UI#IDataItemContainer#DisplayIndex","System::Web::UI::WebControls::DetailsView::System#Web#UI#IDataItemContainer#DisplayIndex","System.Web.UI.WebControls.DetailsView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent","System::Web::UI::WebControls::DetailsView::System#Web#UI#IPostBackEventHandler#RaisePostBackEvent","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundControl#DataKeyNames","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataMember","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundControl#DataMember","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSource","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundControl#DataSource","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundControl#DataSourceID","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundControl#DataSourceObject","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundItemControl#DataKey","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IDataBoundItemControl#Mode","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IDataBoundItemControl#Mode","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IFieldControl#FieldsGenerator","System.Web.UI.WebControls.DetailsView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions","System::Web::UI::WebControls::DetailsView::System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions","System.Web.UI.WebControls.DetailsView.TagKey","System::Web::UI::WebControls::DetailsView::TagKey","System.Web.UI.WebControls.DetailsView.TopPagerRow","System::Web::UI::WebControls::DetailsView::TopPagerRow","System.Web.UI.WebControls.DetailsView.TrackViewState","System::Web::UI::WebControls::DetailsView::TrackViewState","System.Web.UI.WebControls.DetailsView.UpdateItem","System::Web::UI::WebControls::DetailsView::UpdateItem","System.Web.UI.WebControls.DetailsView.UpdateMethod","System::Web::UI::WebControls::DetailsView::UpdateMethod"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"17e96a38-4eeb-b79f-fa66-3bf47af22bee","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/DetailsView.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DetailsView class | Microsoft Docs","_op_ogTitle":"DetailsView class","description":"Displays the values of a single record from a data source in a table, where each data row represents a field of the record. The DetailsView control allows you to edit, delete, and insert records.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DetailsView","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.detailsview","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.detailsview","fileRelativePath":"System.Web.UI.WebControls.DetailsView.html"},"themesRelativePathToOutputRoot":"_themes/"}