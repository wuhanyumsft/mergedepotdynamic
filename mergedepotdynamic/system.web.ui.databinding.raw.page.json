{"content":"    \r\n    <h1 id=\"System_Web_UI_DataBinding\">\r\n      <span class=\"lang-csharp\">DataBinding</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-binding expressions at design time. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class DataBinding</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataBinding</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Each data-binding expression in a server control is represented at design time by an instance of the DataBinding class. Any server control that contains one or more data-binding expressions has a <a class=\"xref\" href=\"system.web.ui.databindingcollection\" data-linktype=\"relative-path\">DataBindingCollection</a> object that contains the DataBinding objects. This collection is accessible through the <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a> class implementing the <a class=\"xref\" href=\"system.web.ui.idatabindingsaccessor\" data-linktype=\"relative-path\">IDataBindingsAccessor</a> interface. When you create a custom RAD designer, use that implementation to access the collection. Any DataBinding or <a class=\"xref\" href=\"system.web.ui.databindingcollection\" data-linktype=\"relative-path\">DataBindingCollection</a> objects associated with a server control exist only at design time. They do not exist at run time and, therefore, are not accessible during run time.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_DataBinding__ctor_System_String_System_Type_System_String_\" data-linktype=\"self-bookmark\">DataBinding(String,Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_DataBinding_Expression\" data-linktype=\"self-bookmark\">Expression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data-binding expression to be evaluated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_DataBinding_PropertyName\" data-linktype=\"self-bookmark\">PropertyName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the ASP.NET server control property to bind data to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_DataBinding_PropertyType\" data-linktype=\"self-bookmark\">PropertyType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the .NET Framework type of the data-bound ASP.NET server control property.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_DataBinding_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified object is the same instance of the <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> class as the current object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_DataBinding_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the hash code for an instance of the <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_DataBinding__ctor_System_String_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Web_UI_DataBinding__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBinding(String,Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataBinding (string propertyName, Type propertyType, string expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The property to bind data to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The .NET Framework type of the property to bind data to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The data-binding expression to be evaluated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object and sets it equal to an existing object in the control&#39;s <a class=\"xref\" href=\"system.web.ui.databindingcollection\" data-linktype=\"relative-path\">DataBindingCollection</a> collection that has a <code>propertyName</code> parameter with a value of <code>Text</code>. If the collection contains a <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object with a <code>propertyName</code> value of <code>Text</code>, this code returns the value of the object&#39;s <a class=\"xref\" href=\"system.web.ui.databinding#System_Web_UI_DataBinding_Expression_\" data-linktype=\"relative-path\">Expression</a> property. If there is no such object, it returns an empty string (&quot;&quot;).  </p>\n<pre><code class=\"lang-cs\" name=\"DataBinding_Sample1#3\">        // Create a Text property with accessors that obtain \n        // the property value from and set the property value\n        // to the Text key in the DataBindingCollection class.\n        public string Text\n        {\n            get\n            {\n                DataBinding myBinding = DataBindings[&quot;Text&quot;];\n                if (myBinding != null)\n                {\n                    return myBinding.Expression;\n                }\n                return String.Empty;\n            }\n            set\n            {\n\n                if ((value == null) || (value.Length == 0))\n                {\n                    DataBindings.Remove(&quot;Text&quot;);\n                }\n                else\n                {\n\n                    DataBinding binding = DataBindings[&quot;Text&quot;];\n\n                    if (binding == null)\n                    {\n                        binding = new DataBinding(&quot;Text&quot;, typeof(string), value);\n                    }\n                    else\n                    {\n                        binding.Expression = value;\n                    }\n                    // Call the DataBinding constructor, then add\n                    // the initialized DataBinding object to the \n                    // DataBindingCollection for this custom designer.\n                    DataBinding binding1 = (DataBinding)DataBindings.SyncRoot;\n                    DataBindings.Add(binding);\n                    DataBindings.Add(binding1);\n                }\n                PropertyChanged(&quot;Text&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataBinding_Sample1#3\">        &#39; Create a Text property with accessors that obtain \n        &#39; the property value from and set the property value\n        &#39; to the Text key in the DataBindingCollection class.\n\n        Public Property [Text]() As String\n            Get\n                Dim myBinding As DataBinding = DataBindings(&quot;Text&quot;)\n                If Not (myBinding Is Nothing) Then\n                    Return myBinding.Expression\n                End If\n                Return String.Empty\n            End Get\n            Set(ByVal value As String)\n\n                If value Is Nothing OrElse value.Length = 0 Then\n                    DataBindings.Remove(&quot;Text&quot;)\n                Else\n\n                    Dim binding As DataBinding = DataBindings(&quot;Text&quot;)\n\n                    If binding Is Nothing Then\n                        binding = New DataBinding(&quot;Text&quot;, GetType(String), value)\n                    Else\n                        binding.Expression = value\n                    End If\n                    &#39; Call the DataBinding constructor, then add\n                    &#39; the initialized DataBinding object to the \n                    &#39; DataBindingCollection for this custom designer.\n                    Dim binding1 As DataBinding = CType(DataBindings.SyncRoot, DataBinding)\n                    DataBindings.Add(binding)\n                    DataBindings.Add(binding1)\n                End If\n                PropertyChanged(&quot;Text&quot;)\n            End Set\n        End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_DataBinding_Expression\">\r\n    \r\n            <a id=\"System_Web_UI_DataBinding_Expression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Expression</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data-binding expression to be evaluated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Expression { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The data-binding expression to be evaluated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object and sets it equal to an existing object in the control&#39;s <a class=\"xref\" href=\"system.web.ui.databindingcollection\" data-linktype=\"relative-path\">DataBindingCollection</a> collection that has a <code>propertyName</code> parameter with a value of <code>Text</code>. If the collection contains a <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object with a <code>propertyName</code> value of <code>Text</code>, this code returns the value of the object&#39;s Expression property. If there is no such object, it returns an empty string (&quot;&quot;).  </p>\n<pre><code class=\"lang-cs\" name=\"DataBinding_Sample1#3\">        // Create a Text property with accessors that obtain \n        // the property value from and set the property value\n        // to the Text key in the DataBindingCollection class.\n        public string Text\n        {\n            get\n            {\n                DataBinding myBinding = DataBindings[&quot;Text&quot;];\n                if (myBinding != null)\n                {\n                    return myBinding.Expression;\n                }\n                return String.Empty;\n            }\n            set\n            {\n\n                if ((value == null) || (value.Length == 0))\n                {\n                    DataBindings.Remove(&quot;Text&quot;);\n                }\n                else\n                {\n\n                    DataBinding binding = DataBindings[&quot;Text&quot;];\n\n                    if (binding == null)\n                    {\n                        binding = new DataBinding(&quot;Text&quot;, typeof(string), value);\n                    }\n                    else\n                    {\n                        binding.Expression = value;\n                    }\n                    // Call the DataBinding constructor, then add\n                    // the initialized DataBinding object to the \n                    // DataBindingCollection for this custom designer.\n                    DataBinding binding1 = (DataBinding)DataBindings.SyncRoot;\n                    DataBindings.Add(binding);\n                    DataBindings.Add(binding1);\n                }\n                PropertyChanged(&quot;Text&quot;);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"DataBinding_Sample1#3\">        &#39; Create a Text property with accessors that obtain \n        &#39; the property value from and set the property value\n        &#39; to the Text key in the DataBindingCollection class.\n\n        Public Property [Text]() As String\n            Get\n                Dim myBinding As DataBinding = DataBindings(&quot;Text&quot;)\n                If Not (myBinding Is Nothing) Then\n                    Return myBinding.Expression\n                End If\n                Return String.Empty\n            End Get\n            Set(ByVal value As String)\n\n                If value Is Nothing OrElse value.Length = 0 Then\n                    DataBindings.Remove(&quot;Text&quot;)\n                Else\n\n                    Dim binding As DataBinding = DataBindings(&quot;Text&quot;)\n\n                    If binding Is Nothing Then\n                        binding = New DataBinding(&quot;Text&quot;, GetType(String), value)\n                    Else\n                        binding.Expression = value\n                    End If\n                    &#39; Call the DataBinding constructor, then add\n                    &#39; the initialized DataBinding object to the \n                    &#39; DataBindingCollection for this custom designer.\n                    Dim binding1 As DataBinding = CType(DataBindings.SyncRoot, DataBinding)\n                    DataBindings.Add(binding)\n                    DataBindings.Add(binding1)\n                End If\n                PropertyChanged(&quot;Text&quot;)\n            End Set\n        End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_DataBinding_PropertyName\">\r\n    \r\n            <a id=\"System_Web_UI_DataBinding_PropertyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the ASP.NET server control property to bind data to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PropertyName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The property to bind data to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example declares three variables, <code>dataBindingOutput1</code>, <code>dataBindingOutput2</code>, and <code>dataBindingOutput3</code>, which access the different properties of a <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object, <code>myDataBinding2</code>. It then assigns the value of the PropertyName property to <code>dataBindingOutput1</code>, concatenates it with the string &quot;The property name is &quot;, and writes the value to a file.  </p>\n<pre><code class=\"lang-cs\" name=\"DataBinding_Sample1#6\">            // Use the DataBindingCollection.GetEnumerator method\n            // to iterate through the myDataBindingCollection object\n            // and write the PropertyName, PropertyType, and Expression\n            // properties to a file for each DataBinding object\n            // in the MyDataBindingCollection object. \n            myDataBindingCollection = DataBindings;\n            IEnumerator myEnumerator = myDataBindingCollection.GetEnumerator();\n\n            while (myEnumerator.MoveNext())\n            {\n                myDataBinding2 = (DataBinding)myEnumerator.Current;\n                String dataBindingOutput1, dataBindingOutput2, dataBindingOutput3;\n                dataBindingOutput1 = String.Concat(&quot;The property name is &quot;, myDataBinding2.PropertyName);\n                dataBindingOutput2 = String.Concat(&quot;The property type is &quot;, myDataBinding2.PropertyType.ToString(), &quot;-&quot;, dataBindingOutput1);\n                dataBindingOutput3 = String.Concat(&quot;The expression is &quot;, myDataBinding2.Expression, &quot;-&quot;, dataBindingOutput2);\n                WriteToFile(dataBindingOutput3);\n\n                myDataBindingExpression2 = String.Concat(&quot;&lt;%#&quot;, myDataBinding2.Expression, &quot;%&gt;&quot;);\n                myStringReplace2 = myDataBinding2.PropertyName.Replace(&quot;.&quot;, &quot;-&quot;);\n                myHtmlControlDesignBehavior.SetAttribute(myStringReplace2, myDataBindingExpression2);\n                int index = myStringReplace2.IndexOf(&#39;-&#39;);\n            }// while loop ends\n</code></pre><pre><code class=\"lang-vb\" name=\"DataBinding_Sample1#6\">            &#39; Use the DataBindingCollection.GetEnumerator method\n            &#39; to iterate through the myDataBindingCollection object\n            &#39; and write the PropertyName, PropertyType, and Expression\n            &#39; properties to a file for each DataBinding object\n            &#39; in the MyDataBindingCollection object. \n            myDataBindingCollection = DataBindings\n            Dim myEnumerator As IEnumerator = myDataBindingCollection.GetEnumerator()\n\n            While myEnumerator.MoveNext()\n                myDataBinding2 = CType(myEnumerator.Current, DataBinding)\n                Dim dataBindingOutput1, dataBindingOutput2, dataBindingOutput3 As [String]\n                dataBindingOutput1 = [String].Concat(&quot;The property name is &quot;, myDataBinding2.PropertyName)\n                dataBindingOutput2 = [String].Concat(&quot;The property type is &quot;, myDataBinding2.PropertyType.ToString(), &quot;-&quot;, dataBindingOutput1)\n                dataBindingOutput3 = [String].Concat(&quot;The expression is &quot;, myDataBinding2.Expression, &quot;-&quot;, dataBindingOutput2)\n                WriteToFile(dataBindingOutput3)\n\n                myDataBindingExpression2 = [String].Concat(&quot;&lt;%#&quot;, myDataBinding2.Expression, &quot;%&gt;&quot;)\n                myStringReplace2 = myDataBinding2.PropertyName.Replace(&quot;.&quot;, &quot;-&quot;)\n                myHtmlControlDesignBehavior.SetAttribute(myStringReplace2, myDataBindingExpression2)\n                Dim index As Integer = myStringReplace2.IndexOf(&quot;-&quot;c)\n            End While &#39; while loop ends\n        End Sub &#39;OnBindingsCollectionChanged\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_DataBinding_PropertyType\">\r\n    \r\n            <a id=\"System_Web_UI_DataBinding_PropertyType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the .NET Framework type of the data-bound ASP.NET server control property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Type PropertyType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The .NET Framework type of the data-bound property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example declares three variables, <code>dataBindingOutput1</code>, <code>dataBindingOutput2</code>, and <code>dataBindingOutput3</code>, which access the different properties of a <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object, <code>myDataBinding2</code>. The PropertyType property value is assigned to <code>dataBindingOutput2</code> and concatenated with the string &quot;The property type is &quot;, and writes the value to a file.  </p>\n<pre><code class=\"lang-cs\" name=\"DataBinding_Sample1#6\">            // Use the DataBindingCollection.GetEnumerator method\n            // to iterate through the myDataBindingCollection object\n            // and write the PropertyName, PropertyType, and Expression\n            // properties to a file for each DataBinding object\n            // in the MyDataBindingCollection object. \n            myDataBindingCollection = DataBindings;\n            IEnumerator myEnumerator = myDataBindingCollection.GetEnumerator();\n\n            while (myEnumerator.MoveNext())\n            {\n                myDataBinding2 = (DataBinding)myEnumerator.Current;\n                String dataBindingOutput1, dataBindingOutput2, dataBindingOutput3;\n                dataBindingOutput1 = String.Concat(&quot;The property name is &quot;, myDataBinding2.PropertyName);\n                dataBindingOutput2 = String.Concat(&quot;The property type is &quot;, myDataBinding2.PropertyType.ToString(), &quot;-&quot;, dataBindingOutput1);\n                dataBindingOutput3 = String.Concat(&quot;The expression is &quot;, myDataBinding2.Expression, &quot;-&quot;, dataBindingOutput2);\n                WriteToFile(dataBindingOutput3);\n\n                myDataBindingExpression2 = String.Concat(&quot;&lt;%#&quot;, myDataBinding2.Expression, &quot;%&gt;&quot;);\n                myStringReplace2 = myDataBinding2.PropertyName.Replace(&quot;.&quot;, &quot;-&quot;);\n                myHtmlControlDesignBehavior.SetAttribute(myStringReplace2, myDataBindingExpression2);\n                int index = myStringReplace2.IndexOf(&#39;-&#39;);\n            }// while loop ends\n</code></pre><pre><code class=\"lang-vb\" name=\"DataBinding_Sample1#6\">            &#39; Use the DataBindingCollection.GetEnumerator method\n            &#39; to iterate through the myDataBindingCollection object\n            &#39; and write the PropertyName, PropertyType, and Expression\n            &#39; properties to a file for each DataBinding object\n            &#39; in the MyDataBindingCollection object. \n            myDataBindingCollection = DataBindings\n            Dim myEnumerator As IEnumerator = myDataBindingCollection.GetEnumerator()\n\n            While myEnumerator.MoveNext()\n                myDataBinding2 = CType(myEnumerator.Current, DataBinding)\n                Dim dataBindingOutput1, dataBindingOutput2, dataBindingOutput3 As [String]\n                dataBindingOutput1 = [String].Concat(&quot;The property name is &quot;, myDataBinding2.PropertyName)\n                dataBindingOutput2 = [String].Concat(&quot;The property type is &quot;, myDataBinding2.PropertyType.ToString(), &quot;-&quot;, dataBindingOutput1)\n                dataBindingOutput3 = [String].Concat(&quot;The expression is &quot;, myDataBinding2.Expression, &quot;-&quot;, dataBindingOutput2)\n                WriteToFile(dataBindingOutput3)\n\n                myDataBindingExpression2 = [String].Concat(&quot;&lt;%#&quot;, myDataBinding2.Expression, &quot;%&gt;&quot;)\n                myStringReplace2 = myDataBinding2.PropertyName.Replace(&quot;.&quot;, &quot;-&quot;)\n                myHtmlControlDesignBehavior.SetAttribute(myStringReplace2, myDataBindingExpression2)\n                Dim index As Integer = myStringReplace2.IndexOf(&quot;-&quot;c)\n            End While &#39; while loop ends\n        End Sub &#39;OnBindingsCollectionChanged\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_DataBinding_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_DataBinding_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified object is the same instance of the <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> class as the current object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to compare against the current <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the data-binding property names match; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_DataBinding_GetHashCode\">\r\n    \r\n            <a id=\"System_Web_UI_DataBinding_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the hash code for an instance of the <a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A 32-bit signed integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.web.ui.databinding\" data-linktype=\"relative-path\">DataBinding</a> objects are placed in a <a class=\"xref\" href=\"system.web.ui.databindingcollection\" data-linktype=\"relative-path\">DataBindingCollection</a> object, accessible only at design time. The collection is a hash table that represents the bindings on a control. There can only be one binding per property, so the hash code computation matches the <a class=\"xref\" href=\"system.web.ui.databinding#System_Web_UI_DataBinding_Equals_\" data-linktype=\"relative-path\">Equals</a> implementation and only takes the property name into account.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.DataBinding.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.DataBinding.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding.Equals\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding.Expression\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding.PropertyName\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.DataBinding.PropertyType\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"4d8f67f7-8ede-5648-737f-6d1033ab929c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-b…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.DataBinding\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.DataBinding.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.DataBinding.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.DataBinding","System.Web.UI.DataBinding..ctor","System.Web.UI.DataBinding.Equals","System.Web.UI.DataBinding.Expression","System.Web.UI.DataBinding.GetHashCode","System.Web.UI.DataBinding.PropertyName","System.Web.UI.DataBinding.PropertyType"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.DataBinding","System::Web::UI::DataBinding","System.Web.UI.DataBinding.#ctor","System::Web::UI::DataBinding::#ctor","System.Web.UI.DataBinding.Equals","System::Web::UI::DataBinding::Equals","System.Web.UI.DataBinding.Expression","System::Web::UI::DataBinding::Expression","System.Web.UI.DataBinding.GetHashCode","System::Web::UI::DataBinding::GetHashCode","System.Web.UI.DataBinding.PropertyName","System::Web::UI::DataBinding::PropertyName","System.Web.UI.DataBinding.PropertyType","System::Web::UI::DataBinding::PropertyType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"4d8f67f7-8ede-5648-737f-6d1033ab929c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI/DataBinding.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataBinding class | Microsoft Docs","_op_ogTitle":"DataBinding class","description":"Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-b…","toc_asset_id":"_splitted/System.Web.UI/toc.json","toc_rel":"_splitted/System.Web.UI/toc.json","source_url":"","ms.assetid":"System.Web.UI.DataBinding","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.databinding","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.databinding","fileRelativePath":"System.Web.UI.DataBinding.html"},"themesRelativePathToOutputRoot":"_themes/"}