{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_RandomNumberGenerator\">\r\n      <span class=\"lang-csharp\">RandomNumberGenerator</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the abstract class from which all implementations of cryptographic random number generators derive.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class RandomNumberGenerator : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RandomNumberGenerator</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Cryptographic random number generators create cryptographically strong random values.  </p>\n<p> Application code does not directly use this class. This abstract class is provided as the base class for all cryptographic random number generators.  </p>\n<p> For an implementation of a cryptographic random number generator, use the derived class <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator__ctor\" data-linktype=\"self-bookmark\">RandomNumberGenerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_Create\" data-linktype=\"self-bookmark\">Create()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, creates an instance of the default implementation of a cryptographic random number generator that can be used to generate random data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_Create_System_String_\" data-linktype=\"self-bookmark\">Create(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, creates an instance of the specified implementation of a cryptographic random number generator.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_GetBytes_System_Byte___\" data-linktype=\"self-bookmark\">GetBytes(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_GetBytes_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetBytes(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Fills the specified byte array with a cryptographically strong random sequence of values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_RandomNumberGenerator_GetNonZeroBytes_System_Byte___\" data-linktype=\"self-bookmark\">GetNonZeroBytes(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of nonzero values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RandomNumberGenerator()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected RandomNumberGenerator ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You cannot create an instance of an abstract class. Application code will create a new instance of a derived class. For an implementation of a cryptographic random number generator, use the derived class <a class=\"xref\" href=\"system.security.cryptography.rngcryptoserviceprovider\" data-linktype=\"relative-path\">RNGCryptoServiceProvider</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_Create\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, creates an instance of the default implementation of a cryptographic random number generator that can be used to generate random data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.RandomNumberGenerator Create ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a></div>\r\n                  </div>\r\n                  <p>A new instance of a cryptographic random number generator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_Create_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, creates an instance of the specified implementation of a cryptographic random number generator.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Security.Cryptography.RandomNumberGenerator Create (string rngName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rngName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the random number generator implementation to use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a></div>\r\n                  </div>\r\n                  <p>A new instance of a cryptographic random number generator.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_Dispose\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, releases all resources used by the current instance of the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call <code>Dispose</code> when you are finished using the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a>. The <code>Dispose</code> method leaves the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> in an unusable state. After calling <code>Dispose</code>, you must release all references to the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> so the garbage collector can reclaim the memory that the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> was occupying.  </p>\n<p> For more information, see <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a> and <a href=\"../Topic/Implementing%20a%20Dispose%20Method.md\" data-linktype=\"relative-path\">Implementing a Dispose Method</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call <code>Dispose</code> before you release your last reference to the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> object&#39;s <code>Finalize</code> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, releases the unmanaged resources used by the <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <code>Finalize</code> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <code>Finalize</code> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.security.cryptography.randomnumbergenerator\" data-linktype=\"relative-path\">RandomNumberGenerator</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_GetBytes_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_GetBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBytes(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void GetBytes (byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array to fill with cryptographically strong random bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The length of the byte array determines how many random bytes are produced.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a random sequence 100 bytes long and stores it in <code>random</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic RandomNumberGenerator.GetBytes Example#1\">      byte[] random = new Byte[100];\n\n      //RNGCryptoServiceProvider is an implementation of a random number generator.\n      RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();\n      rng.GetBytes(random); // The array is now filled with cryptographically strong random bytes.\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic RandomNumberGenerator.GetBytes Example#1\">      array&lt;Byte&gt;^ random = gcnew array&lt;Byte&gt;(100);\n      \n      //RNGCryptoServiceProvider is an implementation of a random number generator.\n      RNGCryptoServiceProvider^ rng = gcnew RNGCryptoServiceProvider;\n      rng-&gt;GetBytes( random ); // The array is now filled with cryptographically strong random bytes.\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic RandomNumberGenerator.GetBytes Example#1\"> Dim random() As Byte = New Byte(100) {}\n        \n &#39;RNGCryptoServiceProvider is an implementation of an RNG\n Dim rng As New RNGCryptoServiceProvider()\n rng.GetBytes(random) &#39; bytes in random are now random\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_GetBytes_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_GetBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetBytes(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Fills the specified byte array with a cryptographically strong random sequence of values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void GetBytes (byte[] data, int offset, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array to fill with cryptographically strong random bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the array to start the fill operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to fill.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>data</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> or <code>count</code> is less than 0</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> plus <code>count</code> exceeds the length of <code>data</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_RandomNumberGenerator_GetNonZeroBytes_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_RandomNumberGenerator_GetNonZeroBytes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetNonZeroBytes(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, fills an array of bytes with a cryptographically strong random sequence of nonzero values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void GetNonZeroBytes (byte[] data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array to fill with cryptographically strong random nonzero bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The length of the byte array determines how many random bytes are produced.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a random sequence of 100 nonzero bytes and stores it in <code>random</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic RandomNumberGenerator.GetNonZeroBytes Example#1\">      array&lt;Byte&gt;^ random = gcnew array&lt;Byte&gt;(100);\n      //RNGCryptoServiceProvider is an implementation of a random number generator.\n      RNGCryptoServiceProvider^ rng = gcnew RNGCryptoServiceProvider;\n      rng-&gt;GetNonZeroBytes( random ); // The array is now filled with cryptographically strong random bytes, and none are zero.\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic RandomNumberGenerator.GetNonZeroBytes Example#1\">    byte[] random = new Byte[100];\n    //RNGCryptoServiceProvider is an implementation of a random number generator.\n    RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider();\n    rng.GetNonZeroBytes(random); // The array is now filled with cryptographically strong random bytes, and none are zero.\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic RandomNumberGenerator.GetNonZeroBytes Example#1\"> Dim random() As Byte = New Byte(100) {}\n &#39;RNGCryptoServiceProvider is an implementation of an RNG\n Dim rng As New RNGCryptoServiceProvider()\n rng.GetNonZeroBytes(random) &#39; bytes in random are now random and none are zero\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.RandomNumberGenerator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.RandomNumberGenerator.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RandomNumberGenerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RandomNumberGenerator..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RandomNumberGenerator.Create\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RandomNumberGenerator.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RandomNumberGenerator.GetBytes\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9cda31f2-a92a-ea0e-fb1c-cab29994a97d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the abstract class from which all implementations of cryptographic random number generators derive.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.RandomNumberGenerator\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.RandomNumberGenerator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.RandomNumberGenerator.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.RandomNumberGenerator","System.Security.Cryptography.RandomNumberGenerator..ctor","System.Security.Cryptography.RandomNumberGenerator.Create","System.Security.Cryptography.RandomNumberGenerator.Dispose","System.Security.Cryptography.RandomNumberGenerator.GetBytes","System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.RandomNumberGenerator","System::Security::Cryptography::RandomNumberGenerator","System.Security.Cryptography.RandomNumberGenerator.#ctor","System::Security::Cryptography::RandomNumberGenerator::#ctor","System.Security.Cryptography.RandomNumberGenerator.Create","System::Security::Cryptography::RandomNumberGenerator::Create","System.Security.Cryptography.RandomNumberGenerator.Dispose","System::Security::Cryptography::RandomNumberGenerator::Dispose","System.Security.Cryptography.RandomNumberGenerator.GetBytes","System::Security::Cryptography::RandomNumberGenerator::GetBytes","System.Security.Cryptography.RandomNumberGenerator.GetNonZeroBytes","System::Security::Cryptography::RandomNumberGenerator::GetNonZeroBytes"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9cda31f2-a92a-ea0e-fb1c-cab29994a97d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/RandomNumberGenerator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RandomNumberGenerator class | Microsoft Docs","_op_ogTitle":"RandomNumberGenerator class","description":"Represents the abstract class from which all implementations of cryptographic random number generators derive.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.RandomNumberGenerator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.randomnumbergenerator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.randomnumbergenerator","fileRelativePath":"System.Security.Cryptography.RandomNumberGenerator.html"},"themesRelativePathToOutputRoot":"_themes/"}