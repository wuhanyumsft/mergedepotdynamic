{"content":"    \r\n    <h1 id=\"System_Web_Services_Discovery_DiscoveryDocument\">\r\n      <span class=\"lang-csharp\">DiscoveryDocument</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a discovery document. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Xml.Serialization.XmlRoot(&quot;discovery&quot;, Namespace=&quot;http://schemas.xmlsoap.org/disco/&quot;)]\npublic sealed class DiscoveryDocument</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DiscoveryDocument</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>XML Web services discovery involves discovering the available XML Web services, given an URL. The URL typically points to a discovery document, which usually has a.disco file name extension. The discovery document, which is an XML document, contains references to information about the existance of XML Web services, such as a service description, XML Schema Definition (XSD) language schema, or another discovery document. This class represents the contents of the discovery document; where the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument#System_Web_Services_Discovery_DiscoveryDocument_References_\" data-linktype=\"relative-path\">References</a> property contains a list of the references contained within the discovery document.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument__ctor\" data-linktype=\"self-bookmark\">DiscoveryDocument()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Namespace of the discovery XML element of a discovery document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_References\" data-linktype=\"self-bookmark\">References</a></div>\r\n          </td>\r\n            <td>\r\n            <p>A list of references contained within the discovery document.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_CanRead_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">CanRead(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether the passed <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> can be deserialized into a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Read_System_IO_Stream_\" data-linktype=\"self-bookmark\">Read(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads and returns a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> from the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Read_System_IO_TextReader_\" data-linktype=\"self-bookmark\">Read(TextReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads and returns a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> from the passed <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Read_System_Xml_XmlReader_\" data-linktype=\"self-bookmark\">Read(XmlReader)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads and returns a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> from the passed <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Write_System_IO_Stream_\" data-linktype=\"self-bookmark\">Write(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> into the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Write_System_IO_TextWriter_\" data-linktype=\"self-bookmark\">Write(TextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> into the passed <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_DiscoveryDocument_Write_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">Write(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> into the passed <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument__ctor\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DiscoveryDocument()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DiscoveryDocument ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Namespace\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>Namespace of the discovery XML element of a discovery document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string Namespace;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A discovery document contains references to documents describing Web Services. These references are XML elements contained within a discovery XML element. That discovery XML element is a member of the XML namespace specified by the Namespace constant.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays the XML namespace associated with the discovery XML element of a discovery document.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryDocument_DiscoveryDocument#2\">         // Display the &#39;Namespace&#39; field.\n         Console.WriteLine( &quot;The namespace is : &quot; +DiscoveryDocument.Namespace );\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_DiscoveryDocument#2\">         &#39; Display the &#39;Namespace&#39; field.\n         Console.WriteLine(&quot;The namespace is : &quot; + DiscoveryDocument.Namespace)\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_DiscoveryDocument#2\">      // Display the &#39;Namespace&#39; field.\n      Console::WriteLine( &quot;The namespace is : {0}&quot;, DiscoveryDocument::Namespace );\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_References\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_References_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">References</div>        \r\n          </div>\r\n    \r\n            <p>A list of references contained within the discovery document.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IList References { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> containing the references within the discovery document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A discovery document contains references to information about the existence of XML Web services. These references can refer to service descriptions, XSD schemas, or other discovery documents. The References property contains a list of these references.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example enumerates over the references for a discovery document.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryDocument_DiscoveryDocument#5\">         // Enumerate the &#39;References&#39; in the DiscoveryDocument.\n         IEnumerator myEnumerator = myDiscoveryDocument.References.GetEnumerator();\n         Console.WriteLine( &quot;The &#39;References&#39; in the discovery document are-&quot; );\n         while ( myEnumerator.MoveNext() )\n         {\n            Console.Write( ((DiscoveryDocumentReference)myEnumerator.Current).Url );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_DiscoveryDocument#5\">         &#39; Enumerate the &#39;References&#39; in the DiscoveryDocument.\n         Dim myEnumerator As IEnumerator = myDiscoveryDocument.References.GetEnumerator()\n         Console.WriteLine(&quot;The &#39;References&#39; in the discovery document are-&quot;)\n         While myEnumerator.MoveNext()\n            Console.Write(CType(myEnumerator.Current, DiscoveryDocumentReference).Url)\n         End While\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_DiscoveryDocument#5\">      // Enumerate the &#39;References&#39; in the DiscoveryDocument.\n      IEnumerator^ myEnumerator = myDiscoveryDocument-&gt;References-&gt;GetEnumerator();\n      Console::WriteLine( &quot;The &#39;References&#39; in the discovery document are-&quot; );\n      while ( myEnumerator-&gt;MoveNext() )\n            Console::Write( (dynamic_cast&lt;DiscoveryDocumentReference^&gt;(myEnumerator-&gt;Current)-&gt;Url) );\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_CanRead_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_CanRead_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRead(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether the passed <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> can be deserialized into a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool CanRead (System.Xml.XmlReader xmlReader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> that is tested whether it can be deserialized into a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> can be deserialized into a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example reads in the contents of a discovery document, if the CanRead property is <code>true</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryDocument_DiscoveryDocument#3\">         // Check whether the given XmlTextReader is readable.\n         if( DiscoveryDocument.CanRead( myXmlTextReader ) == true )\n         {\n            // Read the given XmlTextReader.\n            myDiscoveryDocument = DiscoveryDocument.Read( myXmlTextReader );\n         }\n         else\n         {\n            Console.WriteLine( &quot;The supplied file is not readable&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_DiscoveryDocument#3\">         &#39; Check whether the given XmlTextReader is readable.\n         If DiscoveryDocument.CanRead(myXmlTextReader) = True Then\n            &#39; Read the given XmlTextReader.\n            myDiscoveryDocument = DiscoveryDocument.Read(myXmlTextReader)\n         Else\n            Console.WriteLine(&quot;The supplied file is not readable&quot;)\n         End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_DiscoveryDocument#3\">      // Check whether the given XmlTextReader is readable.\n      if ( DiscoveryDocument::CanRead( myXmlTextReader ) == true )\n            \n      // Read the given XmlTextReader.\n      myDiscoveryDocument = DiscoveryDocument::Read( myXmlTextReader );\n      else\n            Console::WriteLine( &quot;The supplied file is not readable&quot; );\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Read_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Reads and returns a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> from the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Web.Services.Discovery.DiscoveryDocument Read (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from which to read the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> containing the contents of a discovery document from the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Read_System_IO_TextReader_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(TextReader)</div>        \r\n          </div>\r\n    \r\n            <p>Reads and returns a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> from the passed <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Web.Services.Discovery.DiscoveryDocument Read (System.IO.TextReader reader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a> from which to read the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> containing the contents of a discovery document from the passed <a class=\"xref\" href=\"system.io.textreader\" data-linktype=\"relative-path\">TextReader</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example reads the discovery document from &quot; <code>http://localhost/example_Write2_cs.vsdisco</code> &quot; into a <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_Write2#1\">      // Create a DiscoveryDocument.\n      DiscoveryDocument^ myDiscoveryDocument = gcnew DiscoveryDocument;\n      \n      // Create an XmlTextReader with the sample file.\n      XmlTextReader^ myXmlTextReader = gcnew XmlTextReader(\n         &quot;http://localhost/example_Write2_cs.disco&quot; );\n      \n      // Read the given XmlTextReader.\n      myDiscoveryDocument = DiscoveryDocument::Read( myXmlTextReader );\n\n      FileStream^ myFileStream = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n\n      XmlTextWriter^ myXmlTextWriter = gcnew XmlTextWriter( myStreamWriter );\n      myDiscoveryDocument-&gt;Write( myXmlTextWriter );\n\n      myXmlTextWriter-&gt;Flush();\n      myXmlTextWriter-&gt;Close();\n      \n      // Display the contents of the DiscoveryDocument on the console.\n      FileStream^ myFileStream1 = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Read );\n      StreamReader^ myStreamReader = gcnew StreamReader( myFileStream1 );\n      \n      // Set the file pointer to the beginning.\n      myStreamReader-&gt;BaseStream-&gt;Seek( 0, SeekOrigin::Begin );\n      Console::WriteLine( &quot;The contents of the DiscoveryDocument are: &quot; );\n      while ( myStreamReader-&gt;Peek() &gt; -1 )\n      {\n         Console::WriteLine( myStreamReader-&gt;ReadLine() );\n      }\n      myStreamReader-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryDocument_Write2#1\">         // Create a DiscoveryDocument.\n         DiscoveryDocument myDiscoveryDocument = new DiscoveryDocument();\n\n         // Create an XmlTextReader with the sample file.\n         XmlTextReader myXmlTextReader = new\n            XmlTextReader( &quot;http://localhost/example_Write2_cs.disco&quot; );\n\n         // Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read( myXmlTextReader );\n\n         FileStream myFileStream = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write );\n         StreamWriter myStreamWriter = new StreamWriter( myFileStream );\n\n\n         XmlTextWriter myXmlTextWriter = new XmlTextWriter( myStreamWriter );\n         myDiscoveryDocument.Write( myXmlTextWriter );\n\n\n         myXmlTextWriter.Flush();\n         myXmlTextWriter.Close();\n\n         // Display the contents of the DiscoveryDocument on the console.\n         FileStream myFileStream1 = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read );\n         StreamReader myStreamReader = new StreamReader( myFileStream1 );\n\n         // Set the file pointer to the beginning.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin);\n         Console.WriteLine( &quot;The contents of the DiscoveryDocument are:&quot; );\n         while ( myStreamReader.Peek() &gt; -1 )\n         {\n            Console.WriteLine( myStreamReader.ReadLine() );\n         }\n         myStreamReader.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_Write2#1\">         &#39; Create a DiscoveryDocument.\n         Dim myDiscoveryDocument As New DiscoveryDocument()\n\n         &#39; Create an XmlTextReader with the sample file.\n         Dim myXmlTextReader As _\n             New XmlTextReader(&quot;http://localhost/example_Write2_vb.disco&quot;)\n\n         &#39; Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read(myXmlTextReader)\n\n         Dim myFileStream As _\n             New FileStream(&quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write)\n         Dim myStreamWriter As New StreamWriter(myFileStream)\n\n         Dim myXmlTextWriter As New XmlTextWriter(myStreamWriter)\n         myDiscoveryDocument.Write(myXmlTextWriter)\n\n         myXmlTextWriter.Flush()\n         myXmlTextWriter.Close()\n\n         &#39; Display the contents of the DiscoveryDocument on the console.\n         Dim myFileStream1 As New FileStream( _\n             &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read)\n         Dim myStreamReader As New StreamReader(myFileStream1)\n\n         &#39; Set the file pointer to the beginning.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin)\n         Console.WriteLine(&quot;The contents of the DiscoveryDocument are: &quot;)\n         While myStreamReader.Peek() &gt; - 1\n            Console.WriteLine(myStreamReader.ReadLine())\n         End While\n         myStreamReader.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Read_System_Xml_XmlReader_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_Read_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Read(XmlReader)</div>        \r\n          </div>\r\n    \r\n            <p>Reads and returns a <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> from the passed <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Web.Services.Discovery.DiscoveryDocument Read (System.Xml.XmlReader xmlReader);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xmlReader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> from which to read the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> containing the contents of a discovery document from the passed <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example reads in the contents of a discovery document, if the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument#System_Web_Services_Discovery_DiscoveryDocument_CanRead_\" data-linktype=\"relative-path\">CanRead</a> property is <code>true</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryDocument_DiscoveryDocument#4\">         // Check whether the given XmlTextReader is readable.\n         if( DiscoveryDocument.CanRead( myXmlTextReader ) == true )\n         {\n            // Read the given XmlTextReader.\n            myDiscoveryDocument = DiscoveryDocument.Read( myXmlTextReader );\n         }\n         else\n         {\n            Console.WriteLine( &quot;The supplied file is not readable&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_DiscoveryDocument#4\">         &#39; Check whether the given XmlTextReader is readable.\n         If DiscoveryDocument.CanRead(myXmlTextReader) = True Then\n            &#39; Read the given XmlTextReader.\n            myDiscoveryDocument = DiscoveryDocument.Read(myXmlTextReader)\n         Else\n            Console.WriteLine(&quot;The supplied file is not readable&quot;)\n         End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_DiscoveryDocument#4\">      // Check whether the given XmlTextReader is readable.\n      if ( DiscoveryDocument::CanRead( myXmlTextReader ) == true )\n            \n      // Read the given XmlTextReader.\n      myDiscoveryDocument = DiscoveryDocument::Read( myXmlTextReader );\n      else\n            Console::WriteLine( &quot;The supplied file is not readable&quot; );\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Write_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Writes this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> into the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> into which this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> is written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example writes a discovery document out to a file named <code>log.txt</code> using the <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument#System_Web_Services_Discovery_DiscoveryDocument_Write_\" data-linktype=\"relative-path\">Write</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"DiscoveryDocument_Write1#1\">         // Create an object of the &#39;DiscoveryDocument&#39;.\n         DiscoveryDocument myDiscoveryDocument = new DiscoveryDocument();\n\n         // Create an XmlTextReader with the sample file.\n         XmlTextReader myXmlTextReader = new\n            XmlTextReader( &quot;http://localhost/example_Write1_cs.disco&quot; );\n\n         // Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read( myXmlTextReader );\n\n\n         // Write the DiscoveryDocument into the stream.\n         FileStream myFileStream = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write );\n         myDiscoveryDocument.Write( myFileStream );\n\n\n         myFileStream.Flush();\n         myFileStream.Close();\n\n         // Display the contents of the DiscoveryDocument onto the console.\n         FileStream myFileStream1 = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read );\n         StreamReader myStreamReader = new StreamReader( myFileStream1 );\n\n         // Set the file pointer to the begin.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin);\n         Console.WriteLine( &quot;The contents of the DiscoveryDocument are-&quot; );\n         while ( myStreamReader.Peek() &gt; -1 )\n         {\n            Console.WriteLine( myStreamReader.ReadLine() );\n         }\n         myStreamReader.Close();\n</code></pre><pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_Write1#1\">      // Create an object of the &#39;DiscoveryDocument&#39;.\n      DiscoveryDocument^ myDiscoveryDocument = gcnew DiscoveryDocument;\n      \n      // Create an XmlTextReader with the sample file.\n      XmlTextReader^ myXmlTextReader = gcnew XmlTextReader(\n         &quot;http://localhost/example_Write1_cs.disco&quot; );\n      \n      // Read the given XmlTextReader.\n      myDiscoveryDocument = DiscoveryDocument::Read( myXmlTextReader );\n      \n      // Write the DiscoveryDocument into the stream.\n      FileStream^ myFileStream = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Write );\n      myDiscoveryDocument-&gt;Write( myFileStream );\n\n      myFileStream-&gt;Flush();\n      myFileStream-&gt;Close();\n      \n      // Display the contents of the DiscoveryDocument onto the console.\n      FileStream^ myFileStream1 = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Read );\n      StreamReader^ myStreamReader = gcnew StreamReader( myFileStream1 );\n      \n      // Set the file pointer to the begin.\n      myStreamReader-&gt;BaseStream-&gt;Seek( 0, SeekOrigin::Begin );\n      Console::WriteLine( &quot;The contents of the DiscoveryDocument are-&quot; );\n      while ( myStreamReader-&gt;Peek() &gt; -1 )\n      {\n         Console::WriteLine( myStreamReader-&gt;ReadLine() );\n      }\n      myStreamReader-&gt;Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_Write1#1\">         &#39; Create an object of the &#39;DiscoveryDocument&#39;.\n         Dim myDiscoveryDocument As New DiscoveryDocument()\n\n         &#39; Create an XmlTextReader with the sample file.\n         Dim myXmlTextReader As New XmlTextReader(&quot;http://localhost/example_Write1_vb.disco&quot;)\n\n         &#39; Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read(myXmlTextReader)\n\n\n         &#39; Write the DiscoveryDocument into the stream.\n         Dim myFileStream As New FileStream(&quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write)\n         myDiscoveryDocument.Write(myFileStream)\n\n         myFileStream.Flush()\n         myFileStream.Close()\n\n         &#39; Display the contents of the DiscoveryDocument onto the console.\n         Dim myFileStream1 As New FileStream(&quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read)\n         Dim myStreamReader As New StreamReader(myFileStream1)\n\n         &#39; Set the file pointer to the begin.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin)\n         Console.WriteLine(&quot;The contents of the DiscoveryDocument are-&quot;)\n         While myStreamReader.Peek() &gt; - 1\n            Console.WriteLine(myStreamReader.ReadLine())\n         End While\n         myStreamReader.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Write_System_IO_TextWriter_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(TextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Writes this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> into the passed <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (System.IO.TextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> into which this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> is written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example writes a discovery document into a <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_Write2#1\">      // Create a DiscoveryDocument.\n      DiscoveryDocument^ myDiscoveryDocument = gcnew DiscoveryDocument;\n      \n      // Create an XmlTextReader with the sample file.\n      XmlTextReader^ myXmlTextReader = gcnew XmlTextReader(\n         &quot;http://localhost/example_Write2_cs.disco&quot; );\n      \n      // Read the given XmlTextReader.\n      myDiscoveryDocument = DiscoveryDocument::Read( myXmlTextReader );\n\n      FileStream^ myFileStream = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n\n      XmlTextWriter^ myXmlTextWriter = gcnew XmlTextWriter( myStreamWriter );\n      myDiscoveryDocument-&gt;Write( myXmlTextWriter );\n\n      myXmlTextWriter-&gt;Flush();\n      myXmlTextWriter-&gt;Close();\n      \n      // Display the contents of the DiscoveryDocument on the console.\n      FileStream^ myFileStream1 = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Read );\n      StreamReader^ myStreamReader = gcnew StreamReader( myFileStream1 );\n      \n      // Set the file pointer to the beginning.\n      myStreamReader-&gt;BaseStream-&gt;Seek( 0, SeekOrigin::Begin );\n      Console::WriteLine( &quot;The contents of the DiscoveryDocument are: &quot; );\n      while ( myStreamReader-&gt;Peek() &gt; -1 )\n      {\n         Console::WriteLine( myStreamReader-&gt;ReadLine() );\n      }\n      myStreamReader-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryDocument_Write2#1\">         // Create a DiscoveryDocument.\n         DiscoveryDocument myDiscoveryDocument = new DiscoveryDocument();\n\n         // Create an XmlTextReader with the sample file.\n         XmlTextReader myXmlTextReader = new\n            XmlTextReader( &quot;http://localhost/example_Write2_cs.disco&quot; );\n\n         // Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read( myXmlTextReader );\n\n         FileStream myFileStream = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write );\n         StreamWriter myStreamWriter = new StreamWriter( myFileStream );\n\n\n         XmlTextWriter myXmlTextWriter = new XmlTextWriter( myStreamWriter );\n         myDiscoveryDocument.Write( myXmlTextWriter );\n\n\n         myXmlTextWriter.Flush();\n         myXmlTextWriter.Close();\n\n         // Display the contents of the DiscoveryDocument on the console.\n         FileStream myFileStream1 = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read );\n         StreamReader myStreamReader = new StreamReader( myFileStream1 );\n\n         // Set the file pointer to the beginning.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin);\n         Console.WriteLine( &quot;The contents of the DiscoveryDocument are:&quot; );\n         while ( myStreamReader.Peek() &gt; -1 )\n         {\n            Console.WriteLine( myStreamReader.ReadLine() );\n         }\n         myStreamReader.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_Write2#1\">         &#39; Create a DiscoveryDocument.\n         Dim myDiscoveryDocument As New DiscoveryDocument()\n\n         &#39; Create an XmlTextReader with the sample file.\n         Dim myXmlTextReader As _\n             New XmlTextReader(&quot;http://localhost/example_Write2_vb.disco&quot;)\n\n         &#39; Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read(myXmlTextReader)\n\n         Dim myFileStream As _\n             New FileStream(&quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write)\n         Dim myStreamWriter As New StreamWriter(myFileStream)\n\n         Dim myXmlTextWriter As New XmlTextWriter(myStreamWriter)\n         myDiscoveryDocument.Write(myXmlTextWriter)\n\n         myXmlTextWriter.Flush()\n         myXmlTextWriter.Close()\n\n         &#39; Display the contents of the DiscoveryDocument on the console.\n         Dim myFileStream1 As New FileStream( _\n             &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read)\n         Dim myStreamReader As New StreamReader(myFileStream1)\n\n         &#39; Set the file pointer to the beginning.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin)\n         Console.WriteLine(&quot;The contents of the DiscoveryDocument are: &quot;)\n         While myStreamReader.Peek() &gt; - 1\n            Console.WriteLine(myStreamReader.ReadLine())\n         End While\n         myStreamReader.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_DiscoveryDocument_Write_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_DiscoveryDocument_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Writes this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> into the passed <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (System.Xml.XmlWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> into which this <a class=\"xref\" href=\"system.web.services.discovery.discoverydocument\" data-linktype=\"relative-path\">DiscoveryDocument</a> is written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example writes a discovery document into a <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"DiscoveryDocument_Write2#1\">      // Create a DiscoveryDocument.\n      DiscoveryDocument^ myDiscoveryDocument = gcnew DiscoveryDocument;\n      \n      // Create an XmlTextReader with the sample file.\n      XmlTextReader^ myXmlTextReader = gcnew XmlTextReader(\n         &quot;http://localhost/example_Write2_cs.disco&quot; );\n      \n      // Read the given XmlTextReader.\n      myDiscoveryDocument = DiscoveryDocument::Read( myXmlTextReader );\n\n      FileStream^ myFileStream = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n\n      XmlTextWriter^ myXmlTextWriter = gcnew XmlTextWriter( myStreamWriter );\n      myDiscoveryDocument-&gt;Write( myXmlTextWriter );\n\n      myXmlTextWriter-&gt;Flush();\n      myXmlTextWriter-&gt;Close();\n      \n      // Display the contents of the DiscoveryDocument on the console.\n      FileStream^ myFileStream1 = gcnew FileStream(\n         &quot;log.txt&quot;,FileMode::OpenOrCreate,FileAccess::Read );\n      StreamReader^ myStreamReader = gcnew StreamReader( myFileStream1 );\n      \n      // Set the file pointer to the beginning.\n      myStreamReader-&gt;BaseStream-&gt;Seek( 0, SeekOrigin::Begin );\n      Console::WriteLine( &quot;The contents of the DiscoveryDocument are: &quot; );\n      while ( myStreamReader-&gt;Peek() &gt; -1 )\n      {\n         Console::WriteLine( myStreamReader-&gt;ReadLine() );\n      }\n      myStreamReader-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"DiscoveryDocument_Write2#1\">         // Create a DiscoveryDocument.\n         DiscoveryDocument myDiscoveryDocument = new DiscoveryDocument();\n\n         // Create an XmlTextReader with the sample file.\n         XmlTextReader myXmlTextReader = new\n            XmlTextReader( &quot;http://localhost/example_Write2_cs.disco&quot; );\n\n         // Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read( myXmlTextReader );\n\n         FileStream myFileStream = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write );\n         StreamWriter myStreamWriter = new StreamWriter( myFileStream );\n\n\n         XmlTextWriter myXmlTextWriter = new XmlTextWriter( myStreamWriter );\n         myDiscoveryDocument.Write( myXmlTextWriter );\n\n\n         myXmlTextWriter.Flush();\n         myXmlTextWriter.Close();\n\n         // Display the contents of the DiscoveryDocument on the console.\n         FileStream myFileStream1 = new\n            FileStream( &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read );\n         StreamReader myStreamReader = new StreamReader( myFileStream1 );\n\n         // Set the file pointer to the beginning.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin);\n         Console.WriteLine( &quot;The contents of the DiscoveryDocument are:&quot; );\n         while ( myStreamReader.Peek() &gt; -1 )\n         {\n            Console.WriteLine( myStreamReader.ReadLine() );\n         }\n         myStreamReader.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"DiscoveryDocument_Write2#1\">         &#39; Create a DiscoveryDocument.\n         Dim myDiscoveryDocument As New DiscoveryDocument()\n\n         &#39; Create an XmlTextReader with the sample file.\n         Dim myXmlTextReader As _\n             New XmlTextReader(&quot;http://localhost/example_Write2_vb.disco&quot;)\n\n         &#39; Read the given XmlTextReader.\n         myDiscoveryDocument = DiscoveryDocument.Read(myXmlTextReader)\n\n         Dim myFileStream As _\n             New FileStream(&quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Write)\n         Dim myStreamWriter As New StreamWriter(myFileStream)\n\n         Dim myXmlTextWriter As New XmlTextWriter(myStreamWriter)\n         myDiscoveryDocument.Write(myXmlTextWriter)\n\n         myXmlTextWriter.Flush()\n         myXmlTextWriter.Close()\n\n         &#39; Display the contents of the DiscoveryDocument on the console.\n         Dim myFileStream1 As New FileStream( _\n             &quot;log.txt&quot;, FileMode.OpenOrCreate, FileAccess.Read)\n         Dim myStreamReader As New StreamReader(myFileStream1)\n\n         &#39; Set the file pointer to the beginning.\n         myStreamReader.BaseStream.Seek(0, SeekOrigin.Begin)\n         Console.WriteLine(&quot;The contents of the DiscoveryDocument are: &quot;)\n         While myStreamReader.Peek() &gt; - 1\n            Console.WriteLine(myStreamReader.ReadLine())\n         End While\n         myStreamReader.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.DiscoveryDocument.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.DiscoveryDocument.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument.CanRead\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument.Read\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument.References\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.DiscoveryDocument.Write\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"873c89be-7fd9-8bbf-88fc-969784b56cbc\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a discovery document. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Services.Discovery/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Discovery.DiscoveryDocument\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.DiscoveryDocument.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.DiscoveryDocument.yml","open_to_public_contributors":true,"api_name":["System.Web.Services.Discovery.DiscoveryDocument","System.Web.Services.Discovery.DiscoveryDocument..ctor","System.Web.Services.Discovery.DiscoveryDocument.CanRead","System.Web.Services.Discovery.DiscoveryDocument.Namespace","System.Web.Services.Discovery.DiscoveryDocument.Read","System.Web.Services.Discovery.DiscoveryDocument.References","System.Web.Services.Discovery.DiscoveryDocument.Write"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Discovery.DiscoveryDocument","System::Web::Services::Discovery::DiscoveryDocument","System.Web.Services.Discovery.DiscoveryDocument.#ctor","System::Web::Services::Discovery::DiscoveryDocument::#ctor","System.Web.Services.Discovery.DiscoveryDocument.CanRead","System::Web::Services::Discovery::DiscoveryDocument::CanRead","System.Web.Services.Discovery.DiscoveryDocument.Namespace","System::Web::Services::Discovery::DiscoveryDocument::Namespace","System.Web.Services.Discovery.DiscoveryDocument.Read","System::Web::Services::Discovery::DiscoveryDocument::Read","System.Web.Services.Discovery.DiscoveryDocument.References","System::Web::Services::Discovery::DiscoveryDocument::References","System.Web.Services.Discovery.DiscoveryDocument.Write","System::Web::Services::Discovery::DiscoveryDocument::Write"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"873c89be-7fd9-8bbf-88fc-969784b56cbc","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Services.Discovery/DiscoveryDocument.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DiscoveryDocument class | Microsoft Docs","_op_ogTitle":"DiscoveryDocument class","description":"Represents a discovery document. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Web.Services.Discovery/toc.json","toc_rel":"_splitted/System.Web.Services.Discovery/toc.json","source_url":"","ms.assetid":"System.Web.Services.Discovery.DiscoveryDocument","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.discoverydocument","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.discoverydocument","fileRelativePath":"System.Web.Services.Discovery.DiscoveryDocument.html"},"themesRelativePathToOutputRoot":"_themes/"}