{"content":"    \r\n    <h1 id=\"System_Xml_Serialization_XmlElementEventArgs\">\r\n      <span class=\"lang-csharp\">XmlElementEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlElementEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlElementEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115\" data-linktype=\"external\">NIB: Events and Delegates</a> and <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> event occurs only when you call the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementEventArgs_Element\" data-linktype=\"self-bookmark\">Element</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object that represents the unknown XML element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementEventArgs_ExpectedElements\" data-linktype=\"self-bookmark\">ExpectedElements</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a comma-delimited list of XML element names expected to be in an XML document instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementEventArgs_LineNumber\" data-linktype=\"self-bookmark\">LineNumber</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the line number where the unknown element was encountered if the XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementEventArgs_LinePosition\" data-linktype=\"self-bookmark\">LinePosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the place in the line where the unknown element occurs if the XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Serialization_XmlElementEventArgs_ObjectBeingDeserialized\" data-linktype=\"self-bookmark\">ObjectBeingDeserialized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> is deserializing.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementEventArgs_Element\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementEventArgs_Element_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Element</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object that represents the unknown XML element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlElement Element { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </div>\r\n                  <p>The object that represents the unknown XML element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes a class named <code>Group</code> from a file named UnknownElements.xml. Whenever an element is found in the file that has no corresponding member in the class, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> event occurs. To try the example, paste the following XML code into a file named UnknownElements.xml.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;GroupName&gt;MyGroup&lt;/GroupName&gt;  \n  &lt;GroupSize&gt;Large&lt;/GroupSize&gt;  \n  &lt;GroupNumber&gt;444&lt;/GroupNumber&gt;  \n  &lt;GroupBase&gt;West&lt;/GroupBase&gt;  \n&lt;/Group&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlSerializer.UnknownElement Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\nusing System.Xml;\nusing System.Xml.Schema;\n\npublic class Group{\n   public string GroupName;\n}\n\npublic class Test{\n   static void Main(){\n      Test t = new Test();\n      // Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;);\n   }\n   private void Serializer_UnknownElement(object sender, XmlElementEventArgs e){\n      Console.WriteLine(&quot;Unknown Element&quot;);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + e.Element.Name + &quot; &quot; + e.Element.InnerXml);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: &quot; + e.LineNumber);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: &quot; + e.LinePosition);\n      \n      Group x  = (Group) e.ObjectBeingDeserialized;\n      Console.WriteLine (x.GroupName);\n      Console.WriteLine (sender.ToString());\n   }\n   private void DeserializeObject(string filename){\n      XmlSerializer ser = new XmlSerializer(typeof(Group));\n      // Add a delegate to handle unknown element events.\n      ser.UnknownElement+=new XmlElementEventHandler(Serializer_UnknownElement);\n      // A FileStream is needed to read the XML document.\n     FileStream fs = new FileStream(filename, FileMode.Open);\n     Group g = (Group) ser.Deserialize(fs);\n     fs.Close();\n   \t}\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSerializer.UnknownElement Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml;\nusing namespace System::Xml::Schema;\n\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n};\n\npublic ref class Test\n{\nprivate:\n   void Serializer_UnknownElement( Object^ sender, XmlElementEventArgs^ e )\n   {\n      Console::WriteLine( &quot;Unknown Element&quot; );\n      Console::Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;, e-&gt;Element-&gt;Name );\n      Console::WriteLine( &quot; {0}&quot;, e-&gt;Element-&gt;InnerXml );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: {0}&quot;, e-&gt;LineNumber );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: {0}&quot;, e-&gt;LinePosition );\n      Group^ x = dynamic_cast&lt;Group^&gt;(e-&gt;ObjectBeingDeserialized);\n      Console::WriteLine( x-&gt;GroupName );\n      Console::WriteLine( sender );\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ ser = gcnew XmlSerializer( Group::typeid );\n\n      // Add a delegate to handle unknown element events.\n      ser-&gt;UnknownElement += gcnew XmlElementEventHandler( this, &amp;Test::Serializer_UnknownElement );\n\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      Group^ g = dynamic_cast&lt;Group^&gt;(ser-&gt;Deserialize( fs ));\n      fs-&gt;Close();\n   }\n};\n\nint main()\n{\n   Test^ t = gcnew Test;\n\n   // Deserialize the file containing unknown elements.\n   t-&gt;DeserializeObject( &quot;UnknownElements.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSerializer.UnknownElement Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports System.Xml\nImports System.Xml.Schema\nImports Microsoft.VisualBasic\n\nPublic Class Group\n   Public GroupName As String \nEnd Class\n\nPublic Class Test\n   Shared Sub Main()\n      Dim t As Test = new Test()\n      &#39; Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;)\n   End Sub\n\n   Private Sub Serializer_UnknownElement _\n   (sender As Object , e As XmlElementEventArgs)\n      Console.WriteLine(&quot;Unknown Element&quot;)\n      Console.WriteLine(ControlChars.Tab &amp; e.Element.Name + &quot; &quot; &amp; e.Element.InnerXml)\n      Console.WriteLine(ControlChars.Tab &amp; e.LineNumber &amp; &quot;:&quot;  &amp; e.LineNumber)\n      Console.WriteLine(ControlChars.Tab &amp; e.LinePosition &amp; &quot;:&quot;   &amp; e.LinePosition)\n      \n      Dim x As Group = CType( e.ObjectBeingDeserialized, Group)\n      Console.WriteLine (x.GroupName)\n      Console.WriteLine (sender.ToString())\n   End Sub\n   \n   Private Sub DeserializeObject(filename As String)\n      Dim ser As XmlSerializer = new XmlSerializer(GetType(Group))\n      &#39; Add a delegate to handle unknown element events.\n      AddHandler ser.UnknownElement, _\n      AddressOf Serializer_UnknownElement \n      &#39; A FileStream is needed to read the XML document.\n     Dim fs As FileStream  = new FileStream(filename, FileMode.Open)\n     Dim g  As Group = CType(ser.Deserialize(fs),Group)\n     fs.Close()\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementEventArgs_ExpectedElements\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementEventArgs_ExpectedElements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExpectedElements</div>        \r\n          </div>\r\n    \r\n            <p>Gets a comma-delimited list of XML element names expected to be in an XML document instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ExpectedElements { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A comma-delimited list of XML element names. Each name is in the following format: <code>namespace</code>:<code>name</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementEventArgs_LineNumber\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementEventArgs_LineNumber_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LineNumber</div>        \r\n          </div>\r\n    \r\n            <p>Gets the line number where the unknown element was encountered if the XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int LineNumber { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The line number where the unknown element was encountered if the XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LineNumber property returns a value only if the underlying XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes a class named <code>Group</code> from a file named UnknownElements.xml. Whenever an element is found in the file that has no corresponding member in the class, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> event occurs. To try the example, paste the following XML code into a file named UnknownElements.xml.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;GroupName&gt;MyGroup&lt;/GroupName&gt;  \n  &lt;GroupSize&gt;Large&lt;/GroupSize&gt;  \n  &lt;GroupNumber&gt;444&lt;/GroupNumber&gt;  \n  &lt;GroupBase&gt;West&lt;/GroupBase&gt;  \n&lt;/Group&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlSerializer.UnknownElement Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\nusing System.Xml;\nusing System.Xml.Schema;\n\npublic class Group{\n   public string GroupName;\n}\n\npublic class Test{\n   static void Main(){\n      Test t = new Test();\n      // Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;);\n   }\n   private void Serializer_UnknownElement(object sender, XmlElementEventArgs e){\n      Console.WriteLine(&quot;Unknown Element&quot;);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + e.Element.Name + &quot; &quot; + e.Element.InnerXml);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: &quot; + e.LineNumber);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: &quot; + e.LinePosition);\n      \n      Group x  = (Group) e.ObjectBeingDeserialized;\n      Console.WriteLine (x.GroupName);\n      Console.WriteLine (sender.ToString());\n   }\n   private void DeserializeObject(string filename){\n      XmlSerializer ser = new XmlSerializer(typeof(Group));\n      // Add a delegate to handle unknown element events.\n      ser.UnknownElement+=new XmlElementEventHandler(Serializer_UnknownElement);\n      // A FileStream is needed to read the XML document.\n     FileStream fs = new FileStream(filename, FileMode.Open);\n     Group g = (Group) ser.Deserialize(fs);\n     fs.Close();\n   \t}\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSerializer.UnknownElement Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml;\nusing namespace System::Xml::Schema;\n\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n};\n\npublic ref class Test\n{\nprivate:\n   void Serializer_UnknownElement( Object^ sender, XmlElementEventArgs^ e )\n   {\n      Console::WriteLine( &quot;Unknown Element&quot; );\n      Console::Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;, e-&gt;Element-&gt;Name );\n      Console::WriteLine( &quot; {0}&quot;, e-&gt;Element-&gt;InnerXml );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: {0}&quot;, e-&gt;LineNumber );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: {0}&quot;, e-&gt;LinePosition );\n      Group^ x = dynamic_cast&lt;Group^&gt;(e-&gt;ObjectBeingDeserialized);\n      Console::WriteLine( x-&gt;GroupName );\n      Console::WriteLine( sender );\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ ser = gcnew XmlSerializer( Group::typeid );\n\n      // Add a delegate to handle unknown element events.\n      ser-&gt;UnknownElement += gcnew XmlElementEventHandler( this, &amp;Test::Serializer_UnknownElement );\n\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      Group^ g = dynamic_cast&lt;Group^&gt;(ser-&gt;Deserialize( fs ));\n      fs-&gt;Close();\n   }\n};\n\nint main()\n{\n   Test^ t = gcnew Test;\n\n   // Deserialize the file containing unknown elements.\n   t-&gt;DeserializeObject( &quot;UnknownElements.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSerializer.UnknownElement Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports System.Xml\nImports System.Xml.Schema\nImports Microsoft.VisualBasic\n\nPublic Class Group\n   Public GroupName As String \nEnd Class\n\nPublic Class Test\n   Shared Sub Main()\n      Dim t As Test = new Test()\n      &#39; Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;)\n   End Sub\n\n   Private Sub Serializer_UnknownElement _\n   (sender As Object , e As XmlElementEventArgs)\n      Console.WriteLine(&quot;Unknown Element&quot;)\n      Console.WriteLine(ControlChars.Tab &amp; e.Element.Name + &quot; &quot; &amp; e.Element.InnerXml)\n      Console.WriteLine(ControlChars.Tab &amp; e.LineNumber &amp; &quot;:&quot;  &amp; e.LineNumber)\n      Console.WriteLine(ControlChars.Tab &amp; e.LinePosition &amp; &quot;:&quot;   &amp; e.LinePosition)\n      \n      Dim x As Group = CType( e.ObjectBeingDeserialized, Group)\n      Console.WriteLine (x.GroupName)\n      Console.WriteLine (sender.ToString())\n   End Sub\n   \n   Private Sub DeserializeObject(filename As String)\n      Dim ser As XmlSerializer = new XmlSerializer(GetType(Group))\n      &#39; Add a delegate to handle unknown element events.\n      AddHandler ser.UnknownElement, _\n      AddressOf Serializer_UnknownElement \n      &#39; A FileStream is needed to read the XML document.\n     Dim fs As FileStream  = new FileStream(filename, FileMode.Open)\n     Dim g  As Group = CType(ser.Deserialize(fs),Group)\n     fs.Close()\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementEventArgs_LinePosition\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementEventArgs_LinePosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LinePosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets the place in the line where the unknown element occurs if the XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int LinePosition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number in the line where the unknown element occurs if the XML reader is an <a class=\"xref\" href=\"system.xml.xmltextreader\" data-linktype=\"relative-path\">XmlTextReader</a>; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes a class named <code>Group</code> from a file named UnknownElements.xml. Whenever an element is found in the file that has no corresponding member in the class, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> event occurs. To try the example, paste the following XML code into a file named UnknownElements.xml.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;GroupName&gt;MyGroup&lt;/GroupName&gt;  \n  &lt;GroupSize&gt;Large&lt;/GroupSize&gt;  \n  &lt;GroupNumber&gt;444&lt;/GroupNumber&gt;  \n  &lt;GroupBase&gt;West&lt;/GroupBase&gt;  \n&lt;/Group&gt;  \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlSerializer.UnknownElement Example#1\">using System;\nusing System.IO;\nusing System.Xml.Serialization;\nusing System.Xml;\nusing System.Xml.Schema;\n\npublic class Group{\n   public string GroupName;\n}\n\npublic class Test{\n   static void Main(){\n      Test t = new Test();\n      // Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;);\n   }\n   private void Serializer_UnknownElement(object sender, XmlElementEventArgs e){\n      Console.WriteLine(&quot;Unknown Element&quot;);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + e.Element.Name + &quot; &quot; + e.Element.InnerXml);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: &quot; + e.LineNumber);\n      Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: &quot; + e.LinePosition);\n      \n      Group x  = (Group) e.ObjectBeingDeserialized;\n      Console.WriteLine (x.GroupName);\n      Console.WriteLine (sender.ToString());\n   }\n   private void DeserializeObject(string filename){\n      XmlSerializer ser = new XmlSerializer(typeof(Group));\n      // Add a delegate to handle unknown element events.\n      ser.UnknownElement+=new XmlElementEventHandler(Serializer_UnknownElement);\n      // A FileStream is needed to read the XML document.\n     FileStream fs = new FileStream(filename, FileMode.Open);\n     Group g = (Group) ser.Deserialize(fs);\n     fs.Close();\n   \t}\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlSerializer.UnknownElement Example#1\">#using &lt;System.Xml.dll&gt;\n#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml::Serialization;\nusing namespace System::Xml;\nusing namespace System::Xml::Schema;\n\npublic ref class Group\n{\npublic:\n   String^ GroupName;\n};\n\npublic ref class Test\n{\nprivate:\n   void Serializer_UnknownElement( Object^ sender, XmlElementEventArgs^ e )\n   {\n      Console::WriteLine( &quot;Unknown Element&quot; );\n      Console::Write( &quot;&nbsp;&nbsp;&nbsp;&nbsp; {0}&quot;, e-&gt;Element-&gt;Name );\n      Console::WriteLine( &quot; {0}&quot;, e-&gt;Element-&gt;InnerXml );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LineNumber: {0}&quot;, e-&gt;LineNumber );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; LinePosition: {0}&quot;, e-&gt;LinePosition );\n      Group^ x = dynamic_cast&lt;Group^&gt;(e-&gt;ObjectBeingDeserialized);\n      Console::WriteLine( x-&gt;GroupName );\n      Console::WriteLine( sender );\n   }\n\npublic:\n   void DeserializeObject( String^ filename )\n   {\n      XmlSerializer^ ser = gcnew XmlSerializer( Group::typeid );\n\n      // Add a delegate to handle unknown element events.\n      ser-&gt;UnknownElement += gcnew XmlElementEventHandler( this, &amp;Test::Serializer_UnknownElement );\n\n      // A FileStream is needed to read the XML document.\n      FileStream^ fs = gcnew FileStream( filename,FileMode::Open );\n      Group^ g = dynamic_cast&lt;Group^&gt;(ser-&gt;Deserialize( fs ));\n      fs-&gt;Close();\n   }\n};\n\nint main()\n{\n   Test^ t = gcnew Test;\n\n   // Deserialize the file containing unknown elements.\n   t-&gt;DeserializeObject( &quot;UnknownElements.xml&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlSerializer.UnknownElement Example#1\">Imports System\nImports System.IO\nImports System.Xml.Serialization\nImports System.Xml\nImports System.Xml.Schema\nImports Microsoft.VisualBasic\n\nPublic Class Group\n   Public GroupName As String \nEnd Class\n\nPublic Class Test\n   Shared Sub Main()\n      Dim t As Test = new Test()\n      &#39; Deserialize the file containing unknown elements.\n      t.DeserializeObject(&quot;UnknownElements.xml&quot;)\n   End Sub\n\n   Private Sub Serializer_UnknownElement _\n   (sender As Object , e As XmlElementEventArgs)\n      Console.WriteLine(&quot;Unknown Element&quot;)\n      Console.WriteLine(ControlChars.Tab &amp; e.Element.Name + &quot; &quot; &amp; e.Element.InnerXml)\n      Console.WriteLine(ControlChars.Tab &amp; e.LineNumber &amp; &quot;:&quot;  &amp; e.LineNumber)\n      Console.WriteLine(ControlChars.Tab &amp; e.LinePosition &amp; &quot;:&quot;   &amp; e.LinePosition)\n      \n      Dim x As Group = CType( e.ObjectBeingDeserialized, Group)\n      Console.WriteLine (x.GroupName)\n      Console.WriteLine (sender.ToString())\n   End Sub\n   \n   Private Sub DeserializeObject(filename As String)\n      Dim ser As XmlSerializer = new XmlSerializer(GetType(Group))\n      &#39; Add a delegate to handle unknown element events.\n      AddHandler ser.UnknownElement, _\n      AddressOf Serializer_UnknownElement \n      &#39; A FileStream is needed to read the XML document.\n     Dim fs As FileStream  = new FileStream(filename, FileMode.Open)\n     Dim g  As Group = CType(ser.Deserialize(fs),Group)\n     fs.Close()\n   End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Serialization_XmlElementEventArgs_ObjectBeingDeserialized\">\r\n    \r\n            <a id=\"System_Xml_Serialization_XmlElementEventArgs_ObjectBeingDeserialized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ObjectBeingDeserialized</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> is deserializing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object ObjectBeingDeserialized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The object that is being deserialized by the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example deserializes a class named <code>Group</code> from a file named UnknownElements.xml. Whenever an element is found in the file that has no corresponding member in the class, the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer#System_Xml_Serialization_XmlSerializer_UnknownElement\" data-linktype=\"relative-path\">UnknownElement</a> event occurs. To try the example, paste the following XML code into a file named UnknownElements.xml.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  \n&lt;Group xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;  \n  &lt;GroupName&gt;MyGroup&lt;/GroupName&gt;  \n  &lt;GroupSize&gt;Large&lt;/GroupSize&gt;  \n  &lt;GroupNumber&gt;444&lt;/GroupNumber&gt;  \n  &lt;GroupBase&gt;West&lt;/GroupBase&gt;  \n&lt;/Group&gt;  \n</code></pre><p> XmlSerializer.UnknownElement Example#1</p>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlElementEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlElementEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementEventArgs.Element\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementEventArgs.ExpectedElements\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementEventArgs.LineNumber\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementEventArgs.LinePosition\">\r\n<meta name=\"APIName\" content=\"System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ab1935ef-4b8c-7d46-9d4d-662a6f28bbed\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Serialization/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Serialization.XmlElementEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Serialization.XmlElementEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Serialization.XmlElementEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Xml.Serialization.XmlElementEventArgs","System.Xml.Serialization.XmlElementEventArgs.Element","System.Xml.Serialization.XmlElementEventArgs.ExpectedElements","System.Xml.Serialization.XmlElementEventArgs.LineNumber","System.Xml.Serialization.XmlElementEventArgs.LinePosition","System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Serialization.XmlElementEventArgs","System::Xml::Serialization::XmlElementEventArgs","System.Xml.Serialization.XmlElementEventArgs.Element","System::Xml::Serialization::XmlElementEventArgs::Element","System.Xml.Serialization.XmlElementEventArgs.ExpectedElements","System::Xml::Serialization::XmlElementEventArgs::ExpectedElements","System.Xml.Serialization.XmlElementEventArgs.LineNumber","System::Xml::Serialization::XmlElementEventArgs::LineNumber","System.Xml.Serialization.XmlElementEventArgs.LinePosition","System::Xml::Serialization::XmlElementEventArgs::LinePosition","System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized","System::Xml::Serialization::XmlElementEventArgs::ObjectBeingDeserialized"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ab1935ef-4b8c-7d46-9d4d-662a6f28bbed","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Serialization/XmlElementEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlElementEventArgs class | Microsoft Docs","_op_ogTitle":"XmlElementEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Xml.Serialization/toc.json","toc_rel":"_splitted/System.Xml.Serialization/toc.json","source_url":"","ms.assetid":"System.Xml.Serialization.XmlElementEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlelementeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.serialization.xmlelementeventargs","fileRelativePath":"System.Xml.Serialization.XmlElementEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}