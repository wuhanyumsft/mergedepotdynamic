{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">IDesignerLoaderService</span>\r\n      Interface\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides an interface that can extend a designer loader to support asynchronous loading of external components.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public interface IDesignerLoaderService</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>A <a class=\"xref\" href=\"system.componentmodel.design.serialization.designerloader\" data-linktype=\"relative-path\">DesignerLoader</a> can implement this interface to manage designer loading that involves external components. This interface also allows external components to initiate a reload of the design surface by calling <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderservice#System_ComponentModel_Design_Serialization_IDesignerLoaderService_Reload_\" data-linktype=\"relative-path\">Reload</a>. A designer loader does not have to implement this interface if it does not require support for asynchronous loading.  </p>\n<p> Designer loading using a custom implementation of the IDesignerLoaderService can occur in a variety of ways. Sometimes external components are involved in the loading process. To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed. The IDesignerLoaderService typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining. When each portion of the load completes, <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderservice#System_ComponentModel_Design_Serialization_IDesignerLoaderService_DependentLoadComplete_\" data-linktype=\"relative-path\">DependentLoadComplete</a> is called, and the service decrements the counter. To set the number of dependent load processes, call <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderservice#System_ComponentModel_Design_Serialization_IDesignerLoaderService_AddLoadDependency_\" data-linktype=\"relative-path\">AddLoadDependency</a> once for each load process that calls <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderservice#System_ComponentModel_Design_Serialization_IDesignerLoaderService_DependentLoadComplete_\" data-linktype=\"relative-path\">DependentLoadComplete</a> when its loading is complete. When the final loading is complete, the service calls <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderhost#System_ComponentModel_Design_Serialization_IDesignerLoaderHost_EndLoad_\" data-linktype=\"relative-path\">EndLoad</a> on the loader host.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_Serialization_IDesignerLoaderService_AddLoadDependency\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddLoadDependency()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Registers an external component as part of the load process managed by this interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void AddLoadDependency ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Call AddLoadDependency once for each external object participating in the load process. <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderservice#System_ComponentModel_Design_Serialization_IDesignerLoaderService_DependentLoadComplete_\" data-linktype=\"relative-path\">DependentLoadComplete</a> is called when the work of the load process is done.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_Serialization_IDesignerLoaderService_DependentLoadComplete_System_Boolean_System_Collections_ICollection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DependentLoadComplete(Boolean,ICollection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Signals that a dependent load has finished.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>successful</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the load of the designer is successful; <code>false</code> if errors prevented the load from finishing.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>errorCollection</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A collection of errors that occurred during the load, if any. If no errors occurred, pass either an empty collection or <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is called to signal that a dependent loading operation has completed. Call DependentLoadComplete once for every process that was registered by calling <a class=\"xref\" href=\"system.componentmodel.design.serialization.idesignerloaderservice#System_ComponentModel_Design_Serialization_IDesignerLoaderService_AddLoadDependency_\" data-linktype=\"relative-path\">AddLoadDependency</a>, which has already completed.  </p>\n<p> If the dependent load succeeds, the caller sets the <code>successful</code> parameter to <code>true</code> and passes either an empty collection or <code>null</code> to the <code>errorCollection</code> parameter. If the dependent load encounters errors, the caller sets the <code>successful</code> parameter to <code>false</code> and passes a collection of exceptions that indicate the reason or reasons for failure to the <code>errorCollection</code> parameter.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_ComponentModel_Design_Serialization_IDesignerLoaderService_Reload\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Reload()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reloads the design document.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Reload ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the reload request is accepted, or <code>false</code> if the loader does not allow the reload.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Any object can call this method to request that the loader reload the design document. If the loader supports reloading and complies with the reload, the designer loader can return <code>true</code>. Otherwise, it returns <code>false</code>, indicating that the reload will not occur. Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.  </p>\n<p> The caller can display a message to the user if the designer cannot be reloaded.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.Serialization.IDesignerLoaderService.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.Serialization.IDesignerLoaderService.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.IDesignerLoaderService\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a1e789f2-ac37-7c5d-2ae8-461865186698\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an interface that can extend a designer loader to support asynchronous loading of external components.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel.Design.Serialization/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.Design.Serialization.IDesignerLoaderService\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.Design.Serialization.IDesignerLoaderService.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.Design.Serialization.IDesignerLoaderService.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.Design.Serialization.IDesignerLoaderService","System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency","System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete","System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.Design.Serialization.IDesignerLoaderService","System::ComponentModel::Design::Serialization::IDesignerLoaderService","System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency","System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency","System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete","System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete","System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload","System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a1e789f2-ac37-7c5d-2ae8-461865186698","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel.Design.Serialization/IDesignerLoaderService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IDesignerLoaderService interface | Microsoft Docs","_op_ogTitle":"IDesignerLoaderService interface","description":"Provides an interface that can extend a designer loader to support asynchronous loading of external components.\n","toc_asset_id":"_splitted/System.ComponentModel.Design.Serialization/toc.json","toc_rel":"_splitted/System.ComponentModel.Design.Serialization/toc.json","source_url":"","ms.assetid":"System.ComponentModel.Design.Serialization.IDesignerLoaderService","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.serialization.idesignerloaderservice","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.design.serialization.idesignerloaderservice","fileRelativePath":"System.ComponentModel.Design.Serialization.IDesignerLoaderService.html"},"themesRelativePathToOutputRoot":"_themes/"}