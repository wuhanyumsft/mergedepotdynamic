{"content":"    \r\n    <h1 id=\"System_Threading_ThreadExceptionEventArgs\">\r\n      <span class=\"lang-csharp\">ThreadExceptionEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_ThreadException\" data-linktype=\"relative-path\">ThreadException</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class ThreadExceptionEventArgs : EventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">System.EventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ThreadExceptionEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A ThreadExceptionEventArgs is created by a thread when an unhandled exception occurs. ThreadExceptionEventArgs contains the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that occurred.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ThreadExceptionEventArgs__ctor_System_Exception_\" data-linktype=\"self-bookmark\">ThreadExceptionEventArgs(Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.threadexceptioneventargs\" data-linktype=\"relative-path\">ThreadExceptionEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_ThreadExceptionEventArgs_Exception\" data-linktype=\"self-bookmark\">Exception</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that occurred.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ThreadExceptionEventArgs__ctor_System_Exception_\">\r\n    \r\n            <a id=\"System_Threading_ThreadExceptionEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ThreadExceptionEventArgs(Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.threading.threadexceptioneventargs\" data-linktype=\"relative-path\">ThreadExceptionEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ThreadExceptionEventArgs (Exception t);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>t</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example allows you to raise a <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_ThreadException\" data-linktype=\"relative-path\">ThreadException</a> event by clicking <code>button1</code> on a form. The example creates two classes. The <code>ErrorHandler</code> class creates the form and the button that raises the event. The <code>CustomExceptionHandler</code> class provides the methods to handle the exception.  </p>\n<p> In <code>Main</code> in the <code>ErrorHandler</code> class, the code creates a new instance of the exception handling class, that is, an instance of the <code>CustomExceptionHandler</code>. Then the instance is added to the event, and the application is run.  </p>\n<p> In the <code>OnThreadException</code> method in the <code>CustomExceptionHandler</code> class, the example uses a <code>try...catch...finally</code> statement to process the exception. The <code>ShowThreadExceptionDialog</code> method creates the message to display, and displays it in a message box.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic ThreadExceptionEventArgs Example#1\">Imports System.Threading\nImports System.Windows.Forms\n\n&#39; Create a form with a button that, when clicked, throws an exception.\nPublic Class ErrorForm : Inherits Form\n    Friend WithEvents button1 As Button\n\n    Public Sub New()\n       &#39; Add the button to the form.\n      Me.button1 = New System.Windows.Forms.Button()\n      Me.SuspendLayout()\n      Me.button1.Location = New System.Drawing.Point(100, 43)\n      Me.button1.Size = New System.Drawing.Size(75, 23)\n      Me.button1.Text = &quot;Click!&quot;\n      Me.Controls.Add(Me.button1)\n\n      Me.Text = &quot;ThreadException&quot;\n      Me.ResumeLayout(False)\n   End Sub\n\n    &#39; Throw an exception when the button is clicked.\n    Private Sub button1_Click(sender As Object, e As System.EventArgs) _\n                Handles button1.Click\n        Throw New ArgumentException(&quot;The parameter was invalid.&quot;)\n    End Sub\n    \n    Public Shared Sub Main()\n        &#39; Add the event handler.\n        AddHandler Application.ThreadException,\n                   AddressOf CustomExceptionHandler.OnThreadException\n        \n        &#39; Start the example.\n        Application.Run(New ErrorForm())\n    End Sub\nEnd Class\n\n&#39; Create a class to handle the exception event.\nFriend Class CustomExceptionHandler\n    &#39;Handle the exception event.\n    Public Shared Sub OnThreadException(sender As Object, t As ThreadExceptionEventArgs)\n        Dim result As DialogResult = ShowThreadExceptionDialog(t.Exception)\n\n        &#39; Exit the program when the user clicks Abort.\n        If result = DialogResult.Abort Then\n            Application.Exit()\n        End If\n    End Sub\n     \n    &#39; Create and display the error message.\n    Private Shared Function ShowThreadExceptionDialog(e As Exception) As DialogResult\n        Dim errorMsg As String = &quot;An error occurred.  Please contact the &quot; &amp;\n            &quot;adminstrator with the following information:&quot; &amp;\n            vbCrLf &amp; vbCrLf\n        errorMsg &amp;= &quot;Exception Type: &quot; &amp; e.GetType().Name &amp; vbCrLf &amp; vbCrLf\n        errorMsg &amp;= e.Message &amp; vbCrLf &amp; vbCrLf\n        errorMsg &amp;= &quot;Stack Trace: &quot; &amp; vbCrLf &amp; e.StackTrace\n\n        Return MessageBox.Show(errorMsg, &quot;Application Error&quot;,\n               MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Stop)\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic ThreadExceptionEventArgs Example#1\">using System;\nusing System.Threading;\nusing System.Windows.Forms;\n\n// Create a form with a button that, when clicked, throws an exception.\n public class ErrorForm : System.Windows.Forms.Form\n {\n    internal Button button1;\n\n    public ErrorForm() : base()\n    {\n       // Add the button to the form.\n       this.button1 = new System.Windows.Forms.Button();\n       this.SuspendLayout();\n       this.button1.Location = new System.Drawing.Point(100, 43);\n       this.button1.Size = new System.Drawing.Size(75, 23);\n       this.button1.Text = &quot;Click!&quot;;\n       this.Controls.Add(this.button1);\n       this.button1.Click += new EventHandler(this.button1_Click);\n\n       this.Text = &quot;ThreadException&quot;;\n       this.ResumeLayout(false);\n    }\n\n    // Throw an exception when the button is clicked.\n    private void button1_Click(object sender, System.EventArgs e)\n    {\n       throw new ArgumentException(&quot;The parameter was invalid&quot;);\n    }\n \n    public static void Main()\n    {\n       // Add the event handler.\n       Application.ThreadException += new ThreadExceptionEventHandler(CustomExceptionHandler.OnThreadException);\n\n       // Start the example.\n       Application.Run(new ErrorForm());\n    }\n }\n \n // Create a class to handle the exception event.\n internal class CustomExceptionHandler\n {\n     // Handle the exception event\n    public static void OnThreadException(object sender, ThreadExceptionEventArgs t)\n    {\n       DialogResult result = ShowThreadExceptionDialog(t.Exception);\n\n       // Exit the program when the user clicks Abort.\n       if (result == DialogResult.Abort) \n          Application.Exit();\n    }\n \n    // Create and display the error message.\n    private static DialogResult ShowThreadExceptionDialog(Exception e)\n    {\n       string errorMsg = &quot;An error occurred.  Please contact the adminstrator &quot; +\n            &quot;with the following information:<br><br>&quot;;\n       errorMsg += String.Format(&quot;Exception Type: {0}<br><br>&quot;, e.GetType().Name);\n       errorMsg += &quot;<br><br>Stack Trace:<br>&quot; + e.StackTrace;\n       return MessageBox.Show(errorMsg, &quot;Application Error&quot;, \n            MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Stop);\n    }\n }\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_ThreadExceptionEventArgs_Exception\">\r\n    \r\n            <a id=\"System_Threading_ThreadExceptionEventArgs_Exception_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exception</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that occurred.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Exception Exception { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> that occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example allows you to raise a <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_ThreadException\" data-linktype=\"relative-path\">ThreadException</a> event by clicking <code>button1</code> on a form. The example creates two classes. The <code>ErrorHandler</code> class creates the form and the button that raises the event. The <code>CustomExceptionHandler</code> class provides the methods to handle the exception.  </p>\n<p> In <code>Main</code> in the <code>ErrorHandler</code> class, the code creates a new instance of the exception handling class, that is, an instance of the <code>CustomExceptionHandler</code>. Then the instance is added to the event, and the application is run.  </p>\n<p> In the <code>OnThreadException</code> method in the <code>CustomExceptionHandler</code> class, the example uses a <code>try...catch...finally</code> statement to process the exception. The <code>ShowThreadExceptionDialog</code> method creates the message to display, and displays it in a message box.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic ThreadExceptionEventArgs Example#1\">Imports System.Threading\nImports System.Windows.Forms\n\n&#39; Create a form with a button that, when clicked, throws an exception.\nPublic Class ErrorForm : Inherits Form\n    Friend WithEvents button1 As Button\n\n    Public Sub New()\n       &#39; Add the button to the form.\n      Me.button1 = New System.Windows.Forms.Button()\n      Me.SuspendLayout()\n      Me.button1.Location = New System.Drawing.Point(100, 43)\n      Me.button1.Size = New System.Drawing.Size(75, 23)\n      Me.button1.Text = &quot;Click!&quot;\n      Me.Controls.Add(Me.button1)\n\n      Me.Text = &quot;ThreadException&quot;\n      Me.ResumeLayout(False)\n   End Sub\n\n    &#39; Throw an exception when the button is clicked.\n    Private Sub button1_Click(sender As Object, e As System.EventArgs) _\n                Handles button1.Click\n        Throw New ArgumentException(&quot;The parameter was invalid.&quot;)\n    End Sub\n    \n    Public Shared Sub Main()\n        &#39; Add the event handler.\n        AddHandler Application.ThreadException,\n                   AddressOf CustomExceptionHandler.OnThreadException\n        \n        &#39; Start the example.\n        Application.Run(New ErrorForm())\n    End Sub\nEnd Class\n\n&#39; Create a class to handle the exception event.\nFriend Class CustomExceptionHandler\n    &#39;Handle the exception event.\n    Public Shared Sub OnThreadException(sender As Object, t As ThreadExceptionEventArgs)\n        Dim result As DialogResult = ShowThreadExceptionDialog(t.Exception)\n\n        &#39; Exit the program when the user clicks Abort.\n        If result = DialogResult.Abort Then\n            Application.Exit()\n        End If\n    End Sub\n     \n    &#39; Create and display the error message.\n    Private Shared Function ShowThreadExceptionDialog(e As Exception) As DialogResult\n        Dim errorMsg As String = &quot;An error occurred.  Please contact the &quot; &amp;\n            &quot;adminstrator with the following information:&quot; &amp;\n            vbCrLf &amp; vbCrLf\n        errorMsg &amp;= &quot;Exception Type: &quot; &amp; e.GetType().Name &amp; vbCrLf &amp; vbCrLf\n        errorMsg &amp;= e.Message &amp; vbCrLf &amp; vbCrLf\n        errorMsg &amp;= &quot;Stack Trace: &quot; &amp; vbCrLf &amp; e.StackTrace\n\n        Return MessageBox.Show(errorMsg, &quot;Application Error&quot;,\n               MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Stop)\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic ThreadExceptionEventArgs Example#1\">using System;\nusing System.Threading;\nusing System.Windows.Forms;\n\n// Create a form with a button that, when clicked, throws an exception.\n public class ErrorForm : System.Windows.Forms.Form\n {\n    internal Button button1;\n\n    public ErrorForm() : base()\n    {\n       // Add the button to the form.\n       this.button1 = new System.Windows.Forms.Button();\n       this.SuspendLayout();\n       this.button1.Location = new System.Drawing.Point(100, 43);\n       this.button1.Size = new System.Drawing.Size(75, 23);\n       this.button1.Text = &quot;Click!&quot;;\n       this.Controls.Add(this.button1);\n       this.button1.Click += new EventHandler(this.button1_Click);\n\n       this.Text = &quot;ThreadException&quot;;\n       this.ResumeLayout(false);\n    }\n\n    // Throw an exception when the button is clicked.\n    private void button1_Click(object sender, System.EventArgs e)\n    {\n       throw new ArgumentException(&quot;The parameter was invalid&quot;);\n    }\n \n    public static void Main()\n    {\n       // Add the event handler.\n       Application.ThreadException += new ThreadExceptionEventHandler(CustomExceptionHandler.OnThreadException);\n\n       // Start the example.\n       Application.Run(new ErrorForm());\n    }\n }\n \n // Create a class to handle the exception event.\n internal class CustomExceptionHandler\n {\n     // Handle the exception event\n    public static void OnThreadException(object sender, ThreadExceptionEventArgs t)\n    {\n       DialogResult result = ShowThreadExceptionDialog(t.Exception);\n\n       // Exit the program when the user clicks Abort.\n       if (result == DialogResult.Abort) \n          Application.Exit();\n    }\n \n    // Create and display the error message.\n    private static DialogResult ShowThreadExceptionDialog(Exception e)\n    {\n       string errorMsg = &quot;An error occurred.  Please contact the adminstrator &quot; +\n            &quot;with the following information:<br><br>&quot;;\n       errorMsg += String.Format(&quot;Exception Type: {0}<br><br>&quot;, e.GetType().Name);\n       errorMsg += &quot;<br><br>Stack Trace:<br>&quot; + e.StackTrace;\n       return MessageBox.Show(errorMsg, &quot;Application Error&quot;, \n            MessageBoxButtons.AbortRetryIgnore, MessageBoxIcon.Stop);\n    }\n }\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.ThreadExceptionEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.ThreadExceptionEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadExceptionEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadExceptionEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.ThreadExceptionEventArgs.Exception\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7a901b1e-28b3-8f5e-8d45-62bbefedfc85\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\ThreadExceptionEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.ThreadExceptionEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.ThreadExceptionEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.ThreadExceptionEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Threading.ThreadExceptionEventArgs","System.Threading.ThreadExceptionEventArgs..ctor","System.Threading.ThreadExceptionEventArgs.Exception"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.ThreadExceptionEventArgs","System::Threading::ThreadExceptionEventArgs","System.Threading.ThreadExceptionEventArgs.#ctor","System::Threading::ThreadExceptionEventArgs::#ctor","System.Threading.ThreadExceptionEventArgs.Exception","System::Threading::ThreadExceptionEventArgs::Exception"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7a901b1e-28b3-8f5e-8d45-62bbefedfc85","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Threading\\ThreadExceptionEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/ThreadExceptionEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ThreadExceptionEventArgs class | Microsoft Docs","_op_ogTitle":"ThreadExceptionEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.ThreadExceptionEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.threadexceptioneventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.threadexceptioneventargs","fileRelativePath":"System.Threading.ThreadExceptionEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}