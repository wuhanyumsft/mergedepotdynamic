{"content":"    \r\n    <h1 id=\"System_Windows_PropertyMetadata\">\r\n      <span class=\"lang-csharp\">PropertyMetadata</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class PropertyMetadata</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">PropertyMetadata</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Property metadata can be defined and used during dependency property registration when calling the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a> method (or variations for attached properties or read-only dependency properties), or after original owner registration when calling the <a class=\"xref\" href=\"system.windows.dependencypropertykey#System_Windows_DependencyPropertyKey_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a> method. <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_AddOwner_\" data-linktype=\"relative-path\">AddOwner</a> also takes property metadata.  </p>\n<p> This class is a concrete base class that can be used in each of these calls. However, it is very common to specify metadata using one of the derived classes such as <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata\" data-linktype=\"relative-path\">FrameworkPropertyMetadata</a>. These derived classes support more detailed metadata carried as Boolean property values, which are useful for either detecting or enabling some property system and layout behaviors that are only implemented at the WPF framework level.  </p>\n<p> Several properties of this class are read-write to the object model, but can only be written prior to the instance being used in a property system operation such as <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a> or <a class=\"xref\" href=\"system.windows.dependencypropertykey#System_Windows_DependencyPropertyKey_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a>. Each of these properties could also have been set by the constructor but are exposed so that <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_Merge_\" data-linktype=\"relative-path\">Merge</a> method implementations can set them.  </p>\n<p><a name=\"xamlTextUsage_PropertyMetadata\"></a>   </p>\n<h2 id=\"xaml-text-usage\">XAML Text Usage</h2>\n<p> This type, and members of this type, are not typically used in XAML.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata__ctor\" data-linktype=\"self-bookmark\">PropertyMetadata()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata__ctor_System_Object_\" data-linktype=\"self-bookmark\">PropertyMetadata(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with a specified default value for the dependency property that this metadata will be applied to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata__ctor_System_Windows_PropertyChangedCallback_\" data-linktype=\"self-bookmark\">PropertyMetadata(PropertyChangedCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with the specified <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation reference.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata__ctor_System_Object_System_Windows_PropertyChangedCallback_\" data-linktype=\"self-bookmark\">PropertyMetadata(Object,PropertyChangedCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with the specified default value and <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation reference.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata__ctor_System_Object_System_Windows_PropertyChangedCallback_System_Windows_CoerceValueCallback_\" data-linktype=\"self-bookmark\">PropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with the specified default value and callbacks.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata_CoerceValueCallback\" data-linktype=\"self-bookmark\">CoerceValueCallback</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a reference to a <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> implementation specified in this metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata_DefaultValue\" data-linktype=\"self-bookmark\">DefaultValue</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default value of the dependency property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata_IsSealed\" data-linktype=\"self-bookmark\">IsSealed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata_PropertyChangedCallback\" data-linktype=\"self-bookmark\">PropertyChangedCallback</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a reference to a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation specified in this metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata_Merge_System_Windows_PropertyMetadata_System_Windows_DependencyProperty_\" data-linktype=\"self-bookmark\">Merge(PropertyMetadata,DependencyProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Merges this metadata with the base metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_PropertyMetadata_OnApply_System_Windows_DependencyProperty_System_Type_\" data-linktype=\"self-bookmark\">OnApply(DependencyProperty,Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata__ctor\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyMetadata()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PropertyMetadata ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata__ctor_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyMetadata(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with a specified default value for the dependency property that this metadata will be applied to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PropertyMetadata (object defaultValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default value to specify for a dependency property, usually provided as a value of some specific type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>defaultValue</code> cannot be set to the value <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a>; see Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The type of the value provided for <code>defaultValue</code> must be match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to. Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation (the mismatch will raise a run-time exception).  </p>\n<p> Although it is the default per the parameterless constructor, a <code>defaultValue</code> of <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> cannot be specified. Attempting to do so will raise an exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#Initpm\">static PropertyMetadata pm;\n</code></pre><pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#PMCtor1param\">pm = new PropertyMetadata(Double.NaN);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata__ctor_System_Windows_PropertyChangedCallback_\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyMetadata(PropertyChangedCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with the specified <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation reference.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PropertyMetadata (System.Windows.PropertyChangedCallback propertyChangedCallback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyChangedCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#Initpm\">static PropertyMetadata pm;\n</code></pre><pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#PMCtor1paramcallback\">pm = new PropertyMetadata(new PropertyChangedCallback(OnCurrentReadingChanged));\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata__ctor_System_Object_System_Windows_PropertyChangedCallback_\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyMetadata(Object,PropertyChangedCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with the specified default value and <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation reference.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default value of the dependency property, usually provided as a value of some specific type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyChangedCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>defaultValue</code> cannot be set to the value <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a>; see Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The type of the value provided <code>defaultValue</code> must be match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to. Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation (the mismatch will raise a run-time exception).  </p>\n<p> Although it is the default per the parameterless constructor, a <code>defaultValue</code> of <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> cannot be specified. Attempting to do so will raise an exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#Initpm\">static PropertyMetadata pm;\n</code></pre><pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#PMCtor2param\">pm = new PropertyMetadata(\n    Double.NaN,\n    new PropertyChangedCallback(OnCurrentReadingChanged)\n);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata__ctor_System_Object_System_Windows_PropertyChangedCallback_System_Windows_CoerceValueCallback_\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyMetadata(Object,PropertyChangedCallback,CoerceValueCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> class with the specified default value and callbacks.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PropertyMetadata (object defaultValue, System.Windows.PropertyChangedCallback propertyChangedCallback, System.Windows.CoerceValueCallback coerceValueCallback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>defaultValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The default value of the dependency property, usually provided as a value of some specific type.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyChangedCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reference to a handler implementation that is to be called by the property system whenever the effective value of the property changes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>coerceValueCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Reference to a handler implementation that is to be called whenever the property system calls <span class=\"xref\">stem.Windows.DependencyObject.CoerceValue*</span> against this property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>defaultValue</code> cannot be set to the value <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a>; see Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you want to specify a <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> but not a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a>, you can pass <code>null</code> for the <code>propertyChangedCallback</code> parameter.  </p>\n<p> The type of the value provided for <code>defaultValue</code> must be match or be related to the type specified in the original registration of the dependency property that this metadata will be applied to. Mismatches between metadata default value type and the type of the dependency property it is being applied to can be difficult to debug, because the mismatch is not detectable during compilation (the mismatch will raise a run-time exception).  </p>\n<p> Although it is the default per the parameterless constructor, a <code>defaultValue</code> of <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> cannot be specified. Attempting to do so will raise an exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#Initpm\">static PropertyMetadata pm;\n</code></pre><pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#PMCtor3param\">pm = new PropertyMetadata(\n    Double.NaN,\n    new PropertyChangedCallback(OnCurrentReadingChanged),\n    new CoerceValueCallback(CoerceCurrentReading)\n);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata_CoerceValueCallback\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata_CoerceValueCallback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CoerceValueCallback</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a reference to a <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> implementation specified in this metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.CoerceValueCallback CoerceValueCallback { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> implementation reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Cannot set a metadata property once it is applied to a dependency property operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The callbacks in property metadata are not typically public members on the containing type, so the value of this property is not important for most scenarios that just consume an existing dependency property&#39;s metadata. One reason this property is exposed is so that metadata subclasses can perform their desired merge logic if both base metadata and overriding/adding metadata specify a <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a>. However, the default merge logic for a CoerceValueCallback is to replace the previous one.  </p>\n<p> CoerceValueCallback is defined in the object model as read-write. This is so CoerceValueCallback can be adjusted after initialization of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> object itself. However, once the metadata is consumed as part of a call to <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a>, <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_AddOwner_\" data-linktype=\"relative-path\">AddOwner</a>, or <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a>, the property system will seal that metadata instance and the properties are now considered immutable. Attempting to set CoerceValueCallback once <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_IsSealed_\" data-linktype=\"relative-path\">IsSealed</a> is <code>true</code> on this metadata instance will raise an exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata_DefaultValue\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata_DefaultValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultValue</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default value of the dependency property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object DefaultValue { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The default value of the property. The default value on a <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> instance created with the parameterless constructor will be <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a>; see Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Cannot be set to the value <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> once created; see Remarks.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Cannot set a metadata property once it is applied to a dependency property operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>DefaultValue is defined in the object model as read-write. This is so DefaultValue can be adjusted after initialization of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> object itself. However, once the metadata is consumed as part of a call to <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a>, <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_AddOwner_\" data-linktype=\"relative-path\">AddOwner</a>, or <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a>, the property system will seal that metadata instance and the properties are now considered immutable. Attempting to set DefaultValue once <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_IsSealed_\" data-linktype=\"relative-path\">IsSealed</a> is <code>true</code> on this metadata instance will raise an exception.  </p>\n<p> Although it is the default per the parameterless constructor, a <code>defaultValue</code> of <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> cannot be set using either DefaultValue or the constructor. Attempting to do so will raise an exception.  </p>\n<p><a name=\"xamlTextUsage_PropertyChangedCallback\"></a>   </p>\n<h2 id=\"xaml-text-usage\">XAML Text Usage</h2>\n<p> Members of this type are not typically used in XAML.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata_IsSealed\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata_IsSealed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSealed</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that determines whether the metadata has been applied to a property in some way, resulting in the immutable state of that metadata instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsSealed { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the metadata instance is immutable; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Various properties of <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a>, such as <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_DefaultValue_\" data-linktype=\"relative-path\">DefaultValue</a>, are defined in the object model as read-write. This is so those properties can be adjusted after initialization of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> object itself. However, once the metadata is applied to a dependency property as part of a call to <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a>, <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_AddOwner_\" data-linktype=\"relative-path\">AddOwner</a>, or <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a>, the property system will seal that metadata instance and the properties are now considered immutable. At the time of one of these calls, <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_OnApply_\" data-linktype=\"relative-path\">OnApply</a> is called, and the value of this property is set to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example  checks IsSealed prior to a set operation of a custom metadata property.  </p>\n<pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#MergeImpl\">public Boolean SupportsMyFeature\n{\n    get { return _supportsMyFeature; }\n    set { if (this.IsSealed != true) _supportsMyFeature = value; } //else may want to raise exception \n}\nprotected override void Merge(PropertyMetadata baseMetadata, DependencyProperty dp)\n{\n    base.Merge(baseMetadata, dp);\n    MyCustomPropertyMetadata mcpm = baseMetadata as MyCustomPropertyMetadata;\n    if (mcpm != null)\n    {\n        if (this.SupportsMyFeature == false)\n        {//if not set, revert to base\n            this.SupportsMyFeature = mcpm.SupportsMyFeature;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata_PropertyChangedCallback\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata_PropertyChangedCallback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyChangedCallback</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a reference to a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation specified in this metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.PropertyChangedCallback PropertyChangedCallback { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> implementation reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>Cannot set a metadata property once it is applied to a dependency property operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The callbacks in property metadata are not typically public members on the defining type, so the value of this property is not important for most scenarios that just consume an existing dependency property&#39;s metadata. One reason this property is exposed is so that metadata classes can perform their desired merge logic if both base metadata and overriding/adding metadata specify a <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a>. The default merge logic for is to maintain all PropertyChangedCallback implementations in a table and call each of them, with callbacks established by the deepest class in hierarchy running first.  </p>\n<p> PropertyChangedCallback is defined in the object model as read-write. This is so PropertyChangedCallback can be adjusted after initialization of the <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> object itself. However, once the metadata is consumed as part of a call to <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_Register_\" data-linktype=\"relative-path\">Register</a>, <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_AddOwner_\" data-linktype=\"relative-path\">AddOwner</a>, or <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a>, the property system will seal that metadata instance and the properties are now considered immutable. Attempting to set PropertyChangedCallback once <a class=\"xref\" href=\"system.windows.propertymetadata#System_Windows_PropertyMetadata_IsSealed_\" data-linktype=\"relative-path\">IsSealed</a> is <code>true</code> on this metadata instance will raise an exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata_Merge_System_Windows_PropertyMetadata_System_Windows_DependencyProperty_\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata_Merge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Merge(PropertyMetadata,DependencyProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Merges this metadata with the base metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Merge (System.Windows.PropertyMetadata baseMetadata, System.Windows.DependencyProperty dp);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseMetadata</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The base metadata to merge with this instance&#39;s values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The dependency property to which this metadata is being applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used internally when metadata is being overridden (<a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a> method).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example implements a merge for a custom metadata type that adds an additional property to the property metadata.  </p>\n<pre><code class=\"lang-cs\" name=\"PropertyMetadataAPIs#MergeImpl\">public Boolean SupportsMyFeature\n{\n    get { return _supportsMyFeature; }\n    set { if (this.IsSealed != true) _supportsMyFeature = value; } //else may want to raise exception \n}\nprotected override void Merge(PropertyMetadata baseMetadata, DependencyProperty dp)\n{\n    base.Merge(baseMetadata, dp);\n    MyCustomPropertyMetadata mcpm = baseMetadata as MyCustomPropertyMetadata;\n    if (mcpm != null)\n    {\n        if (this.SupportsMyFeature == false)\n        {//if not set, revert to base\n            this.SupportsMyFeature = mcpm.SupportsMyFeature;\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_PropertyMetadata_OnApply_System_Windows_DependencyProperty_System_Type_\">\r\n    \r\n            <a id=\"System_Windows_PropertyMetadata_OnApply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnApply(DependencyProperty,Type)</div>        \r\n          </div>\r\n    \r\n            <p>Called when this metadata has been applied to a property, which indicates that the metadata is being sealed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnApply (System.Windows.DependencyProperty dp, Type targetType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dp</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The dependency property to which the metadata has been applied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value is a null reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Subclasses should assure that any mutability of the data structure of a <a class=\"xref\" href=\"system.windows.propertymetadata\" data-linktype=\"relative-path\">PropertyMetadata</a> subclass should be marked as immutable once OnApply is called. This will be called once the metadata is applied to a property system operation (register, add owner, override metadata).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.PropertyMetadata.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.PropertyMetadata.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata.CoerceValueCallback\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata.DefaultValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata.IsSealed\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata.Merge\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata.OnApply\">\r\n<meta name=\"APIName\" content=\"System.Windows.PropertyMetadata.PropertyChangedCallback\">\r\n<meta name=\"APILocation\" content=\"WindowsBase.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"42fc4e98-8c5d-5d22-98d2-096e8455b789\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.PropertyMetadata\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.PropertyMetadata.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.PropertyMetadata.yml","open_to_public_contributors":true,"api_name":["System.Windows.PropertyMetadata","System.Windows.PropertyMetadata..ctor","System.Windows.PropertyMetadata.CoerceValueCallback","System.Windows.PropertyMetadata.DefaultValue","System.Windows.PropertyMetadata.IsSealed","System.Windows.PropertyMetadata.Merge","System.Windows.PropertyMetadata.OnApply","System.Windows.PropertyMetadata.PropertyChangedCallback"],"api_location":["WindowsBase.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.PropertyMetadata","System::Windows::PropertyMetadata","System.Windows.PropertyMetadata.#ctor","System::Windows::PropertyMetadata::#ctor","System.Windows.PropertyMetadata.CoerceValueCallback","System::Windows::PropertyMetadata::CoerceValueCallback","System.Windows.PropertyMetadata.DefaultValue","System::Windows::PropertyMetadata::DefaultValue","System.Windows.PropertyMetadata.IsSealed","System::Windows::PropertyMetadata::IsSealed","System.Windows.PropertyMetadata.Merge","System::Windows::PropertyMetadata::Merge","System.Windows.PropertyMetadata.OnApply","System::Windows::PropertyMetadata::OnApply","System.Windows.PropertyMetadata.PropertyChangedCallback","System::Windows::PropertyMetadata::PropertyChangedCallback"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"42fc4e98-8c5d-5d22-98d2-096e8455b789","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows/PropertyMetadata.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PropertyMetadata class | Microsoft Docs","_op_ogTitle":"PropertyMetadata class","description":"Defines certain behavior aspects of a dependency property as it is applied to a specific type, including conditions it was registered with.\n","toc_asset_id":"_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.PropertyMetadata","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.propertymetadata","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.propertymetadata","fileRelativePath":"System.Windows.PropertyMetadata.html"},"themesRelativePathToOutputRoot":"_themes/"}