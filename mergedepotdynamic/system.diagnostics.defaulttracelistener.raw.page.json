{"content":"    \r\n    <h1 id=\"System_Diagnostics_DefaultTraceListener\">\r\n      <span class=\"lang-csharp\">DefaultTraceListener</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the default output methods and behavior for tracing.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class DefaultTraceListener : System.Diagnostics.TraceListener</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener\" data-linktype=\"relative-path\">System.Diagnostics.TraceListener</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DefaultTraceListener</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Close\" data-linktype=\"relative-path\">Close()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Filter\" data-linktype=\"relative-path\">Filter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Flush\" data-linktype=\"relative-path\">Flush()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_GetSupportedAttributes\" data-linktype=\"relative-path\">GetSupportedAttributes()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IndentLevel\" data-linktype=\"relative-path\">IndentLevel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IndentSize\" data-linktype=\"relative-path\">IndentSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_IsThreadSafe\" data-linktype=\"relative-path\">IsThreadSafe</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_NeedIndent\" data-linktype=\"relative-path\">NeedIndent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceData_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_Object_\" data-linktype=\"relative-path\">TraceData(TraceEventCache,String,TraceEventType,Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceData_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_Object___\" data-linktype=\"relative-path\">TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache,String,TraceEventType,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_String_\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceEvent_System_Diagnostics_TraceEventCache_System_String_System_Diagnostics_TraceEventType_System_Int32_System_String_System_Object___\" data-linktype=\"relative-path\">TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceOutputOptions\" data-linktype=\"relative-path\">TraceOutputOptions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_TraceTransfer_System_Diagnostics_TraceEventCache_System_String_System_Int32_System_String_System_Guid_\" data-linktype=\"relative-path\">TraceTransfer(TraceEventCache,String,Int32,String,Guid)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_Object_\" data-linktype=\"relative-path\">Write(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_Object_System_String_\" data-linktype=\"relative-path\">Write(Object,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_Write_System_String_System_String_\" data-linktype=\"relative-path\">Write(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteIndent\" data-linktype=\"relative-path\">WriteIndent()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_Object_\" data-linktype=\"relative-path\">WriteLine(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_Object_System_String_\" data-linktype=\"relative-path\">WriteLine(Object,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_WriteLine_System_String_System_String_\" data-linktype=\"relative-path\">WriteLine(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An instance of this class is automatically added to the <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Listeners_\" data-linktype=\"relative-path\">Listeners</a> and <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collections. Explicitly adding a second DefaultTraceListener causes duplicate messages in the debugger output window and duplicate message boxes for asserts.  </p>\n<p> By default, the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Write_\" data-linktype=\"relative-path\">Write</a> and <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> methods emit the message to the Win32 <code>OutputDebugString</code> function and to the <a class=\"xref\" href=\"system.diagnostics.debugger#System_Diagnostics_Debugger_Log_\" data-linktype=\"relative-path\">Log</a> method. For information about the <code>OutputDebugString</code> function, see the Platform SDK or MSDN.  </p>\n<p> The <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Fail_\" data-linktype=\"relative-path\">Fail</a> method, by default, displays a message box when the application is running in a user interface mode; it also emits the message using <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The display of the message box for <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Assert_\" data-linktype=\"relative-path\">Assert</a> and <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_Fail_\" data-linktype=\"relative-path\">Fail</a> method calls depends on the presence of the DefaultTraceListener. If the DefaultTraceListener is not in the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, the message box is not displayed. The DefaultTraceListener can be removed by the <a href=\"../Topic/%3Cclear%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&lt;clear&gt; element</a>, by the <a href=\"../Topic/%3Cremove%3E%20Element%20for%20%3Clisteners%3E%20for%20%3Ctrace%3E.md\" data-linktype=\"relative-path\">&lt;remove&gt; element</a>, or by calling the <a class=\"xref\" href=\"system.diagnostics.tracelistenercollection#System_Diagnostics_TraceListenerCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method on the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> property (<code>System.Diagnostics.Trace.Listeners.Clear()</code>).  </p>\n</div>\n<p> You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.  </p>\n<ul>\n<li><p>To enable debugging in C#, add the <code>/d:DEBUG</code> flag to the compiler command line when you compile your code, or add <code>#define DEBUG</code> to the top of your file. In Visual Basic, add the <code>/d:DEBUG=True</code> flag to the compiler command line.  </p>\n</li>\n<li><p>To enable tracing in C#, add the <code>/d:TRACE</code> flag to the compiler command line when you compile your code, or add <code>#define TRACE</code> to the top of your file. In Visual Basic, add the <code>/d:TRACE=True</code> flag to the compiler command line.  </p>\n<p>To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted similar to the following example:  </p>\n</li>\n</ul>\n<pre><code>&lt;configuration&gt;  \n&lt;system.diagnostics&gt;  \n  &lt;trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;&gt;  \n    &lt;listeners&gt;  \n      &lt;remove name=&quot;Default&quot; /&gt;  \n      &lt;add name=&quot;myListener&quot;  type=&quot;System.Diagnostics.TextWriterTraceListener&quot;    initializeData=&quot;c:\\myListener.log&quot; /&gt;  \n    &lt;/listeners&gt;  \n  &lt;/trace&gt;  \n&lt;/system.diagnostics&gt;  \n&lt;/configuration&gt;\n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener__ctor\" data-linktype=\"self-bookmark\">DefaultTraceListener()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> class with &quot;Default&quot; as its <span class=\"xref\">stem.Diagnostics.TraceListener.Name*</span> property value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener_AssertUiEnabled\" data-linktype=\"self-bookmark\">AssertUiEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the application is running in user-interface mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener_LogFileName\" data-linktype=\"self-bookmark\">LogFileName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of a log file to write trace or debug messages to.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener_Fail_System_String_\" data-linktype=\"self-bookmark\">Fail(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Emits or displays a message and a stack trace for an assertion that always fails.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener_Fail_System_String_System_String_\" data-linktype=\"self-bookmark\">Fail(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Emits or displays detailed messages and a stack trace for an assertion that always fails.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the output to the <code>OutputDebugString</code> function and to the <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Diagnostics_DefaultTraceListener_WriteLine_System_String_\" data-linktype=\"self-bookmark\">WriteLine(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the output to the <code>OutputDebugString</code> function and to the <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span> method, followed by a carriage return and line feed (\\r\\n).</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener__ctor\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultTraceListener()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> class with &quot;Default&quot; as its <span class=\"xref\">stem.Diagnostics.TraceListener.Name*</span> property value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DefaultTraceListener ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example removes the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> provided by the application from the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection and then creates a new <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> and adds it to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener#3\">        // Remove the original default trace listener.\n        Trace.Listeners.RemoveAt(0);\n\n        // Create and add a new default trace listener.\n        DefaultTraceListener defaultListener;\n        defaultListener = new DefaultTraceListener();\n        Trace.Listeners.Add(defaultListener);\n\n        // Assign the log file specification from the command line, if entered.\n        if (args.Length&gt;=2)\n        {\n            defaultListener.LogFileName = args[1];\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener#3\">        &#39; Remove the original default trace listener.\n        Trace.Listeners.RemoveAt(0)\n\n        &#39; Create and add a new default trace listener.\n        Dim defaultListener As DefaultTraceListener\n        defaultListener = New DefaultTraceListener\n        Trace.Listeners.Add(defaultListener)\n\n        &#39; Assign the log file specification from the command line, if entered.\n        If args.Length &gt;= 2 Then\n            defaultListener.LogFileName = args(1)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener_AssertUiEnabled\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener_AssertUiEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AssertUiEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the application is running in user-interface mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AssertUiEnabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if user-interface mode is enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example calls a function that calls the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener#System_Diagnostics_DefaultTraceListener_Fail_System_String_System_String_\" data-linktype=\"relative-path\">Fail(String,String)</a> method to log an error message if the function throws an exception. If the AssertUiEnabled property is <code>false</code>, the method also writes the error message to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener#8\">            // Compute the next binomial coefficient and handle all exceptions.\n            try\n            {\n                result = CalcBinomial(possibilities, iter);\n            }\n            catch(Exception ex)\n            {\n                string failMessage = String.Format(&quot;An exception was raised when &quot; +\n                    &quot;calculating Binomial( {0}, {1} ).&quot;, possibilities, iter);\n                defaultListener.Fail(failMessage, ex.Message);\n                if (!defaultListener.AssertUiEnabled)\n                {\n                    Console.WriteLine(failMessage+ &quot;<br>&quot; +ex.Message);\n                }\n                return;\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener#8\">            &#39; Compute the next binomial coefficient and handle all exceptions.\n            Try\n                result = CalcBinomial(possibilities, iter)\n            Catch ex As Exception\n                Dim failMessage As String = String.Format( _\n                        &quot;An exception was raised when &quot; &amp; _\n                        &quot;calculating Binomial( {0}, {1} ).&quot;, _\n                        possibilities, iter)\n                defaultListener.Fail(failmessage, ex.Message)\n                If Not defaultListener.AssertUiEnabled Then\n                    Console.WriteLine(failMessage &amp; vbCrLf &amp; ex.Message)\n                End If\n                Return\n            End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener_LogFileName\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener_LogFileName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LogFileName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of a log file to write trace or debug messages to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string LogFileName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of a log file to write trace or debug messages to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>, adds it to the <a class=\"xref\" href=\"system.diagnostics.trace#System_Diagnostics_Trace_Listeners_\" data-linktype=\"relative-path\">Listeners</a> collection, and sets the LogFileName property to the log file specified in the command-line arguments.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener#4\">        // Create and add a new default trace listener.\n        DefaultTraceListener defaultListener;\n        defaultListener = new DefaultTraceListener();\n        Trace.Listeners.Add(defaultListener);\n\n        // Assign the log file specification from the command line, if entered.\n        if (args.Length&gt;=2)\n        {\n            defaultListener.LogFileName = args[1];\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener#4\">        &#39; Create and add a new default trace listener.\n        Dim defaultListener As DefaultTraceListener\n        defaultListener = New DefaultTraceListener\n        Trace.Listeners.Add(defaultListener)\n\n        &#39; Assign the log file specification from the command line, if entered.\n        If args.Length &gt;= 2 Then\n            defaultListener.LogFileName = args(1)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener_Fail_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener_Fail_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Fail(String)</div>        \r\n          </div>\r\n    \r\n            <p>Emits or displays a message and a stack trace for an assertion that always fails.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Fail (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to emit or display.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, this method sends the <code>message</code> parameter and a stack trace to a message box (when the application runs in user-interface mode) and to the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example writes an error message to a <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> using the Fail method. The method also writes the message to the console if a user interface is not available.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener#6\">            // Report that the required argument is not present.\n            const string ENTER_PARAM = &quot;Enter the number of &quot; +\n                      &quot;possibilities as a command line argument.&quot;;\n            defaultListener.Fail(ENTER_PARAM);\n            if (!defaultListener.AssertUiEnabled)\n            {\n                Console.WriteLine(ENTER_PARAM);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener#6\">            &#39; Report that the required argument is not present.\n            Const ENTER_PARAM As String = &quot;Enter the number of &quot; &amp; _\n                &quot;possibilities as a command line argument.&quot;\n            defaultListener.Fail(ENTER_PARAM)\n            If Not defaultListener.AssertUiEnabled Then\n                Console.WriteLine(ENTER_PARAM)\n            End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener_Fail_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener_Fail_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Fail(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Emits or displays detailed messages and a stack trace for an assertion that always fails.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Fail (string message, string detailMessage);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to emit or display.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>detailMessage</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The detailed message to emit or display.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, this method sends the <code>message</code> parameter, the <code>detailMessage</code> parameter, and a stack trace to a message box (when the application runs in user-interface mode) and to the <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a> instance.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example calls a function that calls the Fail method to log a detailed error message if the function throws an exception. The method writes the message to the console if a user interface is not available.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener#8\">            // Compute the next binomial coefficient and handle all exceptions.\n            try\n            {\n                result = CalcBinomial(possibilities, iter);\n            }\n            catch(Exception ex)\n            {\n                string failMessage = String.Format(&quot;An exception was raised when &quot; +\n                    &quot;calculating Binomial( {0}, {1} ).&quot;, possibilities, iter);\n                defaultListener.Fail(failMessage, ex.Message);\n                if (!defaultListener.AssertUiEnabled)\n                {\n                    Console.WriteLine(failMessage+ &quot;<br>&quot; +ex.Message);\n                }\n                return;\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener#8\">            &#39; Compute the next binomial coefficient and handle all exceptions.\n            Try\n                result = CalcBinomial(possibilities, iter)\n            Catch ex As Exception\n                Dim failMessage As String = String.Format( _\n                        &quot;An exception was raised when &quot; &amp; _\n                        &quot;calculating Binomial( {0}, {1} ).&quot;, _\n                        possibilities, iter)\n                defaultListener.Fail(failmessage, ex.Message)\n                If Not defaultListener.AssertUiEnabled Then\n                    Console.WriteLine(failMessage &amp; vbCrLf &amp; ex.Message)\n                End If\n                Return\n            End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener_Write_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the output to the <code>OutputDebugString</code> function and to the <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Write (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to write to <code>OutputDebugString</code> and <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For information about the Win32 <code>OutputDebugString</code> debugging function, see &quot;OutputDebugString&quot; in the Platform SDK or MSDN.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example formats the results of a function and uses the Write method to write the first part of the message to a <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener.WriteLine#4\">            &#39; Compute the next binomial coefficient.  \n            &#39; If an exception is thrown, quit.\n            Dim result As Decimal = CalcBinomial(possibilities, iter)\n            If result = 0 Then Return\n\n            &#39; Format the trace and console output.\n            Dim binomial As String = String.Format( _\n                    &quot;Binomial( {0}, {1} ) = &quot;, possibilities, iter)\n            defaultListener.Write(binomial)\n            defaultListener.WriteLine(result.ToString)\n            Console.WriteLine(&quot;{0} {1}&quot;, binomial, result)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener.WriteLine#4\">            // Compute the next binomial coefficient.  \n            // If an exception is thrown, quit.\n            decimal result = CalcBinomial(possibilities, iter);\n            if (result==0) {return;}\n\n            // Format the trace and console output.\n            string binomial = String.Format(&quot;Binomial( {0}, {1} ) = &quot;, possibilities, iter);\n            defaultListener.Write(binomial);\n            defaultListener.WriteLine(result.ToString());\n            Console.WriteLine(&quot;{0} {1}&quot;, binomial, result);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Diagnostics_DefaultTraceListener_WriteLine_System_String_\">\r\n    \r\n            <a id=\"System_Diagnostics_DefaultTraceListener_WriteLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteLine(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the output to the <code>OutputDebugString</code> function and to the <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span> method, followed by a carriage return and line feed (\\r\\n).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteLine (string message);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>message</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The message to write to <code>OutputDebugString</code> and <span class=\"xref\">stem.Diagnostics.Debugger.Log*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default line terminator is a carriage return followed by a line feed (\\r\\n).  </p>\n<p> For information about the Win32 <code>OutputDebugString</code> debugging function, see the Platform SDK or MSDN.  </p>\n<p> This method sets the <a class=\"xref\" href=\"system.diagnostics.tracelistener#System_Diagnostics_TraceListener_NeedIndent_\" data-linktype=\"relative-path\">NeedIndent</a> property to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example formats the results of a function and uses the WriteLine method to write the last part of the message to a <a class=\"xref\" href=\"system.diagnostics.defaulttracelistener\" data-linktype=\"relative-path\">DefaultTraceListener</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Diagnostics.DefaultTraceListener.WriteLine#4\">            &#39; Compute the next binomial coefficient.  \n            &#39; If an exception is thrown, quit.\n            Dim result As Decimal = CalcBinomial(possibilities, iter)\n            If result = 0 Then Return\n\n            &#39; Format the trace and console output.\n            Dim binomial As String = String.Format( _\n                    &quot;Binomial( {0}, {1} ) = &quot;, possibilities, iter)\n            defaultListener.Write(binomial)\n            defaultListener.WriteLine(result.ToString)\n            Console.WriteLine(&quot;{0} {1}&quot;, binomial, result)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Diagnostics.DefaultTraceListener.WriteLine#4\">            // Compute the next binomial coefficient.  \n            // If an exception is thrown, quit.\n            decimal result = CalcBinomial(possibilities, iter);\n            if (result==0) {return;}\n\n            // Format the trace and console output.\n            string binomial = String.Format(&quot;Binomial( {0}, {1} ) = &quot;, possibilities, iter);\n            defaultListener.Write(binomial);\n            defaultListener.WriteLine(result.ToString());\n            Console.WriteLine(&quot;{0} {1}&quot;, binomial, result);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.DefaultTraceListener.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.DefaultTraceListener.yml\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener..ctor\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.AssertUiEnabled\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.Fail\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.LogFileName\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.Write\">\r\n<meta name=\"APIName\" content=\"System.Diagnostics.DefaultTraceListener.WriteLine\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"eaa7259e-ece9-30f2-c07d-10c5b44639d9\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\DefaultTraceListener.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the default output methods and behavior for tracing.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Diagnostics/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Diagnostics.DefaultTraceListener\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Diagnostics.DefaultTraceListener.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Diagnostics.DefaultTraceListener.yml","open_to_public_contributors":true,"api_name":["System.Diagnostics.DefaultTraceListener","System.Diagnostics.DefaultTraceListener..ctor","System.Diagnostics.DefaultTraceListener.AssertUiEnabled","System.Diagnostics.DefaultTraceListener.Fail","System.Diagnostics.DefaultTraceListener.LogFileName","System.Diagnostics.DefaultTraceListener.Write","System.Diagnostics.DefaultTraceListener.WriteLine"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Diagnostics.DefaultTraceListener","System::Diagnostics::DefaultTraceListener","System.Diagnostics.DefaultTraceListener.#ctor","System::Diagnostics::DefaultTraceListener::#ctor","System.Diagnostics.DefaultTraceListener.AssertUiEnabled","System::Diagnostics::DefaultTraceListener::AssertUiEnabled","System.Diagnostics.DefaultTraceListener.Fail","System::Diagnostics::DefaultTraceListener::Fail","System.Diagnostics.DefaultTraceListener.LogFileName","System::Diagnostics::DefaultTraceListener::LogFileName","System.Diagnostics.DefaultTraceListener.Write","System::Diagnostics::DefaultTraceListener::Write","System.Diagnostics.DefaultTraceListener.WriteLine","System::Diagnostics::DefaultTraceListener::WriteLine"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"eaa7259e-ece9-30f2-c07d-10c5b44639d9","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Diagnostics\\DefaultTraceListener.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Diagnostics/DefaultTraceListener.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DefaultTraceListener class | Microsoft Docs","_op_ogTitle":"DefaultTraceListener class","description":"Provides the default output methods and behavior for tracing.\n","toc_asset_id":"_splitted/System.Diagnostics/toc.json","toc_rel":"_splitted/System.Diagnostics/toc.json","source_url":"","ms.assetid":"System.Diagnostics.DefaultTraceListener","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.defaulttracelistener","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.diagnostics.defaulttracelistener","fileRelativePath":"System.Diagnostics.DefaultTraceListener.html"},"themesRelativePathToOutputRoot":"_themes/"}