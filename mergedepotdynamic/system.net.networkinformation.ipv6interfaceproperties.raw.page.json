{"content":"    \r\n    <h1 id=\"System_Net_NetworkInformation_IPv6InterfaceProperties\">\r\n      <span class=\"lang-csharp\">IPv6InterfaceProperties</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides information about network interfaces that support Internet Protocol version 6 (IPv6).</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class IPv6InterfaceProperties</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">IPv6InterfaceProperties</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides access to configuration and address information for network interfaces that support IPv6. You do not create instances of this class; they are returned by the <a class=\"xref\" href=\"system.net.networkinformation.ipinterfaceproperties#System_Net_NetworkInformation_IPInterfaceProperties_GetIPv6Properties_\" data-linktype=\"relative-path\">GetIPv6Properties</a> method.  </p>\n<p> For IPV4 properties, see <a class=\"xref\" href=\"system.net.networkinformation.ipinterfaceproperties#System_Net_NetworkInformation_IPInterfaceProperties_GetIPv4Properties_\" data-linktype=\"relative-path\">GetIPv4Properties</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPv6InterfaceProperties__ctor\" data-linktype=\"self-bookmark\">IPv6InterfaceProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPv6InterfaceProperties_Index\" data-linktype=\"self-bookmark\">Index</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the network interface associated with an Internet Protocol version 6 (IPv6) address.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPv6InterfaceProperties_Mtu\" data-linktype=\"self-bookmark\">Mtu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the maximum transmission unit (MTU) for this network interface.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkInformation_IPv6InterfaceProperties_GetScopeId_System_Net_NetworkInformation_ScopeLevel_\" data-linktype=\"self-bookmark\">GetScopeId(ScopeLevel)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the scope ID of the network interface associated with an Internet Protocol version 6 (IPv6) address.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPv6InterfaceProperties__ctor\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPv6InterfaceProperties__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IPv6InterfaceProperties()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected IPv6InterfaceProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor can be called only by classes that derive from <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPv6InterfaceProperties_Index\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPv6InterfaceProperties_Index_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Index</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the network interface associated with an Internet Protocol version 6 (IPv6) address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int Index { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that contains the index of the network interface for IPv6 address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the value of this property is zero, IPv6 is not supported by this interface.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets an <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a> object and displays its data.  </p>\n<pre><code class=\"lang-cs\" name=\"NclNetInfo2#49\">        public static void DisplayIPv6NetworkInterfaces()\n        {\n            NetworkInterface[] nics = NetworkInterface.GetAllNetworkInterfaces();\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;IPv6 interface information for {0}.{1}&quot;,\n               properties.HostName, properties.DomainName);\n\n            int count = 0;\n            \n            foreach (NetworkInterface adapter in nics)\n            {\n                // Only display informatin for interfaces that support IPv6.\n                if (adapter.Supports(NetworkInterfaceComponent.IPv6) == false)\n                {\n                    continue;\n                }\n\n                count++;\n\n                Console.WriteLine();\n                Console.WriteLine(adapter.Description);\n                // Underline the description.\n                Console.WriteLine(String.Empty.PadLeft(adapter.Description.Length,&#39;=&#39;));\n                \n                IPInterfaceProperties adapterProperties = adapter.GetIPProperties();\n                // Try to get the IPv6 interface properties.\n                IPv6InterfaceProperties p = adapterProperties.GetIPv6Properties();\n\n           \n                if (p == null)\n                {\n                    Console.WriteLine(&quot;No IPv6 information is available for this interface.&quot;);\n                    Console.WriteLine();\n                    continue;\n                }\n                // Display the IPv6 specific data.\n                Console.WriteLine(&quot;  Index ............................. : {0}&quot;, p.Index);\n                Console.WriteLine(&quot;  MTU ............................... : {0}&quot;, p.Mtu);\n            }\n\n            if (count == 0)\n            {\n                Console.WriteLine(&quot;  No IPv6 interfaces were found.&quot;);\n                Console.WriteLine();\n            }\n            \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NclNetInfo2#49\">    Public Shared Sub DisplayIPv6NetworkInterfaces() \n        Dim nics As NetworkInterface() = NetworkInterface.GetAllNetworkInterfaces()\n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Console.WriteLine(&quot;IPv6 interface information for {0}.{1}&quot;, properties.HostName, properties.DomainName)\n        \n        Dim count as Integer = 0\n        \n        Dim adapter As NetworkInterface\n        For Each adapter In  nics\n            &#39; Only display informatin for interfaces that support IPv6.\n            If adapter.Supports(NetworkInterfaceComponent.IPv6) = False Then\n                GoTo ContinueForEach1\n            End If\n            count += 1\n            \n            Console.WriteLine()\n            Console.WriteLine(adapter.Description)\n            &#39; Underline the description.\n            Console.WriteLine(String.Empty.PadLeft(adapter.Description.Length, &quot;=&quot;c))\n            \n            Dim adapterProperties As IPInterfaceProperties = adapter.GetIPProperties()\n            &#39; Try to get the IPv6 interface properties.\n            Dim p As IPv6InterfaceProperties = adapterProperties.GetIPv6Properties()\n            \n            \n            If p Is Nothing Then\n                Console.WriteLine(&quot;No IPv6 information is available for this interface.&quot;)\n                GoTo ContinueForEach1\n            End If\n            &#39; Display the IPv6 specific data.\n            Console.WriteLine(&quot;  Index ............................. : {0}&quot;, p.Index)\n            Console.WriteLine(&quot;  MTU ............................... : {0}&quot;, p.Mtu)\n        ContinueForEach1:\n        Next adapter\n    \n        if count = 0 then\n            Console.WriteLine(&quot;  No IPv6 interfaces were found.&quot;)\n            Console.WriteLine()\n        End if\n    \n    End Sub &#39;DisplayIPv6NetworkInterfaces\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NclNetInfo2#49\">void DisplayIPv6NetworkInterfaces()\n{\n   array&lt;NetworkInterface^&gt;^nics = NetworkInterface::GetAllNetworkInterfaces();\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;IPv6 interface information for {0}.{1}&quot;, \n       properties-&gt;HostName, properties-&gt;DomainName );\n\n   int count = 0;\n\n   System::Collections::IEnumerator^ myEnum24 = nics-&gt;GetEnumerator();\n   while ( myEnum24-&gt;MoveNext() )\n   {\n      NetworkInterface ^ adapter = safe_cast&lt;NetworkInterface ^&gt;(myEnum24-&gt;Current);\n\n      // Only display informatin for interfaces that support IPv6.\n      if ( adapter-&gt;Supports( NetworkInterfaceComponent::IPv6 ) == false )\n      {\n         continue;\n      }\n      \n      count++;\n      \n      Console::WriteLine();\n      Console::WriteLine( adapter-&gt;Description );\n\n      // Underline the description.\n      Console::WriteLine( String::Empty-&gt;PadLeft( adapter-&gt;Description-&gt;Length, &#39;=&#39; ) );\n      IPInterfaceProperties ^ adapterProperties = adapter-&gt;GetIPProperties();\n\n      // Try to get the IPv6 interface properties.\n      IPv6InterfaceProperties ^ p = adapterProperties-&gt;GetIPv6Properties();\n      if ( !p )\n      {\n         Console::WriteLine( &quot;No IPv6 information is available for this interface.&quot; );\n         continue;\n      }\n\n      // Display the IPv6 specific data.\n      Console::WriteLine( &quot;  Index ............................. : {0}&quot;, \n         p-&gt;Index );\n      Console::WriteLine( &quot;  MTU ............................... : {0}&quot;, \n         p-&gt;Mtu );\n   }\n   if (count == 0)\n   {\n       Console::WriteLine(&quot;  No IPv6 interfaces were found.&quot;);\n       Console::WriteLine();\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPv6InterfaceProperties_Mtu\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPv6InterfaceProperties_Mtu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Mtu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the maximum transmission unit (MTU) for this network interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int Mtu { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that specifies the MTU.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets an <a class=\"xref\" href=\"system.net.networkinformation.ipv6interfaceproperties\" data-linktype=\"relative-path\">IPv6InterfaceProperties</a> object and displays its data.  </p>\n<pre><code class=\"lang-cs\" name=\"NclNetInfo2#49\">        public static void DisplayIPv6NetworkInterfaces()\n        {\n            NetworkInterface[] nics = NetworkInterface.GetAllNetworkInterfaces();\n            IPGlobalProperties properties = IPGlobalProperties.GetIPGlobalProperties();\n            Console.WriteLine(&quot;IPv6 interface information for {0}.{1}&quot;,\n               properties.HostName, properties.DomainName);\n\n            int count = 0;\n            \n            foreach (NetworkInterface adapter in nics)\n            {\n                // Only display informatin for interfaces that support IPv6.\n                if (adapter.Supports(NetworkInterfaceComponent.IPv6) == false)\n                {\n                    continue;\n                }\n\n                count++;\n\n                Console.WriteLine();\n                Console.WriteLine(adapter.Description);\n                // Underline the description.\n                Console.WriteLine(String.Empty.PadLeft(adapter.Description.Length,&#39;=&#39;));\n                \n                IPInterfaceProperties adapterProperties = adapter.GetIPProperties();\n                // Try to get the IPv6 interface properties.\n                IPv6InterfaceProperties p = adapterProperties.GetIPv6Properties();\n\n           \n                if (p == null)\n                {\n                    Console.WriteLine(&quot;No IPv6 information is available for this interface.&quot;);\n                    Console.WriteLine();\n                    continue;\n                }\n                // Display the IPv6 specific data.\n                Console.WriteLine(&quot;  Index ............................. : {0}&quot;, p.Index);\n                Console.WriteLine(&quot;  MTU ............................... : {0}&quot;, p.Mtu);\n            }\n\n            if (count == 0)\n            {\n                Console.WriteLine(&quot;  No IPv6 interfaces were found.&quot;);\n                Console.WriteLine();\n            }\n            \n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"NclNetInfo2#49\">    Public Shared Sub DisplayIPv6NetworkInterfaces() \n        Dim nics As NetworkInterface() = NetworkInterface.GetAllNetworkInterfaces()\n        Dim properties As IPGlobalProperties = IPGlobalProperties.GetIPGlobalProperties()\n        Console.WriteLine(&quot;IPv6 interface information for {0}.{1}&quot;, properties.HostName, properties.DomainName)\n        \n        Dim count as Integer = 0\n        \n        Dim adapter As NetworkInterface\n        For Each adapter In  nics\n            &#39; Only display informatin for interfaces that support IPv6.\n            If adapter.Supports(NetworkInterfaceComponent.IPv6) = False Then\n                GoTo ContinueForEach1\n            End If\n            count += 1\n            \n            Console.WriteLine()\n            Console.WriteLine(adapter.Description)\n            &#39; Underline the description.\n            Console.WriteLine(String.Empty.PadLeft(adapter.Description.Length, &quot;=&quot;c))\n            \n            Dim adapterProperties As IPInterfaceProperties = adapter.GetIPProperties()\n            &#39; Try to get the IPv6 interface properties.\n            Dim p As IPv6InterfaceProperties = adapterProperties.GetIPv6Properties()\n            \n            \n            If p Is Nothing Then\n                Console.WriteLine(&quot;No IPv6 information is available for this interface.&quot;)\n                GoTo ContinueForEach1\n            End If\n            &#39; Display the IPv6 specific data.\n            Console.WriteLine(&quot;  Index ............................. : {0}&quot;, p.Index)\n            Console.WriteLine(&quot;  MTU ............................... : {0}&quot;, p.Mtu)\n        ContinueForEach1:\n        Next adapter\n    \n        if count = 0 then\n            Console.WriteLine(&quot;  No IPv6 interfaces were found.&quot;)\n            Console.WriteLine()\n        End if\n    \n    End Sub &#39;DisplayIPv6NetworkInterfaces\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"NclNetInfo2#49\">void DisplayIPv6NetworkInterfaces()\n{\n   array&lt;NetworkInterface^&gt;^nics = NetworkInterface::GetAllNetworkInterfaces();\n   IPGlobalProperties ^ properties = IPGlobalProperties::GetIPGlobalProperties();\n   Console::WriteLine( &quot;IPv6 interface information for {0}.{1}&quot;, \n       properties-&gt;HostName, properties-&gt;DomainName );\n\n   int count = 0;\n\n   System::Collections::IEnumerator^ myEnum24 = nics-&gt;GetEnumerator();\n   while ( myEnum24-&gt;MoveNext() )\n   {\n      NetworkInterface ^ adapter = safe_cast&lt;NetworkInterface ^&gt;(myEnum24-&gt;Current);\n\n      // Only display informatin for interfaces that support IPv6.\n      if ( adapter-&gt;Supports( NetworkInterfaceComponent::IPv6 ) == false )\n      {\n         continue;\n      }\n      \n      count++;\n      \n      Console::WriteLine();\n      Console::WriteLine( adapter-&gt;Description );\n\n      // Underline the description.\n      Console::WriteLine( String::Empty-&gt;PadLeft( adapter-&gt;Description-&gt;Length, &#39;=&#39; ) );\n      IPInterfaceProperties ^ adapterProperties = adapter-&gt;GetIPProperties();\n\n      // Try to get the IPv6 interface properties.\n      IPv6InterfaceProperties ^ p = adapterProperties-&gt;GetIPv6Properties();\n      if ( !p )\n      {\n         Console::WriteLine( &quot;No IPv6 information is available for this interface.&quot; );\n         continue;\n      }\n\n      // Display the IPv6 specific data.\n      Console::WriteLine( &quot;  Index ............................. : {0}&quot;, \n         p-&gt;Index );\n      Console::WriteLine( &quot;  MTU ............................... : {0}&quot;, \n         p-&gt;Mtu );\n   }\n   if (count == 0)\n   {\n       Console::WriteLine(&quot;  No IPv6 interfaces were found.&quot;);\n       Console::WriteLine();\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkInformation_IPv6InterfaceProperties_GetScopeId_System_Net_NetworkInformation_ScopeLevel_\">\r\n    \r\n            <a id=\"System_Net_NetworkInformation_IPv6InterfaceProperties_GetScopeId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetScopeId(ScopeLevel)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the scope ID of the network interface associated with an Internet Protocol version 6 (IPv6) address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual long GetScopeId (System.Net.NetworkInformation.ScopeLevel scopeLevel);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scopeLevel</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkinformation.scopelevel\" data-linktype=\"relative-path\">ScopeLevel</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The scope level.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>.  </p>\n<p> The scope ID of the network interface associated with an IPv6 address.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.IPv6InterfaceProperties.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.IPv6InterfaceProperties.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPv6InterfaceProperties\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPv6InterfaceProperties..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPv6InterfaceProperties.Index\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a562a1b5-f3fa-ff16-6b77-3e7ae40eff1a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information about network interfaces that support Internet Protocol version 6 (IPv6).\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.NetworkInformation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkInformation.IPv6InterfaceProperties\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.NetworkInformation.IPv6InterfaceProperties.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkInformation.IPv6InterfaceProperties.yml","open_to_public_contributors":true,"api_name":["System.Net.NetworkInformation.IPv6InterfaceProperties","System.Net.NetworkInformation.IPv6InterfaceProperties..ctor","System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId","System.Net.NetworkInformation.IPv6InterfaceProperties.Index","System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkInformation.IPv6InterfaceProperties","System::Net::NetworkInformation::IPv6InterfaceProperties","System.Net.NetworkInformation.IPv6InterfaceProperties.#ctor","System::Net::NetworkInformation::IPv6InterfaceProperties::#ctor","System.Net.NetworkInformation.IPv6InterfaceProperties.GetScopeId","System::Net::NetworkInformation::IPv6InterfaceProperties::GetScopeId","System.Net.NetworkInformation.IPv6InterfaceProperties.Index","System::Net::NetworkInformation::IPv6InterfaceProperties::Index","System.Net.NetworkInformation.IPv6InterfaceProperties.Mtu","System::Net::NetworkInformation::IPv6InterfaceProperties::Mtu"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a562a1b5-f3fa-ff16-6b77-3e7ae40eff1a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.NetworkInformation/IPv6InterfaceProperties.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IPv6InterfaceProperties class | Microsoft Docs","_op_ogTitle":"IPv6InterfaceProperties class","description":"Provides information about network interfaces that support Internet Protocol version 6 (IPv6).\n","toc_asset_id":"_splitted/System.Net.NetworkInformation/toc.json","toc_rel":"_splitted/System.Net.NetworkInformation/toc.json","source_url":"","ms.assetid":"System.Net.NetworkInformation.IPv6InterfaceProperties","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.ipv6interfaceproperties","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkinformation.ipv6interfaceproperties","fileRelativePath":"System.Net.NetworkInformation.IPv6InterfaceProperties.html"},"themesRelativePathToOutputRoot":"_themes/"}