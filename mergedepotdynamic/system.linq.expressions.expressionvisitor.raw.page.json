{"content":"    \r\n    <h1 id=\"System_Linq_Expressions_ExpressionVisitor\">\r\n      <span class=\"lang-csharp\">ExpressionVisitor</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a visitor or rewriter for expression trees.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class ExpressionVisitor</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ExpressionVisitor</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining or copying an expression tree.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor__ctor\" data-linktype=\"self-bookmark\">ExpressionVisitor()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of <a class=\"xref\" href=\"system.linq.expressions.expressionvisitor\" data-linktype=\"relative-path\">ExpressionVisitor</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_Visit_System_Collections_ObjectModel_ReadOnlyCollection_System_Linq_Expressions_Expression__\" data-linktype=\"self-bookmark\">Visit(ReadOnlyCollection&lt;Expression&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Dispatches the list of expressions to one of the more specialized visit methods in this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_Visit_System_Linq_Expressions_Expression_\" data-linktype=\"self-bookmark\">Visit(Expression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Dispatches the expression to one of the more specialized visit methods in this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_Visit__1_System_Collections_ObjectModel_ReadOnlyCollection___0__System_Func___0___0__\" data-linktype=\"self-bookmark\">Visit&lt;T&gt;(ReadOnlyCollection&lt;T&gt;,Func&lt;T,T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits all nodes in the collection using a specified element visitor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitAndConvert__1_System_Collections_ObjectModel_ReadOnlyCollection___0__System_String_\" data-linktype=\"self-bookmark\">VisitAndConvert&lt;T&gt;(ReadOnlyCollection&lt;T&gt;,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits an expression, casting the result back to the original expression type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitAndConvert__1___0_System_String_\" data-linktype=\"self-bookmark\">VisitAndConvert&lt;T&gt;(T,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits an expression, casting the result back to the original expression type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitBinary_System_Linq_Expressions_BinaryExpression_\" data-linktype=\"self-bookmark\">VisitBinary(BinaryExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.binaryexpression\" data-linktype=\"relative-path\">BinaryExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitBlock_System_Linq_Expressions_BlockExpression_\" data-linktype=\"self-bookmark\">VisitBlock(BlockExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.blockexpression\" data-linktype=\"relative-path\">BlockExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitCatchBlock_System_Linq_Expressions_CatchBlock_\" data-linktype=\"self-bookmark\">VisitCatchBlock(CatchBlock)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.catchblock\" data-linktype=\"relative-path\">CatchBlock</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitConditional_System_Linq_Expressions_ConditionalExpression_\" data-linktype=\"self-bookmark\">VisitConditional(ConditionalExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.conditionalexpression\" data-linktype=\"relative-path\">ConditionalExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitConstant_System_Linq_Expressions_ConstantExpression_\" data-linktype=\"self-bookmark\">VisitConstant(ConstantExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.constantexpression\" data-linktype=\"relative-path\">ConstantExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitDebugInfo_System_Linq_Expressions_DebugInfoExpression_\" data-linktype=\"self-bookmark\">VisitDebugInfo(DebugInfoExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.debuginfoexpression\" data-linktype=\"relative-path\">DebugInfoExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitDefault_System_Linq_Expressions_DefaultExpression_\" data-linktype=\"self-bookmark\">VisitDefault(DefaultExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.defaultexpression\" data-linktype=\"relative-path\">DefaultExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitDynamic_System_Linq_Expressions_DynamicExpression_\" data-linktype=\"self-bookmark\">VisitDynamic(DynamicExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.dynamicexpression\" data-linktype=\"relative-path\">DynamicExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitElementInit_System_Linq_Expressions_ElementInit_\" data-linktype=\"self-bookmark\">VisitElementInit(ElementInit)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.elementinit\" data-linktype=\"relative-path\">ElementInit</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitExtension_System_Linq_Expressions_Expression_\" data-linktype=\"self-bookmark\">VisitExtension(Expression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the extension expression.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitGoto_System_Linq_Expressions_GotoExpression_\" data-linktype=\"self-bookmark\">VisitGoto(GotoExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.gotoexpression\" data-linktype=\"relative-path\">GotoExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitIndex_System_Linq_Expressions_IndexExpression_\" data-linktype=\"self-bookmark\">VisitIndex(IndexExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.indexexpression\" data-linktype=\"relative-path\">IndexExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitInvocation_System_Linq_Expressions_InvocationExpression_\" data-linktype=\"self-bookmark\">VisitInvocation(InvocationExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.invocationexpression\" data-linktype=\"relative-path\">InvocationExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitLabel_System_Linq_Expressions_LabelExpression_\" data-linktype=\"self-bookmark\">VisitLabel(LabelExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.labelexpression\" data-linktype=\"relative-path\">LabelExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitLabelTarget_System_Linq_Expressions_LabelTarget_\" data-linktype=\"self-bookmark\">VisitLabelTarget(LabelTarget)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.labeltarget\" data-linktype=\"relative-path\">LabelTarget</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitLambda__1_System_Linq_Expressions_Expression___0__\" data-linktype=\"self-bookmark\">VisitLambda&lt;T&gt;(Expression&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <span class=\"xref\">stem.Linq.Expressions.Expression`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitListInit_System_Linq_Expressions_ListInitExpression_\" data-linktype=\"self-bookmark\">VisitListInit(ListInitExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.listinitexpression\" data-linktype=\"relative-path\">ListInitExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitLoop_System_Linq_Expressions_LoopExpression_\" data-linktype=\"self-bookmark\">VisitLoop(LoopExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.loopexpression\" data-linktype=\"relative-path\">LoopExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMember_System_Linq_Expressions_MemberExpression_\" data-linktype=\"self-bookmark\">VisitMember(MemberExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberexpression\" data-linktype=\"relative-path\">MemberExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMemberAssignment_System_Linq_Expressions_MemberAssignment_\" data-linktype=\"self-bookmark\">VisitMemberAssignment(MemberAssignment)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberassignment\" data-linktype=\"relative-path\">MemberAssignment</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMemberBinding_System_Linq_Expressions_MemberBinding_\" data-linktype=\"self-bookmark\">VisitMemberBinding(MemberBinding)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberbinding\" data-linktype=\"relative-path\">MemberBinding</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMemberInit_System_Linq_Expressions_MemberInitExpression_\" data-linktype=\"self-bookmark\">VisitMemberInit(MemberInitExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberinitexpression\" data-linktype=\"relative-path\">MemberInitExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMemberListBinding_System_Linq_Expressions_MemberListBinding_\" data-linktype=\"self-bookmark\">VisitMemberListBinding(MemberListBinding)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberlistbinding\" data-linktype=\"relative-path\">MemberListBinding</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMemberMemberBinding_System_Linq_Expressions_MemberMemberBinding_\" data-linktype=\"self-bookmark\">VisitMemberMemberBinding(MemberMemberBinding)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.membermemberbinding\" data-linktype=\"relative-path\">MemberMemberBinding</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_\" data-linktype=\"self-bookmark\">VisitMethodCall(MethodCallExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.methodcallexpression\" data-linktype=\"relative-path\">MethodCallExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitNew_System_Linq_Expressions_NewExpression_\" data-linktype=\"self-bookmark\">VisitNew(NewExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.newexpression\" data-linktype=\"relative-path\">NewExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitNewArray_System_Linq_Expressions_NewArrayExpression_\" data-linktype=\"self-bookmark\">VisitNewArray(NewArrayExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.newarrayexpression\" data-linktype=\"relative-path\">NewArrayExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitParameter_System_Linq_Expressions_ParameterExpression_\" data-linktype=\"self-bookmark\">VisitParameter(ParameterExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.parameterexpression\" data-linktype=\"relative-path\">ParameterExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitRuntimeVariables_System_Linq_Expressions_RuntimeVariablesExpression_\" data-linktype=\"self-bookmark\">VisitRuntimeVariables(RuntimeVariablesExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.runtimevariablesexpression\" data-linktype=\"relative-path\">RuntimeVariablesExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitSwitch_System_Linq_Expressions_SwitchExpression_\" data-linktype=\"self-bookmark\">VisitSwitch(SwitchExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.switchexpression\" data-linktype=\"relative-path\">SwitchExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitSwitchCase_System_Linq_Expressions_SwitchCase_\" data-linktype=\"self-bookmark\">VisitSwitchCase(SwitchCase)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.switchcase\" data-linktype=\"relative-path\">SwitchCase</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitTry_System_Linq_Expressions_TryExpression_\" data-linktype=\"self-bookmark\">VisitTry(TryExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.tryexpression\" data-linktype=\"relative-path\">TryExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitTypeBinary_System_Linq_Expressions_TypeBinaryExpression_\" data-linktype=\"self-bookmark\">VisitTypeBinary(TypeBinaryExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.typebinaryexpression\" data-linktype=\"relative-path\">TypeBinaryExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Expressions_ExpressionVisitor_VisitUnary_System_Linq_Expressions_UnaryExpression_\" data-linktype=\"self-bookmark\">VisitUnary(UnaryExpression)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.unaryexpression\" data-linktype=\"relative-path\">UnaryExpression</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor__ctor\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExpressionVisitor()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of <a class=\"xref\" href=\"system.linq.expressions.expressionvisitor\" data-linktype=\"relative-path\">ExpressionVisitor</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected ExpressionVisitor ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_Visit_System_Collections_ObjectModel_ReadOnlyCollection_System_Linq_Expressions_Expression__\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_Visit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visit(ReadOnlyCollection&lt;Expression&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Dispatches the list of expressions to one of the more specialized visit methods in this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt; Visit (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Linq.Expressions.Expression&gt; nodes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nodes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expressions to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection</a>&lt;<a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a>&gt;</div>\r\n                  </div>\r\n                  <p>The modified expression list, if any one of the elements were modified; otherwise, returns the original expression list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_Visit_System_Linq_Expressions_Expression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_Visit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visit(Expression)</div>        \r\n          </div>\r\n    \r\n            <p>Dispatches the expression to one of the more specialized visit methods in this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Linq.Expressions.Expression Visit (System.Linq.Expressions.Expression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_Visit__1_System_Collections_ObjectModel_ReadOnlyCollection___0__System_Func___0___0__\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_Visit_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visit&lt;T&gt;(ReadOnlyCollection&lt;T&gt;,Func&lt;T,T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Visits all nodes in the collection using a specified element visitor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; Visit&lt;T&gt; (System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; nodes, Func&lt;T,T&gt; elementVisitor);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nodes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The nodes to visit.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>elementVisitor</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-2\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">T</span>,<span class=\"xref\">T</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A delegate that visits a single element, optionally replacing it with a new element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection<t></t></a></div>\r\n                  </div>\r\n                  <p>The modified node list, if any of the elements were modified; otherwise, returns the original node list.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitAndConvert__1_System_Collections_ObjectModel_ReadOnlyCollection___0__System_String_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitAndConvert_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitAndConvert&lt;T&gt;(ReadOnlyCollection&lt;T&gt;,String)</div>        \r\n          </div>\r\n    \r\n            <p>Visits an expression, casting the result back to the original expression type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; VisitAndConvert&lt;T&gt; (System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; nodes, string callerName) where T : System.Linq.Expressions.Expression;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>nodes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callerName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the calling method; used to report to report a better error message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection<t></t></a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The visit method for this node returned a different type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitAndConvert__1___0_System_String_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitAndConvert_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitAndConvert&lt;T&gt;(T,String)</div>        \r\n          </div>\r\n    \r\n            <p>Visits an expression, casting the result back to the original expression type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T VisitAndConvert&lt;T&gt; (T node, string callerName) where T : System.Linq.Expressions.Expression;</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>callerName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the calling method; used to report to report a better error message.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The visit method for this node returned a different type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitBinary_System_Linq_Expressions_BinaryExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitBinary_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitBinary(BinaryExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.binaryexpression\" data-linktype=\"relative-path\">BinaryExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.binaryexpression\" data-linktype=\"relative-path\">BinaryExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitBlock_System_Linq_Expressions_BlockExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitBlock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitBlock(BlockExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.blockexpression\" data-linktype=\"relative-path\">BlockExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitBlock (System.Linq.Expressions.BlockExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.blockexpression\" data-linktype=\"relative-path\">BlockExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitCatchBlock_System_Linq_Expressions_CatchBlock_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitCatchBlock_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitCatchBlock(CatchBlock)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.catchblock\" data-linktype=\"relative-path\">CatchBlock</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.CatchBlock VisitCatchBlock (System.Linq.Expressions.CatchBlock node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.catchblock\" data-linktype=\"relative-path\">CatchBlock</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.catchblock\" data-linktype=\"relative-path\">CatchBlock</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitConditional_System_Linq_Expressions_ConditionalExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitConditional_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitConditional(ConditionalExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.conditionalexpression\" data-linktype=\"relative-path\">ConditionalExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitConditional (System.Linq.Expressions.ConditionalExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.conditionalexpression\" data-linktype=\"relative-path\">ConditionalExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitConstant_System_Linq_Expressions_ConstantExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitConstant_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitConstant(ConstantExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.constantexpression\" data-linktype=\"relative-path\">ConstantExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitConstant (System.Linq.Expressions.ConstantExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.constantexpression\" data-linktype=\"relative-path\">ConstantExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitDebugInfo_System_Linq_Expressions_DebugInfoExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitDebugInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitDebugInfo(DebugInfoExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.debuginfoexpression\" data-linktype=\"relative-path\">DebugInfoExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitDebugInfo (System.Linq.Expressions.DebugInfoExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.debuginfoexpression\" data-linktype=\"relative-path\">DebugInfoExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitDefault_System_Linq_Expressions_DefaultExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitDefault_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitDefault(DefaultExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.defaultexpression\" data-linktype=\"relative-path\">DefaultExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitDefault (System.Linq.Expressions.DefaultExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.defaultexpression\" data-linktype=\"relative-path\">DefaultExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitDynamic_System_Linq_Expressions_DynamicExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitDynamic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitDynamic(DynamicExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.dynamicexpression\" data-linktype=\"relative-path\">DynamicExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitDynamic (System.Linq.Expressions.DynamicExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.dynamicexpression\" data-linktype=\"relative-path\">DynamicExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitElementInit_System_Linq_Expressions_ElementInit_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitElementInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitElementInit(ElementInit)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.elementinit\" data-linktype=\"relative-path\">ElementInit</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.ElementInit VisitElementInit (System.Linq.Expressions.ElementInit node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.elementinit\" data-linktype=\"relative-path\">ElementInit</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.elementinit\" data-linktype=\"relative-path\">ElementInit</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitExtension_System_Linq_Expressions_Expression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitExtension_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitExtension(Expression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the extension expression.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This can be overridden to visit or rewrite specific extension nodes.  </p>\n<p> If it is not overridden, this method will call <a class=\"xref\" href=\"system.linq.expressions.expression#System_Linq_Expressions_Expression_VisitChildren_\" data-linktype=\"relative-path\">VisitChildren</a>, which gives the node a chance to walk its children. By default, <a class=\"xref\" href=\"system.linq.expressions.expression#System_Linq_Expressions_Expression_VisitChildren_\" data-linktype=\"relative-path\">VisitChildren</a> will try to reduce the node.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitGoto_System_Linq_Expressions_GotoExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitGoto_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitGoto(GotoExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.gotoexpression\" data-linktype=\"relative-path\">GotoExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitGoto (System.Linq.Expressions.GotoExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.gotoexpression\" data-linktype=\"relative-path\">GotoExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitIndex_System_Linq_Expressions_IndexExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitIndex(IndexExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.indexexpression\" data-linktype=\"relative-path\">IndexExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitIndex (System.Linq.Expressions.IndexExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.indexexpression\" data-linktype=\"relative-path\">IndexExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitInvocation_System_Linq_Expressions_InvocationExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitInvocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitInvocation(InvocationExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.invocationexpression\" data-linktype=\"relative-path\">InvocationExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitInvocation (System.Linq.Expressions.InvocationExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.invocationexpression\" data-linktype=\"relative-path\">InvocationExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitLabel_System_Linq_Expressions_LabelExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitLabel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitLabel(LabelExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.labelexpression\" data-linktype=\"relative-path\">LabelExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitLabel (System.Linq.Expressions.LabelExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.labelexpression\" data-linktype=\"relative-path\">LabelExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitLabelTarget_System_Linq_Expressions_LabelTarget_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitLabelTarget_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitLabelTarget(LabelTarget)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.labeltarget\" data-linktype=\"relative-path\">LabelTarget</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.LabelTarget VisitLabelTarget (System.Linq.Expressions.LabelTarget node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.labeltarget\" data-linktype=\"relative-path\">LabelTarget</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.labeltarget\" data-linktype=\"relative-path\">LabelTarget</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitLambda__1_System_Linq_Expressions_Expression___0__\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitLambda_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitLambda&lt;T&gt;(Expression&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <span class=\"xref\">stem.Linq.Expressions.Expression`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitLambda&lt;T&gt; (System.Linq.Expressions.Expression&lt;T&gt; node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression-1\" data-linktype=\"relative-path\">Expression</a>&lt;<span class=\"xref\">T</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitListInit_System_Linq_Expressions_ListInitExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitListInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitListInit(ListInitExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.listinitexpression\" data-linktype=\"relative-path\">ListInitExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitListInit (System.Linq.Expressions.ListInitExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.listinitexpression\" data-linktype=\"relative-path\">ListInitExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitLoop_System_Linq_Expressions_LoopExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitLoop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitLoop(LoopExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.loopexpression\" data-linktype=\"relative-path\">LoopExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitLoop (System.Linq.Expressions.LoopExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.loopexpression\" data-linktype=\"relative-path\">LoopExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMember_System_Linq_Expressions_MemberExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMember(MemberExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberexpression\" data-linktype=\"relative-path\">MemberExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberexpression\" data-linktype=\"relative-path\">MemberExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberAssignment_System_Linq_Expressions_MemberAssignment_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberAssignment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMemberAssignment(MemberAssignment)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberassignment\" data-linktype=\"relative-path\">MemberAssignment</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.MemberAssignment VisitMemberAssignment (System.Linq.Expressions.MemberAssignment node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberassignment\" data-linktype=\"relative-path\">MemberAssignment</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberassignment\" data-linktype=\"relative-path\">MemberAssignment</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberBinding_System_Linq_Expressions_MemberBinding_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMemberBinding(MemberBinding)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberbinding\" data-linktype=\"relative-path\">MemberBinding</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.MemberBinding VisitMemberBinding (System.Linq.Expressions.MemberBinding node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberbinding\" data-linktype=\"relative-path\">MemberBinding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberbinding\" data-linktype=\"relative-path\">MemberBinding</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberInit_System_Linq_Expressions_MemberInitExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMemberInit(MemberInitExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberinitexpression\" data-linktype=\"relative-path\">MemberInitExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitMemberInit (System.Linq.Expressions.MemberInitExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberinitexpression\" data-linktype=\"relative-path\">MemberInitExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberListBinding_System_Linq_Expressions_MemberListBinding_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberListBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMemberListBinding(MemberListBinding)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.memberlistbinding\" data-linktype=\"relative-path\">MemberListBinding</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.MemberListBinding VisitMemberListBinding (System.Linq.Expressions.MemberListBinding node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberlistbinding\" data-linktype=\"relative-path\">MemberListBinding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.memberlistbinding\" data-linktype=\"relative-path\">MemberListBinding</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberMemberBinding_System_Linq_Expressions_MemberMemberBinding_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMemberMemberBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMemberMemberBinding(MemberMemberBinding)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.membermemberbinding\" data-linktype=\"relative-path\">MemberMemberBinding</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.MemberMemberBinding VisitMemberMemberBinding (System.Linq.Expressions.MemberMemberBinding node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.membermemberbinding\" data-linktype=\"relative-path\">MemberMemberBinding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.membermemberbinding\" data-linktype=\"relative-path\">MemberMemberBinding</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitMethodCall_System_Linq_Expressions_MethodCallExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitMethodCall_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitMethodCall(MethodCallExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.methodcallexpression\" data-linktype=\"relative-path\">MethodCallExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.methodcallexpression\" data-linktype=\"relative-path\">MethodCallExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitNew_System_Linq_Expressions_NewExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitNew_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitNew(NewExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.newexpression\" data-linktype=\"relative-path\">NewExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitNew (System.Linq.Expressions.NewExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.newexpression\" data-linktype=\"relative-path\">NewExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitNewArray_System_Linq_Expressions_NewArrayExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitNewArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitNewArray(NewArrayExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.newarrayexpression\" data-linktype=\"relative-path\">NewArrayExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitNewArray (System.Linq.Expressions.NewArrayExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.newarrayexpression\" data-linktype=\"relative-path\">NewArrayExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitParameter_System_Linq_Expressions_ParameterExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitParameter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitParameter(ParameterExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the <a class=\"xref\" href=\"system.linq.expressions.parameterexpression\" data-linktype=\"relative-path\">ParameterExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitParameter (System.Linq.Expressions.ParameterExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.parameterexpression\" data-linktype=\"relative-path\">ParameterExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitRuntimeVariables_System_Linq_Expressions_RuntimeVariablesExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitRuntimeVariables_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitRuntimeVariables(RuntimeVariablesExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.runtimevariablesexpression\" data-linktype=\"relative-path\">RuntimeVariablesExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitRuntimeVariables (System.Linq.Expressions.RuntimeVariablesExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.runtimevariablesexpression\" data-linktype=\"relative-path\">RuntimeVariablesExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitSwitch_System_Linq_Expressions_SwitchExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitSwitch_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitSwitch(SwitchExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.switchexpression\" data-linktype=\"relative-path\">SwitchExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitSwitch (System.Linq.Expressions.SwitchExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.switchexpression\" data-linktype=\"relative-path\">SwitchExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitSwitchCase_System_Linq_Expressions_SwitchCase_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitSwitchCase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitSwitchCase(SwitchCase)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.switchcase\" data-linktype=\"relative-path\">SwitchCase</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.SwitchCase VisitSwitchCase (System.Linq.Expressions.SwitchCase node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.switchcase\" data-linktype=\"relative-path\">SwitchCase</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.switchcase\" data-linktype=\"relative-path\">SwitchCase</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitTry_System_Linq_Expressions_TryExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitTry_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitTry(TryExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.tryexpression\" data-linktype=\"relative-path\">TryExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitTry (System.Linq.Expressions.TryExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.tryexpression\" data-linktype=\"relative-path\">TryExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitTypeBinary_System_Linq_Expressions_TypeBinaryExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitTypeBinary_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitTypeBinary(TypeBinaryExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.typebinaryexpression\" data-linktype=\"relative-path\">TypeBinaryExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitTypeBinary (System.Linq.Expressions.TypeBinaryExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.typebinaryexpression\" data-linktype=\"relative-path\">TypeBinaryExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Expressions_ExpressionVisitor_VisitUnary_System_Linq_Expressions_UnaryExpression_\">\r\n    \r\n            <a id=\"System_Linq_Expressions_ExpressionVisitor_VisitUnary_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisitUnary(UnaryExpression)</div>        \r\n          </div>\r\n    \r\n            <p>Visits the children of the <a class=\"xref\" href=\"system.linq.expressions.unaryexpression\" data-linktype=\"relative-path\">UnaryExpression</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Linq.Expressions.Expression VisitUnary (System.Linq.Expressions.UnaryExpression node);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>node</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.unaryexpression\" data-linktype=\"relative-path\">UnaryExpression</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The expression to visit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.linq.expressions.expression\" data-linktype=\"relative-path\">Expression</a></div>\r\n                  </div>\r\n                  <p>The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.Expressions.ExpressionVisitor.yml\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor..ctor\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.Visit\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.Visit&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitAndConvert&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitBinary\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitBlock\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitConditional\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitConstant\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitDefault\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitDynamic\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitElementInit\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitExtension\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitGoto\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitIndex\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitInvocation\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitLabel\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitLambda&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitListInit\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitLoop\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMember\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMemberInit\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitMethodCall\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitNew\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitNewArray\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitParameter\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitSwitch\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitTry\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary\">\r\n<meta name=\"APIName\" content=\"System.Linq.Expressions.ExpressionVisitor.VisitUnary\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"a2cc5dca-4406-a09b-cf6e-2c0fde0b8fa9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a visitor or rewriter for expression trees.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Linq.Expressions/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Linq.Expressions.ExpressionVisitor\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.Expressions.ExpressionVisitor.yml","open_to_public_contributors":true,"api_name":["System.Linq.Expressions.ExpressionVisitor","System.Linq.Expressions.ExpressionVisitor..ctor","System.Linq.Expressions.ExpressionVisitor.Visit","System.Linq.Expressions.ExpressionVisitor.Visit<T>","System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>","System.Linq.Expressions.ExpressionVisitor.VisitBinary","System.Linq.Expressions.ExpressionVisitor.VisitBlock","System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock","System.Linq.Expressions.ExpressionVisitor.VisitConditional","System.Linq.Expressions.ExpressionVisitor.VisitConstant","System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo","System.Linq.Expressions.ExpressionVisitor.VisitDefault","System.Linq.Expressions.ExpressionVisitor.VisitDynamic","System.Linq.Expressions.ExpressionVisitor.VisitElementInit","System.Linq.Expressions.ExpressionVisitor.VisitExtension","System.Linq.Expressions.ExpressionVisitor.VisitGoto","System.Linq.Expressions.ExpressionVisitor.VisitIndex","System.Linq.Expressions.ExpressionVisitor.VisitInvocation","System.Linq.Expressions.ExpressionVisitor.VisitLabel","System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget","System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>","System.Linq.Expressions.ExpressionVisitor.VisitListInit","System.Linq.Expressions.ExpressionVisitor.VisitLoop","System.Linq.Expressions.ExpressionVisitor.VisitMember","System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment","System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding","System.Linq.Expressions.ExpressionVisitor.VisitMemberInit","System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding","System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding","System.Linq.Expressions.ExpressionVisitor.VisitMethodCall","System.Linq.Expressions.ExpressionVisitor.VisitNew","System.Linq.Expressions.ExpressionVisitor.VisitNewArray","System.Linq.Expressions.ExpressionVisitor.VisitParameter","System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables","System.Linq.Expressions.ExpressionVisitor.VisitSwitch","System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase","System.Linq.Expressions.ExpressionVisitor.VisitTry","System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary","System.Linq.Expressions.ExpressionVisitor.VisitUnary"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Linq.Expressions.ExpressionVisitor","System::Linq::Expressions::ExpressionVisitor","System.Linq.Expressions.ExpressionVisitor.#ctor","System::Linq::Expressions::ExpressionVisitor::#ctor","System.Linq.Expressions.ExpressionVisitor.Visit","System::Linq::Expressions::ExpressionVisitor::Visit","System.Linq.Expressions.ExpressionVisitor.Visit``1","System::Linq::Expressions::ExpressionVisitor::Visit``1","System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1","System::Linq::Expressions::ExpressionVisitor::VisitAndConvert``1","System.Linq.Expressions.ExpressionVisitor.VisitBinary","System::Linq::Expressions::ExpressionVisitor::VisitBinary","System.Linq.Expressions.ExpressionVisitor.VisitBlock","System::Linq::Expressions::ExpressionVisitor::VisitBlock","System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock","System::Linq::Expressions::ExpressionVisitor::VisitCatchBlock","System.Linq.Expressions.ExpressionVisitor.VisitConditional","System::Linq::Expressions::ExpressionVisitor::VisitConditional","System.Linq.Expressions.ExpressionVisitor.VisitConstant","System::Linq::Expressions::ExpressionVisitor::VisitConstant","System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo","System::Linq::Expressions::ExpressionVisitor::VisitDebugInfo","System.Linq.Expressions.ExpressionVisitor.VisitDefault","System::Linq::Expressions::ExpressionVisitor::VisitDefault","System.Linq.Expressions.ExpressionVisitor.VisitDynamic","System::Linq::Expressions::ExpressionVisitor::VisitDynamic","System.Linq.Expressions.ExpressionVisitor.VisitElementInit","System::Linq::Expressions::ExpressionVisitor::VisitElementInit","System.Linq.Expressions.ExpressionVisitor.VisitExtension","System::Linq::Expressions::ExpressionVisitor::VisitExtension","System.Linq.Expressions.ExpressionVisitor.VisitGoto","System::Linq::Expressions::ExpressionVisitor::VisitGoto","System.Linq.Expressions.ExpressionVisitor.VisitIndex","System::Linq::Expressions::ExpressionVisitor::VisitIndex","System.Linq.Expressions.ExpressionVisitor.VisitInvocation","System::Linq::Expressions::ExpressionVisitor::VisitInvocation","System.Linq.Expressions.ExpressionVisitor.VisitLabel","System::Linq::Expressions::ExpressionVisitor::VisitLabel","System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget","System::Linq::Expressions::ExpressionVisitor::VisitLabelTarget","System.Linq.Expressions.ExpressionVisitor.VisitLambda``1","System::Linq::Expressions::ExpressionVisitor::VisitLambda``1","System.Linq.Expressions.ExpressionVisitor.VisitListInit","System::Linq::Expressions::ExpressionVisitor::VisitListInit","System.Linq.Expressions.ExpressionVisitor.VisitLoop","System::Linq::Expressions::ExpressionVisitor::VisitLoop","System.Linq.Expressions.ExpressionVisitor.VisitMember","System::Linq::Expressions::ExpressionVisitor::VisitMember","System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment","System::Linq::Expressions::ExpressionVisitor::VisitMemberAssignment","System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding","System::Linq::Expressions::ExpressionVisitor::VisitMemberBinding","System.Linq.Expressions.ExpressionVisitor.VisitMemberInit","System::Linq::Expressions::ExpressionVisitor::VisitMemberInit","System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding","System::Linq::Expressions::ExpressionVisitor::VisitMemberListBinding","System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding","System::Linq::Expressions::ExpressionVisitor::VisitMemberMemberBinding","System.Linq.Expressions.ExpressionVisitor.VisitMethodCall","System::Linq::Expressions::ExpressionVisitor::VisitMethodCall","System.Linq.Expressions.ExpressionVisitor.VisitNew","System::Linq::Expressions::ExpressionVisitor::VisitNew","System.Linq.Expressions.ExpressionVisitor.VisitNewArray","System::Linq::Expressions::ExpressionVisitor::VisitNewArray","System.Linq.Expressions.ExpressionVisitor.VisitParameter","System::Linq::Expressions::ExpressionVisitor::VisitParameter","System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables","System::Linq::Expressions::ExpressionVisitor::VisitRuntimeVariables","System.Linq.Expressions.ExpressionVisitor.VisitSwitch","System::Linq::Expressions::ExpressionVisitor::VisitSwitch","System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase","System::Linq::Expressions::ExpressionVisitor::VisitSwitchCase","System.Linq.Expressions.ExpressionVisitor.VisitTry","System::Linq::Expressions::ExpressionVisitor::VisitTry","System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary","System::Linq::Expressions::ExpressionVisitor::VisitTypeBinary","System.Linq.Expressions.ExpressionVisitor.VisitUnary","System::Linq::Expressions::ExpressionVisitor::VisitUnary"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"a2cc5dca-4406-a09b-cf6e-2c0fde0b8fa9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Linq.Expressions/ExpressionVisitor.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ExpressionVisitor class | Microsoft Docs","_op_ogTitle":"ExpressionVisitor class","description":"Represents a visitor or rewriter for expression trees.\n","toc_asset_id":"_splitted/System.Linq.Expressions/toc.json","toc_rel":"_splitted/System.Linq.Expressions/toc.json","source_url":"","ms.assetid":"System.Linq.Expressions.ExpressionVisitor","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.expressions.expressionvisitor","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.expressions.expressionvisitor","fileRelativePath":"System.Linq.Expressions.ExpressionVisitor.html"},"themesRelativePathToOutputRoot":"_themes/"}