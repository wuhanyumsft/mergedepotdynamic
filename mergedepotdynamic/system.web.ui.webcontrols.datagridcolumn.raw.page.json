{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_DataGridColumn\">\r\n      <span class=\"lang-csharp\">DataGridColumn</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Serves as the base class for the different column types of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]\npublic abstract class DataGridColumn : System.Web.UI.IStateManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridColumn</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataGridColumn class is the base class for all column types of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control. It defines the properties and methods that are common to all column types. An instance of the DataGridColumn class is not created directly.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn__ctor\" data-linktype=\"self-bookmark\">DataGridColumn()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_DesignMode\" data-linktype=\"self-bookmark\">DesignMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the column is in design mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_FooterStyle\" data-linktype=\"self-bookmark\">FooterStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the style properties for the footer section of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_FooterText\" data-linktype=\"self-bookmark\">FooterText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text displayed in the footer section of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_HeaderImageUrl\" data-linktype=\"self-bookmark\">HeaderImageUrl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the location of an image to display in the header section of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_HeaderStyle\" data-linktype=\"self-bookmark\">HeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the style properties for the header section of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_HeaderText\" data-linktype=\"self-bookmark\">HeaderText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text displayed in the header section of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_IsTrackingViewState\" data-linktype=\"self-bookmark\">IsTrackingViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that determines whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object is marked to save its state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_ItemStyle\" data-linktype=\"self-bookmark\">ItemStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the style properties for the item cells of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_Owner\" data-linktype=\"self-bookmark\">Owner</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that the column is a member of.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_SortExpression\" data-linktype=\"self-bookmark\">SortExpression</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the field or expression to pass to the <span class=\"xref\">stem.Web.UI.WebControls.DataGrid.OnSortCommand*</span> method when a column is selected for sorting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_ViewState\" data-linktype=\"self-bookmark\">ViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object that allows a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to store its properties.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_Visible\" data-linktype=\"self-bookmark\">Visible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the column is visible in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_Initialize\" data-linktype=\"self-bookmark\">Initialize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides the base implementation to reset a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to its initial state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_InitializeCell_System_Web_UI_WebControls_TableCell_System_Int32_System_Web_UI_WebControls_ListItemType_\" data-linktype=\"self-bookmark\">InitializeCell(TableCell,Int32,ListItemType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides the base implementation to reset the specified cell from a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to its initial state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_OnColumnChanged\" data-linktype=\"self-bookmark\">OnColumnChanged()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calls the <span class=\"xref\">stem.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_SaveViewState\" data-linktype=\"self-bookmark\">SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the current state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the string representation of the column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_TrackViewState\" data-linktype=\"self-bookmark\">TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes tracking of view-state changes to the server control so they can be stored in the server control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_IsTrackingViewState\" data-linktype=\"self-bookmark\">IStateManager.IsTrackingViewState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the column is tracking view state changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_LoadViewState_System_Object_\" data-linktype=\"self-bookmark\">IStateManager.LoadViewState(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads previously saved state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_SaveViewState\" data-linktype=\"self-bookmark\">IStateManager.SaveViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an object containing state changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_TrackViewState\" data-linktype=\"self-bookmark\">IStateManager.TrackViewState()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Starts tracking state changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn__ctor\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridColumn()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected DataGridColumn ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to create and initialize an instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Instances of this class are typically not created directly. It is a base class that defines the properties and methods common to all column type classes.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_DesignMode\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_DesignMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesignMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the column is in design mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool DesignMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the column is in design mode; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the DesignMode property to programmatically determine whether the column is in design mode.  </p>\n<p> For more information about design mode, see <a class=\"xref\" href=\"system.componentmodel.isite#System_ComponentModel_ISite_DesignMode_\" data-linktype=\"relative-path\">DesignMode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_FooterStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_FooterStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the style properties for the footer section of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that contains the style properties for the footer section of the column. The default value is an empty <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to provide a custom style for the footer section of the column. Common style attributes that can be adjusted include foreground color, background color, font, and content alignment within the cell. Providing a different style enhances the appearance of the column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FooterStyle property to set the style properties for the footer section of the column.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridColumnFooterStyle#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(string)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 to 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n  \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n\n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         &#39; Count the number of selected items in the DataGrid control.\n         Dim count As Integer = 0\n\n         &#39; Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;\n\n         &#39; Iterate through each item (row) in the DataGrid control and\n         &#39; determine whether it is selected.\n         Dim item As DataGridItem\n \n         For Each item In ItemsGrid.Items\n\n            DetermineSelection(item, count)        \n\n         Next\n\n         &#39; If no items are selected, display the appropriate message.\n         If count = 0 Then\n\n            Message.Text = &quot;No items selected&quot;\n\n         End If\n\n      End Sub\n\n      Sub DetermineSelection(item As DataGridItem, ByRef count As Integer)\n\n         &#39; Retrieve the SelectCheckBox CheckBox control from the \n         &#39; specified item (row) in the DataGrid control.\n         Dim selection As CheckBox = _\n             CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n         &#39; If the item is selected, display the appropriate message and\n         &#39; increment the count of selected items.\n         If Not selection Is Nothing Then\n\n           If selection.Checked Then\n           \n              Message.Text &amp;= &quot;- &quot; &amp; item.Cells(1).Text &amp; &quot;&lt;br /&gt;&quot;\n              count = count + 1\n           \n           End If\n\n         End If    \n\n      End Sub\n\n      Sub Selection_Change(sender As Object, e As EventArgs)\n\n         &#39; Set the background color for the header and footer sections\n         &#39; of the first column in the DataGrid control.\n         ItemsGrid.Columns(0).HeaderStyle.BackColor = _\n             System.Drawing.Color.FromName(List.SelectedItem.Value)\n         ItemsGrid.Columns(0).FooterStyle.BackColor = _\n             System.Drawing.Color.FromName(List.SelectedItem.Value)\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/h3&gt;\n\n      Select a background color for the header and \n      footer sections of the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 HeaderText=&quot;Item&quot;&gt;\n\n               &lt;HeaderStyle BackColor=&quot;White&quot;&gt;\n               &lt;/HeaderStyle&gt;\n\n               &lt;FooterStyle BackColor=&quot;White&quot;&gt;\n               &lt;/FooterStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      Header and footer BackColor: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;White&quot;&gt; White &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Silver&quot;&gt; Silver &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkGray&quot;&gt; Dark Gray &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Khaki&quot;&gt; Khaki &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkKhaki&quot;&gt; Dark Khaki &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridColumnFooterStyle#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         // Count the number of selected items in the DataGrid control.\n         int count = 0;\n\n         // Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;;\n\n         // Iterate through each item (row) in the DataGrid control and\n         // determine whether it is selected.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            DetermineSelection(item, ref count);        \n\n         }\n\n         // If no items are selected, display the appropriate message.\n         if (count == 0)\n         {\n\n            Message.Text = &quot;No items selected&quot;;\n\n         }\n\n      }\n\n      void DetermineSelection(DataGridItem item, ref int count)\n      {\n\n         // Retrieve the SelectCheckBox CheckBox control from the \n         // specified item (row) in the DataGrid control.\n         CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n         // If the item is selected, display the appropriate message and\n         // increment the count of selected items.\n         if (selection != null)\n         {\n\n           if (selection.Checked)\n           {\n              Message.Text += &quot;- &quot; + item.Cells[1].Text + &quot;&lt;br /&gt;&quot;;\n              count++;\n           }\n\n         }    \n\n      }\n\n      void Selection_Change(Object sender, EventArgs e)\n      {\n\n         // Set the background color for the header and footer sections \n         // of the first column in the DataGrid control.\n         ItemsGrid.Columns[0].HeaderStyle.BackColor = \n             System.Drawing.Color.FromName(List.SelectedItem.Value);\n         ItemsGrid.Columns[0].FooterStyle.BackColor = \n             System.Drawing.Color.FromName(List.SelectedItem.Value);\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/h3&gt;\n\n      Select a background color for the header and \n      footer sections of the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 HeaderText=&quot;Item&quot;&gt;\n\n               &lt;HeaderStyle BackColor=&quot;White&quot;&gt;\n               &lt;/HeaderStyle&gt;\n\n               &lt;FooterStyle BackColor=&quot;White&quot;&gt;\n               &lt;/FooterStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      Header and footer BackColor: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;White&quot;&gt; White &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Silver&quot;&gt; Silver &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkGray&quot;&gt; Dark Gray &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Khaki&quot;&gt; Khaki &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkKhaki&quot;&gt; Dark Khaki &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_FooterText\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_FooterText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FooterText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text displayed in the footer section of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string FooterText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text displayed in the footer section of the column. The default value is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the FooterText property to specify or determine the text displayed in the footer section of the column.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Text is not HTML-encoded before it is displayed in the footer section of the column. This makes it possible to embed script within HTML tags in the text. If this property is set dynamically using user input, be sure to validate the value to reduce security vulnerabilities.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the FooterText property to specify the text displayed in the footer section of the column.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridColumnFooterText#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection  \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n         dt.Columns.Add(new DataColumn(&quot;BooleanValue&quot;, GetType(Boolean)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n            dr(3) = False\n \n            dt.Rows.Add(dr)\n         \n         Next i\n\n         &#39; To persist the data source between posts to the server, store\n         &#39; it in session state.  \n         Session(&quot;Source&quot;) = dt\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n         \n            &#39; Make sure to set the header text before binding the data to \n            &#39; the DataGrid control; otherwise, the change will not appear \n            &#39; until the next time the page is refreshed.\n            ItemsGrid.Columns(0).HeaderText = &quot;Item&quot;\n\n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n        \n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         Dim subtotal As Double = 0.0\n\n         &#39; Update the data source with the user&#39;s selection and \n         &#39; calculate the subtotal.\n         Dim dt As DataTable = UpdateSource(subtotal)\n\n         &#39; Display the subtotal in the footer section of the third column.\n         ItemsGrid.Columns(2).FooterText = _\n             &quot;Subtotal: &quot; &amp; subtotal.ToString(&quot;c&quot;)\n\n         &#39; Create a DataView and bind it to the DataGrid control.\n         Dim dv As DataView = New DataView(dt)\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n      Function UpdateSource(ByRef subtotal As Double) As DataTable \n\n         &#39; Retrieve the data table from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n         Dim item As DataGridItem \n\n         &#39; Iterate through the Items collection and update the data source\n         &#39; with the user&#39;s selections. If an item is selected, add the\n         &#39; amount of the item to the subtotal.\n         For Each item in ItemsGrid.Items\n\n            &#39; Retrieve the SelectCheckBox CheckBox control from the \n            &#39; specified item (row) in the DataGrid control.\n            Dim selection As CheckBox = _\n                CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n            If Not selection Is Nothing\n\n               &#39; Update the BooleanValue field with the value of the check box.\n               dt.Rows(item.ItemIndex)(3) = selection.Checked\n\n               &#39; Add the value of the item to the subtotal if the item is \n               &#39; selected.\n               If selection.Checked Then\n           \n                  subtotal += _\n                      Convert.ToDouble(item.Cells(2).Text.Substring(1))\n\n               End If\n\n            End If\n\n         Next\n\n         &#39; Save the data source.\n         Session(&quot;Source&quot;) = dt\n\n         Return dt\n\n      End Function\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderText and FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderText and FooterText Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;BooleanValue&quot;) %&gt;&#39;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridColumnFooterText#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n         dt.Columns.Add(new DataColumn(&quot;BooleanValue&quot;, typeof(bool)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n            dr[3] = false;\n \n            dt.Rows.Add(dr);\n         }\n\n         // To persist the data source between posts to the server, store\n         // it in session state.  \n         Session[&quot;Source&quot;] = dt;\n \n         DataView dv = new DataView(dt);\n         return dv;\n\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            // Make sure to set the header text before binding the data to \n            // the DataGrid control; otherwise, the change will not appear \n            // until the next time the page is refreshed.\n            ItemsGrid.Columns[0].HeaderText = &quot;Item&quot;;\n\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         double subtotal = 0.0;\n\n         // Update the data source with the user&#39;s selection and \n         // calculate the subtotal.\n         DataTable dt = UpdateSource(ref subtotal);\n\n         // Display the subtotal in the footer section of the third column.\n         ItemsGrid.Columns[2].FooterText = \n             &quot;Subtotal: &quot; + subtotal.ToString(&quot;c&quot;);\n\n         // Create a DataView and bind it to the DataGrid control.\n         DataView dv = new DataView(dt);\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n      DataTable UpdateSource(ref double subtotal)\n      {\n\n         // Retrieve the data table from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Iterate through the Items collection and update the data source\n         // with the user&#39;s selections. If an item is selected, add the\n         // amount of the item to the subtotal.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            // Retrieve the SelectCheckBox CheckBox control from the \n            // specified item (row) in the DataGrid control.\n            CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n            if (selection != null)\n            {\n\n               // Update the BooleanValue field with the value of the check box.\n               dt.Rows[item.ItemIndex][3] = selection.Checked;\n\n               // Add the value of the item to the subtotal if the item is \n               // selected.\n               if (selection.Checked)\n               {\n                  subtotal += \n                      Convert.ToDouble(item.Cells[2].Text.Substring(1));\n               }\n\n            }\n\n         }\n\n         // Save the data source.\n         Session[&quot;Source&quot;] = dt;\n\n         return dt;\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderText and FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderText and FooterText Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;BooleanValue&quot;) %&gt;&#39;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_HeaderImageUrl\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_HeaderImageUrl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderImageUrl</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the location of an image to display in the header section of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string HeaderImageUrl { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The location of an image to display in the header section of the column. The default value is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the HeaderImageUrl property to specify the URL of an image to display in the header section of the column. You can use a relative or an absolute URL. A relative URL relates the location of the image to the location of the Web page without specifying a complete path on the server. The path is relative to the location of the Web page. This makes it easier to move the entire site to another directory on the server without updating the path to the image in code. An absolute URL provides the complete path, so moving the site to another directory requires updating the code.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you want to display text instead of an image in the header section of the column, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property instead of this property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderImageUrl property to specify the image displayed in the header section of the column.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridColumnHeaderImageUrl#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n         dt.Columns.Add(new DataColumn(&quot;BooleanValue&quot;, typeof(bool)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n            dr[3] = false;\n \n            dt.Rows.Add(dr);\n         }\n\n         // To persist the data source between posts to the server, store\n         // it in session state.  \n         Session[&quot;Source&quot;] = dt;\n \n         DataView dv = new DataView(dt);\n         return dv;\n\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            // Make sure to set the header text before binding the data to \n            // the DataGrid control; otherwise, the change will not appear \n            // until the next time the page is refreshed.\n            ItemsGrid.Columns[0].HeaderText = &quot;Item&quot;;\n\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         double subtotal = 0.0;\n\n         // Update the data source with the user&#39;s selection and \n         // calculate the subtotal.\n         DataTable dt = UpdateSource(ref subtotal);\n\n         // Display the subtotal in the footer section of the third column.\n         ItemsGrid.Columns[2].FooterText = \n             &quot;Subtotal: &quot; + subtotal.ToString(&quot;c&quot;);\n\n         // Create a DataView and bind it to the DataGrid control.\n         DataView dv = new DataView(dt);\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n      // This version of UpdateSource updates the data source and \n      // calculates the subtotal.\n      DataTable UpdateSource(ref double subtotal)\n      {\n\n         // Retrieve the data table from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Iterate through the Items collection and update the data source\n         // with the user&#39;s selections. If an item is selected, add the\n         // amount of the item to the subtotal.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            // Retrieve the SelectCheckBox CheckBox control from the \n            // specified item (row) in the DataGrid control.\n            CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n            if (selection != null)\n            {\n\n               // Update the BooleanValue field with the value of the check box.\n               dt.Rows[item.ItemIndex][3] = selection.Checked;\n\n               // Add the value of the item to the subtotal if the item is\n               // selected.\n               if (selection.Checked)\n               {\n                  subtotal += \n                      Convert.ToDouble(item.Cells[2].Text.Substring(1));\n               }\n\n            }\n\n         }\n\n         // Save the data source.\n         Session[&quot;Source&quot;] = dt;\n\n         return dt;\n\n      }\n\n      // This version of UpdateSource updates the data source only.\n      DataTable UpdateSource()\n      {\n\n         // Retrieve the data table from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Iterate through the Items collection and update the data source\n         // with the user&#39;s selections. If an item is selected, add the\n         // amount of the item to the subtotal.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            // Retrieve the SelectCheckBox CheckBox control from the \n            // specified item (row) in the DataGrid control.\n            CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n            if (selection != null)\n            {\n\n               // Update the BooleanValue field with the value of the check box.\n               dt.Rows[item.ItemIndex][3] = selection.Checked;\n\n            }\n\n         }\n\n         // Save the data source.\n         Session[&quot;Source&quot;] = dt;\n\n         return dt;\n\n      }\n\n      void Selection_Change(Object sender, EventArgs e)\n      {\n\n         // Set the image for the header section of the first column in\n         // the DataGrid control.\n         ItemsGrid.Columns[0].HeaderImageUrl = List.SelectedItem.Value;\n\n         // Create a DataView and bind it to the DataGrid control. This \n         // will refresh the DataGrid control with the updated header image.\n         DataView dv = new DataView(UpdateSource());\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderImageUrl Example&lt;/h3&gt;\n\n      Select an image for the header section of the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;\n                 HeaderImageUrl=&quot;image1.jpg&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 HeaderImageUrl=&quot;image2.jpg&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;\n                 HeaderImageUrl=&quot;image3.jpg&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn\n                 HeaderImageUrl=&quot;image4.jpg&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;BooleanValue&quot;) %&gt;&#39;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n       \n      &lt;hr /&gt;\n\n      Header image for first column: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;image1.jpg&quot;&gt; Image 1 &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;image2.jpg&quot;&gt; Image 2 &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;image3.jpg&quot;&gt; Image 3 &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;image4.jpg&quot;&gt; Image 4 &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridColumnHeaderImageUrl#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection  \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n         dt.Columns.Add(new DataColumn(&quot;BooleanValue&quot;, GetType(Boolean)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n            dr(3) = False\n \n            dt.Rows.Add(dr)\n         \n         Next i\n\n         &#39; To persist the data source between posts to the server, store\n         &#39; it in session state.  \n         Session(&quot;Source&quot;) = dt\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n         \n            &#39; Make sure to set the header text before binding the data to \n            &#39; the DataGrid control; otherwise, the change will not appear \n            &#39; until the next time the page is refreshed.\n            ItemsGrid.Columns(0).HeaderText = &quot;Item&quot;\n\n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n        \n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         Dim subtotal As Double = 0.0\n\n         &#39; Update the data source with the user&#39;s selection and \n         &#39; calculate the subtotal.\n         Dim dt As DataTable = UpdateSource(subtotal)\n\n         &#39; Display the subtotal in the footer section of the third column.\n         ItemsGrid.Columns(2).FooterText = &quot;Subtotal: &quot; &amp; subtotal.ToString(&quot;c&quot;)\n\n         &#39; Create a DataView and bind it to the DataGrid control.\n         Dim dv As DataView = New DataView(dt)\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n      &#39; This version of UpdateSource updates the data source and \n      &#39; calculates the subtotal.\n      Function UpdateSource(ByRef subtotal As Double) As DataTable \n\n         &#39; Retrieve the data table from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n         Dim item As DataGridItem \n\n         &#39; Iterate through the Items collection and update the data source\n         &#39; with the user&#39;s selections. If an item is selected, add the\n         &#39; amount of the item to the subtotal.\n         For Each item in ItemsGrid.Items\n\n            &#39; Retrieve the SelectCheckBox CheckBox control from the \n            &#39; specified item (row) in the DataGrid control.\n            Dim selection As CheckBox = CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n            If Not selection Is Nothing\n\n               &#39; Update the BooleanValue field with the value of the check box.\n               dt.Rows(item.ItemIndex)(3) = selection.Checked\n\n               &#39; Add the value of the item to the subtotal if the item is \n               &#39; selected.\n               If selection.Checked Then\n           \n                  subtotal += Convert.ToDouble(item.Cells(2).Text.Substring(1))\n\n               End If\n\n            End If\n\n         Next\n\n         &#39; Save the data source.\n         Session(&quot;Source&quot;) = dt\n\n         Return dt\n\n      End Function\n\n      &#39; This version of UpdateSource updates the data source only.\n      Function UpdateSource() As DataTable \n\n         &#39; Retrieve the data table from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n         Dim item As DataGridItem \n\n         &#39; Iterate through the Items collection and update the data source\n         &#39; with the user&#39;s selections. If an item is selected, add the\n         &#39; amount of the item to the subtotal.\n         For Each item in ItemsGrid.Items\n\n            &#39; Retrieve the SelectCheckBox CheckBox control from the  \n            &#39; specified item (row) in the DataGrid control.\n            Dim selection As CheckBox = _\n                CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n            If Not selection Is Nothing\n\n               &#39; Update the BooleanValue field with the value of the check box.\n               dt.Rows(item.ItemIndex)(3) = selection.Checked\n\n            End If\n\n         Next\n\n         &#39; Save the data source.\n         Session(&quot;Source&quot;) = dt\n\n         Return dt\n\n      End Function\n\n      Sub Selection_Change(sender As Object, e As EventArgs)\n\n         &#39; Set the image for the header section of the first column in\n         &#39; the DataGrid control.\n         ItemsGrid.Columns(0).HeaderImageUrl = List.SelectedItem.Value\n\n         &#39; Create a DataView and bind it to the DataGrid control. This \n         &#39; will refresh the DataGrid control with the updated header image.\n         Dim dv As DataView = New DataView(UpdateSource())\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderImageUrl Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderImageUrl Example&lt;/h3&gt;\n\n      Select an image for the header section of the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;\n                 HeaderImageUrl=&quot;image1.jpg&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 HeaderImageUrl=&quot;image2.jpg&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 DataFormatString=&quot;{0:c}&quot;\n                 HeaderImageUrl=&quot;image3.jpg&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn\n                 HeaderImageUrl=&quot;image4.jpg&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;BooleanValue&quot;) %&gt;&#39;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n       \n      &lt;hr /&gt;\n\n      Header image for first column: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;image1.jpg&quot;&gt; Image 1 &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;image2.jpg&quot;&gt; Image 2 &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;image3.jpg&quot;&gt; Image 3 &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;image4.jpg&quot;&gt; Image 4 &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_HeaderStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_HeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the style properties for the header section of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that contains the style properties for the header section of the column. The default value is an empty <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to provide a custom style for the header section of the column. Common style attributes that can be adjusted include foreground color, background color, font, and content alignment within the cell. Providing a different style enhances the appearance of the column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderStyle property to get the style properties for the header section of the column.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridColumnFooterStyle#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(string)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 to 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n  \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n\n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         &#39; Count the number of selected items in the DataGrid control.\n         Dim count As Integer = 0\n\n         &#39; Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;\n\n         &#39; Iterate through each item (row) in the DataGrid control and\n         &#39; determine whether it is selected.\n         Dim item As DataGridItem\n \n         For Each item In ItemsGrid.Items\n\n            DetermineSelection(item, count)        \n\n         Next\n\n         &#39; If no items are selected, display the appropriate message.\n         If count = 0 Then\n\n            Message.Text = &quot;No items selected&quot;\n\n         End If\n\n      End Sub\n\n      Sub DetermineSelection(item As DataGridItem, ByRef count As Integer)\n\n         &#39; Retrieve the SelectCheckBox CheckBox control from the \n         &#39; specified item (row) in the DataGrid control.\n         Dim selection As CheckBox = _\n             CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n         &#39; If the item is selected, display the appropriate message and\n         &#39; increment the count of selected items.\n         If Not selection Is Nothing Then\n\n           If selection.Checked Then\n           \n              Message.Text &amp;= &quot;- &quot; &amp; item.Cells(1).Text &amp; &quot;&lt;br /&gt;&quot;\n              count = count + 1\n           \n           End If\n\n         End If    \n\n      End Sub\n\n      Sub Selection_Change(sender As Object, e As EventArgs)\n\n         &#39; Set the background color for the header and footer sections\n         &#39; of the first column in the DataGrid control.\n         ItemsGrid.Columns(0).HeaderStyle.BackColor = _\n             System.Drawing.Color.FromName(List.SelectedItem.Value)\n         ItemsGrid.Columns(0).FooterStyle.BackColor = _\n             System.Drawing.Color.FromName(List.SelectedItem.Value)\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/h3&gt;\n\n      Select a background color for the header and \n      footer sections of the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 HeaderText=&quot;Item&quot;&gt;\n\n               &lt;HeaderStyle BackColor=&quot;White&quot;&gt;\n               &lt;/HeaderStyle&gt;\n\n               &lt;FooterStyle BackColor=&quot;White&quot;&gt;\n               &lt;/FooterStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      Header and footer BackColor: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;White&quot;&gt; White &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Silver&quot;&gt; Silver &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkGray&quot;&gt; Dark Gray &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Khaki&quot;&gt; Khaki &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkKhaki&quot;&gt; Dark Khaki &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridColumnFooterStyle#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         // Count the number of selected items in the DataGrid control.\n         int count = 0;\n\n         // Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;;\n\n         // Iterate through each item (row) in the DataGrid control and\n         // determine whether it is selected.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            DetermineSelection(item, ref count);        \n\n         }\n\n         // If no items are selected, display the appropriate message.\n         if (count == 0)\n         {\n\n            Message.Text = &quot;No items selected&quot;;\n\n         }\n\n      }\n\n      void DetermineSelection(DataGridItem item, ref int count)\n      {\n\n         // Retrieve the SelectCheckBox CheckBox control from the \n         // specified item (row) in the DataGrid control.\n         CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n         // If the item is selected, display the appropriate message and\n         // increment the count of selected items.\n         if (selection != null)\n         {\n\n           if (selection.Checked)\n           {\n              Message.Text += &quot;- &quot; + item.Cells[1].Text + &quot;&lt;br /&gt;&quot;;\n              count++;\n           }\n\n         }    \n\n      }\n\n      void Selection_Change(Object sender, EventArgs e)\n      {\n\n         // Set the background color for the header and footer sections \n         // of the first column in the DataGrid control.\n         ItemsGrid.Columns[0].HeaderStyle.BackColor = \n             System.Drawing.Color.FromName(List.SelectedItem.Value);\n         ItemsGrid.Columns[0].FooterStyle.BackColor = \n             System.Drawing.Color.FromName(List.SelectedItem.Value);\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderStyle and FooterStyle Example&lt;/h3&gt;\n\n      Select a background color for the header and \n      footer sections of the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 HeaderText=&quot;Item&quot;&gt;\n\n               &lt;HeaderStyle BackColor=&quot;White&quot;&gt;\n               &lt;/HeaderStyle&gt;\n\n               &lt;FooterStyle BackColor=&quot;White&quot;&gt;\n               &lt;/FooterStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      Header and footer BackColor: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;White&quot;&gt; White &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Silver&quot;&gt; Silver &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkGray&quot;&gt; Dark Gray &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Khaki&quot;&gt; Khaki &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkKhaki&quot;&gt; Dark Khaki &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_HeaderText\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_HeaderText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text displayed in the header section of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string HeaderText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text displayed in the header section of the column. The default value is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the HeaderText property to specify or determine the text displayed in the header section of the column. If you want to display an image instead of text in the header section of the column, set the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_HeaderImageUrl_\" data-linktype=\"relative-path\">HeaderImageUrl</a> property instead of this property.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Text is not HTML-encoded before it is displayed in the header section of the column. This makes it possible to embed script within HTML tags in the text. If this property is set dynamically using user input, be sure to validate the value to reduce security vulnerabilities.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HeaderText property to specify the text for the header section of the column.  </p>\n<pre><code class=\"lang-vb\" name=\"DataGridColumnFooterText#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection  \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n         dt.Columns.Add(new DataColumn(&quot;BooleanValue&quot;, GetType(Boolean)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n            dr(3) = False\n \n            dt.Rows.Add(dr)\n         \n         Next i\n\n         &#39; To persist the data source between posts to the server, store\n         &#39; it in session state.  \n         Session(&quot;Source&quot;) = dt\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n         \n            &#39; Make sure to set the header text before binding the data to \n            &#39; the DataGrid control; otherwise, the change will not appear \n            &#39; until the next time the page is refreshed.\n            ItemsGrid.Columns(0).HeaderText = &quot;Item&quot;\n\n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n        \n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         Dim subtotal As Double = 0.0\n\n         &#39; Update the data source with the user&#39;s selection and \n         &#39; calculate the subtotal.\n         Dim dt As DataTable = UpdateSource(subtotal)\n\n         &#39; Display the subtotal in the footer section of the third column.\n         ItemsGrid.Columns(2).FooterText = _\n             &quot;Subtotal: &quot; &amp; subtotal.ToString(&quot;c&quot;)\n\n         &#39; Create a DataView and bind it to the DataGrid control.\n         Dim dv As DataView = New DataView(dt)\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n      Function UpdateSource(ByRef subtotal As Double) As DataTable \n\n         &#39; Retrieve the data table from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n         Dim item As DataGridItem \n\n         &#39; Iterate through the Items collection and update the data source\n         &#39; with the user&#39;s selections. If an item is selected, add the\n         &#39; amount of the item to the subtotal.\n         For Each item in ItemsGrid.Items\n\n            &#39; Retrieve the SelectCheckBox CheckBox control from the \n            &#39; specified item (row) in the DataGrid control.\n            Dim selection As CheckBox = _\n                CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n            If Not selection Is Nothing\n\n               &#39; Update the BooleanValue field with the value of the check box.\n               dt.Rows(item.ItemIndex)(3) = selection.Checked\n\n               &#39; Add the value of the item to the subtotal if the item is \n               &#39; selected.\n               If selection.Checked Then\n           \n                  subtotal += _\n                      Convert.ToDouble(item.Cells(2).Text.Substring(1))\n\n               End If\n\n            End If\n\n         Next\n\n         &#39; Save the data source.\n         Session(&quot;Source&quot;) = dt\n\n         Return dt\n\n      End Function\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderText and FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderText and FooterText Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;BooleanValue&quot;) %&gt;&#39;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"DataGridColumnFooterText#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n         dt.Columns.Add(new DataColumn(&quot;BooleanValue&quot;, typeof(bool)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n            dr[3] = false;\n \n            dt.Rows.Add(dr);\n         }\n\n         // To persist the data source between posts to the server, store\n         // it in session state.  \n         Session[&quot;Source&quot;] = dt;\n \n         DataView dv = new DataView(dt);\n         return dv;\n\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            // Make sure to set the header text before binding the data to \n            // the DataGrid control; otherwise, the change will not appear \n            // until the next time the page is refreshed.\n            ItemsGrid.Columns[0].HeaderText = &quot;Item&quot;;\n\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         double subtotal = 0.0;\n\n         // Update the data source with the user&#39;s selection and \n         // calculate the subtotal.\n         DataTable dt = UpdateSource(ref subtotal);\n\n         // Display the subtotal in the footer section of the third column.\n         ItemsGrid.Columns[2].FooterText = \n             &quot;Subtotal: &quot; + subtotal.ToString(&quot;c&quot;);\n\n         // Create a DataView and bind it to the DataGrid control.\n         DataView dv = new DataView(dt);\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n      DataTable UpdateSource(ref double subtotal)\n      {\n\n         // Retrieve the data table from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Iterate through the Items collection and update the data source\n         // with the user&#39;s selections. If an item is selected, add the\n         // amount of the item to the subtotal.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            // Retrieve the SelectCheckBox CheckBox control from the \n            // specified item (row) in the DataGrid control.\n            CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n            if (selection != null)\n            {\n\n               // Update the BooleanValue field with the value of the check box.\n               dt.Rows[item.ItemIndex][3] = selection.Checked;\n\n               // Add the value of the item to the subtotal if the item is \n               // selected.\n               if (selection.Checked)\n               {\n                  subtotal += \n                      Convert.ToDouble(item.Cells[2].Text.Substring(1));\n               }\n\n            }\n\n         }\n\n         // Save the data source.\n         Session[&quot;Source&quot;] = dt;\n\n         return dt;\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn HeaderText and FooterText Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn HeaderText and FooterText Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&#39;&lt;%# DataBinder.Eval(Container.DataItem, &quot;BooleanValue&quot;) %&gt;&#39;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_IsTrackingViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_IsTrackingViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsTrackingViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that determines whether the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object is marked to save its state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool IsTrackingViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> is marked; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_ItemStyle\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_ItemStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the style properties for the item cells of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a> that contains the style properties for the item cells of the column. The default value is an empty <a class=\"xref\" href=\"system.web.ui.webcontrols.tableitemstyle\" data-linktype=\"relative-path\">TableItemStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to provide a custom style for the item cells of the column. Common style attributes that can be adjusted include foreground color, background color, font, and content alignment within the cell. Providing a different style enhances the appearance of the column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ItemStyle property to get the style properties of the item cells in a column.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridColumnItemStyle#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         // Count the number of selected items in the DataGrid control.\n         int count = 0;\n\n         // Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;;\n\n         // Iterate through each item (row) in the DataGrid control and\n         // determine whether it is selected.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            DetermineSelection(item, ref count);        \n\n         }\n\n         // If no items are selected, display the appropriate message.\n         if (count == 0)\n         {\n\n            Message.Text = &quot;No items selected&quot;;\n\n         }\n\n      }\n\n      void DetermineSelection(DataGridItem item, ref int count)\n      {\n\n         // Retrieve the SelectCheckBox CheckBox control from the \n         // specified item (row) in the DataGrid control.\n         CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n         // If the item is selected, display the appropriate message and\n         // increment the count of selected items.\n         if (selection != null)\n         {\n\n           if (selection.Checked)\n           {\n              Message.Text += &quot;- &quot; + item.Cells[1].Text + &quot;&lt;br /&gt;&quot;;\n              count++;\n           }\n\n         }    \n\n      }\n\n      void Selection_Change(Object sender, EventArgs e)\n      {\n\n         // Set the background color for the items in the first column\n         // of the DataGrid control.\n         ItemsGrid.Columns[0].ItemStyle.BackColor = \n             System.Drawing.Color.FromName(List.SelectedItem.Value);\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn ItemStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn ItemStyle Example&lt;/h3&gt;\n\n      Select a background color for the items in the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      BackColor: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;White&quot;&gt; White &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Silver&quot;&gt; Silver &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkGray&quot;&gt; Dark Gray &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Khaki&quot;&gt; Khaki &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkKhaki&quot;&gt; Dark Khaki &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridColumnItemStyle#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(string)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 to 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n  \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n\n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         &#39; Count the number of selected items in the DataGrid control.\n         Dim count As Integer = 0\n\n         &#39; Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;\n\n         &#39; Iterate through each item (row) in the DataGrid control and\n         &#39; determine whether it is selected.\n         Dim item As DataGridItem\n \n         For Each item In ItemsGrid.Items\n\n            DetermineSelection(item, count)        \n\n         Next\n\n         &#39; If no items are selected, display the appropriate message.\n         If count = 0 Then\n\n            Message.Text = &quot;No items selected&quot;\n\n         End If\n\n      End Sub\n\n      Sub DetermineSelection(item As DataGridItem, ByRef count As Integer)\n\n         &#39; Retrieve the SelectCheckBox CheckBox control from the \n         &#39; specified item (row) in the DataGrid control.\n         Dim selection As CheckBox = CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n         &#39; If the item is selected, display the appropriate message and\n         &#39; increment the count of selected items.\n         If Not selection Is Nothing Then\n\n           If selection.Checked Then\n           \n              Message.Text &amp;= &quot;- &quot; &amp; item.Cells(1).Text &amp; &quot;&lt;br /&gt;&quot;\n              count = count + 1\n           \n           End If\n\n         End If    \n\n      End Sub\n\n      Sub Selection_Change(sender As Object, e As EventArgs)\n\n         &#39; Set the background color for the items in the first column\n         &#39; of the DataGrid control.\n         ItemsGrid.Columns(0).ItemStyle.BackColor = _\n             System.Drawing.Color.FromName(List.SelectedItem.Value)\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn ItemStyle Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn ItemStyle Example&lt;/h3&gt;\n\n      Select a background color for the items in the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;&gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      BackColor: &lt;br /&gt; \n\n      &lt;asp:DropDownList id=&quot;List&quot;\n           AutoPostBack=&quot;True&quot;\n           OnSelectedIndexChanged=&quot;Selection_Change&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;asp:ListItem Selected=&quot;True&quot; Value=&quot;White&quot;&gt; White &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Silver&quot;&gt; Silver &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkGray&quot;&gt; Dark Gray &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;Khaki&quot;&gt; Khaki &lt;/asp:ListItem&gt;\n         &lt;asp:ListItem Value=&quot;DarkKhaki&quot;&gt; Dark Khaki &lt;/asp:ListItem&gt;\n\n      &lt;/asp:DropDownList&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_Owner\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_Owner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Owner</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that the column is a member of.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.WebControls.DataGrid Owner { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that the column is a member of.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Owner property to programmatically determine the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that the column is a member of.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_SortExpression\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_SortExpression_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortExpression</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the field or expression to pass to the <span class=\"xref\">stem.Web.UI.WebControls.DataGrid.OnSortCommand*</span> method when a column is selected for sorting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string SortExpression { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the field to pass to <span class=\"xref\">stem.Web.UI.WebControls.DataGrid.OnSortCommand*</span> when a column is selected for sorting. The default value is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SortExpression property to specify or determine the name of the field to pass to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_OnSortCommand_\" data-linktype=\"relative-path\">OnSortCommand</a> method when a column is selected for sorting.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property does not bind the column to a field in data source. To bind a column to a field, see the documentation for the specific column type.  </p>\n</div>\n<p> When sorting is enabled, <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> controls are rendered in the heading section of each column where the SortExpression property is set.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is set to <code>true</code>, the SortExpression property for each column in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control that supports data binding is automatically set with the field name bound to the column. If the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a> property is set to <code>false</code>, you need to manually set the SortExpression property with the field name bound to the column for each column that you want to enable sorting for.  </p>\n</div>\n<p> These <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> controls allow you to sort the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control by the selected column. When a <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control for a column is clicked, the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_SortCommand\" data-linktype=\"relative-path\">SortCommand</a> event is raised. The value of the SortExpression property for the selected column is passed to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_OnSortCommand_\" data-linktype=\"relative-path\">OnSortCommand</a> event handler as part of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridsortcommandeventargs\" data-linktype=\"relative-path\">DataGridSortCommandEventArgs</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SortExpression property to specify the field name to use for sorting.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridColumnSortExpression#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource()\n      {\n      \n         // Create a Random object to mix up the order of items in the \n         // sample data.\n         Random Rand_Num = new Random();\n\n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(String)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(Double)));\n \n         // Populate the table with sample values.\n         for (int i=0; i&lt;=8; i++) \n         {\n\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + Rand_Num.Next(1, 15).ToString();\n            dr[2] = 1.23 * Rand_Num.Next(1, 15);\n \n            dt.Rows.Add(dr);\n         \n         }\n\n         // To persist the data source between posts to the server,\n         // store it in session state.  \n         Session[&quot;Source&quot;] = dt;\n \n         DataView dv = new DataView(dt);\n\n         return dv;\n      \n      }\n \n      void Page_Load(Object sender, EventArgs e)\n      { \n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack)\n         { \n         \n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         \n         }\n\n      }\n\n      void Sort_Grid(Object sender, DataGridSortCommandEventArgs e)\n      { \n\n         // Retrieve the data source from session state.\n         DataTable dt = (DataTable)Session[&quot;Source&quot;];\n\n         // Create a DataView from the DataTable.\n         DataView dv = new DataView(dt);\n\n         // The DataView provides an easy way to sort. Simply set the\n         // Sort property with the name of the field to sort by.\n         dv.Sort = e.SortExpression;\n\n         // Re-bind the data source and specify that it should be sorted\n         // by the field specified in the SortExpression property.\n         ItemsGrid.DataSource = dv;\n         ItemsGrid.DataBind();\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid SortExpression Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid SortExpression Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           OnSortCommand=&quot;Sort_Grid&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           AllowSorting=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridColumnSortExpression#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create a Random object to mix up the order of items in the\n         &#39; sample data.\n         Dim Rand_Num As Random = New Random()\n\n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, GetType(String)))\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, GetType(Double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 To 8 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; Rand_Num.Next(1, 15).ToString()\n            dr(2) = 1.23 * Rand_Num.Next(1, 15)\n \n            dt.Rows.Add(dr)\n         \n         Next i\n\n         &#39; To persist the data source between posts to the server,\n         &#39; store it in session state.  \n         Session(&quot;Source&quot;) = dt\n \n         Dim dv As DataView = New DataView(dt)\n\n         Return dv\n      \n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n         \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n         \n         End If\n\n      End Sub\n\n      Sub Sort_Grid(sender As Object, e As DataGridSortCommandEventArgs) \n\n         &#39; Retrieve the data source from session state.\n         Dim dt As DataTable = CType(Session(&quot;Source&quot;), DataTable)\n\n         &#39; Create a DataView from the DataTable.\n         Dim dv As DataView = New DataView(dt)\n\n         &#39; The DataView provides an easy way to sort. Simply set the\n         &#39; Sort property with the name of the field to sort by.\n         dv.Sort = e.SortExpression\n\n         &#39; Re-bind the data source and specify that it should be sorted\n         &#39; by the field specified in the SortExpression property.\n         ItemsGrid.DataSource = dv\n         ItemsGrid.DataBind()\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGrid SortExpression Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGrid SortExpression Example&lt;/h3&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           OnSortCommand=&quot;Sort_Grid&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           AllowSorting=&quot;True&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot; \n                 SortExpression=&quot;IntegerValue&quot;\n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 SortExpression=&quot;StringValue&quot; \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot; \n                 HeaderText=&quot;Price&quot;\n                 SortExpression=&quot;CurrencyValue&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_ViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_ViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object that allows a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to store its properties.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Web.UI.StateBag ViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> for the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ViewState property to retrieve the <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">System.Web.UI.StateBag</a> object that allows a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to store its properties. The state of each property is automatically managed.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_Visible\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_Visible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the column is visible in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Visible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the column is visible in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Visible property to programmatically control whether the column is visible in the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Visible property to indicate whether a column is visible.  </p>\n<pre><code class=\"lang-cs\" name=\"DataGridColumnVisible#1\">\n&lt;%@ Page Language=&quot;C#&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      ICollection CreateDataSource() \n      {\n      \n         // Create sample data for the DataGrid control.\n         DataTable dt = new DataTable();\n         DataRow dr;\n \n         // Define the columns of the table.\n         dt.Columns.Add(new DataColumn(&quot;IntegerValue&quot;, typeof(Int32)));\n         dt.Columns.Add(new DataColumn(&quot;StringValue&quot;, typeof(string)));\n         dt.Columns.Add(new DataColumn(&quot;CurrencyValue&quot;, typeof(double)));\n \n         // Populate the table with sample values.\n         for (int i = 0; i &lt; 5; i++) \n         {\n            dr = dt.NewRow();\n \n            dr[0] = i;\n            dr[1] = &quot;Item &quot; + i.ToString();\n            dr[2] = 1.23 * (i + 1);\n \n            dt.Rows.Add(dr);\n         }\n \n         DataView dv = new DataView(dt);\n         return dv;\n      }\n \n      void Page_Load(Object sender, EventArgs e) \n      {\n \n         // Load sample data only once, when the page is first loaded.\n         if (!IsPostBack) \n         {\n            ItemsGrid.DataSource = CreateDataSource();\n            ItemsGrid.DataBind();\n         }\n\n      }\n\n      void Button_Click(Object sender, EventArgs e) \n      {\n\n         // Count the number of selected items in the DataGrid control.\n         int count = 0;\n\n         // Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;;\n\n         // Iterate through each item (row) in the DataGrid control and\n         // determine whether it is selected.\n         foreach (DataGridItem item in ItemsGrid.Items)\n         {\n\n            DetermineSelection(item, ref count);        \n\n         }\n\n         // If no items are selected, display the appropriate message.\n         if (count == 0)\n         {\n\n            Message.Text = &quot;No items selected&quot;;\n\n         }\n\n      }\n\n      void DetermineSelection(DataGridItem item, ref int count)\n      {\n\n         // Retrieve the SelectCheckBox CheckBox control from the \n         // specified item (row) in the DataGrid control.\n         CheckBox selection = (CheckBox)item.FindControl(&quot;SelectCheckBox&quot;);\n\n         // If the item is selected, display the appropriate message and\n         // increment the count of selected items.\n         if (selection != null)\n         {\n\n           if (selection.Checked)\n           {\n              Message.Text += &quot;- &quot; + item.Cells[1].Text + &quot;&lt;br /&gt;&quot;;\n              count++;\n           }\n\n         }    \n\n      }\n\n      void Check_Change(Object sender, EventArgs e)\n      {\n\n         // Show or hide the first column depending on the value of\n         // the check box.\n         if (ShowCheckBox.Checked)\n         {\n            ItemsGrid.Columns[0].Visible = true;\n         }\n         else\n         {\n            ItemsGrid.Columns[0].Visible = false;\n         }\n\n      }\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn Visible Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn Visible Example&lt;/h3&gt;\n\n      Select whether to show or hide the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;\n                 Visible=&quot;True&quot; \n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 Visible=&quot;True&quot;  \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot;\n                 Visible=&quot;True&quot;  \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;\n                 Visible=&quot;True&quot; &gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt;  \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      &lt;asp:CheckBox id=&quot;ShowCheckBox&quot;\n           Text=&quot;Show first column&quot;\n           AutoPostBack=&quot;True&quot;\n           OnCheckedChanged=&quot;Check_Change&quot;\n           Checked=&quot;True&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"DataGridColumnVisible#1\">\n&lt;%@ Page Language=&quot;VB&quot; AutoEventWireup=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n \n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n   &lt;script runat=&quot;server&quot;&gt;\n \n      Function CreateDataSource() As ICollection \n      \n         &#39; Create sample data for the DataGrid control.\n         Dim dt As DataTable = New DataTable()\n         Dim dr As DataRow\n \n         &#39; Define the columns of the table.\n         dt.Columns.Add(New DataColumn(&quot;IntegerValue&quot;, GetType(Int32)))\n         dt.Columns.Add(New DataColumn(&quot;StringValue&quot;, GetType(string)))\n         dt.Columns.Add(New DataColumn(&quot;CurrencyValue&quot;, GetType(double)))\n \n         &#39; Populate the table with sample values.\n         Dim i As Integer\n\n         For i = 0 to 4 \n        \n            dr = dt.NewRow()\n \n            dr(0) = i\n            dr(1) = &quot;Item &quot; &amp; i.ToString()\n            dr(2) = 1.23 * (i + 1)\n \n            dt.Rows.Add(dr)\n\n         Next i\n \n         Dim dv As DataView = New DataView(dt)\n         Return dv\n\n      End Function\n \n      Sub Page_Load(sender As Object, e As EventArgs) \n \n         &#39; Load sample data only once, when the page is first loaded.\n         If Not IsPostBack Then \n  \n            ItemsGrid.DataSource = CreateDataSource()\n            ItemsGrid.DataBind()\n\n         End If\n\n      End Sub\n\n      Sub Button_Click(sender As Object, e As EventArgs) \n\n         &#39; Count the number of selected items in the DataGrid control.\n         Dim count As Integer = 0\n\n         &#39; Display the selected times.\n         Message.Text = &quot;You Selected: &lt;br /&gt;&quot;\n\n         &#39; Iterate through each item (row) in the DataGrid control and\n         &#39; determine whether it is selected.\n         Dim item As DataGridItem\n \n         For Each item In ItemsGrid.Items\n\n            DetermineSelection(item, count)        \n\n         Next\n\n         &#39; If no items are selected, display the appropriate message.\n         If count = 0 Then\n\n            Message.Text = &quot;No items selected&quot;\n\n         End If\n\n      End Sub\n\n      Sub DetermineSelection(item As DataGridItem, ByRef count As Integer)\n\n         &#39; Retrieve the SelectCheckBox CheckBox control from the \n         &#39; specified item (row) in the DataGrid control.\n         Dim selection As CheckBox = _\n             CType(item.FindControl(&quot;SelectCheckBox&quot;), CheckBox)\n\n         &#39; If the item is selected, display the appropriate message and\n         &#39; increment the count of selected items.\n         If Not selection Is Nothing Then\n\n           If selection.Checked Then\n           \n              Message.Text &amp;= &quot;- &quot; &amp; item.Cells(1).Text &amp; &quot;&lt;br /&gt;&quot;\n              count = count + 1\n           \n           End If\n\n         End If    \n\n      End Sub\n\n      Sub Check_Change(sender As Object, e As EventArgs)\n\n         &#39; Show or hide the first column depending on the value of\n         &#39; the check box.\n         If ShowCheckBox.Checked Then\n        \n            ItemsGrid.Columns(0).Visible = True\n         \n         Else\n         \n            ItemsGrid.Columns(0).Visible = False\n         \n         End If\n\n      End Sub\n\n   &lt;/script&gt;\n \n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;DataGridColumn Visible Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n \n   &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n \n      &lt;h3&gt;DataGridColumn Visible Example&lt;/h3&gt;\n\n      Select whether to show or hide the first column.\n\n      &lt;br /&gt;&lt;br /&gt;\n \n      &lt;b&gt;Product List&lt;/b&gt;\n \n      &lt;asp:DataGrid id=&quot;ItemsGrid&quot;\n           BorderColor=&quot;black&quot;\n           BorderWidth=&quot;1&quot;\n           CellPadding=&quot;3&quot;\n           ShowFooter=&quot;True&quot;\n           AutoGenerateColumns=&quot;False&quot;\n           runat=&quot;server&quot;&gt;\n\n         &lt;HeaderStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/HeaderStyle&gt;\n\n         &lt;FooterStyle BackColor=&quot;#00aaaa&quot;&gt;\n         &lt;/FooterStyle&gt;\n\n         &lt;Columns&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;IntegerValue&quot;\n                 Visible=&quot;True&quot; \n                 HeaderText=&quot;Item&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;StringValue&quot;\n                 Visible=&quot;True&quot;  \n                 HeaderText=&quot;Description&quot;/&gt;\n\n            &lt;asp:BoundColumn DataField=&quot;CurrencyValue&quot;\n                 Visible=&quot;True&quot;  \n                 HeaderText=&quot;Price&quot;\n                 DataFormatString=&quot;{0:c}&quot;&gt;\n\n               &lt;ItemStyle HorizontalAlign=&quot;Right&quot;&gt;\n               &lt;/ItemStyle&gt;\n\n            &lt;/asp:BoundColumn&gt;\n\n            &lt;asp:TemplateColumn HeaderText=&quot;Select Item&quot;\n                 Visible=&quot;True&quot; &gt;\n\n               &lt;ItemTemplate&gt;\n\n                  &lt;asp:CheckBox id=&quot;SelectCheckBox&quot;\n                       Text=&quot;Add to Cart&quot;\n                       Checked=&quot;False&quot;\n                       runat=&quot;server&quot;/&gt;\n\n               &lt;/ItemTemplate&gt;\n\n            &lt;/asp:TemplateColumn&gt;\n \n         &lt;/Columns&gt; \n \n      &lt;/asp:DataGrid&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Button id=&quot;SubmitButton&quot;\n           Text=&quot;Submit&quot;\n           OnClick = &quot;Button_Click&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;br /&gt;&lt;br /&gt;\n\n      &lt;asp:Label id=&quot;Message&quot;\n           runat=&quot;server&quot;/&gt;\n\n      &lt;hr /&gt;\n\n      &lt;asp:CheckBox id=&quot;ShowCheckBox&quot;\n           Text=&quot;Show first column&quot;\n           AutoPostBack=&quot;True&quot;\n           OnCheckedChanged=&quot;Check_Change&quot;\n           Checked=&quot;True&quot;\n           runat=&quot;server&quot;/&gt;\n \n   &lt;/form&gt;\n \n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_Initialize\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize()</div>        \r\n          </div>\r\n    \r\n            <p>Provides the base implementation to reset a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to its initial state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Initialize ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Initialize method provides the base implementation to reset a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to its initial state. This method is not called directly. Instead, this method is inherited by a derived column class, which can then be used to reset a column of the derived type. You can optionally override this method in the derived class to provide a custom initialization routine. This base implementation of the Initialize method is often called from the overridden method to reset properties common to all column types derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class. The Initialize method is usually called during data binding, prior to the first row being bound.  </p>\n<p> When the Initialize method is used, the design mode of the column is set to <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is commonly used by control developers.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_InitializeCell_System_Web_UI_WebControls_TableCell_System_Int32_System_Web_UI_WebControls_ListItemType_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_InitializeCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitializeCell(TableCell,Int32,ListItemType)</div>        \r\n          </div>\r\n    \r\n            <p>Provides the base implementation to reset the specified cell from a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to its initial state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cell</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.tablecell\" data-linktype=\"relative-path\">TableCell</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.ui.webcontrols.tablecell\" data-linktype=\"relative-path\">TableCell</a> that represents the cell to reset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column number where the cell is located.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.ui.webcontrols.listitemtype\" data-linktype=\"relative-path\">ListItemType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.ui.webcontrols.listitemtype\" data-linktype=\"relative-path\">ListItemType</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The InitializeCell method provides the base implementation to reset the specified cell from a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class to its initial state. This method is not called directly. Instead, this method is inherited by a derived column class, which can then be used to reset a cell in the column of the derived type. You can optionally override this method in the derived class to provide a custom initialization routine. This base implementation of the InitializeCell method is often called from the overridden method to reset properties common to all cells in columns derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.  </p>\n<p> In this implementation, the InitializeCell method resets only the header and footer cells. Other types of cells are not affected by this method.  </p>\n<p> When sorting is enabled (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid#System_Web_UI_WebControls_DataGrid_AllowSorting_\" data-linktype=\"relative-path\">AllowSorting</a> property to <code>true</code>), a <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control is added to the header cell by default. This allows you to sort the column when the <a class=\"xref\" href=\"system.web.ui.webcontrols.linkbutton\" data-linktype=\"relative-path\">LinkButton</a> control is clicked. If you specify an image for the header cell (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_HeaderImageUrl_\" data-linktype=\"relative-path\">HeaderImageUrl</a> property), an <a class=\"xref\" href=\"system.web.ui.webcontrols.imagebutton\" data-linktype=\"relative-path\">ImageButton</a> control is created instead.  </p>\n<p> When sorting is disabled, the text specified by the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property is displayed in the header cell. If you specify an image for the header cell (by setting the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_HeaderImageUrl_\" data-linktype=\"relative-path\">HeaderImageUrl</a> property), an <a class=\"xref\" href=\"system.web.ui.webcontrols.image\" data-linktype=\"relative-path\">Image</a> control is added to the header cell.  </p>\n<p> Because a browser will not display an empty cell, if an image in not displayed in the header cell and the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_HeaderText_\" data-linktype=\"relative-path\">HeaderText</a> property is not set, a nonbreaking space HTML entity (<code>&amp;nbsp;</code>) is displayed in the header cell. Similarly, if the footer cell does not have any content (if the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_FooterText_\" data-linktype=\"relative-path\">FooterText</a> property is not set), a nonbreaking space HTML entity is displayed in the footer cell.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is commonly used by control developers.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void LoadViewState (object savedState);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>savedState</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used primarily by the .NET Framework infrastructure and is not intended to be used directly from your code.  However, control developers can override this method to specify how a custom server control restores its view state. For more information, see <a href=\"../Topic/ASP.NET%20State%20Management%20Overview.md\" data-linktype=\"relative-path\">ASP.NET State Management Overview</a>.  </p>\n<p> Use the LoadViewState method to load the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object. This allows a column to perform custom view-state management.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_OnColumnChanged\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_OnColumnChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnChanged()</div>        \r\n          </div>\r\n    \r\n            <p>Calls the <span class=\"xref\">stem.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnChanged ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the properties of a column derived from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class change, the <a class=\"xref\" href=\"system.web.ui.design.webcontrols.datagriddesigner#System_Web_UI_Design_WebControls_DataGridDesigner_OnColumnsChanged_\" data-linktype=\"relative-path\">OnColumnsChanged</a> method should be called.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Saves the current state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual object SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the saved state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the SaveViewState method to save the state of the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object. This allows a column to perform custom view-state management.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_ToString\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the string representation of the column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ToString method to get the string representation of the column.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method is inherited from the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a> class and is not applicable to the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Causes tracking of view-state changes to the server control so they can be stored in the server control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">StateBag</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the TrackViewState method to track view-state changes on the server control so they can be stored in the server control&#39;s <a class=\"xref\" href=\"system.web.ui.statebag\" data-linktype=\"relative-path\">System.Web.UI.StateBag</a> object. This allows a column to perform custom view-state management.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_IsTrackingViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_IsTrackingViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.IsTrackingViewState</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the column is tracking view state changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Web.UI.IStateManager.IsTrackingViewState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object is tracking its view-state changes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn#System_Web_UI_WebControls_DataGridColumn_IsTrackingViewState_\" data-linktype=\"relative-path\">IsTrackingViewState</a> member is used primarily by control developers when deriving a custom implementation from the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_LoadViewState_System_Object_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_LoadViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.LoadViewState(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Loads previously saved state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IStateManager.LoadViewState (object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that represents the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagridcolumn\" data-linktype=\"relative-path\">DataGridColumn</a> object to restore.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_SaveViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_SaveViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.SaveViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an object containing state changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IStateManager.SaveViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> that contains the view state changes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_TrackViewState\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_DataGridColumn_System_Web_UI_IStateManager_TrackViewState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IStateManager.TrackViewState()</div>        \r\n          </div>\r\n    \r\n            <p>Starts tracking state changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IStateManager.TrackViewState ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DataGridColumn.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DataGridColumn.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.DesignMode\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.FooterStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.FooterText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.HeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.HeaderText\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.InitializeCell\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.ItemStyle\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.OnColumnChanged\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.Owner\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.SortExpression\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.IStateManager.IsTrackingViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.IStateManager.LoadViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.IStateManager.SaveViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.IStateManager.TrackViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.ToString\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.TrackViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.ViewState\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.DataGridColumn.Visible\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9ba00fae-a708-7a5d-db71-c22e0dbe8c11\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\DataGridColumn.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Serves as the base class for the different column types of the  control.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.DataGridColumn\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.DataGridColumn.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.DataGridColumn.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.DataGridColumn","System.Web.UI.WebControls.DataGridColumn..ctor","System.Web.UI.WebControls.DataGridColumn.DesignMode","System.Web.UI.WebControls.DataGridColumn.FooterStyle","System.Web.UI.WebControls.DataGridColumn.FooterText","System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl","System.Web.UI.WebControls.DataGridColumn.HeaderStyle","System.Web.UI.WebControls.DataGridColumn.HeaderText","System.Web.UI.WebControls.DataGridColumn.Initialize","System.Web.UI.WebControls.DataGridColumn.InitializeCell","System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState","System.Web.UI.WebControls.DataGridColumn.ItemStyle","System.Web.UI.WebControls.DataGridColumn.LoadViewState","System.Web.UI.WebControls.DataGridColumn.OnColumnChanged","System.Web.UI.WebControls.DataGridColumn.Owner","System.Web.UI.WebControls.DataGridColumn.SaveViewState","System.Web.UI.WebControls.DataGridColumn.SortExpression","System.Web.UI.WebControls.DataGridColumn.IStateManager.IsTrackingViewState","System.Web.UI.WebControls.DataGridColumn.IStateManager.LoadViewState","System.Web.UI.WebControls.DataGridColumn.IStateManager.SaveViewState","System.Web.UI.WebControls.DataGridColumn.IStateManager.TrackViewState","System.Web.UI.WebControls.DataGridColumn.ToString","System.Web.UI.WebControls.DataGridColumn.TrackViewState","System.Web.UI.WebControls.DataGridColumn.ViewState","System.Web.UI.WebControls.DataGridColumn.Visible"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.DataGridColumn","System::Web::UI::WebControls::DataGridColumn","System.Web.UI.WebControls.DataGridColumn.#ctor","System::Web::UI::WebControls::DataGridColumn::#ctor","System.Web.UI.WebControls.DataGridColumn.DesignMode","System::Web::UI::WebControls::DataGridColumn::DesignMode","System.Web.UI.WebControls.DataGridColumn.FooterStyle","System::Web::UI::WebControls::DataGridColumn::FooterStyle","System.Web.UI.WebControls.DataGridColumn.FooterText","System::Web::UI::WebControls::DataGridColumn::FooterText","System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl","System::Web::UI::WebControls::DataGridColumn::HeaderImageUrl","System.Web.UI.WebControls.DataGridColumn.HeaderStyle","System::Web::UI::WebControls::DataGridColumn::HeaderStyle","System.Web.UI.WebControls.DataGridColumn.HeaderText","System::Web::UI::WebControls::DataGridColumn::HeaderText","System.Web.UI.WebControls.DataGridColumn.Initialize","System::Web::UI::WebControls::DataGridColumn::Initialize","System.Web.UI.WebControls.DataGridColumn.InitializeCell","System::Web::UI::WebControls::DataGridColumn::InitializeCell","System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState","System::Web::UI::WebControls::DataGridColumn::IsTrackingViewState","System.Web.UI.WebControls.DataGridColumn.ItemStyle","System::Web::UI::WebControls::DataGridColumn::ItemStyle","System.Web.UI.WebControls.DataGridColumn.LoadViewState","System::Web::UI::WebControls::DataGridColumn::LoadViewState","System.Web.UI.WebControls.DataGridColumn.OnColumnChanged","System::Web::UI::WebControls::DataGridColumn::OnColumnChanged","System.Web.UI.WebControls.DataGridColumn.Owner","System::Web::UI::WebControls::DataGridColumn::Owner","System.Web.UI.WebControls.DataGridColumn.SaveViewState","System::Web::UI::WebControls::DataGridColumn::SaveViewState","System.Web.UI.WebControls.DataGridColumn.SortExpression","System::Web::UI::WebControls::DataGridColumn::SortExpression","System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState","System::Web::UI::WebControls::DataGridColumn::System#Web#UI#IStateManager#IsTrackingViewState","System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState","System::Web::UI::WebControls::DataGridColumn::System#Web#UI#IStateManager#LoadViewState","System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState","System::Web::UI::WebControls::DataGridColumn::System#Web#UI#IStateManager#SaveViewState","System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState","System::Web::UI::WebControls::DataGridColumn::System#Web#UI#IStateManager#TrackViewState","System.Web.UI.WebControls.DataGridColumn.ToString","System::Web::UI::WebControls::DataGridColumn::ToString","System.Web.UI.WebControls.DataGridColumn.TrackViewState","System::Web::UI::WebControls::DataGridColumn::TrackViewState","System.Web.UI.WebControls.DataGridColumn.ViewState","System::Web::UI::WebControls::DataGridColumn::ViewState","System.Web.UI.WebControls.DataGridColumn.Visible","System::Web::UI::WebControls::DataGridColumn::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9ba00fae-a708-7a5d-db71-c22e0dbe8c11","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\DataGridColumn.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/DataGridColumn.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridColumn class | Microsoft Docs","_op_ogTitle":"DataGridColumn class","description":"Serves as the base class for the different column types of the  control.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.DataGridColumn","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.datagridcolumn","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.datagridcolumn","fileRelativePath":"System.Web.UI.WebControls.DataGridColumn.html"},"themesRelativePathToOutputRoot":"_themes/"}