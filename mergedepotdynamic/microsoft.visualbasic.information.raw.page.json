{"content":"    \r\n    <h1 id=\"Microsoft_VisualBasic_Information\">\r\n      <span class=\"lang-csharp\">Information</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The <code>Information</code> module contains the procedures used to return, test for, or verify information.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[Microsoft.VisualBasic.CompilerServices.StandardModule]\npublic sealed class Information</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Information</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This module supports the Visual Basic language keywords and run-time library members that provide error information, validate data, determine array bounds, and retrieve data type and color information.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_Erl\" data-linktype=\"self-bookmark\">Erl()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an integer indicating the line number of the last executed statement. Read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_Err\" data-linktype=\"self-bookmark\">Err()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Contains information about run-time errors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsArray_System_Object_\" data-linktype=\"self-bookmark\">IsArray(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether a variable points to an array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsDate_System_Object_\" data-linktype=\"self-bookmark\">IsDate(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression represents a valid <code>Date</code> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsDBNull_System_Object_\" data-linktype=\"self-bookmark\">IsDBNull(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression evaluates to the <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsError_System_Object_\" data-linktype=\"self-bookmark\">IsError(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression is an exception type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsNothing_System_Object_\" data-linktype=\"self-bookmark\">IsNothing(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression has no object assigned to it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsNumeric_System_Object_\" data-linktype=\"self-bookmark\">IsNumeric(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression can be evaluated as a number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_IsReference_System_Object_\" data-linktype=\"self-bookmark\">IsReference(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression evaluates to a reference type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_LBound_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">LBound(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the lowest available subscript for the indicated dimension of an array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_QBColor_System_Int32_\" data-linktype=\"self-bookmark\">QBColor(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value representing the RGB color code corresponding to the specified color number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_RGB_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">RGB(Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value representing an RGB color value from a set of red, green and blue color components.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_SystemTypeName_System_String_\" data-linktype=\"self-bookmark\">SystemTypeName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>String</code> value containing the system data type name of a variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_TypeName_System_Object_\" data-linktype=\"self-bookmark\">TypeName(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>String</code> value containing data-type information about a variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_UBound_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">UBound(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the highest available subscript for the indicated dimension of an array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_VarType_System_Object_\" data-linktype=\"self-bookmark\">VarType(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value containing the data type classification of a variable.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_Information_VbTypeName_System_String_\" data-linktype=\"self-bookmark\">VbTypeName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>String</code> value containing the Visual Basic data type name of a variable.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_Erl\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_Erl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Erl()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an integer indicating the line number of the last executed statement. Read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Erl ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an integer indicating the line number of the last executed statement. Read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If Visual Basic encounters no line numbers, it returns 0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Erl</code> property to indicate the line number.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#6\">10:     On Error Resume Next\n20:     Err.Raise(60000)\n&#39; Returns 20.\n30:     MsgBox(Erl())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_Err\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_Err_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Err()</div>        \r\n          </div>\r\n    \r\n            <p>Contains information about run-time errors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Microsoft.VisualBasic.ErrObject Err ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.errobject\" data-linktype=\"relative-path\">ErrObject</a></div>\r\n                  </div>\r\n                  <p>Contains information about run-time errors.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The properties of the <code>Err</code> object are set by the generator of an error—Visual Basic, an object, or the programmer.  </p>\n<p> When a run-time error occurs, the properties of the <code>Err</code> object are filled with information that uniquely identifies the error and that you can use to handle the error. To generate a run-time error in your code, use the <code>Raise</code> method.  </p>\n<p> The <code>Err</code> object&#39;s properties are reset to zero or zero-length strings (&quot;&quot;) after an <code>Exit Sub</code>, <code>Exit Function</code>, <code>Exit Property</code>, or <code>Resume Next</code> statement within an error-handling routine. Using any form of the <code>Resume</code> statement outside of an error-handling routine will not reset the <code>Err</code> object&#39;s properties. You can use the <code>Clear</code> method to explicitly reset <code>Err</code>.  </p>\n<p> Use the <code>Raise</code> method rather than the <code>Error</code> statement to generate run-time errors for system errors and class modules. Your decision about whether to use the <code>Raise</code> method in other code depends on the richness of the information you want to return.  </p>\n<p> The <code>Err</code> object is an intrinsic object with global scope. Therefore, you do not need to create an instance of it in your code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the properties of the <code>Err</code> object in constructing an error-message dialog box. Notice that if you use the <code>Clear</code> method first, when you generate a Visual Basic error with the <code>Raise</code> method, Visual Basic&#39;s default values become the properties of the <code>Err</code> object.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#3\">    Dim Msg As String\n    &#39; If an error occurs, construct an error message.\n    On Error Resume Next   &#39; Defer error handling.\n    Err.Clear()\n    Err.Raise(6)   &#39; Generate an &quot;Overflow&quot; error.\n    &#39; Check for error, then show message.\n    If Err.Number &lt;&gt; 0 Then\n      Msg = &quot;Error # &quot; &amp; Str(Err.Number) &amp; &quot; was generated by &quot; &amp;\n            Err.Source &amp; ControlChars.CrLf &amp; Err.Description\n      MsgBox(Msg, MsgBoxStyle.Information, &quot;Error&quot;)\n    End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsArray_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsArray(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether a variable points to an array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsArray (object VarName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>VarName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether a variable points to an array.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsArray</code> returns <code>True</code> if the variable points to an array; otherwise, it returns <code>False</code>. <code>IsArray</code> is especially useful with objects that might contain arrays.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>IsArray</code> function to check if several variables refer to an array.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#34\">        Dim firstArray(4), secondArray(3) As Integer\n        Dim thisString As String = &quot;Test&quot;\n        Dim arrayCheck As Boolean\n        arrayCheck = IsArray(firstArray)\n        arrayCheck = IsArray(secondArray)\n        arrayCheck = IsArray(thisString)\n        &#39; The first two calls to IsArray return True; the third returns False.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsDate_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsDate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDate(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression represents a valid <code>Date</code> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsDate (object Expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether an expression represents a valid <code>Date</code> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsDate</code> returns <code>True</code> if <code>Expression</code> is of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> data type or can be converted to it; otherwise, it returns <code>False</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> data type holds both a date value and a time value. <code>IsDate</code> returns <code>True</code> if <code>Expression</code> represents a valid date, a valid time, or a valid date and time.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>IsDate</code> function to determine if several variables represent valid <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#35\">        Dim firstDate, secondDate As Date\n        Dim timeOnly, dateAndTime, noDate As String\n        Dim dateCheck As Boolean\n        firstDate = CDate(&quot;February 12, 1969&quot;)\n        secondDate = #2/12/1969#\n        timeOnly = &quot;3:45 PM&quot;\n        dateAndTime = &quot;March 15, 1981 10:22 AM&quot;\n        noDate = &quot;Hello&quot;\n        dateCheck = IsDate(firstDate)\n        dateCheck = IsDate(secondDate)\n        dateCheck = IsDate(timeOnly)\n        dateCheck = IsDate(dateAndTime)\n        dateCheck = IsDate(noDate)\n</code></pre><p> In the preceding example, <code>IsDate</code> returns <code>True</code> for the first four calls and <code>False</code> for the last call.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsDBNull_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsDBNull_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDBNull(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression evaluates to the <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsDBNull (object Expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether an expression evaluates to the <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsDBNull</code> returns <code>True</code> if the data type of <code>Expression</code> evaluates to the <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a> type; otherwise, <code>IsDBNull</code> returns <code>False</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">System.DBNull</a> value indicates that the <code>Object</code> represents missing or nonexistent data. <code>DBNull</code> is not the same as <code>Nothing</code>, which indicates that a variable has not yet been initialized. <code>DBNull</code> is also not the same as a zero-length string (<code>&quot;&quot;</code>), which is sometimes referred to as a null string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>IsDBNull</code> function to determine if a variable evaluates to <code>DBNull</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#36\">        Dim testVar As Object\n        Dim nullCheck As Boolean\n        nullCheck = IsDBNull(testVar)\n        testVar = &quot;&quot;\n        nullCheck = IsDBNull(testVar)\n        testVar = System.DBNull.Value\n        nullCheck = IsDBNull(testVar)\n        &#39; The first two calls to IsDBNull return False; the third returns True.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsError_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsError(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression is an exception type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsError (object Expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether an expression is an exception type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsError</code> returns <code>True</code> if the expression represents an <code>Object</code> variable that derives from the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> class in the <a class=\"xref\" href=\"system\" data-linktype=\"relative-path\">System</a> namespace.  </p>\n<p> An exception that derives from <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">System.Exception</a> can be caught with the <code>Try...Catch...Finally</code> statements.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>IsError</code> function to check if an expression represents a system exception.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#37\">    Sub demonstrateIsError(ByVal firstArg As Integer)\n        Dim returnVal As New Object\n        Dim badArg As String = &quot;Bad argument value&quot;\n        Dim errorCheck As Boolean\n        If firstArg &gt; 10000 Then\n            returnVal = New System.ArgumentOutOfRangeException(badArg)\n        End If\n        errorCheck = IsError(returnVal)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsNothing_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsNothing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsNothing(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression has no object assigned to it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsNothing (object Expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether an expression has no object assigned to it.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsNothing</code> returns <code>True</code> if the expression represents an object variable that currently has no object assigned to it; otherwise, it returns <code>False</code>.  </p>\n<p> <code>IsNothing</code> is intended to work on reference types. A value type cannot hold a value of  and reverts to its default value if you assign <code>Nothing</code> to it. If you supply a value type in <code>Expression</code>, <code>IsNothing</code> always returns <code>False</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>IsNothing</code> function to determine if an object variable is associated with any object instance.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#38\">        Dim testVar As Object\n        &#39; No instance has been assigned to variable testVar yet.\n        Dim testCheck As Boolean\n        &#39; The following call returns True.\n        testCheck = IsNothing(testVar)\n        &#39; Assign a string instance to variable testVar.\n        testVar = &quot;ABCDEF&quot;\n        &#39; The following call returns False.\n        testCheck = IsNothing(testVar)\n        &#39; Disassociate variable testVar from any instance.\n        testVar = Nothing\n        &#39; The following call returns True.\n        testCheck = IsNothing(testVar)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsNumeric_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsNumeric_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsNumeric(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression can be evaluated as a number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsNumeric (object Expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether an expression can be evaluated as a number.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsNumeric</code> returns <code>True</code> if the data type of <code>Expression</code> is <code>Boolean</code>, <code>Byte</code>, <code>Decimal</code>, <code>Double</code>, <code>Integer</code>, <code>Long</code>, <code>SByte</code>, <code>Short</code>, <code>Single</code>, <code>UInteger</code>, <code>ULong</code>, or <code>UShort</code>. It also returns <code>True</code> if <code>Expression</code> is a <code>Char</code>, <code>String</code>, or <code>Object</code> that can be successfully converted to a number. <code>Expression</code> can contain non-numeric characters. <code>IsNumeric</code> returns <code>True</code> if <code>Expression</code> is a string that contains a valid hexadecimal or octal number. <code>IsNumeric</code> also returns <code>True</code> if <code>Expression</code> contains a valid numeric expression that begins with a + or - character or contains commas.  </p>\n<p> <code>IsNumeric</code> returns <code>False</code> if <code>Expression</code> is of data type <code>Date</code>. It returns <code>False</code> if <code>Expression</code> is a <code>Char</code>, <code>String</code>, or <code>Object</code> that cannot be successfully converted to a number.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>IsNumeric</code> function to determine if the contents of a variable can be evaluated as a number.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#39\">        Dim testVar As Object\n        Dim numericCheck As Boolean\n        testVar = &quot;53&quot;\n        &#39; The following call to IsNumeric returns True.\n        numericCheck = IsNumeric(testVar)\n        testVar = &quot;459.95&quot;\n        &#39; The following call to IsNumeric returns True.\n        numericCheck = IsNumeric(testVar)\n        testVar = &quot;45 Help&quot;\n        &#39; The following call to IsNumeric returns False.\n        numericCheck = IsNumeric(testVar)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_IsReference_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_IsReference_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReference(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Boolean</code> value indicating whether an expression evaluates to a reference type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsReference (object Expression);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Expression</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> expression.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Boolean</code> value indicating whether an expression evaluates to a reference type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>IsReference</code> returns <code>True</code> if <code>Expression</code> represents a reference type, such as a class instance, a <code>String</code> type, or an array of any type; otherwise, it returns <code>False</code>.  </p>\n<p> A reference type contains a pointer to data stored elsewhere in memory. A value type contains its own data.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>IsReference</code> function to check if several variables refer to reference types.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#40\">        Dim testArray(3) As Boolean\n        Dim testString As String = &quot;Test string&quot;\n        Dim testObject As Object = New Object()\n        Dim testNumber As Integer = 12\n        testArray(0) = IsReference(testArray)\n        testArray(1) = IsReference(testString)\n        testArray(2) = IsReference(testObject)\n        testArray(3) = IsReference(testNumber)\n</code></pre><p> In the preceding example, the first three calls to <code>IsReference</code> return <code>True</code>. The last call returns <code>False</code>, because <code>Integer</code> is a value type, not a reference type.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_LBound_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_LBound_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LBound(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the lowest available subscript for the indicated dimension of an array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int LBound (Array Array, int Rank = 1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. Array of any data type. The array in which you want to find the lowest possible subscript of a dimension.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rank</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Integer</code>. The dimension for which the lowest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If <code>Rank</code> is omitted, 1 is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p><code>Integer</code>. The lowest value the subscript for the specified dimension can contain. <code>LBound</code> always returns 0 as long as <code>Array</code> has been initialized, even if it has no elements, for example if it is a zero-length string. If <code>Array</code> is <code>Nothing</code>, <code>LBound</code> throws an <a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>Array</code> is <code>Nothing</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.rankexception\" data-linktype=\"relative-path\">RankException</a></div>\r\n                  </div>\r\n                  <p><code>Rank</code> less than 1, or <code>Rank</code> is greater than the rank of <code>Array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Since array subscripts start at 0, the lowest available subscript for every dimension is always 0.  </p>\n<p> For an array with the following dimensions, <code>LBound</code> returns the values in the following table:  </p>\n<pre><code class=\"lang-vb#\">Dim a(100, 5, 4) As Byte  \n</code></pre><table>\n<thead>\n<tr>\n<th>Call to LBound</th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>LBound(a, 1)</code></td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>LBound(a, 2)</code></td>\n<td>0</td>\n</tr>\n<tr>\n<td><code>LBound(a, 3)</code></td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>LBound</code> function to determine the lowest available subscript for the indicated dimension of an array.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#41\">        Dim lowest, bigArray(10, 15, 20), littleArray(6) As Integer\n        lowest = LBound(bigArray, 1)\n        lowest = LBound(bigArray, 3)\n        lowest = LBound(littleArray)\n        &#39; All three calls to LBound return 0.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_QBColor_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_QBColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">QBColor(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value representing the RGB color code corresponding to the specified color number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int QBColor (int Color);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Color</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. A whole number in the range 0–15.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value representing the RGB color code corresponding to the specified color number.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Color</code> is outside of range 0 to 15, inclusive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting with the least-significant byte, the returned value specifies the red, green, and blue values used to set the appropriate color in the RGB system used by the Visual Basic language.  </p>\n<p> The <code>Color</code> argument has these settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Number</th>\n<th>Color</th>\n<th>Number</th>\n<th>Color</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>Black</td>\n<td>8</td>\n<td>Gray</td>\n</tr>\n<tr>\n<td>1</td>\n<td>Blue</td>\n<td>9</td>\n<td>Light blue</td>\n</tr>\n<tr>\n<td>2</td>\n<td>Green</td>\n<td>10</td>\n<td>Light green</td>\n</tr>\n<tr>\n<td>3</td>\n<td>Cyan</td>\n<td>11</td>\n<td>Light cyan</td>\n</tr>\n<tr>\n<td>4</td>\n<td>Red</td>\n<td>12</td>\n<td>Light red</td>\n</tr>\n<tr>\n<td>5</td>\n<td>Magenta</td>\n<td>13</td>\n<td>Light magenta</td>\n</tr>\n<tr>\n<td>6</td>\n<td>Yellow</td>\n<td>14</td>\n<td>Light yellow</td>\n</tr>\n<tr>\n<td>7</td>\n<td>White</td>\n<td>15</td>\n<td>Bright white</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>QBColor</code> function to change to the color indicated by <code>colorInteger</code>. <code>QBColor</code> accepts integer values between 0 and 15.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrCatRef#29\">        Dim colorInteger As Integer\n        &#39; Use 4 for red.\n        colorInteger = QBColor(4)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_RGB_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_RGB_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RGB(Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value representing an RGB color value from a set of red, green and blue color components.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int RGB (int Red, int Green, int Blue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Red</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> in the range 0–255, inclusive, that represents the intensity of the red component of the color.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Green</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> in the range 0–255, inclusive, that represents the intensity of the green component of the color.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Blue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> in the range 0–255, inclusive, that represents the intensity of the blue component of the color.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value representing an RGB color value from a set of red, green and blue color components.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Green</code>, <code>Blue</code>, or <code>Red</code> is outside of range 0 to 255, inclusive.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Application methods and properties that accept a color specification expect that specification to be a number representing an RGB color value. An RGB color value specifies the relative intensity of red, green, and blue to cause a specific color to be displayed.  </p>\n<p> If the value for any argument to <code>RGB</code> is greater than 255, 255 is used.  </p>\n<p> The following table lists some standard colors and the red, green, and blue values they include.  </p>\n<table>\n<thead>\n<tr>\n<th>Color</th>\n<th>Red value</th>\n<th>Green value</th>\n<th>Blue value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Black</td>\n<td>0</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Blue</td>\n<td>0</td>\n<td>0</td>\n<td>255</td>\n</tr>\n<tr>\n<td>Green</td>\n<td>0</td>\n<td>255</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Cyan</td>\n<td>0</td>\n<td>255</td>\n<td>255</td>\n</tr>\n<tr>\n<td>Red</td>\n<td>255</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Magenta</td>\n<td>255</td>\n<td>0</td>\n<td>255</td>\n</tr>\n<tr>\n<td>Yellow</td>\n<td>255</td>\n<td>255</td>\n<td>0</td>\n</tr>\n<tr>\n<td>White</td>\n<td>255</td>\n<td>255</td>\n<td>255</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how the <code>RGB</code> function is used to return a whole number representing an <code>RGB</code> color value.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrCatRef#18\">        Dim red, rgbValue As Integer\n        Dim i As Integer = 75\n        &#39; Return the value for red.\n        red = RGB(255, 0, 0)\n        &#39; Same as RGB(75, 139, 203).\n        rgbValue = RGB(i, 64 + i, 128 + i)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_SystemTypeName_System_String_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_SystemTypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SystemTypeName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>String</code> value containing the system data type name of a variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string SystemTypeName (string VbName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>VbName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. A <code>String</code> variable containing a Visual Basic type name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>String</code> value containing the system data type name of a variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>SystemTypeName</code> returns the fully qualified common language runtime (CLR) type name corresponding to the Visual Basic type name. For example, if <code>VbName</code> contains &quot;Date&quot;, <code>SystemTypeName</code> returns &quot;System.DateTime&quot;. If <code>SystemTypeName</code> does not recognize the value of <code>VbName</code>, it returns <code>Nothing</code> (not the string &quot;Nothing&quot;).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>SystemTypeName</code> function to return data type names for several variables.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#49\">        Dim vbLongName As String = &quot;Long&quot;\n        Dim vbDateName As String = &quot;Date&quot;\n        Dim vbBadName As String = &quot;Number&quot;\n        Dim testSysName As String\n        testSysName = SystemTypeName(vbLongName)\n        &#39; The preceding call returns &quot;System.Int64&quot;.\n        testSysName = SystemTypeName(vbDateName)\n        &#39; The preceding call returns &quot;System.DateTime&quot;.\n        testSysName = SystemTypeName(vbBadName)\n        &#39; The preceding call returns Nothing.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_TypeName_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_TypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeName(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>String</code> value containing data-type information about a variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string TypeName (object VarName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>VarName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> variable. If <code>Option Strict</code> is <code>Off</code>, you can pass a variable of any data type except a structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>String</code> value containing data-type information about a variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the <code>String</code> values returned by <code>TypeName</code> for different contents of <code>VarName</code>.  </p>\n<table>\n<thead>\n<tr>\n<th><code>VarName</code> contents</th>\n<th>String returned</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>16-bit <code>True</code> or <code>False</code> value type</td>\n<td>&quot;Boolean&quot;</td>\n</tr>\n<tr>\n<td>8-bit binary value type</td>\n<td>&quot;Byte&quot;</td>\n</tr>\n<tr>\n<td>16-bit character value type</td>\n<td>&quot;Char&quot;</td>\n</tr>\n<tr>\n<td>64-bit date and time value type</td>\n<td>&quot;Date&quot;</td>\n</tr>\n<tr>\n<td>Reference type indicating missing or nonexistent data</td>\n<td>&quot;DBNull&quot;</td>\n</tr>\n<tr>\n<td>128-bit fixed-point numeric value type</td>\n<td>&quot;Decimal&quot;</td>\n</tr>\n<tr>\n<td>64-bit floating-point numeric value type</td>\n<td>&quot;Double&quot;</td>\n</tr>\n<tr>\n<td>32-bit integer value type</td>\n<td>&quot;Integer&quot;</td>\n</tr>\n<tr>\n<td>Reference type pointing to an unspecialized object</td>\n<td>&quot;Object&quot;</td>\n</tr>\n<tr>\n<td>Reference type pointing to a specialized object created from class <em>objectclass</em></td>\n<td>&quot;<em>objectclass</em>&quot;</td>\n</tr>\n<tr>\n<td>64-bit integer value type</td>\n<td>&quot;Long&quot;</td>\n</tr>\n<tr>\n<td>Reference type with no object currently assigned to it</td>\n<td>&quot;Nothing&quot;</td>\n</tr>\n<tr>\n<td>8-bit signed integer value type</td>\n<td>&quot;SByte&quot;</td>\n</tr>\n<tr>\n<td>16-bit integer value type</td>\n<td>&quot;Short&quot;</td>\n</tr>\n<tr>\n<td>32-bit floating-point numeric value type</td>\n<td>&quot;Single&quot;</td>\n</tr>\n<tr>\n<td>Reference type pointing to a string of 16-bit characters</td>\n<td>&quot;String&quot;</td>\n</tr>\n<tr>\n<td>32-bit unsigned integer value type</td>\n<td>&quot;UInteger&quot;</td>\n</tr>\n<tr>\n<td>64-bit unsigned integer value type</td>\n<td>&quot;ULong&quot;</td>\n</tr>\n<tr>\n<td>16-bit unsigned integer value type</td>\n<td>&quot;UShort&quot;</td>\n</tr>\n</tbody>\n</table>\n<p> If <code>VarName</code> is an array, the returned string can be any one of the strings in the preceding table with empty parentheses appended. For example, if <code>VarName</code> points to an array of integers, <code>TypeName</code> returns &quot;Integer()&quot;.  </p>\n<p> When <code>TypeName</code> returns the name of a reference type such as a class, it returns only the name itself, not the qualified name. For example, if <code>VarName</code> points to an object of class <a class=\"xref\" href=\"system.drawing.printing.papersource\" data-linktype=\"relative-path\">System.Drawing.Printing.PaperSource</a>, <code>TypeName</code> returns &quot;PaperSource&quot;. Note that if the variable is declared to be of a certain class type but does not have an object assigned to it, <code>TypeName</code> returns &quot;Nothing&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>TypeName</code> function to return data type information about several variables.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#52\">        Dim testType As String\n        Dim strVar As String = &quot;String for testing&quot;\n        Dim decVar As Decimal\n        Dim intVar, arrayVar(5) As Integer\n        testType = TypeName(strVar)\n        &#39; The preceding call returns &quot;String&quot;.\n        testType = TypeName(decVar)\n        &#39; The preceding call returns &quot;Decimal&quot;.\n        testType = TypeName(intVar)\n        &#39; The preceding call returns &quot;Integer&quot;.\n        testType = TypeName(arrayVar)\n        &#39; The preceding call returns &quot;Integer()&quot;.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_UBound_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_UBound_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UBound(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the highest available subscript for the indicated dimension of an array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int UBound (Array Array, int Rank = 1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. Array of any data type. The array in which you want to find the highest possible subscript of a dimension.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Rank</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Integer</code>. The dimension for which the highest possible subscript is to be returned. Use 1 for the first dimension, 2 for the second, and so on. If <code>Rank</code> is omitted, 1 is assumed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p><code>Integer</code>. The highest value the subscript for the specified dimension can contain. If <code>Array</code> has only one element, <code>UBound</code> returns 0. If <code>Array</code> has no elements, for example if it is a zero-length string, <code>UBound</code> returns -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>Array</code> is <code>Nothing</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.rankexception\" data-linktype=\"relative-path\">RankException</a></div>\r\n                  </div>\r\n                  <p><code>Rank</code> is less than 1, or <code>Rank</code> is greater than the rank of <code>Array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Since array subscripts start at 0, the length of a dimension is greater by one than the highest available subscript for that dimension.  </p>\n<p> For an array with the following dimensions, <code>UBound</code> returns the values in the following table:  </p>\n<pre><code class=\"lang-vb#\">Dim a(100, 5, 4) As Byte  \n</code></pre><table>\n<thead>\n<tr>\n<th>Call to UBound</th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>UBound(a, 1)</code></td>\n<td>100</td>\n</tr>\n<tr>\n<td><code>UBound(a, 2)</code></td>\n<td>5</td>\n</tr>\n<tr>\n<td><code>UBound(a, 3)</code></td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<p> You can use <code>UBound</code> to determine the total number of elements in an array, but you must adjust the value it returns to account for the fact that the subscripts start at 0. The following example calculates the total size of the array <code>a</code> in the preceding example:  </p>\n<pre><code class=\"lang-vb#\">Dim total As Integer  \ntotal = (UBound(A, 1) + 1) * (UBound(A, 2) + 1) * (UBound(A, 3) + 1)  \n</code></pre><p> The value calculated for <code>total</code> is 3030, which is 101 * 6 * 5.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>UBound</code> function to determine the highest available subscript for the indicated dimension of an array.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#53\">        Dim highest, bigArray(10, 15, 20), littleArray(6) As Integer\n        highest = UBound(bigArray, 1)\n        highest = UBound(bigArray, 3)\n        highest = UBound(littleArray)\n        &#39; The three calls to UBound return 10, 20, and 6 respectively.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_VarType_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_VarType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VarType(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value containing the data type classification of a variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Microsoft.VisualBasic.VariantType VarType (object VarName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>VarName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Object</code> variable. If <code>Option Strict</code> is <code>Off</code>, you can pass a variable of any data type except a structure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.varianttype\" data-linktype=\"relative-path\">VariantType</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value containing the data type classification of a variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The integer value returned by <code>VarType</code> is a member of the <a class=\"xref\" href=\"microsoft.visualbasic.varianttype\" data-linktype=\"relative-path\">VariantType</a>.  </p>\n<p> The following table shows the values returned by <code>VarType</code> for special cases of <code>VarName</code>.  </p>\n<table>\n<thead>\n<tr>\n<th>Data type represented by <code>VarName</code></th>\n<th>Value returned by <code>VarType</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"../Topic/Nothing%20(Visual%20Basic).md\" data-linktype=\"relative-path\">Nothing</a></td>\n<td><code>VariantType.Object</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.dbnull\" data-linktype=\"relative-path\">DBNull</a></td>\n<td><code>VariantType.Null</code></td>\n</tr>\n<tr>\n<td>Enumeration</td>\n<td>Underlying data type (<code>SByte</code>, <code>Byte</code>, <code>Short</code>, <code>UShort</code>, <code>Integer</code>, <code>UInteger</code>, <code>Long</code>, or <code>ULong</code>)</td>\n</tr>\n<tr>\n<td>Array</td>\n<td>Bitwise OR of array element type and <code>VariantType.Array</code></td>\n</tr>\n<tr>\n<td>Array of arrays</td>\n<td>Bitwise OR of <code>VariantType.Object</code> and <code>VariantType.Array</code></td>\n</tr>\n<tr>\n<td>Structure (<a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>)</td>\n<td><code>VariantType.UserDefinedType</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></td>\n<td><code>VariantType.Error</code></td>\n</tr>\n<tr>\n<td>Unknown</td>\n<td><code>VariantType.Object</code></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>VarType</code> function to return data type classification information about several variables.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#55\">        Dim testString As String = &quot;String for testing&quot;\n        Dim testObject As New Object\n        Dim testNumber, testArray(5) As Integer\n        Dim testVarType As VariantType\n        testVarType = VarType(testVarType)\n        &#39; Returns VariantType.Integer.\n        testVarType = VarType(testString)\n        &#39; Returns VariantType.String.\n        testVarType = VarType(testObject)\n        &#39; Returns VariantType.Object.\n        testVarType = VarType(testNumber)\n        &#39; Returns VariantType.Integer.\n        testVarType = VarType(testArray)\n        &#39; Returns the bitwise OR of VariantType.Array and VariantType.Integer.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_Information_VbTypeName_System_String_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_Information_VbTypeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VbTypeName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>String</code> value containing the Visual Basic data type name of a variable.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VbTypeName (string UrtName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>UrtName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>String</code> variable containing a type name used by the common language runtime.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>String</code> value containing the Visual Basic data type name of a variable.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>VbTypeName</code> returns the Visual Basic type name corresponding to the common language runtime type name. For example, if <code>UrtName</code> contains &quot;Int32&quot; or &quot;System.Int32&quot;, <code>VbTypeName</code> returns &quot;Integer&quot;. If <code>VbTypeName</code> does not recognize the value of <code>UrtName</code>, it returns <code>Nothing</code> (not the string &quot;Nothing&quot;).  </p>\n<p> The type name in <code>UrtName</code> can be obtained from various sources, for example from the <a class=\"xref\" href=\"system.reflection.memberinfo#System_Reflection_MemberInfo_Name_\" data-linktype=\"relative-path\">Name</a> property in the <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> array of the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>VbTypeName</code> function to return data type names for several variables.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#56\">        Dim sysDateName As String = &quot;System.DateTime&quot;\n        Dim sysShortName As String = &quot;Int16&quot;\n        Dim sysBadName As String = &quot;Nonsense&quot;\n        Dim testVbName As String\n        testVbName = VbTypeName(sysDateName)\n        &#39; Returns &quot;Date&quot;.\n        testVbName = VbTypeName(sysShortName)\n        &#39; Returns &quot;Short&quot;.\n        testVbName = VbTypeName(sysBadName)\n        &#39; Returns Nothing.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Information.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Information.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.Erl\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.Err\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsArray\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsDate\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsDBNull\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsError\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsNothing\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsNumeric\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.IsReference\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.LBound\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.QBColor\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.RGB\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.SystemTypeName\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.TypeName\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.UBound\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.VarType\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.Information.VbTypeName\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualBasic.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b79ba338-4586-99ca-59c9-4bd454c2ffb4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The Information module contains the procedures used to return, test for, or verify information.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualBasic/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualBasic.Information\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.Information.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.Information.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualBasic.Information","Microsoft.VisualBasic.Information.Erl","Microsoft.VisualBasic.Information.Err","Microsoft.VisualBasic.Information.IsArray","Microsoft.VisualBasic.Information.IsDate","Microsoft.VisualBasic.Information.IsDBNull","Microsoft.VisualBasic.Information.IsError","Microsoft.VisualBasic.Information.IsNothing","Microsoft.VisualBasic.Information.IsNumeric","Microsoft.VisualBasic.Information.IsReference","Microsoft.VisualBasic.Information.LBound","Microsoft.VisualBasic.Information.QBColor","Microsoft.VisualBasic.Information.RGB","Microsoft.VisualBasic.Information.SystemTypeName","Microsoft.VisualBasic.Information.TypeName","Microsoft.VisualBasic.Information.UBound","Microsoft.VisualBasic.Information.VarType","Microsoft.VisualBasic.Information.VbTypeName"],"api_location":["Microsoft.VisualBasic.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualBasic.Information","Microsoft::VisualBasic::Information","Microsoft.VisualBasic.Information.Erl","Microsoft::VisualBasic::Information::Erl","Microsoft.VisualBasic.Information.Err","Microsoft::VisualBasic::Information::Err","Microsoft.VisualBasic.Information.IsArray","Microsoft::VisualBasic::Information::IsArray","Microsoft.VisualBasic.Information.IsDate","Microsoft::VisualBasic::Information::IsDate","Microsoft.VisualBasic.Information.IsDBNull","Microsoft::VisualBasic::Information::IsDBNull","Microsoft.VisualBasic.Information.IsError","Microsoft::VisualBasic::Information::IsError","Microsoft.VisualBasic.Information.IsNothing","Microsoft::VisualBasic::Information::IsNothing","Microsoft.VisualBasic.Information.IsNumeric","Microsoft::VisualBasic::Information::IsNumeric","Microsoft.VisualBasic.Information.IsReference","Microsoft::VisualBasic::Information::IsReference","Microsoft.VisualBasic.Information.LBound","Microsoft::VisualBasic::Information::LBound","Microsoft.VisualBasic.Information.QBColor","Microsoft::VisualBasic::Information::QBColor","Microsoft.VisualBasic.Information.RGB","Microsoft::VisualBasic::Information::RGB","Microsoft.VisualBasic.Information.SystemTypeName","Microsoft::VisualBasic::Information::SystemTypeName","Microsoft.VisualBasic.Information.TypeName","Microsoft::VisualBasic::Information::TypeName","Microsoft.VisualBasic.Information.UBound","Microsoft::VisualBasic::Information::UBound","Microsoft.VisualBasic.Information.VarType","Microsoft::VisualBasic::Information::VarType","Microsoft.VisualBasic.Information.VbTypeName","Microsoft::VisualBasic::Information::VbTypeName"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b79ba338-4586-99ca-59c9-4bd454c2ffb4","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualBasic/Information.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Information class | Microsoft Docs","_op_ogTitle":"Information class","description":"The Information module contains the procedures used to return, test for, or verify information.\n","toc_asset_id":"_splitted/Microsoft.VisualBasic/toc.json","toc_rel":"_splitted/Microsoft.VisualBasic/toc.json","source_url":"","ms.assetid":"Microsoft.VisualBasic.Information","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.information","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.information","fileRelativePath":"Microsoft.VisualBasic.Information.html"},"themesRelativePathToOutputRoot":"_themes/"}