{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  <h1>\r\n    <span class=\"lang-csharp\">System.Reflection.Emit</span>\r\n      Namespace\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>The System.Reflection.Emit namespace contains classes that allow a compiler or tool to emit metadata and Microsoft intermediate language (MSIL) and optionally generate a PE file on disk. The primary clients of these classes are script engines and compilers.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \r\n  \r\n  \t\t<h2 class=\"accented\" id=\"classes\">Classes\r\n  </h2>\r\n  \r\n  \t<table class=\"nameValue \">\r\n  \t\t<tr id=\"System_Reflection_Emit_AssemblyBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilder\" data-linktype=\"relative-path\">AssemblyBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and represents a dynamic assembly.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_ConstructorBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.constructorbuilder\" data-linktype=\"relative-path\">ConstructorBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and represents a constructor of a dynamic class.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_CustomAttributeBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.customattributebuilder\" data-linktype=\"relative-path\">CustomAttributeBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Helps build custom attributes.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_DynamicILInfo\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.dynamicilinfo\" data-linktype=\"relative-path\">DynamicILInfo</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Provides support for alternative ways to generate the Microsoft intermediate language (MSIL) and metadata for a dynamic method, including methods for creating tokens and for inserting the code, exception handling, and local variable signature blobs.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_DynamicMethod\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.dynamicmethod\" data-linktype=\"relative-path\">DynamicMethod</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and represents a dynamic method that can be compiled, executed, and discarded. Discarded methods are available for garbage collection.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_EnumBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.enumbuilder\" data-linktype=\"relative-path\">EnumBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Describes and represents an enumeration type.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_EventBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.eventbuilder\" data-linktype=\"relative-path\">EventBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines events for a class.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_FieldBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.fieldbuilder\" data-linktype=\"relative-path\">FieldBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and represents a field. This class cannot be inherited.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_GenericTypeParameterBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.generictypeparameterbuilder\" data-linktype=\"relative-path\">GenericTypeParameterBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and creates generic type parameters for dynamically defined generic types and methods. This class cannot be inherited.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_ILGenerator\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.ilgenerator\" data-linktype=\"relative-path\">ILGenerator</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Generates Microsoft intermediate language (MSIL) instructions.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_LocalBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.localbuilder\" data-linktype=\"relative-path\">LocalBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents a local variable within a method or constructor.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_MethodBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.methodbuilder\" data-linktype=\"relative-path\">MethodBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and represents a method (or constructor) on a dynamic class.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_MethodRental\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.methodrental\" data-linktype=\"relative-path\">MethodRental</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Provides a fast way to swap method body implementation given a method of a class.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_ModuleBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.modulebuilder\" data-linktype=\"relative-path\">ModuleBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and represents a module in a dynamic assembly.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_OpCodes\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcodes\" data-linktype=\"relative-path\">OpCodes</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Provides field representations of the Microsoft Intermediate Language (MSIL) instructions for emission by the <a class=\"xref\" href=\"system.reflection.emit.ilgenerator\" data-linktype=\"relative-path\">ILGenerator</a> class members (such as <span class=\"xref\">stem.Reflection.Emit.ILGenerator.Emit*</span>).</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_ParameterBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.parameterbuilder\" data-linktype=\"relative-path\">ParameterBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Creates or associates parameter information.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_PropertyBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.propertybuilder\" data-linktype=\"relative-path\">PropertyBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines the properties for a type.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_SignatureHelper\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturehelper\" data-linktype=\"relative-path\">SignatureHelper</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Provides methods for building signatures.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_TypeBuilder\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.typebuilder\" data-linktype=\"relative-path\">TypeBuilder</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines and creates new instances of classes during run time.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_UnmanagedMarshal\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.unmanagedmarshal\" data-linktype=\"relative-path\">UnmanagedMarshal</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents the class that describes how to marshal a field from managed to unmanaged code. This class cannot be inherited.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t</table>\r\n  \r\n  \t\t<h2 class=\"accented\" id=\"structs\">Structs\r\n  </h2>\r\n  \r\n  \t<table class=\"nameValue \">\r\n  \t\t<tr id=\"System_Reflection_Emit_EventToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.eventtoken\" data-linktype=\"relative-path\">EventToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents the <code>Token</code> returned by the metadata to represent an event.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_ExceptionHandler\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.exceptionhandler\" data-linktype=\"relative-path\">ExceptionHandler</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents an exception handler in a byte array of IL to be passed to a method such as <span class=\"xref\">stem.Reflection.Emit.MethodBuilder.SetMethodBody*</span>.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_FieldToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.fieldtoken\" data-linktype=\"relative-path\">FieldToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>The <code>FieldToken</code> struct is an object representation of a token that represents a field.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_Label\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.label\" data-linktype=\"relative-path\">Label</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents a label in the instruction stream. <code>Label</code> is used in conjunction with the <a class=\"xref\" href=\"system.reflection.emit.ilgenerator\" data-linktype=\"relative-path\">ILGenerator</a> class.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_MethodToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.methodtoken\" data-linktype=\"relative-path\">MethodToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>The <code>MethodToken</code> struct is an object representation of a token that represents a method.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_OpCode\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcode\" data-linktype=\"relative-path\">OpCode</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Describes an intermediate language (IL) instruction.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_ParameterToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.parametertoken\" data-linktype=\"relative-path\">ParameterToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>The <code>ParameterToken</code> struct is an opaque representation of the token returned by the metadata to represent a parameter.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_PropertyToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.propertytoken\" data-linktype=\"relative-path\">PropertyToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>The <code>PropertyToken</code> struct is an opaque representation of the <code>Token</code> returned by the metadata to represent a property.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_SignatureToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.signaturetoken\" data-linktype=\"relative-path\">SignatureToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents the <code>Token</code> returned by the metadata to represent a signature.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_StringToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.stringtoken\" data-linktype=\"relative-path\">StringToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents a token that represents a string.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_TypeToken\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.typetoken\" data-linktype=\"relative-path\">TypeToken</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Represents the <code>Token</code> returned by the metadata to represent a type.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t</table>\r\n  \r\n  \t\t<h2 class=\"accented\" id=\"enums\">Enums\r\n  </h2>\r\n  \r\n  \t<table class=\"nameValue \">\r\n  \t\t<tr id=\"System_Reflection_Emit_AssemblyBuilderAccess\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.assemblybuilderaccess\" data-linktype=\"relative-path\">AssemblyBuilderAccess</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Defines the access modes for a dynamic assembly.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_FlowControl\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.flowcontrol\" data-linktype=\"relative-path\">FlowControl</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Describes how an instruction alters the flow of control.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_OpCodeType\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.opcodetype\" data-linktype=\"relative-path\">OpCodeType</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Describes the types of the Microsoft intermediate language (MSIL) instructions.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_OperandType\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.operandtype\" data-linktype=\"relative-path\">OperandType</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Describes the operand type of Microsoft intermediate language (MSIL) instruction.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_PackingSize\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.packingsize\" data-linktype=\"relative-path\">PackingSize</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Specifies one of two factors that determine the memory alignment of fields when a type is marshaled.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_PEFileKinds\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.pefilekinds\" data-linktype=\"relative-path\">PEFileKinds</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Specifies the type of the portable executable (PE) file.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t\t<tr id=\"System_Reflection_Emit_StackBehaviour\" class=\"\">\r\n  \t\t<td>\r\n  \t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.emit.stackbehaviour\" data-linktype=\"relative-path\">StackBehaviour</a></span>\r\n  \t\t</td>\r\n  \t\t<td>\r\n  \t\t<p>Describes how values are pushed onto a stack or popped off a stack.</p>\n\r\n  \t\t</td>\r\n  \t\t</tr>\r\n  \t</table>\r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.yml\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e359e3eb-37a9-d56c-c746-a6b63bde320c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The System.Reflection.Emit namespace contains classes that allow a compiler or tool to emit metadata and Microsoft intermediate language (MSIL) and optionally generate a PE file on disk. The primary…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Reflection.Emit/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Reflection.Emit\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Reflection.Emit.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Reflection.Emit.yml","open_to_public_contributors":true,"f1_keywords":["System.Reflection.Emit","System::Reflection::Emit"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e359e3eb-37a9-d56c-c746-a6b63bde320c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/ns-System.Reflection.Emit.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"System.Reflection.Emit namespace | Microsoft Docs","_op_ogTitle":"System.Reflection.Emit namespace","description":"The System.Reflection.Emit namespace contains classes that allow a compiler or tool to emit metadata and Microsoft intermediate language (MSIL) and optionally generate a PE file on disk. The primary…","toc_asset_id":"_splitted/System.Reflection.Emit/toc.json","toc_rel":"_splitted/System.Reflection.Emit/toc.json","source_url":"","ms.assetid":"System.Reflection.Emit","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.reflection.emit","fileRelativePath":"System.Reflection.Emit.html"},"themesRelativePathToOutputRoot":"_themes/"}