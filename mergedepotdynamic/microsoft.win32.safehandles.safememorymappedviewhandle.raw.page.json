{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">SafeMemoryMappedViewHandle</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a safe handle that represents a view of a block of unmanaged memory for random access.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]\npublic sealed class SafeMemoryMappedViewHandle : System.Runtime.InteropServices.SafeBuffer</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.constrainedexecution.criticalfinalizerobject\" data-linktype=\"relative-path\">CriticalFinalizerObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle\" data-linktype=\"relative-path\">SafeHandle</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safehandlezeroorminusoneisinvalid\" data-linktype=\"relative-path\">SafeHandleZeroOrMinusOneIsInvalid</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer\" data-linktype=\"relative-path\">System.Runtime.InteropServices.SafeBuffer</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">SafeMemoryMappedViewHandle</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.win32.safehandles.safehandlezeroorminusoneisinvalid#Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid_IsInvalid\" data-linktype=\"relative-path\">IsInvalid</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_AcquirePointer_System_Byte___\" data-linktype=\"relative-path\">AcquirePointer(Byte*)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_ByteLength\" data-linktype=\"relative-path\">ByteLength</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_Initialize_System_UInt32_System_UInt32_\" data-linktype=\"relative-path\">Initialize(UInt32,UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_Initialize_System_UInt64_\" data-linktype=\"relative-path\">Initialize(UInt64)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_Initialize__1_System_UInt32_\" data-linktype=\"relative-path\">Initialize&lt;T&gt;(UInt32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_Read__1_System_UInt64_\" data-linktype=\"relative-path\">Read&lt;T&gt;(UInt64)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_ReadArray__1_System_UInt64___0___System_Int32_System_Int32_\" data-linktype=\"relative-path\">ReadArray&lt;T&gt;(UInt64,T[],Int32,Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_ReleasePointer\" data-linktype=\"relative-path\">ReleasePointer()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_Write__1_System_UInt64___0_\" data-linktype=\"relative-path\">Write&lt;T&gt;(UInt64,T)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safebuffer#System_Runtime_InteropServices_SafeBuffer_WriteArray__1_System_UInt64___0___System_Int32_System_Int32_\" data-linktype=\"relative-path\">WriteArray&lt;T&gt;(UInt64,T[],Int32,Int32)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_Close\" data-linktype=\"relative-path\">Close()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousAddRef_System_Boolean__\" data-linktype=\"relative-path\">DangerousAddRef(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousGetHandle\" data-linktype=\"relative-path\">DangerousGetHandle()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_DangerousRelease\" data-linktype=\"relative-path\">DangerousRelease()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_Dispose\" data-linktype=\"relative-path\">Dispose()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_handle\" data-linktype=\"relative-path\">handle</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_IsClosed\" data-linktype=\"relative-path\">IsClosed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_SetHandle_System_IntPtr_\" data-linktype=\"relative-path\">SetHandle(IntPtr)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.safehandle#System_Runtime_InteropServices_SafeHandle_SetHandleAsInvalid\" data-linktype=\"relative-path\">SetHandleAsInvalid()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>Use the <a class=\"xref\" href=\"system.io.memorymappedfiles.memorymappedviewaccessor#System_IO_MemoryMappedFiles_MemoryMappedViewAccessor_SafeMemoryMappedViewHandle_\" data-linktype=\"relative-path\">SafeMemoryMappedViewHandle</a> property to obtain the safe handle.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> This type implements the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method in a <code>try</code>/<code>catch</code> block. To dispose of it indirectly, use a language construct such as <code>using</code> (in C#) or <code>Using</code> (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> interface topic.</p>\n</div>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"Microsoft_Win32_SafeHandles_SafeMemoryMappedViewHandle_ReleaseHandle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ReleaseHandle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override bool ReleaseHandle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>To be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\">\r\n<meta name=\"APIName\" content=\"Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"cf3f1d3e-521a-16cb-4c25-02c59581992e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a safe handle that represents a view of a block of unmanaged memory for random access.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.Win32.SafeHandles/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.yml","open_to_public_contributors":true,"api_name":["Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle","Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle","Microsoft::Win32::SafeHandles::SafeMemoryMappedViewHandle","Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle","Microsoft::Win32::SafeHandles::SafeMemoryMappedViewHandle::ReleaseHandle"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"cf3f1d3e-521a-16cb-4c25-02c59581992e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.Win32.SafeHandles/SafeMemoryMappedViewHandle.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SafeMemoryMappedViewHandle class | Microsoft Docs","_op_ogTitle":"SafeMemoryMappedViewHandle class","description":"Provides a safe handle that represents a view of a block of unmanaged memory for random access.\n","toc_asset_id":"_splitted/Microsoft.Win32.SafeHandles/toc.json","toc_rel":"_splitted/Microsoft.Win32.SafeHandles/toc.json","source_url":"","ms.assetid":"Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.win32.safehandles.safememorymappedviewhandle","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.win32.safehandles.safememorymappedviewhandle","fileRelativePath":"Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.html"},"themesRelativePathToOutputRoot":"_themes/"}