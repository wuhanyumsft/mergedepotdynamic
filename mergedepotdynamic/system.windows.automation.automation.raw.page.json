{"content":"    \r\n    <h1 id=\"System_Windows_Automation_Automation\">\r\n      <span class=\"lang-csharp\">Automation</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains methods and fields for UI Automation client applications.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class Automation</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Automation</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_ContentViewCondition\" data-linktype=\"self-bookmark\">ContentViewCondition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents a predefined view of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> tree that includes only <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements that can contain content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_ControlViewCondition\" data-linktype=\"self-bookmark\">ControlViewCondition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents a predefined view of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> tree that includes only <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements that are controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_RawViewCondition\" data-linktype=\"self-bookmark\">RawViewCondition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Represents a predefined view of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> tree that includes all <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_AddAutomationEventHandler_System_Windows_Automation_AutomationEvent_System_Windows_Automation_AutomationElement_System_Windows_Automation_TreeScope_System_Windows_Automation_AutomationEventHandler_\" data-linktype=\"self-bookmark\">AddAutomationEventHandler(AutomationEvent,AutomationElement,TreeScope,AutomationEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a method that handles <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_AddAutomationFocusChangedEventHandler_System_Windows_Automation_AutomationFocusChangedEventHandler_\" data-linktype=\"self-bookmark\">AddAutomationFocusChangedEventHandler(AutomationFocusChangedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a method that will handle focus-changed events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_AddAutomationPropertyChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_TreeScope_System_Windows_Automation_AutomationPropertyChangedEventHandler_System_Windows_Automation_AutomationProperty___\" data-linktype=\"self-bookmark\">AddAutomationPropertyChangedEventHandler(AutomationElement,TreeScope,AutomationPropertyChangedEventHandler,AutomationProperty[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a method that will handle property-changed events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_AddStructureChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_TreeScope_System_Windows_Automation_StructureChangedEventHandler_\" data-linktype=\"self-bookmark\">AddStructureChangedEventHandler(AutomationElement,TreeScope,StructureChangedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers the method that will handle structure-changed events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_Compare_System_Int32___System_Int32___\" data-linktype=\"self-bookmark\">Compare(Int32[],Int32[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two integer arrays containing run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-idsharpplural-md.md&quot; -->identifiers (IDs)<!--END INCLUDE --> to determine whether their content is the same.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_Compare_System_Windows_Automation_AutomationElement_System_Windows_Automation_AutomationElement_\" data-linktype=\"self-bookmark\">Compare(AutomationElement,AutomationElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements, returning <code>true</code> if both refer to the same <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-ui-md.md&quot; -->UI<!--END INCLUDE --> element.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_PatternName_System_Windows_Automation_AutomationPattern_\" data-linktype=\"self-bookmark\">PatternName(AutomationPattern)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the name of the specified control pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_PropertyName_System_Windows_Automation_AutomationProperty_\" data-linktype=\"self-bookmark\">PropertyName(AutomationProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the name of the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_RemoveAllEventHandlers\" data-linktype=\"self-bookmark\">RemoveAllEventHandlers()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all registered <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> event handlers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_RemoveAutomationEventHandler_System_Windows_Automation_AutomationEvent_System_Windows_Automation_AutomationElement_System_Windows_Automation_AutomationEventHandler_\" data-linktype=\"self-bookmark\">RemoveAutomationEventHandler(AutomationEvent,AutomationElement,AutomationEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> event handler.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_RemoveAutomationFocusChangedEventHandler_System_Windows_Automation_AutomationFocusChangedEventHandler_\" data-linktype=\"self-bookmark\">RemoveAutomationFocusChangedEventHandler(AutomationFocusChangedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified focus-changed event handler.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_RemoveAutomationPropertyChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_AutomationPropertyChangedEventHandler_\" data-linktype=\"self-bookmark\">RemoveAutomationPropertyChangedEventHandler(AutomationElement,AutomationPropertyChangedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified property-changed event handler.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Automation_RemoveStructureChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_StructureChangedEventHandler_\" data-linktype=\"self-bookmark\">RemoveStructureChangedEventHandler(AutomationElement,StructureChangedEventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified structure-changed event handler.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_ContentViewCondition\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentViewCondition</div>        \r\n          </div>\r\n    \r\n            <p>Represents a predefined view of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> tree that includes only <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements that can contain content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.Condition ContentViewCondition;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, various static conditions including ContentViewCondition are used to retrieve elements.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAClient_snip#178\">/// &lt;summary&gt;\n/// Examples of using predefined conditions to find elements.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;elementMainWindow&quot;&gt;The element for the target window.&lt;/param&gt;\npublic void StaticConditionExamples(AutomationElement elementMainWindow)\n{\n    if (elementMainWindow == null)\n    {\n        throw new ArgumentException();\n    }\n\n    // Use TrueCondition to retrieve all elements.\n    AutomationElementCollection elementCollectionAll = elementMainWindow.FindAll(\n        TreeScope.Subtree, Condition.TrueCondition);\n    Console.WriteLine(&quot;<br>All control types:&quot;);\n    foreach (AutomationElement autoElement in elementCollectionAll)\n    {\n        Console.WriteLine(autoElement.Current.Name);\n    }\n\n    // Use ContentViewCondition to retrieve all content elements.\n    AutomationElementCollection elementCollectionContent = elementMainWindow.FindAll(\n        TreeScope.Subtree, Automation.ContentViewCondition);\n    Console.WriteLine(&quot;<br>All content elements:&quot;);\n    foreach (AutomationElement autoElement in elementCollectionContent)\n    {\n        Console.WriteLine(autoElement.Current.Name);\n    }\n\n    // Use ControlViewCondition to retrieve all control elements.\n    AutomationElementCollection elementCollectionControl = elementMainWindow.FindAll(\n        TreeScope.Subtree, Automation.ControlViewCondition);\n    Console.WriteLine(&quot;<br>All control elements:&quot;);\n    foreach (AutomationElement autoElement in elementCollectionControl)\n    {\n        Console.WriteLine(autoElement.Current.Name);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAClient_snip#178\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Examples of using predefined conditions to find elements.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementMainWindow&quot;&gt;The element for the target window.&lt;/param&gt;\nPublic Sub StaticConditionExamples(ByVal elementMainWindow As AutomationElement)\n    If elementMainWindow Is Nothing Then\n        Throw New ArgumentException()\n    End If\n\n    &#39; Use TrueCondition to retrieve all elements.\n    Dim elementCollectionAll As AutomationElementCollection = elementMainWindow.FindAll(TreeScope.Subtree, Condition.TrueCondition)\n    Console.WriteLine(vbLf + &quot;All control types:&quot;)\n    Dim autoElement As AutomationElement\n    For Each autoElement In elementCollectionAll\n        Console.WriteLine(autoElement.Current.Name)\n    Next autoElement\n\n    &#39; Use ContentViewCondition to retrieve all content elements.\n    Dim elementCollectionContent As AutomationElementCollection = elementMainWindow.FindAll(TreeScope.Subtree, Automation.ContentViewCondition)\n    Console.WriteLine(vbLf + &quot;All content elements:&quot;)\n    For Each autoElement In elementCollectionContent\n        Console.WriteLine(autoElement.Current.Name)\n    Next autoElement\n\n    &#39; Use ControlViewCondition to retrieve all control elements.\n    Dim elementCollectionControl As AutomationElementCollection = elementMainWindow.FindAll(TreeScope.Subtree, Automation.ControlViewCondition)\n    Console.WriteLine(vbLf &amp; &quot;All control elements:&quot;)\n    For Each autoElement In elementCollectionControl\n        Console.WriteLine(autoElement.Current.Name)\n    Next autoElement\n\nEnd Sub &#39;StaticConditionExamples\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_ControlViewCondition\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ControlViewCondition</div>        \r\n          </div>\r\n    \r\n            <p>Represents a predefined view of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> tree that includes only <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements that are controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.Condition ControlViewCondition;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, various static conditions including ControlViewCondition are used to retrieve elements.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAClient_snip#178\">/// &lt;summary&gt;\n/// Examples of using predefined conditions to find elements.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;elementMainWindow&quot;&gt;The element for the target window.&lt;/param&gt;\npublic void StaticConditionExamples(AutomationElement elementMainWindow)\n{\n    if (elementMainWindow == null)\n    {\n        throw new ArgumentException();\n    }\n\n    // Use TrueCondition to retrieve all elements.\n    AutomationElementCollection elementCollectionAll = elementMainWindow.FindAll(\n        TreeScope.Subtree, Condition.TrueCondition);\n    Console.WriteLine(&quot;<br>All control types:&quot;);\n    foreach (AutomationElement autoElement in elementCollectionAll)\n    {\n        Console.WriteLine(autoElement.Current.Name);\n    }\n\n    // Use ContentViewCondition to retrieve all content elements.\n    AutomationElementCollection elementCollectionContent = elementMainWindow.FindAll(\n        TreeScope.Subtree, Automation.ContentViewCondition);\n    Console.WriteLine(&quot;<br>All content elements:&quot;);\n    foreach (AutomationElement autoElement in elementCollectionContent)\n    {\n        Console.WriteLine(autoElement.Current.Name);\n    }\n\n    // Use ControlViewCondition to retrieve all control elements.\n    AutomationElementCollection elementCollectionControl = elementMainWindow.FindAll(\n        TreeScope.Subtree, Automation.ControlViewCondition);\n    Console.WriteLine(&quot;<br>All control elements:&quot;);\n    foreach (AutomationElement autoElement in elementCollectionControl)\n    {\n        Console.WriteLine(autoElement.Current.Name);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAClient_snip#178\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Examples of using predefined conditions to find elements.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementMainWindow&quot;&gt;The element for the target window.&lt;/param&gt;\nPublic Sub StaticConditionExamples(ByVal elementMainWindow As AutomationElement)\n    If elementMainWindow Is Nothing Then\n        Throw New ArgumentException()\n    End If\n\n    &#39; Use TrueCondition to retrieve all elements.\n    Dim elementCollectionAll As AutomationElementCollection = elementMainWindow.FindAll(TreeScope.Subtree, Condition.TrueCondition)\n    Console.WriteLine(vbLf + &quot;All control types:&quot;)\n    Dim autoElement As AutomationElement\n    For Each autoElement In elementCollectionAll\n        Console.WriteLine(autoElement.Current.Name)\n    Next autoElement\n\n    &#39; Use ContentViewCondition to retrieve all content elements.\n    Dim elementCollectionContent As AutomationElementCollection = elementMainWindow.FindAll(TreeScope.Subtree, Automation.ContentViewCondition)\n    Console.WriteLine(vbLf + &quot;All content elements:&quot;)\n    For Each autoElement In elementCollectionContent\n        Console.WriteLine(autoElement.Current.Name)\n    Next autoElement\n\n    &#39; Use ControlViewCondition to retrieve all control elements.\n    Dim elementCollectionControl As AutomationElementCollection = elementMainWindow.FindAll(TreeScope.Subtree, Automation.ControlViewCondition)\n    Console.WriteLine(vbLf &amp; &quot;All control elements:&quot;)\n    For Each autoElement In elementCollectionControl\n        Console.WriteLine(autoElement.Current.Name)\n    Next autoElement\n\nEnd Sub &#39;StaticConditionExamples\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_RawViewCondition\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RawViewCondition</div>        \r\n          </div>\r\n    \r\n            <p>Represents a predefined view of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> tree that includes all <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.Condition RawViewCondition;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Used by itself, this condition is functionally identical to <a class=\"xref\" href=\"system.windows.automation.condition\" data-linktype=\"relative-path\">Condition</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_AddAutomationEventHandler_System_Windows_Automation_AutomationEvent_System_Windows_Automation_AutomationElement_System_Windows_Automation_TreeScope_System_Windows_Automation_AutomationEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_AddAutomationEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAutomationEventHandler(AutomationEvent,AutomationElement,TreeScope,AutomationEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a method that handles <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddAutomationEventHandler (System.Windows.Automation.AutomationEvent eventId, System.Windows.Automation.AutomationElement element, System.Windows.Automation.TreeScope scope, System.Windows.Automation.AutomationEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationevent\" data-linktype=\"relative-path\">AutomationEvent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier for the event the method will handle.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element to associate with the event handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The scope of events to be handled; that is, whether they are on the element itself, or on its ancestors and descendants.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationeventhandler\" data-linktype=\"relative-path\">AutomationEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method to call when the specified event occurs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Some classes, such as <a class=\"xref\" href=\"system.windows.automation.gridpattern\" data-linktype=\"relative-path\">GridPattern</a>, expose fields identifying events that are specific to the class. The AddAutomationEventHandler method provides a mechanism that enables you to register handlers for these events.  </p>\n<p> <code>eventHandler</code> can be an instance of the method, or a reference to the method (<code>AddressOf</code> in Visual Basic).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_AddAutomationFocusChangedEventHandler_System_Windows_Automation_AutomationFocusChangedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_AddAutomationFocusChangedEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAutomationFocusChangedEventHandler(AutomationFocusChangedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a method that will handle focus-changed events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddAutomationFocusChangedEventHandler (System.Windows.Automation.AutomationFocusChangedEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationfocuschangedeventhandler\" data-linktype=\"relative-path\">AutomationFocusChangedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method to call when the event occurs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Focus-changed events are system-wide; you cannot set a narrower scope.  </p>\n<p> <code>eventHandler</code> can be an instance of the method, or a reference to the method (<code>AddressOf</code> in Visual Basic).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows this method being used to add an event handler for focus changes.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#102\">Private focusHandler As AutomationFocusChangedEventHandler = Nothing\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Create an event handler and register it.\n&#39;&#39;&#39; &lt;/summary&gt;\nPublic Sub SubscribeToFocusChange()\n    focusHandler = New AutomationFocusChangedEventHandler(AddressOf OnFocusChange)\n    Automation.AddAutomationFocusChangedEventHandler(focusHandler)\n\nEnd Sub &#39;SubscribeToFocusChange\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handle the event.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nPrivate Sub OnFocusChange(ByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n\nEnd Sub &#39;OnFocusChange\n\n&#39; TODO Add event handling code.\n&#39; The arguments tell you which elements have lost and received focus.\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Cancel subscription to the event.\n&#39;&#39;&#39; &lt;/summary&gt;\nPublic Sub UnsubscribeFocusChange()\n    If (focusHandler IsNot Nothing) Then\n        Automation.RemoveAutomationFocusChangedEventHandler(focusHandler)\n    End If\n\nEnd Sub &#39;UnsubscribeFocusChange\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#102\">AutomationFocusChangedEventHandler focusHandler = null;\n\n/// &lt;summary&gt;\n/// Create an event handler and register it.\n/// &lt;/summary&gt;\npublic void SubscribeToFocusChange()\n{\n    focusHandler = new AutomationFocusChangedEventHandler(OnFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(focusHandler);\n}\n\n/// &lt;summary&gt;\n/// Handle the event.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nprivate void OnFocusChange(object src, AutomationFocusChangedEventArgs e)\n{\n    // TODO Add event handling code.\n    // The arguments tell you which elements have lost and received focus.\n}\n\n/// &lt;summary&gt;\n/// Cancel subscription to the event.\n/// &lt;/summary&gt;\npublic void UnsubscribeFocusChange()\n{\n    if (focusHandler != null)\n    {\n        Automation.RemoveAutomationFocusChangedEventHandler(focusHandler);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_AddAutomationPropertyChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_TreeScope_System_Windows_Automation_AutomationPropertyChangedEventHandler_System_Windows_Automation_AutomationProperty___\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_AddAutomationPropertyChangedEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddAutomationPropertyChangedEventHandler(AutomationElement,TreeScope,AutomationPropertyChangedEventHandler,AutomationProperty[])</div>        \r\n          </div>\r\n    \r\n            <p>Registers a method that will handle property-changed events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddAutomationPropertyChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.TreeScope scope, System.Windows.Automation.AutomationPropertyChangedEventHandler eventHandler, System.Windows.Automation.AutomationProperty[] properties);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element with which to associate the event handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The scope of events to be handled; that is, whether they are on the element itself, or on its ancestors and children.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationpropertychangedeventhandler\" data-linktype=\"relative-path\">AutomationPropertyChangedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method to call when the event occurs.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>properties</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationproperty\" data-linktype=\"relative-path\">AutomationProperty</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> properties of interest.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-ui-md.md&quot; -->user interface (UI)<!--END INCLUDE --> item specified by the supplied <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element might not support the properties specified by the <code>properties</code> parameter.  </p>\n<p> <code>eventHandler</code> can be an instance of the method, or a reference to the method (<code>AddressOf</code> in Visual Basic).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example code adds an event handler that listens for a change in the enabled state of a specified element.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAClient_snip#172\">\nAutomationPropertyChangedEventHandler propChangeHandler;\n/// &lt;summary&gt;\n/// Adds a handler for property-changed event; in particular, a change in the enabled state.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;element&quot;&gt;The UI Automation element whose state is being monitored.&lt;/param&gt;\npublic void SubscribePropertyChange(AutomationElement element)\n{\n    Automation.AddAutomationPropertyChangedEventHandler(element, \n        TreeScope.Element, \n        propChangeHandler = new AutomationPropertyChangedEventHandler(OnPropertyChange),\n        AutomationElement.IsEnabledProperty);\n\n}\n\n/// &lt;summary&gt;\n/// Handler for property changes.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;The source whose properties changed.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nprivate void OnPropertyChange(object src, AutomationPropertyChangedEventArgs e)\n{\n    AutomationElement sourceElement = src as AutomationElement;\n    if (e.Property == AutomationElement.IsEnabledProperty)\n    {\n        bool enabled = (bool)e.NewValue;\n        // TODO: Do something with the new value. \n        // The element that raised the event can be identified by its runtime ID property.\n    }\n    else\n    { \n        // TODO: Handle other property-changed events.\n    }\n}\n\npublic void UnsubscribePropertyChange(AutomationElement element)\n{\n    if (propChangeHandler != null)\n    {\n        Automation.RemoveAutomationPropertyChangedEventHandler(element, propChangeHandler);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAClient_snip#172\">\nDim propChangeHandler As AutomationPropertyChangedEventHandler\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Adds a handler for property-changed event; in particular, a change in the enabled state.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;element&quot;&gt;The UI Automation element whose state is being monitored.&lt;/param&gt;\nPublic Sub SubscribePropertyChange(ByVal element As AutomationElement)\n    propChangeHandler = _\n        New AutomationPropertyChangedEventHandler(AddressOf OnPropertyChange)\n    Automation.AddAutomationPropertyChangedEventHandler(element, TreeScope.Element, _\n        propChangeHandler, AutomationElement.IsEnabledProperty)\n\nEnd Sub &#39;SubscribePropertyChange\n\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handler for property changes.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;The source whose properties changed.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nPrivate Sub OnPropertyChange(ByVal src As Object, ByVal e As AutomationPropertyChangedEventArgs) \n    Dim sourceElement As AutomationElement = DirectCast(src, AutomationElement)\n    If e.Property Is AutomationElement.IsEnabledProperty Then\n        Dim enabled As Boolean = CBool(e.NewValue)\n        &#39; TODO: Do something with the new value. \n        &#39; The element that raised the event can be identified by its runtime ID property.\n    Else\n    End If\n &#39; TODO: Handle other property-changed events.\nEnd Sub &#39;OnPropertyChange\n\n\nPublic Sub UnsubscribePropertyChange(ByVal element As AutomationElement)\n    If (propChangeHandler IsNot Nothing) Then\n        Automation.RemoveAutomationPropertyChangedEventHandler(element, propChangeHandler)\n    End If\n\nEnd Sub &#39;UnsubscribePropertyChange\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_AddStructureChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_TreeScope_System_Windows_Automation_StructureChangedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_AddStructureChangedEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddStructureChangedEventHandler(AutomationElement,TreeScope,StructureChangedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Registers the method that will handle structure-changed events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddStructureChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.TreeScope scope, System.Windows.Automation.StructureChangedEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element with which to associate the event handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.treescope\" data-linktype=\"relative-path\">TreeScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The scope of events to be handled; that is, whether they are on the element itself, or on its ancestors and descendants.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.structurechangedeventhandler\" data-linktype=\"relative-path\">StructureChangedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method to call when the structure-changed event occurs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>eventHandler</code> can be an instance of the method, or a reference to the method (<code>AddressOf</code> in Visual Basic).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a structure-changed event handler delegate that will be called whenever the subtree of the specified <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> changes.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAFocusTracker_snip#105\">/// &lt;summary&gt;\n/// Handles structure-changed events. If a new app window has been added, this method ensures\n/// it&#39;s in the list of runtime IDs and subscribed to window-close events.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;sender&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n/// &lt;remarks&gt;\n/// An exception can be thrown by the UI Automation core if the element disappears\n/// before it can be processed -- for example, if a menu item is only briefly visible. \n/// This exception cannot be caught here because it crosses native/managed boundaries. \n/// In the debugger, you can ignore it and continue execution. The exception does not cause\n/// a break when the executable is being run.\n/// &lt;/remarks&gt;\nprivate void OnStructureChanged(object sender, StructureChangedEventArgs e)\n{\n    AutomationElement element = sender as AutomationElement;\n\n    if (e.StructureChangeType == StructureChangeType.ChildAdded)\n    {\n        Object windowPattern;\n        if (false == element.TryGetCurrentPattern(WindowPattern.Pattern, out windowPattern))\n        {\n            return;\n        }\n        int[] rid = e.GetRuntimeId();\n        if (RuntimeIdListed(rid, savedRuntimeIds) &lt; 0)\n        {\n            AddToWindowHandler(element);\n            savedRuntimeIds.Add(rid);\n        }\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAFocusTracker_snip#105\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handles structure-changed events. If a new app window has been added, this method ensures\n&#39;&#39;&#39; it&#39;s in the list of runtime IDs and subscribed to window-close events.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;sender&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\n&#39;&#39;&#39; &lt;remarks&gt;\n&#39;&#39;&#39; An exception can be thrown by the UI Automation core if the element disappears\n&#39;&#39;&#39; before it can be processed -- for example, if a menu item is only briefly visible. \n&#39;&#39;&#39; This exception cannot be caught here because it crosses native/managed boundaries. \n&#39;&#39;&#39; In the debugger, you can ignore it and continue execution. The exception does not cause\n&#39;&#39;&#39; a break when the executable is being run.\n&#39;&#39;&#39; &lt;/remarks&gt;\nPrivate Sub OnStructureChanged(ByVal sender As Object, ByVal e As StructureChangedEventArgs) \n\n    Dim element As AutomationElement = DirectCast(sender, AutomationElement)\n    If e.StructureChangeType = StructureChangeType.ChildAdded Then\n        Dim myWindowPattern As Object = Nothing\n        If False = element.TryGetCurrentPattern(WindowPattern.Pattern, myWindowPattern) Then\n            Return\n        End If\n        Dim rid As Integer() = e.GetRuntimeId()\n        If RuntimeIdListed(rid, savedRuntimeIds) &lt; 0 Then\n            AddToWindowHandler(element)\n            savedRuntimeIds.Add(rid)\n        End If\n    End If\n \nEnd Sub &#39;OnStructureChanged\n</code></pre><p> The following example code adds an instance of the delegate.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAFocusTracker_snip#104\">// elementRoot is an AutomationElement.\nAutomation.AddStructureChangedEventHandler(elementRoot, TreeScope.Children, \n    new StructureChangedEventHandler(OnStructureChanged));\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAFocusTracker_snip#104\">&#39; elementRoot is an AutomationElement.\nAutomation.AddStructureChangedEventHandler(elementRoot, TreeScope.Children, New StructureChangedEventHandler(AddressOf OnStructureChanged))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_Compare_System_Int32___System_Int32___\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare(Int32[],Int32[])</div>        \r\n          </div>\r\n    \r\n            <p>Compares two integer arrays containing run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-idsharpplural-md.md&quot; -->identifiers (IDs)<!--END INCLUDE --> to determine whether their content is the same.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Compare (int[] runtimeId1, int[] runtimeId2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>runtimeId1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-id-md.md&quot; --> ID <!--END INCLUDE --> to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>runtimeId2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-id-md.md&quot; --> ID <!--END INCLUDE --> to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the compared run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-idsharpplural-md.md&quot; -->IDs<!--END INCLUDE --> refer to the same <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-ui-md.md&quot; -->user interface (UI)<!--END INCLUDE --> element; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If either of the arguments is a null reference (<code>Nothing</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-visualbnet-md.md&quot; -->Microsoft Visual Basic .NET<!--END INCLUDE -->), Compare throws an <a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a> exception.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example function determines whether a run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-id-md.md&quot; --> ID <!--END INCLUDE --> is in a list of run-time <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-idsharpplural-md.md&quot; -->IDs<!--END INCLUDE -->.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAFocusTracker_snip#103\">private int RuntimeIdListed(int[] runtimeId, ArrayList runtimeIds)\n{\n    for (int x = 0; x &lt; runtimeIds.Count; x++)\n    {\n        int[] listedId = (int[])runtimeIds[x];\n        if (Automation.Compare(listedId, runtimeId))\n        {\n            return x;\n        }\n    }\n    return -1;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAFocusTracker_snip#103\">Private Function RuntimeIdListed(ByVal runtimeId() As Integer, ByVal runtimeIds As ArrayList) As Integer \n    Dim x As Integer\n    For x = 0 To runtimeIds.Count - 1\n        Dim listedId As Integer() = CType(runtimeIds(x), Integer())\n        If Automation.Compare(listedId, runtimeId) Then\n            Return x\n        End If\n    Next x\n    Return - 1\n\nEnd Function &#39;RuntimeIdListed\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_Compare_System_Windows_Automation_AutomationElement_System_Windows_Automation_AutomationElement_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare(AutomationElement,AutomationElement)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> elements, returning <code>true</code> if both refer to the same <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-ui-md.md&quot; -->UI<!--END INCLUDE --> element.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Compare (System.Windows.Automation.AutomationElement el1, System.Windows.Automation.AutomationElement el2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>el1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>el2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the run time identifiers of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-ui-md.md&quot; -->UI<!--END INCLUDE --> elements are the same; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If either of the arguments is a null reference (<code>Nothing</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-visualbnet-md.md&quot; -->Microsoft Visual Basic .NET<!--END INCLUDE -->), <a class=\"xref\" href=\"system.windows.automation.automation#System_Windows_Automation_Automation_Compare_\" data-linktype=\"relative-path\">Compare</a> throws an <a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a> exception.  </p>\n<p> This method is equivalent to the equality operator for <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> objects.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_PatternName_System_Windows_Automation_AutomationPattern_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_PatternName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PatternName(AutomationPattern)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the name of the specified control pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string PatternName (System.Windows.Automation.AutomationPattern pattern);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pattern</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationpattern\" data-linktype=\"relative-path\">AutomationPattern</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier of the control pattern.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The friendly name of the control pattern, or a null reference (<code>Nothing</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-visualbnet-md.md&quot; -->Microsoft Visual Basic .NET<!--END INCLUDE -->) if the specified pattern is not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the name of each control pattern supported by an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Calling <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_GetSupportedPatterns_\" data-linktype=\"relative-path\">GetSupportedPatterns</a> requires a great deal of processing, as it queries the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> for every possible pattern.  </p>\n</div>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#114\">&#39; element is an AutomationElement.\nDim patterns As AutomationPattern() = element.GetSupportedPatterns()\nDim pattern As AutomationPattern\nFor Each pattern In patterns\n    Console.WriteLine(&quot;ProgrammaticName: &quot; + pattern.ProgrammaticName)\n    Console.WriteLine(&quot;PatternName: &quot; + Automation.PatternName(pattern))\nNext pattern\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#114\">// element is an AutomationElement.\nAutomationPattern[] patterns = element.GetSupportedPatterns();\nforeach (AutomationPattern pattern in patterns)\n{\n    Console.WriteLine(&quot;ProgrammaticName: &quot; + pattern.ProgrammaticName);\n    Console.WriteLine(&quot;PatternName: &quot; + Automation.PatternName(pattern));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_PropertyName_System_Windows_Automation_AutomationProperty_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_PropertyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PropertyName(AutomationProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the name of the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string PropertyName (System.Windows.Automation.AutomationProperty property);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>property</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationproperty\" data-linktype=\"relative-path\">AutomationProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> property identifier of the named property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The friendly name of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> property, or a null reference (<code>Nothing</code> in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-visualbnet-md.md&quot; -->Microsoft Visual Basic .NET<!--END INCLUDE -->) if the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> property is not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays the name of each property supported by an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#115\">Dim properties As AutomationProperty() = element.GetSupportedProperties()\nDim prop As AutomationProperty\nFor Each prop In properties\n    Console.WriteLine(prop.ProgrammaticName)\n    Console.WriteLine(Automation.PropertyName(prop))\nNext prop\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#115\">AutomationProperty[] properties = element.GetSupportedProperties();\nforeach (AutomationProperty prop in properties)\n{\n    Console.WriteLine(prop.ProgrammaticName);\n    Console.WriteLine(Automation.PropertyName(prop));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_RemoveAllEventHandlers\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_RemoveAllEventHandlers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAllEventHandlers()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all registered <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> event handlers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveAllEventHandlers ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_RemoveAutomationEventHandler_System_Windows_Automation_AutomationEvent_System_Windows_Automation_AutomationElement_System_Windows_Automation_AutomationEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_RemoveAutomationEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAutomationEventHandler(AutomationEvent,AutomationElement,AutomationEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> event handler.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveAutomationEventHandler (System.Windows.Automation.AutomationEvent eventId, System.Windows.Automation.AutomationElement element, System.Windows.Automation.AutomationEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationevent\" data-linktype=\"relative-path\">AutomationEvent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An event identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element on which to remove the event handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationeventhandler\" data-linktype=\"relative-path\">AutomationEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The handler method that was passed to <span class=\"xref\">stem.Windows.Automation.Automation.AddAutomationEventHandler*</span> for the specified event identifier and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example code shows an event handler being added and removed.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#101\">&#39; Member variables.\nPrivate ElementSubscribeButton As AutomationElement\nPrivate UIAeventHandler As AutomationEventHandler\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Register an event handler for InvokedEvent on the specified element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;elementButton&quot;&gt;The automation element.&lt;/param&gt;\nPublic Sub SubscribeToInvoke(ByVal elementButton As AutomationElement)\n    If (elementButton IsNot Nothing) Then\n        UIAeventHandler = New AutomationEventHandler(AddressOf OnUIAutomationEvent)\n        Automation.AddAutomationEventHandler(InvokePattern.InvokedEvent, elementButton, _\n        TreeScope.Element, UIAeventHandler)\n        ElementSubscribeButton = elementButton\n    End If\n\nEnd Sub &#39;SubscribeToInvoke\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; AutomationEventHandler delegate.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nPrivate Sub OnUIAutomationEvent(ByVal src As Object, ByVal e As AutomationEventArgs)\n    &#39; Make sure the element still exists. Elements such as tooltips can disappear\n    &#39; before the event is processed.\n    Dim sourceElement As AutomationElement\n    Try\n        sourceElement = DirectCast(src, AutomationElement)\n    Catch ex As ElementNotAvailableException\n        Exit Sub\n    End Try\n    If e.EventId Is InvokePattern.InvokedEvent Then\n        &#39; TODO Add handling code.\n    Else\n    End If\n    &#39; TODO Handle any other events that have been subscribed to.\n    Console.WriteLine(&quot;Event: &quot; &amp; e.EventId.ProgrammaticName)\nEnd Sub &#39;OnUIAutomationEvent\n\nPrivate Sub ShutdownUIA()\n    If (UIAeventHandler IsNot Nothing) Then\n        Automation.RemoveAutomationEventHandler(InvokePattern.InvokedEvent, ElementSubscribeButton, UIAeventHandler)\n    End If\n\nEnd Sub &#39;ShutdownUIA\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#101\">// Member variables.\nAutomationElement ElementSubscribeButton;\nAutomationEventHandler UIAeventHandler;\n\n/// &lt;summary&gt;\n/// Register an event handler for InvokedEvent on the specified element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;elementButton&quot;&gt;The automation element.&lt;/param&gt;\npublic void SubscribeToInvoke(AutomationElement elementButton)\n{\n    if (elementButton != null)\n    {\n        Automation.AddAutomationEventHandler(InvokePattern.InvokedEvent,\n             elementButton, TreeScope.Element,\n             UIAeventHandler = new AutomationEventHandler(OnUIAutomationEvent));\n        ElementSubscribeButton = elementButton;\n    }\n}\n\n/// &lt;summary&gt;\n/// AutomationEventHandler delegate.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nprivate void OnUIAutomationEvent(object src, AutomationEventArgs e)\n{\n    // Make sure the element still exists. Elements such as tooltips\n    // can disappear before the event is processed.\n    AutomationElement sourceElement;\n    try\n    {\n        sourceElement = src as AutomationElement;\n    }\n    catch (ElementNotAvailableException)\n    {\n        return;\n    }\n    if (e.EventId == InvokePattern.InvokedEvent)\n    {\n        // TODO Add handling code.\n    }\n    else\n    {\n        // TODO Handle any other events that have been subscribed to.\n    }\n}\n\nprivate void ShutdownUIA()\n{\n    if (UIAeventHandler != null)\n    {\n        Automation.RemoveAutomationEventHandler(InvokePattern.InvokedEvent,\n            ElementSubscribeButton, UIAeventHandler);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_RemoveAutomationFocusChangedEventHandler_System_Windows_Automation_AutomationFocusChangedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_RemoveAutomationFocusChangedEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAutomationFocusChangedEventHandler(AutomationFocusChangedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified focus-changed event handler.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveAutomationFocusChangedEventHandler (System.Windows.Automation.AutomationFocusChangedEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationfocuschangedeventhandler\" data-linktype=\"relative-path\">AutomationFocusChangedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handler method that was passed to <span class=\"xref\">stem.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler*</span></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following example code shows a focus-changed event handler being added and removed.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAClient_snip#102\">Private focusHandler As AutomationFocusChangedEventHandler = Nothing\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Create an event handler and register it.\n&#39;&#39;&#39; &lt;/summary&gt;\nPublic Sub SubscribeToFocusChange()\n    focusHandler = New AutomationFocusChangedEventHandler(AddressOf OnFocusChange)\n    Automation.AddAutomationFocusChangedEventHandler(focusHandler)\n\nEnd Sub &#39;SubscribeToFocusChange\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handle the event.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nPrivate Sub OnFocusChange(ByVal src As Object, ByVal e As AutomationFocusChangedEventArgs)\n\nEnd Sub &#39;OnFocusChange\n\n&#39; TODO Add event handling code.\n&#39; The arguments tell you which elements have lost and received focus.\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Cancel subscription to the event.\n&#39;&#39;&#39; &lt;/summary&gt;\nPublic Sub UnsubscribeFocusChange()\n    If (focusHandler IsNot Nothing) Then\n        Automation.RemoveAutomationFocusChangedEventHandler(focusHandler)\n    End If\n\nEnd Sub &#39;UnsubscribeFocusChange\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAClient_snip#102\">AutomationFocusChangedEventHandler focusHandler = null;\n\n/// &lt;summary&gt;\n/// Create an event handler and register it.\n/// &lt;/summary&gt;\npublic void SubscribeToFocusChange()\n{\n    focusHandler = new AutomationFocusChangedEventHandler(OnFocusChange);\n    Automation.AddAutomationFocusChangedEventHandler(focusHandler);\n}\n\n/// &lt;summary&gt;\n/// Handle the event.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;Object that raised the event.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nprivate void OnFocusChange(object src, AutomationFocusChangedEventArgs e)\n{\n    // TODO Add event handling code.\n    // The arguments tell you which elements have lost and received focus.\n}\n\n/// &lt;summary&gt;\n/// Cancel subscription to the event.\n/// &lt;/summary&gt;\npublic void UnsubscribeFocusChange()\n{\n    if (focusHandler != null)\n    {\n        Automation.RemoveAutomationFocusChangedEventHandler(focusHandler);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_RemoveAutomationPropertyChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_AutomationPropertyChangedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_RemoveAutomationPropertyChangedEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAutomationPropertyChangedEventHandler(AutomationElement,AutomationPropertyChangedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified property-changed event handler.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveAutomationPropertyChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.AutomationPropertyChangedEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element from which to remove the event handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationpropertychangedeventhandler\" data-linktype=\"relative-path\">AutomationPropertyChangedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handler method that was passed to <span class=\"xref\">stem.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler*</span> for the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following example code shows a property-changed event handler being added and removed.  </p>\n<pre><code class=\"lang-cs\" name=\"UIAClient_snip#172\">\nAutomationPropertyChangedEventHandler propChangeHandler;\n/// &lt;summary&gt;\n/// Adds a handler for property-changed event; in particular, a change in the enabled state.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;element&quot;&gt;The UI Automation element whose state is being monitored.&lt;/param&gt;\npublic void SubscribePropertyChange(AutomationElement element)\n{\n    Automation.AddAutomationPropertyChangedEventHandler(element, \n        TreeScope.Element, \n        propChangeHandler = new AutomationPropertyChangedEventHandler(OnPropertyChange),\n        AutomationElement.IsEnabledProperty);\n\n}\n\n/// &lt;summary&gt;\n/// Handler for property changes.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;src&quot;&gt;The source whose properties changed.&lt;/param&gt;\n/// &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nprivate void OnPropertyChange(object src, AutomationPropertyChangedEventArgs e)\n{\n    AutomationElement sourceElement = src as AutomationElement;\n    if (e.Property == AutomationElement.IsEnabledProperty)\n    {\n        bool enabled = (bool)e.NewValue;\n        // TODO: Do something with the new value. \n        // The element that raised the event can be identified by its runtime ID property.\n    }\n    else\n    { \n        // TODO: Handle other property-changed events.\n    }\n}\n\npublic void UnsubscribePropertyChange(AutomationElement element)\n{\n    if (propChangeHandler != null)\n    {\n        Automation.RemoveAutomationPropertyChangedEventHandler(element, propChangeHandler);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIAClient_snip#172\">\nDim propChangeHandler As AutomationPropertyChangedEventHandler\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Adds a handler for property-changed event; in particular, a change in the enabled state.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;element&quot;&gt;The UI Automation element whose state is being monitored.&lt;/param&gt;\nPublic Sub SubscribePropertyChange(ByVal element As AutomationElement)\n    propChangeHandler = _\n        New AutomationPropertyChangedEventHandler(AddressOf OnPropertyChange)\n    Automation.AddAutomationPropertyChangedEventHandler(element, TreeScope.Element, _\n        propChangeHandler, AutomationElement.IsEnabledProperty)\n\nEnd Sub &#39;SubscribePropertyChange\n\n\n\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Handler for property changes.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;src&quot;&gt;The source whose properties changed.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;e&quot;&gt;Event arguments.&lt;/param&gt;\nPrivate Sub OnPropertyChange(ByVal src As Object, ByVal e As AutomationPropertyChangedEventArgs) \n    Dim sourceElement As AutomationElement = DirectCast(src, AutomationElement)\n    If e.Property Is AutomationElement.IsEnabledProperty Then\n        Dim enabled As Boolean = CBool(e.NewValue)\n        &#39; TODO: Do something with the new value. \n        &#39; The element that raised the event can be identified by its runtime ID property.\n    Else\n    End If\n &#39; TODO: Handle other property-changed events.\nEnd Sub &#39;OnPropertyChange\n\n\nPublic Sub UnsubscribePropertyChange(ByVal element As AutomationElement)\n    If (propChangeHandler IsNot Nothing) Then\n        Automation.RemoveAutomationPropertyChangedEventHandler(element, propChangeHandler)\n    End If\n\nEnd Sub &#39;UnsubscribePropertyChange\n\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Automation_RemoveStructureChangedEventHandler_System_Windows_Automation_AutomationElement_System_Windows_Automation_StructureChangedEventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Automation_RemoveStructureChangedEventHandler_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveStructureChangedEventHandler(AutomationElement,StructureChangedEventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified structure-changed event handler.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveStructureChangedEventHandler (System.Windows.Automation.AutomationElement element, System.Windows.Automation.StructureChangedEventHandler eventHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element from which to remove the event handler.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.structurechangedeventhandler\" data-linktype=\"relative-path\">StructureChangedEventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A handler method that was passed to <span class=\"xref\">stem.Windows.Automation.Automation.AddStructureChangedEventHandler*</span> for the specified <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tla2sharptla-uiautomation-md.md&quot; -->UI Automation<!--END INCLUDE --> element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Automation.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Automation.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.AddAutomationEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.AddStructureChangedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.Compare\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.ContentViewCondition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.ControlViewCondition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.PatternName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.PropertyName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.RawViewCondition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.RemoveAllEventHandlers\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.RemoveAutomationEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Automation.RemoveStructureChangedEventHandler\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a8d04996-b942-37a8-5a16-dfbcd4224625\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Windows.Automation\\Automation.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains methods and fields for UI Automation client applications.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.Automation\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Automation.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Automation.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.Automation","System.Windows.Automation.Automation.AddAutomationEventHandler","System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler","System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler","System.Windows.Automation.Automation.AddStructureChangedEventHandler","System.Windows.Automation.Automation.Compare","System.Windows.Automation.Automation.ContentViewCondition","System.Windows.Automation.Automation.ControlViewCondition","System.Windows.Automation.Automation.PatternName","System.Windows.Automation.Automation.PropertyName","System.Windows.Automation.Automation.RawViewCondition","System.Windows.Automation.Automation.RemoveAllEventHandlers","System.Windows.Automation.Automation.RemoveAutomationEventHandler","System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler","System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler","System.Windows.Automation.Automation.RemoveStructureChangedEventHandler"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.Automation","System::Windows::Automation::Automation","System.Windows.Automation.Automation.AddAutomationEventHandler","System::Windows::Automation::Automation::AddAutomationEventHandler","System.Windows.Automation.Automation.AddAutomationFocusChangedEventHandler","System::Windows::Automation::Automation::AddAutomationFocusChangedEventHandler","System.Windows.Automation.Automation.AddAutomationPropertyChangedEventHandler","System::Windows::Automation::Automation::AddAutomationPropertyChangedEventHandler","System.Windows.Automation.Automation.AddStructureChangedEventHandler","System::Windows::Automation::Automation::AddStructureChangedEventHandler","System.Windows.Automation.Automation.Compare","System::Windows::Automation::Automation::Compare","System.Windows.Automation.Automation.ContentViewCondition","System::Windows::Automation::Automation::ContentViewCondition","System.Windows.Automation.Automation.ControlViewCondition","System::Windows::Automation::Automation::ControlViewCondition","System.Windows.Automation.Automation.PatternName","System::Windows::Automation::Automation::PatternName","System.Windows.Automation.Automation.PropertyName","System::Windows::Automation::Automation::PropertyName","System.Windows.Automation.Automation.RawViewCondition","System::Windows::Automation::Automation::RawViewCondition","System.Windows.Automation.Automation.RemoveAllEventHandlers","System::Windows::Automation::Automation::RemoveAllEventHandlers","System.Windows.Automation.Automation.RemoveAutomationEventHandler","System::Windows::Automation::Automation::RemoveAutomationEventHandler","System.Windows.Automation.Automation.RemoveAutomationFocusChangedEventHandler","System::Windows::Automation::Automation::RemoveAutomationFocusChangedEventHandler","System.Windows.Automation.Automation.RemoveAutomationPropertyChangedEventHandler","System::Windows::Automation::Automation::RemoveAutomationPropertyChangedEventHandler","System.Windows.Automation.Automation.RemoveStructureChangedEventHandler","System::Windows::Automation::Automation::RemoveStructureChangedEventHandler"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a8d04996-b942-37a8-5a16-dfbcd4224625","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Windows.Automation\\Automation.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/Automation.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Automation class | Microsoft Docs","_op_ogTitle":"Automation class","description":"Contains methods and fields for UI Automation client applications.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.Automation","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.automation","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.automation","fileRelativePath":"System.Windows.Automation.Automation.html"},"themesRelativePathToOutputRoot":"_themes/"}