{"content":"    \r\n    <h1 id=\"System_Xml_XmlConvert\">\r\n      <span class=\"lang-csharp\">XmlConvert</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returned are locale-independent.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlConvert</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlConvert</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The XmlConvert class is functionally equivalent to the <a class=\"xref\" href=\"system.convert\" data-linktype=\"relative-path\">Convert</a> class, but it supports XML standards. The type system is based on the XML Schema definition language (XSD) schema type, and the values returned are always locale-independent.  </p>\n<h2 id=\"encoding-and-decoding\">Encoding and decoding</h2>\n<p> Element and attribute names or ID values are limited to a range of XML characters according to the W3C <a href=\"http://www.w3.org/TR/2006/REC-xml-20060816/\" data-linktype=\"external\">XML 1.0 recommendation</a>. When names contain invalid characters, you can use the <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeName_\" data-linktype=\"relative-path\">EncodeName</a> and <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_DecodeName_\" data-linktype=\"relative-path\">DecodeName</a> methods in this class to translate them into valid XML names.  </p>\n<p> For example, if you want to use the column heading &quot;Order Detail&quot; in a database, the database allows the space between the two words. However, in XML, the space between &quot;Order&quot; and &quot;Detail&quot; is considered an invalid XML character. You have to convert it into an escaped hexadecimal encoding and decode it later.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeName_\" data-linktype=\"relative-path\">EncodeName</a> method with the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class to ensure the names being written are valid XML names. The following C# code converts the name &quot;Order Detail&quot; into a valid XML name and writes the element <code>&lt;Order_0x0020_Detail&gt;My order&lt;/Order_0x0020_Detail&gt;</code>.  </p>\n<pre><code>writer.WriteElementString(XmlConvert.EncodeName(&quot;Order Detail&quot;),&quot;My order&quot;);  \n</code></pre><p> The following XmlConvert methods perform encoding and decoding.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeName_\" data-linktype=\"relative-path\">EncodeName</a></td>\n<td>Takes a name and returns the encoded name along with any invalid character that is replaced by an escape string. This method allows colons in any position, which means that the name may still be invalid according to the W3C <a href=\"http://www.w3.org/TR/REC-xml-names\" data-linktype=\"external\">Namespaces in XML 1.0 recommendation</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeNmToken_\" data-linktype=\"relative-path\">EncodeNmToken</a></td>\n<td>Takes a name and returns the encoded name.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeLocalName_\" data-linktype=\"relative-path\">EncodeLocalName</a></td>\n<td>Same as <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeName_\" data-linktype=\"relative-path\">EncodeName</a> except that it also encodes the colon character, guaranteeing that the name can be used as the <code>LocalName</code> part of a namespace-qualified name.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_DecodeName_\" data-linktype=\"relative-path\">DecodeName</a></td>\n<td>Reverses the transformation for all the encoding methods.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"name-validation\">Name validation</h2>\n<p> The XmlConvert class contains two methods that check the characters in an element or attribute name and verify that the name conforms to the rules set by the W3C <a href=\"http://www.w3.org/TR/2006/REC-xml-20060816/\" data-linktype=\"external\">XML 1.0 recommendation</a>:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_VerifyName_\" data-linktype=\"relative-path\">VerifyName</a> checks the characters and verifies that the name is valid. The method returns the name if it&#39;s valid, and throws an exception if it isn&#39;t.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_VerifyNCName_\" data-linktype=\"relative-path\">VerifyNCName</a> performs the same validation, but accepts non-qualified names.  </p>\n<p>The XmlConvert contains additional methods that validate tokens, white-space characters, public IDs, and other strings.  </p>\n</li>\n</ul>\n<h2 id=\"data-type-conversion\">Data type conversion</h2>\n<p> XmlConvert also provides methods that enable you to convert data from a string to a strongly typed data type. For example, the <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_ToDateTime_\" data-linktype=\"relative-path\">ToDateTime</a> method converts a string to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent. This is useful because most methods in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> class return data as a string. After the data is read, it can be converted to the proper data type before being used. The <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_ToString_\" data-linktype=\"relative-path\">ToString</a> overloads provide the complementary operation by converting strongly typed data to strings. For example, this is useful when you want to add the data to text boxes on a webpage. Locale settings are not taken into account during data conversion. The data types are based on the XML Schema (XSD) data types.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert__ctor\" data-linktype=\"self-bookmark\">XmlConvert()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlconvert\" data-linktype=\"relative-path\">XmlConvert</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_DecodeName_System_String_\" data-linktype=\"self-bookmark\">DecodeName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Decodes a name. This method does the reverse of the <span class=\"xref\">stem.Xml.XmlConvert.EncodeName*</span> and <span class=\"xref\">stem.Xml.XmlConvert.EncodeLocalName*</span> methods.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_EncodeLocalName_System_String_\" data-linktype=\"self-bookmark\">EncodeLocalName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the name to a valid XML local name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_EncodeName_System_String_\" data-linktype=\"self-bookmark\">EncodeName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the name to a valid XML name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_EncodeNmToken_System_String_\" data-linktype=\"self-bookmark\">EncodeNmToken(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies the name is valid according to the XML specification.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_IsNCNameChar_System_Char_\" data-linktype=\"self-bookmark\">IsNCNameChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the passed-in character is a valid non-colon character type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_IsPublicIdChar_System_Char_\" data-linktype=\"self-bookmark\">IsPublicIdChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_IsStartNCNameChar_System_Char_\" data-linktype=\"self-bookmark\">IsStartNCNameChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks if the passed-in character is a valid Start Name Character type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_IsWhitespaceChar_System_Char_\" data-linktype=\"self-bookmark\">IsWhitespaceChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks if the passed-in character is a valid XML whitespace character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_IsXmlChar_System_Char_\" data-linktype=\"self-bookmark\">IsXmlChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks if the passed-in character is a valid XML character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_IsXmlSurrogatePair_System_Char_System_Char_\" data-linktype=\"self-bookmark\">IsXmlSurrogatePair(Char,Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks if the passed-in surrogate pair of characters is a valid XML character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToBoolean_System_String_\" data-linktype=\"self-bookmark\">ToBoolean(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToByte_System_String_\" data-linktype=\"self-bookmark\">ToByte(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToChar_System_String_\" data-linktype=\"self-bookmark\">ToChar(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTime_System_String_\" data-linktype=\"self-bookmark\">ToDateTime(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTime_System_String_System_String_\" data-linktype=\"self-bookmark\">ToDateTime(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTime_System_String_System_String___\" data-linktype=\"self-bookmark\">ToDateTime(String,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTime_System_String_System_Xml_XmlDateTimeSerializationMode_\" data-linktype=\"self-bookmark\">ToDateTime(String,XmlDateTimeSerializationMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> using the <a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a> specified</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTimeOffset_System_String_\" data-linktype=\"self-bookmark\">ToDateTimeOffset(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTimeOffset_System_String_System_String_\" data-linktype=\"self-bookmark\">ToDateTimeOffset(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDateTimeOffset_System_String_System_String___\" data-linktype=\"self-bookmark\">ToDateTimeOffset(String,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDecimal_System_String_\" data-linktype=\"self-bookmark\">ToDecimal(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToDouble_System_String_\" data-linktype=\"self-bookmark\">ToDouble(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToGuid_System_String_\" data-linktype=\"self-bookmark\">ToGuid(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToInt16_System_String_\" data-linktype=\"self-bookmark\">ToInt16(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToInt32_System_String_\" data-linktype=\"self-bookmark\">ToInt32(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToInt64_System_String_\" data-linktype=\"self-bookmark\">ToInt64(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToSByte_System_String_\" data-linktype=\"self-bookmark\">ToSByte(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToSingle_System_String_\" data-linktype=\"self-bookmark\">ToSingle(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Boolean_\" data-linktype=\"self-bookmark\">ToString(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Byte_\" data-linktype=\"self-bookmark\">ToString(Byte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Char_\" data-linktype=\"self-bookmark\">ToString(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_DateTime_\" data-linktype=\"self-bookmark\">ToString(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">ToString(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Decimal_\" data-linktype=\"self-bookmark\">ToString(Decimal)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Double_\" data-linktype=\"self-bookmark\">ToString(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Guid_\" data-linktype=\"self-bookmark\">ToString(Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Int16_\" data-linktype=\"self-bookmark\">ToString(Int16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Int32_\" data-linktype=\"self-bookmark\">ToString(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Int64_\" data-linktype=\"self-bookmark\">ToString(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_SByte_\" data-linktype=\"self-bookmark\">ToString(SByte)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_Single_\" data-linktype=\"self-bookmark\">ToString(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_TimeSpan_\" data-linktype=\"self-bookmark\">ToString(TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_UInt16_\" data-linktype=\"self-bookmark\">ToString(UInt16)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_UInt32_\" data-linktype=\"self-bookmark\">ToString(UInt32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_UInt64_\" data-linktype=\"self-bookmark\">ToString(UInt64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_DateTime_System_String_\" data-linktype=\"self-bookmark\">ToString(DateTime,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_DateTime_System_Xml_XmlDateTimeSerializationMode_\" data-linktype=\"self-bookmark\">ToString(DateTime,XmlDateTimeSerializationMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> using the <a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a> specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToString_System_DateTimeOffset_System_String_\" data-linktype=\"self-bookmark\">ToString(DateTimeOffset,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> in the specified format.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToTimeSpan_System_String_\" data-linktype=\"self-bookmark\">ToTimeSpan(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToUInt16_System_String_\" data-linktype=\"self-bookmark\">ToUInt16(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToUInt32_System_String_\" data-linktype=\"self-bookmark\">ToUInt32(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_ToUInt64_System_String_\" data-linktype=\"self-bookmark\">ToUInt64(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyName_System_String_\" data-linktype=\"self-bookmark\">VerifyName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyNCName_System_String_\" data-linktype=\"self-bookmark\">VerifyNCName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies that the name is a valid <code>NCName</code> according to the W3C Extended Markup Language recommendation. An <code>NCName</code> is a name that cannot contain a colon.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyNMTOKEN_System_String_\" data-linktype=\"self-bookmark\">VerifyNMTOKEN(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyPublicId_System_String_\" data-linktype=\"self-bookmark\">VerifyPublicId(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the passed in string instance if all the characters in the string argument are valid public id characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyTOKEN_System_String_\" data-linktype=\"self-bookmark\">VerifyTOKEN(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyWhitespace_System_String_\" data-linktype=\"self-bookmark\">VerifyWhitespace(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlConvert_VerifyXmlChars_System_String_\" data-linktype=\"self-bookmark\">VerifyXmlChars(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <code>XmlException</code> is thrown with information on the first invalid character encountered.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert__ctor\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlConvert()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlconvert\" data-linktype=\"relative-path\">XmlConvert</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XmlConvert ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_DecodeName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_DecodeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DecodeName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Decodes a name. This method does the reverse of the <span class=\"xref\">stem.Xml.XmlConvert.EncodeName*</span> and <span class=\"xref\">stem.Xml.XmlConvert.EncodeLocalName*</span> methods.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string DecodeName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to be transformed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The decoded name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The names are decoded using the following rules:  </p>\n<ul>\n<li><p>Names are decoded from left to right.  </p>\n</li>\n<li><p>Any sequence <em>x `HHHH</em>` (where HHHH stands for a valid, four digit hexadecimal UCS-2 code) that has not been decoded is transformed into the corresponding Unicode 2.1 (Unicode 3.0 if supported by the application) character.  </p>\n</li>\n<li><p>No shortforms are recognized. They are passed on without translation. For example, <em>x20\\</em> or __ are not decoded.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The actual encoding of the character is application-specific. For example, Order_x0020_Details becomes Order Details. Even escaped characters that are invalid in XML names will be recognized and decoded.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example encodes and decodes names.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert.EncodeName#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n\n  public static void Main()\n  {\n\n     // Encode and decode a name with spaces.\n     string name1 = XmlConvert.EncodeName(&quot;Order Detail&quot;);\n     Console.WriteLine(&quot;Encoded name: &quot; + name1);\n     Console.WriteLine(&quot;Decoded name: &quot; + XmlConvert.DecodeName(name1));\n\n     // Encode and decode a local name.\n     string name2 = XmlConvert.EncodeLocalName(&quot;a:book&quot;);\n     Console.WriteLine(&quot;Encoded local name: &quot; + name2);\n     Console.WriteLine(&quot;Decoded local name: &quot; + XmlConvert.DecodeName(name2));\n\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlConvert.EncodeName#1\">#using &lt;System.dll&gt;\n#using &lt;System.XML.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Encode and decode a name with spaces.\n   String^ name1 = XmlConvert::EncodeName( &quot;Order Detail&quot; );\n   Console::WriteLine( &quot;Encoded name: {0}&quot;, name1 );\n   Console::WriteLine( &quot;Decoded name: {0}&quot;, XmlConvert::DecodeName( name1 ) );\n   \n   // Encode and decode a local name.\n   String^ name2 = XmlConvert::EncodeLocalName( &quot;a:book&quot; );\n   Console::WriteLine( &quot;Encoded local name: {0}&quot;, name2 );\n   Console::WriteLine( &quot;Decoded local name: {0}&quot;, XmlConvert::DecodeName( name2 ) );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert.EncodeName#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n     &#39; Encode and decode a name with spaces.\n     Dim name1 as string = XmlConvert.EncodeName(&quot;Order Detail&quot;)\n     Console.WriteLine(&quot;Encoded name: &quot; + name1)\n     Console.WriteLine(&quot;Decoded name: &quot; + XmlConvert.DecodeName(name1))\n\n     &#39; Encode and decode a local name.\n     Dim name2 as string= XmlConvert.EncodeLocalName(&quot;a:book&quot;)\n     Console.WriteLine(&quot;Encoded local name: &quot; + name2)\n     Console.WriteLine(&quot;Decoded local name: &quot; + XmlConvert.DecodeName(name2))\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_EncodeLocalName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_EncodeLocalName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncodeLocalName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the name to a valid XML local name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string EncodeLocalName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to be encoded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The encoded name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is similar to the <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeName_\" data-linktype=\"relative-path\">EncodeName</a> method except that it encodes the colon character, which guarantees that the name can be used as the local name part of a namespace qualified name.  </p>\n<p> For example, if you passed this method the invalid name a:b, it returns a_x003a_b, which is a valid local name.  </p>\n<p> If <code>name</code> is <code>null</code> or <code>String.Empty</code> then you get the same value returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example encodes and decodes names.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert.EncodeName#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n\n  public static void Main()\n  {\n\n     // Encode and decode a name with spaces.\n     string name1 = XmlConvert.EncodeName(&quot;Order Detail&quot;);\n     Console.WriteLine(&quot;Encoded name: &quot; + name1);\n     Console.WriteLine(&quot;Decoded name: &quot; + XmlConvert.DecodeName(name1));\n\n     // Encode and decode a local name.\n     string name2 = XmlConvert.EncodeLocalName(&quot;a:book&quot;);\n     Console.WriteLine(&quot;Encoded local name: &quot; + name2);\n     Console.WriteLine(&quot;Decoded local name: &quot; + XmlConvert.DecodeName(name2));\n\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlConvert.EncodeName#1\">#using &lt;System.dll&gt;\n#using &lt;System.XML.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Encode and decode a name with spaces.\n   String^ name1 = XmlConvert::EncodeName( &quot;Order Detail&quot; );\n   Console::WriteLine( &quot;Encoded name: {0}&quot;, name1 );\n   Console::WriteLine( &quot;Decoded name: {0}&quot;, XmlConvert::DecodeName( name1 ) );\n   \n   // Encode and decode a local name.\n   String^ name2 = XmlConvert::EncodeLocalName( &quot;a:book&quot; );\n   Console::WriteLine( &quot;Encoded local name: {0}&quot;, name2 );\n   Console::WriteLine( &quot;Decoded local name: {0}&quot;, XmlConvert::DecodeName( name2 ) );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert.EncodeName#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n     &#39; Encode and decode a name with spaces.\n     Dim name1 as string = XmlConvert.EncodeName(&quot;Order Detail&quot;)\n     Console.WriteLine(&quot;Encoded name: &quot; + name1)\n     Console.WriteLine(&quot;Decoded name: &quot; + XmlConvert.DecodeName(name1))\n\n     &#39; Encode and decode a local name.\n     Dim name2 as string= XmlConvert.EncodeLocalName(&quot;a:book&quot;)\n     Console.WriteLine(&quot;Encoded local name: &quot; + name2)\n     Console.WriteLine(&quot;Decoded local name: &quot; + XmlConvert.DecodeName(name2))\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_EncodeName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_EncodeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncodeName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the name to a valid XML name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string EncodeName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A name to be translated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the name with any invalid characters replaced by an escape string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method translates invalid characters, such as spaces or half-width Katakana, that need to be mapped to XML names without the support or presence of schemas. The invalid characters are translated into escaped numeric entity encodings.  </p>\n<p> The escape character is &quot;<em>&quot;. Any XML name character that does not conform to the <a href=\"http://www.w3.org/TR/2006/REC-xml-20060816/\" data-linktype=\"external\">XML 1.0 spec (fourth edition) recommendation</a> is escaped as _xHHHH\\</em>. The HHHH string stands for the four-digit hexadecimal UCS-2 code for the character in most significant bit first order. For example, the name Order Details is encoded as Order_x0020_Details.  </p>\n<p> The underscore character does not need to be escaped unless it is followed by a character sequence that together with the underscore can be misinterpreted as an escape sequence when decoding the name. For example, Order_Details is not encoded, but Order_x0020_ is encoded as Order_x005f_x0020_. No shortforms are allowed. For example, the forms <em>x20\\</em> and __ are not generated.  </p>\n<p> This method guarantees the name is valid according to the XML specification. It allows colons in any position, which means the name may still be invalid according to the <a href=\"http://www.w3.org/TR/REC-xml-names\" data-linktype=\"external\">W3C Namespace Specification</a>. To guarantee it is a valid namespace qualified name use <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_EncodeLocalName_\" data-linktype=\"relative-path\">EncodeLocalName</a> for the prefix and local name parts and join the result with a colon.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example encodes and decodes names.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert.EncodeName#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n\n  public static void Main()\n  {\n\n     // Encode and decode a name with spaces.\n     string name1 = XmlConvert.EncodeName(&quot;Order Detail&quot;);\n     Console.WriteLine(&quot;Encoded name: &quot; + name1);\n     Console.WriteLine(&quot;Decoded name: &quot; + XmlConvert.DecodeName(name1));\n\n     // Encode and decode a local name.\n     string name2 = XmlConvert.EncodeLocalName(&quot;a:book&quot;);\n     Console.WriteLine(&quot;Encoded local name: &quot; + name2);\n     Console.WriteLine(&quot;Decoded local name: &quot; + XmlConvert.DecodeName(name2));\n\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlConvert.EncodeName#1\">#using &lt;System.dll&gt;\n#using &lt;System.XML.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Encode and decode a name with spaces.\n   String^ name1 = XmlConvert::EncodeName( &quot;Order Detail&quot; );\n   Console::WriteLine( &quot;Encoded name: {0}&quot;, name1 );\n   Console::WriteLine( &quot;Decoded name: {0}&quot;, XmlConvert::DecodeName( name1 ) );\n   \n   // Encode and decode a local name.\n   String^ name2 = XmlConvert::EncodeLocalName( &quot;a:book&quot; );\n   Console::WriteLine( &quot;Encoded local name: {0}&quot;, name2 );\n   Console::WriteLine( &quot;Decoded local name: {0}&quot;, XmlConvert::DecodeName( name2 ) );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert.EncodeName#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n     &#39; Encode and decode a name with spaces.\n     Dim name1 as string = XmlConvert.EncodeName(&quot;Order Detail&quot;)\n     Console.WriteLine(&quot;Encoded name: &quot; + name1)\n     Console.WriteLine(&quot;Decoded name: &quot; + XmlConvert.DecodeName(name1))\n\n     &#39; Encode and decode a local name.\n     Dim name2 as string= XmlConvert.EncodeLocalName(&quot;a:book&quot;)\n     Console.WriteLine(&quot;Encoded local name: &quot; + name2)\n     Console.WriteLine(&quot;Decoded local name: &quot; + XmlConvert.DecodeName(name2))\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_EncodeNmToken_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_EncodeNmToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncodeNmToken(String)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies the name is valid according to the XML specification.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string EncodeNmToken (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to be encoded.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The encoded name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method guarantees that the name is valid according to the XML specification. For example, if you passed this method the invalid name 70+, it returns 70_x002b_ which is a valid XML name.  </p>\n<p> If <code>name</code> is <code>null</code> or String.Empty then you get the same value returned.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_IsNCNameChar_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_IsNCNameChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsNCNameChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the passed-in character is a valid non-colon character type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsNCNameChar (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to verify as a non-colon character.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns <code>true</code> if the character is a valid non-colon character type; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_IsPublicIdChar_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_IsPublicIdChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsPublicIdChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsPublicIdChar (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> object to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns the passed-in character if the character is a valid public id character, otherwise <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_IsStartNCNameChar_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_IsStartNCNameChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsStartNCNameChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Checks if the passed-in character is a valid Start Name Character type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsStartNCNameChar (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the character is a valid Start Name Character type; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For details about allowed characters, see the <a href=\"http://go.microsoft.com/fwlink/?LinkId=147985\" data-linktype=\"external\">XML 1.0 spec (fourth edition)</a> recommendation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_IsWhitespaceChar_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_IsWhitespaceChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWhitespaceChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Checks if the passed-in character is a valid XML whitespace character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsWhitespaceChar (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the passed in character is a valid XML whitespace character; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For details about allowed characters, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=147985\" data-linktype=\"external\">XML 1.0 spec (fourth edition)</a> recommendation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_IsXmlChar_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_IsXmlChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsXmlChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Checks if the passed-in character is a valid XML character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsXmlChar (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the passed in character is a valid XML character; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For details about allowed characters, see the <a href=\"http://go.microsoft.com/fwlink/?LinkId=147985\" data-linktype=\"external\">XML 1.0 spec (fourth edition)</a> recommendation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_IsXmlSurrogatePair_System_Char_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_IsXmlSurrogatePair_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsXmlSurrogatePair(Char,Char)</div>        \r\n          </div>\r\n    \r\n            <p>Checks if the passed-in surrogate pair of characters is a valid XML character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsXmlSurrogatePair (char lowChar, char highChar);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>lowChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The surrogate character to validate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>highChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The surrogate character to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the passed in surrogate pair of characters is a valid XML character; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToBoolean_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToBoolean_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToBoolean(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool ToBoolean (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <code>Boolean</code> value, that is, <code>true</code> or <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> does not represent a <code>Boolean</code> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Valid strings are &quot;1&quot; or &quot;true&quot; for <code>true</code> and &quot;0&quot; or &quot;false&quot; for <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToByte_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToByte(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static byte ToByte (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </div>\r\n                  <p>A <code>Byte</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> or greater than <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToChar_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToChar(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static char ToChar (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string containing a single character to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>A <code>Char</code> representing the single character.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>s</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>s</code> parameter contains more than one character.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTime_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTime(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ToDateTime (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <code>DateTime</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is an empty string or is not in the correct format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> The ToDateTime method is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_ToDateTime_System_String_System_Xml_XmlDateTimeSerializationMode_\" data-linktype=\"relative-path\">System.Xml.XmlConvert.ToDateTime(String,XmlDateTimeSerializationMode)</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_ToDouble_\" data-linktype=\"relative-path\">ToDouble</a> and <code>ToDateTime</code> to read strongly typed data.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert.ToDouble#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n\n  public static void Main()\n  {\n    XmlTextReader reader = new XmlTextReader(&quot;orderData.xml&quot;);\n\n    //Parse the file and pull out the order date and price.\n    while (reader.Read()){\n       if (reader.NodeType==XmlNodeType.Element){\n         switch(reader.Name){\n           case &quot;order&quot;:\n             DateTime orderDate = XmlConvert.ToDateTime(reader.GetAttribute(&quot;date&quot;));\n             Console.WriteLine(&quot;order date: {0}&quot;, orderDate.ToString());\n             break;\n           case &quot;price&quot;:\n             Double price = XmlConvert.ToDouble(reader.ReadInnerXml());\n             Console.WriteLine(&quot;price: {0}&quot;, price.ToString());\n             break;\n         }\n       }\n    }\n\n    //Close the reader.\n    reader.Close();  \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlConvert.ToDouble#1\">#using &lt;System.dll&gt;\n#using &lt;System.xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlTextReader^ reader = gcnew XmlTextReader( &quot;orderData.xml&quot; );\n   \n   //Parse the file and pull out the order date and price.\n   while ( reader-&gt;Read() )\n   {\n      if ( reader-&gt;NodeType == XmlNodeType::Element )\n      {\n         if ( reader-&gt;Name-&gt;Equals( &quot;order&quot; ) )\n         {\n            DateTime orderDate = XmlConvert::ToDateTime( reader-&gt;GetAttribute( &quot;date&quot; ) );\n            Console::WriteLine( &quot;order date: {0}&quot;, orderDate.ToString() );\n         }\n         else\n         if ( reader-&gt;Name-&gt;Equals( &quot;price&quot; ) )\n         {\n            Double price = XmlConvert::ToDouble( reader-&gt;ReadInnerXml() );\n            Console::WriteLine( &quot;price: {0}&quot;, price );\n         }\n      }\n   }\n\n   \n   //Close the reader.\n   reader-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert.ToDouble#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim reader as XmlTextReader = new XmlTextReader(&quot;orderData.xml&quot;)\n\n    &#39;Parse the file and pull out the order date and price.\n    while (reader.Read())\n       if (reader.NodeType=XmlNodeType.Element)\n         select case reader.Name\n           case &quot;order&quot;:\n             Dim orderDate as DateTime = XmlConvert.ToDateTime(reader.GetAttribute(&quot;date&quot;))\n             Console.WriteLine(&quot;order date: {0}&quot;, orderDate.ToString())\n           case &quot;price&quot;:\n             Dim price as Double = XmlConvert.ToDouble(reader.ReadInnerXml())\n             Console.WriteLine(&quot;price: {0}&quot;, price.ToString())\n         end select\n       end if\n    end while\n\n    &#39;Close the reader.\n    reader.Close()  \n  end sub\nend class\n</code></pre><p> The example uses the file, <code>orderData.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlConvert.ToDouble#2\">&lt;order date=&quot;2001-05-03&quot;&gt;\n  &lt;orderID&gt;367A54&lt;/orderID&gt;\n  &lt;custID&gt;32632&lt;/custID&gt;\n  &lt;price&gt;19.95&lt;/price&gt;\n&lt;/order&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTime_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTime(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ToDateTime (string s, string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format structure to apply to the converted <code>DateTime</code>. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets. The string is validated against this format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <code>DateTime</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> or <code>format</code> is String.Empty  </p>\n<p> -or-  </p>\n<p> <code>s</code> does not contain a date and time that corresponds to <code>format</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTime_System_String_System_String___\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTime(String,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ToDateTime (string s, string[] formats);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formats</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array containing the format structures to apply to the converted <code>DateTime</code>. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <code>DateTime</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> or an element of <code>formats</code> is String.Empty  </p>\n<p> -or-  </p>\n<p> <code>s</code> does not contain a date and time that corresponds to any of the elements of <code>formats</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows multiple formats for the string to be validated against.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTime_System_String_System_Xml_XmlDateTimeSerializationMode_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTime_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTime(String,XmlDateTimeSerializationMode)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> using the <a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a> specified</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime ToDateTime (string s, System.Xml.XmlDateTimeSerializationMode dateTimeOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a> values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent of the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.nullreferenceexception\" data-linktype=\"relative-path\">NullReferenceException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>dateTimeOption</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is an empty string or is not in a valid format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTimeOffset_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTimeOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTimeOffset(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ToDateTimeOffset (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.  </p>\n<p> <strong>Note</strong> The string must conform to a subset of the W3C Recommendation for the XML dateTime type. For more information see <a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#dateTime</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent of the supplied string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The argument passed to this method is outside the range of allowable values. For information about allowable values, see <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type. For more information see <a href=\"http://go.microsoft.com/fwlink/?LinkId=97914\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#dateTime</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When more than seven digits are specified for fractional seconds, the value is rounded. For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to read a string from an XML file and use the ToDateTimeOffset method to convert the string to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> type.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert_ToDateTimeOffset_ex1#1\">using System;\nusing System.Xml;\n\nclass Example\n{\n    static void Main()\n    {\n        // Create an XmlReader, read to the &quot;time&quot; element, and read contents as type string\n        XmlReader reader = XmlReader.Create(&quot;transactions.xml&quot;);\n        reader.ReadToFollowing(&quot;time&quot;);\n        string time = reader.ReadElementContentAsString();\n\n        // Read the element contents as a string and covert to DateTimeOffset type\n        // The format of time must be a subset of the W3C Recommendation for the XML dateTime type\n        DateTimeOffset transaction_time = XmlConvert.ToDateTimeOffset(time);\n        Console.WriteLine(transaction_time);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert_ToDateTimeOffset_ex1#1\">Imports System\nImports System.Xml\n\nModule Module1\n    Sub Main()\n        &#39; Create an XmlReader, read to the &quot;time&quot; element, and read contents as type string\n        Dim reader As XmlReader = XmlReader.Create(&quot;transactions.xml&quot;)\n        reader.ReadToFollowing(&quot;time&quot;)\n        Dim time As String = reader.ReadElementContentAsString()\n\n        &#39; Read the element contents as a string and covert to DateTimeOffset type\n\t&#39; The format of time must be a subset of the W3C Recommendation for the XML dateTime type\n        Dim transaction_time As DateTimeOffset = XmlConvert.ToDateTimeOffset(time)\n        Console.WriteLine(transaction_time)\n    End Sub &#39;Main\nEnd Module\n</code></pre><p> The example uses the transactions.xml file.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;  \n&lt;transactions&gt;  \n   &lt;transaction&gt;  \n      &lt;id&gt;123456789&lt;/id&gt;  \n      &lt;amount&gt;1.00&lt;/amount&gt;  \n      &lt;currency&gt;USD&lt;/currency&gt;  \n      &lt;time&gt;2007-08-03T22:05:13-07:00&lt;/time&gt;  \n   &lt;/transaction&gt;  \n&lt;/transactions&gt;  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTimeOffset_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTimeOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTimeOffset(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ToDateTimeOffset (string s, string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format from which <code>s</code> is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information see <a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#dateTime</a>.) The string <code>s</code> is validated against this format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent of the supplied string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> or <code>format</code> is an empty string or is not in the specified format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.  </p>\n<p> When more than seven digits are specified for fractional seconds, the value is rounded. For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to read a string from an XML file and use the ToDateTimeOffset method to convert the string to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> type. The input string is validated against the specified format before being converted.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlConvert_ToDateTimeOffset_ex2#1\">Imports System\nImports System.Xml\n\nModule Module1      \n    Sub Main()\n        &#39; Create an XmlReader, read to the &quot;time&quot; element, and read contents as type string\n        Dim reader As XmlReader = XmlReader.Create(&quot;transactions.xml&quot;)\n        reader.ReadToFollowing(&quot;time&quot;)\n        Dim time As String = reader.ReadElementContentAsString()\n\n        &#39; Specify a format against which time will be validated before conversion to DateTimeOffset\n        &#39; If time does not match the format, a FormatException will be thrown.\n        &#39; The specified format must be a subset of the W3C Recommendation for the XML dateTime type\n        Dim format As String = &quot;yyyy-MM-ddTHH:mm:sszzzzzzz&quot;\n        Try\n            &#39; Read the element contents as a string and covert to DateTimeOffset type\n            Dim transaction_time As DateTimeOffset = XmlConvert.ToDateTimeOffset(time, format)\n            Console.WriteLine(transaction_time)\n        Catch e As Exception\n            Console.WriteLine(e)\n        End Try\n    End Sub &#39;Main\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlConvert_ToDateTimeOffset_ex2#1\">using System;\nusing System.Xml;\n\nclass Example\n{\n    static void Main()\n    {\n        // Create an XmlReader, read to the &quot;time&quot; element, and read contents as type string\n        XmlReader reader = XmlReader.Create(&quot;transactions.xml&quot;);\n        reader.ReadToFollowing(&quot;time&quot;);\n        string time = reader.ReadElementContentAsString();\n\n        // Specify a format against which time will be validated before conversion to DateTimeOffset\n        // If time does not match the format, a FormatException will be thrown.\n        // The specified format must be a subset of the W3C Recommendation for the XML dateTime type\n        string format = &quot;yyyy-MM-ddTHH:mm:sszzzzzzz&quot;;\n        try\n        {\n            // Read the element contents as a string and covert to DateTimeOffset type\n            DateTimeOffset transaction_time = XmlConvert.ToDateTimeOffset(time, format);\n            Console.WriteLine(transaction_time);\n        }\n        catch(Exception e)\n        {\n            Console.WriteLine(e);\n        }\n    }\n}\n</code></pre><p> The example uses the transactions.xml file.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;  \n&lt;transactions&gt;  \n   &lt;transaction&gt;  \n      &lt;id&gt;123456789&lt;/id&gt;  \n      &lt;amount&gt;1.00&lt;/amount&gt;  \n      &lt;currency&gt;USD&lt;/currency&gt;  \n      &lt;time&gt;2007-08-03T22:05:13-07:00&lt;/time&gt;  \n   &lt;/transaction&gt;  \n&lt;/transactions&gt;  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDateTimeOffset_System_String_System_String___\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDateTimeOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDateTimeOffset(String,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTimeOffset ToDateTimeOffset (string s, string[] formats);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>formats</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of formats from which <code>s</code> can be converted. Each format in <code>formats</code> can be any subset of the W3C Recommendation for the XML dateTime type. (For more information see <a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#dateTime</a>.) The string <code>s</code> is validated against one of these formats.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> equivalent of the supplied string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.  </p>\n<p> When more than seven digits are specified for fractional seconds, the value is rounded. For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to read a string from an XML file and use the ToDateTimeOffset method to convert the string to a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> type. The input string must validate against one of the specified formats before being converted.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert_ToDateTimeOffset_ex3#1\">using System;\nusing System.Xml;\n\nclass Example\n{\n    static void Main()\n    {\n        // Create an XmlReader, read to the &quot;time&quot; element, and read contents as type string\n        XmlReader reader = XmlReader.Create(&quot;transactions.xml&quot;);\n        reader.ReadToFollowing(&quot;time&quot;);\n        string time = reader.ReadElementContentAsString();\n\n        // Specify formats against which time will be validated before conversion to DateTimeOffset\n        // If time does not match one of the specified formats, a FormatException will be thrown.\n        // Each specified format must be a subset of the W3C Recommendation for the XML dateTime type\n        string[] formats = {&quot;yyyy-MM-ddTHH:mm:sszzzzzzz&quot;, &quot;yyyy-MM-ddTHH:mm:ss&quot;, &quot;yyyy-MM-dd&quot;};\n        try\n        {\n            // Read the element contents as a string and covert to DateTimeOffset type\n            DateTimeOffset transaction_time = XmlConvert.ToDateTimeOffset(time, formats);\n            Console.WriteLine(transaction_time);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert_ToDateTimeOffset_ex3#1\">Imports System\nImports System.Xml\n\nModule Module1\n    Sub Main()\n        &#39; Create an XmlReader, read to the &quot;time&quot; element, and read contents as type string\n        Dim reader As XmlReader = XmlReader.Create(&quot;transactions.xml&quot;)\n        reader.ReadToFollowing(&quot;time&quot;)\n        Dim time As String = reader.ReadElementContentAsString()\n\n        &#39; Specify formats against which time will be validated before conversion to DateTimeOffset\n        &#39; If time does not match one of the specified formats, a FormatException will be thrown.\n        &#39; Each specified format must be a subset of the W3C Recommendation for the XML dateTime type\n        Dim formats As String() = {&quot;yyyy-MM-ddTHH:mm:sszzzzzzz&quot;, &quot;yyyy-MM-ddTHH:mm:ss&quot;, &quot;yyyy-MM-dd&quot;}\n        Try\n            &#39; Read the element contents as a string and covert to DateTimeOffset type\n            Dim transaction_time As DateTimeOffset = XmlConvert.ToDateTimeOffset(time, formats)\n            Console.WriteLine(transaction_time)\n        Catch e As Exception\n            Console.WriteLine(e)\n        End Try\n    End Sub\nEnd Module\n</code></pre><p> The example uses the transactions.xml file.  </p>\n<pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;  \n&lt;transactions&gt;  \n   &lt;transaction&gt;  \n      &lt;id&gt;123456789&lt;/id&gt;  \n      &lt;amount&gt;1.00&lt;/amount&gt;  \n      &lt;currency&gt;USD&lt;/currency&gt;  \n      &lt;time&gt;2007-08-03T22:05:13-07:00&lt;/time&gt;  \n   &lt;/transaction&gt;  \n&lt;/transactions&gt;  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDecimal_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDecimal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDecimal(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static decimal ToDecimal (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </div>\r\n                  <p>A <code>Decimal</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> or greater than <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToDouble_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToDouble_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToDouble(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double ToDouble (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>A <code>Double</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> or greater than <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>s</code> is INF or -INF, this method returns Double.PositiveInfinity or Double.NegativeInfinity respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <code>ToDouble</code> and <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_ToDateTime_\" data-linktype=\"relative-path\">ToDateTime</a> to read strongly typed data.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert.ToDouble#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n\n  public static void Main()\n  {\n    XmlTextReader reader = new XmlTextReader(&quot;orderData.xml&quot;);\n\n    //Parse the file and pull out the order date and price.\n    while (reader.Read()){\n       if (reader.NodeType==XmlNodeType.Element){\n         switch(reader.Name){\n           case &quot;order&quot;:\n             DateTime orderDate = XmlConvert.ToDateTime(reader.GetAttribute(&quot;date&quot;));\n             Console.WriteLine(&quot;order date: {0}&quot;, orderDate.ToString());\n             break;\n           case &quot;price&quot;:\n             Double price = XmlConvert.ToDouble(reader.ReadInnerXml());\n             Console.WriteLine(&quot;price: {0}&quot;, price.ToString());\n             break;\n         }\n       }\n    }\n\n    //Close the reader.\n    reader.Close();  \n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlConvert.ToDouble#1\">#using &lt;System.dll&gt;\n#using &lt;System.xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlTextReader^ reader = gcnew XmlTextReader( &quot;orderData.xml&quot; );\n   \n   //Parse the file and pull out the order date and price.\n   while ( reader-&gt;Read() )\n   {\n      if ( reader-&gt;NodeType == XmlNodeType::Element )\n      {\n         if ( reader-&gt;Name-&gt;Equals( &quot;order&quot; ) )\n         {\n            DateTime orderDate = XmlConvert::ToDateTime( reader-&gt;GetAttribute( &quot;date&quot; ) );\n            Console::WriteLine( &quot;order date: {0}&quot;, orderDate.ToString() );\n         }\n         else\n         if ( reader-&gt;Name-&gt;Equals( &quot;price&quot; ) )\n         {\n            Double price = XmlConvert::ToDouble( reader-&gt;ReadInnerXml() );\n            Console::WriteLine( &quot;price: {0}&quot;, price );\n         }\n      }\n   }\n\n   \n   //Close the reader.\n   reader-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert.ToDouble#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n  \n    Dim reader as XmlTextReader = new XmlTextReader(&quot;orderData.xml&quot;)\n\n    &#39;Parse the file and pull out the order date and price.\n    while (reader.Read())\n       if (reader.NodeType=XmlNodeType.Element)\n         select case reader.Name\n           case &quot;order&quot;:\n             Dim orderDate as DateTime = XmlConvert.ToDateTime(reader.GetAttribute(&quot;date&quot;))\n             Console.WriteLine(&quot;order date: {0}&quot;, orderDate.ToString())\n           case &quot;price&quot;:\n             Dim price as Double = XmlConvert.ToDouble(reader.ReadInnerXml())\n             Console.WriteLine(&quot;price: {0}&quot;, price.ToString())\n         end select\n       end if\n    end while\n\n    &#39;Close the reader.\n    reader.Close()  \n  end sub\nend class\n</code></pre><p> The example uses the file, <code>orderData.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlConvert.ToDouble#2\">&lt;order date=&quot;2001-05-03&quot;&gt;\n  &lt;orderID&gt;367A54&lt;/orderID&gt;\n  &lt;custID&gt;32632&lt;/custID&gt;\n  &lt;price&gt;19.95&lt;/price&gt;\n&lt;/order&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToGuid_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToGuid_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToGuid(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static Guid ToGuid (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </div>\r\n                  <p>A <code>Guid</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToInt16_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToInt16(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static short ToInt16 (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </div>\r\n                  <p>An <code>Int16</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> or greater than <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToInt32_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToInt32(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int ToInt32 (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <code>Int32</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> or greater than <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToInt64_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToInt64(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static long ToInt64 (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>An <code>Int64</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> or greater than <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToSByte_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToSByte_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToSByte(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static sbyte ToSByte (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></div>\r\n                  </div>\r\n                  <p>An <code>SByte</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a> or greater than <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToSingle_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToSingle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToSingle(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static float ToSingle (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>A <code>Single</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> or greater than <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>s</code> is INF or -INF, this method returns Single.PositiveInfinity or Single.NegativeInfinity respectively.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Boolean</code>, that is, &quot;true&quot; or &quot;false&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Byte_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Byte)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (byte value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Byte</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (char value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Char</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_DateTime_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (DateTime value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>DateTime</code> in the format yyyy-MM-ddTHH:mm:ss where &#39;T&#39; is a constant literal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> The ToString method is obsolete in the 2.0 version of the .NET Framework and has been replaced with the <a class=\"xref\" href=\"system.xml.xmlconvert#System_Xml_XmlConvert_ToString_System_DateTime_System_Xml_XmlDateTimeSerializationMode_\" data-linktype=\"relative-path\">System.Xml.XmlConvert.ToString(DateTime,XmlDateTimeSerializationMode)</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (DateTimeOffset value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to be converted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation of the supplied <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> representation of the current time to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert_ToString_DTO#1\">using System;\nusing System.Xml;\n\nclass Example\n{\n    static void Main()\n    {\n        // Create the DateTimeOffset object and set the time to the current time\n        DateTimeOffset dto;\n        dto = DateTimeOffset.Now;\n\n        // Convert the DateTimeOffset object to a string and display the result\n        string timeAsString = XmlConvert.ToString(dto);\n        Console.WriteLine(timeAsString);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert_ToString_DTO#1\">Imports System\nImports System.Xml\n\nModule Module1\n    Sub Main()\n\n        &#39; Create the DateTimeOffset object and set the time to the current time\n        Dim dto As DateTimeOffset\n        dto = DateTimeOffset.Now\n\n        &#39; Convert the DateTimeOffset object to a string and display the result\n        Dim timeAsString As String = XmlConvert.ToString(dto)\n        Console.WriteLine(timeAsString)\n\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Decimal_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Decimal)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (decimal value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Decimal</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Double_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Double</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>value</code> is Double.PositiveInfinity or Double.NegativeInfinity, this method returns the string INF or -INF respectively.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example, converts data types to string and then writes the information out to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlConvert.ToString Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n\n    //Define the order data.  They will be converted to string \n    //before being written out.\n    Int16 custID = 32632;\n    String orderID = &quot;367A54&quot;;\n    DateTime orderDate = new DateTime();\n    orderDate = DateTime.Now;\n    Double price = 19.95;\n\n    //Create a writer that outputs to the console.\n    XmlTextWriter writer = new XmlTextWriter (Console.Out);\n    writer.Formatting = Formatting.Indented;\n\n    //Write an element (this one is the root)\n    writer.WriteStartElement(&quot;order&quot;);\n\n    //Write the order date.\n    writer.WriteAttributeString(&quot;date&quot;, XmlConvert.ToString(orderDate, &quot;yyyy-MM-dd&quot;));\n\n    //Write the order time.\n    writer.WriteAttributeString(&quot;time&quot;, XmlConvert.ToString(orderDate, &quot;HH:mm:ss&quot;));\n    \n    //Write the order data.\n    writer.WriteElementString(&quot;orderID&quot;, orderID);\n    writer.WriteElementString(&quot;custID&quot;, XmlConvert.ToString(custID));\n    writer.WriteElementString(&quot;price&quot;, XmlConvert.ToString(price));\n\n    //Write the close tag for the root element\n    writer.WriteEndElement();\n             \n    //Write the XML and close the writer\n    writer.Close();  \n\n  }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlConvert.ToString Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   //Define the order data.  They will be converted to string \n   //before being written out.\n   Int16 custID = 32632;\n   String^ orderID = &quot;367A54&quot;;\n   DateTime orderDate = DateTime::Now;\n   Double price = 19.95;\n   \n   //Create a writer that outputs to the console.\n   XmlTextWriter^ writer = gcnew XmlTextWriter( Console::Out );\n   writer-&gt;Formatting = Formatting::Indented;\n   \n   //Write an element (this one is the root)\n   writer-&gt;WriteStartElement( &quot;order&quot; );\n   \n   //Write the order date.\n   writer-&gt;WriteAttributeString( &quot;date&quot;, XmlConvert::ToString( orderDate, &quot;yyyy-MM-dd&quot; ) );\n   \n   //Write the order time.\n   writer-&gt;WriteAttributeString( &quot;time&quot;, XmlConvert::ToString( orderDate, &quot;HH:mm:ss&quot; ) );\n   \n   //Write the order data.\n   writer-&gt;WriteElementString( &quot;orderID&quot;, orderID );\n   writer-&gt;WriteElementString( &quot;custID&quot;, XmlConvert::ToString( custID ) );\n   writer-&gt;WriteElementString( &quot;price&quot;, XmlConvert::ToString( price ) );\n   \n   //Write the close tag for the root element\n   writer-&gt;WriteEndElement();\n   \n   //Write the XML and close the writer\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlConvert.ToString Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    &#39;Define the order data.  They will be converted to string\n    &#39;before being written out.\n    Dim custID as Int16 = 32632\n    Dim orderID as String = &quot;367A54&quot;\n    Dim orderDate as DateTime \n    orderDate = DateTime.Now\n    Dim price as Double = 19.95\n\n    &#39;Create a writer that outputs to the console.\n    Dim writer as XmlTextWriter = new XmlTextWriter (Console.Out)\n    &#39;Use indenting for readability\n    writer.Formatting = Formatting.Indented\n    \n    &#39;Write an element (this one is the root)\n    writer.WriteStartElement(&quot;order&quot;)\n\n    &#39;Write the order date.\n    writer.WriteAttributeString(&quot;date&quot;, XmlConvert.ToString(orderDate, &quot;yyyy-MM-dd&quot;))\n\n    &#39;Write the order time.\n    writer.WriteAttributeString(&quot;time&quot;, XmlConvert.ToString(orderDate, &quot;HH:mm:ss&quot;))\n    \n    &#39;Write the order data.\n    writer.WriteElementString(&quot;orderID&quot;, orderID)\n    writer.WriteElementString(&quot;custID&quot;, XmlConvert.ToString(custID))\n    writer.WriteElementString(&quot;price&quot;, XmlConvert.ToString(price))\n\n    &#39;Write the close tag for the root element\n    writer.WriteEndElement()\n             \n\n    &#39;Write the XML and close the writer\n    writer.Flush()\n    writer.Close()  \n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Guid_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Guid)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (Guid value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Guid</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Int16_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Int16)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (short value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Int16</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example, converts data types to string and then writes the information out to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlConvert.ToString Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n\n    //Define the order data.  They will be converted to string \n    //before being written out.\n    Int16 custID = 32632;\n    String orderID = &quot;367A54&quot;;\n    DateTime orderDate = new DateTime();\n    orderDate = DateTime.Now;\n    Double price = 19.95;\n\n    //Create a writer that outputs to the console.\n    XmlTextWriter writer = new XmlTextWriter (Console.Out);\n    writer.Formatting = Formatting.Indented;\n\n    //Write an element (this one is the root)\n    writer.WriteStartElement(&quot;order&quot;);\n\n    //Write the order date.\n    writer.WriteAttributeString(&quot;date&quot;, XmlConvert.ToString(orderDate, &quot;yyyy-MM-dd&quot;));\n\n    //Write the order time.\n    writer.WriteAttributeString(&quot;time&quot;, XmlConvert.ToString(orderDate, &quot;HH:mm:ss&quot;));\n    \n    //Write the order data.\n    writer.WriteElementString(&quot;orderID&quot;, orderID);\n    writer.WriteElementString(&quot;custID&quot;, XmlConvert.ToString(custID));\n    writer.WriteElementString(&quot;price&quot;, XmlConvert.ToString(price));\n\n    //Write the close tag for the root element\n    writer.WriteEndElement();\n             \n    //Write the XML and close the writer\n    writer.Close();  \n\n  }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlConvert.ToString Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   //Define the order data.  They will be converted to string \n   //before being written out.\n   Int16 custID = 32632;\n   String^ orderID = &quot;367A54&quot;;\n   DateTime orderDate = DateTime::Now;\n   Double price = 19.95;\n   \n   //Create a writer that outputs to the console.\n   XmlTextWriter^ writer = gcnew XmlTextWriter( Console::Out );\n   writer-&gt;Formatting = Formatting::Indented;\n   \n   //Write an element (this one is the root)\n   writer-&gt;WriteStartElement( &quot;order&quot; );\n   \n   //Write the order date.\n   writer-&gt;WriteAttributeString( &quot;date&quot;, XmlConvert::ToString( orderDate, &quot;yyyy-MM-dd&quot; ) );\n   \n   //Write the order time.\n   writer-&gt;WriteAttributeString( &quot;time&quot;, XmlConvert::ToString( orderDate, &quot;HH:mm:ss&quot; ) );\n   \n   //Write the order data.\n   writer-&gt;WriteElementString( &quot;orderID&quot;, orderID );\n   writer-&gt;WriteElementString( &quot;custID&quot;, XmlConvert::ToString( custID ) );\n   writer-&gt;WriteElementString( &quot;price&quot;, XmlConvert::ToString( price ) );\n   \n   //Write the close tag for the root element\n   writer-&gt;WriteEndElement();\n   \n   //Write the XML and close the writer\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlConvert.ToString Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    &#39;Define the order data.  They will be converted to string\n    &#39;before being written out.\n    Dim custID as Int16 = 32632\n    Dim orderID as String = &quot;367A54&quot;\n    Dim orderDate as DateTime \n    orderDate = DateTime.Now\n    Dim price as Double = 19.95\n\n    &#39;Create a writer that outputs to the console.\n    Dim writer as XmlTextWriter = new XmlTextWriter (Console.Out)\n    &#39;Use indenting for readability\n    writer.Formatting = Formatting.Indented\n    \n    &#39;Write an element (this one is the root)\n    writer.WriteStartElement(&quot;order&quot;)\n\n    &#39;Write the order date.\n    writer.WriteAttributeString(&quot;date&quot;, XmlConvert.ToString(orderDate, &quot;yyyy-MM-dd&quot;))\n\n    &#39;Write the order time.\n    writer.WriteAttributeString(&quot;time&quot;, XmlConvert.ToString(orderDate, &quot;HH:mm:ss&quot;))\n    \n    &#39;Write the order data.\n    writer.WriteElementString(&quot;orderID&quot;, orderID)\n    writer.WriteElementString(&quot;custID&quot;, XmlConvert.ToString(custID))\n    writer.WriteElementString(&quot;price&quot;, XmlConvert.ToString(price))\n\n    &#39;Write the close tag for the root element\n    writer.WriteEndElement()\n             \n\n    &#39;Write the XML and close the writer\n    writer.Flush()\n    writer.Close()  \n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Int32</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Int64_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Int64</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_SByte_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(SByte)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (sbyte value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>SByte</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_Single_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>Single</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>value</code> is Single.PositiveInfinity or Single.NegativeInfinity, this method returns the string INF or -INF respectively.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (TimeSpan value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>TimeSpan</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_UInt16_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(UInt16)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (ushort value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>UInt16</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_UInt32_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(UInt32)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (uint value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>UInt32</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_UInt64_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(UInt64)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (ulong value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>UInt64</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_DateTime_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(DateTime,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (DateTime value, string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format structure that defines how to display the converted string. Valid formats include &quot;yyyy-MM-ddTHH:mm:sszzzzzz&quot; and its subsets.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <code>DateTime</code> in the specified format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example, converts data types to string and then writes the information out to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlConvert.ToString Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n\n    //Define the order data.  They will be converted to string \n    //before being written out.\n    Int16 custID = 32632;\n    String orderID = &quot;367A54&quot;;\n    DateTime orderDate = new DateTime();\n    orderDate = DateTime.Now;\n    Double price = 19.95;\n\n    //Create a writer that outputs to the console.\n    XmlTextWriter writer = new XmlTextWriter (Console.Out);\n    writer.Formatting = Formatting.Indented;\n\n    //Write an element (this one is the root)\n    writer.WriteStartElement(&quot;order&quot;);\n\n    //Write the order date.\n    writer.WriteAttributeString(&quot;date&quot;, XmlConvert.ToString(orderDate, &quot;yyyy-MM-dd&quot;));\n\n    //Write the order time.\n    writer.WriteAttributeString(&quot;time&quot;, XmlConvert.ToString(orderDate, &quot;HH:mm:ss&quot;));\n    \n    //Write the order data.\n    writer.WriteElementString(&quot;orderID&quot;, orderID);\n    writer.WriteElementString(&quot;custID&quot;, XmlConvert.ToString(custID));\n    writer.WriteElementString(&quot;price&quot;, XmlConvert.ToString(price));\n\n    //Write the close tag for the root element\n    writer.WriteEndElement();\n             \n    //Write the XML and close the writer\n    writer.Close();  \n\n  }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlConvert.ToString Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   //Define the order data.  They will be converted to string \n   //before being written out.\n   Int16 custID = 32632;\n   String^ orderID = &quot;367A54&quot;;\n   DateTime orderDate = DateTime::Now;\n   Double price = 19.95;\n   \n   //Create a writer that outputs to the console.\n   XmlTextWriter^ writer = gcnew XmlTextWriter( Console::Out );\n   writer-&gt;Formatting = Formatting::Indented;\n   \n   //Write an element (this one is the root)\n   writer-&gt;WriteStartElement( &quot;order&quot; );\n   \n   //Write the order date.\n   writer-&gt;WriteAttributeString( &quot;date&quot;, XmlConvert::ToString( orderDate, &quot;yyyy-MM-dd&quot; ) );\n   \n   //Write the order time.\n   writer-&gt;WriteAttributeString( &quot;time&quot;, XmlConvert::ToString( orderDate, &quot;HH:mm:ss&quot; ) );\n   \n   //Write the order data.\n   writer-&gt;WriteElementString( &quot;orderID&quot;, orderID );\n   writer-&gt;WriteElementString( &quot;custID&quot;, XmlConvert::ToString( custID ) );\n   writer-&gt;WriteElementString( &quot;price&quot;, XmlConvert::ToString( price ) );\n   \n   //Write the close tag for the root element\n   writer-&gt;WriteEndElement();\n   \n   //Write the XML and close the writer\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlConvert.ToString Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    &#39;Define the order data.  They will be converted to string\n    &#39;before being written out.\n    Dim custID as Int16 = 32632\n    Dim orderID as String = &quot;367A54&quot;\n    Dim orderDate as DateTime \n    orderDate = DateTime.Now\n    Dim price as Double = 19.95\n\n    &#39;Create a writer that outputs to the console.\n    Dim writer as XmlTextWriter = new XmlTextWriter (Console.Out)\n    &#39;Use indenting for readability\n    writer.Formatting = Formatting.Indented\n    \n    &#39;Write an element (this one is the root)\n    writer.WriteStartElement(&quot;order&quot;)\n\n    &#39;Write the order date.\n    writer.WriteAttributeString(&quot;date&quot;, XmlConvert.ToString(orderDate, &quot;yyyy-MM-dd&quot;))\n\n    &#39;Write the order time.\n    writer.WriteAttributeString(&quot;time&quot;, XmlConvert.ToString(orderDate, &quot;HH:mm:ss&quot;))\n    \n    &#39;Write the order data.\n    writer.WriteElementString(&quot;orderID&quot;, orderID)\n    writer.WriteElementString(&quot;custID&quot;, XmlConvert.ToString(custID))\n    writer.WriteElementString(&quot;price&quot;, XmlConvert.ToString(price))\n\n    &#39;Write the close tag for the root element\n    writer.WriteEndElement()\n             \n\n    &#39;Write the XML and close the writer\n    writer.Flush()\n    writer.Close()  \n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_DateTime_System_Xml_XmlDateTimeSerializationMode_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(DateTime,XmlDateTimeSerializationMode)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> using the <a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a> specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (DateTime value, System.Xml.XmlDateTimeSerializationMode dateTimeOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dateTimeOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.xml.xmldatetimeserializationmode\" data-linktype=\"relative-path\">XmlDateTimeSerializationMode</a> values that specify how to treat the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> equivalent of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>dateTimeOption</code> value is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>value</code> or <code>dateTimeOption</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToString_System_DateTimeOffset_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString(DateTimeOffset,String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the supplied <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> in the specified format.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ToString (DateTimeOffset value, string format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> to be converted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The format to which <code>s</code> is converted. The format parameter can be any subset of the W3C Recommendation for the XML dateTime type. (For more information see <a href=\"http://www.w3.org/TR/xmlschema-2/#dateTime\" data-linktype=\"external\">http://www.w3.org/TR/xmlschema-2/#dateTime</a>.)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representation in the specified format of the supplied <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> representation of the current time to a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> in the specified format.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert_ToString_DTO_Format#1\">using System;\nusing System.Xml;\n\nclass Example\n{\n    static void Main()\n    {\n        // Create the DateTimeOffset object and set the time to the current time.\n        DateTimeOffset dto;\n        dto = DateTimeOffset.Now;\n\n        // Convert the DateTimeObject to a string in a specified format and display the result.\n        // The specified format must be a subset of the W3C Recommendation for the XML dateTime type.\n        String timeAsString = XmlConvert.ToString(dto, &quot;yyyy-MM-ddTHH:mm:sszzzzzzz&quot;);\n        Console.WriteLine(timeAsString);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert_ToString_DTO_Format#1\">Imports System\nImports System.Xml\n\nModule Module1\n    Sub Main()\n\n        &#39; Create the DateTimeOffset object and set the time to the current time.\n        Dim dto As DateTimeOffset\n        dto = DateTimeOffset.Now\n\n        &#39; Convert the DateTimeObject to a string in a specified format and display the result.\n        &#39; The specified format must be a subset of the W3C Recommendation for the XML dateTime type.\n        Dim timeAsString As [String] = XmlConvert.ToString(dto, &quot;yyyy-MM-ddTHH:mm:sszzzzzzz&quot;)\n        Console.WriteLine(timeAsString)\n\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToTimeSpan_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToTimeSpan_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToTimeSpan(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static TimeSpan ToTimeSpan (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert. The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>A <code>TimeSpan</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in correct format to represent a <code>TimeSpan</code> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToUInt16_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToUInt16_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUInt16(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static ushort ToUInt16 (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></div>\r\n                  </div>\r\n                  <p>A <code>UInt16</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a> or greater than <a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToUInt32_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToUInt32_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUInt32(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static uint ToUInt32 (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></div>\r\n                  </div>\r\n                  <p>A <code>UInt32</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a> or greater than <a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_ToUInt64_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_ToUInt64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToUInt64(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to a <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static ulong ToUInt64 (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></div>\r\n                  </div>\r\n                  <p>A <code>UInt64</code> equivalent of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> is not in the correct format.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></div>\r\n                  </div>\r\n                  <p><code>s</code> represents a number less than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a> or greater than <a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name, if it is a valid XML name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is not a valid XML name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code> or String.Empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used with the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class in the following manner.  </p>\n<pre><code>try{  \n  writer.WriteStartElement(XmlConvert.VerifyName(&quot;item&quot;),&quot;bar&quot;);  \n}  \ncatch(Exception e)  \n{  \n  Console.WriteLine(&quot;error&quot;);  \n}  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>VerifyName</code> method to write an element name.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlConvert.VerifyName#1\">using System;\nusing System.Xml;\n\npublic class Sample{\n\n  public static void Main(){\n     XmlTextWriter writer = new XmlTextWriter (&quot;out.xml&quot;, null);\n     string tag = &quot;item name&quot;;\n   \n  try{\n\t\n     // Write the root element.\n     writer.WriteStartElement(&quot;root&quot;);\n\n     writer.WriteStartElement(XmlConvert.VerifyName(tag));\n             \n     }\n     catch (XmlException e){\n        Console.WriteLine(e.Message);\n        Console.WriteLine(&quot;Convert to a valid name...&quot;);\n        writer.WriteStartElement(XmlConvert.EncodeName(tag));\n     }\n\n     writer.WriteString(&quot;hammer&quot;);\n     writer.WriteEndElement();\n\n     // Write the end tag for the root element.\n     writer.WriteEndElement();\n \n     writer.Close();\n \n  }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlConvert.VerifyName#1\">#using &lt;System.dll&gt;\n#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::Xml;\nint main()\n{\n   XmlTextWriter^ writer = gcnew XmlTextWriter( &quot;out.xml&quot;, nullptr );\n   String^ tag = &quot;item name&quot;;\n   try\n   {\n      \n      // Write the root element.\n      writer-&gt;WriteStartElement( &quot;root&quot; );\n      writer-&gt;WriteStartElement( XmlConvert::VerifyName( tag ) );\n   }\n   catch ( XmlException^ e ) \n   {\n      Console::WriteLine( e-&gt;Message );\n      Console::WriteLine( &quot;Convert to a valid name...&quot; );\n      writer-&gt;WriteStartElement( XmlConvert::EncodeName( tag ) );\n   }\n\n   writer-&gt;WriteString( &quot;hammer&quot; );\n   writer-&gt;WriteEndElement();\n   \n   // Write the end tag for the root element.\n   writer-&gt;WriteEndElement();\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlConvert.VerifyName#1\">Imports System\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n     Dim writer as XmlTextWriter = new XmlTextWriter (&quot;out.xml&quot;, nothing)\n     Dim tag as string = &quot;item name&quot;\n   \n    try\n\t\n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;root&quot;)\n\n     writer.WriteStartElement(XmlConvert.VerifyName(tag))\n\n     catch e as XmlException\n        Console.WriteLine(e.Message)\n        Console.WriteLine(&quot;Convert to a valid name...&quot;)\n        writer.WriteStartElement(XmlConvert.EncodeName(tag))\n     end try\n\n     writer.WriteString(&quot;hammer&quot;)\n     writer.WriteEndElement()\n\n     &#39; Write the end tag for the root element.\n     writer.WriteEndElement()\n \n     writer.Close()\n  \n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyNCName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyNCName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyNCName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies that the name is a valid <code>NCName</code> according to the W3C Extended Markup Language recommendation. An <code>NCName</code> is a name that cannot contain a colon.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyNCName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name, if it is a valid NCName.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code> or <code>String.Empty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is not a valid non-colon name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyNMTOKEN_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyNMTOKEN_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyNMTOKEN(String)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyNMTOKEN (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string you wish to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name token, if it is a valid NMTOKEN.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The string is not a valid name token.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method ensures that the name token follows the proper syntax for a valid NMTOKEN. It can be used in the following manner:  </p>\n<pre><code>try {  \n  writer.WriteStartElement(XmlConvert.VerifyNMTOKEN(&quot;abc&quot;),&quot;book&quot;);  \n}  \ncatch(Exception e) {  \n  Console.WriteLine(&quot;error&quot;);  \n}  \n</code></pre><p> For more information on the NMTOKEN data type, see <a href=\"http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyPublicId_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyPublicId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyPublicId(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the passed in string instance if all the characters in the string argument are valid public id characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyPublicId (string publicId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>publicId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the id to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the passed-in string if all the characters in the argument are valid public id characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>No other values than the passed in argument should be returned. The characters valid for public id do not vary between XML editions, so no <code>XmlVersion</code> overload is required.  </p>\n<p> See <a href=\"http://go.microsoft.com/fwlink/?LinkID=147985\" data-linktype=\"external\">XML 1.0 spec (fourth edition)</a> production [13] <code>PublidChar</code> for details on the allowed characters  </p>\n<p> If the parameter is null, an <code>ArgumentNullException</code> will be thrown. If any of the characters are not valid public id characters, an <code>XmlException</code> is thrown with information about the first invalid character encountered.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyTOKEN_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyTOKEN_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyTOKEN(String)</div>        \r\n          </div>\r\n    \r\n            <p>Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyTOKEN (string token);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>token</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string value you wish to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The token, if it is a valid token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The string value is not a valid token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method ensures that the name token follows the proper syntax for a valid token. It can be used in the following manner:  </p>\n<pre><code>try {  \n  writer.WriteStartElement(XmlConvert.VerifyTOKEN(&quot;abc&quot;),&quot;book&quot;);  \n}  \ncatch(Exception e) {  \n  Console.WriteLine(&quot;error&quot;);  \n}  \n</code></pre><p> For more information on tokens, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=103183\" data-linktype=\"external\">http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyWhitespace_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyWhitespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyWhitespace(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyWhitespace (string content);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>No other values than the passed in argument should be returned. The characters that are valid for whitespace do not vary between XML editions, so no xml version overload is required.  </p>\n<p> See <a href=\"http://go.microsoft.com/fwlink/?LinkID=147985\" data-linktype=\"external\">XML 1.0 spec (fourth edition)</a> production [3] S for details on the allowed characters.  </p>\n<p> If the parameter is null, an <code>ArgumentNullException</code> will be thrown.  </p>\n<p> If any of the characters are not valid whitespace characters, an <code>XmlException</code> is thrown with information about the first invalid character encountered.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the VerifyWhitespace method to detect the presence of an invalid character in a value assigned to the start element.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlConvert.NewVerify#5\">        Dim writer5 As XmlTextWriter = New XmlTextWriter(&quot;outFile.xml&quot;, Nothing)\n        Dim illegalWhiteSpaceChar As Char = &quot;_&quot;\n\n        Try\n            &#39; Write the root element.\n            writer5.WriteStartElement(&quot;root&quot;)\n            writer5.WriteStartElement(&quot;legalElement&quot;)\n            &#39; Throw an exception due illegal white space character.\n            writer5.WriteString(&quot;ValueText&quot; + _\n                XmlConvert.VerifyWhitespace(&quot;   &quot; + illegalWhiteSpaceChar))\n\n            writer5.WriteEndElement()\n\n            &#39; Write the end tag for the root element.\n            writer5.WriteEndElement()\n\n            writer5.Close()\n\n        Catch e As XmlException\n            Console.WriteLine(e.Message)\n            writer5.Close()\n        End Try\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlConvert.NewVerify#5\">            XmlTextWriter writer5 = new XmlTextWriter(&quot;outFile.xml&quot;, null);\n            char illegalWhiteSpaceChar = &#39;_&#39;;\n\n            try\n            {\n                // Write the root element.\n                writer5.WriteStartElement(&quot;root&quot;);\n\n                writer5.WriteStartElement(&quot;legalElement&quot;);\n                // Throw an exception due illegal white space character.\n                writer5.WriteString(&quot;ValueText&quot; + \n                    XmlConvert.VerifyWhitespace(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + illegalWhiteSpaceChar));\n\n                // Write the end tag for the legal element.\n                writer5.WriteEndElement();\n                // Write the end tag for the root element.\n                writer5.WriteEndElement();\n                writer5.Close();\n\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine(e.Message);\n                writer5.Close();\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlConvert_VerifyXmlChars_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlConvert_VerifyXmlChars_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerifyXmlChars(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <code>XmlException</code> is thrown with information on the first invalid character encountered.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string VerifyXmlChars (string content);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains characters to verify.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an <code>XmlException</code> is thrown with information on the first invalid character encountered.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>No other values than the passed in argument should be returned. See <a href=\"http://go.microsoft.com/fwlink/?LinkID=147985\" data-linktype=\"external\">XML 1.0 spec (fourth edition)</a> production [2] <code>Char</code> for details on the allowed characters.  </p>\n<p> If the parameter is null, an <code>ArgumentNullException</code> will be thrown. If any of the characters are not valid xml characters, an <code>XmlException</code> is thrown with information on the first invalid character encountered.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the VerifyXmlChars method used to detect an illegal character in the start element.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlConvert.NewVerify#3\">        Dim writer3 As XmlTextWriter = New XmlTextWriter(&quot;outFile.xml&quot;, Nothing)\n        Dim illegalChar As Char = ChrW(CInt(&quot;&amp;hFFFE&quot;))\n        Dim charsToVerify As String = &quot;Test String &quot;\n\n        Try\n            &#39; Write the root element.\n            writer3.WriteStartElement(&quot;root&quot;)\n\n            &#39; Throw an exception for name that contains illegal character.\n            writer3.WriteStartElement( _\n                XmlConvert.VerifyXmlChars(charsToVerify + illegalChar))\n\n            writer3.WriteString(&quot;ValueText&quot;)\n            writer3.WriteEndElement()\n\n            &#39; Write the end tag for the root element.\n            writer3.WriteEndElement()\n\n            writer3.Close()\n\n\n        Catch e As XmlException\n\n            Console.WriteLine(e.Message)\n            writer3.Close()\n        End Try\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlConvert.NewVerify#3\">            XmlTextWriter writer3 = new XmlTextWriter(&quot;outFile.xml&quot;, null);\n            char illegalChar = &#39;\\uFFFE&#39;;\n            string charsToVerify = &quot;Test String &quot;; \n\n            try\n            {\n                // Write the root element.\n                writer3.WriteStartElement(&quot;root&quot;);\n\n                // Throw an exception due illegal character.\n                writer3.WriteStartElement(\n                    XmlConvert.VerifyXmlChars(charsToVerify + illegalChar));\n\n                writer3.WriteString(&quot;ValueText&quot;);\n                writer3.WriteEndElement();\n\n                // Write the end tag for the root element.\n                writer3.WriteEndElement();\n\n                writer3.Close();\n\n            }\n            catch (XmlException e)\n            {\n                Console.WriteLine(e.Message);\n                writer3.Close();\n            }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlConvert.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlConvert.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.DecodeName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.EncodeLocalName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.EncodeName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.EncodeNmToken\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.IsNCNameChar\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.IsPublicIdChar\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.IsStartNCNameChar\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.IsWhitespaceChar\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.IsXmlChar\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.IsXmlSurrogatePair\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToBoolean\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToByte\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToChar\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToDateTime\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToDateTimeOffset\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToDecimal\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToDouble\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToGuid\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToInt16\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToInt32\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToInt64\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToSByte\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToSingle\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToString\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToTimeSpan\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToUInt16\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToUInt32\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.ToUInt64\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyNCName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyNMTOKEN\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyPublicId\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyTOKEN\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyWhitespace\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlConvert.VerifyXmlChars\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"10982b92-2d1b-d405-80a3-d055bbdefab9\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returne…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlConvert\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlConvert.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlConvert.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlConvert","System.Xml.XmlConvert..ctor","System.Xml.XmlConvert.DecodeName","System.Xml.XmlConvert.EncodeLocalName","System.Xml.XmlConvert.EncodeName","System.Xml.XmlConvert.EncodeNmToken","System.Xml.XmlConvert.IsNCNameChar","System.Xml.XmlConvert.IsPublicIdChar","System.Xml.XmlConvert.IsStartNCNameChar","System.Xml.XmlConvert.IsWhitespaceChar","System.Xml.XmlConvert.IsXmlChar","System.Xml.XmlConvert.IsXmlSurrogatePair","System.Xml.XmlConvert.ToBoolean","System.Xml.XmlConvert.ToByte","System.Xml.XmlConvert.ToChar","System.Xml.XmlConvert.ToDateTime","System.Xml.XmlConvert.ToDateTimeOffset","System.Xml.XmlConvert.ToDecimal","System.Xml.XmlConvert.ToDouble","System.Xml.XmlConvert.ToGuid","System.Xml.XmlConvert.ToInt16","System.Xml.XmlConvert.ToInt32","System.Xml.XmlConvert.ToInt64","System.Xml.XmlConvert.ToSByte","System.Xml.XmlConvert.ToSingle","System.Xml.XmlConvert.ToString","System.Xml.XmlConvert.ToTimeSpan","System.Xml.XmlConvert.ToUInt16","System.Xml.XmlConvert.ToUInt32","System.Xml.XmlConvert.ToUInt64","System.Xml.XmlConvert.VerifyName","System.Xml.XmlConvert.VerifyNCName","System.Xml.XmlConvert.VerifyNMTOKEN","System.Xml.XmlConvert.VerifyPublicId","System.Xml.XmlConvert.VerifyTOKEN","System.Xml.XmlConvert.VerifyWhitespace","System.Xml.XmlConvert.VerifyXmlChars"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlConvert","System::Xml::XmlConvert","System.Xml.XmlConvert.#ctor","System::Xml::XmlConvert::#ctor","System.Xml.XmlConvert.DecodeName","System::Xml::XmlConvert::DecodeName","System.Xml.XmlConvert.EncodeLocalName","System::Xml::XmlConvert::EncodeLocalName","System.Xml.XmlConvert.EncodeName","System::Xml::XmlConvert::EncodeName","System.Xml.XmlConvert.EncodeNmToken","System::Xml::XmlConvert::EncodeNmToken","System.Xml.XmlConvert.IsNCNameChar","System::Xml::XmlConvert::IsNCNameChar","System.Xml.XmlConvert.IsPublicIdChar","System::Xml::XmlConvert::IsPublicIdChar","System.Xml.XmlConvert.IsStartNCNameChar","System::Xml::XmlConvert::IsStartNCNameChar","System.Xml.XmlConvert.IsWhitespaceChar","System::Xml::XmlConvert::IsWhitespaceChar","System.Xml.XmlConvert.IsXmlChar","System::Xml::XmlConvert::IsXmlChar","System.Xml.XmlConvert.IsXmlSurrogatePair","System::Xml::XmlConvert::IsXmlSurrogatePair","System.Xml.XmlConvert.ToBoolean","System::Xml::XmlConvert::ToBoolean","System.Xml.XmlConvert.ToByte","System::Xml::XmlConvert::ToByte","System.Xml.XmlConvert.ToChar","System::Xml::XmlConvert::ToChar","System.Xml.XmlConvert.ToDateTime","System::Xml::XmlConvert::ToDateTime","System.Xml.XmlConvert.ToDateTimeOffset","System::Xml::XmlConvert::ToDateTimeOffset","System.Xml.XmlConvert.ToDecimal","System::Xml::XmlConvert::ToDecimal","System.Xml.XmlConvert.ToDouble","System::Xml::XmlConvert::ToDouble","System.Xml.XmlConvert.ToGuid","System::Xml::XmlConvert::ToGuid","System.Xml.XmlConvert.ToInt16","System::Xml::XmlConvert::ToInt16","System.Xml.XmlConvert.ToInt32","System::Xml::XmlConvert::ToInt32","System.Xml.XmlConvert.ToInt64","System::Xml::XmlConvert::ToInt64","System.Xml.XmlConvert.ToSByte","System::Xml::XmlConvert::ToSByte","System.Xml.XmlConvert.ToSingle","System::Xml::XmlConvert::ToSingle","System.Xml.XmlConvert.ToString","System::Xml::XmlConvert::ToString","System.Xml.XmlConvert.ToTimeSpan","System::Xml::XmlConvert::ToTimeSpan","System.Xml.XmlConvert.ToUInt16","System::Xml::XmlConvert::ToUInt16","System.Xml.XmlConvert.ToUInt32","System::Xml::XmlConvert::ToUInt32","System.Xml.XmlConvert.ToUInt64","System::Xml::XmlConvert::ToUInt64","System.Xml.XmlConvert.VerifyName","System::Xml::XmlConvert::VerifyName","System.Xml.XmlConvert.VerifyNCName","System::Xml::XmlConvert::VerifyNCName","System.Xml.XmlConvert.VerifyNMTOKEN","System::Xml::XmlConvert::VerifyNMTOKEN","System.Xml.XmlConvert.VerifyPublicId","System::Xml::XmlConvert::VerifyPublicId","System.Xml.XmlConvert.VerifyTOKEN","System::Xml::XmlConvert::VerifyTOKEN","System.Xml.XmlConvert.VerifyWhitespace","System::Xml::XmlConvert::VerifyWhitespace","System.Xml.XmlConvert.VerifyXmlChars","System::Xml::XmlConvert::VerifyXmlChars"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"10982b92-2d1b-d405-80a3-d055bbdefab9","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlConvert.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlConvert class | Microsoft Docs","_op_ogTitle":"XmlConvert class","description":"Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types. When converting data types, the values returne…","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlConvert","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlconvert","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlconvert","fileRelativePath":"System.Xml.XmlConvert.html"},"themesRelativePathToOutputRoot":"_themes/"}