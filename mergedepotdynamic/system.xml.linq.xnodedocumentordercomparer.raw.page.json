{"content":"    \r\n    <h1 id=\"System_Xml_Linq_XNodeDocumentOrderComparer\">\r\n      <span class=\"lang-csharp\">XNodeDocumentOrderComparer</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains functionality to compare nodes for their document order. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class XNodeDocumentOrderComparer : System.Collections.Generic.IComparer&lt;System.Xml.Linq.XNode&gt;, System.Collections.IComparer</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XNodeDocumentOrderComparer</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class implements <code>IComparer</code> and <code>IComparer&lt;XNode&gt;</code>.  </p>\n<p> We recommend that instead of using this class directly, you use the &lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt; method. This class is used internally by that method.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Linq_XNodeDocumentOrderComparer__ctor\" data-linktype=\"self-bookmark\">XNodeDocumentOrderComparer()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.linq.xnodedocumentordercomparer\" data-linktype=\"relative-path\">XNodeDocumentOrderComparer</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Linq_XNodeDocumentOrderComparer_Compare_System_Xml_Linq_XNode_System_Xml_Linq_XNode_\" data-linktype=\"self-bookmark\">Compare(XNode,XNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two nodes to determine their relative document order.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_Linq_XNodeDocumentOrderComparer_System_Collections_IComparer_Compare_System_Object_System_Object_\" data-linktype=\"self-bookmark\">IComparer.Compare(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two nodes to determine their relative document order.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Linq_XNodeDocumentOrderComparer__ctor\">\r\n    \r\n            <a id=\"System_Xml_Linq_XNodeDocumentOrderComparer__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XNodeDocumentOrderComparer()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.linq.xnodedocumentordercomparer\" data-linktype=\"relative-path\">XNodeDocumentOrderComparer</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XNodeDocumentOrderComparer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>We recommend that instead of using this class directly, you use the &lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt; method. This class is used internally by that method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses of this class to compare the document order for two nodes.  </p>\n<pre><code class=\"lang-c#\">\n                XElement xmlTree = new XElement(&quot;Root&quot;,  \n    new XText(&quot;Text content.&quot;),  \n    new XElement(&quot;Child1&quot;, &quot;child1 content&quot;),  \n    new XElement(&quot;Child2&quot;, &quot;child2 content&quot;),  \n    new XElement(&quot;Child3&quot;, &quot;child3 content&quot;),  \n    new XText(&quot;More text content.&quot;),  \n    new XElement(&quot;Child4&quot;, &quot;child4 content&quot;),  \n    new XElement(&quot;Child5&quot;, &quot;child5 content&quot;)  \n);  \nXElement child3 = xmlTree.Element(&quot;Child3&quot;);  \nXElement child5 = xmlTree.Element(&quot;Child5&quot;);  \nXNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  \nint val = documentOrderComparer.Compare(child3, child5);  \nif (val == 0)  \n    Console.WriteLine(&quot;Child3 is same as Child5&quot;);  \nelse if (val &lt; 0)  \n    Console.WriteLine(&quot;Child3 is before Child5&quot;);  \nelse  \n    Console.WriteLine(&quot;Child3 is after Child5&quot;);\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>Child3 is before Child5\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Linq_XNodeDocumentOrderComparer_Compare_System_Xml_Linq_XNode_System_Xml_Linq_XNode_\">\r\n    \r\n            <a id=\"System_Xml_Linq_XNodeDocumentOrderComparer_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare(XNode,XNode)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two nodes to determine their relative document order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Compare (System.Xml.Linq.XNode x, System.Xml.Linq.XNode y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains 0 if the nodes are equal; -1 if <code>x</code> is before <code>y</code>; 1 if <code>x</code> is after <code>y</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The two nodes do not share a common ancestor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>We recommend that instead of using this class directly, you use the &lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt; method. This class is used internally by that method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses this class to compare document order for two nodes.  </p>\n<pre><code class=\"lang-c#\">\n                XElement xmlTree = new XElement(&quot;Root&quot;,  \n    new XText(&quot;Text content.&quot;),  \n    new XElement(&quot;Child1&quot;, &quot;child1 content&quot;),  \n    new XElement(&quot;Child2&quot;, &quot;child2 content&quot;),  \n    new XElement(&quot;Child3&quot;, &quot;child3 content&quot;),  \n    new XText(&quot;More text content.&quot;),  \n    new XElement(&quot;Child4&quot;, &quot;child4 content&quot;),  \n    new XElement(&quot;Child5&quot;, &quot;child5 content&quot;)  \n);  \nXElement child3 = xmlTree.Element(&quot;Child3&quot;);  \nXElement child5 = xmlTree.Element(&quot;Child5&quot;);  \nXNodeDocumentOrderComparer documentOrderComparer = new XNodeDocumentOrderComparer();  \nint val = documentOrderComparer.Compare(child3, child5);  \nif (val == 0)  \n    Console.WriteLine(&quot;Child3 is same as Child5&quot;);  \nelse if (val &lt; 0)  \n    Console.WriteLine(&quot;Child3 is before Child5&quot;);  \nelse  \n    Console.WriteLine(&quot;Child3 is after Child5&quot;);\n</code></pre><p> This example produces the following output:  </p>\n<pre><code>Child3 is before Child5\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_Linq_XNodeDocumentOrderComparer_System_Collections_IComparer_Compare_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Xml_Linq_XNodeDocumentOrderComparer_System_Collections_IComparer_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IComparer.Compare(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two nodes to determine their relative document order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IComparer.Compare (object x, object y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a> to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> that contains 0 if the nodes are equal; -1 if <code>x</code> is before <code>y</code>; 1 if <code>x</code> is after <code>y</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The two nodes do not share a common ancestor.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The two nodes are not derived from <a class=\"xref\" href=\"system.xml.linq.xnode\" data-linktype=\"relative-path\">XNode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>We recommend that instead of using this class directly, you use the &lt;xref:System.Xml.Linq.Extensions.InDocumentOrder%2A&gt; method. This class is used internally by that method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Linq.XNodeDocumentOrderComparer.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Linq.XNodeDocumentOrderComparer.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.Linq.XNodeDocumentOrderComparer\">\r\n<meta name=\"APIName\" content=\"System.Xml.Linq.XNodeDocumentOrderComparer..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.Linq.XNodeDocumentOrderComparer.Compare\">\r\n<meta name=\"APIName\" content=\"System.Xml.Linq.XNodeDocumentOrderComparer.IComparer.Compare\">\r\n<meta name=\"APILocation\" content=\"System.Xml.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"04e09036-324d-cea6-95a5-01ff28a9b541\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.Linq\\XNodeDocumentOrderComparer.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains functionality to compare nodes for their document order. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml.Linq/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.Linq.XNodeDocumentOrderComparer\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.Linq.XNodeDocumentOrderComparer.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.Linq.XNodeDocumentOrderComparer.yml","open_to_public_contributors":true,"api_name":["System.Xml.Linq.XNodeDocumentOrderComparer","System.Xml.Linq.XNodeDocumentOrderComparer..ctor","System.Xml.Linq.XNodeDocumentOrderComparer.Compare","System.Xml.Linq.XNodeDocumentOrderComparer.IComparer.Compare"],"api_location":["System.Xml.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.Linq.XNodeDocumentOrderComparer","System::Xml::Linq::XNodeDocumentOrderComparer","System.Xml.Linq.XNodeDocumentOrderComparer.#ctor","System::Xml::Linq::XNodeDocumentOrderComparer::#ctor","System.Xml.Linq.XNodeDocumentOrderComparer.Compare","System::Xml::Linq::XNodeDocumentOrderComparer::Compare","System.Xml.Linq.XNodeDocumentOrderComparer.System#Collections#IComparer#Compare","System::Xml::Linq::XNodeDocumentOrderComparer::System#Collections#IComparer#Compare"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"04e09036-324d-cea6-95a5-01ff28a9b541","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Xml.Linq\\XNodeDocumentOrderComparer.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml.Linq/XNodeDocumentOrderComparer.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XNodeDocumentOrderComparer class | Microsoft Docs","_op_ogTitle":"XNodeDocumentOrderComparer class","description":"Contains functionality to compare nodes for their document order. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Xml.Linq/toc.json","toc_rel":"_splitted/System.Xml.Linq/toc.json","source_url":"","ms.assetid":"System.Xml.Linq.XNodeDocumentOrderComparer","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.linq.xnodedocumentordercomparer","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.linq.xnodedocumentordercomparer","fileRelativePath":"System.Xml.Linq.XNodeDocumentOrderComparer.html"},"themesRelativePathToOutputRoot":"_themes/"}