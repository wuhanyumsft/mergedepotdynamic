{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection\">\r\n      <span class=\"lang-csharp\">EncryptionPropertyCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> classes used in XML encryption. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class EncryptionPropertyCollection : System.Collections.IList</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EncryptionPropertyCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> class encapsulates the <code>&lt;EncryptionProperty&gt;</code> element defined by the World Wide Web Consortium XML Encryption specification located at <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.  </p>\n<p> Use the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> class to provide additional encryption information related to the <a class=\"xref\" href=\"system.security.cryptography.xml.encrypteddata\" data-linktype=\"relative-path\">EncryptedData</a> and <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> elements.  For example, you can use this class to specify a time stamp.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection__ctor\" data-linktype=\"self-bookmark\">EncryptionPropertyCollection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of elements contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsFixedSize\" data-linktype=\"self-bookmark\">IsFixedSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object has a fixed size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsSynchronized\" data-linktype=\"self-bookmark\">IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether access to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object is synchronized (thread safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_ItemOf_System_Int32_\" data-linktype=\"self-bookmark\">ItemOf(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_SyncRoot\" data-linktype=\"self-bookmark\">SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Add_System_Security_Cryptography_Xml_EncryptionProperty_\" data-linktype=\"self-bookmark\">Add(EncryptionProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all items from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Contains_System_Security_Cryptography_Xml_EncryptionProperty_\" data-linktype=\"self-bookmark\">Contains(EncryptionProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object contains a specific <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object to an array, starting at a particular array index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_CopyTo_System_Security_Cryptography_Xml_EncryptionProperty___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(EncryptionProperty[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object to an array of <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> objects, starting at a particular array index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_IndexOf_System_Security_Cryptography_Xml_EncryptionProperty_\" data-linktype=\"self-bookmark\">IndexOf(EncryptionProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the index of a specific item in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Insert_System_Int32_System_Security_Cryptography_Xml_EncryptionProperty_\" data-linktype=\"self-bookmark\">Insert(Int32,EncryptionProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object into the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object at the specified position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_Remove_System_Security_Cryptography_Xml_EncryptionProperty_\" data-linktype=\"self-bookmark\">Remove(EncryptionProperty)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the first occurrence of a specific <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_RemoveAt_System_Int32_\" data-linktype=\"self-bookmark\">RemoveAt(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Add_System_Object_\" data-linktype=\"self-bookmark\">IList.Add(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Contains_System_Object_\" data-linktype=\"self-bookmark\">IList.Contains(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> contains a specific value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_IndexOf_System_Object_\" data-linktype=\"self-bookmark\">IList.IndexOf(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the index of a specific item in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Insert_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">IList.Insert(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Item_System_Int32_\" data-linktype=\"self-bookmark\">IList.Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the element at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Remove_System_Object_\" data-linktype=\"self-bookmark\">IList.Remove(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the first occurrence of a specific object from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EncryptionPropertyCollection()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public EncryptionPropertyCollection ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example encrypts and decrypts an XML document.  This code example creates an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object that contains custom information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> element, and adds the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a> class.  Finally, this code example displays information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object and the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Cryptography.XML.EncryptionProperty#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey As New RSACryptoServiceProvider()\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Inspect the EncryptedKey element.\n            InspectElement(xmlDoc)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n    End Sub\n\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncryptValue As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncryptValue Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        Dim elementToEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncryptValue)(0)\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementToEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Save some more information about the key using\n        &#39; the EncryptionProperty element.  In this example,\n        &#39; we will save the value &quot;LibVersion1&quot;.  You can save\n        &#39; anything you want here.\n        &#39; Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        Dim element As XmlElement = New XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl)\n\n        &#39; Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;\n\n        &#39; Create the EncryptionProperty object using the XmlElement object. \n        Dim encProp As New EncryptionProperty(element)\n\n        &#39; Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, False)\n\n    End Sub\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub\n\n\n    Sub InspectElement(ByVal Doc As XmlDocument)\n        &#39; Get the EncryptedData element from the XMLDocument object.\n        Dim encryptedData As XmlElement = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)(0)\n\n        &#39; Create a new EncryptedData object.\n        Dim encData As New EncryptedData()\n\n        &#39; Load the XML from the document to\n        &#39; initialize the EncryptedData object.\n        encData.LoadXml(encryptedData)\n\n        &#39; Display the properties.\n        &#39; Most values are Null by default.\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding)\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml)\n\n        Dim encPropCollection As EncryptionPropertyCollection = encData.EncryptionProperties\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count.ToString())\n        &#39;encPropCollection.\n        Dim encProp As EncryptionProperty\n        For Each encProp In encPropCollection\n            Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id)\n            Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml)\n            Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target)\n        Next encProp\n\n\n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id)\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.XML.EncryptionProperty#1\">using System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        // Create an XmlDocument object.\n        XmlDocument xmlDoc = new XmlDocument();\n\n        // Load an XML file into the XmlDocument object.\n        try\n        {\n            xmlDoc.PreserveWhitespace = true;\n            xmlDoc.Load(&quot;test.xml&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n\n        // Create a new RSA key.  This key will encrypt a symmetric key,\n        // which will then be imbedded in the XML document.  \n        RSA rsaKey = new RSACryptoServiceProvider();\n\n\n        try\n        {\n            // Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Inspect the EncryptedKey element.\n            InspectElement(xmlDoc);\n\n            // Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            // Clear the RSA key.\n            rsaKey.Clear();\n        }\n\n    }\n\n    public static void Encrypt(XmlDocument Doc, string ElementToEncrypt, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (ElementToEncrypt == null)\n            throw new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n\n        ////////////////////////////////////////////////\n        // Find the specified element in the XmlDocument\n        // object and create a new XmlElemnt object.\n        ////////////////////////////////////////////////\n\n        XmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n        // Throw an XmlException if the element was not found.\n        if (elementToEncrypt == null)\n        {\n            throw new XmlException(&quot;The specified element was not found&quot;);\n\n        }\n\n        //////////////////////////////////////////////////\n        // Create a new instance of the EncryptedXml class \n        // and use it to encrypt the XmlElement with the \n        // a new random symmetric key.\n        //////////////////////////////////////////////////\n\n        // Create a 256 bit Rijndael key.\n        RijndaelManaged sessionKey = new RijndaelManaged();\n        sessionKey.KeySize = 256;\n\n        EncryptedXml eXml = new EncryptedXml();\n\n        byte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n        ////////////////////////////////////////////////\n        // Construct an EncryptedData object and populate\n        // it with the desired encryption information.\n        ////////////////////////////////////////////////\n\n\n        EncryptedData edElement = new EncryptedData();\n        edElement.Type = EncryptedXml.XmlEncElementUrl;\n\n        // Create an EncryptionMethod element so that the \n        // receiver knows which algorithm to use for decryption.\n\n        edElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n        // Encrypt the session key and add it to an EncryptedKey element.\n        EncryptedKey ek = new EncryptedKey();\n\n        byte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n        ek.CipherData = new CipherData(encryptedKey);\n\n        ek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n        // Save some more information about the key using\n        // the EncryptionProperty element.  In this example,\n        // we will save the value &quot;LibVersion1&quot;.  You can save\n        // anything you want here.\n\n        // Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        XmlElement element =  new XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl);\n\n        // Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;;\n\n        // Create the EncryptionProperty object using the XmlElement object. \n        EncryptionProperty encProp = new EncryptionProperty(element);\n\n        // Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp);\n\n        // Set the KeyInfo element to specify the\n        // name of the RSA key.\n\n        // Create a new KeyInfo element.\n        edElement.KeyInfo = new KeyInfo();\n\n        // Create a new KeyInfoName element.\n        KeyInfoName kin = new KeyInfoName();\n\n        // Specify a name for the key.\n        kin.Value = KeyName;\n\n        // Add the KeyInfoName element to the \n        // EncryptedKey object.\n        ek.KeyInfo.AddClause(kin);\n\n        // Add the encrypted key to the \n        // EncryptedData object.\n\n        edElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n        // Add the encrypted element data to the \n        // EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement;\n\n        ////////////////////////////////////////////////////\n        // Replace the element from the original XmlDocument\n        // object with the EncryptedData element.\n        ////////////////////////////////////////////////////\n\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n    }\n\n    public static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        // Create a new EncryptedXml object.\n        EncryptedXml exml = new EncryptedXml(Doc);\n\n        // Add a key-name mapping.\n        // This method can only decrypt documents\n        // that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg);\n\n        // Decrypt the element.\n        exml.DecryptDocument();\n\n    }\n\n    static void InspectElement(XmlDocument Doc)\n    {\n        // Get the EncryptedData element from the XMLDocument object.\n        XmlElement encryptedData = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)[0] as XmlElement;\n\n        // Create a new EncryptedData object.\n        EncryptedData encData = new EncryptedData();\n\n        // Load the XML from the document to\n        // initialize the EncryptedData object.\n        encData.LoadXml(encryptedData);\n\n        // Display the properties.\n        // Most values are Null by default.\n\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding);\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml);\n\n        EncryptionPropertyCollection encPropCollection = encData.EncryptionProperties;\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count);\n        //encPropCollection.\n\n        foreach(EncryptionProperty encProp in encPropCollection)\n        {\n                Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id);\n                Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml);\n                Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target);\n                 \n        }\n\n    \n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id);\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType);\n    }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Count\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of elements contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of elements contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example encrypts and decrypts an XML document.  This code example creates an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object that contains custom information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> element, and adds the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a> class.  Finally, this code example displays information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object and the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Cryptography.XML.EncryptionProperty#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey As New RSACryptoServiceProvider()\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Inspect the EncryptedKey element.\n            InspectElement(xmlDoc)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n    End Sub\n\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncryptValue As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncryptValue Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        Dim elementToEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncryptValue)(0)\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementToEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Save some more information about the key using\n        &#39; the EncryptionProperty element.  In this example,\n        &#39; we will save the value &quot;LibVersion1&quot;.  You can save\n        &#39; anything you want here.\n        &#39; Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        Dim element As XmlElement = New XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl)\n\n        &#39; Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;\n\n        &#39; Create the EncryptionProperty object using the XmlElement object. \n        Dim encProp As New EncryptionProperty(element)\n\n        &#39; Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, False)\n\n    End Sub\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub\n\n\n    Sub InspectElement(ByVal Doc As XmlDocument)\n        &#39; Get the EncryptedData element from the XMLDocument object.\n        Dim encryptedData As XmlElement = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)(0)\n\n        &#39; Create a new EncryptedData object.\n        Dim encData As New EncryptedData()\n\n        &#39; Load the XML from the document to\n        &#39; initialize the EncryptedData object.\n        encData.LoadXml(encryptedData)\n\n        &#39; Display the properties.\n        &#39; Most values are Null by default.\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding)\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml)\n\n        Dim encPropCollection As EncryptionPropertyCollection = encData.EncryptionProperties\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count.ToString())\n        &#39;encPropCollection.\n        Dim encProp As EncryptionProperty\n        For Each encProp In encPropCollection\n            Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id)\n            Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml)\n            Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target)\n        Next encProp\n\n\n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id)\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.XML.EncryptionProperty#1\">using System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        // Create an XmlDocument object.\n        XmlDocument xmlDoc = new XmlDocument();\n\n        // Load an XML file into the XmlDocument object.\n        try\n        {\n            xmlDoc.PreserveWhitespace = true;\n            xmlDoc.Load(&quot;test.xml&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n\n        // Create a new RSA key.  This key will encrypt a symmetric key,\n        // which will then be imbedded in the XML document.  \n        RSA rsaKey = new RSACryptoServiceProvider();\n\n\n        try\n        {\n            // Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Inspect the EncryptedKey element.\n            InspectElement(xmlDoc);\n\n            // Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            // Clear the RSA key.\n            rsaKey.Clear();\n        }\n\n    }\n\n    public static void Encrypt(XmlDocument Doc, string ElementToEncrypt, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (ElementToEncrypt == null)\n            throw new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n\n        ////////////////////////////////////////////////\n        // Find the specified element in the XmlDocument\n        // object and create a new XmlElemnt object.\n        ////////////////////////////////////////////////\n\n        XmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n        // Throw an XmlException if the element was not found.\n        if (elementToEncrypt == null)\n        {\n            throw new XmlException(&quot;The specified element was not found&quot;);\n\n        }\n\n        //////////////////////////////////////////////////\n        // Create a new instance of the EncryptedXml class \n        // and use it to encrypt the XmlElement with the \n        // a new random symmetric key.\n        //////////////////////////////////////////////////\n\n        // Create a 256 bit Rijndael key.\n        RijndaelManaged sessionKey = new RijndaelManaged();\n        sessionKey.KeySize = 256;\n\n        EncryptedXml eXml = new EncryptedXml();\n\n        byte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n        ////////////////////////////////////////////////\n        // Construct an EncryptedData object and populate\n        // it with the desired encryption information.\n        ////////////////////////////////////////////////\n\n\n        EncryptedData edElement = new EncryptedData();\n        edElement.Type = EncryptedXml.XmlEncElementUrl;\n\n        // Create an EncryptionMethod element so that the \n        // receiver knows which algorithm to use for decryption.\n\n        edElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n        // Encrypt the session key and add it to an EncryptedKey element.\n        EncryptedKey ek = new EncryptedKey();\n\n        byte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n        ek.CipherData = new CipherData(encryptedKey);\n\n        ek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n        // Save some more information about the key using\n        // the EncryptionProperty element.  In this example,\n        // we will save the value &quot;LibVersion1&quot;.  You can save\n        // anything you want here.\n\n        // Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        XmlElement element =  new XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl);\n\n        // Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;;\n\n        // Create the EncryptionProperty object using the XmlElement object. \n        EncryptionProperty encProp = new EncryptionProperty(element);\n\n        // Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp);\n\n        // Set the KeyInfo element to specify the\n        // name of the RSA key.\n\n        // Create a new KeyInfo element.\n        edElement.KeyInfo = new KeyInfo();\n\n        // Create a new KeyInfoName element.\n        KeyInfoName kin = new KeyInfoName();\n\n        // Specify a name for the key.\n        kin.Value = KeyName;\n\n        // Add the KeyInfoName element to the \n        // EncryptedKey object.\n        ek.KeyInfo.AddClause(kin);\n\n        // Add the encrypted key to the \n        // EncryptedData object.\n\n        edElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n        // Add the encrypted element data to the \n        // EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement;\n\n        ////////////////////////////////////////////////////\n        // Replace the element from the original XmlDocument\n        // object with the EncryptedData element.\n        ////////////////////////////////////////////////////\n\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n    }\n\n    public static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        // Create a new EncryptedXml object.\n        EncryptedXml exml = new EncryptedXml(Doc);\n\n        // Add a key-name mapping.\n        // This method can only decrypt documents\n        // that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg);\n\n        // Decrypt the element.\n        exml.DecryptDocument();\n\n    }\n\n    static void InspectElement(XmlDocument Doc)\n    {\n        // Get the EncryptedData element from the XMLDocument object.\n        XmlElement encryptedData = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)[0] as XmlElement;\n\n        // Create a new EncryptedData object.\n        EncryptedData encData = new EncryptedData();\n\n        // Load the XML from the document to\n        // initialize the EncryptedData object.\n        encData.LoadXml(encryptedData);\n\n        // Display the properties.\n        // Most values are Null by default.\n\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding);\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml);\n\n        EncryptionPropertyCollection encPropCollection = encData.EncryptionProperties;\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count);\n        //encPropCollection.\n\n        foreach(EncryptionProperty encProp in encPropCollection)\n        {\n                Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id);\n                Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml);\n                Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target);\n                 \n        }\n\n    \n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id);\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType);\n    }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsFixedSize\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsFixedSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFixedSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object has a fixed size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsFixedSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object has a fixed size; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.  </p>\n<p> A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements. Therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsReadOnly\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object is read-only; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.  </p>\n<p> A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether access to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object is synchronized (thread safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if access to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object is synchronized (thread safe); otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_ItemOf_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_ItemOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemOf(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.Xml.EncryptionProperty this[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to synchronize access to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Add_System_Security_Cryptography_Xml_EncryptionProperty_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(EncryptionProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Add (System.Security.Cryptography.Xml.EncryptionProperty value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The position at which the new element is inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example encrypts and decrypts an XML document.  This code example creates an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object that contains custom information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedkey\" data-linktype=\"relative-path\">EncryptedKey</a> element, and adds the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedxml\" data-linktype=\"relative-path\">EncryptedXml</a> class.  Finally, this code example displays information about the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object and the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> collection.  </p>\n<pre><code class=\"lang-vb\" name=\"Cryptography.XML.EncryptionProperty#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey As New RSACryptoServiceProvider()\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Inspect the EncryptedKey element.\n            InspectElement(xmlDoc)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n    End Sub\n\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncryptValue As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncryptValue Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        Dim elementToEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncryptValue)(0)\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementToEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Save some more information about the key using\n        &#39; the EncryptionProperty element.  In this example,\n        &#39; we will save the value &quot;LibVersion1&quot;.  You can save\n        &#39; anything you want here.\n        &#39; Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        Dim element As XmlElement = New XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl)\n\n        &#39; Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;\n\n        &#39; Create the EncryptionProperty object using the XmlElement object. \n        Dim encProp As New EncryptionProperty(element)\n\n        &#39; Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, False)\n\n    End Sub\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub\n\n\n    Sub InspectElement(ByVal Doc As XmlDocument)\n        &#39; Get the EncryptedData element from the XMLDocument object.\n        Dim encryptedData As XmlElement = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)(0)\n\n        &#39; Create a new EncryptedData object.\n        Dim encData As New EncryptedData()\n\n        &#39; Load the XML from the document to\n        &#39; initialize the EncryptedData object.\n        encData.LoadXml(encryptedData)\n\n        &#39; Display the properties.\n        &#39; Most values are Null by default.\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding)\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml)\n\n        Dim encPropCollection As EncryptionPropertyCollection = encData.EncryptionProperties\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count.ToString())\n        &#39;encPropCollection.\n        Dim encProp As EncryptionProperty\n        For Each encProp In encPropCollection\n            Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id)\n            Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml)\n            Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target)\n        Next encProp\n\n\n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id)\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml)\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType)\n\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"Cryptography.XML.EncryptionProperty#1\">using System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        // Create an XmlDocument object.\n        XmlDocument xmlDoc = new XmlDocument();\n\n        // Load an XML file into the XmlDocument object.\n        try\n        {\n            xmlDoc.PreserveWhitespace = true;\n            xmlDoc.Load(&quot;test.xml&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n\n        // Create a new RSA key.  This key will encrypt a symmetric key,\n        // which will then be imbedded in the XML document.  \n        RSA rsaKey = new RSACryptoServiceProvider();\n\n\n        try\n        {\n            // Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Inspect the EncryptedKey element.\n            InspectElement(xmlDoc);\n\n            // Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            // Clear the RSA key.\n            rsaKey.Clear();\n        }\n\n    }\n\n    public static void Encrypt(XmlDocument Doc, string ElementToEncrypt, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (ElementToEncrypt == null)\n            throw new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n\n        ////////////////////////////////////////////////\n        // Find the specified element in the XmlDocument\n        // object and create a new XmlElemnt object.\n        ////////////////////////////////////////////////\n\n        XmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n        // Throw an XmlException if the element was not found.\n        if (elementToEncrypt == null)\n        {\n            throw new XmlException(&quot;The specified element was not found&quot;);\n\n        }\n\n        //////////////////////////////////////////////////\n        // Create a new instance of the EncryptedXml class \n        // and use it to encrypt the XmlElement with the \n        // a new random symmetric key.\n        //////////////////////////////////////////////////\n\n        // Create a 256 bit Rijndael key.\n        RijndaelManaged sessionKey = new RijndaelManaged();\n        sessionKey.KeySize = 256;\n\n        EncryptedXml eXml = new EncryptedXml();\n\n        byte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n        ////////////////////////////////////////////////\n        // Construct an EncryptedData object and populate\n        // it with the desired encryption information.\n        ////////////////////////////////////////////////\n\n\n        EncryptedData edElement = new EncryptedData();\n        edElement.Type = EncryptedXml.XmlEncElementUrl;\n\n        // Create an EncryptionMethod element so that the \n        // receiver knows which algorithm to use for decryption.\n\n        edElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n        // Encrypt the session key and add it to an EncryptedKey element.\n        EncryptedKey ek = new EncryptedKey();\n\n        byte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n        ek.CipherData = new CipherData(encryptedKey);\n\n        ek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n        // Save some more information about the key using\n        // the EncryptionProperty element.  In this example,\n        // we will save the value &quot;LibVersion1&quot;.  You can save\n        // anything you want here.\n\n        // Create a new &quot;EncryptionProperty&quot; XmlElement object. \n        XmlElement element =  new XmlDocument().CreateElement(&quot;EncryptionProperty&quot;, EncryptedXml.XmlEncNamespaceUrl);\n\n        // Set the value of the EncryptionProperty&quot; XmlElement object.\n        element.InnerText = &quot;LibVersion1&quot;;\n\n        // Create the EncryptionProperty object using the XmlElement object. \n        EncryptionProperty encProp = new EncryptionProperty(element);\n\n        // Add the EncryptionProperty object to the EncryptedData object.\n        edElement.AddProperty(encProp);\n\n        // Set the KeyInfo element to specify the\n        // name of the RSA key.\n\n        // Create a new KeyInfo element.\n        edElement.KeyInfo = new KeyInfo();\n\n        // Create a new KeyInfoName element.\n        KeyInfoName kin = new KeyInfoName();\n\n        // Specify a name for the key.\n        kin.Value = KeyName;\n\n        // Add the KeyInfoName element to the \n        // EncryptedKey object.\n        ek.KeyInfo.AddClause(kin);\n\n        // Add the encrypted key to the \n        // EncryptedData object.\n\n        edElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n        // Add the encrypted element data to the \n        // EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement;\n\n        ////////////////////////////////////////////////////\n        // Replace the element from the original XmlDocument\n        // object with the EncryptedData element.\n        ////////////////////////////////////////////////////\n\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n    }\n\n    public static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        // Create a new EncryptedXml object.\n        EncryptedXml exml = new EncryptedXml(Doc);\n\n        // Add a key-name mapping.\n        // This method can only decrypt documents\n        // that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg);\n\n        // Decrypt the element.\n        exml.DecryptDocument();\n\n    }\n\n    static void InspectElement(XmlDocument Doc)\n    {\n        // Get the EncryptedData element from the XMLDocument object.\n        XmlElement encryptedData = Doc.GetElementsByTagName(&quot;EncryptedData&quot;)[0] as XmlElement;\n\n        // Create a new EncryptedData object.\n        EncryptedData encData = new EncryptedData();\n\n        // Load the XML from the document to\n        // initialize the EncryptedData object.\n        encData.LoadXml(encryptedData);\n\n        // Display the properties.\n        // Most values are Null by default.\n\n        Console.WriteLine(&quot;EncryptedData.CipherData: &quot; + encData.CipherData.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.Encoding: &quot; + encData.Encoding);\n        Console.WriteLine(&quot;EncryptedData.EncryptionMethod: &quot; + encData.EncryptionMethod.GetXml().InnerXml);\n\n        EncryptionPropertyCollection encPropCollection = encData.EncryptionProperties;\n\n        Console.WriteLine(&quot;Number of elements in the EncryptionPropertyCollection: &quot; + encPropCollection.Count);\n        //encPropCollection.\n\n        foreach(EncryptionProperty encProp in encPropCollection)\n        {\n                Console.WriteLine(&quot;EncryptionProperty.ID: &quot; + encProp.Id);\n                Console.WriteLine(&quot;EncryptionProperty.PropertyElement: &quot; + encProp.PropertyElement.InnerXml);\n                Console.WriteLine(&quot;EncryptionProperty.Target: &quot; + encProp.Target);\n                 \n        }\n\n    \n\n        Console.WriteLine(&quot;EncryptedData.Id: &quot; + encData.Id);\n        Console.WriteLine(&quot;EncryptedData.KeyInfo: &quot; + encData.KeyInfo.GetXml().InnerXml);\n        Console.WriteLine(&quot;EncryptedData.MimeType: &quot; + encData.MimeType);\n    }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Clear\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all items from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Contains_System_Security_Cryptography_Xml_EncryptionProperty_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(EncryptionProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object contains a specific <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (System.Security.Cryptography.Xml.EncryptionProperty value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to locate in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object is found in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object to an array, starting at a particular array index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> object that is the destination of the elements copied from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object. The array must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_CopyTo_System_Security_Cryptography_Xml_EncryptionProperty___System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(EncryptionProperty[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object to an array of <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> objects, starting at a particular array index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (System.Security.Cryptography.Xml.EncryptionProperty[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional array of  <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> objects that is the destination of the elements copied from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object. The array must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_GetEnumerator\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> object that can be used to iterate through an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Enumerators allow only reading the data in the collection. Enumerators cannot be used to modify the underlying collection.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IndexOf_System_Security_Cryptography_Xml_EncryptionProperty_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexOf(EncryptionProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the index of a specific item in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int IndexOf (System.Security.Cryptography.Xml.EncryptionProperty value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to locate in the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of <code>value</code> if found in the collection; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Insert_System_Int32_System_Security_Cryptography_Xml_EncryptionProperty_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Insert(Int32,EncryptionProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts an <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object into the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object at the specified position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Insert (int index, System.Security.Cryptography.Xml.EncryptionProperty value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which <code>value</code> should be inserted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to insert into the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.Xml.EncryptionProperty Item (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Remove_System_Security_Cryptography_Xml_EncryptionProperty_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(EncryptionProperty)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the first occurrence of a specific <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Remove (System.Security.Cryptography.Xml.EncryptionProperty value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to remove from the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionpropertycollection\" data-linktype=\"relative-path\">EncryptionPropertyCollection</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_RemoveAt_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_RemoveAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveAt(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveAt (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the <a class=\"xref\" href=\"system.security.cryptography.xml.encryptionproperty\" data-linktype=\"relative-path\">EncryptionProperty</a> object to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Add_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Add(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IList.Add (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to add to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The position into which the new element was inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> uses an incorrect object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Contains_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Contains(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> contains a specific value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IList.Contains (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to locate in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> is found in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> uses an incorrect object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_IndexOf_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.IndexOf(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the index of a specific item in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IList.IndexOf (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to locate in the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of <code>value</code> if found in the list; otherwise, -1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> uses an incorrect object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Insert_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Insert(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts an item to the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList.Insert (int index, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which <code>value</code> should be inserted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to insert into the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> uses an incorrect object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the element at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.IList.Item[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to remove from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The element at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Remove_System_Object_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_EncryptionPropertyCollection_System_Collections_IList_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IList.Remove(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the first occurrence of a specific object from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IList.Remove (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to remove from the <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>value</code> uses an incorrect object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.EncryptionPropertyCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.EncryptionPropertyCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Add\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Contains\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Insert\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Item\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Remove\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9a58262d-e47c-b5f4-abaa-6f80adc3acf2\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography.Xml\\EncryptionPropertyCollection.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of  classes used in XML encryption. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.Xml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.EncryptionPropertyCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.EncryptionPropertyCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.EncryptionPropertyCollection.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.Xml.EncryptionPropertyCollection","System.Security.Cryptography.Xml.EncryptionPropertyCollection..ctor","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains","System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count","System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item","System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove","System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt","System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Add","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Contains","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.IndexOf","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Insert","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Item","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IList.Remove"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.EncryptionPropertyCollection","System::Security::Cryptography::Xml::EncryptionPropertyCollection","System.Security.Cryptography.Xml.EncryptionPropertyCollection.#ctor","System::Security::Cryptography::Xml::EncryptionPropertyCollection::#ctor","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Add","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Add","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Clear","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Clear","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Contains","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Contains","System.Security.Cryptography.Xml.EncryptionPropertyCollection.CopyTo","System::Security::Cryptography::Xml::EncryptionPropertyCollection::CopyTo","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Count","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Count","System.Security.Cryptography.Xml.EncryptionPropertyCollection.GetEnumerator","System::Security::Cryptography::Xml::EncryptionPropertyCollection::GetEnumerator","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IndexOf","System::Security::Cryptography::Xml::EncryptionPropertyCollection::IndexOf","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Insert","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Insert","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsFixedSize","System::Security::Cryptography::Xml::EncryptionPropertyCollection::IsFixedSize","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsReadOnly","System::Security::Cryptography::Xml::EncryptionPropertyCollection::IsReadOnly","System.Security.Cryptography.Xml.EncryptionPropertyCollection.IsSynchronized","System::Security::Cryptography::Xml::EncryptionPropertyCollection::IsSynchronized","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Item","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Item","System.Security.Cryptography.Xml.EncryptionPropertyCollection.ItemOf","System::Security::Cryptography::Xml::EncryptionPropertyCollection::ItemOf","System.Security.Cryptography.Xml.EncryptionPropertyCollection.Remove","System::Security::Cryptography::Xml::EncryptionPropertyCollection::Remove","System.Security.Cryptography.Xml.EncryptionPropertyCollection.RemoveAt","System::Security::Cryptography::Xml::EncryptionPropertyCollection::RemoveAt","System.Security.Cryptography.Xml.EncryptionPropertyCollection.SyncRoot","System::Security::Cryptography::Xml::EncryptionPropertyCollection::SyncRoot","System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Add","System::Security::Cryptography::Xml::EncryptionPropertyCollection::System#Collections#IList#Add","System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Contains","System::Security::Cryptography::Xml::EncryptionPropertyCollection::System#Collections#IList#Contains","System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#IndexOf","System::Security::Cryptography::Xml::EncryptionPropertyCollection::System#Collections#IList#IndexOf","System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Insert","System::Security::Cryptography::Xml::EncryptionPropertyCollection::System#Collections#IList#Insert","System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Item","System::Security::Cryptography::Xml::EncryptionPropertyCollection::System#Collections#IList#Item","System.Security.Cryptography.Xml.EncryptionPropertyCollection.System#Collections#IList#Remove","System::Security::Cryptography::Xml::EncryptionPropertyCollection::System#Collections#IList#Remove"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9a58262d-e47c-b5f4-abaa-6f80adc3acf2","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Security.Cryptography.Xml\\EncryptionPropertyCollection.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.Xml/EncryptionPropertyCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EncryptionPropertyCollection class | Microsoft Docs","_op_ogTitle":"EncryptionPropertyCollection class","description":"Represents a collection of  classes used in XML encryption. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.EncryptionPropertyCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.encryptionpropertycollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.encryptionpropertycollection","fileRelativePath":"System.Security.Cryptography.Xml.EncryptionPropertyCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}