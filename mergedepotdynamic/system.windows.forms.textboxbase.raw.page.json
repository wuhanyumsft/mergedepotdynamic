{"content":"    \r\n    <h1 id=\"System_Windows_Forms_TextBoxBase\">\r\n      <span class=\"lang-csharp\">TextBoxBase</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Implements the basic functionality required by text controls.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultBindingProperty(&quot;Text&quot;)]\n[System.ComponentModel.DefaultEvent(&quot;TextChanged&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.TextBoxBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic abstract class TextBoxBase : System.Windows.Forms.Control</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">System.Windows.Forms.Control</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TextBoxBase</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject\" data-linktype=\"relative-path\">AccessibilityObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDefaultActionDescription\" data-linktype=\"relative-path\">AccessibleDefaultActionDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDescription\" data-linktype=\"relative-path\">AccessibleDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName\" data-linktype=\"relative-path\">AccessibleName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole\" data-linktype=\"relative-path\">AccessibleRole</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AllowDrop\" data-linktype=\"relative-path\">AllowDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor\" data-linktype=\"relative-path\">Anchor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoScrollOffset\" data-linktype=\"relative-path\">AutoScrollOffset</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_\" data-linktype=\"relative-path\">BeginInvoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">BeginInvoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContext\" data-linktype=\"relative-path\">BindingContext</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom\" data-linktype=\"relative-path\">Bottom</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds\" data-linktype=\"relative-path\">Bounds</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BringToFront\" data-linktype=\"relative-path\">BringToFront()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanFocus\" data-linktype=\"relative-path\">CanFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanSelect\" data-linktype=\"relative-path\">CanSelect</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Capture\" data-linktype=\"relative-path\">Capture</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation\" data-linktype=\"relative-path\">CausesValidation</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidationChanged\" data-linktype=\"relative-path\">CausesValidationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ChangeUICues\" data-linktype=\"relative-path\">ChangeUICues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CheckForIllegalCrossThreadCalls\" data-linktype=\"relative-path\">CheckForIllegalCrossThreadCalls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientRectangle\" data-linktype=\"relative-path\">ClientRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSize\" data-linktype=\"relative-path\">ClientSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSizeChanged\" data-linktype=\"relative-path\">ClientSizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CompanyName\" data-linktype=\"relative-path\">CompanyName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Contains_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">Contains(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContainsFocus\" data-linktype=\"relative-path\">ContainsFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu\" data-linktype=\"relative-path\">ContextMenu</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuChanged\" data-linktype=\"relative-path\">ContextMenuChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStripChanged\" data-linktype=\"relative-path\">ContextMenuStripChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlAdded\" data-linktype=\"relative-path\">ControlAdded</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlRemoved\" data-linktype=\"relative-path\">ControlRemoved</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance\" data-linktype=\"relative-path\">CreateAccessibilityInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControl\" data-linktype=\"relative-path\">CreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControlsInstance\" data-linktype=\"relative-path\">CreateControlsInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Created\" data-linktype=\"relative-path\">Created</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics\" data-linktype=\"relative-path\">CreateGraphics()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor\" data-linktype=\"relative-path\">Cursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings\" data-linktype=\"relative-path\">DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultBackColor\" data-linktype=\"relative-path\">DefaultBackColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultFont\" data-linktype=\"relative-path\">DefaultFont</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultForeColor\" data-linktype=\"relative-path\">DefaultForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultImeMode\" data-linktype=\"relative-path\">DefaultImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMargin\" data-linktype=\"relative-path\">DefaultMargin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMaximumSize\" data-linktype=\"relative-path\">DefaultMaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMinimumSize\" data-linktype=\"relative-path\">DefaultMinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultPadding\" data-linktype=\"relative-path\">DefaultPadding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefWndProc_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">DefWndProc(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DestroyHandle\" data-linktype=\"relative-path\">DestroyHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DisplayRectangle\" data-linktype=\"relative-path\">DisplayRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Disposing\" data-linktype=\"relative-path\">Disposing</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock\" data-linktype=\"relative-path\">Dock</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DockChanged\" data-linktype=\"relative-path\">DockChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_System_Object_System_Windows_Forms_DragDropEffects_\" data-linktype=\"relative-path\">DoDragDrop(Object,DragDropEffects)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DrawToBitmap_System_Drawing_Bitmap_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">DrawToBitmap(Bitmap,Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled\" data-linktype=\"relative-path\">Enabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_System_IAsyncResult_\" data-linktype=\"relative-path\">EndInvoke(IAsyncResult)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FindForm\" data-linktype=\"relative-path\">FindForm()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focused\" data-linktype=\"relative-path\">Focused</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font\" data-linktype=\"relative-path\">Font</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontHeight\" data-linktype=\"relative-path\">FontHeight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromChildHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromChildHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAccessibilityObjectById_System_Int32_\" data-linktype=\"relative-path\">GetAccessibilityObjectById(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAutoSizeMode\" data-linktype=\"relative-path\">GetAutoSizeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_\" data-linktype=\"relative-path\">GetChildAtPoint(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_System_Windows_Forms_GetChildAtPointSkip_\" data-linktype=\"relative-path\">GetChildAtPoint(Point,GetChildAtPointSkip)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetContainerControl\" data-linktype=\"relative-path\">GetContainerControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetNextControl_System_Windows_Forms_Control_System_Boolean_\" data-linktype=\"relative-path\">GetNextControl(Control,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetPreferredSize_System_Drawing_Size_\" data-linktype=\"relative-path\">GetPreferredSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetScaledBounds_System_Drawing_Rectangle_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">GetScaledBounds(Rectangle,SizeF,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetStyle_System_Windows_Forms_ControlStyles_\" data-linktype=\"relative-path\">GetStyle(ControlStyles)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetTopLevel\" data-linktype=\"relative-path\">GetTopLevel()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle\" data-linktype=\"relative-path\">Handle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HasChildren\" data-linktype=\"relative-path\">HasChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height\" data-linktype=\"relative-path\">Height</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide\" data-linktype=\"relative-path\">Hide()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeMode\" data-linktype=\"relative-path\">ImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeChanged\" data-linktype=\"relative-path\">ImeModeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InitLayout\" data-linktype=\"relative-path\">InitLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate\" data-linktype=\"relative-path\">Invalidate()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">Invalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Rectangle,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_\" data-linktype=\"relative-path\">Invalidate(Region)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Region,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidated\" data-linktype=\"relative-path\">Invalidated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_\" data-linktype=\"relative-path\">Invoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">Invoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeGotFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeGotFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeLostFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeLostFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeOnClick_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeOnClick(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaint_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaint(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaintBackground_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaintBackground(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired\" data-linktype=\"relative-path\">InvokeRequired</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsAccessible\" data-linktype=\"relative-path\">IsAccessible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsDisposed\" data-linktype=\"relative-path\">IsDisposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated\" data-linktype=\"relative-path\">IsHandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputChar_System_Char_\" data-linktype=\"relative-path\">IsInputChar(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsKeyLocked_System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">IsKeyLocked(Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMirrored\" data-linktype=\"relative-path\">IsMirrored</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMnemonic_System_Char_System_String_\" data-linktype=\"relative-path\">IsMnemonic(Char,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LayoutEngine\" data-linktype=\"relative-path\">LayoutEngine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left\" data-linktype=\"relative-path\">Left</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location\" data-linktype=\"relative-path\">Location</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Margin\" data-linktype=\"relative-path\">Margin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MarginChanged\" data-linktype=\"relative-path\">MarginChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MaximumSize\" data-linktype=\"relative-path\">MaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MinimumSize\" data-linktype=\"relative-path\">MinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys\" data-linktype=\"relative-path\">ModifierKeys</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseButtons\" data-linktype=\"relative-path\">MouseButtons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseCaptureChanged\" data-linktype=\"relative-path\">MouseCaptureChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MousePosition\" data-linktype=\"relative-path\">MousePosition</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Move\" data-linktype=\"relative-path\">Move</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_NotifyInvalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">NotifyInvalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnAutoSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnAutoSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackgroundImageChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackgroundImageChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackgroundImageLayoutChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackgroundImageLayoutChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCausesValidationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCausesValidationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnChangeUICues_System_Windows_Forms_UICuesEventArgs_\" data-linktype=\"relative-path\">OnChangeUICues(UICuesEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClick_System_EventArgs_\" data-linktype=\"relative-path\">OnClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClientSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnClientSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuStripChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuStripChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlAdded_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlAdded(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlRemoved_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlRemoved(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCreateControl\" data-linktype=\"relative-path\">OnCreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDockChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnDockChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDoubleClick_System_EventArgs_\" data-linktype=\"relative-path\">OnDoubleClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnEnabledChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnEnabledChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnEnter_System_EventArgs_\" data-linktype=\"relative-path\">OnEnter(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGiveFeedback_System_Windows_Forms_GiveFeedbackEventArgs_\" data-linktype=\"relative-path\">OnGiveFeedback(GiveFeedbackEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGotFocus_System_EventArgs_\" data-linktype=\"relative-path\">OnGotFocus(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnHelpRequested_System_Windows_Forms_HelpEventArgs_\" data-linktype=\"relative-path\">OnHelpRequested(HelpEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnImeModeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnImeModeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnInvalidated_System_Windows_Forms_InvalidateEventArgs_\" data-linktype=\"relative-path\">OnInvalidated(InvalidateEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyDown_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyDown(KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_\" data-linktype=\"relative-path\">OnKeyPress(KeyPressEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyUp_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyUp(KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLayout_System_Windows_Forms_LayoutEventArgs_\" data-linktype=\"relative-path\">OnLayout(LayoutEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLocationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnLocationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLostFocus_System_EventArgs_\" data-linktype=\"relative-path\">OnLostFocus(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMarginChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMarginChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseCaptureChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseCaptureChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseClick(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseDoubleClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseDoubleClick(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseDown_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseDown(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseEnter_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseEnter(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseHover_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseHover(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseMove_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseMove(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseWheel(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMove_System_EventArgs_\" data-linktype=\"relative-path\">OnMove(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnNotifyMessage_System_Windows_Forms_Message_\" data-linktype=\"relative-path\">OnNotifyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPaint(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaintBackground_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPaintBackground(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackgroundImageChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackgroundImageChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentEnabledChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentEnabledChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentFontChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentFontChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentVisibleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentVisibleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPreviewKeyDown_System_Windows_Forms_PreviewKeyDownEventArgs_\" data-linktype=\"relative-path\">OnPreviewKeyDown(PreviewKeyDownEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPrint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPrint(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnQueryContinueDrag_System_Windows_Forms_QueryContinueDragEventArgs_\" data-linktype=\"relative-path\">OnQueryContinueDrag(QueryContinueDragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnRegionChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRegionChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnResize_System_EventArgs_\" data-linktype=\"relative-path\">OnResize(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnStyleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnStyleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSystemColorsChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSystemColorsChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabIndexChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabIndexChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabStopChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabStopChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidated_System_EventArgs_\" data-linktype=\"relative-path\">OnValidated(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidating_System_ComponentModel_CancelEventArgs_\" data-linktype=\"relative-path\">OnValidating(CancelEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnVisibleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnVisibleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout\" data-linktype=\"relative-path\">PerformLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_System_Windows_Forms_Control_System_String_\" data-linktype=\"relative-path\">PerformLayout(Control,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToClient_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToClient(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToScreen_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToScreen(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreferredSize\" data-linktype=\"relative-path\">PreferredSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessControlMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessControlMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessDialogChar_System_Char_\" data-linktype=\"relative-path\">ProcessDialogChar(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyEventArgs_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyEventArgs(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyPreview_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyPreview(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessMnemonic_System_Char_\" data-linktype=\"relative-path\">ProcessMnemonic(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductName\" data-linktype=\"relative-path\">ProductName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductVersion\" data-linktype=\"relative-path\">ProductVersion</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PropagatingImeMode\" data-linktype=\"relative-path\">PropagatingImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryAccessibilityHelp\" data-linktype=\"relative-path\">QueryAccessibilityHelp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseDragEvent_System_Object_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">RaiseDragEvent(Object,DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseKeyEvent_System_Object_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">RaiseKeyEvent(Object,KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseMouseEvent_System_Object_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseEvent(Object,MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaisePaintEvent_System_Object_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">RaisePaintEvent(Object,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle\" data-linktype=\"relative-path\">RecreateHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreatingHandle\" data-linktype=\"relative-path\">RecreatingHandle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToClient_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToClient(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToScreen_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToScreen(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ReflectMessage_System_IntPtr_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ReflectMessage(IntPtr,Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Refresh\" data-linktype=\"relative-path\">Refresh()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Region\" data-linktype=\"relative-path\">Region</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RegionChanged\" data-linktype=\"relative-path\">RegionChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RenderRightToLeft\" data-linktype=\"relative-path\">RenderRightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBackColor\" data-linktype=\"relative-path\">ResetBackColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBindings\" data-linktype=\"relative-path\">ResetBindings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetCursor\" data-linktype=\"relative-path\">ResetCursor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetFont\" data-linktype=\"relative-path\">ResetFont()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetForeColor\" data-linktype=\"relative-path\">ResetForeColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetImeMode\" data-linktype=\"relative-path\">ResetImeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetMouseEventArgs\" data-linktype=\"relative-path\">ResetMouseEventArgs()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetRightToLeft\" data-linktype=\"relative-path\">ResetRightToLeft()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetText\" data-linktype=\"relative-path\">ResetText()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResizeRedraw\" data-linktype=\"relative-path\">ResizeRedraw</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout\" data-linktype=\"relative-path\">ResumeLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_System_Boolean_\" data-linktype=\"relative-path\">ResumeLayout(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right\" data-linktype=\"relative-path\">Right</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft\" data-linktype=\"relative-path\">RightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateContent_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateContent(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateHorizontal_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateHorizontal(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateLeftRight_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateLeftRight(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Drawing_SizeF_\" data-linktype=\"relative-path\">Scale(SizeF)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_\" data-linktype=\"relative-path\">Scale(Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_System_Single_\" data-linktype=\"relative-path\">Scale(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleChildren\" data-linktype=\"relative-path\">ScaleChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">ScaleControl(SizeF,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleCore_System_Single_System_Single_\" data-linktype=\"relative-path\">ScaleCore(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select\" data-linktype=\"relative-path\">Select()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">Select(Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_System_Windows_Forms_Control_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SendToBack\" data-linktype=\"relative-path\">SendToBack()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetAutoSizeMode_System_Windows_Forms_AutoSizeMode_\" data-linktype=\"relative-path\">SetAutoSizeMode(AutoSizeMode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetClientSizeCore(Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetStyle_System_Windows_Forms_ControlStyles_System_Boolean_\" data-linktype=\"relative-path\">SetStyle(ControlStyles,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetTopLevel_System_Boolean_\" data-linktype=\"relative-path\">SetTopLevel(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetVisibleCore_System_Boolean_\" data-linktype=\"relative-path\">SetVisibleCore(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show\" data-linktype=\"relative-path\">Show()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowFocusCues\" data-linktype=\"relative-path\">ShowFocusCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowKeyboardCues\" data-linktype=\"relative-path\">ShowKeyboardCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size\" data-linktype=\"relative-path\">Size</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeFromClientSize_System_Drawing_Size_\" data-linktype=\"relative-path\">SizeFromClientSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_StyleChanged\" data-linktype=\"relative-path\">StyleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout\" data-linktype=\"relative-path\">SuspendLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndex\" data-linktype=\"relative-path\">TabIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndexChanged\" data-linktype=\"relative-path\">TabIndexChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStop\" data-linktype=\"relative-path\">TabStop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStopChanged\" data-linktype=\"relative-path\">TabStopChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top\" data-linktype=\"relative-path\">Top</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TopLevelControl\" data-linktype=\"relative-path\">TopLevelControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update\" data-linktype=\"relative-path\">Update()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds\" data-linktype=\"relative-path\">UpdateBounds()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateStyles\" data-linktype=\"relative-path\">UpdateStyles()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateZOrder\" data-linktype=\"relative-path\">UpdateZOrder()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UseWaitCursor\" data-linktype=\"relative-path\">UseWaitCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WindowTarget\" data-linktype=\"relative-path\">WindowTarget</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class implements the core features of text manipulation controls, such as <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> and <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>. These include text selection, <strong>Clipboard</strong> functionality, multiline text control support, and many events.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_AcceptsTab\" data-linktype=\"self-bookmark\">AcceptsTab</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_AutoSize\" data-linktype=\"self-bookmark\">AutoSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BackColor\" data-linktype=\"self-bookmark\">BackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BackgroundImage\" data-linktype=\"self-bookmark\">BackgroundImage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BackgroundImageLayout\" data-linktype=\"self-bookmark\">BackgroundImageLayout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BorderStyle\" data-linktype=\"self-bookmark\">BorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the border type of the text box control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_CanEnableIme\" data-linktype=\"self-bookmark\">CanEnableIme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property can be set to an active value, to enable IME support.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_CanUndo\" data-linktype=\"self-bookmark\">CanUndo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the user can undo the previous operation in a text box control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_CreateParams\" data-linktype=\"self-bookmark\">CreateParams</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the required creation parameters when the control handle is created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_DefaultCursor\" data-linktype=\"self-bookmark\">DefaultCursor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default cursor for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_DefaultSize\" data-linktype=\"self-bookmark\">DefaultSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default size of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_DoubleBuffered\" data-linktype=\"self-bookmark\">DoubleBuffered</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed. This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ForeColor\" data-linktype=\"self-bookmark\">ForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the foreground color of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_HideSelection\" data-linktype=\"self-bookmark\">HideSelection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ImeModeBase\" data-linktype=\"self-bookmark\">ImeModeBase</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the Input Method Editor (IME) mode of a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Lines\" data-linktype=\"self-bookmark\">Lines</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the lines of text in a text box control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_MaxLength\" data-linktype=\"self-bookmark\">MaxLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the maximum number of characters the user can type or paste into the text box control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Modified\" data-linktype=\"self-bookmark\">Modified</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Multiline\" data-linktype=\"self-bookmark\">Multiline</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this is a multiline text box control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Padding\" data-linktype=\"self-bookmark\">Padding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_PreferredHeight\" data-linktype=\"self-bookmark\">PreferredHeight</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the preferred height for a text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ReadOnly\" data-linktype=\"self-bookmark\">ReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether text in the text box is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_SelectedText\" data-linktype=\"self-bookmark\">SelectedText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating the currently selected text in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_SelectionLength\" data-linktype=\"self-bookmark\">SelectionLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of characters selected in the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_SelectionStart\" data-linktype=\"self-bookmark\">SelectionStart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the starting point of text selected in the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ShortcutsEnabled\" data-linktype=\"self-bookmark\">ShortcutsEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the defined shortcuts are enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the current text in the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_TextLength\" data-linktype=\"self-bookmark\">TextLength</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the length of text in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_WordWrap\" data-linktype=\"self-bookmark\">WordWrap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_AppendText_System_String_\" data-linktype=\"self-bookmark\">AppendText(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends text to the current text of a text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all text from the text box control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ClearUndo\" data-linktype=\"self-bookmark\">ClearUndo()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears information about the most recent operation from the undo buffer of the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Copy\" data-linktype=\"self-bookmark\">Copy()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the current selection in the text box to the <strong>Clipboard</strong>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_CreateHandle\" data-linktype=\"self-bookmark\">CreateHandle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a handle for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Cut\" data-linktype=\"self-bookmark\">Cut()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Moves the current selection in the text box to the <strong>Clipboard</strong>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_DeselectAll\" data-linktype=\"self-bookmark\">DeselectAll()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.SelectionLength*</span> property is zero so that no characters are selected in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_GetCharFromPosition_System_Drawing_Point_\" data-linktype=\"self-bookmark\">GetCharFromPosition(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the character that is closest to the specified location within the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_GetCharIndexFromPosition_System_Drawing_Point_\" data-linktype=\"self-bookmark\">GetCharIndexFromPosition(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the index of the character nearest to the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_GetFirstCharIndexFromLine_System_Int32_\" data-linktype=\"self-bookmark\">GetFirstCharIndexFromLine(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the index of the first character of a given line.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_GetFirstCharIndexOfCurrentLine\" data-linktype=\"self-bookmark\">GetFirstCharIndexOfCurrentLine()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the index of the first character of the current line.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_GetLineFromCharIndex_System_Int32_\" data-linktype=\"self-bookmark\">GetLineFromCharIndex(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the line number from the specified character position within the text of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_GetPositionFromCharIndex_System_Int32_\" data-linktype=\"self-bookmark\">GetPositionFromCharIndex(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the location within the control at the specified character index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_IsInputKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">IsInputKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified key is an input key or a special key that requires preprocessing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnAcceptsTabChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAcceptsTabChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AcceptsTabChanged\" data-linktype=\"relative-path\">AcceptsTabChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnBorderStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBorderStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_BorderStyleChanged\" data-linktype=\"relative-path\">BorderStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnFontChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnFontChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnHandleCreated_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleCreated(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnHandleDestroyed_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleDestroyed(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnHideSelectionChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHideSelectionChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raise the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_HideSelectionChanged\" data-linktype=\"relative-path\">HideSelectionChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnModifiedChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnModifiedChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ModifiedChanged\" data-linktype=\"relative-path\">ModifiedChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnMouseUp_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseUp(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnMultilineChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMultilineChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_MultilineChanged\" data-linktype=\"relative-path\">MultilineChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnPaddingChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPaddingChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This method is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnReadOnlyChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnReadOnlyChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ReadOnlyChanged\" data-linktype=\"relative-path\">ReadOnlyChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_OnTextChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnTextChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Paste\" data-linktype=\"self-bookmark\">Paste()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Replaces the current selection in the text box with the contents of the <strong>Clipboard</strong>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessCmdKey(Message,Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a command key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ProcessDialogKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessDialogKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a dialog key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ScrollToCaret\" data-linktype=\"self-bookmark\">ScrollToCaret()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scrolls the contents of the control to the current caret position.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Select_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Select(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects a range of text in the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_SelectAll\" data-linktype=\"self-bookmark\">SelectAll()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects all text in the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"self-bookmark\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the specified bounds of the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string that represents the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Undo\" data-linktype=\"self-bookmark\">Undo()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Undoes the last edit operation in the text box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_WndProc_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">WndProc(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes Windows messages.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_AcceptsTabChanged\" data-linktype=\"self-bookmark\">AcceptsTabChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.AcceptsTab*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_AutoSizeChanged\" data-linktype=\"self-bookmark\">AutoSizeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This event is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BackgroundImageChanged\" data-linktype=\"self-bookmark\">BackgroundImageChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.BackgroundImage*</span> property changes. This event is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BackgroundImageLayoutChanged\" data-linktype=\"self-bookmark\">BackgroundImageLayoutChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.BackgroundImageLayout*</span> property changes. This event is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_BorderStyleChanged\" data-linktype=\"self-bookmark\">BorderStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.BorderStyle*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Click\" data-linktype=\"self-bookmark\">Click</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the text box is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_HideSelectionChanged\" data-linktype=\"self-bookmark\">HideSelectionChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.HideSelection*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ModifiedChanged\" data-linktype=\"self-bookmark\">ModifiedChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.Modified*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_MouseClick\" data-linktype=\"self-bookmark\">MouseClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the control is clicked by the mouse.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_MultilineChanged\" data-linktype=\"self-bookmark\">MultilineChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.Multiline*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_PaddingChanged\" data-linktype=\"self-bookmark\">PaddingChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This event is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_Paint\" data-linktype=\"self-bookmark\">Paint</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the control is redrawn. This event is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_TextBoxBase_ReadOnlyChanged\" data-linktype=\"self-bookmark\">ReadOnlyChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.ReadOnly*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_AcceptsTab\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_AcceptsTab_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptsTab</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether pressing the TAB key in a multiline text box control types a TAB character in the control instead of moving the focus to the next control in the tab order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AcceptsTab { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if users can enter tabs in a multiline text box using the TAB key; <code>false</code> if pressing the TAB key moves the focus. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property must also be <code>true</code> to get a TAB character in the control.  </p>\n<p> If the AcceptsTab property is set to <code>true</code>, the user must press CTRL+TAB to move the focus to the next control in the tab order.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to create a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control with vertical scroll bars. This example also uses the AcceptsTab, <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_AcceptsReturn_\" data-linktype=\"relative-path\">AcceptsReturn</a>, and <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> properties to make the multiline text box control useful for creating text documents.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public:\n   void CreateMyMultilineTextBox()\n   {\n      // Create an instance of a TextBox control.\n      TextBox^ textBox1 = gcnew TextBox;\n      \n      // Set the Multiline property to true.\n      textBox1-&gt;Multiline = true;\n      // Add vertical scroll bars to the TextBox control.\n      textBox1-&gt;ScrollBars = ScrollBars::Vertical;\n      // Allow the RETURN key in the TextBox control.\n      textBox1-&gt;AcceptsReturn = true;\n      // Allow the TAB key to be entered in the TextBox control.\n      textBox1-&gt;AcceptsTab = true;\n      // Set WordWrap to true to allow text to wrap to the next line.\n      textBox1-&gt;WordWrap = true;\n      // Set the default text of the control.\n      textBox1-&gt;Text = &quot;Welcome!&quot; + Environment::NewLine + &quot;Second Line&quot;;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public void CreateMyMultilineTextBox()\n {\n    // Create an instance of a TextBox control.\n    TextBox textBox1 = new TextBox();\n    \n    // Set the Multiline property to true.\n    textBox1.Multiline = true;\n    // Add vertical scroll bars to the TextBox control.\n    textBox1.ScrollBars = ScrollBars.Vertical;\n    // Allow the RETURN key in the TextBox control.\n    textBox1.AcceptsReturn = true;\n    // Allow the TAB key to be entered in the TextBox control.\n    textBox1.AcceptsTab = true;\n    // Set WordWrap to true to allow text to wrap to the next line.\n    textBox1.WordWrap = true;\n    // Set the default text of the control.\n    textBox1.Text = &quot;Welcome!&quot; + Environment.NewLine + &quot;Second Line&quot;;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">    Public Sub CreateMyMultilineTextBox()\n        &#39; Create an instance of a TextBox control.\n        Dim textBox1 As New TextBox()\n        \n        &#39; Set the Multiline property to true.\n        textBox1.Multiline = True\n        &#39; Add vertical scroll bars to the TextBox control.\n        textBox1.ScrollBars = ScrollBars.Vertical\n        &#39; Allow the RETURN key in the TextBox control.\n        textBox1.AcceptsReturn = True\n        &#39; Allow the TAB key to be entered in the TextBox control.\n        textBox1.AcceptsTab = True\n        &#39; Set WordWrap to true to allow text to wrap to the next line.\n        textBox1.WordWrap = True\n        &#39; Set the default text of the control.\n        textBox1.Text = &quot;Welcome!&quot; &amp; Environment.NewLine &amp; &quot;Second Line&quot;\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_AutoSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_AutoSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the height of the control automatically adjusts when the font assigned to the control is changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool AutoSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the height of the control automatically adjusts when the font is changed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you set the AutoSize property to <code>true</code> for a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a> changes, the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> expands or contracts the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> to accommodate the larger or smaller text. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> of the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> does not change.  </p>\n<p> If you want to change the size of the control as the user enters text, you can use a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control and use its <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_ContentsResized\" data-linktype=\"relative-path\">ContentsResized</a> event to change its size.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example assumes that you have a form with two text boxes, two buttons, and click events for each of the buttons. The example demonstrates the AutoSize property by setting it to <code>true</code> for one text box and <code>false</code> for the other. When you click one button the text boxes are filled with a smaller text, and when you click the other button the text boxes are filled with larger text. The text box that has AutoSize set to <code>true</code> expands in height to accommodate the larger text. The width does not change.  </p>\n<pre><code class=\"lang-cs\" name=\"SystemWindowsFormsAutoSize#1\">private void button1_Click(object sender, EventArgs e)\n{\n    this.textBox1.AutoSize = true;\n    this.textBox1.Text = &quot;Hello world!&quot;;\n    this.textBox1.Font = new System.Drawing.Font(&quot;Arial&quot;, 10, FontStyle.Regular);\n\n    this.textBox2.AutoSize = false;\n    this.textBox2.Text = &quot;Hello world!&quot;;\n    this.textBox2.Font = new System.Drawing.Font(&quot;Arial&quot;, 10, FontStyle.Regular);\n}\n\nprivate void button2_Click(object sender, EventArgs e)\n{\n    this.textBox1.AutoSize = true;\n    this.textBox1.Text = &quot;Goodbye world!&quot;;\n    this.textBox1.Font = new System.Drawing.Font(&quot;ArialBlack&quot;, 14, FontStyle.Regular);\n\n    this.textBox2.AutoSize = false;\n    this.textBox2.Text = &quot;Goodbye world!&quot;;\n    this.textBox2.Font = new System.Drawing.Font(&quot;ArialBlack&quot;, 14, FontStyle.Regular);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"SystemWindowsFormsAutoSize#1\">Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click\n\n    Me.TextBox1.AutoSize = True\n    Me.TextBox1.Text = &quot;Hello world!&quot;\n    Me.TextBox1.Font = New System.Drawing.Font(&quot;Arial&quot;, 10, FontStyle.Regular)\n\n    Me.TextBox2.AutoSize = False\n    Me.TextBox2.Text = &quot;Hello world!&quot;\n    Me.TextBox2.Font = New System.Drawing.Font(&quot;Arial&quot;, 10, FontStyle.Regular)\nEnd Sub\n\n\nPrivate Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click\n\n    Me.TextBox1.AutoSize = True\n        Me.TextBox1.Text = &quot;Goodbye world!&quot;\n    Me.TextBox1.Font = New System.Drawing.Font(&quot;ArialBlack&quot;, 14, FontStyle.Regular)\n\n    Me.TextBox2.AutoSize = False\n        Me.TextBox2.Text = &quot;Goodbye world!&quot;\n    Me.TextBox2.Font = New System.Drawing.Font(&quot;ArialBlack&quot;, 14, FontStyle.Regular)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_BackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color BackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the BackColor property to change the background color of the text control to blend into the color scheme of your forms.  </p>\n<p> To change the color of the text within the control, use the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property. When setting the BackColor property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the BackColor and <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> properties are both set to <code>Color.Black</code>, the text within your textbox control will not be visible.  </p>\n<p> This property might be over ridden if the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property of the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> is set to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BackgroundImage\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_BackgroundImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImage</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Image BackgroundImage { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </div>\r\n                  <p>The background image for the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BackgroundImageLayout\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_BackgroundImageLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageLayout</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_BorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the border type of the text box control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.BorderStyle BorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> that represents the border type of the text box control. The default is <code>Fixed3D</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>A value that is not within the range of valid values for the enumeration was assigned to the property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the BorderStyle property to create borderless and flat style controls, in addition to the default three-dimensional control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The derived class, <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a>, does not support the <code>BorderStyle.FixedSingle</code> style. This style will cause the <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> to use the <code>BorderStyle.Fixed3D</code> style instead.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to create a text box that can properly display text using 20-point Arial with a single border. This example uses the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_PreferredHeight_\" data-linktype=\"relative-path\">PreferredHeight</a> property to determine the appropriate height of the control after the font and BorderStyle have been assigned to the control.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.BorderStyle Example#1\">public void CreateTextBox()\n {\n    // Create an instance of the TextBox control.\n    TextBox textBox1 = new TextBox();\n \n    // Set the TextBox Font property to Arial 20.\n    textBox1.Font = new Font (&quot;Arial&quot; , 20);\n    // Set the BorderStyle property to FixedSingle.\n    textBox1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle;\n    // Make the height of the control equal to the preferred height.\n    textBox1.Height = textBox1.PreferredHeight;\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.BorderStyle Example#1\">public:\n   void CreateTextBox()\n   {\n      // Create an instance of the TextBox control.\n      TextBox^ textBox1 = gcnew TextBox;\n      \n      // Set the TextBox Font property to Arial 20.\n      textBox1-&gt;Font = gcnew System::Drawing::Font( &quot;Arial&quot;, 20 );\n      // Set the BorderStyle property to FixedSingle.\n      textBox1-&gt;BorderStyle = System::Windows::Forms::BorderStyle::FixedSingle;\n      // Make the height of the control equal to the preferred height.\n      textBox1-&gt;Height = textBox1-&gt;PreferredHeight;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.BorderStyle Example#1\">    Public Sub CreateTextBox()\n        &#39; Create an instance of the TextBox control.\n        Dim textBox1 As New TextBox()\n        \n        &#39; Set the TextBox Font property to Arial 20.\n        textBox1.Font = New Font(&quot;Arial&quot;, 20)\n        &#39; Set the BorderStyle property to FixedSingle.\n        textBox1.BorderStyle = System.Windows.Forms.BorderStyle.FixedSingle\n        &#39; Make the height of the control equal to the preferred height.\n        textBox1.Height = textBox1.PreferredHeight\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_CanEnableIme\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_CanEnableIme_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanEnableIme</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property can be set to an active value, to enable IME support.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool CanEnableIme { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>false</code> if the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.ReadOnly*</span> property is <code>true</code> or if this <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> class is set to use a password mask character; otherwise, <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_CanUndo\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_CanUndo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanUndo</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the user can undo the previous operation in a text box control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanUndo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can undo the previous operation performed in a text box control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this method returns <code>true</code>, you can call the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Undo_\" data-linktype=\"relative-path\">Undo</a> method to undo the last operation in a text box. You can use this method in the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event of a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, or in code that manages the state of buttons on a <a class=\"xref\" href=\"system.windows.forms.toolbar\" data-linktype=\"relative-path\">ToolBar</a> to enable or disable the ability to undo the previous operation in a text box control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.CanUndo Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.CanUndo Example#1\">private:\n   void Menu_Copy( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart +\n                  textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.CanUndo Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_CreateParams\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_CreateParams_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateParams</div>        \r\n          </div>\r\n    \r\n            <p>Gets the required creation parameters when the control handle is created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.CreateParams CreateParams { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a> that contains the required creation parameters when the handle to the control is created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_DefaultCursor\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_DefaultCursor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultCursor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default cursor for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.Cursor DefaultCursor { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a></div>\r\n                  </div>\r\n                  <p>An object of type <a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a> representing the current default cursor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Override DefaultCursor to configure a default cursor for your control. This is more efficient than setting the cursor in the control&#39;s constructor, and gives automatic support for certain cursor-related designer functions.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_DefaultSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_DefaultSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default size of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Drawing.Size DefaultSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>The default <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_DoubleBuffered\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_DoubleBuffered_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoubleBuffered</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether control drawing is done in a buffer before the control is displayed. This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool DoubleBuffered { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to implement double buffering on the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the foreground color of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color ForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the control&#39;s foreground color.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the ForeColor property to change the color of the text within the control to match the text of other controls on your form. You can also use this property to highlight a specific text box that contains an invalid value.  </p>\n<p> To change the background color of the control, use the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property. When setting the ForeColor property of your text control, ensure that the color you choose does not cause the text of the control to disappear. For example, if the ForeColor and <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_BackColor_\" data-linktype=\"relative-path\">BackColor</a> properties are both set to <code>Color.Black</code>, the text within your textbox control will not be visible.  </p>\n<p> This property might be over ridden if the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> property of the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> is set to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_HideSelection\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_HideSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HideSelection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the selected text in the text box control remains highlighted when the control loses focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HideSelection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the selected text does not appear highlighted when the text box control loses focus; <code>false</code>, if the selected text remains highlighted when the text box control loses focus. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to keep text highlighted in a text box control while another form or a dialog box has focus, such as a spelling checker dialog box.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the HideSelection property. To run the example, paste the following code in a form. Call the <code>InitializeTextBox</code> method in the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.TextBoxBaseScrolling#3\">\t//Declare a textbox called TextBox1.\n\tinternal System.Windows.Forms.TextBox TextBox1;\n\n\t//Initialize TextBox1.\n\tprivate void InitializeTextBox()\n\t{\n\t\tthis.TextBox1 = new TextBox();\n\t\tthis.TextBox1.Location = new System.Drawing.Point(32, 24);\n\t\tthis.TextBox1.Name = &quot;TextBox1&quot;;\n\t\tthis.TextBox1.Size = new System.Drawing.Size(136, 20);\n\t\tthis.TextBox1.TabIndex = 1;\n\t\tthis.TextBox1.Text = &quot;Type and hit enter here...&quot;;\n\n\t\t//Keep the selection highlighted, even after textbox loses focus.\n\t\tTextBox1.HideSelection = false;\n\t\tthis.Controls.Add(TextBox1);\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.TextBoxBaseScrolling#3\">   //Declare a textbox called TextBox1.\ninternal:\n   System::Windows::Forms::TextBox^ TextBox1;\n\nprivate:\n\n   //Initialize TextBox1.\n   void InitializeTextBox()\n   {\n      this-&gt;TextBox1 = gcnew TextBox;\n      this-&gt;TextBox1-&gt;Location = System::Drawing::Point( 32, 24 );\n      this-&gt;TextBox1-&gt;Name = &quot;TextBox1&quot;;\n      this-&gt;TextBox1-&gt;Size = System::Drawing::Size( 136, 20 );\n      this-&gt;TextBox1-&gt;TabIndex = 1;\n      this-&gt;TextBox1-&gt;Text = &quot;Type and hit enter here...&quot;;\n      \n      //Keep the selection highlighted, even after textbox loses focus.\n      TextBox1-&gt;HideSelection = false;\n      this-&gt;Controls-&gt;Add( TextBox1 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.TextBoxBaseScrolling#3\">    &#39;Declare a textbox called TextBox1.\n    Friend WithEvents TextBox1 As System.Windows.Forms.TextBox\n\n    &#39;Initialize TextBox1.\n    Private Sub InitializeTextBox()\n        Me.TextBox1 = New TextBox\n        Me.TextBox1.Location = New System.Drawing.Point(32, 24)\n        Me.TextBox1.Name = &quot;TextBox1&quot;\n        Me.TextBox1.Size = New System.Drawing.Size(136, 20)\n        Me.TextBox1.TabIndex = 1\n        Me.TextBox1.Text = &quot;Type and hit enter here...&quot;\n\n        &#39;Keep the selection highlighted, even after textbox loses focus.\n        TextBox1.HideSelection = False\n        Me.Controls.Add(TextBox1)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ImeModeBase\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ImeModeBase_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ImeModeBase</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the Input Method Editor (IME) mode of a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.ImeMode ImeModeBase { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a></div>\r\n                  </div>\r\n                  <p>The IME mode of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Lines\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Lines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Lines</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the lines of text in a text box control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] Lines { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>An array of strings that contains the text in a text box control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each element in the array becomes a line of text in the text box control. If the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property of the text box control is set to <code>true</code> and a newline character appears in the text, the text following the newline character is added to a new element in the array and displayed on a separate line.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> By default, the collection of lines is a read-only copy of the lines in the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>. To get a writable collection of lines, use code similar to the following: <code>textBox1.Lines = new string[] { &quot;abcd&quot; };</code></p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to extract all strings of text from a multiline text box control and displays them using the <a class=\"xref\" href=\"system.diagnostics.debug#System_Diagnostics_Debug_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> method. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control has been created, named <code>textBox1</code>, and that it has been filled with lines of text.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.Lines Example#1\">public void ViewMyTextBoxContents()\n {\n    // Create a string array and store the contents of the Lines property.\n    string[] tempArray = textBox1.Lines;\n \n    // Loop through the array and send the contents of the array to debug window.\n    for(int counter=0; counter &lt; tempArray.Length;counter++)\n    {\n       System.Diagnostics.Debug.WriteLine(tempArray[counter]);\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.Lines Example#1\">Public Sub ViewMyTextBoxContents()\n    Dim counter as Integer\n    &#39;Create a string array and store the contents of the Lines property.\n    Dim tempArray() as String\n    tempArray = textBox1.Lines\n    \n    &#39;Loop through the array and send the contents of the array to debug window.\n    For counter = 0 to tempArray.GetUpperBound(0)\n        System.Diagnostics.Debug.WriteLine( tempArray(counter) )\n    Next\n End Sub\n \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.Lines Example#1\">public:\n   void ViewMyTextBoxContents()\n   {\n      #if defined(DEBUG)\n      // Create a string array and store the contents of the Lines property.\n      array&lt;String^&gt;^ tempArray = gcnew array&lt;String^&gt;( textBox1-&gt;Lines-&gt;Length );\n      tempArray = textBox1-&gt;Lines;\n      \n      // Loop through the array and send the contents of the array to debug window.\n      for ( int counter = 0; counter &lt; tempArray-&gt;Length; counter++ )\n      {\n         System::Diagnostics::Debug::WriteLine( tempArray[ counter ] );\n      }\n      #endif\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_MaxLength\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_MaxLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxLength</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the maximum number of characters the user can type or paste into the text box control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int MaxLength { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters that can be entered into the control. The default is 32767.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value assigned to the property is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers, or to restrict the length of text entered when the data is to be entered in a database. You can limit the text entered into the control to the maximum length of the corresponding field in the database.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In code, you can set the value of the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property to a value that has a length greater than the value specified by the MaxLength property. This property only affects text entered into the control at run time.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the derived class, <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, to create a text box that is used to accept a password. This example uses the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_CharacterCasing_\" data-linktype=\"relative-path\">CharacterCasing</a> property to change all characters typed to uppercase and the MaxLength property to restrict the password length to eight characters. This example also uses the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_TextAlign_\" data-linktype=\"relative-path\">TextAlign</a> property to center the password in the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.MaxLength Example#1\">public void CreateMyPasswordTextBox()\n {\n    // Create an instance of the TextBox control.\n    TextBox textBox1 = new TextBox();\n    // Set the maximum length of text in the control to eight.\n    textBox1.MaxLength = 8;\n    // Assign the asterisk to be the password character.\n    textBox1.PasswordChar = &#39;*&#39;;\n    // Change all text entered to be uppercase.\n    textBox1.CharacterCasing = CharacterCasing.Upper;\n    // Align the text in the center of the TextBox control.\n    textBox1.TextAlign = HorizontalAlignment.Center;\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.MaxLength Example#1\">public:\n   void CreateMyPasswordTextBox()\n   {\n      // Create an instance of the TextBox control.\n      TextBox^ textBox1 = gcnew TextBox;\n      // Set the maximum length of text in the control to eight.\n      textBox1-&gt;MaxLength = 8;\n      // Assign the asterisk to be the password character.\n      textBox1-&gt;PasswordChar = &#39;*&#39;;\n      // Change all text entered to be uppercase.\n      textBox1-&gt;CharacterCasing = CharacterCasing::Upper;\n      // Align the text in the center of the TextBox control.\n      textBox1-&gt;TextAlign = HorizontalAlignment::Center;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.MaxLength Example#1\"> Public Sub CreateMyPasswordTextBox()\n     &#39; Create an instance of the TextBox control.\n     Dim textBox1 As New TextBox()\n     &#39; Set the maximum length of text in the control to eight.\n     textBox1.MaxLength = 8\n     &#39; Assign the asterisk to be the password character.\n     textBox1.PasswordChar = &quot;*&quot;c\n     &#39; Change all text entered to be uppercase.\n     textBox1.CharacterCasing = CharacterCasing.Upper\n     &#39; Align the text in the center of the TextBox control.\n     textBox1.TextAlign = HorizontalAlignment.Center\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Modified\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Modified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Modified</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates that the text box control has been modified by the user since the control was created or its contents were last set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Modified { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control&#39;s contents have been modified; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to determine if the user has modified the contents of the text box control. You can also set this property in code to indicate that changes were made to the text box control by the application. This property can be used by validation and data-saving methods to determine if changes were made in a text box control so the changed contents can be validated or saved.  </p>\n<p> If you change the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property programmatically, the Modified property reverts to <code>false</code>. This does not raise the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ModifiedChanged\" data-linktype=\"relative-path\">ModifiedChanged</a> event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event for a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to determine if the contents of the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control have changed since the control was filled with data. The example uses a string to store the original contents of the control and compares it against the contents of the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> to determine if the contents have changed. If the contents have changed, the Modified property is set to <code>true</code>. Otherwise, it is reset to <code>false</code>. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created and that a <code>String</code> variable named <code>originalText</code> has been created to store the original text for the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.Modified Example#1\">private:\n   void TextBox1_TextChanged( Object^ sender, EventArgs^ e )\n   {\n      /* Check to see if the change made does not return the\n         control to its original state. */\n      if ( originalText != textBox1-&gt;Text )\n      {\n         // Set the Modified property to true to reflect the change.\n         textBox1-&gt;Modified = true;\n      }\n      else\n      {\n         // Contents of textBox1 have not changed, reset the Modified property.\n         textBox1-&gt;Modified = false;\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.Modified Example#1\">private void TextBox1_TextChanged(object sender, EventArgs e)\n {\n    /* Check to see if the change made does not return the\n       control to its original state. */\n    if (originalText != textBox1.Text)\n       // Set the Modified property to true to reflect the change.\n       textBox1.Modified = true;\n    else\n       // Contents of textBox1 have not changed, reset the Modified property.\n       textBox1.Modified = false;\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.Modified Example#1\"> Private Sub TextBox1_TextChanged(sender As Object, e As EventArgs)\n     &#39; Check to see if the change made does not return the\n     &#39; control to its original state. \n     If originalText &lt;&gt; textBox1.Text Then\n         &#39; Set the Modified property to true to reflect the change.\n         textBox1.Modified = True\n         &#39; Contents of textBox1 have not changed, reset the Modified property.\n     Else\n         textBox1.Modified = False\n     End If\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Multiline\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Multiline_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Multiline</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this is a multiline text box control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Multiline { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the control is a multiline text box control; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A multiline text box allows you to display more than one line of text in the control. If the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> property is set to <code>true</code>, text entered into the multiline text box is wrapped to the next line in the control. If the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> property is set to <code>false</code>, text entered into the multiline text box control will be displayed on the same line until a newline character is entered.  </p>\n<p> The following can be used as newline characters:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.environment#System_Environment_NewLine_\" data-linktype=\"relative-path\">NewLine</a>  \n</li>\n<li><p>ControlChars.CrLf  </p>\n</li>\n<li><p>vbCrLf (Visual Basic only)  </p>\n<p>You can add scroll bars to a text box using the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_ScrollBars_\" data-linktype=\"relative-path\">ScrollBars</a> property to display horizontal and/or vertical scroll bars. This allows the user to scroll through the text that extends beyond the dimensions of the control.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the default value of the Multiline property is <code>false</code>, the default size of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> will be in accordance with the font size even if you resize the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>. To get a consistent size for your <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, set its <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property to <code>true</code>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> On Japanese operating systems, if the Multiline property is set to <code>true</code>, setting the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_PasswordChar_\" data-linktype=\"relative-path\">PasswordChar</a> property will display the text of the password, thus compromising system security. Therefore, on Japanese operating systems, set the Multiline property to <code>false</code> if you set the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_PasswordChar_\" data-linktype=\"relative-path\">PasswordChar</a> property.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This property is set to <code>false</code> by default for all derived classes, with the exception of the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control.  </p>\n</div>\n<p> For a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control, the <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property affects whether or not the control will automatically resize, as follows:  </p>\n<ul>\n<li><p>If <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> is set to <code>true</code> and <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_Multiline_\" data-linktype=\"relative-path\">Multiline</a> is set to <code>true</code>, <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> will not automatically resize.  </p>\n</li>\n<li><p>If <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> is set to <code>true</code> and <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_Multiline_\" data-linktype=\"relative-path\">Multiline</a> is set to <code>false</code>, <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> will automatically resize.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to create a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control with vertical scroll bars. This example also uses the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AcceptsTab_\" data-linktype=\"relative-path\">AcceptsTab</a>, <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_AcceptsReturn_\" data-linktype=\"relative-path\">AcceptsReturn</a>, and <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> properties to make the multiline text box control useful for creating text documents.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public:\n   void CreateMyMultilineTextBox()\n   {\n      // Create an instance of a TextBox control.\n      TextBox^ textBox1 = gcnew TextBox;\n      \n      // Set the Multiline property to true.\n      textBox1-&gt;Multiline = true;\n      // Add vertical scroll bars to the TextBox control.\n      textBox1-&gt;ScrollBars = ScrollBars::Vertical;\n      // Allow the RETURN key in the TextBox control.\n      textBox1-&gt;AcceptsReturn = true;\n      // Allow the TAB key to be entered in the TextBox control.\n      textBox1-&gt;AcceptsTab = true;\n      // Set WordWrap to true to allow text to wrap to the next line.\n      textBox1-&gt;WordWrap = true;\n      // Set the default text of the control.\n      textBox1-&gt;Text = &quot;Welcome!&quot; + Environment::NewLine + &quot;Second Line&quot;;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public void CreateMyMultilineTextBox()\n {\n    // Create an instance of a TextBox control.\n    TextBox textBox1 = new TextBox();\n    \n    // Set the Multiline property to true.\n    textBox1.Multiline = true;\n    // Add vertical scroll bars to the TextBox control.\n    textBox1.ScrollBars = ScrollBars.Vertical;\n    // Allow the RETURN key in the TextBox control.\n    textBox1.AcceptsReturn = true;\n    // Allow the TAB key to be entered in the TextBox control.\n    textBox1.AcceptsTab = true;\n    // Set WordWrap to true to allow text to wrap to the next line.\n    textBox1.WordWrap = true;\n    // Set the default text of the control.\n    textBox1.Text = &quot;Welcome!&quot; + Environment.NewLine + &quot;Second Line&quot;;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">    Public Sub CreateMyMultilineTextBox()\n        &#39; Create an instance of a TextBox control.\n        Dim textBox1 As New TextBox()\n        \n        &#39; Set the Multiline property to true.\n        textBox1.Multiline = True\n        &#39; Add vertical scroll bars to the TextBox control.\n        textBox1.ScrollBars = ScrollBars.Vertical\n        &#39; Allow the RETURN key in the TextBox control.\n        textBox1.AcceptsReturn = True\n        &#39; Allow the TAB key to be entered in the TextBox control.\n        textBox1.AcceptsTab = True\n        &#39; Set WordWrap to true to allow text to wrap to the next line.\n        textBox1.WordWrap = True\n        &#39; Set the default text of the control.\n        textBox1.Text = &quot;Welcome!&quot; &amp; Environment.NewLine &amp; &quot;Second Line&quot;\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Padding\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Padding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Padding</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Padding Padding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_PreferredHeight\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_PreferredHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreferredHeight</div>        \r\n          </div>\r\n    \r\n            <p>Gets the preferred height for a text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PreferredHeight { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The preferred height of a text box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size returned by this property is based on the font height and border style of the text box. You can use this property to determine the appropriate size of the text box to ensure that text is properly displayed in the control. The value returned by this property is in pixels.  </p>\n<p> The value of PreferredHeight represents the minimum height the text box must have in order to display a single line of text without clipping the text on the top or bottom. This value is the same whether the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property is set to <code>true</code> or <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ReadOnly\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether text in the text box is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ReadOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the text box is read-only; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, the contents of the control cannot be changed by the user at runtime. With this property set to <code>true</code>, you can still set the value of the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property in code. You can use this feature instead of disabling the control with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to allow the contents to be copied and ToolTips to be shown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_SelectedText\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_SelectedText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedText</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating the currently selected text in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string SelectedText { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the currently selected text in the text box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can assign text to this property to change the text currently selected in the text box. If no text is currently selected in the text box, this property returns a zero-length string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectedText Example#1\">private:\n   void Menu_Copy( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n   }\n\n   void Menu_Cut( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if ( !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ sender, System::EventArgs^ e )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectedText Example#1\"> Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n     &#39; Ensure that text is selected in the text box.   \n     If textBox1.SelectionLength &gt; 0 Then\n         &#39; Copy the selected text to the Clipboard.\n         textBox1.Copy()\n     End If\n End Sub\n     \n Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n     &#39; Ensure that text is currently selected in the text box.   \n     If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n         &#39; Cut the selected text in the control and paste it into the Clipboard.\n         textBox1.Cut()\n     End If\n End Sub\n     \n Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n     &#39; Determine if there is any text in the Clipboard to paste into the text box.\n     If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n         &#39; Determine if any text is selected in the text box.\n         If textBox1.SelectionLength &gt; 0 Then\n             &#39; Ask user if they want to paste over currently selected text.\n             If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                 &#39; Move selection to the point after the current selection and paste.\n                 textBox1.SelectionStart = textBox1.SelectionStart + _\n                    textBox1.SelectionLength\n             End If\n         End If \n         &#39; Paste current text in Clipboard into text box.\n         textBox1.Paste()\n     End If\n End Sub\n    \n Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n     &#39; Determine if last operation can be undone in text box.   \n     If textBox1.CanUndo = True Then\n         &#39; Undo the last operation.\n         textBox1.Undo()\n         &#39; Clear the undo buffer to prevent last action from being redone.\n         textBox1.ClearUndo()\n     End If\n End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectedText Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText.Length &gt; 0)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text))\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_SelectionLength\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_SelectionLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionLength</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of characters selected in the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int SelectionLength { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters selected in the text box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The assigned value is less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to determine if any characters are currently selected in the text box control before performing operations on the selected text. When the value of the SelectionLength property is set to a value that is larger than the number of characters within the text of the control, the value of the SelectionLength property is set to the entire length of text within the control minus the value of the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionStart_\" data-linktype=\"relative-path\">SelectionStart</a> property (if any value is specified for the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionStart_\" data-linktype=\"relative-path\">SelectionStart</a> property).  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can programmatically move the caret within the text box by setting the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionStart_\" data-linktype=\"relative-path\">SelectionStart</a> to the position within the text box where you want the caret to move to and set the SelectionLength property to a value of zero (0). The text box must have focus in order for the caret to be moved.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_SelectionStart\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_SelectionStart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionStart</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the starting point of text selected in the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int SelectionStart { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The starting position of text selected in the text box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The assigned value is less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If no text is selected in the control, this property indicates the insertion point, or caret, for new text. If you set this property to a location beyond the length of the text in the control, the selection start position will be placed after the last character. When text is selected in the text box control, changing this property might decrease the value of the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionLength_\" data-linktype=\"relative-path\">SelectionLength</a> property. If the remaining text in the control after the position indicated by the SelectionStart property is less than the value of the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionLength_\" data-linktype=\"relative-path\">SelectionLength</a> property, the value of the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionLength_\" data-linktype=\"relative-path\">SelectionLength</a> property is automatically decreased. The value of the SelectionStart property never causes an increase in the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionLength_\" data-linktype=\"relative-path\">SelectionLength</a> property.  </p>\n<p> You can programmatically move the selection within the text box by setting the SelectionStart and the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionLength_\" data-linktype=\"relative-path\">SelectionLength</a> properties.  </p>\n<p> You can programmatically move the caret within the text box by setting the SelectionStart to the position within the text box where you want the caret to move to and set the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_SelectionLength_\" data-linktype=\"relative-path\">SelectionLength</a> property to a value of zero (0).  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> must have focus in order for the selection or the caret to be moved. You can set the SelectionStart property of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> that is <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> by giving it the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> first.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p><strong>Example 1</strong>  </p>\n<p> The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre><p> <strong>Example 2</strong>  </p>\n<p> The following example sets the SelectionStart property of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> that is <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a> by giving it the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus_\" data-linktype=\"relative-path\">Focus</a> first.  </p>\n<pre><code class=\"lang-vb\" name=\"SystemWindowsFormsTextBoxBase#1\">Public Class Form1\n\n    Private Sub ButtonClickWork(ByVal sender As System.Object, ByVal e As System.EventArgs) _\n        Handles Button1.Click\n\n        Me.TextBox1.Text = &quot;Hello world!&quot;\n        Me.TextBox1.ReadOnly = True\n\n        Me.TextBox1.Focus()\n        Me.TextBox1.SelectionStart = Me.TextBox1.SelectionStart + 1\n        Me.TextBox1.SelectionLength = 1\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"SystemWindowsFormsTextBoxBase#1\">public partial class Form1 : Form\n{\n    public Form1()\n    {\n        InitializeComponent();\n        this.button1.Click += new System.EventHandler(this.ButtonClickWork);\n    }\n\n    private void ButtonClickWork(object sender, EventArgs e)\n    {\n        this.textBox1.Text = &quot;Hello world!&quot;;\n        this.textBox1.ReadOnly = true;\n\n        this.textBox1.Focus();\n        this.textBox1.SelectionStart = this.textBox1.SelectionStart + 1;\n        this.textBox1.SelectionLength = 1;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ShortcutsEnabled\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ShortcutsEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShortcutsEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the defined shortcuts are enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool ShortcutsEnabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to enable the shortcuts; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the ShortcutsEnabled property to enable or disable the following shortcut key combinations and the control’s shortcut menu:  </p>\n<ul>\n<li><p>CTRL+Z  </p>\n</li>\n<li><p>CTRL+E  </p>\n</li>\n<li><p>CTRL+C  </p>\n</li>\n<li><p>CTRL+Y  </p>\n</li>\n<li><p>CTRL+X  </p>\n</li>\n<li><p>CTRL+BACKSPACE  </p>\n</li>\n<li><p>CTRL+V  </p>\n</li>\n<li><p>CTRL+DELETE  </p>\n</li>\n<li><p>CTRL+A  </p>\n</li>\n<li><p>SHIFT+DELETE  </p>\n</li>\n<li><p>CTRL+L  </p>\n</li>\n<li><p>SHIFT+INSERT  </p>\n</li>\n<li><p>CTRL+R  </p>\n<p>You can override this property to specify other shortcut keys.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Text\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the current text in the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text displayed in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To display multiple lines of text in a text box, set the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property to <code>true</code>. To read or set the text of a multiline text box, use the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Lines_\" data-linktype=\"relative-path\">Lines</a> property. The amount of text that can be entered in the <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control is limited only by available system memory.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to create a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control with vertical scroll bars. This example also uses the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AcceptsTab_\" data-linktype=\"relative-path\">AcceptsTab</a>, <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_AcceptsReturn_\" data-linktype=\"relative-path\">AcceptsReturn</a>, and <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> properties to make the multiline text box control useful for creating text documents.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public:\n   void CreateMyMultilineTextBox()\n   {\n      // Create an instance of a TextBox control.\n      TextBox^ textBox1 = gcnew TextBox;\n      \n      // Set the Multiline property to true.\n      textBox1-&gt;Multiline = true;\n      // Add vertical scroll bars to the TextBox control.\n      textBox1-&gt;ScrollBars = ScrollBars::Vertical;\n      // Allow the RETURN key in the TextBox control.\n      textBox1-&gt;AcceptsReturn = true;\n      // Allow the TAB key to be entered in the TextBox control.\n      textBox1-&gt;AcceptsTab = true;\n      // Set WordWrap to true to allow text to wrap to the next line.\n      textBox1-&gt;WordWrap = true;\n      // Set the default text of the control.\n      textBox1-&gt;Text = &quot;Welcome!&quot; + Environment::NewLine + &quot;Second Line&quot;;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public void CreateMyMultilineTextBox()\n {\n    // Create an instance of a TextBox control.\n    TextBox textBox1 = new TextBox();\n    \n    // Set the Multiline property to true.\n    textBox1.Multiline = true;\n    // Add vertical scroll bars to the TextBox control.\n    textBox1.ScrollBars = ScrollBars.Vertical;\n    // Allow the RETURN key in the TextBox control.\n    textBox1.AcceptsReturn = true;\n    // Allow the TAB key to be entered in the TextBox control.\n    textBox1.AcceptsTab = true;\n    // Set WordWrap to true to allow text to wrap to the next line.\n    textBox1.WordWrap = true;\n    // Set the default text of the control.\n    textBox1.Text = &quot;Welcome!&quot; + Environment.NewLine + &quot;Second Line&quot;;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">    Public Sub CreateMyMultilineTextBox()\n        &#39; Create an instance of a TextBox control.\n        Dim textBox1 As New TextBox()\n        \n        &#39; Set the Multiline property to true.\n        textBox1.Multiline = True\n        &#39; Add vertical scroll bars to the TextBox control.\n        textBox1.ScrollBars = ScrollBars.Vertical\n        &#39; Allow the RETURN key in the TextBox control.\n        textBox1.AcceptsReturn = True\n        &#39; Allow the TAB key to be entered in the TextBox control.\n        textBox1.AcceptsTab = True\n        &#39; Set WordWrap to true to allow text to wrap to the next line.\n        textBox1.WordWrap = True\n        &#39; Set the default text of the control.\n        textBox1.Text = &quot;Welcome!&quot; &amp; Environment.NewLine &amp; &quot;Second Line&quot;\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_TextLength\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_TextLength_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TextLength</div>        \r\n          </div>\r\n    \r\n            <p>Gets the length of text in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int TextLength { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of characters contained in the text of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to determine the number of characters in a string for tasks such as searching for specific strings of text within the text of the control, where knowledge of the total number of characters is needed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AppendText_\" data-linktype=\"relative-path\">AppendText</a> method and the TextLength property to copy text from one <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> to another. This example requires that two <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls named, <code>textBox1</code> and <code>textBox2</code>, have been added to a form and that <code>textBox1</code> has text assigned to its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property.  </p>\n<pre><code class=\"lang-cpp\" name=\"TextBoxBase.AppendText#1\">   void AppendTextBox1Text()\n   {\n      // Determine if text is selected in textBox1.\n      if ( textBox1-&gt;SelectionLength == 0 )\n\n      // No selection made, return.\n      return;\n\n      // Determine if the text being appended to textBox2 exceeds the MaxLength property.\n      if ( (textBox1-&gt;SelectedText-&gt;Length + textBox2-&gt;TextLength) &gt; textBox2-&gt;MaxLength )\n            MessageBox::Show( &quot;The text to paste in is larger than the maximum number of characters allowed&quot; ); // Append the text from textBox1 into textBox2.\n      else\n            textBox2-&gt;AppendText( textBox1-&gt;SelectedText );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"TextBoxBase.AppendText#1\">      private void AppendTextBox1Text()\n      {\n         // Determine if text is selected in textBox1.\n         if(textBox1.SelectionLength == 0)\n            // No selection made, return.\n            return;\n         \n         // Determine if the text being appended to textBox2 exceeds the MaxLength property.\n         if((textBox1.SelectedText.Length + textBox2.TextLength) &gt; textBox2.MaxLength)\n            MessageBox.Show(&quot;The text to paste in is larger than the maximum number of characters allowed&quot;);\n         else\n            // Append the text from textBox1 into textBox2.\n            textBox2.AppendText(textBox1.SelectedText);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"TextBoxBase.AppendText#1\">   Private Sub AppendTextBox1Text()\n      &#39; Determine if text is selected in textBox1.\n      If textBox1.SelectionLength = 0 Then\n         &#39; No selection made, return.\n         Return\n      End If\n      &#39; Determine if the text being appended to textBox2 exceeds the MaxLength property.\n      If textBox1.SelectedText.Length + textBox2.TextLength &gt; textBox2.MaxLength Then\n         MessageBox.Show(&quot;The text to paste in is larger than the maximum number of characters allowed&quot;)\n         &#39; Append the text from textBox1 into textBox2.\n      Else\n         textBox2.AppendText(textBox1.SelectedText)\n      End If\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_WordWrap\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_WordWrap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WordWrap</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool WordWrap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the multiline text box control wraps words; <code>false</code> if the text box control automatically scrolls horizontally when the user types past the right edge of the control. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this property is set to <code>true</code>, horizontal scroll bars are not displayed regardless of the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_ScrollBars_\" data-linktype=\"relative-path\">ScrollBars</a> property setting.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the derived class, <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, text within the control will always wrap regardless of the property setting of this property unless the <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_TextAlign_\" data-linktype=\"relative-path\">TextAlign</a> property is set to <code>HorizontalAlignment.Left</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to create a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control with vertical scroll bars. This example also uses the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AcceptsTab_\" data-linktype=\"relative-path\">AcceptsTab</a>, <a class=\"xref\" href=\"system.windows.forms.textbox#System_Windows_Forms_TextBox_AcceptsReturn_\" data-linktype=\"relative-path\">AcceptsReturn</a>, and WordWrap properties to make the multiline text box control useful for creating text documents.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public:\n   void CreateMyMultilineTextBox()\n   {\n      // Create an instance of a TextBox control.\n      TextBox^ textBox1 = gcnew TextBox;\n      \n      // Set the Multiline property to true.\n      textBox1-&gt;Multiline = true;\n      // Add vertical scroll bars to the TextBox control.\n      textBox1-&gt;ScrollBars = ScrollBars::Vertical;\n      // Allow the RETURN key in the TextBox control.\n      textBox1-&gt;AcceptsReturn = true;\n      // Allow the TAB key to be entered in the TextBox control.\n      textBox1-&gt;AcceptsTab = true;\n      // Set WordWrap to true to allow text to wrap to the next line.\n      textBox1-&gt;WordWrap = true;\n      // Set the default text of the control.\n      textBox1-&gt;Text = &quot;Welcome!&quot; + Environment::NewLine + &quot;Second Line&quot;;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">public void CreateMyMultilineTextBox()\n {\n    // Create an instance of a TextBox control.\n    TextBox textBox1 = new TextBox();\n    \n    // Set the Multiline property to true.\n    textBox1.Multiline = true;\n    // Add vertical scroll bars to the TextBox control.\n    textBox1.ScrollBars = ScrollBars.Vertical;\n    // Allow the RETURN key in the TextBox control.\n    textBox1.AcceptsReturn = true;\n    // Allow the TAB key to be entered in the TextBox control.\n    textBox1.AcceptsTab = true;\n    // Set WordWrap to true to allow text to wrap to the next line.\n    textBox1.WordWrap = true;\n    // Set the default text of the control.\n    textBox1.Text = &quot;Welcome!&quot; + Environment.NewLine + &quot;Second Line&quot;;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.AcceptsTab Example#1\">    Public Sub CreateMyMultilineTextBox()\n        &#39; Create an instance of a TextBox control.\n        Dim textBox1 As New TextBox()\n        \n        &#39; Set the Multiline property to true.\n        textBox1.Multiline = True\n        &#39; Add vertical scroll bars to the TextBox control.\n        textBox1.ScrollBars = ScrollBars.Vertical\n        &#39; Allow the RETURN key in the TextBox control.\n        textBox1.AcceptsReturn = True\n        &#39; Allow the TAB key to be entered in the TextBox control.\n        textBox1.AcceptsTab = True\n        &#39; Set WordWrap to true to allow text to wrap to the next line.\n        textBox1.WordWrap = True\n        &#39; Set the default text of the control.\n        textBox1.Text = &quot;Welcome!&quot; &amp; Environment.NewLine &amp; &quot;Second Line&quot;\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_AppendText_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_AppendText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppendText(String)</div>        \r\n          </div>\r\n    \r\n            <p>Appends text to the current text of a text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AppendText (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to append to the current contents of the text box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to add text to the existing text in the control instead of using the concatenation operator (+) to concatenate text to the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AppendText method and the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_TextLength_\" data-linktype=\"relative-path\">TextLength</a> property to copy text from one <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> to another. This example requires that two <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls named, <code>textBox1</code> and <code>textBox2</code>, have been added to a form and that <code>textBox1</code> has text assigned to its <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property.  </p>\n<pre><code class=\"lang-cpp\" name=\"TextBoxBase.AppendText#1\">   void AppendTextBox1Text()\n   {\n      // Determine if text is selected in textBox1.\n      if ( textBox1-&gt;SelectionLength == 0 )\n\n      // No selection made, return.\n      return;\n\n      // Determine if the text being appended to textBox2 exceeds the MaxLength property.\n      if ( (textBox1-&gt;SelectedText-&gt;Length + textBox2-&gt;TextLength) &gt; textBox2-&gt;MaxLength )\n            MessageBox::Show( &quot;The text to paste in is larger than the maximum number of characters allowed&quot; ); // Append the text from textBox1 into textBox2.\n      else\n            textBox2-&gt;AppendText( textBox1-&gt;SelectedText );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"TextBoxBase.AppendText#1\">      private void AppendTextBox1Text()\n      {\n         // Determine if text is selected in textBox1.\n         if(textBox1.SelectionLength == 0)\n            // No selection made, return.\n            return;\n         \n         // Determine if the text being appended to textBox2 exceeds the MaxLength property.\n         if((textBox1.SelectedText.Length + textBox2.TextLength) &gt; textBox2.MaxLength)\n            MessageBox.Show(&quot;The text to paste in is larger than the maximum number of characters allowed&quot;);\n         else\n            // Append the text from textBox1 into textBox2.\n            textBox2.AppendText(textBox1.SelectedText);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"TextBoxBase.AppendText#1\">   Private Sub AppendTextBox1Text()\n      &#39; Determine if text is selected in textBox1.\n      If textBox1.SelectionLength = 0 Then\n         &#39; No selection made, return.\n         Return\n      End If\n      &#39; Determine if the text being appended to textBox2 exceeds the MaxLength property.\n      If textBox1.SelectedText.Length + textBox2.TextLength &gt; textBox2.MaxLength Then\n         MessageBox.Show(&quot;The text to paste in is larger than the maximum number of characters allowed&quot;)\n         &#39; Append the text from textBox1 into textBox2.\n      Else\n         textBox2.AppendText(textBox1.SelectedText)\n      End If\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Clear\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all text from the text box control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to clear the contents of the control instead of assigning the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property an empty string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to create an event handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event. The code within the event handler restricts data to numbers. After text has been entered in the control, the code determines if the text entered is a number. If the text is not a number, the code clears the text from the control and a <a class=\"xref\" href=\"system.windows.forms.messagebox\" data-linktype=\"relative-path\">MessageBox</a> is displayed to alert the user that only numbers are accepted. The example requires that a <code>Boolean</code> variable named <code>flag</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control called <code>textBox1</code> are defined outside of this method. This example demonstrates how to use a flag variable to avoid a cascading event in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.Clear Example#1\">private:\n   bool flag;\n\nprivate:\n   void MyTextChangedHandler( System::Object^ sender, System::EventArgs^ e )\n   {\n      Int64 val;\n      // Check the flag to prevent code re-entry. \n      if ( flag == false )\n      {\n         // Set the flag to True to prevent re-entry of the code below.\n         flag = true;\n         // Determine if the text of the control is a number.\n         try\n         {\n            // Attempt to convert to long\n            val = System::Convert::ToInt64( textBox1-&gt;Text );\n         }\n         catch ( Exception^ ) \n         {\n            // Display a message box and clear the contents if not a number.\n            MessageBox::Show( &quot;The text is not a valid number. Please re-enter&quot; );\n            // Clear the contents of the text box to allow re-entry.\n            textBox1-&gt;Clear();\n         }\n         // Reset the flag so other TextChanged events are processed correctly.\n         flag = false;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.Clear Example#1\">    Private flag As Boolean    \n    \n    Private Sub MyTextChangedHandler(sender As System.Object, e As System.EventArgs)\n        &#39; Check the flag to prevent code re-entry. \n        If flag = False Then\n            &#39; Set the flag to True to prevent re-entry of the code below.\n            flag = True\n            &#39; Determine if the text of the control is a number.\n            If IsNumeric(textBox1.Text) = False Then\n                &#39; Display a message box and clear the contents if not a number.\n                MessageBox.Show(&quot;The text is not a valid number. Please re-enter&quot;)\n                &#39; Clear the contents of the text box to allow re-entry.\n                textBox1.Clear()\n            End If\n            &#39; Reset the flag so other TextChanged events are processed correctly.\n            flag = False\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.Clear Example#1\">private bool flag;\n\nprivate void MyTextChangedHandler(System.Object sender, System.EventArgs e)\n{\n    long val;    \n    // Check the flag to prevent code re-entry. \n    if(flag == false)\n    {\n       // Set the flag to True to prevent re-entry of the code below.\n       flag = true;\n       // Determine if the text of the control is a number.\n       try {\n          // Attempt to convert to long\n          val = System.Convert.ToInt64(textBox1.Text);\n       }\n       catch {\n          // Display a message box and clear the contents if not a number.\n          MessageBox.Show(&quot;The text is not a valid number. Please re-enter&quot;);\n          // Clear the contents of the text box to allow re-entry.\n          textBox1.Clear();\n       }\n       // Reset the flag so other TextChanged events are processed correctly.\n       flag = false;\n    }        \n }\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ClearUndo\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ClearUndo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearUndo()</div>        \r\n          </div>\r\n    \r\n            <p>Clears information about the most recent operation from the undo buffer of the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearUndo ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to prevent an undo operation from repeating, based on the state of your application.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Copy\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Copy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Copy()</div>        \r\n          </div>\r\n    \r\n            <p>Copies the current selection in the text box to the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Copy ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method, instead of using the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> class, to copy text in the text box and place it in the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_CreateHandle\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_CreateHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateHandle()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a handle for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CreateHandle ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Cut\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Cut_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cut()</div>        \r\n          </div>\r\n    \r\n            <p>Moves the current selection in the text box to the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Cut ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method will only cut text from the text box if text is selected in the control. You can use this method, instead of using the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> class, to copy text in the text box and move it to the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_DeselectAll\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_DeselectAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeselectAll()</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.SelectionLength*</span> property is zero so that no characters are selected in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DeselectAll ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_GetCharFromPosition_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_GetCharFromPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCharFromPosition(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the character that is closest to the specified location within the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual char GetCharFromPosition (System.Drawing.Point pt);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location from which to seek the nearest character.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The character at the specified location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the location specified in the <code>pt</code> parameter is outside the client area of the control, the first character of the string closest to the point specified in <code>pt</code> is returned. You can use this method to determine which characters are located near a specific point within the control. You can then use this value to perform operations on the text at that location.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the specified location in the <code>pt</code> parameter is located on the right side of the client area of the control, the last character of the string closest to the point specified in <code>pt</code> is returned.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_GetCharIndexFromPosition_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_GetCharIndexFromPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCharIndexFromPosition(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the index of the character nearest to the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int GetCharIndexFromPosition (System.Drawing.Point pt);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pt</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location to search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based character index at the specified location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the character index that is closest to the position specified in the <code>pt</code> parameter. The character index is a zero-based index of text in the control, including spaces. You can use this method to determine where in the text the user has the mouse over by passing the mouse coordinates to this method. This can be useful if you want to perform tasks when the user rests the mouse pointer over a word in the text of the control.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If the specified location is not within the client rectangle of the control, or is beyond the last character in the control, the return value is the index of the last character.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_GetFirstCharIndexFromLine_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_GetFirstCharIndexFromLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFirstCharIndexFromLine(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the index of the first character of a given line.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetFirstCharIndexFromLine (int lineNumber);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>lineNumber</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The line for which to get the index of its first character.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the first character in the specified line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>lineNumber</code> parameter is less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Line numbering in the text box starts at zero. If the <code>lineNumber</code> parameter is greater than the last line in the text box, GetFirstCharIndexFromLine returns -1.  </p>\n<p> GetFirstCharIndexFromLine returns the first character index of a physical line. The physical line is the displayed line, not the assigned line. The number of displayed lines can be greater than the number of assigned lines due to word wrap. For example, if you assign two long lines to a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control and set <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Multiline_\" data-linktype=\"relative-path\">Multiline</a> and <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> to <code>true</code>, the two long assigned lines result in four physical (or displayed lines).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_GetFirstCharIndexOfCurrentLine\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_GetFirstCharIndexOfCurrentLine_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFirstCharIndexOfCurrentLine()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the index of the first character of the current line.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetFirstCharIndexOfCurrentLine ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based character index in the current line.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_GetLineFromCharIndex_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_GetLineFromCharIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLineFromCharIndex(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the line number from the specified character position within the text of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int GetLineFromCharIndex (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character index position to search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based line number in which the character index is located.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to determine the line number based on the character index specified in the <code>index</code> parameter of the method. The first line of text in the control returns the value zero. The GetLineFromCharIndex method returns the physical line number where the indexed character is located within the control. For example, if a portion of the first logical line of text in the control wraps to the next line, the GetLineFromCharIndex method returns 1 if the character at the specified character index has wrapped to the second physical line. If <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_WordWrap_\" data-linktype=\"relative-path\">WordWrap</a> is set to <code>false</code>, no portion of the line wraps to the next, and the method returns 0 for the specified character index. You can use this method to determine which line a specific character index is located within. For example, after calling the <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_Find_\" data-linktype=\"relative-path\">Find</a> method to search for text, you can obtain the character index to where the search results are found. You can call this method with the character index returned by the <a class=\"xref\" href=\"system.windows.forms.richtextbox#System_Windows_Forms_RichTextBox_Find_\" data-linktype=\"relative-path\">Find</a> method to determine which line the word was found.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the character index specified in the <code>index</code> parameter is beyond the available number of lines contained within the control, the last line number is returned.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_GetPositionFromCharIndex_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_GetPositionFromCharIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetPositionFromCharIndex(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the location within the control at the specified character index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Drawing.Point GetPositionFromCharIndex (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the character for which to retrieve the location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>The location of the specified character within the client rectangle of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to determine where in the control a specific character index is located. You can use this method for such tasks as displaying shortcut menu items or help information for a word in the control. For example, if you wanted to display a menu of options to the user when the user right clicks on a word in the control, you can use this method to determine the position of the word to properly display a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_IsInputKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_IsInputKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInputKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified key is an input key or a special key that requires preprocessing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool IsInputKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the Keys value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified key is an input key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsInputKey method returns <code>true</code> when the <code>keyData</code> parameter includes the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> value and the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AcceptsTab_\" data-linktype=\"relative-path\">AcceptsTab</a> property is <code>true</code>. IsInputKey returns <code>false</code> if <code>keyData</code> contains both <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> and <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnAcceptsTabChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnAcceptsTabChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAcceptsTabChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AcceptsTabChanged\" data-linktype=\"relative-path\">AcceptsTabChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAcceptsTabChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAcceptsTabChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnBorderStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnBorderStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBorderStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_BorderStyleChanged\" data-linktype=\"relative-path\">BorderStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnBorderStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnFontChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnFontChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFontChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnFontChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnHandleCreated_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnHandleCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleCreated(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleCreated (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnHandleDestroyed_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnHandleDestroyed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleDestroyed(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleDestroyed (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnHideSelectionChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnHideSelectionChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHideSelectionChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raise the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_HideSelectionChanged\" data-linktype=\"relative-path\">HideSelectionChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnHideSelectionChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnHideSelectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnModifiedChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnModifiedChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnModifiedChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ModifiedChanged\" data-linktype=\"relative-path\">ModifiedChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnModifiedChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnModifiedChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnMouseUp_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnMouseUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseUp(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mevent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnMultilineChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnMultilineChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMultilineChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_MultilineChanged\" data-linktype=\"relative-path\">MultilineChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMultilineChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMultilineChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnPaddingChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnPaddingChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPaddingChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>This method is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPaddingChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnReadOnlyChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnReadOnlyChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnReadOnlyChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_ReadOnlyChanged\" data-linktype=\"relative-path\">ReadOnlyChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnReadOnlyChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnReadOnlyChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_OnTextChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_OnTextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnTextChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnTextChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Paste\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Paste_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Paste()</div>        \r\n          </div>\r\n    \r\n            <p>Replaces the current selection in the text box with the contents of the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Paste ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Paste method will only paste text into the control if text is currently stored in the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ProcessCmdKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessCmdKey(Message,Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a command key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference that represents the window message to process.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the shortcut key to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the command key was processed by the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ProcessDialogKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ProcessDialogKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDialogKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a dialog key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed by the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ScrollToCaret\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ScrollToCaret_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScrollToCaret()</div>        \r\n          </div>\r\n    \r\n            <p>Scrolls the contents of the control to the current caret position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ScrollToCaret ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to scroll the contents of the control until the caret is within the visible region of the control. If the caret is positioned below the visible region of the control, the ScrollToCaret method will scroll the contents of the control until the caret is visible at the bottom of the control. If the caret is positioned above the visible region of the control, this method scrolls the contents of the control until the caret is visible at the top of the control. You can use this method in a multiline text box to ensure that the current text entry point is within the visible region of the control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This method has no effect if the control does not have focus or if the caret is already positioned in the visible region of the control.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> enumeration and the ScrollToCaret method to ensure that the text insertion point, represented by the caret, is always visible on the screen after the ENTER key has been pressed. To run the example, paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control called <code>TextBox1</code> and a <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control called <code>RichTextBox1</code>. This example requires that the event-handling method has been associated with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.TextBoxBaseScrolling#1\">\t//Handles the Enter key being pressed while TextBox1 has focus. \n\tprivate void TextBox1_KeyDown(object sender, KeyEventArgs e)\n\t{\n\t\tTextBox1.HideSelection = false;\n\t\tif (e.KeyCode==Keys.Enter)\n\t\t{\n\t\t\te.Handled = true;\n\n\t\t\t// Copy the text from TextBox1 to RichTextBox1, add a CRLF after \n\t\t\t// the copied text, and keep the caret in view.\n\t\t\tRichTextBox1.SelectedText = TextBox1.Text + &quot;\\r<br>&quot;;\n\t\t\tRichTextBox1.ScrollToCaret();\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.TextBoxBaseScrolling#1\">private:\n   //Handles the Enter key being pressed while TextBox1 has focus. \n   void TextBox1_KeyDown( Object^ /*sender*/, KeyEventArgs^ e )\n   {\n      TextBox1-&gt;HideSelection = false;\n      if ( e-&gt;KeyCode == Keys::Enter )\n      {\n         e-&gt;Handled = true;\n\n         // Copy the text from TextBox1 to RichTextBox1, add a CRLF after \n         // the copied text, and keep the caret in view.\n         RichTextBox1-&gt;SelectedText = String::Concat( TextBox1-&gt;Text, &quot;\\r<br>&quot; );\n         RichTextBox1-&gt;ScrollToCaret();\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.TextBoxBaseScrolling#1\">    &#39;Handles the Enter key being pressed while TextBox1 has focus. \n    Private Sub TextBox1_KeyDown(ByVal sender As Object, _\n        ByVal e As KeyEventArgs) Handles TextBox1.KeyDown\n        TextBox1.HideSelection = False\n        If e.KeyCode = Keys.Enter Then\n            e.Handled = True\n\n            &#39; Copy the text from TextBox1 to RichTextBox1, add a CRLF after \n            &#39; the copied text, and keep the caret in view.\n            RichTextBox1.SelectedText = TextBox1.Text + _\n                Microsoft.VisualBasic.vbCrLf\n            RichTextBox1.ScrollToCaret()\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Select_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Select_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Selects a range of text in the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Select (int start, int length);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>start</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position of the first character in the current text selection within the text box.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>length</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to select.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>start</code> parameter is less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you want to set the start position to the first character in the control&#39;s text, set the <code>start</code> parameter to 0. You can use this method to select a substring of text, such as when searching through the text of the control and replacing information.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can programmatically move the caret within the text box by setting the <code>start</code> parameter to the position within the text box where you want the caret to move to and set the <code>length</code> parameter to a value of zero (0). The text box must have focus in order for the caret to be moved.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If this method is called without any parameters, an alternative method is used. This alternative method inherits from the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class. When called, it sets the input focus to the control and selects the contents of the control. For more information, see the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_\" data-linktype=\"relative-path\">Select</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to search the contents of the control for the instance of the word &quot;fox&quot;. If found, the code selects the word in the control using the Select method. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>textBox1</code> has been created and its <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property contains the sentence &quot;The quick brown fox jumps over the lazy dog.&quot;  </p>\n<pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.Select Example#1\"> Public Sub SelectMyString()\n     &#39; Create a string to search for the word &quot;fox&quot;.\n     Dim searchString As String = &quot;fox&quot;\n     &#39; Determine the starting location of the word &quot;fox&quot;.\n     Dim index As Integer = textBox1.Text.IndexOf(searchString, 16, 3)\n     &#39; Determine if the word has been found and select it if it was.\n     If index &lt;&gt; - 1 Then\n         &#39; Select the string using the index and the length of the string.\n         textBox1.Select(index, searchString.Length)\n     End If\n End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.Select Example#1\">public:\n   void SelectMyString()\n   {\n      // Create a string to search for the word &quot;fox&quot;.\n      String^ searchString = &quot;fox&quot;;\n      // Determine the starting location of the word &quot;fox&quot;.\n      int index = textBox1-&gt;Text-&gt;IndexOf( searchString, 16, 3 );\n      // Determine if the word has been found and select it if it was.\n      if ( index != -1 )\n      {\n         // Select the string using the index and the length of the string.\n         textBox1-&gt;Select( index,searchString-&gt;Length );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.Select Example#1\">public void SelectMyString()\n {\n    // Create a string to search for the word &quot;fox&quot;.\n    String searchString = &quot;fox&quot;;\n    // Determine the starting location of the word &quot;fox&quot;.\n    int index = textBox1.Text.IndexOf(searchString, 16, 3);\n    // Determine if the word has been found and select it if it was.\n    if (index != -1)\n    {\n       // Select the string using the index and the length of the string.\n       textBox1.Select(index, searchString.Length);\n    }\n }\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_SelectAll\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_SelectAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectAll()</div>        \r\n          </div>\r\n    \r\n            <p>Selects all text in the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectAll ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to select all text within the control. You can use this method in conjunction with the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Cut_\" data-linktype=\"relative-path\">Cut</a> method, which requires text to be selected in the control, to cut the entire contents of the control and paste them into the <strong>Clipboard</strong>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class, to determine if any text is selected in the control. If no text is selected, a call is made to the SelectAll method before copying the contents of the control to the <strong>Clipboard</strong>. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> has been created named <code>textBox1</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectAll Example#1\">public:\n   void CopyAllMyText()\n   {\n      // Determine if any text is selected in the TextBox control.\n      if ( textBox1-&gt;SelectionLength == 0 )\n      {\n         // Select all text in the text box.\n         textBox1-&gt;SelectAll();\n      }\n\n      // Copy the contents of the control to the Clipboard.\n      textBox1-&gt;Copy();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectAll Example#1\"> Public Sub CopyAllMyText()\n     &#39; Determine if any text is selected in the TextBox control.\n     If textBox1.SelectionLength = 0 Then\n         &#39; Select all text in the text box.\n         textBox1.SelectAll()\n     End If \n     &#39; Copy the contents of the control to the Clipboard.\n     textBox1.Copy()\n End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectAll Example#1\">public void CopyAllMyText()\n {\n    // Determine if any text is selected in the TextBox control.\n    if(textBox1.SelectionLength == 0)\n       // Select all text in the text box.\n       textBox1.SelectAll();\n    \n    // Copy the contents of the control to the Clipboard.\n    textBox1.Copy();\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_SetBoundsCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the specified bounds of the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Not used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>specified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> control uses the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_PreferredHeight_\" data-linktype=\"relative-path\">PreferredHeight</a> property to set the bounds if the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> property is <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Multiline_\" data-linktype=\"relative-path\">Multiline</a> property is <code>false</code>.  </p>\n<p> Typically, the parameters that correspond to the bounds not included in the <code>specified</code> parameter are passed in with their current values. For example, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a>, or the <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_X_\" data-linktype=\"relative-path\">X</a> or <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property can be passed in with a reference to the current instance of the control. However all values passed in are honored and applied to the control.  </p>\n<p> The <code>specified</code> parameter represents the elements of the controls <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds_\" data-linktype=\"relative-path\">Bounds</a> changed by your application. For example, if you change the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> of the control, the <code>specified</code> parameter value is the <code>Size</code> value of <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a>. However, if the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> is adjusted in response to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock_\" data-linktype=\"relative-path\">Dock</a> property being set, the <code>specified</code> parameter value is the <code>None</code> value of <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string that represents the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the current <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. The string includes the type and the <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a> property of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Undo\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_Undo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Undo()</div>        \r\n          </div>\r\n    \r\n            <p>Undoes the last edit operation in the text box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Undo ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method will undo the last <strong>Clipboard</strong> or text change operation performed in the text box control if the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_CanUndo_\" data-linktype=\"relative-path\">CanUndo</a> property returns <code>true</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Undo method does not work with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> events.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, a derived class. It provides <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event handlers for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that perform Cut, Copy, Paste, and Undo operations. This example requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>textBox1</code> has been created.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private void Menu_Copy(System.Object sender, System.EventArgs e)\n {\n    // Ensure that text is selected in the text box.   \n    if(textBox1.SelectionLength &gt; 0)\n        // Copy the selected text to the Clipboard.\n        textBox1.Copy();\n }\n \n private void Menu_Cut(System.Object sender, System.EventArgs e)\n {   \n     // Ensure that text is currently selected in the text box.   \n     if(textBox1.SelectedText != &quot;&quot;)\n        // Cut the selected text in the control and paste it into the Clipboard.\n        textBox1.Cut();\n }\n \n private void Menu_Paste(System.Object sender, System.EventArgs e)\n {\n    // Determine if there is any text in the Clipboard to paste into the text box.\n    if(Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) == true)\n    {\n        // Determine if any text is selected in the text box.\n        if(textBox1.SelectionLength &gt; 0)\n        {\n          // Ask user if they want to paste over currently selected text.\n          if(MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, &quot;Cut Example&quot;, MessageBoxButtons.YesNo) == DialogResult.No)\n             // Move selection to the point after the current selection and paste.\n             textBox1.SelectionStart = textBox1.SelectionStart + textBox1.SelectionLength;\n        }\n        // Paste current text in Clipboard into text box.\n        textBox1.Paste();\n    }\n }\n \n \n private void Menu_Undo(System.Object sender, System.EventArgs e)\n {\n    // Determine if last operation can be undone in text box.   \n    if(textBox1.CanUndo == true)\n    {\n       // Undo the last operation.\n       textBox1.Undo();\n       // Clear the undo buffer to prevent last action from being redone.\n       textBox1.ClearUndo();\n    }\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic TextBoxBase.SelectionLength Example#1\">    Private Sub Menu_Copy(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is selected in the text box.   \n        If textBox1.SelectionLength &gt; 0 Then\n            &#39; Copy the selected text to the Clipboard.\n            textBox1.Copy()\n        End If\n    End Sub\n     \n    Private Sub Menu_Cut(sender As System.Object, e As System.EventArgs)\n        &#39; Ensure that text is currently selected in the text box.   \n        If textBox1.SelectedText &lt;&gt; &quot;&quot; Then\n            &#39; Cut the selected text in the control and paste it into the Clipboard.\n            textBox1.Cut()\n        End If\n    End Sub\n     \n    Private Sub Menu_Paste(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if there is any text in the Clipboard to paste into the text box.\n        If Clipboard.GetDataObject().GetDataPresent(DataFormats.Text) = True Then\n            &#39; Determine if any text is selected in the text box.\n            If textBox1.SelectionLength &gt; 0 Then\n                &#39; Ask user if they want to paste over currently selected text.\n                If MessageBox.Show(&quot;Do you want to paste over current selection?&quot;, _\n                    &quot;Cut Example&quot;, MessageBoxButtons.YesNo) = DialogResult.No Then\n                    &#39; Move selection to the point after the current selection and paste.\n                    textBox1.SelectionStart = textBox1.SelectionStart + _\n                        textBox1.SelectionLength\n                End If\n            End If \n            &#39; Paste current text in Clipboard into text box.\n            textBox1.Paste()\n        End If\n    End Sub\n    \n    Private Sub Menu_Undo(sender As System.Object, e As System.EventArgs)\n        &#39; Determine if last operation can be undone in text box.   \n        If textBox1.CanUndo = True Then\n            &#39; Undo the last operation.\n            textBox1.Undo()\n            &#39; Clear the undo buffer to prevent last action from being redone.\n            textBox1.ClearUndo()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic TextBoxBase.SelectionLength Example#1\">private:\n   void Menu_Copy( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is selected in the text box.   \n      if ( textBox1-&gt;SelectionLength &gt; 0 )\n      {\n         // Copy the selected text to the Clipboard.\n         textBox1-&gt;Copy();\n      }\n   }\n\n   void Menu_Cut( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Ensure that text is currently selected in the text box.   \n      if (  !textBox1-&gt;SelectedText-&gt;Equals( &quot;&quot; ) )\n      {\n         // Cut the selected text in the control and paste it into the Clipboard.\n         textBox1-&gt;Cut();\n      }\n   }\n\n   void Menu_Paste( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if there is any text in the Clipboard to paste into the text box.\n      if ( Clipboard::GetDataObject()-&gt;GetDataPresent( DataFormats::Text ) == true )\n      {\n         // Determine if any text is selected in the text box.\n         if ( textBox1-&gt;SelectionLength &gt; 0 )\n         {\n            // Ask user if they want to paste over currently selected text.\n            if ( MessageBox::Show( &quot;Do you want to paste over current selection?&quot;,\n               &quot;Cut Example&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::No )\n            {\n               // Move selection to the point after the current selection and paste.\n               textBox1-&gt;SelectionStart = textBox1-&gt;SelectionStart + textBox1-&gt;SelectionLength;\n            }\n         }\n         // Paste current text in Clipboard into text box.\n         textBox1-&gt;Paste();\n      }\n   }\n\n   void Menu_Undo( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Determine if last operation can be undone in text box.   \n      if ( textBox1-&gt;CanUndo == true )\n      {\n         // Undo the last operation.\n         textBox1-&gt;Undo();\n         // Clear the undo buffer to prevent last action from being redone.\n         textBox1-&gt;ClearUndo();\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_WndProc_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_TextBoxBase_WndProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WndProc(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Processes Windows messages.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void WndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Windows <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_AcceptsTabChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptsTabChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.AcceptsTab*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AcceptsTabChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AcceptsTabChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the AcceptsTabChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#241\">private void TextBoxBase1_AcceptsTabChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.AcceptsTabChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#241\">Private Sub TextBoxBase1_AcceptsTabChanged(sender as Object, e as EventArgs) _ \n     Handles TextBoxBase1.AcceptsTabChanged\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.AcceptsTabChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_AutoSizeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeChanged</div>        \r\n          </div>\r\n    \r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AutoSizeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BackgroundImageChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.BackgroundImage*</span> property changes. This event is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackgroundImageChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BackgroundImageLayoutChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageLayoutChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.BackgroundImageLayout*</span> property changes. This event is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackgroundImageLayoutChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_BorderStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BorderStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.BorderStyle*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BorderStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the BorderStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#242\">private void TextBoxBase1_BorderStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.BorderStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#242\">Private Sub TextBoxBase1_BorderStyleChanged(sender as Object, e as EventArgs) _ \n     Handles TextBoxBase1.BorderStyleChanged\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.BorderStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Click\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Click</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the text box is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Click;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to handle the Click event. To run the example, paste the following code in a form containing a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control called TextBox1. This example requires that the event-handling method has been associated with the Click event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.TextBoxBaseScrolling#2\">\t//Selects everything in TextBox1.\n\tprivate void TextBox1_Click(object sender, System.EventArgs e)\n\t{\n\t\tTextBox1.SelectAll();\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.TextBoxBaseScrolling#2\">private:\n   //Selects everything in TextBox1.\n   void TextBox1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      TextBox1-&gt;SelectAll();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.TextBoxBaseScrolling#2\">    &#39;Selects everything in TextBox1.\n    Private Sub TextBox1_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles TextBox1.Click\n        TextBox1.SelectAll()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_HideSelectionChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HideSelectionChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.HideSelection*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler HideSelectionChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HideSelectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the HideSelectionChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#245\">private void TextBoxBase1_HideSelectionChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.HideSelectionChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#245\">Private Sub TextBoxBase1_HideSelectionChanged(sender as Object, e as EventArgs) _ \n     Handles TextBoxBase1.HideSelectionChanged\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.HideSelectionChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ModifiedChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ModifiedChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.Modified*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ModifiedChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you change the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> property programmatically, the <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Modified_\" data-linktype=\"relative-path\">Modified</a> property reverts to <code>false</code>. This does not raise the ModifiedChanged event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ModifiedChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the ModifiedChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#246\">private void TextBoxBase1_ModifiedChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.ModifiedChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#246\">Private Sub TextBoxBase1_ModifiedChanged(sender as Object, e as EventArgs) _ \n     Handles TextBoxBase1.ModifiedChanged\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.ModifiedChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_MouseClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MouseClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the control is clicked by the mouse.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MouseEventHandler MouseClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.richtextbox\" data-linktype=\"relative-path\">RichTextBox</a> control does not raise a <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Click\" data-linktype=\"relative-path\">Click</a> event for right clicks. The MouseClick event provides the functional equivalent.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the MouseClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#244\">private void TextBoxBase1_MouseClick(Object sender, MouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MouseClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#244\">Private Sub TextBoxBase1_MouseClick(sender as Object, e as MouseEventArgs) _ \n     Handles TextBoxBase1.MouseClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MouseClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_MultilineChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultilineChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.Multiline*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MultilineChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MultilineChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the MultilineChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#247\">private void TextBoxBase1_MultilineChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.MultilineChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#247\">Private Sub TextBoxBase1_MultilineChanged(sender as Object, e as EventArgs) _ \n     Handles TextBoxBase1.MultilineChanged\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.MultilineChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_PaddingChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaddingChanged</div>        \r\n          </div>\r\n    \r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PaddingChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_Paint\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Paint</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the control is redrawn. This event is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.PaintEventHandler Paint;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_TextBoxBase_ReadOnlyChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnlyChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.TextBoxBase.ReadOnly*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ReadOnlyChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ReadOnlyChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of a type that inherits from <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>, such as a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> or <a class=\"xref\" href=\"system.windows.forms.textboxbase\" data-linktype=\"relative-path\">TextBoxBase</a>. Then name the instance <code>TextBoxBase1</code> and ensure that the event handler is associated with the ReadOnlyChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#248\">private void TextBoxBase1_ReadOnlyChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.ReadOnlyChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#248\">Private Sub TextBoxBase1_ReadOnlyChanged(sender as Object, e as EventArgs) _ \n     Handles TextBoxBase1.ReadOnlyChanged\n\n   MessageBox.Show(&quot;You are in the TextBoxBase.ReadOnlyChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.TextBoxBase.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.TextBoxBase.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.AcceptsTab\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.AcceptsTabChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_AcceptsTabChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_AcceptsTabChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.AppendText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.AutoSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BackgroundImage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.BorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_BorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_BorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.CanEnableIme\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.CanUndo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Clear\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ClearUndo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Copy\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.CreateHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.CreateParams\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Cut\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.DefaultCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.DefaultSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.DeselectAll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.DoubleBuffered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.GetCharFromPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.GetLineFromCharIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.HideSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.HideSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_HideSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_HideSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ImeModeBase\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.IsInputKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Lines\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.MaxLength\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Modified\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ModifiedChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_ModifiedChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_ModifiedChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_MouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Multiline\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.MultilineChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_MultilineChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_MultilineChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnHandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnHandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnHideSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnModifiedChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnMultilineChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnPaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.OnTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Padding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Paste\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.PreferredHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ProcessCmdKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ProcessDialogKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.add_ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.remove_ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ScrollToCaret\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.SelectAll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.SelectedText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.SelectionLength\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.SelectionStart\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.SetBoundsCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ShortcutsEnabled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.TextLength\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.Undo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.WndProc\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.TextBoxBase.WordWrap\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ba456639-3c80-eb33-f9a3-1400fc922bb7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Implements the basic functionality required by text controls.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.TextBoxBase\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.TextBoxBase.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.TextBoxBase.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.TextBoxBase","System.Windows.Forms.TextBoxBase.AcceptsTab","System.Windows.Forms.TextBoxBase.AcceptsTabChanged","System.Windows.Forms.TextBoxBase.add_AcceptsTabChanged","System.Windows.Forms.TextBoxBase.remove_AcceptsTabChanged","System.Windows.Forms.TextBoxBase.AppendText","System.Windows.Forms.TextBoxBase.AutoSize","System.Windows.Forms.TextBoxBase.AutoSizeChanged","System.Windows.Forms.TextBoxBase.add_AutoSizeChanged","System.Windows.Forms.TextBoxBase.remove_AutoSizeChanged","System.Windows.Forms.TextBoxBase.BackColor","System.Windows.Forms.TextBoxBase.BackgroundImage","System.Windows.Forms.TextBoxBase.BackgroundImageChanged","System.Windows.Forms.TextBoxBase.add_BackgroundImageChanged","System.Windows.Forms.TextBoxBase.remove_BackgroundImageChanged","System.Windows.Forms.TextBoxBase.BackgroundImageLayout","System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged","System.Windows.Forms.TextBoxBase.add_BackgroundImageLayoutChanged","System.Windows.Forms.TextBoxBase.remove_BackgroundImageLayoutChanged","System.Windows.Forms.TextBoxBase.BorderStyle","System.Windows.Forms.TextBoxBase.BorderStyleChanged","System.Windows.Forms.TextBoxBase.add_BorderStyleChanged","System.Windows.Forms.TextBoxBase.remove_BorderStyleChanged","System.Windows.Forms.TextBoxBase.CanEnableIme","System.Windows.Forms.TextBoxBase.CanUndo","System.Windows.Forms.TextBoxBase.Clear","System.Windows.Forms.TextBoxBase.ClearUndo","System.Windows.Forms.TextBoxBase.Click","System.Windows.Forms.TextBoxBase.add_Click","System.Windows.Forms.TextBoxBase.remove_Click","System.Windows.Forms.TextBoxBase.Copy","System.Windows.Forms.TextBoxBase.CreateHandle","System.Windows.Forms.TextBoxBase.CreateParams","System.Windows.Forms.TextBoxBase.Cut","System.Windows.Forms.TextBoxBase.DefaultCursor","System.Windows.Forms.TextBoxBase.DefaultSize","System.Windows.Forms.TextBoxBase.DeselectAll","System.Windows.Forms.TextBoxBase.DoubleBuffered","System.Windows.Forms.TextBoxBase.ForeColor","System.Windows.Forms.TextBoxBase.GetCharFromPosition","System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition","System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine","System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine","System.Windows.Forms.TextBoxBase.GetLineFromCharIndex","System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex","System.Windows.Forms.TextBoxBase.HideSelection","System.Windows.Forms.TextBoxBase.HideSelectionChanged","System.Windows.Forms.TextBoxBase.add_HideSelectionChanged","System.Windows.Forms.TextBoxBase.remove_HideSelectionChanged","System.Windows.Forms.TextBoxBase.ImeModeBase","System.Windows.Forms.TextBoxBase.IsInputKey","System.Windows.Forms.TextBoxBase.Lines","System.Windows.Forms.TextBoxBase.MaxLength","System.Windows.Forms.TextBoxBase.Modified","System.Windows.Forms.TextBoxBase.ModifiedChanged","System.Windows.Forms.TextBoxBase.add_ModifiedChanged","System.Windows.Forms.TextBoxBase.remove_ModifiedChanged","System.Windows.Forms.TextBoxBase.MouseClick","System.Windows.Forms.TextBoxBase.add_MouseClick","System.Windows.Forms.TextBoxBase.remove_MouseClick","System.Windows.Forms.TextBoxBase.Multiline","System.Windows.Forms.TextBoxBase.MultilineChanged","System.Windows.Forms.TextBoxBase.add_MultilineChanged","System.Windows.Forms.TextBoxBase.remove_MultilineChanged","System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged","System.Windows.Forms.TextBoxBase.OnBorderStyleChanged","System.Windows.Forms.TextBoxBase.OnFontChanged","System.Windows.Forms.TextBoxBase.OnHandleCreated","System.Windows.Forms.TextBoxBase.OnHandleDestroyed","System.Windows.Forms.TextBoxBase.OnHideSelectionChanged","System.Windows.Forms.TextBoxBase.OnModifiedChanged","System.Windows.Forms.TextBoxBase.OnMouseUp","System.Windows.Forms.TextBoxBase.OnMultilineChanged","System.Windows.Forms.TextBoxBase.OnPaddingChanged","System.Windows.Forms.TextBoxBase.OnReadOnlyChanged","System.Windows.Forms.TextBoxBase.OnTextChanged","System.Windows.Forms.TextBoxBase.Padding","System.Windows.Forms.TextBoxBase.PaddingChanged","System.Windows.Forms.TextBoxBase.add_PaddingChanged","System.Windows.Forms.TextBoxBase.remove_PaddingChanged","System.Windows.Forms.TextBoxBase.Paint","System.Windows.Forms.TextBoxBase.add_Paint","System.Windows.Forms.TextBoxBase.remove_Paint","System.Windows.Forms.TextBoxBase.Paste","System.Windows.Forms.TextBoxBase.PreferredHeight","System.Windows.Forms.TextBoxBase.ProcessCmdKey","System.Windows.Forms.TextBoxBase.ProcessDialogKey","System.Windows.Forms.TextBoxBase.ReadOnly","System.Windows.Forms.TextBoxBase.ReadOnlyChanged","System.Windows.Forms.TextBoxBase.add_ReadOnlyChanged","System.Windows.Forms.TextBoxBase.remove_ReadOnlyChanged","System.Windows.Forms.TextBoxBase.ScrollToCaret","System.Windows.Forms.TextBoxBase.Select","System.Windows.Forms.TextBoxBase.SelectAll","System.Windows.Forms.TextBoxBase.SelectedText","System.Windows.Forms.TextBoxBase.SelectionLength","System.Windows.Forms.TextBoxBase.SelectionStart","System.Windows.Forms.TextBoxBase.SetBoundsCore","System.Windows.Forms.TextBoxBase.ShortcutsEnabled","System.Windows.Forms.TextBoxBase.Text","System.Windows.Forms.TextBoxBase.TextLength","System.Windows.Forms.TextBoxBase.ToString","System.Windows.Forms.TextBoxBase.Undo","System.Windows.Forms.TextBoxBase.WndProc","System.Windows.Forms.TextBoxBase.WordWrap"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.TextBoxBase","System::Windows::Forms::TextBoxBase","System.Windows.Forms.TextBoxBase.AcceptsTab","System::Windows::Forms::TextBoxBase::AcceptsTab","System.Windows.Forms.TextBoxBase.AcceptsTabChanged","System::Windows::Forms::TextBoxBase::AcceptsTabChanged","System.Windows.Forms.TextBoxBase.AppendText","System::Windows::Forms::TextBoxBase::AppendText","System.Windows.Forms.TextBoxBase.AutoSize","System::Windows::Forms::TextBoxBase::AutoSize","System.Windows.Forms.TextBoxBase.AutoSizeChanged","System::Windows::Forms::TextBoxBase::AutoSizeChanged","System.Windows.Forms.TextBoxBase.BackColor","System::Windows::Forms::TextBoxBase::BackColor","System.Windows.Forms.TextBoxBase.BackgroundImage","System::Windows::Forms::TextBoxBase::BackgroundImage","System.Windows.Forms.TextBoxBase.BackgroundImageChanged","System::Windows::Forms::TextBoxBase::BackgroundImageChanged","System.Windows.Forms.TextBoxBase.BackgroundImageLayout","System::Windows::Forms::TextBoxBase::BackgroundImageLayout","System.Windows.Forms.TextBoxBase.BackgroundImageLayoutChanged","System::Windows::Forms::TextBoxBase::BackgroundImageLayoutChanged","System.Windows.Forms.TextBoxBase.BorderStyle","System::Windows::Forms::TextBoxBase::BorderStyle","System.Windows.Forms.TextBoxBase.BorderStyleChanged","System::Windows::Forms::TextBoxBase::BorderStyleChanged","System.Windows.Forms.TextBoxBase.CanEnableIme","System::Windows::Forms::TextBoxBase::CanEnableIme","System.Windows.Forms.TextBoxBase.CanUndo","System::Windows::Forms::TextBoxBase::CanUndo","System.Windows.Forms.TextBoxBase.Clear","System::Windows::Forms::TextBoxBase::Clear","System.Windows.Forms.TextBoxBase.ClearUndo","System::Windows::Forms::TextBoxBase::ClearUndo","System.Windows.Forms.TextBoxBase.Click","System::Windows::Forms::TextBoxBase::Click","System.Windows.Forms.TextBoxBase.Copy","System::Windows::Forms::TextBoxBase::Copy","System.Windows.Forms.TextBoxBase.CreateHandle","System::Windows::Forms::TextBoxBase::CreateHandle","System.Windows.Forms.TextBoxBase.CreateParams","System::Windows::Forms::TextBoxBase::CreateParams","System.Windows.Forms.TextBoxBase.Cut","System::Windows::Forms::TextBoxBase::Cut","System.Windows.Forms.TextBoxBase.DefaultCursor","System::Windows::Forms::TextBoxBase::DefaultCursor","System.Windows.Forms.TextBoxBase.DefaultSize","System::Windows::Forms::TextBoxBase::DefaultSize","System.Windows.Forms.TextBoxBase.DeselectAll","System::Windows::Forms::TextBoxBase::DeselectAll","System.Windows.Forms.TextBoxBase.DoubleBuffered","System::Windows::Forms::TextBoxBase::DoubleBuffered","System.Windows.Forms.TextBoxBase.ForeColor","System::Windows::Forms::TextBoxBase::ForeColor","System.Windows.Forms.TextBoxBase.GetCharFromPosition","System::Windows::Forms::TextBoxBase::GetCharFromPosition","System.Windows.Forms.TextBoxBase.GetCharIndexFromPosition","System::Windows::Forms::TextBoxBase::GetCharIndexFromPosition","System.Windows.Forms.TextBoxBase.GetFirstCharIndexFromLine","System::Windows::Forms::TextBoxBase::GetFirstCharIndexFromLine","System.Windows.Forms.TextBoxBase.GetFirstCharIndexOfCurrentLine","System::Windows::Forms::TextBoxBase::GetFirstCharIndexOfCurrentLine","System.Windows.Forms.TextBoxBase.GetLineFromCharIndex","System::Windows::Forms::TextBoxBase::GetLineFromCharIndex","System.Windows.Forms.TextBoxBase.GetPositionFromCharIndex","System::Windows::Forms::TextBoxBase::GetPositionFromCharIndex","System.Windows.Forms.TextBoxBase.HideSelection","System::Windows::Forms::TextBoxBase::HideSelection","System.Windows.Forms.TextBoxBase.HideSelectionChanged","System::Windows::Forms::TextBoxBase::HideSelectionChanged","System.Windows.Forms.TextBoxBase.ImeModeBase","System::Windows::Forms::TextBoxBase::ImeModeBase","System.Windows.Forms.TextBoxBase.IsInputKey","System::Windows::Forms::TextBoxBase::IsInputKey","System.Windows.Forms.TextBoxBase.Lines","System::Windows::Forms::TextBoxBase::Lines","System.Windows.Forms.TextBoxBase.MaxLength","System::Windows::Forms::TextBoxBase::MaxLength","System.Windows.Forms.TextBoxBase.Modified","System::Windows::Forms::TextBoxBase::Modified","System.Windows.Forms.TextBoxBase.ModifiedChanged","System::Windows::Forms::TextBoxBase::ModifiedChanged","System.Windows.Forms.TextBoxBase.MouseClick","System::Windows::Forms::TextBoxBase::MouseClick","System.Windows.Forms.TextBoxBase.Multiline","System::Windows::Forms::TextBoxBase::Multiline","System.Windows.Forms.TextBoxBase.MultilineChanged","System::Windows::Forms::TextBoxBase::MultilineChanged","System.Windows.Forms.TextBoxBase.OnAcceptsTabChanged","System::Windows::Forms::TextBoxBase::OnAcceptsTabChanged","System.Windows.Forms.TextBoxBase.OnBorderStyleChanged","System::Windows::Forms::TextBoxBase::OnBorderStyleChanged","System.Windows.Forms.TextBoxBase.OnFontChanged","System::Windows::Forms::TextBoxBase::OnFontChanged","System.Windows.Forms.TextBoxBase.OnHandleCreated","System::Windows::Forms::TextBoxBase::OnHandleCreated","System.Windows.Forms.TextBoxBase.OnHandleDestroyed","System::Windows::Forms::TextBoxBase::OnHandleDestroyed","System.Windows.Forms.TextBoxBase.OnHideSelectionChanged","System::Windows::Forms::TextBoxBase::OnHideSelectionChanged","System.Windows.Forms.TextBoxBase.OnModifiedChanged","System::Windows::Forms::TextBoxBase::OnModifiedChanged","System.Windows.Forms.TextBoxBase.OnMouseUp","System::Windows::Forms::TextBoxBase::OnMouseUp","System.Windows.Forms.TextBoxBase.OnMultilineChanged","System::Windows::Forms::TextBoxBase::OnMultilineChanged","System.Windows.Forms.TextBoxBase.OnPaddingChanged","System::Windows::Forms::TextBoxBase::OnPaddingChanged","System.Windows.Forms.TextBoxBase.OnReadOnlyChanged","System::Windows::Forms::TextBoxBase::OnReadOnlyChanged","System.Windows.Forms.TextBoxBase.OnTextChanged","System::Windows::Forms::TextBoxBase::OnTextChanged","System.Windows.Forms.TextBoxBase.Padding","System::Windows::Forms::TextBoxBase::Padding","System.Windows.Forms.TextBoxBase.PaddingChanged","System::Windows::Forms::TextBoxBase::PaddingChanged","System.Windows.Forms.TextBoxBase.Paint","System::Windows::Forms::TextBoxBase::Paint","System.Windows.Forms.TextBoxBase.Paste","System::Windows::Forms::TextBoxBase::Paste","System.Windows.Forms.TextBoxBase.PreferredHeight","System::Windows::Forms::TextBoxBase::PreferredHeight","System.Windows.Forms.TextBoxBase.ProcessCmdKey","System::Windows::Forms::TextBoxBase::ProcessCmdKey","System.Windows.Forms.TextBoxBase.ProcessDialogKey","System::Windows::Forms::TextBoxBase::ProcessDialogKey","System.Windows.Forms.TextBoxBase.ReadOnly","System::Windows::Forms::TextBoxBase::ReadOnly","System.Windows.Forms.TextBoxBase.ReadOnlyChanged","System::Windows::Forms::TextBoxBase::ReadOnlyChanged","System.Windows.Forms.TextBoxBase.ScrollToCaret","System::Windows::Forms::TextBoxBase::ScrollToCaret","System.Windows.Forms.TextBoxBase.Select","System::Windows::Forms::TextBoxBase::Select","System.Windows.Forms.TextBoxBase.SelectAll","System::Windows::Forms::TextBoxBase::SelectAll","System.Windows.Forms.TextBoxBase.SelectedText","System::Windows::Forms::TextBoxBase::SelectedText","System.Windows.Forms.TextBoxBase.SelectionLength","System::Windows::Forms::TextBoxBase::SelectionLength","System.Windows.Forms.TextBoxBase.SelectionStart","System::Windows::Forms::TextBoxBase::SelectionStart","System.Windows.Forms.TextBoxBase.SetBoundsCore","System::Windows::Forms::TextBoxBase::SetBoundsCore","System.Windows.Forms.TextBoxBase.ShortcutsEnabled","System::Windows::Forms::TextBoxBase::ShortcutsEnabled","System.Windows.Forms.TextBoxBase.Text","System::Windows::Forms::TextBoxBase::Text","System.Windows.Forms.TextBoxBase.TextLength","System::Windows::Forms::TextBoxBase::TextLength","System.Windows.Forms.TextBoxBase.ToString","System::Windows::Forms::TextBoxBase::ToString","System.Windows.Forms.TextBoxBase.Undo","System::Windows::Forms::TextBoxBase::Undo","System.Windows.Forms.TextBoxBase.WndProc","System::Windows::Forms::TextBoxBase::WndProc","System.Windows.Forms.TextBoxBase.WordWrap","System::Windows::Forms::TextBoxBase::WordWrap"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ba456639-3c80-eb33-f9a3-1400fc922bb7","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/TextBoxBase.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TextBoxBase class | Microsoft Docs","_op_ogTitle":"TextBoxBase class","description":"Implements the basic functionality required by text controls.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.TextBoxBase","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.textboxbase","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.textboxbase","fileRelativePath":"System.Windows.Forms.TextBoxBase.html"},"themesRelativePathToOutputRoot":"_themes/"}