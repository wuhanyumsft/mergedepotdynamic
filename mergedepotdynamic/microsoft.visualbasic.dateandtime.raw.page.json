{"content":"    \r\n    <h1 id=\"Microsoft_VisualBasic_DateAndTime\">\r\n      <span class=\"lang-csharp\">DateAndTime</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The <code>DateAndTime</code> module contains the procedures and properties used in date and time operations.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[Microsoft.VisualBasic.CompilerServices.StandardModule]\npublic sealed class DateAndTime</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DateAndTime</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This module supports the Visual Basic language keywords and run-time library members that get the current date or time, perform date calculations, return a date or time, set the date or time, or time the duration of a process.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateString\" data-linktype=\"self-bookmark\">DateString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>String</code> value representing the current date according to your system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Now\" data-linktype=\"self-bookmark\">Now</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value containing the current date and time according to your system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_TimeOfDay\" data-linktype=\"self-bookmark\">TimeOfDay</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>Date</code> value containing the current time of day according to your system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Timer\" data-linktype=\"self-bookmark\">Timer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Double</code> value representing the number of seconds elapsed since midnight.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_TimeString\" data-linktype=\"self-bookmark\">TimeString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>String</code> value representing the current time of day according to your system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Today\" data-linktype=\"self-bookmark\">Today</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>Date</code> value containing the current date according to your system.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateAdd_Microsoft_VisualBasic_DateInterval_System_Double_System_DateTime_\" data-linktype=\"self-bookmark\">DateAdd(DateInterval,Double,DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value containing a date and time value to which a specified time interval has been added.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateAdd_System_String_System_Double_System_Object_\" data-linktype=\"self-bookmark\">DateAdd(String,Double,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value containing a date and time value to which a specified time interval has been added.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateDiff_Microsoft_VisualBasic_DateInterval_System_DateTime_System_DateTime_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\" data-linktype=\"self-bookmark\">DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Long</code> value specifying the number of time intervals between two <code>Date</code> values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateDiff_System_String_System_Object_System_Object_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\" data-linktype=\"self-bookmark\">DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Long</code> value specifying the number of time intervals between two <code>Date</code> values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DatePart_Microsoft_VisualBasic_DateInterval_System_DateTime_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\" data-linktype=\"self-bookmark\">DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value containing the specified component of a given <code>Date</code> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DatePart_System_String_System_Object_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\" data-linktype=\"self-bookmark\">DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value containing the specified component of a given <code>Date</code> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateSerial_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">DateSerial(Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_DateValue_System_String_\" data-linktype=\"self-bookmark\">DateValue(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Day_System_DateTime_\" data-linktype=\"self-bookmark\">Day(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value from 1 through 31 representing the day of the month.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Hour_System_DateTime_\" data-linktype=\"self-bookmark\">Hour(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value from 0 through 23 representing the hour of the day.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Minute_System_DateTime_\" data-linktype=\"self-bookmark\">Minute(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value from 0 through 59 representing the minute of the hour.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Month_System_DateTime_\" data-linktype=\"self-bookmark\">Month(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value from 1 through 12 representing the month of the year.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_MonthName_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">MonthName(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>String</code> value containing the name of the specified month.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Second_System_DateTime_\" data-linktype=\"self-bookmark\">Second(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value from 0 through 59 representing the second of the minute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_TimeSerial_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">TimeSerial(Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_TimeValue_System_String_\" data-linktype=\"self-bookmark\">TimeValue(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>Date</code> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Weekday_System_DateTime_Microsoft_VisualBasic_FirstDayOfWeek_\" data-linktype=\"self-bookmark\">Weekday(DateTime,FirstDayOfWeek)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value containing a number representing the day of the week.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_WeekdayName_System_Int32_System_Boolean_Microsoft_VisualBasic_FirstDayOfWeek_\" data-linktype=\"self-bookmark\">WeekdayName(Int32,Boolean,FirstDayOfWeek)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>String</code> value containing the name of the specified weekday.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_DateAndTime_Year_System_DateTime_\" data-linktype=\"self-bookmark\">Year(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <code>Integer</code> value from 1 through 9999 representing the year.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateString\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateString</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>String</code> value representing the current date according to your system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string DateString { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>String</code> value representing the current date according to your system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>Invalid format used to set the value of <code>DateString</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>DateString</code> returns the system date in the MM-dd-yyyy format, which uses the abbreviated month name. The accepted formats for the date are M-d-yyyy, M-d-y, M/d/yyyy, and M/d/y. This is true for all system locales except those that use a double-byte character set (DBCS). If the system locale uses a double-byte character set, <code>DateString</code> returns the system date in the yyyy-MM-dd format. The system locale is set by using the <strong>Clock, Language, and Region</strong> item in <strong>Control Panel</strong>.  </p>\n<p> <strong>Note</strong> The <code>DateString</code> property returns the system date only in the yyyy-MM-dd format for the <code>zh</code> (Chinese simplified), <code>ko</code> (Korean), and <code>ja</code> (Japanese) system locales if you are running Visual Basic within Silverlight.  </p>\n<p> To get or set the current system time as a <code>String</code>, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_TimeString_\" data-linktype=\"relative-path\">TimeString</a> property.  </p>\n<p> To get the current system date or time in the format of your locale, or in a custom format, supply the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_Now_\" data-linktype=\"relative-path\">Now</a> property to the <a class=\"xref\" href=\"microsoft.visualbasic.strings#Microsoft_VisualBasic_Strings_Format_\" data-linktype=\"relative-path\">Format</a> function, specifying either a predefined or user-defined date/time format. The following example demonstrates this.  </p>\n<pre><code>MsgBox(&quot;The formatted date is &quot; &amp; Format(Now, &quot;dddd, d MMM yyyy&quot;))  \n</code></pre><p> To access the current system date as a <code>Date</code>, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_Today_\" data-linktype=\"relative-path\">Today</a> property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>DateString</code> property to display the current system date.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDateProperties#1\">MsgBox(&quot;The current date is &quot; &amp; DateString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Now\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Now_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Now</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value containing the current date and time according to your system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime Now { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Date</code> value containing the current date and time according to your system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To set the system date, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_Today_\" data-linktype=\"relative-path\">Today</a> property. To set the system time, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_TimeOfDay_\" data-linktype=\"relative-path\">TimeOfDay</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>Now</code> property to return the current system date and time.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDateProperties#4\">Dim ThisMoment As Date\n&#39; The following statement calls the Get procedure of the Visual Basic Now property.\nThisMoment = Now\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_TimeOfDay\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_TimeOfDay_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeOfDay</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>Date</code> value containing the current time of day according to your system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime TimeOfDay { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>Date</code> value containing the current time of day according to your system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Date</code> data type includes date components. When returning the system time, <code>TimeOfDay</code> sets these all to 1, so the returned value represents the first day of the year 1. When setting the system time, <code>TimeOfDay</code> ignores the date components.  </p>\n<p> To access the current system time as a <code>String</code>, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_TimeString_\" data-linktype=\"relative-path\">TimeString</a> property.  </p>\n<p> To get or set the current system date, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_Today_\" data-linktype=\"relative-path\">Today</a> property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>TimeOfDay</code> property to return the current system time.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDateProperties#3\">Dim currentTime As Date\ncurrentTime = TimeOfDay\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Timer\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Timer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timer</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Double</code> value representing the number of seconds elapsed since midnight.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static double Timer { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Double</code> value representing the number of seconds elapsed since midnight.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Timer</code> property returns both the seconds and the milliseconds since the most recent midnight. The seconds are in the integral part of the return value, and the milliseconds are in the fractional part.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Timer</code> property to pause the application. It can perform other processing during the pause.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrTimerProperty#1\">Public Sub waitFiveSeconds()\n    If TimeOfDay &gt;= #11:59:55 PM# Then\n        MsgBox(&quot;The current time is within 5 seconds of midnight&quot; &amp; \n            vbCrLf &amp; &quot;The timer returns to 0.0 at midnight&quot;)\n        Return\n    End If\n    Dim start, finish, totalTime As Double\n    If (MsgBox(&quot;Press Yes to pause for 5 seconds&quot;, MsgBoxStyle.YesNo)) =\n         MsgBoxResult.Yes Then\n\n        start = Microsoft.VisualBasic.DateAndTime.Timer\n        &#39; Set end time for 5-second duration.\n        finish = start + 5.0\n        Do While Microsoft.VisualBasic.DateAndTime.Timer &lt; finish\n        &#39; Do other processing while waiting for 5 seconds to elapse.\n        Loop\n        totalTime = Microsoft.VisualBasic.DateAndTime.Timer - start\n        MsgBox(&quot;Paused for &quot; &amp; totalTime &amp; &quot; seconds&quot;)\n    End If\nEnd Sub\n</code></pre><p> Note that you must qualify the <code>Timer</code> property with the <a class=\"xref\" href=\"microsoft.visualbasic\" data-linktype=\"relative-path\">Microsoft.VisualBasic</a> namespace, because <code>Timer</code> is also a defined class in the <a class=\"xref\" href=\"system.threading\" data-linktype=\"relative-path\">System.Threading</a>, <a class=\"xref\" href=\"system.timers\" data-linktype=\"relative-path\">System.Timers</a>, and <a class=\"xref\" href=\"system.windows.forms\" data-linktype=\"relative-path\">System.Windows.Forms</a> namespaces.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_TimeString\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_TimeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeString</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>String</code> value representing the current time of day according to your system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string TimeString { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>String</code> value representing the current time of day according to your system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>Invalid format used to set the value of <code>TimeString</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>TimeString</code> always returns the system time as &quot;HH:mm:ss&quot;, which is a 24-hour format. This format is culture-invariant, which means it does not change even if you change the <strong>Regional Options</strong> in <strong>Control Panel</strong>.  </p>\n<p> To get or set the current system date as a <code>String</code>, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_DateString_\" data-linktype=\"relative-path\">DateString</a> property.  </p>\n<p> To get the current system date or time in the format of your locale, or in a custom format, supply the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_Now_\" data-linktype=\"relative-path\">Now</a> property to the <a class=\"xref\" href=\"microsoft.visualbasic.strings#Microsoft_VisualBasic_Strings_Format_\" data-linktype=\"relative-path\">Format</a> function, specifying either a predefined or user-defined date/time format. The following example demonstrates this.  </p>\n<pre><code>MsgBox(&quot;The formatted time is &quot; &amp; Format(Now, &quot;hh.mm.ss.fff tt&quot;))  \n</code></pre><p> To access the current system time as a <code>Date</code>, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_TimeOfDay_\" data-linktype=\"relative-path\">TimeOfDay</a> property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Setting the system date or time requires unmanaged code permission, which might affect its execution in partial trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>TimeString</code> property to display the current system time.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDateProperties#2\">MsgBox(&quot;The current time is &quot; &amp; TimeString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Today\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Today_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Today</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>Date</code> value containing the current date according to your system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime Today { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>Date</code> value containing the current date according to your system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Date</code> data type includes time components. When returning the system date, <code>Today</code> sets all of these to 0, so the returned value represents midnight (00:00:00). When setting the system date, <code>Today</code> ignores the time components.  </p>\n<p> To access the current system date as a <code>String</code>, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_DateString_\" data-linktype=\"relative-path\">DateString</a> property.  </p>\n<p> To get or set the current system time, use the <a class=\"xref\" href=\"microsoft.visualbasic.dateandtime#Microsoft_VisualBasic_DateAndTime_TimeOfDay_\" data-linktype=\"relative-path\">TimeOfDay</a> property.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Setting the system date or time requires unmanaged code permission, which might affect its execution in partial-trust situations. For more information, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Today</code> property to return the current system date.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrDateProperties#5\">Dim thisDate As Date\nthisDate = Today\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateAdd_Microsoft_VisualBasic_DateInterval_System_Double_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateAdd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateAdd(DateInterval,Double,DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value containing a date and time value to which a specified time interval has been added.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime DateAdd (Microsoft.VisualBasic.DateInterval Interval, double Number, DateTime DateValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.dateinterval\" data-linktype=\"relative-path\">DateInterval</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>DateInterval</code> enumeration value or <code>String</code> expression representing the time interval you want to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Number</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code>. Floating-point expression representing the number of intervals you want to add. <code>Number</code> can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when <code>Interval</code> specifies hours, minutes, or seconds. For other values of <code>Interval</code>, any fractional part of <code>Number</code> is ignored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code>. An expression representing the date and time to which the interval is to be added. <code>DateValue</code> itself is not changed in the calling program.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Date</code> value containing a date and time value to which a specified time interval has been added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>DateValue</code> is not coercible to <code>Date</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Interval</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <code>DateAdd</code> function to add or subtract a specified time interval from a date. For example, you can calculate a date 30 days from today or a time 45 minutes before now.  </p>\n<p> To add days to <code>DateValue</code>, you can use <code>DateInterval.Day</code>, <code>DateInterval.DayOfYear</code>, or <code>DateInterval.Weekday</code>. These are treated as equivalent because <code>DayOfYear</code> and <code>Weekday</code> are not meaningful time intervals.  </p>\n<p> The <code>DateAdd</code> function never returns an invalid date. If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year. The following example adds one month to January 31:  </p>\n<pre><code class=\"lang-vb#\">Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  \n</code></pre><p> In this example, <code>DateAdd</code> returns <code>#2/28/1995#</code>, not <code>#2/31/1995#</code>. If <code>DateValue</code> is <code>#1/31/1996#</code>, it returns <code>#2/29/1996#</code> because 1996 is a leap year.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>DateAdd</code> uses the current calendar setting from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property of the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace. The default <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> values are determined by <strong>Control Panel</strong> settings.  </p>\n</div>\n<p> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in adding time intervals. For example, you can add a fractional number of days, rounded to the nearest millisecond, to a <code>Date</code> variable as follows:  </p>\n<pre><code class=\"lang-vb#\">Dim NextTime As Date = Now        &#39; Current date and time.  \nNextTime = NextTime.AddDays(3.4)  &#39; Increment by 3 2/5 days.  \n</code></pre><p> The <code>Interval</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>String</th>\n<th>Unit of time interval to add</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DateInterval.Day</code></td>\n<td>d</td>\n<td>Day; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.DayOfYear</code></td>\n<td>y</td>\n<td>Day; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Hour</code></td>\n<td>h</td>\n<td>Hour; rounded to nearest millisecond</td>\n</tr>\n<tr>\n<td><code>DateInterval.Minute</code></td>\n<td>n</td>\n<td>Minute; rounded to nearest millisecond</td>\n</tr>\n<tr>\n<td><code>DateInterval.Month</code></td>\n<td>m</td>\n<td>Month; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Quarter</code></td>\n<td>q</td>\n<td>Quarter; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Second</code></td>\n<td>s</td>\n<td>Second; rounded to nearest millisecond</td>\n</tr>\n<tr>\n<td><code>DateInterval.Weekday</code></td>\n<td>w</td>\n<td>Day; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.WeekOfYear</code></td>\n<td>ww</td>\n<td>Week; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Year</code></td>\n<td>yyyy</td>\n<td>Year; truncated to integral value</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example takes a date and, using the <code>DateAdd</code> function, displays a corresponding date a specified number of months in the future.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#25\">        Dim dateEntered As String =\n        InputBox(&quot;Enter a date&quot;, DefaultResponse:=Date.Now.ToShortDateString)\n        Dim monthsEntered As String =\n        InputBox(&quot;Enter number of months to add&quot;, DefaultResponse:=&quot;12&quot;)\n\n        Dim dateValue As Date = Date.Parse(dateEntered)\n        Dim monthsValue As Integer = Integer.Parse(monthsEntered)\n\n        &#39; Add the months to the date.\n        Dim newDate As Date = DateAdd(DateInterval.Month, monthsValue, dateValue)\n\n        &#39; This statement has a string interval argument, and\n        &#39; is equivalent to the above statement.\n        &#39;Dim newDate As Date = DateAdd(&quot;m&quot;, monthsValue, dateValue)\n\n        MessageBox.Show(&quot;New date: &quot; &amp; newDate.ToShortDateString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateAdd_System_String_System_Double_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateAdd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateAdd(String,Double,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value containing a date and time value to which a specified time interval has been added.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime DateAdd (string Interval, double Number, object DateValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>DateInterval</code> enumeration value or <code>String</code> expression representing the time interval you want to add.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Number</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Double</code>. Floating-point expression representing the number of intervals you want to add. <code>Number</code> can be positive (to get date/time values in the future) or negative (to get date/time values in the past). It can contain a fractional part when <code>Interval</code> specifies hours, minutes, or seconds. For other values of <code>Interval</code>, any fractional part of <code>Number</code> is ignored.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code>. An expression representing the date and time to which the interval is to be added. <code>DateValue</code> itself is not changed in the calling program.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Date</code> value containing a date and time value to which a specified time interval has been added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>DateValue</code> is not coercible to <code>Date</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Interval</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>Calculated date is before 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <code>DateAdd</code> function to add or subtract a specified time interval from a date. For example, you can calculate a date 30 days from today or a time 45 minutes before now.  </p>\n<p> To add days to <code>DateValue</code>, you can use <code>DateInterval.Day</code>, <code>DateInterval.DayOfYear</code>, or <code>DateInterval.Weekday</code>. These are treated as equivalent because <code>DayOfYear</code> and <code>Weekday</code> are not meaningful time intervals.  </p>\n<p> The <code>DateAdd</code> function never returns an invalid date. If necessary, the day part of the resulting date is adjusted downward to the last day of the resulting month in the resulting year. The following example adds one month to January 31:  </p>\n<pre><code class=\"lang-vb#\">Dim NextMonth As Date = DateAdd(DateInterval.Month, 1, #1/31/1995#)  \n</code></pre><p> In this example, <code>DateAdd</code> returns <code>#2/28/1995#</code>, not <code>#2/31/1995#</code>. If <code>DateValue</code> is <code>#1/31/1996#</code>, it returns <code>#2/29/1996#</code> because 1996 is a leap year.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>DateAdd</code> uses the current calendar setting from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property of the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace. The default <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> values are determined by <strong>Control Panel</strong> settings.  </p>\n</div>\n<p> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in adding time intervals. For example, you can add a fractional number of days, rounded to the nearest millisecond, to a <code>Date</code> variable as follows:  </p>\n<pre><code class=\"lang-vb#\">Dim NextTime As Date = Now        &#39; Current date and time.  \nNextTime = NextTime.AddDays(3.4)  &#39; Increment by 3 2/5 days.  \n</code></pre><p> The <code>Interval</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>String</th>\n<th>Unit of time interval to add</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DateInterval.Day</code></td>\n<td>d</td>\n<td>Day; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.DayOfYear</code></td>\n<td>y</td>\n<td>Day; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Hour</code></td>\n<td>h</td>\n<td>Hour; rounded to nearest millisecond</td>\n</tr>\n<tr>\n<td><code>DateInterval.Minute</code></td>\n<td>n</td>\n<td>Minute; rounded to nearest millisecond</td>\n</tr>\n<tr>\n<td><code>DateInterval.Month</code></td>\n<td>m</td>\n<td>Month; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Quarter</code></td>\n<td>q</td>\n<td>Quarter; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Second</code></td>\n<td>s</td>\n<td>Second; rounded to nearest millisecond</td>\n</tr>\n<tr>\n<td><code>DateInterval.Weekday</code></td>\n<td>w</td>\n<td>Day; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.WeekOfYear</code></td>\n<td>ww</td>\n<td>Week; truncated to integral value</td>\n</tr>\n<tr>\n<td><code>DateInterval.Year</code></td>\n<td>yyyy</td>\n<td>Year; truncated to integral value</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example takes a date and, using the <code>DateAdd</code> function, displays a corresponding date a specified number of months in the future.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#25\">        Dim dateEntered As String =\n        InputBox(&quot;Enter a date&quot;, DefaultResponse:=Date.Now.ToShortDateString)\n        Dim monthsEntered As String =\n        InputBox(&quot;Enter number of months to add&quot;, DefaultResponse:=&quot;12&quot;)\n\n        Dim dateValue As Date = Date.Parse(dateEntered)\n        Dim monthsValue As Integer = Integer.Parse(monthsEntered)\n\n        &#39; Add the months to the date.\n        Dim newDate As Date = DateAdd(DateInterval.Month, monthsValue, dateValue)\n\n        &#39; This statement has a string interval argument, and\n        &#39; is equivalent to the above statement.\n        &#39;Dim newDate As Date = DateAdd(&quot;m&quot;, monthsValue, dateValue)\n\n        MessageBox.Show(&quot;New date: &quot; &amp; newDate.ToShortDateString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateDiff_Microsoft_VisualBasic_DateInterval_System_DateTime_System_DateTime_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateDiff_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateDiff(DateInterval,DateTime,DateTime,FirstDayOfWeek,FirstWeekOfYear)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Long</code> value specifying the number of time intervals between two <code>Date</code> values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static long DateDiff (Microsoft.VisualBasic.DateInterval Interval, DateTime Date1, DateTime Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.dateinterval\" data-linktype=\"relative-path\">DateInterval</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>DateInterval</code> enumeration value or <code>String</code> expression representing the time interval you want to use as the unit of difference between <code>Date1</code> and <code>Date2</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Date1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code>. The first date/time value you want to use in the calculation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Date2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code>. The second date/time value you want to use in the calculation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DayOfWeek</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstdayofweek\" data-linktype=\"relative-path\">FirstDayOfWeek</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstDayOfWeek</code> enumeration that specifies the first day of the week. If not specified, <code>FirstDayOfWeek.Sunday</code> is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>WeekOfYear</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstweekofyear\" data-linktype=\"relative-path\">FirstWeekOfYear</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstWeekOfYear</code> enumeration that specifies the first week of the year. If not specified, <code>FirstWeekOfYear.Jan1</code> is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Long</code> value specifying the number of time intervals between two <code>Date</code> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Date1</code>, <code>Date2</code>, or <code>DayofWeek</code> is out of range.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>Date1</code> or <code>Date2</code> is of an invalid type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <code>DateDiff</code> function to determine how many specified time intervals exist between two date/time values. For example, you might use <code>DateDiff</code> to calculate the number of days between two dates, or the number of weeks between today and the end of the year.  </p>\n<h2 id=\"behavior\">Behavior</h2>\n<ul>\n<li><p><strong>Treatment of Parameters.</strong> <code>DateDiff</code> subtracts the value of <code>Date1</code> from the value of <code>Date2</code> to produce the difference. Neither value is changed in the calling program.  </p>\n</li>\n<li><p><strong>Return Values.</strong> Because <code>Date1</code> and <code>Date2</code> are of the <code>Date</code> data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer. However, <code>DateDiff</code> always returns the number of time intervals as a <code>Long</code> value.  </p>\n<p> If <code>Date1</code> represents a later date and time than <code>Date2</code>, <code>DateDiff</code> returns a negative number.  </p>\n</li>\n<li><p><strong>Day Intervals.</strong> If <code>Interval</code> is set to <code>DateInterval.DayOfYear</code>, it is treated the same as <code>DateInterval.Day</code>, because <code>DayOfYear</code> is not a meaningful unit for a time interval.  </p>\n</li>\n<li><p><strong>Week Intervals.</strong> If <code>Interval</code> is set to <code>DateInterval.WeekOfYear</code>, the return value represents the number of weeks between the first day of the week containing <code>Date1</code> and the first day of the week containing <code>Date2</code>. The following example shows how this produces different results from <code>DateInterval.Weekday</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#60\">        &#39; The following statements set datTim1 to a Thursday\n        &#39; and datTim2 to the following Tuesday.\n        Dim datTim1 As Date = #1/4/2001#\n        Dim datTim2 As Date = #1/9/2001#\n        &#39; Assume Sunday is specified as first day of the week.\n        Dim wD As Long = DateDiff(DateInterval.Weekday, datTim1, datTim2)\n        Dim wY As Long = DateDiff(DateInterval.WeekOfYear, datTim1, datTim2)\n</code></pre><p> In the preceding example, <code>DateDiff</code> returns 0 to <code>wD</code> because the difference between the two dates is less than seven days, but it returns 1 to <code>wY</code> because there is a seven-day difference between the first days of the respective calendar weeks.  </p>\n</li>\n<li><p><strong>Larger Intervals.</strong> If <code>Interval</code> is set to <code>DateInterval.Year</code>, the return value is calculated purely from the year parts of <code>Date1</code> and <code>Date2</code>. Similarly, the return value for <code>DateInterval.Month</code> is calculated purely from the year and month parts of the arguments, and for <code>DateInterval.Quarter</code> from the quarters containing the two dates.  </p>\n<p> For example, when comparing December 31 to January 1 of the following year, <code>DateDiff</code> returns 1 for <code>DateInterval.Year</code>, <code>DateInterval.Quarter</code>, or <code>DateInterval.Month</code>, even though at most only one day has elapsed.  </p>\n<p> For cultures such as Japanese that have multiple eras, the <code>DateDiff</code> method does not return a difference in years if the difference spans two or more eras. Instead, you can calculate the difference in values returned by the <a class=\"xref\" href=\"system.datetime#System_DateTime_Year_\" data-linktype=\"relative-path\">Year</a> property, as shown in the following example: <code>date2.Year - date1.Year</code>.  </p>\n</li>\n<li><p><strong>Other Intervals.</strong> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in finding time intervals. For example, you can use the <code>Subtract</code> method in either of its overloaded forms: <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_\" data-linktype=\"relative-path\">Subtract</a> subtracts a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> from a <code>Date</code> variable to return another <code>Date</code> value, and <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_\" data-linktype=\"relative-path\">Subtract</a> subtracts a <code>Date</code> value to return a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>. You can time a process to find out how many milliseconds it takes, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#61\">        Dim startTime As Date = Now\n        &#39; Run the process that is to be timed.\n        Dim runLength As Global.System.TimeSpan = Now.Subtract(startTime)\n        Dim millisecs As Double = runLength.TotalMilliseconds\n</code></pre><p>The <code>Interval</code> argument can have one of the following settings.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>String value</th>\n<th>Unit of time difference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DateInterval.Day</code></td>\n<td>&quot;d&quot;</td>\n<td>Day</td>\n</tr>\n<tr>\n<td><code>DateInterval.DayOfYear</code></td>\n<td>&quot;y&quot;</td>\n<td>Day</td>\n</tr>\n<tr>\n<td><code>DateInterval.Hour</code></td>\n<td>&quot;h&quot;</td>\n<td>Hour</td>\n</tr>\n<tr>\n<td><code>DateInterval.Minute</code></td>\n<td>&quot;n&quot;</td>\n<td>Minute</td>\n</tr>\n<tr>\n<td><code>DateInterval.Month</code></td>\n<td>&quot;m&quot;</td>\n<td>Month</td>\n</tr>\n<tr>\n<td><code>DateInterval.Quarter</code></td>\n<td>&quot;q&quot;</td>\n<td>Quarter</td>\n</tr>\n<tr>\n<td><code>DateInterval.Second</code></td>\n<td>&quot;s&quot;</td>\n<td>Second</td>\n</tr>\n<tr>\n<td><code>DateInterval.Weekday</code></td>\n<td>&quot;w&quot;</td>\n<td>Week</td>\n</tr>\n<tr>\n<td><code>DateInterval.WeekOfYear</code></td>\n<td>&quot;ww&quot;</td>\n<td>Calendar week</td>\n</tr>\n<tr>\n<td><code>DateInterval.Year</code></td>\n<td>&quot;yyyy&quot;</td>\n<td>Year</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>DayOfWeek</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstDayOfWeek.System</code></td>\n<td>0</td>\n<td>First day of week specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Sunday</code></td>\n<td>1</td>\n<td>Sunday (default)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Monday</code></td>\n<td>2</td>\n<td>Monday (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Tuesday</code></td>\n<td>3</td>\n<td>Tuesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Wednesday</code></td>\n<td>4</td>\n<td>Wednesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Thursday</code></td>\n<td>5</td>\n<td>Thursday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Friday</code></td>\n<td>6</td>\n<td>Friday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Saturday</code></td>\n<td>7</td>\n<td>Saturday</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>WeekOfYear</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstWeekOfYear.System</code></td>\n<td>0</td>\n<td>First week of year specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.Jan1</code></td>\n<td>1</td>\n<td>Week in which January 1 occurs (default)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFourDays</code></td>\n<td>2</td>\n<td>Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFullWeek</code></td>\n<td>3</td>\n<td>First full week in the new year</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>DateDiff</code> function to display the number of days between a given date and today.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#26\">        Dim date2Entered As String = InputBox(&quot;Enter a date&quot;)\n\n        Try\n            Dim date2 As Date = Date.Parse(date2Entered)\n            Dim date1 As Date = Now\n\n            &#39; Determine the number of days between the two dates.\n            Dim days As Long = DateDiff(DateInterval.Day, date1, date2)\n\n            &#39; This statement has a string interval argument, and\n            &#39; is equivalent to the above statement.\n            &#39;Dim days As Long = DateDiff(&quot;d&quot;, date1, date2)\n\n            MessageBox.Show(&quot;Days from today: &quot; &amp; days.ToString)\n        Catch ex As Exception\n            MessageBox.Show(&quot;Invalid Date: &quot; &amp; ex.Message)\n        End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateDiff_System_String_System_Object_System_Object_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateDiff_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateDiff(String,Object,Object,FirstDayOfWeek,FirstWeekOfYear)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Long</code> value specifying the number of time intervals between two <code>Date</code> values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static long DateDiff (string Interval, object Date1, object Date2, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>DateInterval</code> enumeration value or <code>String</code> expression representing the time interval you want to use as the unit of difference between <code>Date1</code> and <code>Date2</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Date1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code>. The first date/time value you want to use in the calculation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Date2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code>. The second date/time value you want to use in the calculation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DayOfWeek</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstdayofweek\" data-linktype=\"relative-path\">FirstDayOfWeek</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstDayOfWeek</code> enumeration that specifies the first day of the week. If not specified, <code>FirstDayOfWeek.Sunday</code> is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>WeekOfYear</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstweekofyear\" data-linktype=\"relative-path\">FirstWeekOfYear</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstWeekOfYear</code> enumeration that specifies the first week of the year. If not specified, <code>FirstWeekOfYear.Jan1</code> is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Long</code> value specifying the number of time intervals between two <code>Date</code> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Date1</code>, <code>Date2</code>, or <code>DayofWeek</code> is out of range.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>Date1</code> or <code>Date2</code> is of an invalid type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <code>DateDiff</code> function to determine how many specified time intervals exist between two date/time values. For example, you might use <code>DateDiff</code> to calculate the number of days between two dates, or the number of weeks between today and the end of the year.  </p>\n<h2 id=\"behavior\">Behavior</h2>\n<ul>\n<li><p><strong>Treatment of Parameters.</strong> <code>DateDiff</code> subtracts the value of <code>Date1</code> from the value of <code>Date2</code> to produce the difference. Neither value is changed in the calling program.  </p>\n</li>\n<li><p><strong>Return Values.</strong> Because <code>Date1</code> and <code>Date2</code> are of the <code>Date</code> data type, they hold date and time values accurate to 100-nanosecond ticks on the system timer. However, <code>DateDiff</code> always returns the number of time intervals as a <code>Long</code> value.  </p>\n<p> If <code>Date1</code> represents a later date and time than <code>Date2</code>, <code>DateDiff</code> returns a negative number.  </p>\n</li>\n<li><p><strong>Day Intervals.</strong> If <code>Interval</code> is set to <code>DateInterval.DayOfYear</code>, it is treated the same as <code>DateInterval.Day</code>, because <code>DayOfYear</code> is not a meaningful unit for a time interval.  </p>\n</li>\n<li><p><strong>Week Intervals.</strong> If <code>Interval</code> is set to <code>DateInterval.WeekOfYear</code>, the return value represents the number of weeks between the first day of the week containing <code>Date1</code> and the first day of the week containing <code>Date2</code>. The following example shows how this produces different results from <code>DateInterval.Weekday</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#60\">        &#39; The following statements set datTim1 to a Thursday\n        &#39; and datTim2 to the following Tuesday.\n        Dim datTim1 As Date = #1/4/2001#\n        Dim datTim2 As Date = #1/9/2001#\n        &#39; Assume Sunday is specified as first day of the week.\n        Dim wD As Long = DateDiff(DateInterval.Weekday, datTim1, datTim2)\n        Dim wY As Long = DateDiff(DateInterval.WeekOfYear, datTim1, datTim2)\n</code></pre><p> In the preceding example, <code>DateDiff</code> returns 0 to <code>wD</code> because the difference between the two dates is less than seven days, but it returns 1 to <code>wY</code> because there is a seven-day difference between the first days of the respective calendar weeks.  </p>\n</li>\n<li><p><strong>Larger Intervals.</strong> If <code>Interval</code> is set to <code>DateInterval.Year</code>, the return value is calculated purely from the year parts of <code>Date1</code> and <code>Date2</code>. Similarly, the return value for <code>DateInterval.Month</code> is calculated purely from the year and month parts of the arguments, and for <code>DateInterval.Quarter</code> from the quarters containing the two dates.  </p>\n<p> For example, when comparing December 31 to January 1 of the following year, <code>DateDiff</code> returns 1 for <code>DateInterval.Year</code>, <code>DateInterval.Quarter</code>, or <code>DateInterval.Month</code>, even though at most only one day has elapsed.  </p>\n<p> For cultures such as Japanese that have multiple eras, the <code>DateDiff</code> method does not return a difference in years if the difference spans two or more eras. Instead, you can calculate the difference in values returned by the <a class=\"xref\" href=\"system.datetime#System_DateTime_Year_\" data-linktype=\"relative-path\">Year</a> property, as shown in the following example: <code>date2.Year - date1.Year</code>.  </p>\n</li>\n<li><p><strong>Other Intervals.</strong> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in finding time intervals. For example, you can use the <code>Subtract</code> method in either of its overloaded forms: <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_\" data-linktype=\"relative-path\">Subtract</a> subtracts a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> from a <code>Date</code> variable to return another <code>Date</code> value, and <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_\" data-linktype=\"relative-path\">Subtract</a> subtracts a <code>Date</code> value to return a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>. You can time a process to find out how many milliseconds it takes, as the following example shows.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#61\">        Dim startTime As Date = Now\n        &#39; Run the process that is to be timed.\n        Dim runLength As Global.System.TimeSpan = Now.Subtract(startTime)\n        Dim millisecs As Double = runLength.TotalMilliseconds\n</code></pre><p>The <code>Interval</code> argument can have one of the following settings.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>String value</th>\n<th>Unit of time difference</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DateInterval.Day</code></td>\n<td>&quot;d&quot;</td>\n<td>Day</td>\n</tr>\n<tr>\n<td><code>DateInterval.DayOfYear</code></td>\n<td>&quot;y&quot;</td>\n<td>Day</td>\n</tr>\n<tr>\n<td><code>DateInterval.Hour</code></td>\n<td>&quot;h&quot;</td>\n<td>Hour</td>\n</tr>\n<tr>\n<td><code>DateInterval.Minute</code></td>\n<td>&quot;n&quot;</td>\n<td>Minute</td>\n</tr>\n<tr>\n<td><code>DateInterval.Month</code></td>\n<td>&quot;m&quot;</td>\n<td>Month</td>\n</tr>\n<tr>\n<td><code>DateInterval.Quarter</code></td>\n<td>&quot;q&quot;</td>\n<td>Quarter</td>\n</tr>\n<tr>\n<td><code>DateInterval.Second</code></td>\n<td>&quot;s&quot;</td>\n<td>Second</td>\n</tr>\n<tr>\n<td><code>DateInterval.Weekday</code></td>\n<td>&quot;w&quot;</td>\n<td>Week</td>\n</tr>\n<tr>\n<td><code>DateInterval.WeekOfYear</code></td>\n<td>&quot;ww&quot;</td>\n<td>Calendar week</td>\n</tr>\n<tr>\n<td><code>DateInterval.Year</code></td>\n<td>&quot;yyyy&quot;</td>\n<td>Year</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>DayOfWeek</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstDayOfWeek.System</code></td>\n<td>0</td>\n<td>First day of week specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Sunday</code></td>\n<td>1</td>\n<td>Sunday (default)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Monday</code></td>\n<td>2</td>\n<td>Monday (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Tuesday</code></td>\n<td>3</td>\n<td>Tuesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Wednesday</code></td>\n<td>4</td>\n<td>Wednesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Thursday</code></td>\n<td>5</td>\n<td>Thursday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Friday</code></td>\n<td>6</td>\n<td>Friday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Saturday</code></td>\n<td>7</td>\n<td>Saturday</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>WeekOfYear</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstWeekOfYear.System</code></td>\n<td>0</td>\n<td>First week of year specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.Jan1</code></td>\n<td>1</td>\n<td>Week in which January 1 occurs (default)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFourDays</code></td>\n<td>2</td>\n<td>Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFullWeek</code></td>\n<td>3</td>\n<td>First full week in the new year</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>DateDiff</code> function to display the number of days between a given date and today.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#26\">        Dim date2Entered As String = InputBox(&quot;Enter a date&quot;)\n\n        Try\n            Dim date2 As Date = Date.Parse(date2Entered)\n            Dim date1 As Date = Now\n\n            &#39; Determine the number of days between the two dates.\n            Dim days As Long = DateDiff(DateInterval.Day, date1, date2)\n\n            &#39; This statement has a string interval argument, and\n            &#39; is equivalent to the above statement.\n            &#39;Dim days As Long = DateDiff(&quot;d&quot;, date1, date2)\n\n            MessageBox.Show(&quot;Days from today: &quot; &amp; days.ToString)\n        Catch ex As Exception\n            MessageBox.Show(&quot;Invalid Date: &quot; &amp; ex.Message)\n        End Try\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DatePart_Microsoft_VisualBasic_DateInterval_System_DateTime_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DatePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DatePart(DateInterval,DateTime,FirstDayOfWeek,FirstWeekOfYear)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value containing the specified component of a given <code>Date</code> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int DatePart (Microsoft.VisualBasic.DateInterval Interval, DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear FirstWeekOfYearValue = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.dateinterval\" data-linktype=\"relative-path\">DateInterval</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>DateInterval</code> enumeration value or <code>String</code> expression representing the part of the date/time value you want to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value that you want to evaluate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FirstDayOfWeekValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstdayofweek\" data-linktype=\"relative-path\">FirstDayOfWeek</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstDayOfWeek</code> enumeration that specifies the first day of the week. If not specified, <code>FirstDayOfWeek.Sunday</code> is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FirstWeekOfYearValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstweekofyear\" data-linktype=\"relative-path\">FirstWeekOfYear</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstWeekOfYear</code> enumeration that specifies the first week of the year. If not specified, <code>FirstWeekOfYear.Jan1</code> is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value containing the specified component of a given <code>Date</code> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Interval</code> is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>DateValue</code> is not coercible to <code>Date</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <code>DatePart</code> function to evaluate a date/time value and return a specific component. For example, you might use <code>DatePart</code> to calculate the day of the week or the current hour.  </p>\n<p> If you choose <code>DateInterval.Weekday</code> for the <code>Interval</code> argument, the returned value is consistent with the values of the <code>FirstDayOfWeek</code> enumeration. If you choose <code>DateInterval.WeekOfYear</code>, <code>DatePart</code> uses the <a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a> and <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> classes of the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace to determine your current settings.  </p>\n<p> The <code>FirstDayOfWeekValue</code> argument affects calculations that use the <code>DateInterval.Weekday</code> and <code>DateInterval.WeekOfYear</code> <code>Interval</code> settings. The <code>FirstWeekOfYearValue</code> argument affects calculations that specify <code>DateInterval.WeekOfYear</code> for <code>Interval</code>.  </p>\n<p> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in retrieving date/time parts. For example, you can obtain the entire date value of a <code>Date</code> variable, with the time value set to midnight, as follows:  </p>\n<pre><code class=\"lang-vb#\">Dim CurrDatTim As Date = Now   &#39; Current date and time.  \nDim LastMidnight As Date = CurrDatTim.Date   &#39; At midnight.  \n</code></pre><p> The <code>Interval</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>String</th>\n<th>Part of date/time value to return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DateInterval.Day</code></td>\n<td>d</td>\n<td>Day of month (1 through 31)</td>\n</tr>\n<tr>\n<td><code>DateInterval.DayOfYear</code></td>\n<td>y</td>\n<td>Day of year (1 through 366)</td>\n</tr>\n<tr>\n<td><code>DateInterval.Hour</code></td>\n<td>h</td>\n<td>Hour</td>\n</tr>\n<tr>\n<td><code>DateInterval.Minute</code></td>\n<td>n</td>\n<td>Minute</td>\n</tr>\n<tr>\n<td><code>DateInterval.Month</code></td>\n<td>m</td>\n<td>Month</td>\n</tr>\n<tr>\n<td><code>DateInterval.Quarter</code></td>\n<td>q</td>\n<td>Quarter</td>\n</tr>\n<tr>\n<td><code>DateInterval.Second</code></td>\n<td>s</td>\n<td>Second</td>\n</tr>\n<tr>\n<td><code>DateInterval.Weekday</code></td>\n<td>w</td>\n<td>Day of week (1 through 7)</td>\n</tr>\n<tr>\n<td><code>DateInterval.WeekOfYear</code></td>\n<td>ww</td>\n<td>Week of year (1 through 53)</td>\n</tr>\n<tr>\n<td><code>DateInterval.Year</code></td>\n<td>yyyy</td>\n<td>Year</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>FirstDayOfWeekValue</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstDayOfWeek.System</code></td>\n<td>0</td>\n<td>First day of week specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Sunday</code></td>\n<td>1</td>\n<td>Sunday (default)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Monday</code></td>\n<td>2</td>\n<td>Monday (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Tuesday</code></td>\n<td>3</td>\n<td>Tuesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Wednesday</code></td>\n<td>4</td>\n<td>Wednesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Thursday</code></td>\n<td>5</td>\n<td>Thursday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Friday</code></td>\n<td>6</td>\n<td>Friday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Saturday</code></td>\n<td>7</td>\n<td>Saturday</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>FirstWeekOfYearValue</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstWeekOfYear.System</code></td>\n<td>0</td>\n<td>First week of year specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.Jan1</code></td>\n<td>1</td>\n<td>Week in which January 1 occurs (default)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFourDays</code></td>\n<td>2</td>\n<td>Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFullWeek</code></td>\n<td>3</td>\n<td>First full week in new year</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example takes a date and, using the <code>DatePart</code> function, displays the quarter of the year in which it occurs.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#27\">        Dim DateString, Msg As String\n        Dim ActualDate As Date\n        &#39; Enter February 12, 2008, or 2/12/2008.\n        DateString = InputBox(&quot;Enter a date:&quot;)\n        ActualDate = CDate(DateString)\n\n        &#39; The first two examples use enumeration values for the interval.\n        Msg = &quot;Quarter: &quot; &amp; DatePart(DateInterval.Quarter, ActualDate)\n        &#39; The quarter is 1.\n        MsgBox(Msg)\n        Msg = &quot;The day of the month: &quot; &amp; DatePart(DateInterval.Day, ActualDate)\n        &#39; The day of the month is 12.\n        MsgBox(Msg)\n\n        &#39; The next two examples use string values for the interval parameter.\n        Msg = &quot;The week of the year: &quot; &amp; DatePart(&quot;ww&quot;, ActualDate)\n        &#39; The week of the year is 7.\n        MsgBox(Msg)\n        Msg = &quot;The day of the week: &quot; &amp; DatePart(&quot;w&quot;, ActualDate)\n        &#39; The day of the week is 3 (Tuesday).\n        MsgBox(Msg)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DatePart_System_String_System_Object_Microsoft_VisualBasic_FirstDayOfWeek_Microsoft_VisualBasic_FirstWeekOfYear_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DatePart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DatePart(String,Object,FirstDayOfWeek,FirstWeekOfYear)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value containing the specified component of a given <code>Date</code> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int DatePart (string Interval, object DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday, Microsoft.VisualBasic.FirstWeekOfYear WeekOfYear = Microsoft.VisualBasic.FirstWeekOfYear.Jan1);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Interval</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>DateInterval</code> enumeration value or <code>String</code> expression representing the part of the date/time value you want to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value that you want to evaluate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DayOfWeek</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstdayofweek\" data-linktype=\"relative-path\">FirstDayOfWeek</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstDayOfWeek</code> enumeration that specifies the first day of the week. If not specified, <code>FirstDayOfWeek.Sunday</code> is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>WeekOfYear</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstweekofyear\" data-linktype=\"relative-path\">FirstWeekOfYear</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstWeekOfYear</code> enumeration that specifies the first week of the year. If not specified, <code>FirstWeekOfYear.Jan1</code> is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value containing the specified component of a given <code>Date</code> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Interval</code> is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>DateValue</code> is not coercible to <code>Date</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the <code>DatePart</code> function to evaluate a date/time value and return a specific component. For example, you might use <code>DatePart</code> to calculate the day of the week or the current hour.  </p>\n<p> If you choose <code>DateInterval.Weekday</code> for the <code>Interval</code> argument, the returned value is consistent with the values of the <code>FirstDayOfWeek</code> enumeration. If you choose <code>DateInterval.WeekOfYear</code>, <code>DatePart</code> uses the <a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a> and <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> classes of the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace to determine your current settings.  </p>\n<p> The <code>FirstDayOfWeekValue</code> argument affects calculations that use the <code>DateInterval.Weekday</code> and <code>DateInterval.WeekOfYear</code> <code>Interval</code> settings. The <code>FirstWeekOfYearValue</code> argument affects calculations that specify <code>DateInterval.WeekOfYear</code> for <code>Interval</code>.  </p>\n<p> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in retrieving date/time parts. For example, you can obtain the entire date value of a <code>Date</code> variable, with the time value set to midnight, as follows:  </p>\n<pre><code class=\"lang-vb#\">Dim CurrDatTim As Date = Now   &#39; Current date and time.  \nDim LastMidnight As Date = CurrDatTim.Date   &#39; At midnight.  \n</code></pre><p> The <code>Interval</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>String</th>\n<th>Part of date/time value to return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>DateInterval.Day</code></td>\n<td>d</td>\n<td>Day of month (1 through 31)</td>\n</tr>\n<tr>\n<td><code>DateInterval.DayOfYear</code></td>\n<td>y</td>\n<td>Day of year (1 through 366)</td>\n</tr>\n<tr>\n<td><code>DateInterval.Hour</code></td>\n<td>h</td>\n<td>Hour</td>\n</tr>\n<tr>\n<td><code>DateInterval.Minute</code></td>\n<td>n</td>\n<td>Minute</td>\n</tr>\n<tr>\n<td><code>DateInterval.Month</code></td>\n<td>m</td>\n<td>Month</td>\n</tr>\n<tr>\n<td><code>DateInterval.Quarter</code></td>\n<td>q</td>\n<td>Quarter</td>\n</tr>\n<tr>\n<td><code>DateInterval.Second</code></td>\n<td>s</td>\n<td>Second</td>\n</tr>\n<tr>\n<td><code>DateInterval.Weekday</code></td>\n<td>w</td>\n<td>Day of week (1 through 7)</td>\n</tr>\n<tr>\n<td><code>DateInterval.WeekOfYear</code></td>\n<td>ww</td>\n<td>Week of year (1 through 53)</td>\n</tr>\n<tr>\n<td><code>DateInterval.Year</code></td>\n<td>yyyy</td>\n<td>Year</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>FirstDayOfWeekValue</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstDayOfWeek.System</code></td>\n<td>0</td>\n<td>First day of week specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Sunday</code></td>\n<td>1</td>\n<td>Sunday (default)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Monday</code></td>\n<td>2</td>\n<td>Monday (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Tuesday</code></td>\n<td>3</td>\n<td>Tuesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Wednesday</code></td>\n<td>4</td>\n<td>Wednesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Thursday</code></td>\n<td>5</td>\n<td>Thursday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Friday</code></td>\n<td>6</td>\n<td>Friday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Saturday</code></td>\n<td>7</td>\n<td>Saturday</td>\n</tr>\n</tbody>\n</table>\n<p> The <code>FirstWeekOfYearValue</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstWeekOfYear.System</code></td>\n<td>0</td>\n<td>First week of year specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.Jan1</code></td>\n<td>1</td>\n<td>Week in which January 1 occurs (default)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFourDays</code></td>\n<td>2</td>\n<td>Week that has at least four days in the new year (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstWeekOfYear.FirstFullWeek</code></td>\n<td>3</td>\n<td>First full week in new year</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example takes a date and, using the <code>DatePart</code> function, displays the quarter of the year in which it occurs.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#27\">        Dim DateString, Msg As String\n        Dim ActualDate As Date\n        &#39; Enter February 12, 2008, or 2/12/2008.\n        DateString = InputBox(&quot;Enter a date:&quot;)\n        ActualDate = CDate(DateString)\n\n        &#39; The first two examples use enumeration values for the interval.\n        Msg = &quot;Quarter: &quot; &amp; DatePart(DateInterval.Quarter, ActualDate)\n        &#39; The quarter is 1.\n        MsgBox(Msg)\n        Msg = &quot;The day of the month: &quot; &amp; DatePart(DateInterval.Day, ActualDate)\n        &#39; The day of the month is 12.\n        MsgBox(Msg)\n\n        &#39; The next two examples use string values for the interval parameter.\n        Msg = &quot;The week of the year: &quot; &amp; DatePart(&quot;ww&quot;, ActualDate)\n        &#39; The week of the year is 7.\n        MsgBox(Msg)\n        Msg = &quot;The day of the week: &quot; &amp; DatePart(&quot;w&quot;, ActualDate)\n        &#39; The day of the week is 3 (Tuesday).\n        MsgBox(Msg)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateSerial_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateSerial_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateSerial(Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime DateSerial (int Year, int Month, int Day);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Year</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> expression from 1 through 9999. However, values below this range are also accepted. If <code>Year</code> is 0 through 99, it is interpreted as being between 1930 and 2029, as explained in the &quot;Remarks&quot; section below. If <code>Year</code> is less than 1, it is subtracted from the current year.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Month</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> expression from 1 through 12. However, values outside this range are also accepted. The value of <code>Month</code> is offset by 1 and applied to January of the calculated year. In other words, (<code>Month</code> - 1) is added to January. The year is recalculated if necessary. The following results illustrate this effect:  </p>\n<p> If <code>Month</code> is 1, the result is January of the calculated year.  </p>\n<p> If <code>Month</code> is 0, the result is December of the previous year.  </p>\n<p> If <code>Month</code> is -1, the result is November of the previous year.  </p>\n<p> If <code>Month</code> is 13, the result is January of the following year.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Day</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> expression from 1 through 31. However, values outside this range are also accepted. The value of <code>Day</code> is offset by 1 and applied to the first day of the calculated month. In other words, (<code>Day</code> - 1) is added to the first of the month. The month and year are recalculated if necessary. The following results illustrate this effect:  </p>\n<p> If <code>Day</code> is 1, the result is the first day of the calculated month.  </p>\n<p> If <code>Day</code> is 0, the result is the last day of the previous month.  </p>\n<p> If <code>Day</code> is -1, the result is the penultimate day of the previous month.  </p>\n<p> If <code>Day</code> is past the end of the current month, the result is the appropriate day of the following month. For example, if <code>Month</code> is 4 and <code>Day</code> is 31, the result is May 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Date</code> value representing a specified year, month, and day, with the time information set to midnight (00:00:00).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Under Windows 98 or Windows 2000, two-digit years for the <code>Year</code> argument are interpreted based on user-defined computer settings. The default settings are that values from 0 through 29 are interpreted as the years 2000â€“2029, and values from 30 through 99 are interpreted as the years 1930â€“1999. For all other <code>Year</code> arguments, use a four-digit year; for example, 1924.  </p>\n<p> Earlier versions of Windows interpret two-digit years based on the defaults described previously. To be sure the function returns the proper value, use a four-digit <code>Year</code>.  </p>\n<p> The following example demonstrates negative, zero, and positive argument values. Here, the <code>DateSerial</code> function returns a <code>Date</code> representing the day before the first day of March in the year 10 years before the current year; in other words, the last day of February ten years ago.  </p>\n<pre><code class=\"lang-vb#\">Dim EndFeb As Date = DateSerial(-10, 3, 0)  \n</code></pre><p> If either <code>Month</code> or <code>Day</code> exceeds its normal range, it is applied to the next larger unit as appropriate. For example, if you specify 32 days, it is evaluated as one month and from one to four days, depending on the value of <code>Month</code>. If <code>Year</code> is greater than 9999, or if any argument is outside the range -2,147,483,648 through 2,147,483,647, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> error occurs. If the date specified by the three arguments is earlier than 00:00:00 on January 1 of the year 1, or later than 23:59:59 on December 31, 9999, an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> error occurs.  </p>\n<p> The <code>Date</code> data type includes time components. <code>DateSerial</code> sets all of these to 0, so the returned value represents the beginning of the calculated day.  </p>\n<p> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure, its methods give you additional options in assembling a <code>Date</code> value. For example, you can use one of the overloaded <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_\" data-linktype=\"relative-path\">DateTime</a> constructors to populate a <code>Date</code> variable using the desired combination of components. The following example sets <code>NewDateTime</code> to May 6, 1978 at one tenth of a second before 8:30 in the morning:  </p>\n<pre><code class=\"lang-vb#\">Dim NewDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>DateSerial</code> function to return the date for the specified year, month, and day.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#28\">        &#39; DateSerial returns the date for a specified year, month, and day.\n        Dim aDate As Date\n        &#39; Variable aDate contains the date for February 12, 1969.\n        aDate = DateSerial(1969, 2, 12)\n        Console.WriteLine(aDate)\n\n        &#39; The following example uses DateSerial to determine and display\n        &#39; the last day of the previous month.\n        &#39; First, establish a starting date.\n        Dim startDate = #1/23/1994#\n        &#39; The 0 for the day represents the last day of the previous month.\n        Dim endOfLastMonth = DateSerial(startDate.Year, startDate.Month, 0)\n        Console.WriteLine(&quot;Last day in the previous month: &quot; &amp; endOfLastMonth)\n\n        &#39; The following example finds and displays the day of the week that the \n        &#39; 15th day of the following month will fall on.\n        Dim fifteenthsDay = DateSerial(Today.Year, Today.Month + 1, 15)\n        Console.WriteLine(&quot;The 15th of next month is a {0}&quot;, fifteenthsDay.DayOfWeek)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_DateValue_System_String_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_DateValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DateValue(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime DateValue (string StringDate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>StringDate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>String</code> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p><code>Date</code> value containing the date information represented by a string, with the time information set to midnight (00:00:00).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>StringDate</code> includes invalid time information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>StringDate</code> includes only numbers from 1 through 12 separated by valid date separators, <code>DateValue</code> recognizes the order for month, day, and year according to the Short Date format specified for your system. <code>DateValue</code> uses the current calendar setting from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property of the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace. The default <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> values are determined by <strong>Control Panel</strong> settings. You can override the Short Date format by setting the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_ShortDatePattern_\" data-linktype=\"relative-path\">ShortDatePattern</a> property of the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace.  </p>\n<p> <code>DateValue</code> recognizes month names in long, abbreviated, and numeric form. For example, in addition to recognizing 12/30/1991 and 12/30/91, <code>DateValue</code> also recognizes December 30, 1991 and Dec 30, 1991.  </p>\n<p> If the year part of <code>StringDate</code> is omitted, <code>DateValue</code> uses the current year from your computer&#39;s system date.  </p>\n<p> If the <code>StringDate</code> argument includes time information, <code>DateValue</code> does not include it in the returned value. However, if <code>StringDate</code> includes invalid time information, such as &quot;89:98&quot;, an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> error occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>DateValue</code> function to convert a string to a date. You can also use date literals to directly assign a date to an <code>Object</code> or <code>Date</code> variable, for example, <code>oldDate = #2/12/69#</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#29\">        Dim oldDate As Date\n        oldDate = DateValue(&quot;February 12, 1969&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Day_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Day_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Day(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value from 1 through 31 representing the day of the month.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Day (DateTime DateValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value from which you want to extract the day.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value from 1 through 31 representing the day of the month.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you use the <code>Day</code> function, you might have to qualify it with the <code>Microsoft.VisualBasic</code> namespace, because the <a class=\"xref\" href=\"system.windows.forms\" data-linktype=\"relative-path\">System.Windows.Forms</a> namespace defines <a class=\"xref\" href=\"system.windows.forms.day\" data-linktype=\"relative-path\">Day</a> as an enumeration. The following example shows how qualifying <code>Day</code> resolves this ambiguity:  </p>\n<pre><code class=\"lang-vb#\">Dim thisDay As Integer = Microsoft.VisualBasic.DateAndTime.Day(Now)  \n</code></pre><p> You can also obtain the day of the month by calling <code>DatePart</code> and specifying <code>DateInterval.Day</code> for the <em>Interval</em> argument.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>Day</code> function to obtain the day of the month from a specified date. In the development environment, the date literal is displayed in standard short format (such as &quot;02/12/1969&quot;) using the locale settings of your code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#30\">        Dim oldDate As Date\n        Dim oldDay As Integer\n        &#39; Assign a date using standard short format.\n        oldDate = #2/12/1969#\n        oldDay = Microsoft.VisualBasic.DateAndTime.Day(oldDate)\n        &#39; oldDay now contains 12.\n</code></pre><p> <code>Day</code> is qualified to distinguish it from the <a class=\"xref\" href=\"system.windows.forms.day\" data-linktype=\"relative-path\">System.Windows.Forms.Day</a> enumeration.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Hour_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Hour_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Hour(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value from 0 through 23 representing the hour of the day.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Hour (DateTime TimeValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>TimeValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value from which you want to extract the hour.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value from 0 through 23 representing the hour of the day.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also obtain the hour of the day by calling <code>DatePart</code> and specifying <code>DateInterval.Hour</code> for the <code>Interval</code> argument.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Hour</code> function to obtain the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#32\">        Dim someTime As Date\n        Dim someHour As Integer\n        someTime = #4:35:17 PM#\n        someHour = Hour(someTime)\n        &#39; someHour now contains 16.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Minute_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Minute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Minute(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value from 0 through 59 representing the minute of the hour.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Minute (DateTime TimeValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>TimeValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value from which you want to extract the minute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value from 0 through 59 representing the minute of the hour.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also obtain the minute of the hour by calling <code>DatePart</code> and specifying <code>DateInterval.Minute</code> for the <code>Interval</code> argument.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Minute</code> function to obtain the minute of the hour from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#42\">        Dim thisTime As Date\n        Dim thisMinute As Integer\n        thisTime = #4:35:17 PM#\n        thisMinute = Minute(thisTime)\n        &#39; thisMinute now contains 35.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Month_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Month_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Month(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value from 1 through 12 representing the month of the year.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Month (DateTime DateValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value from which you want to extract the month.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value from 1 through 12 representing the month of the year.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also obtain the month of the year by calling <code>DatePart</code> and specifying <code>DateInterval.Month</code> for the <code>Interval</code> argument.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Month</code> function to obtain the month from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#43\">        Dim thisDate As Date\n        Dim thisMonth As Integer\n        thisDate = #2/12/1969#\n        thisMonth = Month(thisDate)\n        &#39; thisMonth now contains 2.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_MonthName_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_MonthName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MonthName(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>String</code> value containing the name of the specified month.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string MonthName (int Month, bool Abbreviate = false);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Month</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code>. The numeric designation of the month, from 1 through 13; 1 indicates January and 12 indicates December. You can use the value 13 with a 13-month calendar. If your system is using a 12-month calendar and <code>Month</code> is 13, <code>MonthName</code> returns an empty string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Abbreviate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Boolean</code> value that indicates if the month name is to be abbreviated. If omitted, the default is <code>False</code>, which means the month name is not abbreviated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>String</code> value containing the name of the specified month.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Month</code> is less than 1 or greater than 13.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string returned by <code>MonthName</code> depends not only on the input arguments, but also on the <strong>Regional Options</strong> settings specified in the Windows <strong>Control Panel</strong>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>MonthName</code> uses the current calendar setting from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property of the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace. The default <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> values are determined by <strong>Control Panel</strong> settings.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>MonthName</code> function to determine the name of the month, by the integer given. The Boolean value will determine whether the full name (<code>False</code>) or the abbreviated name (<code>True</code>) will be displayed.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#44\">        Dim thisMonth As Integer\n        Dim name As String\n        thisMonth = 4\n        &#39; Set Abbreviate to True to return an abbreviated name.\n        name = MonthName(thisMonth, True)\n        &#39; name now contains &quot;Apr&quot;.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Second_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Second_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Second(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value from 0 through 59 representing the second of the minute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Second (DateTime TimeValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>TimeValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value from which you want to extract the second.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value from 0 through 59 representing the second of the minute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also obtain the second of the minute by calling <code>DatePart</code> and specifying <code>DateInterval.Second</code> for the <code>Interval</code> argument.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>Second</code> function to obtain the second of the minute from a specified time. In the development environment, the time literal is displayed in short time format using the locale settings of your code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#46\">        Dim thisTime As Date\n        Dim thisSecond As Integer\n        thisTime = #4:35:17 PM#\n        thisSecond = Second(thisTime)\n        &#39; thisSecond now contains 17.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_TimeSerial_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_TimeSerial_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeSerial(Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime TimeSerial (int Hour, int Minute, int Second);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Hour</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> expression from 0 through 23. However, values outside this range are also accepted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Minute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> expression from 0 through 59. However, values outside this range are also accepted. The value of <code>Minute</code> is added to the calculated hour, so a negative value specifies minutes before that hour.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Second</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code> expression from 0 through 59. However, values outside this range are also accepted. The value of <code>Second</code> is added to the calculated minute, so a negative value specifies seconds before that minute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Date</code> value representing a specified hour, minute, and second, with the date information set relative to January 1 of the year 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An argument is outside the range -2,147,483,648 through 2,147,483,647</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>Calculated time is less than negative 24 hours.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following example demonstrates negative, zero, and positive argument values. The <code>TimeSerial</code> function returns a time representing 15 minutes before three hours before noon, or 8:45:00 AM.  </p>\n<pre><code class=\"lang-vb#\">Dim alarmTime As Date = TimeSerial(12 - 3, -15, 0)  \n</code></pre><p> If either <code>Minute</code> or <code>Second</code> exceeds its normal range, it is applied to the next larger unit as appropriate. For example, if you specify 75 minutes, it is evaluated as one hour and 15 minutes.  </p>\n<p> <code>TimeSerial</code> reduces the total seconds modulo 86,400, which is the number of seconds in a day. Therefore, the returned time is always between 00:00:00 and 23:59:59.  </p>\n<p> The <code>Date</code> data type includes date components. <code>TimeSerial</code> sets all of these to 1, so the returned value represents the first day of the year 1. However, if the values of the arguments cause the calculated time to exceed 24 hours, the day is incremented as necessary. In the following example, the values of <code>Hour</code> and <code>Minute</code> result in a combined time of more than 24 hours.  </p>\n<pre><code class=\"lang-vb#\">MsgBox(TimeSerial(23, 75, 0))   \n&#39; The preceding statement displays &quot;1/2/0001 12:15:00 AM&quot;.  \n</code></pre><p> If the values of the arguments result in a negative calculated time, the date information is set to 1/1/0001 and the time information is adjusted to be between 00:00:00 and 23:59:59. However, if the calculated time is less than negative 24 hours, an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a> error occurs.  </p>\n<p> Since every <code>Date</code> value is supported by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">System.DateTime</a> structure, its methods give you additional options in assembling a <code>Date</code> value. For example, you can employ one of the overloaded <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_\" data-linktype=\"relative-path\">DateTime</a> constructors to populate a <code>Date</code> variable using the desired combination of components. The following example sets <code>newDateTime</code> to May 6, 1978 at one tenth of a second before 8:30 in the morning:  </p>\n<pre><code class=\"lang-vb#\">Dim newDateTime As Date = New Date(1978, 5, 6, 8, 29, 59, 900)  \n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>TimeSerial</code> function to return a time for the specified hour, minute, and second.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#50\">        Dim thisTime As Date\n        thisTime = TimeSerial(16, 35, 17)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_TimeValue_System_String_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_TimeValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TimeValue(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>Date</code> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static DateTime TimeValue (string StringTime);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>StringTime</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>String</code> expression representing a date/time value from 00:00:00 on January 1 of the year 1 through 23:59:59 on December 31, 9999.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>Date</code> value containing the time information represented by a string, with the date information set to January 1 of the year 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p><code>StringTime</code> includes invalid date information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can enter valid times using a 12-hour or 24-hour clock. For example, <code>&quot;2:24 P.M.&quot;</code> and <code>&quot;14:24&quot;</code> are both valid <code>StringTime</code> arguments.  </p>\n<p> If the <code>StringTime</code> argument includes date information, <code>TimeValue</code> does not include it in the returned value. However, if <code>StringTime</code> includes invalid date information, for example &quot;January 32,&quot; an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a> error occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>TimeValue</code> function to convert a string to a time. You can also use date literals to directly assign a time to a <code>Date</code> variable.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#51\">        Dim thisTime As Date\n        thisTime = TimeValue(&quot;4:35:17 PM&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Weekday_System_DateTime_Microsoft_VisualBasic_FirstDayOfWeek_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Weekday_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Weekday(DateTime,FirstDayOfWeek)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value containing a number representing the day of the week.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Weekday (DateTime DateValue, Microsoft.VisualBasic.FirstDayOfWeek DayOfWeek = Microsoft.VisualBasic.FirstDayOfWeek.Sunday);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value for which you want to determine the day of the week.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>DayOfWeek</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstdayofweek\" data-linktype=\"relative-path\">FirstDayOfWeek</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstDayOfWeek</code> enumeration that specifies the first day of the week. If not specified, <code>FirstDayOfWeek.Sunday</code> is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value containing a number representing the day of the week.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>DayOfWeek</code> is less than 0 or more than 7.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by the <code>Weekday</code> function corresponds to the values of the <code>FirstDayOfWeek</code> enumeration; that is, 1 indicates Sunday and 7 indicates Saturday.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>Weekday</code> uses the current calendar setting from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property of the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace. The default <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> values are determined by <strong>Control Panel</strong> settings.  </p>\n</div>\n<p> The <code>DayOfWeek</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstDayOfWeek.System</code></td>\n<td>0</td>\n<td>First day of week specified in system settings</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Sunday</code></td>\n<td>1</td>\n<td>Sunday (default)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Monday</code></td>\n<td>2</td>\n<td>Monday (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Tuesday</code></td>\n<td>3</td>\n<td>Tuesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Wednesday</code></td>\n<td>4</td>\n<td>Wednesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Thursday</code></td>\n<td>5</td>\n<td>Thursday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Friday</code></td>\n<td>6</td>\n<td>Friday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Saturday</code></td>\n<td>7</td>\n<td>Saturday</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>Weekday</code> function to obtain the day of the week from a specified date.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#57\">        Dim oldDate As Date\n        Dim oldWeekDay As Integer\n        oldDate = #2/12/1969#\n        oldWeekDay = Weekday(oldDate)\n        &#39; oldWeekDay now contains 4 because thisDate represents a Wednesday.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_WeekdayName_System_Int32_System_Boolean_Microsoft_VisualBasic_FirstDayOfWeek_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_WeekdayName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WeekdayName(Int32,Boolean,FirstDayOfWeek)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>String</code> value containing the name of the specified weekday.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string WeekdayName (int Weekday, bool Abbreviate = false, Microsoft.VisualBasic.FirstDayOfWeek FirstDayOfWeekValue = Microsoft.VisualBasic.FirstDayOfWeek.System);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Weekday</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Integer</code>. The numeric designation for the weekday, from 1 through 7; 1 indicates the first day of the week and 7 indicates the last day of the week. The identities of the first and last days depend on the setting of <code>FirstDayOfWeekValue</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Abbreviate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>Boolean</code> value that indicates if the weekday name is to be abbreviated. If omitted, the default is <code>False</code>, which means the weekday name is not abbreviated.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>FirstDayOfWeekValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.visualbasic.firstdayofweek\" data-linktype=\"relative-path\">FirstDayOfWeek</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. A value chosen from the <code>FirstDayOfWeek</code> enumeration that specifies the first day of the week. If not specified, <code>FirstDayOfWeek.System</code> is used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <code>String</code> value containing the name of the specified weekday.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Weekday</code> is less than 1 or greater than 7, or <code>FirstDayOfWeekValue</code> is less than 0 or greater than 7.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string returned by <code>WeekdayName</code> depends not only on the input arguments, but also on the <strong>Regional Options</strong> settings specified in the Windows <strong>Control Panel</strong>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> <code>WeekdayName</code> uses the current calendar setting from the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property of the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> class in the <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace. The default <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> values are determined by <strong>Control Panel</strong> settings.  </p>\n</div>\n<p> The <code>FirstDayOfWeekValue</code> argument can have one of the following settings.  </p>\n<table>\n<thead>\n<tr>\n<th>Enumeration value</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>FirstDayOfWeek.System</code></td>\n<td>0</td>\n<td>First day of week specified in system settings (default)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Sunday</code></td>\n<td>1</td>\n<td>Sunday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Monday</code></td>\n<td>2</td>\n<td>Monday (complies with ISO standard 8601, section 3.17)</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Tuesday</code></td>\n<td>3</td>\n<td>Tuesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Wednesday</code></td>\n<td>4</td>\n<td>Wednesday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Thursday</code></td>\n<td>5</td>\n<td>Thursday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Friday</code></td>\n<td>6</td>\n<td>Friday</td>\n</tr>\n<tr>\n<td><code>FirstDayOfWeek.Saturday</code></td>\n<td>7</td>\n<td>Saturday</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>Weekday</code> function to obtain the day of the week from a specified date, and then the <code>WeekDayName</code> function to obtain the name of the weekday from its number.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#58\">        Dim oldDate As Date\n        Dim oldWeekDayName As String\n        oldDate = #2/12/1969#\n        oldWeekDayName = WeekdayName(Weekday(oldDate))\n        &#39; oldWeekDayName now contains &quot;Wednesday&quot;.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_DateAndTime_Year_System_DateTime_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_DateAndTime_Year_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Year(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <code>Integer</code> value from 1 through 9999 representing the year.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Year (DateTime DateValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>DateValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Date</code> value from which you want to extract the year.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an <code>Integer</code> value from 1 through 9999 representing the year.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can also obtain the year by calling <code>DatePart</code> and specifying <code>DateInterval.Year</code> for the <code>Interval</code> argument.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <code>Year</code> function to obtain the year from a specified date. In the development environment, the date literal is displayed in short date format using the locale settings of your code.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrFunctions#59\">        Dim thisDate As Date\n        Dim thisYear As Integer\n        thisDate = #2/12/1969#\n        thisYear = Year(thisDate)\n        &#39; thisYear now contains 1969.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.DateAndTime.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.DateAndTime.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.DateAdd\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.DateDiff\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.DatePart\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.DateSerial\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.DateString\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.DateValue\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Day\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Hour\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Minute\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Month\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.MonthName\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Now\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Second\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.TimeOfDay\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Timer\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.TimeSerial\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.TimeString\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.TimeValue\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Today\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Weekday\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.WeekdayName\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.DateAndTime.Year\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualBasic.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2ab97f4e-1ff8-4ad7-d516-16dbb70f40e5\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The DateAndTime module contains the procedures and properties used in date and time operations.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualBasic/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualBasic.DateAndTime\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.DateAndTime.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.DateAndTime.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualBasic.DateAndTime","Microsoft.VisualBasic.DateAndTime.DateAdd","Microsoft.VisualBasic.DateAndTime.DateDiff","Microsoft.VisualBasic.DateAndTime.DatePart","Microsoft.VisualBasic.DateAndTime.DateSerial","Microsoft.VisualBasic.DateAndTime.DateString","Microsoft.VisualBasic.DateAndTime.DateValue","Microsoft.VisualBasic.DateAndTime.Day","Microsoft.VisualBasic.DateAndTime.Hour","Microsoft.VisualBasic.DateAndTime.Minute","Microsoft.VisualBasic.DateAndTime.Month","Microsoft.VisualBasic.DateAndTime.MonthName","Microsoft.VisualBasic.DateAndTime.Now","Microsoft.VisualBasic.DateAndTime.Second","Microsoft.VisualBasic.DateAndTime.TimeOfDay","Microsoft.VisualBasic.DateAndTime.Timer","Microsoft.VisualBasic.DateAndTime.TimeSerial","Microsoft.VisualBasic.DateAndTime.TimeString","Microsoft.VisualBasic.DateAndTime.TimeValue","Microsoft.VisualBasic.DateAndTime.Today","Microsoft.VisualBasic.DateAndTime.Weekday","Microsoft.VisualBasic.DateAndTime.WeekdayName","Microsoft.VisualBasic.DateAndTime.Year"],"api_location":["Microsoft.VisualBasic.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualBasic.DateAndTime","Microsoft::VisualBasic::DateAndTime","Microsoft.VisualBasic.DateAndTime.DateAdd","Microsoft::VisualBasic::DateAndTime::DateAdd","Microsoft.VisualBasic.DateAndTime.DateDiff","Microsoft::VisualBasic::DateAndTime::DateDiff","Microsoft.VisualBasic.DateAndTime.DatePart","Microsoft::VisualBasic::DateAndTime::DatePart","Microsoft.VisualBasic.DateAndTime.DateSerial","Microsoft::VisualBasic::DateAndTime::DateSerial","Microsoft.VisualBasic.DateAndTime.DateString","Microsoft::VisualBasic::DateAndTime::DateString","Microsoft.VisualBasic.DateAndTime.DateValue","Microsoft::VisualBasic::DateAndTime::DateValue","Microsoft.VisualBasic.DateAndTime.Day","Microsoft::VisualBasic::DateAndTime::Day","Microsoft.VisualBasic.DateAndTime.Hour","Microsoft::VisualBasic::DateAndTime::Hour","Microsoft.VisualBasic.DateAndTime.Minute","Microsoft::VisualBasic::DateAndTime::Minute","Microsoft.VisualBasic.DateAndTime.Month","Microsoft::VisualBasic::DateAndTime::Month","Microsoft.VisualBasic.DateAndTime.MonthName","Microsoft::VisualBasic::DateAndTime::MonthName","Microsoft.VisualBasic.DateAndTime.Now","Microsoft::VisualBasic::DateAndTime::Now","Microsoft.VisualBasic.DateAndTime.Second","Microsoft::VisualBasic::DateAndTime::Second","Microsoft.VisualBasic.DateAndTime.TimeOfDay","Microsoft::VisualBasic::DateAndTime::TimeOfDay","Microsoft.VisualBasic.DateAndTime.Timer","Microsoft::VisualBasic::DateAndTime::Timer","Microsoft.VisualBasic.DateAndTime.TimeSerial","Microsoft::VisualBasic::DateAndTime::TimeSerial","Microsoft.VisualBasic.DateAndTime.TimeString","Microsoft::VisualBasic::DateAndTime::TimeString","Microsoft.VisualBasic.DateAndTime.TimeValue","Microsoft::VisualBasic::DateAndTime::TimeValue","Microsoft.VisualBasic.DateAndTime.Today","Microsoft::VisualBasic::DateAndTime::Today","Microsoft.VisualBasic.DateAndTime.Weekday","Microsoft::VisualBasic::DateAndTime::Weekday","Microsoft.VisualBasic.DateAndTime.WeekdayName","Microsoft::VisualBasic::DateAndTime::WeekdayName","Microsoft.VisualBasic.DateAndTime.Year","Microsoft::VisualBasic::DateAndTime::Year"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2ab97f4e-1ff8-4ad7-d516-16dbb70f40e5","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualBasic/DateAndTime.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DateAndTime class | Microsoft Docs","_op_ogTitle":"DateAndTime class","description":"The DateAndTime module contains the procedures and properties used in date and time operations.\n","toc_asset_id":"_splitted/Microsoft.VisualBasic/toc.json","toc_rel":"_splitted/Microsoft.VisualBasic/toc.json","source_url":"","ms.assetid":"Microsoft.VisualBasic.DateAndTime","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.dateandtime","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.dateandtime","fileRelativePath":"Microsoft.VisualBasic.DateAndTime.html"},"themesRelativePathToOutputRoot":"_themes/"}