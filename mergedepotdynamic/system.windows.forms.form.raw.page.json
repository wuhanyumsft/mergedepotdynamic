{"content":"    \r\n    <h1 id=\"System_Windows_Forms_Form\">\r\n      <span class=\"lang-csharp\">Form</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a window or dialog box that makes up an application&#39;s user interface.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;Load&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.FormDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;, typeof(System.ComponentModel.Design.IRootDesigner))]\n[System.ComponentModel.DesignerCategory(&quot;Form&quot;)]\n[System.ComponentModel.DesignTimeVisible(false)]\n[System.ComponentModel.InitializationEvent(&quot;Load&quot;)]\n[System.ComponentModel.ToolboxItem(false)]\n[System.ComponentModel.ToolboxItemFilter(&quot;System.Windows.Forms.Control.TopLevel&quot;)]\n[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class Form : System.Windows.Forms.ContainerControl</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l4\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol\" data-linktype=\"relative-path\">ScrollableControl</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l5\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol\" data-linktype=\"relative-path\">System.Windows.Forms.ContainerControl</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l6\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Form</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl\" data-linktype=\"relative-path\">ActiveControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_AutoScaleDimensions\" data-linktype=\"relative-path\">AutoScaleDimensions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_AutoScaleFactor\" data-linktype=\"relative-path\">AutoScaleFactor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_AutoScaleMode\" data-linktype=\"relative-path\">AutoScaleMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_BindingContext\" data-linktype=\"relative-path\">BindingContext</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_CanEnableIme\" data-linktype=\"relative-path\">CanEnableIme</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_CurrentAutoScaleDimensions\" data-linktype=\"relative-path\">CurrentAutoScaleDimensions</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_OnAutoValidateChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnAutoValidateChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_OnParentChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ParentForm\" data-linktype=\"relative-path\">ParentForm</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_PerformAutoScale\" data-linktype=\"relative-path\">PerformAutoScale()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_System_Windows_Forms_IContainerControl_ActivateControl_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">IContainerControl.ActivateControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_Validate\" data-linktype=\"relative-path\">Validate()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_Validate_System_Boolean_\" data-linktype=\"relative-path\">Validate(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject\" data-linktype=\"relative-path\">AccessibilityObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDefaultActionDescription\" data-linktype=\"relative-path\">AccessibleDefaultActionDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDescription\" data-linktype=\"relative-path\">AccessibleDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName\" data-linktype=\"relative-path\">AccessibleName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole\" data-linktype=\"relative-path\">AccessibleRole</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AllowDrop\" data-linktype=\"relative-path\">AllowDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor\" data-linktype=\"relative-path\">Anchor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoScrollOffset\" data-linktype=\"relative-path\">AutoScrollOffset</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImage\" data-linktype=\"relative-path\">BackgroundImage</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageLayout\" data-linktype=\"relative-path\">BackgroundImageLayout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageLayoutChanged\" data-linktype=\"relative-path\">BackgroundImageLayoutChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_\" data-linktype=\"relative-path\">BeginInvoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">BeginInvoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom\" data-linktype=\"relative-path\">Bottom</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds\" data-linktype=\"relative-path\">Bounds</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BringToFront\" data-linktype=\"relative-path\">BringToFront()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanFocus\" data-linktype=\"relative-path\">CanFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanSelect\" data-linktype=\"relative-path\">CanSelect</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Capture\" data-linktype=\"relative-path\">Capture</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation\" data-linktype=\"relative-path\">CausesValidation</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidationChanged\" data-linktype=\"relative-path\">CausesValidationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ChangeUICues\" data-linktype=\"relative-path\">ChangeUICues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CheckForIllegalCrossThreadCalls\" data-linktype=\"relative-path\">CheckForIllegalCrossThreadCalls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientRectangle\" data-linktype=\"relative-path\">ClientRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSizeChanged\" data-linktype=\"relative-path\">ClientSizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CompanyName\" data-linktype=\"relative-path\">CompanyName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Contains_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">Contains(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContainsFocus\" data-linktype=\"relative-path\">ContainsFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu\" data-linktype=\"relative-path\">ContextMenu</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuChanged\" data-linktype=\"relative-path\">ContextMenuChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStripChanged\" data-linktype=\"relative-path\">ContextMenuStripChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlAdded\" data-linktype=\"relative-path\">ControlAdded</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlRemoved\" data-linktype=\"relative-path\">ControlRemoved</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance\" data-linktype=\"relative-path\">CreateAccessibilityInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControl\" data-linktype=\"relative-path\">CreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Created\" data-linktype=\"relative-path\">Created</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics\" data-linktype=\"relative-path\">CreateGraphics()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor\" data-linktype=\"relative-path\">Cursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings\" data-linktype=\"relative-path\">DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultBackColor\" data-linktype=\"relative-path\">DefaultBackColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultCursor\" data-linktype=\"relative-path\">DefaultCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultFont\" data-linktype=\"relative-path\">DefaultFont</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultForeColor\" data-linktype=\"relative-path\">DefaultForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMargin\" data-linktype=\"relative-path\">DefaultMargin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMaximumSize\" data-linktype=\"relative-path\">DefaultMaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMinimumSize\" data-linktype=\"relative-path\">DefaultMinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultPadding\" data-linktype=\"relative-path\">DefaultPadding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DestroyHandle\" data-linktype=\"relative-path\">DestroyHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Disposing\" data-linktype=\"relative-path\">Disposing</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock\" data-linktype=\"relative-path\">Dock</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DockChanged\" data-linktype=\"relative-path\">DockChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_System_Object_System_Windows_Forms_DragDropEffects_\" data-linktype=\"relative-path\">DoDragDrop(Object,DragDropEffects)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered\" data-linktype=\"relative-path\">DoubleBuffered</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DrawToBitmap_System_Drawing_Bitmap_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">DrawToBitmap(Bitmap,Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled\" data-linktype=\"relative-path\">Enabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_System_IAsyncResult_\" data-linktype=\"relative-path\">EndInvoke(IAsyncResult)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FindForm\" data-linktype=\"relative-path\">FindForm()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focused\" data-linktype=\"relative-path\">Focused</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font\" data-linktype=\"relative-path\">Font</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontHeight\" data-linktype=\"relative-path\">FontHeight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColor\" data-linktype=\"relative-path\">ForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromChildHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromChildHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAccessibilityObjectById_System_Int32_\" data-linktype=\"relative-path\">GetAccessibilityObjectById(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAutoSizeMode\" data-linktype=\"relative-path\">GetAutoSizeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_\" data-linktype=\"relative-path\">GetChildAtPoint(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_System_Windows_Forms_GetChildAtPointSkip_\" data-linktype=\"relative-path\">GetChildAtPoint(Point,GetChildAtPointSkip)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetContainerControl\" data-linktype=\"relative-path\">GetContainerControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetNextControl_System_Windows_Forms_Control_System_Boolean_\" data-linktype=\"relative-path\">GetNextControl(Control,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetPreferredSize_System_Drawing_Size_\" data-linktype=\"relative-path\">GetPreferredSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetStyle_System_Windows_Forms_ControlStyles_\" data-linktype=\"relative-path\">GetStyle(ControlStyles)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetTopLevel\" data-linktype=\"relative-path\">GetTopLevel()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle\" data-linktype=\"relative-path\">Handle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HasChildren\" data-linktype=\"relative-path\">HasChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height\" data-linktype=\"relative-path\">Height</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide\" data-linktype=\"relative-path\">Hide()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeMode\" data-linktype=\"relative-path\">ImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeBase\" data-linktype=\"relative-path\">ImeModeBase</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeChanged\" data-linktype=\"relative-path\">ImeModeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InitLayout\" data-linktype=\"relative-path\">InitLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate\" data-linktype=\"relative-path\">Invalidate()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">Invalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Rectangle,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_\" data-linktype=\"relative-path\">Invalidate(Region)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Region,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidated\" data-linktype=\"relative-path\">Invalidated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_\" data-linktype=\"relative-path\">Invoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">Invoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeGotFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeGotFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeLostFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeLostFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeOnClick_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeOnClick(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaint_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaint(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaintBackground_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaintBackground(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired\" data-linktype=\"relative-path\">InvokeRequired</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsAccessible\" data-linktype=\"relative-path\">IsAccessible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsDisposed\" data-linktype=\"relative-path\">IsDisposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated\" data-linktype=\"relative-path\">IsHandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputChar_System_Char_\" data-linktype=\"relative-path\">IsInputChar(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputKey_System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">IsInputKey(Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsKeyLocked_System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">IsKeyLocked(Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMirrored\" data-linktype=\"relative-path\">IsMirrored</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMnemonic_System_Char_System_String_\" data-linktype=\"relative-path\">IsMnemonic(Char,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LayoutEngine\" data-linktype=\"relative-path\">LayoutEngine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left\" data-linktype=\"relative-path\">Left</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys\" data-linktype=\"relative-path\">ModifierKeys</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseButtons\" data-linktype=\"relative-path\">MouseButtons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseCaptureChanged\" data-linktype=\"relative-path\">MouseCaptureChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MousePosition\" data-linktype=\"relative-path\">MousePosition</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Move\" data-linktype=\"relative-path\">Move</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_NotifyInvalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">NotifyInvalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnAutoSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnAutoSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCausesValidationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCausesValidationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnChangeUICues_System_Windows_Forms_UICuesEventArgs_\" data-linktype=\"relative-path\">OnChangeUICues(UICuesEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClick_System_EventArgs_\" data-linktype=\"relative-path\">OnClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClientSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnClientSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuStripChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuStripChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlAdded_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlAdded(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlRemoved_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlRemoved(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDockChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnDockChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDoubleClick_System_EventArgs_\" data-linktype=\"relative-path\">OnDoubleClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGiveFeedback_System_Windows_Forms_GiveFeedbackEventArgs_\" data-linktype=\"relative-path\">OnGiveFeedback(GiveFeedbackEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGotFocus_System_EventArgs_\" data-linktype=\"relative-path\">OnGotFocus(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnHelpRequested_System_Windows_Forms_HelpEventArgs_\" data-linktype=\"relative-path\">OnHelpRequested(HelpEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnImeModeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnImeModeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnInvalidated_System_Windows_Forms_InvalidateEventArgs_\" data-linktype=\"relative-path\">OnInvalidated(InvalidateEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyDown_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyDown(KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_\" data-linktype=\"relative-path\">OnKeyPress(KeyPressEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyUp_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyUp(KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLocationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnLocationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLostFocus_System_EventArgs_\" data-linktype=\"relative-path\">OnLostFocus(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMarginChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMarginChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseCaptureChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseCaptureChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseClick(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseDoubleClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseDoubleClick(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseDown_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseDown(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseEnter_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseEnter(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseHover_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseHover(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseMove_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseMove(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseUp_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseUp(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMove_System_EventArgs_\" data-linktype=\"relative-path\">OnMove(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnNotifyMessage_System_Windows_Forms_Message_\" data-linktype=\"relative-path\">OnNotifyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackgroundImageChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackgroundImageChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentEnabledChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentEnabledChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentFontChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentFontChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentVisibleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentVisibleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPreviewKeyDown_System_Windows_Forms_PreviewKeyDownEventArgs_\" data-linktype=\"relative-path\">OnPreviewKeyDown(PreviewKeyDownEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPrint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPrint(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnQueryContinueDrag_System_Windows_Forms_QueryContinueDragEventArgs_\" data-linktype=\"relative-path\">OnQueryContinueDrag(QueryContinueDragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnRegionChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRegionChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSystemColorsChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSystemColorsChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabIndexChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabIndexChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabStopChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabStopChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidated_System_EventArgs_\" data-linktype=\"relative-path\">OnValidated(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidating_System_ComponentModel_CancelEventArgs_\" data-linktype=\"relative-path\">OnValidating(CancelEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Padding\" data-linktype=\"relative-path\">Padding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PaddingChanged\" data-linktype=\"relative-path\">PaddingChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout\" data-linktype=\"relative-path\">PerformLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_System_Windows_Forms_Control_System_String_\" data-linktype=\"relative-path\">PerformLayout(Control,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToClient_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToClient(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToScreen_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToScreen(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreferredSize\" data-linktype=\"relative-path\">PreferredSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessControlMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessControlMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyEventArgs_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyEventArgs(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductName\" data-linktype=\"relative-path\">ProductName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductVersion\" data-linktype=\"relative-path\">ProductVersion</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PropagatingImeMode\" data-linktype=\"relative-path\">PropagatingImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryAccessibilityHelp\" data-linktype=\"relative-path\">QueryAccessibilityHelp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseDragEvent_System_Object_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">RaiseDragEvent(Object,DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseKeyEvent_System_Object_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">RaiseKeyEvent(Object,KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseMouseEvent_System_Object_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseEvent(Object,MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaisePaintEvent_System_Object_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">RaisePaintEvent(Object,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle\" data-linktype=\"relative-path\">RecreateHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreatingHandle\" data-linktype=\"relative-path\">RecreatingHandle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToClient_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToClient(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToScreen_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToScreen(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ReflectMessage_System_IntPtr_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ReflectMessage(IntPtr,Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Refresh\" data-linktype=\"relative-path\">Refresh()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Region\" data-linktype=\"relative-path\">Region</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RegionChanged\" data-linktype=\"relative-path\">RegionChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RenderRightToLeft\" data-linktype=\"relative-path\">RenderRightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBackColor\" data-linktype=\"relative-path\">ResetBackColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBindings\" data-linktype=\"relative-path\">ResetBindings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetCursor\" data-linktype=\"relative-path\">ResetCursor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetFont\" data-linktype=\"relative-path\">ResetFont()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetForeColor\" data-linktype=\"relative-path\">ResetForeColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetImeMode\" data-linktype=\"relative-path\">ResetImeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetMouseEventArgs\" data-linktype=\"relative-path\">ResetMouseEventArgs()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetRightToLeft\" data-linktype=\"relative-path\">ResetRightToLeft()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetText\" data-linktype=\"relative-path\">ResetText()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResizeRedraw\" data-linktype=\"relative-path\">ResizeRedraw</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout\" data-linktype=\"relative-path\">ResumeLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_System_Boolean_\" data-linktype=\"relative-path\">ResumeLayout(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right\" data-linktype=\"relative-path\">Right</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft\" data-linktype=\"relative-path\">RightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateContent_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateContent(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateHorizontal_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateHorizontal(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateLeftRight_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateLeftRight(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Drawing_SizeF_\" data-linktype=\"relative-path\">Scale(SizeF)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_\" data-linktype=\"relative-path\">Scale(Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_System_Single_\" data-linktype=\"relative-path\">Scale(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleChildren\" data-linktype=\"relative-path\">ScaleChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select\" data-linktype=\"relative-path\">Select()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_System_Windows_Forms_Control_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SendToBack\" data-linktype=\"relative-path\">SendToBack()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetAutoSizeMode_System_Windows_Forms_AutoSizeMode_\" data-linktype=\"relative-path\">SetAutoSizeMode(AutoSizeMode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetStyle_System_Windows_Forms_ControlStyles_System_Boolean_\" data-linktype=\"relative-path\">SetStyle(ControlStyles,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetTopLevel_System_Boolean_\" data-linktype=\"relative-path\">SetTopLevel(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show\" data-linktype=\"relative-path\">Show()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowFocusCues\" data-linktype=\"relative-path\">ShowFocusCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowKeyboardCues\" data-linktype=\"relative-path\">ShowKeyboardCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeFromClientSize_System_Drawing_Size_\" data-linktype=\"relative-path\">SizeFromClientSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_StyleChanged\" data-linktype=\"relative-path\">StyleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout\" data-linktype=\"relative-path\">SuspendLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top\" data-linktype=\"relative-path\">Top</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TopLevelControl\" data-linktype=\"relative-path\">TopLevelControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update\" data-linktype=\"relative-path\">Update()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds\" data-linktype=\"relative-path\">UpdateBounds()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateStyles\" data-linktype=\"relative-path\">UpdateStyles()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateZOrder\" data-linktype=\"relative-path\">UpdateZOrder()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UseWaitCursor\" data-linktype=\"relative-path\">UseWaitCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WindowTarget\" data-linktype=\"relative-path\">WindowTarget</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_AutoScrollMargin\" data-linktype=\"relative-path\">AutoScrollMargin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_AutoScrollMinSize\" data-linktype=\"relative-path\">AutoScrollMinSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_AutoScrollPosition\" data-linktype=\"relative-path\">AutoScrollPosition</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_DisplayRectangle\" data-linktype=\"relative-path\">DisplayRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_DockPadding\" data-linktype=\"relative-path\">DockPadding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_GetScrollState_System_Int32_\" data-linktype=\"relative-path\">GetScrollState(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_HorizontalScroll\" data-linktype=\"relative-path\">HorizontalScroll</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_HScroll\" data-linktype=\"relative-path\">HScroll</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_OnMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseWheel(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_OnPaddingChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnPaddingChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_OnPaintBackground_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPaintBackground(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_OnRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_OnScroll_System_Windows_Forms_ScrollEventArgs_\" data-linktype=\"relative-path\">OnScroll(ScrollEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_Scroll\" data-linktype=\"relative-path\">Scroll</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollControlIntoView_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">ScrollControlIntoView(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollStateAutoScrolling\" data-linktype=\"relative-path\">ScrollStateAutoScrolling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollStateFullDrag\" data-linktype=\"relative-path\">ScrollStateFullDrag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollStateHScrollVisible\" data-linktype=\"relative-path\">ScrollStateHScrollVisible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollStateUserHasScrolled\" data-linktype=\"relative-path\">ScrollStateUserHasScrolled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollStateVScrollVisible\" data-linktype=\"relative-path\">ScrollStateVScrollVisible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_ScrollToControl_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">ScrollToControl(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_SetAutoScrollMargin_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetAutoScrollMargin(Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_SetDisplayRectLocation_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetDisplayRectLocation(Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_SetScrollState_System_Int32_System_Boolean_\" data-linktype=\"relative-path\">SetScrollState(Int32,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_VerticalScroll\" data-linktype=\"relative-path\">VerticalScroll</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.scrollablecontrol#System_Windows_Forms_ScrollableControl_VScroll\" data-linktype=\"relative-path\">VScroll</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A Form is a representation of any window displayed in your application. The Form class can be used to create standard, tool, borderless, and floating windows. You can also use the Form class to create modal windows such as a dialog box. A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms. An MDI form is created by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_IsMdiContainer_\" data-linktype=\"relative-path\">IsMdiContainer</a> property to <code>true</code>. MDI child forms are created by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiParent_\" data-linktype=\"relative-path\">MdiParent</a> property to the MDI parent form that will contain the child form.  </p>\n<p> Using the properties available in the Form class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating. The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property allows you to specify the caption of the window in the title bar. The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DesktopLocation_\" data-linktype=\"relative-path\">DesktopLocation</a> properties allow you to define the size and position of the window when it is displayed. You can use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> color property to change the default foreground color of all controls placed on the form. The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a> properties allow you to control whether the form can be minimized, maximized, or resized at run time.  </p>\n<p> In addition to properties, you can use the methods of the class to manipulate a form. For example, you can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to show a form as a modal dialog box. You can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a> method to position the form on the desktop.  </p>\n<p> The events of the Form class allow you to respond to actions performed on the form. You can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.  </p>\n<p> You can use a form as the starting class in your application by placing a method called <code>Main</code> in the class. In the <code>Main</code> method add code to create and show the form. You will also need to add the <code>STAThread</code> attribute to the <code>Main</code> method in order for the form to run. When the starting form is closed, the application is also closed.  </p>\n<p> If you set the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>false</code> before the Form is visible (for example, setting <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled_\" data-linktype=\"relative-path\">Enabled</a> to false in the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/tlasharptla-visualstu-md.md&quot; -->Microsoft Visual Studio<!--END INCLUDE --> designer), the minimize, maximize, close, and system buttons remain enabled. If you set <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled_\" data-linktype=\"relative-path\">Enabled</a> to <code>false</code> after the Form is visible (for example, when the Load event occurs), the buttons are disabled.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form__ctor\" data-linktype=\"self-bookmark\">Form()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AcceptButton\" data-linktype=\"self-bookmark\">AcceptButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the button on the form that is clicked when the user presses the ENTER key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ActiveForm\" data-linktype=\"self-bookmark\">ActiveForm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the currently active form for this application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ActiveMdiChild\" data-linktype=\"self-bookmark\">ActiveMdiChild</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the currently active multiple-document interface (MDI) child window.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AllowTransparency\" data-linktype=\"self-bookmark\">AllowTransparency</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the opacity of the form can be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoScale\" data-linktype=\"self-bookmark\">AutoScale</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoScaleBaseSize\" data-linktype=\"self-bookmark\">AutoScaleBaseSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the base size used for autoscaling of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoScroll\" data-linktype=\"self-bookmark\">AutoScroll</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the form enables autoscrolling.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoSize\" data-linktype=\"self-bookmark\">AutoSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resize the form according to the setting of <span class=\"xref\">stem.Windows.Forms.Form.AutoSizeMode*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoSizeMode\" data-linktype=\"self-bookmark\">AutoSizeMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the mode by which the form automatically resizes itself.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoValidate\" data-linktype=\"self-bookmark\">AutoValidate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_BackColor\" data-linktype=\"self-bookmark\">BackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_CancelButton\" data-linktype=\"self-bookmark\">CancelButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the button control that is clicked when the user presses the ESC key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ClientSize\" data-linktype=\"self-bookmark\">ClientSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the client area of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ControlBox\" data-linktype=\"self-bookmark\">ControlBox</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_CreateParams\" data-linktype=\"self-bookmark\">CreateParams</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the required creation parameters when the control handle is created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_DefaultImeMode\" data-linktype=\"self-bookmark\">DefaultImeMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default Input Method Editor (IME) mode supported by the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_DefaultSize\" data-linktype=\"self-bookmark\">DefaultSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default size of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_DesktopBounds\" data-linktype=\"self-bookmark\">DesktopBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size and location of the form on the Windows desktop.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_DesktopLocation\" data-linktype=\"self-bookmark\">DesktopLocation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the location of the form on the Windows desktop.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_DialogResult\" data-linktype=\"self-bookmark\">DialogResult</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the dialog result for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_FormBorderStyle\" data-linktype=\"self-bookmark\">FormBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the border style of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_HelpButton\" data-linktype=\"self-bookmark\">HelpButton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Icon\" data-linktype=\"self-bookmark\">Icon</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the icon for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_IsMdiChild\" data-linktype=\"self-bookmark\">IsMdiChild</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_IsMdiContainer\" data-linktype=\"self-bookmark\">IsMdiContainer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_IsRestrictedWindow\" data-linktype=\"self-bookmark\">IsRestrictedWindow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the form can use all windows and user input events without restriction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_KeyPreview\" data-linktype=\"self-bookmark\">KeyPreview</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Location\" data-linktype=\"self-bookmark\">Location</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the upper-left corner of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> in screen coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MainMenuStrip\" data-linktype=\"self-bookmark\">MainMenuStrip</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the primary menu container for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Margin\" data-linktype=\"self-bookmark\">Margin</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the space between controls.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MaximizeBox\" data-linktype=\"self-bookmark\">MaximizeBox</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <strong>Maximize</strong> button is displayed in the caption bar of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MaximizedBounds\" data-linktype=\"self-bookmark\">MaximizedBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the size of the form when it is maximized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MaximumSize\" data-linktype=\"self-bookmark\">MaximumSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the maximum size the form can be resized to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MdiChildren\" data-linktype=\"self-bookmark\">MdiChildren</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MdiParent\" data-linktype=\"self-bookmark\">MdiParent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the current multiple-document interface (MDI) parent form of this form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Menu\" data-linktype=\"self-bookmark\">Menu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> that is displayed in the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MergedMenu\" data-linktype=\"self-bookmark\">MergedMenu</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the merged menu for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MinimizeBox\" data-linktype=\"self-bookmark\">MinimizeBox</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <strong>Minimize</strong> button is displayed in the caption bar of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MinimumSize\" data-linktype=\"self-bookmark\">MinimumSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the minimum size the form can be resized to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Modal\" data-linktype=\"self-bookmark\">Modal</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether this form is displayed modally.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Opacity\" data-linktype=\"self-bookmark\">Opacity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the opacity level of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OwnedForms\" data-linktype=\"self-bookmark\">OwnedForms</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> objects that represent all forms that are owned by this form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Owner\" data-linktype=\"self-bookmark\">Owner</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the form that owns this form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_RestoreBounds\" data-linktype=\"self-bookmark\">RestoreBounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the location and size of the form in its normal window state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_RightToLeftLayout\" data-linktype=\"self-bookmark\">RightToLeftLayout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether right-to-left mirror placement is turned on.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ShowIcon\" data-linktype=\"self-bookmark\">ShowIcon</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ShowInTaskbar\" data-linktype=\"self-bookmark\">ShowInTaskbar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ShowWithoutActivation\" data-linktype=\"self-bookmark\">ShowWithoutActivation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the window will be activated when it is shown.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Size\" data-linktype=\"self-bookmark\">Size</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_SizeGripStyle\" data-linktype=\"self-bookmark\">SizeGripStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the style of the size grip to display in the lower-right corner of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_StartPosition\" data-linktype=\"self-bookmark\">StartPosition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the starting position of the form at run time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TabIndex\" data-linktype=\"self-bookmark\">TabIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the tab order of the control within its container.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TabStop\" data-linktype=\"self-bookmark\">TabStop</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text associated with this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TopLevel\" data-linktype=\"self-bookmark\">TopLevel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether to display the form as a top-level window.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TopMost\" data-linktype=\"self-bookmark\">TopMost</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the form should be displayed as a topmost form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TransparencyKey\" data-linktype=\"self-bookmark\">TransparencyKey</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color that will represent transparent areas of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_WindowState\" data-linktype=\"self-bookmark\">WindowState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether form is minimized, maximized, or normal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Activate\" data-linktype=\"self-bookmark\">Activate()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates the form and gives it focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ActivateMdiChild_System_Windows_Forms_Form_\" data-linktype=\"self-bookmark\">ActivateMdiChild(Form)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Activates the MDI child of a form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AddOwnedForm_System_Windows_Forms_Form_\" data-linktype=\"self-bookmark\">AddOwnedForm(Form)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an owned form to this form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AdjustFormScrollbars_System_Boolean_\" data-linktype=\"self-bookmark\">AdjustFormScrollbars(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ApplyAutoScaling\" data-linktype=\"self-bookmark\">ApplyAutoScaling()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resizes the form according to the current value of the <span class=\"xref\">stem.Windows.Forms.Form.AutoScaleBaseSize*</span> property and the size of the current font.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_CenterToParent\" data-linktype=\"self-bookmark\">CenterToParent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Centers the position of the form within the bounds of the parent form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_CenterToScreen\" data-linktype=\"self-bookmark\">CenterToScreen()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Centers the form on the current screen.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_CreateControlsInstance\" data-linktype=\"self-bookmark\">CreateControlsInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new instance of the control collection for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_CreateHandle\" data-linktype=\"self-bookmark\">CreateHandle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates the handle for the form. If a derived class overrides this function, it must call the base implementation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_DefWndProc_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">DefWndProc(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the specified message to the default window procedure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disposes of the resources (other than memory) used by the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_GetAutoScaleSize_System_Drawing_Font_\" data-linktype=\"self-bookmark\">GetAutoScaleSize(Font)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the size when autoscaling the form based on a specified font.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_GetScaledBounds_System_Drawing_Rectangle_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"self-bookmark\">GetScaledBounds(Rectangle,SizeF,BoundsSpecified)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the bounds within which the control is scaled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_LayoutMdi_System_Windows_Forms_MdiLayout_\" data-linktype=\"self-bookmark\">LayoutMdi(MdiLayout)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnActivated_System_EventArgs_\" data-linktype=\"self-bookmark\">OnActivated(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnBackgroundImageChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBackgroundImageChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnBackgroundImageLayoutChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBackgroundImageLayoutChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageLayoutChanged\" data-linktype=\"relative-path\">BackgroundImageLayoutChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnClosed_System_EventArgs_\" data-linktype=\"self-bookmark\">OnClosed(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnClosing_System_ComponentModel_CancelEventArgs_\" data-linktype=\"self-bookmark\">OnClosing(CancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnCreateControl\" data-linktype=\"self-bookmark\">OnCreateControl()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <code>CreateControl</code> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnDeactivate_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDeactivate(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Deactivate\" data-linktype=\"relative-path\">Deactivate</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnEnabledChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnEnabledChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnEnter_System_EventArgs_\" data-linktype=\"self-bookmark\">OnEnter(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnFontChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnFontChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnFormClosed_System_Windows_Forms_FormClosedEventArgs_\" data-linktype=\"self-bookmark\">OnFormClosed(FormClosedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosed\" data-linktype=\"relative-path\">FormClosed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnFormClosing_System_Windows_Forms_FormClosingEventArgs_\" data-linktype=\"self-bookmark\">OnFormClosing(FormClosingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosing\" data-linktype=\"relative-path\">FormClosing</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnHandleCreated_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleCreated(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnHandleDestroyed_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleDestroyed(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnHelpButtonClicked_System_ComponentModel_CancelEventArgs_\" data-linktype=\"self-bookmark\">OnHelpButtonClicked(CancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButtonClicked\" data-linktype=\"relative-path\">HelpButtonClicked</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnInputLanguageChanged_System_Windows_Forms_InputLanguageChangedEventArgs_\" data-linktype=\"self-bookmark\">OnInputLanguageChanged(InputLanguageChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_InputLanguageChanged\" data-linktype=\"relative-path\">InputLanguageChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnInputLanguageChanging_System_Windows_Forms_InputLanguageChangingEventArgs_\" data-linktype=\"self-bookmark\">OnInputLanguageChanging(InputLanguageChangingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_InputLanguageChanging\" data-linktype=\"relative-path\">InputLanguageChanging</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnLayout_System_Windows_Forms_LayoutEventArgs_\" data-linktype=\"self-bookmark\">OnLayout(LayoutEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnLoad_System_EventArgs_\" data-linktype=\"self-bookmark\">OnLoad(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnMaximizedBoundsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMaximizedBoundsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizedBoundsChanged\" data-linktype=\"relative-path\">MaximizedBoundsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnMaximumSizeChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMaximumSizeChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximumSizeChanged\" data-linktype=\"relative-path\">MaximumSizeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnMdiChildActivate_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMdiChildActivate(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiChildActivate\" data-linktype=\"relative-path\">MdiChildActivate</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnMenuComplete_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMenuComplete(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MenuComplete\" data-linktype=\"relative-path\">MenuComplete</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnMenuStart_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMenuStart(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MenuStart\" data-linktype=\"relative-path\">MenuStart</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnMinimumSizeChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMinimumSizeChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimumSizeChanged\" data-linktype=\"relative-path\">MinimumSizeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnPaint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"self-bookmark\">OnPaint(PaintEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnResize_System_EventArgs_\" data-linktype=\"self-bookmark\">OnResize(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnResizeBegin_System_EventArgs_\" data-linktype=\"self-bookmark\">OnResizeBegin(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeBegin\" data-linktype=\"relative-path\">ResizeBegin</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnResizeEnd_System_EventArgs_\" data-linktype=\"self-bookmark\">OnResizeEnd(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnRightToLeftLayoutChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRightToLeftLayoutChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayoutChanged\" data-linktype=\"relative-path\">RightToLeftLayoutChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnShown_System_EventArgs_\" data-linktype=\"self-bookmark\">OnShown(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Shown\" data-linktype=\"relative-path\">Shown</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_StyleChanged\" data-linktype=\"relative-path\">StyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnTextChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnTextChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_OnVisibleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnVisibleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessCmdKey(Message,Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a command key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ProcessDialogChar_System_Char_\" data-linktype=\"self-bookmark\">ProcessDialogChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a dialog character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ProcessDialogKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessDialogKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a dialog box key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ProcessKeyPreview_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">ProcessKeyPreview(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Previews a keyboard message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ProcessMnemonic_System_Char_\" data-linktype=\"self-bookmark\">ProcessMnemonic(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a mnemonic character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ProcessTabKey_System_Boolean_\" data-linktype=\"self-bookmark\">ProcessTabKey(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects the next available control and makes it the active control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_RemoveOwnedForm_System_Windows_Forms_Form_\" data-linktype=\"self-bookmark\">RemoveOwnedForm(Form)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes an owned form from this form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ScaleControl_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"self-bookmark\">ScaleControl(SizeF,BoundsSpecified)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Scales the location, size, padding, and margin of a control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ScaleCore_System_Single_System_Single_\" data-linktype=\"self-bookmark\">ScaleCore(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs scaling of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Select_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">Select(Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects this form, and optionally selects the next or previous control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"self-bookmark\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs the work of setting the specified bounds of this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_SetClientSizeCore_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SetClientSizeCore(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_SetDesktopBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SetDesktopBounds(Int32,Int32,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the bounds of the form in desktop coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_SetDesktopLocation_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">SetDesktopLocation(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the location of the form in desktop coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_SetVisibleCore_System_Boolean_\" data-linktype=\"self-bookmark\">SetVisibleCore(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the control to the specified visible state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Show_System_Windows_Forms_IWin32Window_\" data-linktype=\"self-bookmark\">Show(IWin32Window)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Shows the form with the specified owner to the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ShowDialog\" data-linktype=\"self-bookmark\">ShowDialog()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Shows the form as a modal dialog box.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ShowDialog_System_Windows_Forms_IWin32Window_\" data-linktype=\"self-bookmark\">ShowDialog(IWin32Window)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Shows the form as a modal dialog box with the specified owner.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string representing the current instance of the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_UpdateDefaultButton\" data-linktype=\"self-bookmark\">UpdateDefaultButton()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates which button is the default button.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ValidateChildren\" data-linktype=\"self-bookmark\">ValidateChildren()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes all of the child controls within a control that support validation to validate their data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ValidateChildren_System_Windows_Forms_ValidationConstraints_\" data-linktype=\"self-bookmark\">ValidateChildren(ValidationConstraints)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Causes all of the child controls within a control that support validation to validate their data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_WndProc_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">WndProc(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes Windows messages.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Activated\" data-linktype=\"self-bookmark\">Activated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the form is activated in code or by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoSizeChanged\" data-linktype=\"self-bookmark\">AutoSizeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.AutoSize*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_AutoValidateChanged\" data-linktype=\"self-bookmark\">AutoValidateChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.AutoValidate*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Closed\" data-linktype=\"self-bookmark\">Closed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the form is closed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Closing\" data-linktype=\"self-bookmark\">Closing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the form is closing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Deactivate\" data-linktype=\"self-bookmark\">Deactivate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the form loses focus and is no longer the active form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_FormClosed\" data-linktype=\"self-bookmark\">FormClosed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the form is closed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_FormClosing\" data-linktype=\"self-bookmark\">FormClosing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before the form is closed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_HelpButtonClicked\" data-linktype=\"self-bookmark\">HelpButtonClicked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <strong>Help</strong> button is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_InputLanguageChanged\" data-linktype=\"self-bookmark\">InputLanguageChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the input language of the form has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_InputLanguageChanging\" data-linktype=\"self-bookmark\">InputLanguageChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user attempts to change the input language for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Load\" data-linktype=\"self-bookmark\">Load</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before a form is displayed for the first time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MarginChanged\" data-linktype=\"self-bookmark\">MarginChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.Margin*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MaximizedBoundsChanged\" data-linktype=\"self-bookmark\">MaximizedBoundsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.MaximizedBounds*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MaximumSizeChanged\" data-linktype=\"self-bookmark\">MaximumSizeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.MaximumSize*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MdiChildActivate\" data-linktype=\"self-bookmark\">MdiChildActivate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MenuComplete\" data-linktype=\"self-bookmark\">MenuComplete</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the menu of a form loses focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MenuStart\" data-linktype=\"self-bookmark\">MenuStart</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the menu of a form receives focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_MinimumSizeChanged\" data-linktype=\"self-bookmark\">MinimumSizeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.MinimumSize*</span> property has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ResizeBegin\" data-linktype=\"self-bookmark\">ResizeBegin</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a form enters resizing mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"self-bookmark\">ResizeEnd</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a form exits resizing mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_RightToLeftLayoutChanged\" data-linktype=\"self-bookmark\">RightToLeftLayoutChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the value of the <span class=\"xref\">stem.Windows.Forms.Form.RightToLeftLayout*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_Shown\" data-linktype=\"self-bookmark\">Shown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs whenever the form is first displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TabIndexChanged\" data-linktype=\"self-bookmark\">TabIndexChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.TabIndex*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_Form_TabStopChanged\" data-linktype=\"self-bookmark\">TabStopChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.TabStop*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Form()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Form ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default size of a form is 300 pixels in height and 300 pixels in width.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also sets uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AcceptButton\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AcceptButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AcceptButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the button on the form that is clicked when the user presses the ENTER key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.IButtonControl AcceptButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> that represents the button to use as the accept button for the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property enables you to designate a default action to occur when the user presses the ENTER key in your application. The button assigned to this property must be an <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> that is on the current form or located within a container on the current form.  </p>\n<p> You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.  </p>\n<p> The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it. For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, AcceptButton, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ActiveForm\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ActiveForm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActiveForm</div>        \r\n          </div>\r\n    \r\n            <p>Gets the currently active form for this application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Forms.Form ActiveForm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that represents the currently active form, or <code>null</code> if there is no active form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.  </p>\n<p> If your application is a multiple-document interface (MDI) application, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ActiveMdiChild_\" data-linktype=\"relative-path\">ActiveMdiChild</a> property to obtain the currently active MDI child form.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets the active form and disables all the controls on the form. The example uses the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection of the form to iterate through each control on the form and disable the controls.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.ActiveForm Example#1\">   void DisableActiveFormControls()\n   {\n      \n      // Create an instance of a form and assign it the currently active form.\n      Form^ currentForm = Form::ActiveForm;\n      \n      // Loop through all the controls on the active form.\n      for ( int i = 0; i &lt; currentForm-&gt;Controls-&gt;Count; i++ )\n      {\n         \n         // Disable each control in the active form&#39;s control collection.\n         currentForm-&gt;Controls[ i ]-&gt;Enabled = false;\n\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.ActiveForm Example#1\">    Public Sub DisableActiveFormControls()\n        &#39; Create an instance of a form and assign it the currently active form.\n        Dim currentForm As Form = Form.ActiveForm\n        \n        &#39; Loop through all the controls on the active form.\n        Dim i As Integer\n        For i = 0 To currentForm.Controls.Count - 1\n            &#39; Disable each control in the active form&#39;s control collection.\n            currentForm.Controls(i).Enabled = False\n        Next i\n    End Sub &#39;DisableActiveFormControls\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.ActiveForm Example#1\">public void DisableActiveFormControls()\n {\n    // Create an instance of a form and assign it the currently active form.\n    Form currentForm = Form.ActiveForm;\n    \n    // Loop through all the controls on the active form.\n    for (int i = 0; i &lt; currentForm.Controls.Count; i++)\n    {\n       // Disable each control in the active form&#39;s control collection.\n       currentForm.Controls[i].Enabled = false;\n    }\n }\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ActiveMdiChild\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ActiveMdiChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActiveMdiChild</div>        \r\n          </div>\r\n    \r\n            <p>Gets the currently active multiple-document interface (MDI) child window.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Form ActiveMdiChild { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that represents the currently active MDI child window, or <code>null</code> if there are currently no child windows present.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to determine whether there are any MDI child forms open in your MDI application. You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.  </p>\n<p> If the currently active form is not an MDI child form, you can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ActiveForm_\" data-linktype=\"relative-path\">ActiveForm</a> property to obtain a reference to it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example obtains a reference to the active MDI child form and loops through all <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> controls on the form, resetting their <a class=\"xref\" href=\"system.windows.forms.textboxbase#System_Windows_Forms_TextBoxBase_Text_\" data-linktype=\"relative-path\">Text</a> properties. This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.ActiveMdiChild Example#1\">public void ClearAllChildFormText()\n {\n    // Obtain a reference to the currently active MDI child form.\n    Form tempChild = this.ActiveMdiChild;\n    \n    // Loop through all controls on the child form.\n    for (int i = 0; i &lt; tempChild.Controls.Count; i++)\n    {\n       // Determine if the current control on the child form is a TextBox.\n       if (tempChild.Controls[i] is TextBox)\n       {\n          // Clear the contents of the control since it is a TextBox.\n          tempChild.Controls[i].Text = &quot;&quot;;\n       }\n    }\n }\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.ActiveMdiChild Example#1\">    Public Sub ClearAllChildFormText()\n        &#39; Obtain a reference to the currently active MDI child form.\n        Dim tempChild As Form = Me.ActiveMdiChild\n        \n        &#39; Loop through all controls on the child form.\n        Dim i As Integer\n        For i = 0 To tempChild.Controls.Count - 1\n            &#39; Determine if the current control on the child form is a TextBox.\n            If TypeOf tempChild.Controls(i) Is TextBox Then\n                &#39; Clear the contents of the control since it is a TextBox.\n                tempChild.Controls(i).Text = &quot;&quot;\n            End If\n        Next i\n    End Sub &#39;ClearAllChildFormText\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.ActiveMdiChild Example#1\">public:\n   void ClearAllChildFormText()\n   {\n      \n      // Obtain a reference to the currently active MDI child form.\n      Form^ tempChild = this-&gt;ActiveMdiChild;\n      \n      // Loop through all controls on the child form.\n      for ( int i = 0; i &lt; tempChild-&gt;Controls-&gt;Count; i++ )\n      {\n         \n         // Determine if the current control on the child form is a TextBox.\n         if ( dynamic_cast&lt;TextBox^&gt;(tempChild-&gt;Controls[ i ]) )\n         {\n            \n            // Clear the contents of the control since it is a TextBox.\n            tempChild-&gt;Controls[ i ]-&gt;Text = &quot;&quot;;\n         }\n\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AllowTransparency\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AllowTransparency_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowTransparency</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the opacity of the form can be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowTransparency { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the opacity of the form can be changed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is automatically set to <code>true</code> if the <code>Opacity</code> is changed. When the opacity of a form is set using the <code>Opacity</code> property, the form will layer objects on the form. If you set the AllowTransparency property to <code>false</code> the form will not be in layered mode which will improve the display performance of the form.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoScale\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AutoScale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoScale</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoScale { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> The AutoScale is obsolete and has been retained for backward compatibility. The non-obsolete alternative is <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_AutoScaleMode_\" data-linktype=\"relative-path\">AutoScaleMode</a>. For more information about automatic scaling, see <a href=\"../Topic/Automatic%20Scaling%20in%20Windows%20Forms.md\" data-linktype=\"relative-path\">Automatic Scaling in Windows Forms</a>.  </p>\n</div>\n<p> You can use this property to allow your form and its controls to automatically adjust based on changes in the font. This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.  </p>\n<p> To obtain the size the form will auto scale to, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoScaleBaseSize_\" data-linktype=\"relative-path\">AutoScaleBaseSize</a> property. If you want to determine the size the form will auto scale to based on a specific font, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_GetAutoScaleSize_\" data-linktype=\"relative-path\">GetAutoScaleSize</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoScaleBaseSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AutoScaleBaseSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoScaleBaseSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the base size used for autoscaling of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the base size that this form uses for autoscaling.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> This member has been retained for backward compatibility. For more information about automatic scaling, see <a href=\"../Topic/Automatic%20Scaling%20in%20Windows%20Forms.md\" data-linktype=\"relative-path\">Automatic Scaling in Windows Forms</a>.  </p>\n</div>\n<p> The value of the AutoScaleBaseSize property is used at form-display time to compute the scaling factor for the form. The autoscaling base size is used by the form as a baseline for comparison to the system&#39;s font size to determine how much to scale the form when autoscaling is used. If you want to determine the size a form will auto scale to based on a specific font, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_GetAutoScaleSize_\" data-linktype=\"relative-path\">GetAutoScaleSize</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The value of this property is used when the form is initially created. Once the property is set, it cannot be changed.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoScroll\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AutoScroll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoScroll</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the form enables autoscrolling.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool AutoScroll { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to enable autoscrolling on the form; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this property is set to <code>true</code>, scroll bars are displayed on the form if any controls are located outside the form&#39;s client region. Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.  </p>\n<p> You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AutoScroll property to enable the display of controls that are outsize the client area of a form. The example creates a new form and adds a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control to the form. The <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control is positioned outsize the client area of the new form. The AutoScroll property is set to true to display scroll bars on the form to enable the user to scroll to the control. This example requires that the method defined in this example is called from another form in an event handler or other method.  </p>\n<pre><code class=\"lang-vb\" name=\"Form.AutoScroll#1\">   Private Sub DisplayMyScrollableForm()\n      &#39; Create a new form.\n      Dim form2 As New Form()\n      &#39; Create a button to add to the new form.\n      Dim button1 As New Button()\n      &#39; Set text for the button.\n      button1.Text = &quot;Scrolled Button&quot;\n      &#39; Set the size of the button.\n      button1.Size = New Size(100, 30)\n      &#39; Set the location of the button to be outside the form&#39;s client area.\n      button1.Location = New Point(form2.Size.Width + 200, form2.Size.Height + 200)\n\n      &#39; Add the button control to the new form.\n      form2.Controls.Add(button1)\n      &#39; Set the AutoScroll property to true to provide scrollbars.\n      form2.AutoScroll = True\n\n      &#39; Display the new form as a dialog box.\n      form2.ShowDialog()\n   End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Form.AutoScroll#1\">private:\n   void DisplayMyScrollableForm()\n   {\n      // Create a new form.\n      Form^ form2 = gcnew Form;\n\n      // Create a button to add to the new form.\n      Button^ button1 = gcnew Button;\n\n      // Set text for the button.\n      button1-&gt;Text = &quot;Scrolled Button&quot;;\n\n      // Set the size of the button.\n      button1-&gt;Size = System::Drawing::Size( 100, 30 );\n\n      // Set the location of the button to be outside the form&#39;s client area.\n      button1-&gt;Location = Point(form2-&gt;Size.Width + 200,form2-&gt;Size.Height + 200);\n\n      // Add the button control to the new form.\n      form2-&gt;Controls-&gt;Add( button1 );\n\n      // Set the AutoScroll property to true to provide scrollbars.\n      form2-&gt;AutoScroll = true;\n\n      // Display the new form as a dialog box.\n      form2-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.AutoScroll#1\">      private void DisplayMyScrollableForm()\n      {\n         // Create a new form.\n         Form form2 = new Form();\n         // Create a button to add to the new form.\n         Button button1 = new Button();\n         // Set text for the button.\n         button1.Text = &quot;Scrolled Button&quot;;\n         // Set the size of the button.\n         button1.Size = new Size(100,30);\n         // Set the location of the button to be outside the form&#39;s client area.\n         button1.Location = new Point(form2.Size.Width + 200, form2.Size.Height + 200);\n\n         // Add the button control to the new form.\n         form2.Controls.Add(button1);\n         // Set the AutoScroll property to true to provide scrollbars.\n         form2.AutoScroll = true;\n\n         // Display the new form as a dialog box.\n         form2.ShowDialog();\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AutoSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSize</div>        \r\n          </div>\r\n    \r\n            <p>Resize the form according to the setting of <span class=\"xref\">stem.Windows.Forms.Form.AutoSizeMode*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool AutoSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form will automatically resize; <code>false</code> if it must be manually resized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use AutoSize to force a form to resize to fit its contents.  </p>\n<p> A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the AutoSize and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> automatically resizes itself both at design time and at run time.  </p>\n<p> When using AutoSize, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MinimumSize_\" data-linktype=\"relative-path\">MinimumSize</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MaximumSize_\" data-linktype=\"relative-path\">MaximumSize</a> properties are respected, but the current value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size_\" data-linktype=\"relative-path\">Size</a> property is ignored. Using AutoSize and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> also renders the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoScroll_\" data-linktype=\"relative-path\">AutoScroll</a> property superfluous, as there is no way to shrink the form to hide its contained controls from view.  </p>\n<p> See the <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> enumeration for information on how a form behaves when AutoSize is <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displays a <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>, a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> for entering a URL, and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> for displaying that URL inside of the user&#39;s default Web browser. The code example uses a <a class=\"xref\" href=\"system.windows.forms.flowlayoutpanel\" data-linktype=\"relative-path\">FlowLayoutPanel</a> to lay out the contained controls one after the other. It also sets the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> and <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> to grow and shrink to fit the contents of its form.  </p>\n<pre><code class=\"lang-vb\" name=\"Form.AutoSize#1\">Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load\n    Me.AutoSize = True\n    Me.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink\n    Me.Text = &quot;URL Opener&quot;\n\n    flowPanel = New FlowLayoutPanel()\n    flowPanel.AutoSize = True\n    flowPanel.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink\n    Me.Controls.Add(flowPanel)\n\n    urlLabel = New Label()\n    urlLabel.Name = &quot;urlLabel&quot;\n    urlLabel.Text = &quot;URL:&quot;\n    urlLabel.Width = 50\n    urlLabel.TextAlign = ContentAlignment.MiddleCenter\n    flowPanel.Controls.Add(urlLabel)\n\n    urlTextBox = New TextBox()\n    urlTextBox.Name = &quot;urlTextBox&quot;\n    urlTextBox.Width = 250\n    flowPanel.Controls.Add(urlTextBox)\n\n    urlButton = New Button()\n    urlButton.Name = &quot;urlButton&quot;\n    urlButton.Text = &quot;Open URL in Browser&quot;\n    flowPanel.Controls.Add(urlButton)\nEnd Sub\n\n\nPrivate Sub urlButton_Click(ByVal sender As Object, ByVal e As EventArgs) Handles urlButton.Click\n    Try\n        Dim newUri As New Uri(urlTextBox.Text)\n    Catch uriEx As UriFormatException\n        MessageBox.Show((&quot;Sorry, your URL is malformed. Try again. Error: &quot; + uriEx.Message))\n        urlTextBox.ForeColor = Color.Red\n        Return\n    End Try\n\n    &#39; Valid URI. Reset any previous error color, and launch the URL in the \n    &#39; default browser.\n    &#39; NOTE: Depending on the user&#39;s settings, this method of starting the\n    &#39; browser may use an existing window in an existing Web browser process.\n    &#39; To get around this, start up a specific browser instance instead using one of\n    &#39; the overloads for Process.Start. You can examine the registry to find the\n    &#39; current default browser and launch that, or hard-code a specific browser.\n    urlTextBox.ForeColor = Color.Black\n    Process.Start(urlTextBox.Text)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.AutoSize#1\">private void Form1_Load(object sender, EventArgs e)\n{\n    this.AutoSize = true;\n    this.AutoSizeMode = AutoSizeMode.GrowAndShrink;\n    this.Text = &quot;URL Opener&quot;;\n\n    flowPanel = new FlowLayoutPanel();\n    flowPanel.AutoSize = true;\n    flowPanel.AutoSizeMode = AutoSizeMode.GrowAndShrink;\n    this.Controls.Add(flowPanel);\n\n    urlLabel = new Label();\n    urlLabel.Name = &quot;urlLabel&quot;;\n    urlLabel.Text = &quot;URL:&quot;;\n    urlLabel.Width = 50;\n    urlLabel.TextAlign = ContentAlignment.MiddleCenter;\n    flowPanel.Controls.Add(urlLabel);\n\n    urlTextBox = new TextBox();\n    urlTextBox.Name = &quot;urlTextBox&quot;;\n    urlTextBox.Width = 250;\n    flowPanel.Controls.Add(urlTextBox);\n\n    urlButton = new Button();\n    urlButton.Name = &quot;urlButton&quot;;\n    urlButton.Text = &quot;Open URL in Browser&quot;;\n    urlButton.Click += new EventHandler(urlButton_Click);\n    flowPanel.Controls.Add(urlButton);\n}\n\nvoid urlButton_Click(object sender, EventArgs e)\n{\n    try\n    {\n        Uri newUri = new Uri(urlTextBox.Text);\n    }\n    catch (UriFormatException uriEx)\n    {\n        MessageBox.Show(&quot;Sorry, your URL is malformed. Try again. Error: &quot; + uriEx.Message);\n        urlTextBox.ForeColor = Color.Red;\n        return;\n    }\n    \n    // Valid URI. Reset any previous error color, and launch the URL in the \n    // default browser.\n    // NOTE: Depending on the user&#39;s settings, this method of starting the\n    // browser may use an existing window in an existing Web browser process.\n    // To get around this, start up a specific browser instance instead using one of\n    // the overloads for Process.Start. You can examine the registry to find the\n    // current default browser and launch that, or hard-code a specific browser.\n    urlTextBox.ForeColor = Color.Black;\n    Process.Start(urlTextBox.Text);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoSizeMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AutoSizeMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the mode by which the form automatically resizes itself.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> enumerated value. The default is <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value is not a valid <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting the AutoSizeMode property to a new value causes the form to be laid out again.  </p>\n<p> A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> and AutoSizeMode properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <a class=\"xref\" href=\"system.windows.forms.usercontrol\" data-linktype=\"relative-path\">UserControl</a> automatically resizes itself both at design time and at run time.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displaya a <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a>, a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> for entering a URL, and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> for displaying that URL inside of the user&#39;s default Web browser. The code example uses a <a class=\"xref\" href=\"system.windows.forms.flowlayoutpanel\" data-linktype=\"relative-path\">FlowLayoutPanel</a> to lay out the contained controls one after the other. It also sets the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSize_\" data-linktype=\"relative-path\">AutoSize</a> and <a class=\"xref\" href=\"system.windows.forms.autosizemode\" data-linktype=\"relative-path\">AutoSizeMode</a> to grow and shrink to fit the contents of its form.  </p>\n<pre><code class=\"lang-vb\" name=\"Form.AutoSize#1\">Private Sub Form1_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load\n    Me.AutoSize = True\n    Me.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink\n    Me.Text = &quot;URL Opener&quot;\n\n    flowPanel = New FlowLayoutPanel()\n    flowPanel.AutoSize = True\n    flowPanel.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink\n    Me.Controls.Add(flowPanel)\n\n    urlLabel = New Label()\n    urlLabel.Name = &quot;urlLabel&quot;\n    urlLabel.Text = &quot;URL:&quot;\n    urlLabel.Width = 50\n    urlLabel.TextAlign = ContentAlignment.MiddleCenter\n    flowPanel.Controls.Add(urlLabel)\n\n    urlTextBox = New TextBox()\n    urlTextBox.Name = &quot;urlTextBox&quot;\n    urlTextBox.Width = 250\n    flowPanel.Controls.Add(urlTextBox)\n\n    urlButton = New Button()\n    urlButton.Name = &quot;urlButton&quot;\n    urlButton.Text = &quot;Open URL in Browser&quot;\n    flowPanel.Controls.Add(urlButton)\nEnd Sub\n\n\nPrivate Sub urlButton_Click(ByVal sender As Object, ByVal e As EventArgs) Handles urlButton.Click\n    Try\n        Dim newUri As New Uri(urlTextBox.Text)\n    Catch uriEx As UriFormatException\n        MessageBox.Show((&quot;Sorry, your URL is malformed. Try again. Error: &quot; + uriEx.Message))\n        urlTextBox.ForeColor = Color.Red\n        Return\n    End Try\n\n    &#39; Valid URI. Reset any previous error color, and launch the URL in the \n    &#39; default browser.\n    &#39; NOTE: Depending on the user&#39;s settings, this method of starting the\n    &#39; browser may use an existing window in an existing Web browser process.\n    &#39; To get around this, start up a specific browser instance instead using one of\n    &#39; the overloads for Process.Start. You can examine the registry to find the\n    &#39; current default browser and launch that, or hard-code a specific browser.\n    urlTextBox.ForeColor = Color.Black\n    Process.Start(urlTextBox.Text)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.AutoSize#1\">private void Form1_Load(object sender, EventArgs e)\n{\n    this.AutoSize = true;\n    this.AutoSizeMode = AutoSizeMode.GrowAndShrink;\n    this.Text = &quot;URL Opener&quot;;\n\n    flowPanel = new FlowLayoutPanel();\n    flowPanel.AutoSize = true;\n    flowPanel.AutoSizeMode = AutoSizeMode.GrowAndShrink;\n    this.Controls.Add(flowPanel);\n\n    urlLabel = new Label();\n    urlLabel.Name = &quot;urlLabel&quot;;\n    urlLabel.Text = &quot;URL:&quot;;\n    urlLabel.Width = 50;\n    urlLabel.TextAlign = ContentAlignment.MiddleCenter;\n    flowPanel.Controls.Add(urlLabel);\n\n    urlTextBox = new TextBox();\n    urlTextBox.Name = &quot;urlTextBox&quot;;\n    urlTextBox.Width = 250;\n    flowPanel.Controls.Add(urlTextBox);\n\n    urlButton = new Button();\n    urlButton.Name = &quot;urlButton&quot;;\n    urlButton.Text = &quot;Open URL in Browser&quot;;\n    urlButton.Click += new EventHandler(urlButton_Click);\n    flowPanel.Controls.Add(urlButton);\n}\n\nvoid urlButton_Click(object sender, EventArgs e)\n{\n    try\n    {\n        Uri newUri = new Uri(urlTextBox.Text);\n    }\n    catch (UriFormatException uriEx)\n    {\n        MessageBox.Show(&quot;Sorry, your URL is malformed. Try again. Error: &quot; + uriEx.Message);\n        urlTextBox.ForeColor = Color.Red;\n        return;\n    }\n    \n    // Valid URI. Reset any previous error color, and launch the URL in the \n    // default browser.\n    // NOTE: Depending on the user&#39;s settings, this method of starting the\n    // browser may use an existing window in an existing Web browser process.\n    // To get around this, start up a specific browser instance instead using one of\n    // the overloads for Process.Start. You can examine the registry to find the\n    // current default browser and launch that, or hard-code a specific browser.\n    urlTextBox.ForeColor = Color.Black;\n    Process.Start(urlTextBox.Text);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoValidate\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AutoValidate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoValidate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.autovalidate\" data-linktype=\"relative-path\">AutoValidate</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.autovalidate\" data-linktype=\"relative-path\">AutoValidate</a> enumerated value that indicates whether contained controls are implicitly validated on focus change. The default is Inherit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_BackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_BackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color BackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of the control. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultBackColor*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_CancelButton\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_CancelButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the button control that is clicked when the user presses the ESC key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.IButtonControl CancelButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> that represents the cancel button for the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The cancel button for a form is the button control that is clicked whenever the user presses the ESC key. The button assigned to this property must be an <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> that is on the current form or located within a container on the current form.  </p>\n<p> This property allows you to designate a default action to occur when the user presses the ESC key in your application. You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.  </p>\n<p> CancelButton may not work if another control on the form intercepts the ESC key. For example, if you have a <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a> open on your form, ESC will close the <a class=\"xref\" href=\"system.windows.forms.combobox\" data-linktype=\"relative-path\">ComboBox</a> instead of closing the Form.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> object assigned to CancelButton must be visible on the form, or else pressing the ESC key will have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, CancelButton, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ClientSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ClientSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the client area of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Size ClientSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the size of the form&#39;s client area.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The size of the client area of the form is the size of the form excluding the borders and the title bar. The client area of a form is the area within a form where controls can be placed. You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form. To get the size of the entire form, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> property or use the individual properties <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You cannot currently bind to this property using application settings. For more information on application settings, see <a href=\"../Topic/Application%20Settings%20Overview.md\" data-linktype=\"relative-path\">Application Settings Overview</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an event handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event of a form. The event handler uses the ClientSize property of the form to make a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control named <code>button1</code> fill the entire client area of the form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.ClientSize Example#1\">private void MyForm_Resize (Object sender, EventHandler e)\n {\n    // Set the size of button1 to the size of the client area of the form.\n    button1.Size = this.ClientSize;\n }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.ClientSize Example#1\">private:\n   void MyForm_Resize( Object^ sender, EventHandler^ e )\n   {\n      // Set the size of button1 to the size of the client area of the form.\n      button1-&gt;Size = this-&gt;ClientSize;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.ClientSize Example#1\">    Private Sub MyForm_Resize(sender As Object, e As EventHandler)\n        &#39; Set the size of button1 to the size of the client area of the form.\n        button1.Size = Me.ClientSize\n    End Sub &#39;MyForm_Resize\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ControlBox\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ControlBox_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ControlBox</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ControlBox { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form displays a control box in the upper left corner of the form; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ControlBox property is set to <code>true</code>, the control box is displayed in the upper-left corner of the caption bar. The control box is where the user can click to access the system menu.  </p>\n<p> If you set ControlBox to <code>false</code>, and also set the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Location_\" data-linktype=\"relative-path\">Location</a> property, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> property of Form will not update to reflect that the non-client area of the form has been hidden. To fix this problem, put the code which alters the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Location_\" data-linktype=\"relative-path\">Location</a> property to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When set to <code>false</code>, the ControlBox property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the ControlBox, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to create a form that does not have any border or caption box. The form created in this example could be used to create a splash screen for an application. The example requires that the example&#39;s method is defined in a form class and called when the form is being initialized.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.ControlBox Example#1\">public void CreateMyBorderlessWindow()\n {\n    this.FormBorderStyle = FormBorderStyle.None;\n    this.MaximizeBox = false;\n    this.MinimizeBox = false;\n    this.StartPosition = FormStartPosition.CenterScreen;\n    // Remove the control box so the form will only display client area.\n    this.ControlBox = false;\n }\n \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.ControlBox Example#1\">public:\n   void CreateMyBorderlessWindow()\n   {\n      this-&gt;FormBorderStyle = ::FormBorderStyle::None;\n      this-&gt;MaximizeBox = false;\n      this-&gt;MinimizeBox = false;\n      this-&gt;StartPosition = FormStartPosition::CenterScreen;\n      // Remove the control box so the form will only display client area.\n      this-&gt;ControlBox = false;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.ControlBox Example#1\">    Public Sub CreateMyBorderlesWindow()\n        FormBorderStyle = FormBorderStyle.None\n        MaximizeBox = False\n        MinimizeBox = False\n        StartPosition = FormStartPosition.CenterScreen\n        &#39; Remove the control box so the form will only display client area.\n        ControlBox = False\n    End Sub &#39;CreateMyBorderlesWindow\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_CreateParams\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_CreateParams_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateParams</div>        \r\n          </div>\r\n    \r\n            <p>Gets the required creation parameters when the control handle is created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.CreateParams CreateParams { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a> that contains the required creation parameters when the handle to the control is created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_DefaultImeMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_DefaultImeMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultImeMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default Input Method Editor (IME) mode supported by the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">ImeMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.  </p>\n<p> As implemented in the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class, this property always returns the <a class=\"xref\" href=\"system.windows.forms.imemode\" data-linktype=\"relative-path\">System.Windows.Forms.ImeMode</a> value. The value of this property is assigned to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeMode_\" data-linktype=\"relative-path\">ImeMode</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_DefaultSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_DefaultSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default size of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Drawing.Size DefaultSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>The default <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_DesktopBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_DesktopBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesktopBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size and location of the form on the Windows desktop.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle DesktopBounds { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the form on the Windows desktop using desktop coordinates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel-based. If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.  </p>\n<p> You can use this property to size and position a form relative to other forms or applications on the Windows desktop.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop. This example requires that the method is defined within a form class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.DesktopBounds Example#1\">public:\n   void MoveMyForm()\n   {\n      // Create a Rectangle object that will be used as the bound of the form.\n      Rectangle tempRect = Rectangle( 50, 50, 100, 100 );\n      // Set the bounds of the form using the Rectangle object.\n      this-&gt;DesktopBounds = tempRect;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.DesktopBounds Example#1\">public void MoveMyForm()\n {\n    // Create a Rectangle object that will be used as the bound of the form.\n    Rectangle tempRect = new Rectangle(50,50,100,100);\n    //  Set the bounds of the form using the Rectangle object.\n    this.DesktopBounds = tempRect;\n }\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.DesktopBounds Example#1\">    Public Sub MoveMyForm()\n        &#39; Create a Rectangle object that will be used as the bound of the form.\n        Dim tempRect As New Rectangle(50, 50, 100, 100)\n        &#39;  Set the bounds of the form using the Rectangle object.\n        DesktopBounds = tempRect\n    End Sub &#39;MoveMyForm\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_DesktopLocation\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_DesktopLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DesktopLocation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the location of the form on the Windows desktop.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point DesktopLocation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the location of the form on the desktop.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel based. If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.  </p>\n<p> You can use this property to position your form relative to other forms and applications on the Windows desktop.  </p>\n<p> If you call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a> method before calling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Show_\" data-linktype=\"relative-path\">Show</a> method, your form will be positioned at its default location, which is determined by the operating system. For more information about window positioning, see the &quot;Window Size and Position&quot; section of the &quot;Window Features&quot; document in the MSDN library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a>.  </p>\n<p> If you call <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a> after calling <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Show_\" data-linktype=\"relative-path\">Show</a>, your form will be positioned at the location you specified.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop. This example requires that method has been defined within a form class.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Form.DesktopLocation Example#1\">    Public Sub MoveMyForm()\n        &#39; Create a Point object that will be used as the location of the form.\n        Dim tempPoint As New Point(100, 100)\n        &#39; Set the location of the form using the Point object.\n        DesktopLocation = tempPoint\n    End Sub &#39;MoveMyForm\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.DesktopLocation Example#1\">public:\n   void MoveMyForm()\n   {\n      // Create a Point object that will be used as the location of the form.\n      Point tempPoint = Point( 100, 100 );\n      // Set the location of the form using the Point object.\n      this-&gt;DesktopLocation = tempPoint;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.DesktopLocation Example#1\">public void MoveMyForm()\n {\n    // Create a Point object that will be used as the location of the form.\n    Point tempPoint = new Point(100,100);\n    // Set the location of the form using the Point object.\n    this.DesktopLocation = tempPoint;\n }\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_DialogResult\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_DialogResult_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DialogResult</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the dialog result for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DialogResult DialogResult { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> that represents the result of the form when used as a dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is outside the range of valid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box. If the form is displayed as a dialog box, setting this property with a value from the <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form. This property is typically set by the <a class=\"xref\" href=\"system.windows.forms.button#System_Windows_Forms_Button_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property of a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control on the form. When the user clicks the <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control, the value assigned to the <a class=\"xref\" href=\"system.windows.forms.button#System_Windows_Forms_Button_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property of the <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> is assigned to the DialogResult property of the form.  </p>\n<p> When a form is displayed as a modal dialog box, clicking the <strong>Close</strong> button (the button with an X in the top-right corner of the form) causes the form to be hidden and the DialogResult property to be set to <code>DialogResult.Cancel</code>. The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method is not automatically called when the user clicks the <strong>Close</strong> button of a dialog box or sets the value of the DialogResult property. Instead, the form is hidden and can be shown again without creating a new instance of the dialog box. Because of this behavior, you must call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of the form when the form is no longer needed by your application.  </p>\n<p> You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can override the value assigned to the DialogResult property when the user clicks the <strong>Close</strong> button by setting the DialogResult property in an event handler for the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event of the form.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is displayed as a modeless window, the value returned by the DialogResult property might not return a value assigned to the form because the form&#39;s resources are automatically released when the form is closed.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the DialogResult property of the form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.DialogResult Example#1\">public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location \n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Make button1&#39;s dialog result OK.\n    button1.DialogResult = DialogResult.OK;\n    // Make button2&#39;s dialog result Cancel.\n    button2.DialogResult = DialogResult.Cancel;\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n \n    // Determine if the OK button was clicked on the dialog box.\n    if (form1.DialogResult == DialogResult.OK)\n    {\n       // Display a message box indicating that the OK button was clicked.\n       MessageBox.Show(&quot;The OK button on the form was clicked.&quot;);\n       // Optional: Call the Dispose method when you are finished with the dialog box.\n       form1.Dispose();\n    }\n    else\n    {\n       // Display a message box indicating that the Cancel button was clicked.\n       MessageBox.Show(&quot;The Cancel button on the form was clicked.&quot;);\n       // Optional: Call the Dispose method when you are finished with the dialog box.\n       form1.Dispose();\n    }\n }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.DialogResult Example#1\">   void CreateMyForm()\n   {\n      \n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      \n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      \n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      \n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      \n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location = Point(button1-&gt;Left,button1-&gt;Height + button1-&gt;Top + 10);\n      \n      // Make button1&#39;s dialog result OK.\n      button1-&gt;DialogResult = ::DialogResult::OK;\n      \n      // Make button2&#39;s dialog result Cancel.\n      button2-&gt;DialogResult = ::DialogResult::Cancel;\n      \n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      \n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      \n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      \n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      \n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      \n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n      \n      // Determine if the OK button was clicked on the dialog box.\n      if ( form1-&gt;DialogResult == ::DialogResult::OK )\n      {\n         \n         // Display a message box indicating that the OK button was clicked.\n         MessageBox::Show( &quot;The OK button on the form was clicked.&quot; );\n         \n         // Optional: Call the Dispose method when you are finished with the dialog box.\n         delete form1;\n      }\n      else\n      {\n         \n         // Display a message box indicating that the Cancel button was clicked.\n         MessageBox::Show( &quot;The Cancel button on the form was clicked.&quot; );\n         \n         // Optional: Call the Dispose method when you are finished with the dialog box.\n         delete form1;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.DialogResult Example#1\">    Public Sub CreateMyForm()\n        &#39; Create a new instance of the form.\n        Dim form1 As New Form()\n        &#39; Create two buttons to use as the accept and cancel buttons.\n        Dim button1 As New Button()\n        Dim button2 As New Button()\n        \n        &#39; Set the text of button1 to &quot;OK&quot;.\n        button1.Text = &quot;OK&quot;\n        &#39; Set the position of the button on the form.\n        button1.Location = New Point(10, 10)\n        &#39; Set the text of button2 to &quot;Cancel&quot;.\n        button2.Text = &quot;Cancel&quot;\n        &#39; Set the position of the button based on the location of button1.\n        button2.Location = New Point(button1.Left, button1.Height + button1.Top + 10)\n        &#39; Make button1&#39;s dialog result OK.\n        button1.DialogResult = DialogResult.OK\n        &#39; Make button2&#39;s dialog result Cancel.\n        button2.DialogResult = DialogResult.Cancel\n        &#39; Set the caption bar text of the form.   \n        form1.Text = &quot;My Dialog Box&quot;\n        \n        &#39; Define the border style of the form to a dialog box.\n        form1.FormBorderStyle = FormBorderStyle.FixedDialog\n        &#39; Set the accept button of the form to button1.\n        form1.AcceptButton = button1\n        &#39; Set the cancel button of the form to button2.\n        form1.CancelButton = button2\n        &#39; Set the start position of the form to the center of the screen.\n        form1.StartPosition = FormStartPosition.CenterScreen\n        \n        &#39; Add button1 to the form.\n        form1.Controls.Add(button1)\n        &#39; Add button2 to the form.\n        form1.Controls.Add(button2)\n        \n        &#39; Display the form as a modal dialog box.\n        form1.ShowDialog()\n        \n        &#39; Determine if the OK button was clicked on the dialog box.\n        If form1.DialogResult = DialogResult.OK Then\n            &#39; Display a message box indicating that the OK button was clicked.\n            MessageBox.Show(&quot;The OK button on the form was clicked.&quot;)\n            &#39; Optional: Call the Dispose method when you are finished with the dialog box.\n            form1.Dispose\n        &#39; Display a message box indicating that the Cancel button was clicked.\n        Else\n            MessageBox.Show(&quot;The Cancel button on the form was clicked.&quot;)\n            &#39; Optional: Call the Dispose method when you are finished with the dialog box.\n            form1.Dispose\n        End If\n    End Sub &#39;CreateMyForm \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_FormBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_FormBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the border style of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a> that represents the style of border to display for the form. The default is <code>FormBorderStyle.Sizable</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is outside the range of valid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The border style of the form determines how the outer edge of the form appears. In addition to changing the border display for a form, certain border styles prevent the form from being sized. For example, the <code>FormBorderStyle.FixedDialog</code> border style changes the border of the form to that of a dialog box and prevents the form from being resized. The border style can also affect the size or availability of the caption bar section of a form.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> With the <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a> style, it is impossible to resize the window below a certain minimum value, even if you have set <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ControlBox_\" data-linktype=\"relative-path\">ControlBox</a> to <code>false</code> and assigned a zero-length string to <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Text_\" data-linktype=\"relative-path\">Text</a>. Consider working around this by using the <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a> style instead.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the FormBorderStyle, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_HelpButton\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_HelpButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HelpButton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HelpButton { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display a Help button in the form&#39;s caption bar; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, a small button with a question mark appears in the caption bar to the left of the <strong>Close</strong> button. You can use this button to display help for your application. You can create an event handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a> event of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class to display Help information to the user when the Help button of the form is clicked.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The value of the HelpButton property is ignored if the <strong>Maximize</strong> or <strong>Minimize</strong> buttons are shown.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the HelpButton property to display a Help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Icon\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Icon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Icon</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the icon for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Icon Icon { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.drawing.icon\" data-linktype=\"relative-path\">Icon</a> that represents the icon for the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A form&#39;s icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.  </p>\n<p> This property will have no effect if <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> is set to <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a>. In that case, the form will not display an icon.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_IsMdiChild\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_IsMdiChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsMdiChild</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the form is a multiple-document interface (MDI) child form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsMdiChild { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form is an MDI child form; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>At run time, MDI child forms are displayed inside the client area of an MDI parent form. An MDI child form can be maximized, minimized, and moved within the MDI parent form. To create an MDI child form, assign the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that will be the MDI parent form to the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiParent_\" data-linktype=\"relative-path\">MdiParent</a> property of the child form. You can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_IsMdiContainer_\" data-linktype=\"relative-path\">IsMdiContainer</a> property to determine whether a form is an MDI parent form.  </p>\n<p> You can use the IsMdiChild property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> All MDI child forms have sizable borders, a control-menu box, and Minimize and <strong>Maximize</strong> buttons, regardless of the settings of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ControlBox_\" data-linktype=\"relative-path\">ControlBox</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a> properties.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_IsMdiContainer\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_IsMdiContainer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsMdiContainer</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsMdiContainer { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form is a container for MDI child forms; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property changes the display and behavior of the form to an MDI parent form. When this property is set to <code>true</code>, the form displays a sunken client area with a raised border. All MDI child forms assigned to the parent form are displayed within its client area.  </p>\n<p> When an MDI parent form is closed, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> events of all MDI child forms are raised before the MDI parent form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event is raised. In addition, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a> events of all MDI child forms are raised before the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a> event of the MDI parent form is raised.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If there are two <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on an MDI child form, setting IsMdiContainer to <code>true</code> for the parent form merges the contents of only one of the <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls. Use <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Merge_\" data-linktype=\"relative-path\">Merge</a> to merge the contents of additional child <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on the MDI parent form.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the IsMdiContainer property as well as changing the <code>BackColor</code> property of an MDI Form. To run this example, paste the following code in a new form.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.MdiClientExample#1\">\n\t// Create a new form.\n\tForm mdiChildForm = new Form();\n\n\tprivate void Form1_Load(object sender, System.EventArgs e)\n\t{\n\n\t\t// Set the IsMdiContainer property to true.\n\t\tIsMdiContainer = true;\n\n\t\t// Set the child form&#39;s MdiParent property to \n\t\t// the current form.\n\t\tmdiChildForm.MdiParent = this;\n\n\t\t// Call the method that changes the background color.\n\t\tSetBackGroundColorOfMDIForm();\n\t}\n\n\tprivate void SetBackGroundColorOfMDIForm()\n\t{\n\t\tforeach ( Control ctl in this.Controls )\n\t\t{\n\t\t\tif ((ctl) is MdiClient)\n\n\t\t\t\t// If the control is the correct type,\n\t\t\t\t// change the color.\n\t\t\t{\n\t\t\t\tctl.BackColor = System.Drawing.Color.PaleGreen;\n\t\t\t}\n\t\t}\n\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.MdiClientExample#1\">\n    &#39; Create a new form.\n    Dim mdiChildForm As New Form\n\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n\n        &#39; Set the IsMdiContainer property to true.\n        IsMdiContainer = True\n\n        &#39; Set the child form&#39;s MdiParent property to \n        &#39; the current form.\n        mdiChildForm.MdiParent = Me\n\n        &#39;Call the method that changes the background color.\n        SetBackGroundColorOfMDIForm()\n    End Sub\n\n    Private Sub SetBackGroundColorOfMDIForm()\n        Dim ctl As Control\n\n        &#39; Loop through controls,  \n        &#39; looking for controls of MdiClient type. \n        For Each ctl In Me.Controls\n            If TypeOf (ctl) Is MdiClient Then\n\n                &#39; If the control is the correct type,\n                &#39; change the color.\n                ctl.BackColor = System.Drawing.Color.PaleGreen\n            End If\n        Next\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_IsRestrictedWindow\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_IsRestrictedWindow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsRestrictedWindow</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the form can use all windows and user input events without restriction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsRestrictedWindow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form has restrictions; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsRestrictedWindow property determines whether the <a class=\"xref\" href=\"system.security.permissions.uipermissionwindow\" data-linktype=\"relative-path\">UIPermissionWindow</a> permission is granted. This property is set at run time in the form&#39;s constructor, and is cached for the lifetime of the form. Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_KeyPreview\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_KeyPreview_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyPreview</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool KeyPreview { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form will receive all key events; <code>false</code> if the currently selected control on the form receives key events. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, the form will receive all <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> events. After the form&#39;s event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus. For example, if the KeyPreview property is set to <code>true</code> and the currently selected control is a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>, after the keystroke is handled by the event handlers of the form the <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control will receive the key that was pressed. To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <a class=\"xref\" href=\"system.windows.forms.keypresseventargs#System_Windows_Forms_KeyPressEventArgs_Handled_\" data-linktype=\"relative-path\">Handled</a> property in your form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event handler to <code>true</code>.  </p>\n<p> You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke. For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a form has no visible or enabled controls, it automatically receives all keyboard events.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> A control on a form may be programmed to cancel any keystrokes it receives. Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of KeyPreview.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting a form&#39;s KeyPreview property to true and handling the key events at the form level. To run the example, paste the following code in a blank form.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ProcessMnemonic#2\">using System.Windows.Forms;\nusing System.Security.Permissions;\n\npublic class Form1:\n\tSystem.Windows.Forms.Form\n\n\t// Declare the controls contained on the form.\n{\n\tprivate MyMnemonicButton button1;\n\tinternal System.Windows.Forms.ListBox ListBox1;\n\n\tpublic Form1() : base()\n\t{        \n\n\t\t// Set KeyPreview object to true to allow the form to process \n\t\t// the key before the control with focus processes it.\n\t\tthis.KeyPreview = true;\n\n\t\t// Add a MyMnemonicButton.  \n\t\tbutton1 = new MyMnemonicButton();\n\t\tbutton1.Text = &quot;&amp;Click&quot;;\n\t\tbutton1.Location = new System.Drawing.Point(100, 120);\n\t\tthis.Controls.Add(button1);\n\n\t\t// Initialize a ListBox control and the form itself.\n\t\tthis.ListBox1 = new System.Windows.Forms.ListBox();\n\t\tthis.SuspendLayout();\n\t\tthis.ListBox1.Location = new System.Drawing.Point(8, 8);\n\t\tthis.ListBox1.Name = &quot;ListBox1&quot;;\n\t\tthis.ListBox1.Size = new System.Drawing.Size(120, 95);\n\t\tthis.ListBox1.TabIndex = 0;\n\t\tthis.ListBox1.Text = &quot;Press a key&quot;;\n\t\tthis.ClientSize = new System.Drawing.Size(292, 266);\n\t\tthis.Controls.Add(this.ListBox1);\n\t\tthis.Name = &quot;Form1&quot;;\n\t\tthis.Text = &quot;Form1&quot;;\n\t\tthis.ResumeLayout(false);\n\n\t\t// Associate the event-handling method with the\n\t\t// KeyDown event.\n\t\tthis.KeyDown += new KeyEventHandler(Form1_KeyDown);\n\n\t}\n\n\t// The form will handle all key events before the control with  \n\t// focus handles them.  Show the keys pressed by adding the\n\t// KeyCode object to ListBox1. Ensure the processing is passed\n\t// to the control with focus by setting the KeyEventArg.Handled\n\t// property to false.\n\tprivate void Form1_KeyDown(object sender, KeyEventArgs e)\n\t{\n\t\tListBox1.Items.Add(e.KeyCode);\n\t\te.Handled = false;\n\t}\n\n\t[System.STAThreadAttribute]\n\tpublic static void Main()\n\t{\n\t\tApplication.Run(new Form1());\n\t}\n\n}\n\n\n// This button is a simple extension of the button class that overrides\n// the ProcessMnemonic method.  If the mnemonic is correctly entered,  \n// the message box will appear and the click event will be raised.  \npublic class MyMnemonicButton:Button\n\n\t// This method makes sure the control is selectable and the \n\t// mneumonic is correct before displaying the message box\n\t// and triggering the click event.\n{\n\t[UIPermission(\n        SecurityAction.Demand, Window = UIPermissionWindow.AllWindows)]\n        protected override bool ProcessMnemonic(char inputChar)\n\t{\n\n\t\tif (CanSelect&amp;&amp;IsMnemonic(inputChar, this.Text))\n\t\t{\n\t\t\tMessageBox.Show(&quot;You&#39;ve raised the click event &quot; +\n\t\t\t\t&quot;using the mnemonic.&quot;);\n\t\t\tthis.PerformClick();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ProcessMnemonic#2\">using namespace System::Windows::Forms;\n\n// This button is a simple extension of the button class that overrides\n// the ProcessMnemonic method.  If the mnemonic is correctly entered,  \n// the message box will appear and the click event will be raised.  \n// This method makes sure the control is selectable and the \n// mnemonic is correct before displaying the message box\n// and triggering the click event.\npublic ref class MyMnemonicButton: public Button\n{\nprotected:\n   bool ProcessMnemonic( char inputChar )\n   {\n      if ( CanSelect &amp;&amp; IsMnemonic( inputChar, this-&gt;Text ) )\n      {\n         MessageBox::Show( &quot;You&#39;ve raised the click event &quot;\n         &quot;using the mnemonic.&quot; );\n         this-&gt;PerformClick();\n         return true;\n      }\n\n      return false;\n   }\n\n};\n\n\n// Declare the controls contained on the form.\npublic ref class Form1: public System::Windows::Forms::Form\n{\nprivate:\n   MyMnemonicButton^ button1;\n\npublic private:\n   System::Windows::Forms::ListBox^ ListBox1;\n\npublic:\n   Form1()\n      : Form()\n   {\n      \n      // Set KeyPreview object to true to allow the form to process \n      // the key before the control with focus processes it.\n      this-&gt;KeyPreview = true;\n      \n      // Add a MyMnemonicButton.  \n      button1 = gcnew MyMnemonicButton;\n      button1-&gt;Text = &quot;&amp;Click&quot;;\n      button1-&gt;Location = System::Drawing::Point( 100, 120 );\n      this-&gt;Controls-&gt;Add( button1 );\n      \n      // Initialize a ListBox control and the form itself.\n      this-&gt;ListBox1 = gcnew System::Windows::Forms::ListBox;\n      this-&gt;SuspendLayout();\n      this-&gt;ListBox1-&gt;Location = System::Drawing::Point( 8, 8 );\n      this-&gt;ListBox1-&gt;Name = &quot;ListBox1&quot;;\n      this-&gt;ListBox1-&gt;Size = System::Drawing::Size( 120, 95 );\n      this-&gt;ListBox1-&gt;TabIndex = 0;\n      this-&gt;ListBox1-&gt;Text = &quot;Press a key&quot;;\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Controls-&gt;Add( this-&gt;ListBox1 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n      \n      // Associate the event-handling method with the\n      // KeyDown event.\n      this-&gt;KeyDown += gcnew KeyEventHandler( this, &amp;Form1::Form1_KeyDown );\n   }\n\n\nprivate:\n\n   // The form will handle all key events before the control with  \n   // focus handles them.  Show the keys pressed by adding the\n   // KeyCode object to ListBox1. Ensure the processing is passed\n   // to the control with focus by setting the KeyEventArg.Handled\n   // property to false.\n   void Form1_KeyDown( Object^ /*sender*/, KeyEventArgs^ e )\n   {\n      ListBox1-&gt;Items-&gt;Add( e-&gt;KeyCode );\n      e-&gt;Handled = false;\n   }\n\n};\n\n\n[System::STAThreadAttribute]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ProcessMnemonic#2\">Imports System.Windows.Forms\nImports System.Security.Permissions\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    &#39; Declare the controls contained on the form.\n    Private WithEvents button1 As MyMnemonicButton\n    Friend WithEvents ListBox1 As System.Windows.Forms.ListBox\n\n    Public Sub New()\n        MyBase.New()\n\n        &#39; Set KeyPreview object to true to allow the form to process \n        &#39; the key before the control with focus processes it.\n        Me.KeyPreview = True\n\n        &#39; Add a MyMnemonicButton.  \n        button1 = New MyMnemonicButton\n        button1.Text = &quot;&amp;Click&quot;\n        button1.Location = New System.Drawing.Point(100, 120)\n        Me.Controls.Add(button1)\n\n        &#39; Initialize a ListBox control and the form itself.\n        Me.ListBox1 = New System.Windows.Forms.ListBox\n        Me.SuspendLayout()\n        Me.ListBox1.Location = New System.Drawing.Point(8, 8)\n        Me.ListBox1.Name = &quot;ListBox1&quot;\n        Me.ListBox1.Size = New System.Drawing.Size(120, 95)\n        Me.ListBox1.TabIndex = 0\n        Me.ListBox1.Text = &quot;Press a key&quot;\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Controls.Add(Me.ListBox1)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;Form1&quot;\n        Me.ResumeLayout(False)\n\n    End Sub\n\n    &#39; The form will handle all key events before the control with  \n    &#39; focus handles them.  Show the keys pressed by adding the\n    &#39; KeyCode object to ListBox1. Ensure the processing is passed\n    &#39; to the control with focus by setting the KeyEventArg.Handled\n    &#39; property to false.\n    Private Sub Form1_KeyDown(ByVal sender As Object, _\n        ByVal e As KeyEventArgs) Handles MyBase.KeyDown\n        ListBox1.Items.Add(e.KeyCode)\n        e.Handled = False\n    End Sub\n\n    &lt;System.STAThreadAttribute()&gt; Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\nEnd Class\n\n\n&#39; This button is a simple extension of the button class that overrides\n&#39; the ProcessMnemonic method.  If the mnemonic is correctly entered,  \n&#39; the message box will appear and the click event will be raised.  \nPublic Class MyMnemonicButton\n    Inherits Button\n\n    &#39; This method makes sure the control is selectable and the \n    &#39; mneumonic is correct before displaying the message box\n    &#39; and triggering the click event.\n    &lt;System.Security.Permissions.UIPermission( _\n    System.Security.Permissions.SecurityAction.Demand, Window:=UIPermissionWindow.AllWindows)&gt; _\n    Protected Overrides Function ProcessMnemonic( _\n        ByVal inputChar As Char) As Boolean\n\n        If (CanSelect And IsMnemonic(inputChar, Me.Text)) Then\n            MessageBox.Show(&quot;You&#39;ve raised the click event &quot; _\n                &amp; &quot;using the mnemonic.&quot;)\n            Me.PerformClick()\n            Return True\n        End If\n        Return False\n    End Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Location\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Location_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Location</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the upper-left corner of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> in screen coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point Location { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the upper-left corner of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> in screen coordinates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> is a structure, which means that it is a value type. If you access a property in <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>, a copy of the property is returned. Therefore, changing the <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_X_\" data-linktype=\"relative-path\">X</a> or <a class=\"xref\" href=\"system.drawing.point#System_Drawing_Point_Y_\" data-linktype=\"relative-path\">Y</a> properties of the <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> returned from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property will not affect the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left_\" data-linktype=\"relative-path\">Left</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right_\" data-linktype=\"relative-path\">Right</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top_\" data-linktype=\"relative-path\">Top</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom_\" data-linktype=\"relative-path\">Bottom</a> property values of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>. To adjust these properties, set each property value individually, or set the Location property with a new <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>.  </p>\n<p> The Location property gets or sets the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> property of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> base class, and sets the <a class=\"xref\" href=\"system.componentmodel.settingsbindableattribute#System_ComponentModel_SettingsBindableAttribute_Bindable_\" data-linktype=\"relative-path\">Bindable</a> property to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MainMenuStrip\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MainMenuStrip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MainMenuStrip</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the primary menu container for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> that represents the container for the menu structure of the form. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In addition to setting the MainMenuStrip property, you must <a class=\"xref\" href=\"system.windows.forms.control.controlcollection#System_Windows_Forms_Control_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> the <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> control to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection of the form.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> class supersedes the <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> class in previous versions of the .NET Framework.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Margin\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Margin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Margin</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the space between controls.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Padding Margin { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></div>\r\n                  </div>\r\n                  <p>A value that represents the space between controls.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MaximizeBox\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MaximizeBox_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximizeBox</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <strong>Maximize</strong> button is displayed in the caption bar of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MaximizeBox { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display a <strong>Maximize</strong> button for the form; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <strong>Maximize</strong> button enables users to enlarge a window to full-screen size. To display a <strong>Maximize</strong> button, you must also set the form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> property to <code>FormBorderStyle.FixedSingle</code>, <code>FormBorderStyle.Sizable</code>, <code>FormBorderStyle.Fixed3D</code>, or <code>FormBorderStyle.FixedDialog</code>.  </p>\n<p> A <strong>Maximize</strong> button automatically becomes a restore button when a window is maximized. Minimizing or restoring a window automatically changes the restore button back to a <strong>Maximize</strong> button.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Maximizing a form at run time generates a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event. The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> property reflects the current state of the window. If you set the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> property to <code>FormWindowState.Maximized</code>, the form is maximized independently of whatever settings are in effect for the MaximizeBox and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> properties.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimizeBox_\" data-linktype=\"relative-path\">MinimizeBox</a>, MaximizeBox, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MaximizedBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MaximizedBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximizedBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the size of the form when it is maximized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Drawing.Rectangle MaximizedBounds { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the form when it is maximized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Drawing.Rectangle.Top*</span> property is greater than the height of the form.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Drawing.Rectangle.Left*</span> property is greater than the width of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MaximumSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MaximumSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximumSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the maximum size the form can be resized to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Size MaximumSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the maximum size for the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The values of the height or width within the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> object are less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property enables you to limit the size of a form to a specified maximum size. You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden. If this property is set to a <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates setting the MaximumSize property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormExample#3\">\tpublic Form1() : base()\n\t{        \n\n\t\t//This call is required by the Windows Form Designer.\n\t\tInitializeComponent();\n\n\t\t//Set the maximum size, so if user maximizes form, it \n\t\t//will not cover entire desktop.  \n\t\tthis.MaximumSize = new System.Drawing.Size(500, 500);\n\n\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormExample#3\">    Public Sub New()\n        MyBase.New()\n\n        &#39;This call is required by the Windows Form Designer.\n        InitializeComponent()\n\n        &#39;Set the maximum size, so if user maximizes form, it \n        &#39;will not cover entire desktop.  \n        Me.MaximumSize = New Size(500, 500)\n\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormExample#3\">public:\n   Form1()\n      : Form()\n   {\n      \n      //This call is required by the Windows Form Designer.\n      InitializeComponent();\n      \n      //Set the maximum size, so if user maximizes form, it \n      //will not cover entire desktop.  \n      this-&gt;MaximumSize = System::Drawing::Size( 500, 500 );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MdiChildren\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MdiChildren_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MdiChildren</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Form[] MdiChildren { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> objects, each of which identifies one of this form&#39;s MDI child forms.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form. To create an MDI child form, assign the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that will be the MDI parent form to the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiParent_\" data-linktype=\"relative-path\">MdiParent</a> property of the child form.  </p>\n<p> You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the MdiChildren property to iterate through the list of MDI child forms and add a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control to each.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.MDIChildren#1\">private:\n   void AddButtonsToMyChildren()\n   {\n      // If there are child forms in the parent form, add Button controls to them.\n      for ( int x = 0; x &lt; this-&gt;MdiChildren-&gt;Length; x++ )\n      {\n         // Create a temporary Button control to add to the child form.\n         Button^ tempButton = gcnew Button;\n\n         // Set the location and text of the Button control.\n         tempButton-&gt;Location = Point(10,10);\n         tempButton-&gt;Text = &quot;OK&quot;;\n\n         // Create a temporary instance of a child form (Form 2 in this case).\n         Form^ tempChild = dynamic_cast&lt;Form^&gt;(this-&gt;MdiChildren[ x ]);\n\n         // Add the Button control to the control collection of the form.\n         tempChild-&gt;Controls-&gt;Add( tempButton );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.MDIChildren#1\">      private void AddButtonsToMyChildren()\n      {\n         // If there are child forms in the parent form, add Button controls to them.\n         for (int x =0; x &lt; this.MdiChildren.Length;x++)\n         {\n            // Create a temporary Button control to add to the child form.\n            Button tempButton = new Button();\n            // Set the location and text of the Button control.\n            tempButton.Location = new Point(10,10);\n            tempButton.Text = &quot;OK&quot;;\n            // Create a temporary instance of a child form (Form 2 in this case).\n            Form tempChild = (Form)this.MdiChildren[x];\n            // Add the Button control to the control collection of the form.\n            tempChild.Controls.Add(tempButton);\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.MDIChildren#1\">    Private Sub AddButtonsToMyChildren()\n        &#39; If there are child forms in the parent form, add Button controls to them.\n        Dim x As Integer\n        For x = 0 To (Me.MdiChildren.Length) - 1\n            &#39; Create a temporary Button control to add to the child form.\n            Dim tempButton As New Button()\n            &#39; Set the location and text of the Button control.\n            tempButton.Location = New Point(10, 10)\n            tempButton.Text = &quot;OK&quot;\n            &#39; Create a temporary instance of a child form (Form 2 in this case).\n            Dim tempChild As Form = CType(Me.MdiChildren(x), Form)\n            &#39; Add the Button control to the control collection of the form.\n            tempChild.Controls.Add(tempButton)\n        Next x\n    End Sub &#39;AddButtonsToMyChildren\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MdiParent\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MdiParent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MdiParent</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the current multiple-document interface (MDI) parent form of this form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Form MdiParent { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that represents the MDI parent form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> assigned to this property is not marked as an MDI container.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> assigned to this property is both a child and an MDI container form.  </p>\n<p> -or-  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> assigned to this property is located on a different thread.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create an MDI child form, assign the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that will be the MDI parent form to the MdiParent property of the child form. You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If there are two <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on an MDI child form, setting <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_IsMdiContainer_\" data-linktype=\"relative-path\">IsMdiContainer</a> to <code>true</code> for the parent form merges the contents of only one of the <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls. Use <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Merge_\" data-linktype=\"relative-path\">Merge</a> to merge the contents of additional child <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on the MDI parent form.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create child forms in an MDI application. The example code creates a form with unique text to identify the child form. The example uses the MdiParent property to specify that a form is a child form. This example requires that the code in the example is called from a form that has its <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_IsMdiContainer_\" data-linktype=\"relative-path\">IsMdiContainer</a> property set to <code>true</code> and that the form has a private class level integer variable named <code>childCount</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.MDIParent#1\">private:\n   void CreateMyChildForm()\n   {\n      // Create a new form to represent the child form.\n      Form^ child = gcnew Form;\n\n      // Increment the private child count.\n      childCount++;\n\n      // Set the text of the child form using the count of child forms.\n      String^ formText = String::Format( &quot;Child {0}&quot;, childCount );\n      child-&gt;Text = formText;\n\n      // Make the new form a child form.\n      child-&gt;MdiParent = this;\n\n      // Display the child form.\n      child-&gt;Show();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.MDIParent#1\">      private void CreateMyChildForm ()\n      {\n         // Create a new form to represent the child form.\n         Form child = new Form();\n         // Increment the private child count.\n         childCount++;\n         // Set the text of the child form using the count of child forms.\n         String formText = &quot;Child &quot; + childCount;\n         child.Text = formText;\n\n         // Make the new form a child form.\n         child.MdiParent = this;\n         // Display the child form.\n         child.Show();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.MDIParent#1\">   Private Sub CreateMyChildForm()\n      &#39; Create a new form to represent the child form.\n      Dim child As New Form()\n      &#39; Increment the private child count.\n      childCount += 1\n      &#39; Set the text of the child form using the count of child forms.\n      Dim formText As String = &quot;Child &quot; + childCount.ToString()\n      child.Text = formText\n\n      &#39; Make the new form a child form.\n      child.MdiParent = Me\n      &#39; Display the child form.\n      child.Show()\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Menu\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Menu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Menu</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> that is displayed in the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.MainMenu Menu { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> that represents the menu to display in the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to switch between complete menu sets at run time. For example, you can define one <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> to display when a child window is displayed. You can also use a different <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> when specific conditions exist in your application that require displaying a different menu set.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a>, assigns two <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects to the <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> and binds it to a form. This example requires that you have a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> created that is named <code>Form1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MainMenu.MainMenu Example#1\"> public void CreateMyMainMenu()\n {\n    // Create an empty MainMenu.\n    MainMenu mainMenu1 = new MainMenu();\n \n    MenuItem menuItem1 = new MenuItem();\n    MenuItem menuItem2 = new MenuItem();\n \n    menuItem1.Text = &quot;File&quot;;\n    menuItem2.Text = &quot;Edit&quot;;\n    // Add two MenuItem objects to the MainMenu.\n    mainMenu1.MenuItems.Add(menuItem1);\n    mainMenu1.MenuItems.Add(menuItem2);\n    \n    // Bind the MainMenu to Form1.\n    Menu = mainMenu1;   \n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MainMenu.MainMenu Example#1\"> Public Sub CreateMyMainMenu()\n     &#39; Create an empty MainMenu.\n     Dim mainMenu1 As New MainMenu()\n        \n     Dim menuItem1 As New MenuItem()\n     Dim menuItem2 As New MenuItem()\n        \n     menuItem1.Text = &quot;File&quot;\n     menuItem2.Text = &quot;Edit&quot;\n     &#39; Add two MenuItem objects to the MainMenu.\n     mainMenu1.MenuItems.Add(menuItem1)\n     mainMenu1.MenuItems.Add(menuItem2)\n        \n     &#39; Bind the MainMenu to Form1.\n     Menu = mainMenu1\n End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MainMenu.MainMenu Example#1\">   void CreateMyMainMenu()\n   {\n      // Create an empty MainMenu.\n      MainMenu^ mainMenu1 = gcnew MainMenu;\n      MenuItem^ menuItem1 = gcnew MenuItem;\n      MenuItem^ menuItem2 = gcnew MenuItem;\n      menuItem1-&gt;Text = &quot;File&quot;;\n      menuItem2-&gt;Text = &quot;Edit&quot;;\n\n      // Add two MenuItem objects to the MainMenu.\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem1 );\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem2 );\n\n      // Bind the MainMenu to Form1.\n      Menu = mainMenu1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MergedMenu\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MergedMenu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MergedMenu</div>        \r\n          </div>\r\n    \r\n            <p>Gets the merged menu for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.MainMenu MergedMenu { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> that represents the merged menu of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form&#39;s menu. You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure. To obtain the nonmerged <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> assigned to a form, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Menu_\" data-linktype=\"relative-path\">Menu</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MinimizeBox\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MinimizeBox_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinimizeBox</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <strong>Minimize</strong> button is displayed in the caption bar of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MinimizeBox { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display a <strong>Minimize</strong> button for the form; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <strong>Minimize</strong> button enables users to minimize a window to an icon. To display a <strong>Minimize</strong> button, you must also set the form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> property to <code>FormBorderStyle.FixedSingle</code>, <code>FormBorderStyle.Sizable</code>, <code>FormBorderStyle.Fixed3D</code>, or <code>FormBorderStyle.FixedDialog</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Minimizing a form at run time generates a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event. The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> property reflects the current state of the window. If you set the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> property to <code>FormWindowState.Minimized</code>, the form is minimized independently of whatever settings are in effect for the MinimizeBox and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> properties.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, MinimizeBox, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizeBox_\" data-linktype=\"relative-path\">MaximizeBox</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.AcceptButton Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location =\n         Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the MaximizeBox to false to remove the maximize box.\n      form1-&gt;MaximizeBox = false;      \n      // Set the MinimizeBox to false to remove the minimize box.\n      form1-&gt;MinimizeBox = false;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n      \n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.AcceptButton Example#1\"> public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the MaximizeBox to false to remove the maximize box.\n    form1.MaximizeBox = false;\n    // Set the MinimizeBox to false to remove the minimize box.\n    form1.MinimizeBox = false;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.AcceptButton Example#1\"> Public Sub CreateMyForm()\n     &#39; Create a new instance of the form.\n     Dim form1 As New Form()\n     &#39; Create two buttons to use as the accept and cancel buttons.\n     Dim button1 As New Button()\n     Dim button2 As New Button()\n        \n     &#39; Set the text of button1 to &quot;OK&quot;.\n     button1.Text = &quot;OK&quot;\n     &#39; Set the position of the button on the form.\n     button1.Location = New Point(10, 10)\n     &#39; Set the text of button2 to &quot;Cancel&quot;.\n     button2.Text = &quot;Cancel&quot;\n     &#39; Set the position of the button based on the location of button1.\n     button2.Location = _\n        New Point(button1.Left, button1.Height + button1.Top + 10)\n     &#39; Set the caption bar text of the form.   \n     form1.Text = &quot;My Dialog Box&quot;\n     &#39; Display a help button on the form.\n     form1.HelpButton = True\n        \n     &#39; Define the border style of the form to a dialog box.\n     form1.FormBorderStyle = FormBorderStyle.FixedDialog\n     &#39; Set the MaximizeBox to false to remove the maximize box.\n     form1.MaximizeBox = False\n     &#39; Set the MinimizeBox to false to remove the minimize box.\n     form1.MinimizeBox = False\n     &#39; Set the accept button of the form to button1.\n     form1.AcceptButton = button1\n     &#39; Set the cancel button of the form to button2.\n     form1.CancelButton = button2\n     &#39; Set the start position of the form to the center of the screen.\n     form1.StartPosition = FormStartPosition.CenterScreen\n        \n     &#39; Add button1 to the form.\n     form1.Controls.Add(button1)\n     &#39; Add button2 to the form.\n     form1.Controls.Add(button2)\n        \n     &#39; Display the form as a modal dialog box.\n     form1.ShowDialog()\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MinimumSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_MinimumSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinimumSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the minimum size the form can be resized to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Size MinimumSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the minimum size for the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The values of the height or width within the <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> object are less than zero.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property enables you to limit the size of a form to a specified minimum size. You can use this feature to prevent a user from sizing a window to an undesirable size. If this property is set to a <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Modal\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Modal_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Modal</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether this form is displayed modally.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Modal { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form is displayed modally; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form. The program must hide or close a modal form (usually in response to some user action) before input to another form can occur. Forms that are displayed modally are typically used as dialog boxes in an application.  </p>\n<p> You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.  </p>\n<p> To display a form modally use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Modal property to determine if a form is displayed as a modal form. If it is not the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_TopLevel_\" data-linktype=\"relative-path\">TopLevel</a> properties are changed to make the form a non-top-level form with a tool window border.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.Modal#1\">   private:\n      void ShowMyNonModalForm()\n      {\n         Form^ myForm = gcnew Form;\n         myForm-&gt;Text = &quot;My Form&quot;;\n         myForm-&gt;SetBounds( 10, 10, 200, 200 );\n         myForm-&gt;Show();\n\n         // Determine if the form is modal.\n         if ( myForm-&gt;Modal == false )\n         {\n            // Change borderstyle and make it not a top level window.\n            myForm-&gt;FormBorderStyle = ::FormBorderStyle::FixedToolWindow;\n            myForm-&gt;TopLevel = false;\n         }\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.Modal#1\">\t\tprivate void ShowMyNonModalForm()\n\t\t{\n\t\t\tForm myForm = new Form();\n\t\t\tmyForm.Text = &quot;My Form&quot;;\n\t\t\tmyForm.SetBounds(10,10,200,200);\n\n\t\t\tmyForm.Show();\n\t\t\t// Determine if the form is modal.\n\t\t\tif(myForm.Modal == false)\n\t\t\t{\n\t\t\t\t// Change borderstyle and make it not a top level window.\n\t\t\t\tmyForm.FormBorderStyle = FormBorderStyle.FixedToolWindow;\n\t\t\t\tmyForm.TopLevel = false;\n\t\t\t}\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.Modal#1\">    Private Sub ShowMyNonModalForm()\n        Dim myForm As New Form()\n        myForm.Text = &quot;My Form&quot;\n        myForm.SetBounds(10, 10, 200, 200)\n\n        myForm.Show()\n        &#39; Determine if the form is modal.\n        If myForm.Modal = False Then\n            &#39; Change borderstyle and make it not a top level window.\n            myForm.FormBorderStyle = FormBorderStyle.FixedToolWindow\n            myForm.TopLevel = False\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Opacity\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Opacity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Opacity</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the opacity level of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public double Opacity { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </div>\r\n                  <p>The level of opacity for the form. The default is 1.00.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Opacity property enables you to specify a level of transparency for the form and its controls. When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent. Setting this property to a value of 0 percent (0.00) makes the form completely invisible. You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view. For example, you can phase a form into view by setting the Opacity property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).  </p>\n<p> Opacity differs from the transparency provided by the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_TransparencyKey_\" data-linktype=\"relative-path\">TransparencyKey</a>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_TransparencyKey_\" data-linktype=\"relative-path\">TransparencyKey</a> property.  </p>\n<p> This property is not supported when <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayout_\" data-linktype=\"relative-path\">RightToLeftLayout</a> is <code>true</code>.  </p>\n<p> The Opacity property depends on the Layered Windows API that was introduced with Windows 2000. For more information, see the &quot;Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications&quot; in the Platform SDK documentation at <a href=\"http://msdn.microsoft.com/\" data-linktype=\"external\">http://msdn.microsoft.com</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The code example creates a new form that is positioned in the center of the screen with an Opacity property set to change the opacity level of the form. The code example also sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> property to provide a larger sized form than the default size of the form. This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.Opacity#1\">private:\n   void CreateMyOpaqueForm()\n   {\n      // Create a new form.\n      Form^ form2 = gcnew Form;\n\n      // Set the text displayed in the caption.\n      form2-&gt;Text = &quot;My Form&quot;;\n\n      // Set the opacity to 75%.\n      form2-&gt;Opacity = .75;\n\n      // Size the form to be 300 pixels in height and width.\n      form2-&gt;Size = System::Drawing::Size( 300, 300 );\n\n      // Display the form in the center of the screen.\n      form2-&gt;StartPosition = FormStartPosition::CenterScreen;\n\n      // Display the form as a modal dialog box.\n      form2-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.Opacity#1\">      private void CreateMyOpaqueForm()\n      {\n         // Create a new form.\n         Form form2 = new Form();\n         // Set the text displayed in the caption.\n         form2.Text = &quot;My Form&quot;;\n         // Set the opacity to 75%.\n         form2.Opacity = .75;\n         // Size the form to be 300 pixels in height and width.\n         form2.Size = new Size(300,300);\n         // Display the form in the center of the screen.\n         form2.StartPosition = FormStartPosition.CenterScreen;\n\n         // Display the form as a modal dialog box.\n         form2.ShowDialog();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.Opacity#1\">   Private Sub CreateMyOpaqueForm()\n      &#39; Create a new form.\n      Dim form2 As New Form()\n      &#39; Set the text displayed in the caption.\n      form2.Text = &quot;My Form&quot;\n      &#39; Set the opacity to 75%.\n      form2.Opacity = 0.75\n      &#39; Size the form to be 300 pixels in height and width.\n      form2.Size = New Size(300, 300)\n      &#39; Display the form in the center of the screen.\n      form2.StartPosition = FormStartPosition.CenterScreen\n\n      &#39; Display the form as a modal dialog box.\n      form2.ShowDialog()\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OwnedForms\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OwnedForms_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwnedForms</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> objects that represent all forms that are owned by this form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Form[] OwnedForms { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> array that represents the owned forms for this form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns an array that contains all forms that are owned by this form. To make a form owned by another form, call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AddOwnedForm_\" data-linktype=\"relative-path\">AddOwnedForm</a> method. The form assigned to the owner form will remain owned until the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RemoveOwnedForm_\" data-linktype=\"relative-path\">RemoveOwnedForm</a> method is called. You can also make a form owned by another by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Owner_\" data-linktype=\"relative-path\">Owner</a> property with a reference to its owner form.  </p>\n<p> When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named <code>Form2</code> that is owned by a form named <code>Form1</code>. If <code>Form1</code> is closed or minimized, <code>Form2</code> is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiChildren_\" data-linktype=\"relative-path\">MdiChildren</a> property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the OwnedForms property to modify all forms owned by the owner form. The first method in the example adds forms to the array of owned forms associated with the owned form. The second method loops through all owned forms and changes the caption. This example requires that both methods are called by an event or other method of a form.  </p>\n<pre><code class=\"lang-vb\" name=\"Form.OwnedForms#1\">   Private Sub AddMyOwnedForm()\n      &#39; Create form to be owned.\n      Dim ownedForm As New Form()\n      &#39; Set the text of the owned form.\n      ownedForm.Text = &quot;Owned Form &quot; + Me.OwnedForms.Length.ToString()\n      &#39; Add the form to the array of owned forms.\n      Me.AddOwnedForm(ownedForm)\n      &#39; Show the owned form.\n      ownedForm.Show()\n   End Sub\n\n\n   Private Sub ChangeOwnedFormText()\n      Dim x As Integer\n      &#39; Loop through all owned forms and change their text.\n      For x = 0 To (Me.OwnedForms.Length) - 1\n         Me.OwnedForms(x).Text = &quot;My Owned Form &quot; + x.ToString()\n      Next x\n   End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.OwnedForms#1\">      private void AddMyOwnedForm()\n      {\n         // Create form to be owned.\n         Form ownedForm = new Form();\n         // Set the text of the owned form.\n         ownedForm.Text = &quot;Owned Form &quot; + this.OwnedForms.Length;\n         // Add the form to the array of owned forms.\n         this.AddOwnedForm(ownedForm);\n         // Show the owned form.\n         ownedForm.Show();\n      }\n\n      private void ChangeOwnedFormText()\n      {\n         // Loop through all owned forms and change their text.\n         for (int x = 0; x &lt; this.OwnedForms.Length; x++)\n         {\n            this.OwnedForms[x].Text = &quot;My Owned Form &quot; + x.ToString();\n         }\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Form.OwnedForms#1\">private:\n   void AddMyOwnedForm()\n   {\n      // Create form to be owned.\n      Form^ ownedForm = gcnew Form;\n\n      // Set the text of the owned form.\n      ownedForm-&gt;Text = String::Format( &quot;Owned Form {0}&quot;, this-&gt;OwnedForms-&gt;Length );\n\n      // Add the form to the array of owned forms.\n      this-&gt;AddOwnedForm( ownedForm );\n\n      // Show the owned form.\n      ownedForm-&gt;Show();\n   }\n\n   void ChangeOwnedFormText()\n   {\n      // Loop through all owned forms and change their text.\n      for ( int x = 0; x &lt; this-&gt;OwnedForms-&gt;Length; x++ )\n      {\n         this-&gt;OwnedForms[ x ]-&gt;Text = String::Format( &quot;My Owned Form {0}&quot;, x );\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Owner\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Owner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Owner</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the form that owns this form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Form Owner { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that represents the form that is the owner of this form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>A top-level window cannot have an owner.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To make a form owned by another form, assign its Owner property a reference to the form that will be the owner.  </p>\n<p> When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named <code>Form2</code> that is owned by a form named <code>Form1</code>. If <code>Form1</code> is closed or minimized, <code>Form2</code> is also closed or hidden.Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected. To determine the forms that are owned by a parent form, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OwnedForms_\" data-linktype=\"relative-path\">OwnedForms</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_RestoreBounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_RestoreBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RestoreBounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the location and size of the form in its normal window state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle RestoreBounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that contains the location and size of the form in the normal window state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, you use the RestoreBounds property to track the user&#39;s window size and position preferences for the form in its normal window state. You should track both the value of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> and RestoreBounds properties when tracking the user&#39;s window preferences.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The value of the RestoreBounds property is valid only when the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> property of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> class is not equal to <a class=\"xref\" href=\"system.windows.forms.formwindowstate\" data-linktype=\"relative-path\">FormWindowState</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_RightToLeftLayout\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_RightToLeftLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RightToLeftLayout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether right-to-left mirror placement is turned on.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool RightToLeftLayout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if right-to-left mirror placement is turned on; otherwise, <code>false</code> for standard child control placement. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RightToLeftLayout property is primarily useful for developing world-ready forms for worldwide audiences. Many forms are designed so that controls are laid out on a form in a left-to-right fashion. These forms are compatible with languages that follow this writing direction. However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form. If both the RightToLeftLayout and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> properties are <code>true</code>, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.  </p>\n<p> Unlike <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a>, RightToLeftLayout does not inherit. If you want it to take effect for child controls, you must set it on each child control that you want mirrored.  </p>\n<p> Owner draw is not supported when RightToLeftLayout is set to <code>Yes</code>. The owner draw events will still occur, but the behavior of any code you author in these events is not defined. Additionally, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImage_\" data-linktype=\"relative-path\">BackgroundImage</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Opacity_\" data-linktype=\"relative-path\">Opacity</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_TransparencyKey_\" data-linktype=\"relative-path\">TransparencyKey</a>, and the painting events are not supported.  </p>\n<p> The RightToLeftLayout and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> properties cause the following Win32 API window styles to be set:  </p>\n<ul>\n<li><p>When <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>Yes</code> and RightToLeftLayout is set to <code>true</code>, Windows Forms sets the <code>WS_EX_LAYOUTRTL</code> window style, and removes the <code>WS_EX_RIGHT</code> and <code>WS_EX_RTLREADING</code> styles.  </p>\n</li>\n<li><p>When <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> is set to <code>Yes</code> but RightToLeftLayout is set to <code>No</code>, Windows Forms sets the <code>WS_EX_RIGHT</code> and <code>WS_EX_RTLREADING</code> window styles.  </p>\n<p>Changing the value of this property raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayoutChanged\" data-linktype=\"relative-path\">RightToLeftLayoutChanged</a> event.  </p>\n<p>For more information about globalization issues, see <a href=\"../Topic/Best%20Practices%20for%20Developing%20World-Ready%20Applications.md\" data-linktype=\"relative-path\">Best Practices for Developing World-Ready Applications</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ShowIcon\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ShowIcon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowIcon</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowIcon { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the form displays an icon in the caption bar; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ShowIcon property contains a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Icon_\" data-linktype=\"relative-path\">Icon</a> is displayed in the caption bar of the form. If the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ControlBox_\" data-linktype=\"relative-path\">ControlBox</a> property is <code>false</code>, both the icon and control box will be suppressed.  </p>\n<p> If ShowIcon is <code>false</code> when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.  </p>\n<p> This property has no effect if <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> is set to <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a>. In that case, the form does not display an icon.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ShowInTaskbar\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ShowInTaskbar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowInTaskbar</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the form is displayed in the Windows taskbar.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowInTaskbar { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the form in the Windows taskbar at run time; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a form is parented within another form, the parented form is not displayed in the Windows taskbar.  </p>\n<p> You can use this property to prevent users from selecting your form through the Windows taskbar. For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application&#39;s main window and the Find and Replace tool window displayed in order to process searches appropriately.  </p>\n<p> You will often wish to use this property when creating a form with the <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a> style. Setting the <a class=\"xref\" href=\"system.windows.forms.formborderstyle\" data-linktype=\"relative-path\">FormBorderStyle</a> style does not alone guarantee that a window will not appear in the taskbar.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ShowInTaskbar property to make a dialog box that is not displayed in the Windows taskbar.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.ShowInTaskbar#1\">private:\n   void ShowInTaskBarEx()\n   {\n      Form^ myForm = gcnew Form;\n      myForm-&gt;Text = &quot;My Form&quot;;\n      myForm-&gt;SetBounds( 10, 10, 200, 200 );\n      myForm-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      myForm-&gt;MinimizeBox = false;\n      myForm-&gt;MaximizeBox = false;\n\n      // Do not allow form to be displayed in taskbar.\n      myForm-&gt;ShowInTaskbar = false;\n      myForm-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.ShowInTaskbar#1\">\t\tprivate void ShowInTaskBarEx()\n\t\t{\n\t\t\tForm myForm = new Form();\n\t\t\tmyForm.Text = &quot;My Form&quot;;\n\t\t\tmyForm.SetBounds(10,10,200,200);\n\t\t\tmyForm.FormBorderStyle = FormBorderStyle.FixedDialog;\n\t\t\tmyForm.MinimizeBox = false;\n\t\t\tmyForm.MaximizeBox = false;\n\t\t\t// Do not allow form to be displayed in taskbar.\n\t\t\tmyForm.ShowInTaskbar = false;\n\t\t\tmyForm.ShowDialog();\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.ShowInTaskbar#1\">    Private Sub ShowInTaskBarEx()\n        Dim myForm As New Form()\n        myForm.Text = &quot;My Form&quot;\n        myForm.SetBounds(10, 10, 200, 200)\n        myForm.FormBorderStyle = FormBorderStyle.FixedDialog\n        myForm.MinimizeBox = False\n        myForm.MaximizeBox = False\n        &#39; Do not allow form to be displayed in taskbar.\n        myForm.ShowInTaskbar = False\n        myForm.ShowDialog()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ShowWithoutActivation\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ShowWithoutActivation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowWithoutActivation</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the window will be activated when it is shown.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ShowWithoutActivation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>True</code> if the window will not be activated when it is shown; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property if you want to show a top-level window, but don&#39;t want to interrupt a user&#39;s work by taking the input focus away from the current window. This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.  </p>\n<p> Because this property is read-only, you can only change its value by overriding ShowWithoutActivation in your own form, and programming it to return <code>true</code>.  </p>\n<p> If your non-activated window needs to use UI controls, you should consider using the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls, such as <a class=\"xref\" href=\"system.windows.forms.toolstripdropdown\" data-linktype=\"relative-path\">ToolStripDropDown</a>. These controls are windowless, and will not cause a window to activate when they are selected.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Size\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Size_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Size</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Size Size { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that represents the size of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> properties individually. If you want to set the size and location of a form, you can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DesktopBounds_\" data-linktype=\"relative-path\">DesktopBounds</a> property to size and locate the form based on desktop coordinates or use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds_\" data-linktype=\"relative-path\">Bounds</a> property of the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class to set the size and location of the form based on screen coordinates.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The maximum value of this property is limited by the resolution of the screen on which the form runs. The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> On Pocket PC devices, you can create a resizable window by setting <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> to <code>None</code> and removing any <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> control. On SmartPhone devices, you can never resize a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> - it will always fill the entire screen.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The example code creates a new form that is positioned in the center of the screen with an <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Opacity_\" data-linktype=\"relative-path\">Opacity</a> property set to change the opacity level of the form. The example code also sets the Size property to provide a larger sized form than the default size of the form. This example requires that the method defined in this example is called from another form in an event handler or other method.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.Opacity#1\">private:\n   void CreateMyOpaqueForm()\n   {\n      // Create a new form.\n      Form^ form2 = gcnew Form;\n\n      // Set the text displayed in the caption.\n      form2-&gt;Text = &quot;My Form&quot;;\n\n      // Set the opacity to 75%.\n      form2-&gt;Opacity = .75;\n\n      // Size the form to be 300 pixels in height and width.\n      form2-&gt;Size = System::Drawing::Size( 300, 300 );\n\n      // Display the form in the center of the screen.\n      form2-&gt;StartPosition = FormStartPosition::CenterScreen;\n\n      // Display the form as a modal dialog box.\n      form2-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.Opacity#1\">      private void CreateMyOpaqueForm()\n      {\n         // Create a new form.\n         Form form2 = new Form();\n         // Set the text displayed in the caption.\n         form2.Text = &quot;My Form&quot;;\n         // Set the opacity to 75%.\n         form2.Opacity = .75;\n         // Size the form to be 300 pixels in height and width.\n         form2.Size = new Size(300,300);\n         // Display the form in the center of the screen.\n         form2.StartPosition = FormStartPosition.CenterScreen;\n\n         // Display the form as a modal dialog box.\n         form2.ShowDialog();\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.Opacity#1\">   Private Sub CreateMyOpaqueForm()\n      &#39; Create a new form.\n      Dim form2 As New Form()\n      &#39; Set the text displayed in the caption.\n      form2.Text = &quot;My Form&quot;\n      &#39; Set the opacity to 75%.\n      form2.Opacity = 0.75\n      &#39; Size the form to be 300 pixels in height and width.\n      form2.Size = New Size(300, 300)\n      &#39; Display the form in the center of the screen.\n      form2.StartPosition = FormStartPosition.CenterScreen\n\n      &#39; Display the form as a modal dialog box.\n      form2.ShowDialog()\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_SizeGripStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_SizeGripStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SizeGripStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the style of the size grip to display in the lower-right corner of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.sizegripstyle\" data-linktype=\"relative-path\">SizeGripStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.sizegripstyle\" data-linktype=\"relative-path\">SizeGripStyle</a> that represents the style of the size grip to display. The default is <a class=\"xref\" href=\"system.windows.forms.sizegripstyle\" data-linktype=\"relative-path\">SizeGripStyle</a></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is outside the range of valid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property enables you to determine when the sizing grip is displayed on the form. You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to hide the size grip for a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> when the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is not resizable.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.SizeGripStyle#1\">private:\n   void ShowMyDialogBox()\n   {\n      Form^ myForm = gcnew Form;\n      myForm-&gt;Text = &quot;My Form&quot;;\n      myForm-&gt;SetBounds( 20, 20, 300, 300 );\n      myForm-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n\n      // Display the form with no grip since form is not resizable.\n      myForm-&gt;SizeGripStyle = ::SizeGripStyle::Hide;\n      myForm-&gt;MinimizeBox = false;\n      myForm-&gt;MaximizeBox = false;\n      myForm-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.SizeGripStyle#1\">\t\tprivate void ShowMyDialogBox()\n\t\t{\n\t\t\tForm myForm = new Form();\n\t\t\tmyForm.Text = &quot;My Form&quot;;\n\t\t\tmyForm.SetBounds(20,20,300,300);\n\t\t\tmyForm.FormBorderStyle = FormBorderStyle.FixedDialog;\n\t\t\t\n\t\t\t// Display the form with no grip since form is not resizable.\n\t\t\tmyForm.SizeGripStyle = SizeGripStyle.Hide;\n\n\t\t\tmyForm.MinimizeBox = false;\n\t\t\tmyForm.MaximizeBox = false;\n\t\t\tmyForm.ShowDialog();\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.SizeGripStyle#1\">    Private Sub ShowMyDialogBox()\n        Dim myForm As New Form()\n        myForm.Text = &quot;My Form&quot;\n        myForm.SetBounds(20, 20, 300, 300)\n        myForm.FormBorderStyle = FormBorderStyle.FixedDialog\n\n        &#39; Display the form with no grip since form is not resizable.\n        myForm.SizeGripStyle = SizeGripStyle.Hide\n\n        myForm.MinimizeBox = False\n        myForm.MaximizeBox = False\n        myForm.ShowDialog()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_StartPosition\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_StartPosition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StartPosition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the starting position of the form at run time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.FormStartPosition StartPosition { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.formstartposition\" data-linktype=\"relative-path\">FormStartPosition</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.formstartposition\" data-linktype=\"relative-path\">FormStartPosition</a> that represents the starting position of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is outside the range of valid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property enables you to set the starting position of the form when it is displayed at run time. The formâ€™s position can be specified manually by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Location_\" data-linktype=\"relative-path\">Location</a> property or use the default location specified by Windows. You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.  </p>\n<p> This property should be set before the form is shown.  You can set this property before you call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Show_\" data-linktype=\"relative-path\">Show</a> or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method or in your form&#39;s constructor.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new instance of a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and calls the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method to display the form as a dialog box. The example sets the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_CancelButton_\" data-linktype=\"relative-path\">CancelButton</a>, and StartPosition properties to change the appearance and functionality of the form to a dialog box. The example also uses the <a class=\"xref\" href=\"system.windows.forms.form.controlcollection#System_Windows_Forms_Form_ControlCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> collection to add two <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> controls. The example uses the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property to display a help button in the caption bar of the dialog box.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Form.StartPosition Example#1\">    Public Sub CreateMyForm()\n        &#39; Create a new instance of the form.\n        Dim form1 As New Form()\n        &#39; Create two buttons to use as the accept and cancel buttons.\n        Dim button1 As New Button()\n        Dim button2 As New Button()\n        \n        &#39; Set the text of button1 to &quot;OK&quot;.\n        button1.Text = &quot;OK&quot;\n        &#39; Set the position of the button on the form.\n        button1.Location = New Point(10, 10)\n        &#39; Set the text of button2 to &quot;Cancel&quot;.\n        button2.Text = &quot;Cancel&quot;\n        &#39; Set the position of the button based on the location of button1.\n        button2.Location = New Point(button1.Left, button1.Height + button1.Top + 10)\n        &#39; Set the caption bar text of the form.   \n        form1.Text = &quot;My Dialog Box&quot;\n        &#39; Display a help button on the form.\n        form1.HelpButton = True\n        \n        &#39; Define the border style of the form to a dialog box.\n        form1.FormBorderStyle = FormBorderStyle.FixedDialog\n        &#39; Set the accept button of the form to button1.\n        form1.AcceptButton = button1\n        &#39; Set the cancel button of the form to button2.\n        form1.CancelButton = button2\n        &#39; Set the start position of the form to the center of the screen.\n        form1.StartPosition = FormStartPosition.CenterScreen\n        \n        &#39; Add button1 to the form.\n        form1.Controls.Add(button1)\n        &#39; Add button2 to the form.\n        form1.Controls.Add(button2)\n        \n        &#39; Display the form as a modal dialog box.\n        form1.ShowDialog()\n    End Sub &#39;CreateMyForm\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.StartPosition Example#1\">public:\n   void CreateMyForm()\n   {\n      // Create a new instance of the form.\n      Form^ form1 = gcnew Form;\n      // Create two buttons to use as the accept and cancel buttons.\n      Button^ button1 = gcnew Button;\n      Button^ button2 = gcnew Button;\n      \n      // Set the text of button1 to &quot;OK&quot;.\n      button1-&gt;Text = &quot;OK&quot;;\n      // Set the position of the button on the form.\n      button1-&gt;Location = Point(10,10);\n      // Set the text of button2 to &quot;Cancel&quot;.\n      button2-&gt;Text = &quot;Cancel&quot;;\n      // Set the position of the button based on the location of button1.\n      button2-&gt;Location\n         = Point( button1-&gt;Left, button1-&gt;Height + button1-&gt;Top + 10 );\n      // Set the caption bar text of the form.   \n      form1-&gt;Text = &quot;My Dialog Box&quot;;\n      // Display a help button on the form.\n      form1-&gt;HelpButton = true;\n      \n      // Define the border style of the form to a dialog box.\n      form1-&gt;FormBorderStyle = ::FormBorderStyle::FixedDialog;\n      // Set the accept button of the form to button1.\n      form1-&gt;AcceptButton = button1;\n      // Set the cancel button of the form to button2.\n      form1-&gt;CancelButton = button2;\n      // Set the start position of the form to the center of the screen.\n      form1-&gt;StartPosition = FormStartPosition::CenterScreen;\n\n      // Add button1 to the form.\n      form1-&gt;Controls-&gt;Add( button1 );\n      // Add button2 to the form.\n      form1-&gt;Controls-&gt;Add( button2 );\n      \n      // Display the form as a modal dialog box.\n      form1-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.StartPosition Example#1\">public void CreateMyForm()\n {\n    // Create a new instance of the form.\n    Form form1 = new Form();\n    // Create two buttons to use as the accept and cancel buttons.\n    Button button1 = new Button ();\n    Button button2 = new Button ();\n   \n    // Set the text of button1 to &quot;OK&quot;.\n    button1.Text = &quot;OK&quot;;\n    // Set the position of the button on the form.\n    button1.Location = new Point (10, 10);\n    // Set the text of button2 to &quot;Cancel&quot;.\n    button2.Text = &quot;Cancel&quot;;\n    // Set the position of the button based on the location of button1.\n    button2.Location\n       = new Point (button1.Left, button1.Height + button1.Top + 10);\n    // Set the caption bar text of the form.   \n    form1.Text = &quot;My Dialog Box&quot;;\n    // Display a help button on the form.\n    form1.HelpButton = true;\n \n    // Define the border style of the form to a dialog box.\n    form1.FormBorderStyle = FormBorderStyle.FixedDialog;\n    // Set the accept button of the form to button1.\n    form1.AcceptButton = button1;\n    // Set the cancel button of the form to button2.\n    form1.CancelButton = button2;\n    // Set the start position of the form to the center of the screen.\n    form1.StartPosition = FormStartPosition.CenterScreen;\n    \n    // Add button1 to the form.\n    form1.Controls.Add(button1);\n    // Add button2 to the form.\n    form1.Controls.Add(button2);\n    \n    // Display the form as a modal dialog box.\n    form1.ShowDialog();\n }\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TabIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_TabIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TabIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the tab order of the control within its container.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int TabIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> containing the index of the control within the set of controls within its container that is included in the tab order.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Forms are not included in the tab order. Setting the TabIndex property does nothing.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TabStop\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_TabStop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TabStop</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TabStop { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can give the focus to the control using the TAB key; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Text\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text associated with this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text associated with this control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TopLevel\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_TopLevel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TopLevel</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether to display the form as a top-level window.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TopLevel { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the form as a top-level window; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>A Multiple-document interface (MDI) parent form must be a top-level window.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A top-level form is a window that has no parent form, or whose parent form is the desktop window. Top-level windows are typically used as the main form in an application.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Modal_\" data-linktype=\"relative-path\">Modal</a> property to determine if a form is displayed as a modal form. If it is not the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormBorderStyle_\" data-linktype=\"relative-path\">FormBorderStyle</a> and TopLevel properties are changed to make the form non-top-level form with a tool window border.  </p>\n<pre><code class=\"lang-cpp\" name=\"Form.Modal#1\">   private:\n      void ShowMyNonModalForm()\n      {\n         Form^ myForm = gcnew Form;\n         myForm-&gt;Text = &quot;My Form&quot;;\n         myForm-&gt;SetBounds( 10, 10, 200, 200 );\n         myForm-&gt;Show();\n\n         // Determine if the form is modal.\n         if ( myForm-&gt;Modal == false )\n         {\n            // Change borderstyle and make it not a top level window.\n            myForm-&gt;FormBorderStyle = ::FormBorderStyle::FixedToolWindow;\n            myForm-&gt;TopLevel = false;\n         }\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"Form.Modal#1\">\t\tprivate void ShowMyNonModalForm()\n\t\t{\n\t\t\tForm myForm = new Form();\n\t\t\tmyForm.Text = &quot;My Form&quot;;\n\t\t\tmyForm.SetBounds(10,10,200,200);\n\n\t\t\tmyForm.Show();\n\t\t\t// Determine if the form is modal.\n\t\t\tif(myForm.Modal == false)\n\t\t\t{\n\t\t\t\t// Change borderstyle and make it not a top level window.\n\t\t\t\tmyForm.FormBorderStyle = FormBorderStyle.FixedToolWindow;\n\t\t\t\tmyForm.TopLevel = false;\n\t\t\t}\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.Modal#1\">    Private Sub ShowMyNonModalForm()\n        Dim myForm As New Form()\n        myForm.Text = &quot;My Form&quot;\n        myForm.SetBounds(10, 10, 200, 200)\n\n        myForm.Show()\n        &#39; Determine if the form is modal.\n        If myForm.Modal = False Then\n            &#39; Change borderstyle and make it not a top level window.\n            myForm.FormBorderStyle = FormBorderStyle.FixedToolWindow\n            myForm.TopLevel = False\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TopMost\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_TopMost_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TopMost</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the form should be displayed as a topmost form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TopMost { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display the form as a topmost form; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form. Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop. You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create a topmost form. The example creates two forms, one that is maximized and one that will be displayed as a topmost form. The first form, named <code>bottomForm</code>, is displayed maximized, using the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_WindowState_\" data-linktype=\"relative-path\">WindowState</a> property, to better demonstrate the abilities of the topmost form. The second form, named <code>topMostForm</code>, sets the TopMost property to <code>true</code> to display the form as a topmost form. When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form. The example requires that the method defined in the example is called from another form.  </p>\n<pre><code class=\"lang-cs\" name=\"Form.TopMost#1\">      private void CreateMyTopMostForm()\n      {\n         // Create lower form to display.\n         Form bottomForm = new Form();\n         // Display the lower form Maximized to demonstrate effect of TopMost property.\n         bottomForm.WindowState = FormWindowState.Maximized;\n         // Display the bottom form.\n         bottomForm.Show();\n         // Create the top most form.\n         Form topMostForm = new Form();\n         // Set the size of the form larger than the default size.\n         topMostForm.Size = new Size(300,300);\n         // Set the position of the top most form to center of screen.\n         topMostForm.StartPosition = FormStartPosition.CenterScreen;\n         // Display the form as top most form.\n         topMostForm.TopMost = true;\n         topMostForm.Show();\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Form.TopMost#1\">private:\n   void CreateMyTopMostForm()\n   {\n      // Create lower form to display.\n      Form^ bottomForm = gcnew Form;\n\n      // Display the lower form Maximized to demonstrate effect of TopMost property.\n      bottomForm-&gt;WindowState = FormWindowState::Maximized;\n\n      // Display the bottom form.\n      bottomForm-&gt;Show();\n\n      // Create the top most form.\n      Form^ topMostForm = gcnew Form;\n\n      // Set the size of the form larger than the default size.\n      topMostForm-&gt;Size = System::Drawing::Size( 300, 300 );\n\n      // Set the position of the top most form to center of screen.\n      topMostForm-&gt;StartPosition = FormStartPosition::CenterScreen;\n\n      // Display the form as top most form.\n      topMostForm-&gt;TopMost = true;\n      topMostForm-&gt;Show();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.TopMost#1\">   Private Sub CreateMyTopMostForm()\n      &#39; Create lower form to display.\n      Dim bottomForm As New Form()\n      &#39; Display the lower form Maximized to demonstrate effect of TopMost property.\n      bottomForm.WindowState = FormWindowState.Maximized\n      &#39; Display the bottom form.\n      bottomForm.Show()\n      &#39; Create the top most form.\n      Dim topMostForm As New Form()\n      &#39; Set the size of the form larger than the default size.\n      topMostForm.Size = New Size(300, 300)\n      &#39; Set the position of the top most form to center of screen.\n      topMostForm.StartPosition = FormStartPosition.CenterScreen\n      &#39; Display the form as top most form.\n      topMostForm.TopMost = True\n      topMostForm.Show()\n   End Sub &#39;CreateMyTopMostForm\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TransparencyKey\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_TransparencyKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransparencyKey</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color that will represent transparent areas of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color TransparencyKey { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the color to display transparently on the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the TransparencyKey property is assigned a <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a>, the areas of the form that have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> will be displayed transparently. Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area. For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it. If the color assigned to the TransparencyKey property is the same as any controls on the form, they also will be displayed transparently. For example, if you have a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control on a form that has its TransparencyKey property set to <code>SystemColors.Control</code>, the control will be displayed transparently unless the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property of the <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> control is changed to a different color.  </p>\n<p> This property is not supported when <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayout_\" data-linktype=\"relative-path\">RightToLeftLayout</a> is <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a window that has a transparent client region regardless of background color of the form. This example requires that the example method is defined within a form class.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Form.TransparencyKey Example#1\">public:\n   void InitializeMyForm()\n   {\n      this-&gt;BackColor = Color::Red;\n      // Make the background color of form display transparently.\n      this-&gt;TransparencyKey = BackColor;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.TransparencyKey Example#1\">    Public Sub InitializeMyForm()\n        BackColor = Color.Red\n        &#39; Make the background color of form display transparently.\n        TransparencyKey = BackColor\n    End Sub &#39;InitializeMyForm\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Form.TransparencyKey Example#1\">public void InitializeMyForm()\n {\n    this.BackColor = Color.Red;\n    // Make the background color of form display transparently.\n    this.TransparencyKey = BackColor;\n }\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_WindowState\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_WindowState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowState</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether form is minimized, maximized, or normal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.FormWindowState WindowState { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.formwindowstate\" data-linktype=\"relative-path\">FormWindowState</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.formwindowstate\" data-linktype=\"relative-path\">FormWindowState</a> that represents whether form is minimized, maximized, or normal. The default is <code>FormWindowState.Normal</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is outside the range of valid values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Before a form is displayed, the WindowState property is always set to <code>FormWindowState.Normal</code>, regardless of its initial setting. This is reflected in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height_\" data-linktype=\"relative-path\">Height</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left_\" data-linktype=\"relative-path\">Left</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top_\" data-linktype=\"relative-path\">Top</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width_\" data-linktype=\"relative-path\">Width</a> property settings. If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the WindowState property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the WindowStateto maximized. The code is called from the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Shown\" data-linktype=\"relative-path\">Shown</a> event handler after the form has been created.  </p>\n<pre><code class=\"lang-c#\">private void Form1_Shown(object sender, EventArgs e)  \n        {  \n            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  \n        }\n</code></pre><pre><code class=\"lang-vb\">Private  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  \n            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  \nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Activate\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Activate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activate()</div>        \r\n          </div>\r\n    \r\n            <p>Activates the form and gives it focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Activate ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application. The form must be visible for this method to have any effect. To determine the active form in an application, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ActiveForm_\" data-linktype=\"relative-path\">ActiveForm</a> property or the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ActiveMdiChild_\" data-linktype=\"relative-path\">ActiveMdiChild</a> property if your forms are in a Multiple-document interface (MDI) application.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> and Activate members. To run the example, paste the following code in a form called <code>Form1</code> containing a button called <code>Button1</code> and two <code>Label</code> controls called <code>Label1</code> and <code>Label2</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormsActivate#1\">\tstatic int x = 200;\n\tstatic int y = 200;\n\n\tprivate void Button1_Click(System.Object sender, \n\t\tSystem.EventArgs e)\n\t{\n\t\t// Create a new Form1 and set its Visible property to true.\n\t\tForm1 form2 = new Form1();\n\t\tform2.Visible = true;\n\n\t\t// Set the new form&#39;s desktop location so it  \n\t\t// appears below and to the right of the current form.\n\t\tform2.SetDesktopLocation(x, y);\n\t\tx += 30;\n\t\ty += 30;\n\n\t\t// Keep the current form active by calling the Activate\n\t\t// method.\n\t\tthis.Activate();\n\t\tthis.Button1.Enabled = false;\n\t}\n\t\n\n\n\t// Updates the label text to reflect the current values of x \n\t// and y, which was were incremented in the Button1 control&#39;s \n\t// click event.\n\tprivate void Form1_Activated(object sender, System.EventArgs e)\n\t{\n\t\tLabel1.Text = &quot;x: &quot;+x+&quot; y: &quot;+y;\n\t\tLabel2.Text = &quot;Number of forms currently open: &quot;+count;\n\t}\n\n\tstatic int count = 0;\n\n\tprivate void Form1_Closed(object sender, System.EventArgs e)\n\t{\n\t\tcount -= 1;\n\t}\n\n\tprivate void Form1_Load(object sender, System.EventArgs e)\n\t{\n\t\tcount += 1;\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormsActivate#1\">    Shared x As Integer = 200\n    Shared y As Integer = 200\n\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Create a new Form1 and set its Visible property to true.\n        Dim form2 As New Form1\n        form2.Visible = True\n\n        &#39; Set the new form&#39;s desktop location so it appears below and \n        &#39; to the right of the current form.\n        form2.SetDesktopLocation(x, y)\n        x += 30\n        y += 30\n\n        &#39; Keep the current form active by calling the Activate method.\n        Me.Activate()\n        Me.Button1.Enabled = False\n    End Sub\n\n\n\n    &#39; Updates the label text to reflect the current values of x and y, \n    &#39; which was were incremented in the Button1 control&#39;s click event.\n    Private Sub Form1_Activated(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Activated\n        Label1.Text = &quot;x: &quot; &amp; x &amp; &quot; y: &quot; &amp; y\n        Label2.Text = &quot;Number of forms currently open: &quot; &amp; count\n    End Sub\n\n    Shared count As Integer = 0\n\n    Private Sub Form1_Closed(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Closed\n        count -= 1\n    End Sub\n\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n        count += 1\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormsActivate#1\">   static int x = 200;\n   static int y = 200;\n   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      \n      // Create a new Form1 and set its Visible property to true.\n      Form1^ form2 = gcnew Form1;\n      form2-&gt;Visible = true;\n      \n      // Set the new form&#39;s desktop location so it  \n      // appears below and to the right of the current form.\n      form2-&gt;SetDesktopLocation( x, y );\n      x += 30;\n      y += 30;\n      \n      // Keep the current form active by calling the Activate\n      // method.\n      this-&gt;Activate();\n      this-&gt;Button1-&gt;Enabled = false;\n   }\n\n\n   // Updates the label text to reflect the current values of x \n   // and y, which was were incremented in the Button1 control&#39;s \n   // click event.\n   void Form1_Activated( Object^ sender, System::EventArgs^ e )\n   {\n      Label1-&gt;Text = String::Format( &quot;x: {0} y: {1}&quot;, x, y );\n      Label2-&gt;Text = String::Format( &quot;Number of forms currently open: {0}&quot;, count );\n   }\n\n   static int count = 0;\n   void Form1_Closed( Object^ sender, System::EventArgs^ e )\n   {\n      count -= 1;\n   }\n\n   void Form1_Load( Object^ sender, System::EventArgs^ e )\n   {\n      count += 1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ActivateMdiChild_System_Windows_Forms_Form_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ActivateMdiChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ActivateMdiChild(Form)</div>        \r\n          </div>\r\n    \r\n            <p>Activates the MDI child of a form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ActivateMdiChild (System.Windows.Forms.Form form);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>form</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The child form to activate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>form</code> parameter is already the active MDI child form, then the ActivateMdiChild method simply returns. If <code>form</code> is not <code>null</code>, then it is set to be the active MDI child form.  </p>\n<p> Whether the <code>form</code> parameter is <code>null</code> or not, ActivateMdiChild raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiChildActivate\" data-linktype=\"relative-path\">MdiChildActivate</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AddOwnedForm_System_Windows_Forms_Form_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AddOwnedForm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddOwnedForm(Form)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an owned form to this form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddOwnedForm (System.Windows.Forms.Form ownedForm);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownedForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> that this form will own.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The form assigned to the owner form remains owned until the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RemoveOwnedForm_\" data-linktype=\"relative-path\">RemoveOwnedForm</a> method is called. You can also make a form owned by another by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Owner_\" data-linktype=\"relative-path\">Owner</a> property with a reference to its owner form.  </p>\n<p> When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named <code>Form2</code> that is owned by a form named <code>Form1</code>. If <code>Form1</code> is closed or minimized, <code>Form2</code> is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiChildren_\" data-linktype=\"relative-path\">MdiChildren</a> property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AddOwnedForm method to display a form as an owned form of another form. Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it. The example requires that the code in the example is called from another event or method of a form.  </p>\n<pre><code class=\"lang-cs\" name=\"Form.AddOwnedForm#1\">      private void ShowMyOwnedForm()\n      {\n         // Create an instance of the form to be owned.\n         Form ownedForm = new Form();\n         // Set the text of the form to identify it is an owned form.\n         ownedForm.Text = &quot;Owned Form&quot;;\n         // Add ownedForm to array of owned forms.\n         this.AddOwnedForm(ownedForm);\n\n         // Show the owned form.\n         ownedForm.Show();\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Form.AddOwnedForm#1\">private:\n   void ShowMyOwnedForm()\n   {\n      // Create an instance of the form to be owned.\n      Form^ ownedForm = gcnew Form;\n\n      // Set the text of the form to identify it is an owned form.\n      ownedForm-&gt;Text = &quot;Owned Form&quot;;\n\n      // Add ownedForm to array of owned forms.\n      this-&gt;AddOwnedForm( ownedForm );\n\n      // Show the owned form.\n      ownedForm-&gt;Show();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.AddOwnedForm#1\">   Private Sub ShowMyOwnedForm()\n      &#39; Create an instance of the form to be owned.\n      Dim ownedForm As New Form()\n      &#39; Set the text of the form to identify it is an owned form.\n      ownedForm.Text = &quot;Owned Form&quot;\n      &#39; Add ownedForm to array of owned forms.\n      Me.AddOwnedForm(ownedForm)\n\n      &#39; Show the owned form.\n      ownedForm.Show()\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AdjustFormScrollbars_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_AdjustFormScrollbars_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdjustFormScrollbars(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the scroll bars on the container based on the current control positions and the control currently selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void AdjustFormScrollbars (bool displayScrollbars);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayScrollbars</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to show the scroll bars; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ApplyAutoScaling\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ApplyAutoScaling_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplyAutoScaling()</div>        \r\n          </div>\r\n    \r\n            <p>Resizes the form according to the current value of the <span class=\"xref\">stem.Windows.Forms.Form.AutoScaleBaseSize*</span> property and the size of the current font.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ApplyAutoScaling ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method determines the form size using the value of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoScaleBaseSize_\" data-linktype=\"relative-path\">AutoScaleBaseSize</a> property and the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> value returned by the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_GetAutoScaleSize_\" data-linktype=\"relative-path\">GetAutoScaleSize</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_CenterToParent\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_CenterToParent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CenterToParent()</div>        \r\n          </div>\r\n    \r\n            <p>Centers the position of the form within the bounds of the parent form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void CenterToParent ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not call the CenterToParent method directly from your code. Instead, set the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> property to <a class=\"xref\" href=\"system.windows.forms.formstartposition\" data-linktype=\"relative-path\">FormStartPosition</a>.  </p>\n<p> If the form or dialog is top-level, then CenterToParent centers the form with respect to the screen or desktop.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_CenterToScreen\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_CenterToScreen_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CenterToScreen()</div>        \r\n          </div>\r\n    \r\n            <p>Centers the form on the current screen.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void CenterToScreen ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not call this directly from your code. Instead, set the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_StartPosition_\" data-linktype=\"relative-path\">StartPosition</a> property to <a class=\"xref\" href=\"system.windows.forms.formstartposition\" data-linktype=\"relative-path\">FormStartPosition</a>.  </p>\n<p> The CenterToScreen method uses the following priority list to determine the screen used to center the form:  </p>\n<ol>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Owner_\" data-linktype=\"relative-path\">Owner</a> property of the form.  </p>\n</li>\n<li><p>The HWND owner of the form.  </p>\n</li>\n<li><p>The screen that currently has the mouse cursor.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Close\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The form was closed while a handle was being created.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>You cannot call this method from the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> event when <span class=\"xref\">stem.Windows.Forms.Form.WindowState*</span> is set to <a class=\"xref\" href=\"system.windows.forms.formwindowstate\" data-linktype=\"relative-path\">FormWindowState</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a form is closed, all resources created within the object are closed and the form is disposed. You can prevent the closing of a form at run time by handling the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event and setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> passed as a parameter to your event handler. If the form you are closing is the startup form of your application, your application ends.  </p>\n<p> The two conditions when a form is not disposed on <code>Close</code> is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a>. In these cases, you will need to call <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Dispose_\" data-linktype=\"relative-path\">Dispose</a> manually to mark all of the form&#39;s controls for garbage collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the Close method is called on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> displayed as a modeless window, you cannot call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show_\" data-linktype=\"relative-path\">Show</a> method to make the form visible, because the form&#39;s resources have already been released. To hide a form and then make it visible, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide_\" data-linktype=\"relative-path\">Hide</a> method.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Prior to the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 2.0, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">System.Windows.Forms.Form.Closed</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">System.Windows.Forms.Form.Closing</a> events are not raised when the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the Close method for each open form individually before calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_CreateControlsInstance\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_CreateControlsInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateControlsInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new instance of the control collection for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control+ControlCollection</a></div>\r\n                  </div>\r\n                  <p>A new instance of <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control+ControlCollection</a> assigned to the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_CreateHandle\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_CreateHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateHandle()</div>        \r\n          </div>\r\n    \r\n            <p>Creates the handle for the form. If a derived class overrides this function, it must call the base implementation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CreateHandle ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>A handle for this <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> has already been created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_DefWndProc_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_DefWndProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefWndProc(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the specified message to the default window procedure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void DefWndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Windows <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Disposes of the resources (other than memory) used by the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> references. This method invokes the <code>Dispose</code> method of each referenced object.  </p>\n<p> Dispose will be called automatically if the form is shown using the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Show_\" data-linktype=\"relative-path\">Show</a> method. If another method such as <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> is used, or the form is never shown at all, you must call Dispose yourself within your application.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_GetAutoScaleSize_System_Drawing_Font_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_GetAutoScaleSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAutoScaleSize(Font)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the size when autoscaling the form based on a specified font.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>font</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> representing the font to determine the autoscaled base size of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a> representing the autoscaled size of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> The GetAutoScaleSize method is obsolete in.NET Framework version 2.0. This member has been retained for backward compatibility. For more information about automatic scaling, see <a href=\"../Topic/Automatic%20Scaling%20in%20Windows%20Forms.md\" data-linktype=\"relative-path\">Automatic Scaling in Windows Forms</a>.  </p>\n</div>\n<p> You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form. If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AutoScaleBaseSize_\" data-linktype=\"relative-path\">AutoScaleBaseSize</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_GetScaledBounds_System_Drawing_Rectangle_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_GetScaledBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetScaledBounds(Rectangle,SizeF,BoundsSpecified)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the bounds within which the control is scaled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that specifies the area for which to retrieve the display bounds.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>factor</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height and width of the control&#39;s bounds.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>specified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the values of <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> that specifies the bounds of the control to use when defining its size and position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> representing the bounds within which the control is scaled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_LayoutMdi_System_Windows_Forms_MdiLayout_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_LayoutMdi_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LayoutMdi(MdiLayout)</div>        \r\n          </div>\r\n    \r\n            <p>Arranges the multiple-document interface (MDI) child forms within the MDI parent form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void LayoutMdi (System.Windows.Forms.MdiLayout value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mdilayout\" data-linktype=\"relative-path\">MdiLayout</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.mdilayout\" data-linktype=\"relative-path\">MdiLayout</a> values that defines the layout of MDI child forms.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms. MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the event handlers for the menu items of a Window menu in an MDI application&#39;s parent form. Each event handler makes calls to the LayoutMdi method to arrange any child forms that are currently open in the application.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.LayoutMdi Example#1\">private void HorizontallyTileMyWindows (object sender, System.EventArgs e)\n {\n    // Tile all child forms horizontally.\n    this.LayoutMdi( MdiLayout.TileHorizontal );\n }\n \n private void VerticallyTileMyWindows (object sender, System.EventArgs e)\n {\n    // Tile all child forms vertically.\n    this.LayoutMdi( MdiLayout.TileVertical );\n }\n \n private void CascadeMyWindows (object sender, System.EventArgs e)\n {\n    // Cascade all MDI child windows.\n    this.LayoutMdi( MdiLayout.Cascade );\n }\n    \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.LayoutMdi Example#1\">private:\n   void HorizontallyTileMyWindows( Object^ sender, System::EventArgs^ e )\n   {\n      // Tile all child forms horizontally.\n      this-&gt;LayoutMdi( MdiLayout::TileHorizontal );\n   }\n\n   void VerticallyTileMyWindows( Object^ sender, System::EventArgs^ e )\n   {\n      // Tile all child forms vertically.\n      this-&gt;LayoutMdi( MdiLayout::TileVertical );\n   }\n\n   void CascadeMyWindows( Object^ sender, System::EventArgs^ e )\n   {\n      // Cascade all MDI child windows.\n      this-&gt;LayoutMdi( MdiLayout::Cascade );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.LayoutMdi Example#1\">    Private Sub HorizontallyTileMyWindows(sender As Object, e As System.EventArgs)\n        &#39; Tile all child forms horizontally.\n        Me.LayoutMdi(MdiLayout.TileHorizontal)\n    End Sub &#39;HorizontallyTileMyWindows\n    \n    \n    Private Sub VerticallyTileMyWindows(sender As Object, e As System.EventArgs)\n        &#39; Tile all child forms vertically.\n        Me.LayoutMdi(MdiLayout.TileVertical)\n    End Sub &#39;VerticallyTileMyWindows\n    \n    \n    Private Sub CascadeMyWindows(sender As Object, e As System.EventArgs)\n        &#39; Cascade all MDI child windows.\n        Me.LayoutMdi(MdiLayout.Cascade)\n    End Sub &#39;CascadeMyWindows\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnActivated_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnActivated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnActivated(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnActivated (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnActivated method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnBackgroundImageChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnBackgroundImageChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBackgroundImageChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnBackgroundImageChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBackgroundImageChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnBackgroundImageLayoutChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnBackgroundImageLayoutChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBackgroundImageLayoutChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageLayoutChanged\" data-linktype=\"relative-path\">BackgroundImageLayoutChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnBackgroundImageLayoutChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBackgroundImageLayoutChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnClosed_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnClosed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnClosed(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnClosed (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> The OnClosed method is obsolete in the .NET Framework version 2.0; use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnFormClosed_\" data-linktype=\"relative-path\">OnFormClosed</a> method instead.  </p>\n</div>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnFormClosed_\" data-linktype=\"relative-path\">OnFormClosed</a> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The OnClosed and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnClosing_\" data-linktype=\"relative-path\">OnClosing</a> methods are not called when the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method for each open form individually before calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the OnClosed method in a class derived from <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> .  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.PointsAndSizes#6\">public class myForm:\n    Form\n\n{\n    protected override void OnClosed(EventArgs e)\n    {\n        MessageBox.Show(&quot;The form is now closing.&quot;, \n            &quot;Close Warning&quot;, MessageBoxButtons.OK, MessageBoxIcon.Warning);\n        base.OnClosed(e);\n    }\n\n    public myForm() : base()\n    {        \n    }\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.PointsAndSizes#6\">public ref class myForm: public Form\n{\nprotected:\n   virtual void OnClosed( EventArgs^ e ) override\n   {\n      MessageBox::Show( &quot;The form is now closing.&quot;, &quot;Close Warning&quot;, MessageBoxButtons::OK, MessageBoxIcon::Warning );\n      Form::OnClosed( e );\n   }\n\npublic:\n   myForm()\n      : Form()\n   {}\n\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.PointsAndSizes#6\">Public Class myForm\n    Inherits Form\n\n    Protected Overrides Sub OnClosed(ByVal e As EventArgs)\n        MessageBox.Show(&quot;The form is now closing.&quot;, &quot;Close Warning&quot;, _\n            MessageBoxButtons.OK, MessageBoxIcon.Warning)\n        MyBase.OnClosed(e)\n    End Sub\n\n    Public Sub New()\n        MyBase.New()\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnClosing_System_ComponentModel_CancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnClosing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnClosing(CancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> The OnClosing method is obsolete in the .NET Framework version 2.0; use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnFormClosing_\" data-linktype=\"relative-path\">OnFormClosing</a> method instead.  </p>\n</div>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnClosing method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnClosed_\" data-linktype=\"relative-path\">OnClosed</a> and OnClosing methods are not called when the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method for each open form individually before calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> to test if the text in a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> has changed. If it has, the user is asked whether to save the changes to a file.  </p>\n<pre><code class=\"lang-cs\" name=\"Form.Closing#1\">      private void Form1_Closing(object sender, System.ComponentModel.CancelEventArgs e)\n      {\n         // Determine if text has changed in the textbox by comparing to original text.\n         if (textBox1.Text != strMyOriginalText)\n         {\n            // Display a MsgBox asking the user to save changes or abort.\n            if(MessageBox.Show(&quot;Do you want to save changes to your text?&quot;, &quot;My Application&quot;,\n               MessageBoxButtons.YesNo) ==  DialogResult.Yes)\n            {\n               // Cancel the Closing event from closing the form.\n               e.Cancel = true;\n               // Call method to save file...\n            }\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.Closing#1\">   Private Sub Form1_Closing(sender As Object, e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing\n      &#39; Determine if text has changed in the textbox by comparing to original text.\n      If textBox1.Text &lt;&gt; strMyOriginalText Then\n         &#39; Display a MsgBox asking the user to save changes or abort.\n         If MessageBox.Show(&quot;Do you want to save changes to your text?&quot;, &quot;My Application&quot;, MessageBoxButtons.YesNo) = DialogResult.Yes Then\n            &#39; Cancel the Closing event from closing the form.\n            e.Cancel = True\n         End If &#39; Call method to save file...\n      End If\n   End Sub &#39;Form1_Closing\nEnd Class &#39;Form1\n</code></pre><pre><code class=\"lang-cpp\" name=\"Form.Closing#1\">private:\n   void Form1_Closing( Object^ /*sender*/, System::ComponentModel::CancelEventArgs^ e )\n   {\n      // Determine if text has changed in the textbox by comparing to original text.\n      if ( textBox1-&gt;Text != strMyOriginalText )\n      {\n         // Display a MsgBox asking the user to save changes or abort.\n         if ( MessageBox::Show( &quot;Do you want to save changes to your text?&quot;, &quot;My Application&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::Yes )\n         {\n            // Cancel the Closing event from closing the form.\n            e-&gt;Cancel = true;\n\n            // Call method to save file...\n         }\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnCreateControl\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnCreateControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCreateControl()</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <code>CreateControl</code> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnCreateControl ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnDeactivate_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnDeactivate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDeactivate(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Deactivate\" data-linktype=\"relative-path\">Deactivate</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDeactivate (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDeactivate method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnEnabledChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnEnabledChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEnabledChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnEnabledChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnEnter_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEnter(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnEnter (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnFontChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnFontChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFontChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnFontChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnFormClosed_System_Windows_Forms_FormClosedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnFormClosed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFormClosed(FormClosedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosed\" data-linktype=\"relative-path\">FormClosed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.formclosedeventargs\" data-linktype=\"relative-path\">FormClosedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.formclosedeventargs\" data-linktype=\"relative-path\">FormClosedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_OnFormClosing_\" data-linktype=\"relative-path\">OnFormClosing</a> method removes the current form from the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_OpenForms_\" data-linktype=\"relative-path\">OpenForms</a> collection of the associated <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a>.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnFormClosed method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnFormClosing_System_Windows_Forms_FormClosingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnFormClosing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFormClosing(FormClosingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosing\" data-linktype=\"relative-path\">FormClosing</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.formclosingeventargs\" data-linktype=\"relative-path\">FormClosingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.formclosingeventargs\" data-linktype=\"relative-path\">FormClosingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnFormClosing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnHandleCreated_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnHandleCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleCreated(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleCreated (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnHandleDestroyed_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnHandleDestroyed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleDestroyed(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleDestroyed (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnHelpButtonClicked_System_ComponentModel_CancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnHelpButtonClicked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHelpButtonClicked(CancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButtonClicked\" data-linktype=\"relative-path\">HelpButtonClicked</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnHelpButtonClicked method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnInputLanguageChanged_System_Windows_Forms_InputLanguageChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnInputLanguageChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInputLanguageChanged(InputLanguageChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_InputLanguageChanged\" data-linktype=\"relative-path\">InputLanguageChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.inputlanguagechangedeventargs\" data-linktype=\"relative-path\">InputLanguageChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.inputlanguagechangedeventargs\" data-linktype=\"relative-path\">InputLanguageChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnInputLanguageChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnInputLanguageChanging_System_Windows_Forms_InputLanguageChangingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnInputLanguageChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInputLanguageChanging(InputLanguageChangingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_InputLanguageChanging\" data-linktype=\"relative-path\">InputLanguageChanging</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.inputlanguagechangingeventargs\" data-linktype=\"relative-path\">InputLanguageChangingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.inputlanguagechangingeventargs\" data-linktype=\"relative-path\">InputLanguageChangingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnInputLanguageChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnLayout_System_Windows_Forms_LayoutEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLayout(LayoutEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>levent</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnLoad_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnLoad_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLoad(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnLoad (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnLoad method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnMaximizedBoundsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnMaximizedBoundsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMaximizedBoundsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximizedBoundsChanged\" data-linktype=\"relative-path\">MaximizedBoundsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMaximizedBoundsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMaximizedBoundsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnMaximumSizeChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnMaximumSizeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMaximumSizeChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MaximumSizeChanged\" data-linktype=\"relative-path\">MaximumSizeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMaximumSizeChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMaximumSizeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnMdiChildActivate_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnMdiChildActivate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMdiChildActivate(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MdiChildActivate\" data-linktype=\"relative-path\">MdiChildActivate</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMdiChildActivate (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMdiChildActivate method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnMenuComplete_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnMenuComplete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMenuComplete(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MenuComplete\" data-linktype=\"relative-path\">MenuComplete</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMenuComplete (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMenuComplete method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnMenuStart_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnMenuStart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMenuStart(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MenuStart\" data-linktype=\"relative-path\">MenuStart</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMenuStart (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMenuStart method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnMinimumSizeChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnMinimumSizeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMinimumSizeChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_MinimumSizeChanged\" data-linktype=\"relative-path\">MinimumSizeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMinimumSizeChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMinimumSizeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnPaint_System_Windows_Forms_PaintEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnPaint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPaint(PaintEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnResize_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnResize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnResize(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnResize (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnResizeBegin_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnResizeBegin_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnResizeBegin(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeBegin\" data-linktype=\"relative-path\">ResizeBegin</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnResizeBegin (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeBegin\" data-linktype=\"relative-path\">ResizeBegin</a> event will only be raised if the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanRaiseEvents_\" data-linktype=\"relative-path\">CanRaiseEvents</a> property is set to <code>true</code>.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnResizeBegin method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnResizeEnd_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnResizeEnd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnResizeEnd(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnResizeEnd (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> event will only be raised if the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanRaiseEvents_\" data-linktype=\"relative-path\">CanRaiseEvents</a> property is set to <code>true</code>.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnResizeEnd method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnRightToLeftLayoutChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnRightToLeftLayoutChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRightToLeftLayoutChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayoutChanged\" data-linktype=\"relative-path\">RightToLeftLayoutChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRightToLeftLayoutChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the current form or one of its parents is disposing of resources, the OnRightToLeftLayoutChanged method will return without performing any action. If the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> property of the form has a value of <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a>, then the handles of the form and its child controls will be recreated through calls to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle_\" data-linktype=\"relative-path\">RecreateHandle</a> method.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnRightToLeftLayoutChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnShown_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnShown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnShown(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Shown\" data-linktype=\"relative-path\">Shown</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnShown (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Shown\" data-linktype=\"relative-path\">Shown</a> event occurs whenever the form is first shown.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnShown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_StyleChanged\" data-linktype=\"relative-path\">StyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnTextChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnTextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnTextChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TextChanged\" data-linktype=\"relative-path\">TextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnTextChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_OnVisibleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_OnVisibleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnVisibleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnVisibleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnVisibleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ProcessCmdKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessCmdKey(Message,Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a command key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>msg</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the Win32 message to process.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the keystroke was processed and consumed by the control; otherwise, <code>false</code> to allow further processing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ProcessCmdKey method overrides the base  </p>\n<p> <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ProcessCmdKey_\" data-linktype=\"relative-path\">ProcessCmdKey</a> implementation to provide additional handling of main menu command keys and MDI accelerators.  </p>\n<p> For information about trapping keystrokes, see &quot;How to trap keystrokes in controls by using Visual C#&quot; and &quot;How to trap keystrokes in .NET controls by using Visual Basic .NET&quot; in the Microsoft Knowledge Base at <a href=\"http://support.microsoft.com\" data-linktype=\"external\">http://support.microsoft.com</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ProcessDialogChar_System_Char_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ProcessDialogChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDialogChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a dialog character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessDialogChar (char charCode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the character was processed by the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ProcessDialogKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ProcessDialogKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDialogKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a dialog box key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the keystroke was processed and consumed by the control; otherwise, <code>false</code> to allow further processing.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ProcessDialogKey method overrides the base <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ProcessDialogKey_\" data-linktype=\"relative-path\">ProcessDialogKey</a> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes. The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ProcessKeyPreview_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ProcessKeyPreview_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessKeyPreview(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Previews a keyboard message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message was processed by the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ProcessMnemonic_System_Char_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ProcessMnemonic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessMnemonic(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a mnemonic character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessMnemonic (char charCode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the character was processed as a mnemonic by the control; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ProcessTabKey_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ProcessTabKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessTabKey(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Selects the next available control and makes it the active control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessTabKey (bool forward);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>forward</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to cycle forward through the controls in the ContainerControl; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a control is selected; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_RemoveOwnedForm_System_Windows_Forms_Form_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_RemoveOwnedForm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveOwnedForm(Form)</div>        \r\n          </div>\r\n    \r\n            <p>Removes an owned form from this form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ownedForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> representing the form to remove from the list of owned forms for this form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The form assigned to the owner form remains owned until the RemoveOwnedForm method is called. In addition to removing the owned form from the list of owned form, this method also sets the owner form to <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ScaleControl_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ScaleControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleControl(SizeF,BoundsSpecified)</div>        \r\n          </div>\r\n    \r\n            <p>Scales the location, size, padding, and margin of a control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>factor</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.sizef\" data-linktype=\"relative-path\">SizeF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The factor by which the height and width of the control are scaled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>specified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> value that specifies the bounds of the control to use when defining its size and position.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ScaleCore_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ScaleCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScaleCore(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Performs scaling of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void ScaleCore (float x, float y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Percentage to scale the form horizontally</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Percentage to scale the form vertically</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Select_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Select_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select(Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Selects this form, and optionally selects the next or previous control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Select (bool directed, bool forward);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>directed</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If set to true that the active control is changed</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>forward</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If directed is true, then this controls the direction in which focus is moved. If this is <code>true</code>, then the next control is selected; otherwise, the previous control is selected.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_SetBoundsCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</div>        \r\n          </div>\r\n    \r\n            <p>Performs the work of setting the specified bounds of this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>specified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_SetClientSizeCore_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_SetClientSizeCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetClientSizeCore(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void SetClientSizeCore (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Requested width of the client region.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Requested height of the client region.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_SetDesktopBounds_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_SetDesktopBounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetDesktopBounds(Int32,Int32,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the bounds of the form in desktop coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetDesktopBounds (int x, int y, int width, int height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the form&#39;s location.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the form&#39;s location.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The width of the form.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The height of the form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to set the position and size of your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the SetDesktopBounds method. To run this example, paste the following code in a form that contains a button named <code>Button2</code>. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormExample#2\">\tprivate void Button2_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t\n\t\tfor(int i = 0; i &lt;= 20; i++)\n\t\t{\n\t\t\t// With each loop through the code, the form&#39;s \n\t\t\t// desktop location is adjusted right and down\n\t\t\t//  by 10 pixels and its height and width are each\n\t\t\t// decreased by 10 pixels. \n\t\t\tthis.SetDesktopBounds(this.Location.X+10, \n\t\t\t\tthis.Location.Y+10, this.Width-10, this.Height-10);\n\n\t\t\t// Call Sleep to show the form gradually shrinking.\n\t\t\tSystem.Threading.Thread.Sleep(50);\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormExample#2\">    Private Sub Button2_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button2.Click\n        Dim i As Integer\n        For i = 0 To 20\n            &#39; With each loop through the code, the form&#39;s desktop location is \n            &#39; adjusted right and down by 10 pixels and its height and width \n            &#39; are each decreased by 10 pixels. \n            Me.SetDesktopBounds(Me.Location.X + 10, Me.Location.Y + 10, _\n                Me.Width - 10, Me.Height - 10)\n\n            &#39; Call Sleep to show the form gradually shrinking.\n            System.Threading.Thread.Sleep(50)\n        Next\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormExample#2\">   void Button2_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      for ( int i = 0; i &lt;= 20; i++ )\n      {\n         \n         // With each loop through the code, the form&#39;s \n         // desktop location is adjusted right and down\n         //  by 10 pixels and its height and width are each\n         // decreased by 10 pixels. \n         this-&gt;SetDesktopBounds( this-&gt;Location.X + 10, this-&gt;Location.Y + 10, this-&gt;Width - 10, this-&gt;Height - 10 );\n         \n         // Call Sleep to show the form gradually shrinking.\n         System::Threading::Thread::Sleep( 50 );\n\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_SetDesktopLocation_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_SetDesktopLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetDesktopLocation(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the location of the form in desktop coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetDesktopLocation (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the form&#39;s location.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the form&#39;s location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to position your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop. This method is intended to be used primarily for top-level forms; use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_LayoutMdi_\" data-linktype=\"relative-path\">LayoutMdi</a> method to position multiple-document interface (MDI) child forms.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SetDesktopLocation, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> members. To run the example, paste the following code in a form called <code>Form1</code> containing a button called <code>Button1</code> and two <code>Label</code> controls called <code>Label1</code> and <code>Label2</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormsActivate#1\">\tstatic int x = 200;\n\tstatic int y = 200;\n\n\tprivate void Button1_Click(System.Object sender, \n\t\tSystem.EventArgs e)\n\t{\n\t\t// Create a new Form1 and set its Visible property to true.\n\t\tForm1 form2 = new Form1();\n\t\tform2.Visible = true;\n\n\t\t// Set the new form&#39;s desktop location so it  \n\t\t// appears below and to the right of the current form.\n\t\tform2.SetDesktopLocation(x, y);\n\t\tx += 30;\n\t\ty += 30;\n\n\t\t// Keep the current form active by calling the Activate\n\t\t// method.\n\t\tthis.Activate();\n\t\tthis.Button1.Enabled = false;\n\t}\n\t\n\n\n\t// Updates the label text to reflect the current values of x \n\t// and y, which was were incremented in the Button1 control&#39;s \n\t// click event.\n\tprivate void Form1_Activated(object sender, System.EventArgs e)\n\t{\n\t\tLabel1.Text = &quot;x: &quot;+x+&quot; y: &quot;+y;\n\t\tLabel2.Text = &quot;Number of forms currently open: &quot;+count;\n\t}\n\n\tstatic int count = 0;\n\n\tprivate void Form1_Closed(object sender, System.EventArgs e)\n\t{\n\t\tcount -= 1;\n\t}\n\n\tprivate void Form1_Load(object sender, System.EventArgs e)\n\t{\n\t\tcount += 1;\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormsActivate#1\">    Shared x As Integer = 200\n    Shared y As Integer = 200\n\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Create a new Form1 and set its Visible property to true.\n        Dim form2 As New Form1\n        form2.Visible = True\n\n        &#39; Set the new form&#39;s desktop location so it appears below and \n        &#39; to the right of the current form.\n        form2.SetDesktopLocation(x, y)\n        x += 30\n        y += 30\n\n        &#39; Keep the current form active by calling the Activate method.\n        Me.Activate()\n        Me.Button1.Enabled = False\n    End Sub\n\n\n\n    &#39; Updates the label text to reflect the current values of x and y, \n    &#39; which was were incremented in the Button1 control&#39;s click event.\n    Private Sub Form1_Activated(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Activated\n        Label1.Text = &quot;x: &quot; &amp; x &amp; &quot; y: &quot; &amp; y\n        Label2.Text = &quot;Number of forms currently open: &quot; &amp; count\n    End Sub\n\n    Shared count As Integer = 0\n\n    Private Sub Form1_Closed(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Closed\n        count -= 1\n    End Sub\n\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n        count += 1\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormsActivate#1\">   static int x = 200;\n   static int y = 200;\n   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      \n      // Create a new Form1 and set its Visible property to true.\n      Form1^ form2 = gcnew Form1;\n      form2-&gt;Visible = true;\n      \n      // Set the new form&#39;s desktop location so it  \n      // appears below and to the right of the current form.\n      form2-&gt;SetDesktopLocation( x, y );\n      x += 30;\n      y += 30;\n      \n      // Keep the current form active by calling the Activate\n      // method.\n      this-&gt;Activate();\n      this-&gt;Button1-&gt;Enabled = false;\n   }\n\n\n   // Updates the label text to reflect the current values of x \n   // and y, which was were incremented in the Button1 control&#39;s \n   // click event.\n   void Form1_Activated( Object^ sender, System::EventArgs^ e )\n   {\n      Label1-&gt;Text = String::Format( &quot;x: {0} y: {1}&quot;, x, y );\n      Label2-&gt;Text = String::Format( &quot;Number of forms currently open: {0}&quot;, count );\n   }\n\n   static int count = 0;\n   void Form1_Closed( Object^ sender, System::EventArgs^ e )\n   {\n      count -= 1;\n   }\n\n   void Form1_Load( Object^ sender, System::EventArgs^ e )\n   {\n      count += 1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_SetVisibleCore_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_SetVisibleCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetVisibleCore(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the control to the specified visible state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void SetVisibleCore (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to make the control visible; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Show_System_Windows_Forms_IWin32Window_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_Show_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Show(IWin32Window)</div>        \r\n          </div>\r\n    \r\n            <p>Shows the form with the specified owner to the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Show (System.Windows.Forms.IWin32Window owner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>owner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.iwin32window\" data-linktype=\"relative-path\">IWin32Window</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Any object that implements <a class=\"xref\" href=\"system.windows.forms.iwin32window\" data-linktype=\"relative-path\">IWin32Window</a> and represents the top-level window that will own this form.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The form being shown is already visible.  </p>\n<p> -or-  </p>\n<p> The form specified in the <code>owner</code> parameter is the same as the form being shown.  </p>\n<p> -or-  </p>\n<p> The form being shown is disabled.  </p>\n<p> -or-  </p>\n<p> The form being shown is not a top-level window.  </p>\n<p> -or-  </p>\n<p> The form being shown as a dialog box is already a modal form.  </p>\n<p> -or-  </p>\n<p> The current process is not running in user interactive mode (for more information, see <span class=\"xref\">stem.Windows.Forms.SystemInformation.UserInteractive*</span>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to display a non-modal form. When you use this method, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Owner_\" data-linktype=\"relative-path\">Owner</a> property of the form is set to <code>owner</code>. The non-modal form can use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Owner_\" data-linktype=\"relative-path\">Owner</a> property to get information about the owning form.  Calling this method is identical to setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Owner_\" data-linktype=\"relative-path\">Owner</a> property of the non-modal and then calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show\" data-linktype=\"relative-path\">Show()</a> method.  </p>\n<p> Showing the form is equivalent to setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property to <code>true</code>. After the Show method is called, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible_\" data-linktype=\"relative-path\">Visible</a> property returns a value of <code>true</code> until the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide_\" data-linktype=\"relative-path\">Hide</a> method is called.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ShowDialog\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ShowDialog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowDialog()</div>        \r\n          </div>\r\n    \r\n            <p>Shows the form as a modal dialog box.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DialogResult ShowDialog ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The form being shown is already visible.  </p>\n<p> -or-  </p>\n<p> The form being shown is disabled.  </p>\n<p> -or-  </p>\n<p> The form being shown is not a top-level window.  </p>\n<p> -or-  </p>\n<p> The form being shown as a dialog box is already a modal form.  </p>\n<p> -or-  </p>\n<p> The current process is not running in user interactive mode (for more information, see <span class=\"xref\">stem.Windows.Forms.SystemInformation.UserInteractive*</span>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of the <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> enumeration by assigning it to the <a class=\"xref\" href=\"system.windows.forms.button#System_Windows_Forms_Button_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property of a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> on the form or by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the <code>DialogResult.Cancel</code> value through this method, you could prevent code following the call to ShowDialog from executing.  </p>\n<p> When a form is displayed as a modal dialog box, clicking the <strong>Close</strong> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property to be set to <code>DialogResult.Cancel</code>. Unlike non-modal forms, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of the form when the form is no longer needed by your application.  </p>\n<p> This version of the ShowDialog method does not specify a form or control as its owner. When this version is called, the currently active window is made the owner of the dialog box. If you want to specify a specific owner, use the other version of this method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control on the dialog box form. This example requires that a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>testDialog</code> is created and that it contains a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>TextBox1</code>. Furthermore, the example requires that code in this example is contained and called from a different <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> in order to display <code>testDialog</code> as a modal dialog box. The example uses the version of ShowDialog that specifies an owner for the dialog box.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.ShowDialog Example#1\">   public void ShowMyDialogBox()\n   {\n      Form2 testDialog = new Form2();\n\n      // Show testDialog as a modal dialog and determine if DialogResult = OK.\n      if (testDialog.ShowDialog(this) == DialogResult.OK)\n      {\n         // Read the contents of testDialog&#39;s TextBox.\n         this.txtResult.Text = testDialog.TextBox1.Text;\n      }\n      else\n      {\n         this.txtResult.Text = &quot;Cancelled&quot;;\n      }\n      testDialog.Dispose();\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.ShowDialog Example#1\">   void ShowMyDialogBox()\n   {\n      Form2^ testDialog = gcnew Form2;\n      \n      // Show testDialog as a modal dialog and determine if DialogResult = OK.\n      if ( testDialog-&gt;ShowDialog( this ) == ::DialogResult::OK )\n      {\n         \n         // Read the contents of testDialog&#39;s TextBox.\n         this-&gt;txtResult-&gt;Text = testDialog-&gt;TextBox1-&gt;Text;\n      }\n      else\n      {\n         this-&gt;txtResult-&gt;Text = &quot;Cancelled&quot;;\n      }\n\n      delete testDialog;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.ShowDialog Example#1\">    Public Sub ShowMyDialogBox()\n        Dim testDialog As New Form2()\n        \n        &#39; Show testDialog as a modal dialog and determine if DialogResult = OK.\n        If testDialog.ShowDialog(Me) = System.Windows.Forms.DialogResult.OK Then\n            &#39; Read the contents of testDialog&#39;s TextBox.\n            txtResult.Text = testDialog.TextBox1.Text\n        Else\n            txtResult.Text = &quot;Cancelled&quot;\n        End If\n        testDialog.Dispose()\n    End Sub &#39;ShowMyDialogBox\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ShowDialog_System_Windows_Forms_IWin32Window_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ShowDialog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowDialog(IWin32Window)</div>        \r\n          </div>\r\n    \r\n            <p>Shows the form as a modal dialog box with the specified owner.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>owner</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.iwin32window\" data-linktype=\"relative-path\">IWin32Window</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Any object that implements <a class=\"xref\" href=\"system.windows.forms.iwin32window\" data-linktype=\"relative-path\">IWin32Window</a> that represents the top-level window that will own the modal dialog box.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The form specified in the <code>owner</code> parameter is the same as the form being shown.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The form being shown is already visible.  </p>\n<p> -or-  </p>\n<p> The form being shown is disabled.  </p>\n<p> -or-  </p>\n<p> The form being shown is not a top-level window.  </p>\n<p> -or-  </p>\n<p> The form being shown as a dialog box is already a modal form.  </p>\n<p> -or-  </p>\n<p> The current process is not running in user interactive mode (for more information, see <span class=\"xref\">stem.Windows.Forms.SystemInformation.UserInteractive*</span>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of <a class=\"xref\" href=\"system.windows.forms.dialogresult\" data-linktype=\"relative-path\">DialogResult</a> by assigning it to the <a class=\"xref\" href=\"system.windows.forms.button#System_Windows_Forms_Button_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property of a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> on the form or by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the <code>DialogResult.Cancel</code> value through this method, you could prevent code following the call to <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> from executing.  </p>\n<p> When a form is displayed as a modal dialog box, clicking the <strong>Close</strong> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property to be set to <code>DialogResult.Cancel</code>. Unlike modeless forms, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of the form when the form is no longer needed by your application.  </p>\n<p> This version of the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> method allows you to specify a specific form that will own the dialog box that is shown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control on the dialog box form. This example requires that a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form2</code> is created and that it contains a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control named <code>TextBox1</code>. The example uses the version of <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ShowDialog_\" data-linktype=\"relative-path\">ShowDialog</a> that specifies an owner for the dialog box.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Form.ShowDialog Example#1\">   public void ShowMyDialogBox()\n   {\n      Form2 testDialog = new Form2();\n\n      // Show testDialog as a modal dialog and determine if DialogResult = OK.\n      if (testDialog.ShowDialog(this) == DialogResult.OK)\n      {\n         // Read the contents of testDialog&#39;s TextBox.\n         this.txtResult.Text = testDialog.TextBox1.Text;\n      }\n      else\n      {\n         this.txtResult.Text = &quot;Cancelled&quot;;\n      }\n      testDialog.Dispose();\n   }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Form.ShowDialog Example#1\">   void ShowMyDialogBox()\n   {\n      Form2^ testDialog = gcnew Form2;\n      \n      // Show testDialog as a modal dialog and determine if DialogResult = OK.\n      if ( testDialog-&gt;ShowDialog( this ) == ::DialogResult::OK )\n      {\n         \n         // Read the contents of testDialog&#39;s TextBox.\n         this-&gt;txtResult-&gt;Text = testDialog-&gt;TextBox1-&gt;Text;\n      }\n      else\n      {\n         this-&gt;txtResult-&gt;Text = &quot;Cancelled&quot;;\n      }\n\n      delete testDialog;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Form.ShowDialog Example#1\">    Public Sub ShowMyDialogBox()\n        Dim testDialog As New Form2()\n        \n        &#39; Show testDialog as a modal dialog and determine if DialogResult = OK.\n        If testDialog.ShowDialog(Me) = System.Windows.Forms.DialogResult.OK Then\n            &#39; Read the contents of testDialog&#39;s TextBox.\n            txtResult.Text = testDialog.TextBox1.Text\n        Else\n            txtResult.Text = &quot;Cancelled&quot;\n        End If\n        testDialog.Dispose()\n    End Sub &#39;ShowMyDialogBox\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string representing the current instance of the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string consisting of the fully qualified name of the form object&#39;s class, with the <span class=\"xref\">stem.Windows.Forms.Form.Text*</span> property of the form appended to the end. For example, if the form is derived from the class <code>MyForm</code> in the <code>MyNamespace</code> namespace, and the <span class=\"xref\">stem.Windows.Forms.Form.Text*</span> property is set to <code>Hello, World</code>, this method will return <code>MyNamespace.MyForm, Text: Hello, World</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_UpdateDefaultButton\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_UpdateDefaultButton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateDefaultButton()</div>        \r\n          </div>\r\n    \r\n            <p>Updates which button is the default button.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void UpdateDefaultButton ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UpdateDefaultButton method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:  </p>\n<ol>\n<li><p>If the <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_ActiveControl_\" data-linktype=\"relative-path\">ActiveControl</a> property implements the <a class=\"xref\" href=\"system.windows.forms.ibuttoncontrol\" data-linktype=\"relative-path\">IButtonControl</a> interface, that control is the default button.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_AcceptButton_\" data-linktype=\"relative-path\">AcceptButton</a> property is the default button.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ValidateChildren\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ValidateChildren_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateChildren()</div>        \r\n          </div>\r\n    \r\n            <p>Causes all of the child controls within a control that support validation to validate their data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool ValidateChildren ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if all of the children validated successfully; otherwise, <code>false</code>. If called from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers, this method will always return <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ValidateChildren_System_Windows_Forms_ValidationConstraints_\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_ValidateChildren_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateChildren(ValidationConstraints)</div>        \r\n          </div>\r\n    \r\n            <p>Causes all of the child controls within a control that support validation to validate their data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>validationConstraints</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.validationconstraints\" data-linktype=\"relative-path\">ValidationConstraints</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Places restrictions on which controls have their <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event raised.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if all of the children validated successfully; otherwise, <code>false</code>. If called from the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event handlers, this method will always return <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_WndProc_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_Form_WndProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WndProc(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Processes Windows messages.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void WndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Windows <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Activated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the form is activated in code or by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Activated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> When the application is active and has multiple forms, the active form is the form with the input focus. A form that is not visible cannot be the active form. The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.  </p>\n</div>\n<p> To activate a form at run time using code, call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> method. You can use this event for tasks such as updating the contents of the form based on changes made to the form&#39;s data when the form was not activated.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a>, Activated, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> members. To run the example, paste the following code in a form called Form1 containing a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> called <code>Button1</code> and two <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a> controls called <code>Label1</code> and <code>Label2</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormsActivate#1\">\tstatic int x = 200;\n\tstatic int y = 200;\n\n\tprivate void Button1_Click(System.Object sender, \n\t\tSystem.EventArgs e)\n\t{\n\t\t// Create a new Form1 and set its Visible property to true.\n\t\tForm1 form2 = new Form1();\n\t\tform2.Visible = true;\n\n\t\t// Set the new form&#39;s desktop location so it  \n\t\t// appears below and to the right of the current form.\n\t\tform2.SetDesktopLocation(x, y);\n\t\tx += 30;\n\t\ty += 30;\n\n\t\t// Keep the current form active by calling the Activate\n\t\t// method.\n\t\tthis.Activate();\n\t\tthis.Button1.Enabled = false;\n\t}\n\t\n\n\n\t// Updates the label text to reflect the current values of x \n\t// and y, which was were incremented in the Button1 control&#39;s \n\t// click event.\n\tprivate void Form1_Activated(object sender, System.EventArgs e)\n\t{\n\t\tLabel1.Text = &quot;x: &quot;+x+&quot; y: &quot;+y;\n\t\tLabel2.Text = &quot;Number of forms currently open: &quot;+count;\n\t}\n\n\tstatic int count = 0;\n\n\tprivate void Form1_Closed(object sender, System.EventArgs e)\n\t{\n\t\tcount -= 1;\n\t}\n\n\tprivate void Form1_Load(object sender, System.EventArgs e)\n\t{\n\t\tcount += 1;\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormsActivate#1\">    Shared x As Integer = 200\n    Shared y As Integer = 200\n\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Create a new Form1 and set its Visible property to true.\n        Dim form2 As New Form1\n        form2.Visible = True\n\n        &#39; Set the new form&#39;s desktop location so it appears below and \n        &#39; to the right of the current form.\n        form2.SetDesktopLocation(x, y)\n        x += 30\n        y += 30\n\n        &#39; Keep the current form active by calling the Activate method.\n        Me.Activate()\n        Me.Button1.Enabled = False\n    End Sub\n\n\n\n    &#39; Updates the label text to reflect the current values of x and y, \n    &#39; which was were incremented in the Button1 control&#39;s click event.\n    Private Sub Form1_Activated(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Activated\n        Label1.Text = &quot;x: &quot; &amp; x &amp; &quot; y: &quot; &amp; y\n        Label2.Text = &quot;Number of forms currently open: &quot; &amp; count\n    End Sub\n\n    Shared count As Integer = 0\n\n    Private Sub Form1_Closed(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Closed\n        count -= 1\n    End Sub\n\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n        count += 1\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormsActivate#1\">   static int x = 200;\n   static int y = 200;\n   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      \n      // Create a new Form1 and set its Visible property to true.\n      Form1^ form2 = gcnew Form1;\n      form2-&gt;Visible = true;\n      \n      // Set the new form&#39;s desktop location so it  \n      // appears below and to the right of the current form.\n      form2-&gt;SetDesktopLocation( x, y );\n      x += 30;\n      y += 30;\n      \n      // Keep the current form active by calling the Activate\n      // method.\n      this-&gt;Activate();\n      this-&gt;Button1-&gt;Enabled = false;\n   }\n\n\n   // Updates the label text to reflect the current values of x \n   // and y, which was were incremented in the Button1 control&#39;s \n   // click event.\n   void Form1_Activated( Object^ sender, System::EventArgs^ e )\n   {\n      Label1-&gt;Text = String::Format( &quot;x: {0} y: {1}&quot;, x, y );\n      Label2-&gt;Text = String::Format( &quot;Number of forms currently open: {0}&quot;, count );\n   }\n\n   static int count = 0;\n   void Form1_Closed( Object^ sender, System::EventArgs^ e )\n   {\n      count -= 1;\n   }\n\n   void Form1_Load( Object^ sender, System::EventArgs^ e )\n   {\n      count += 1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoSizeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.AutoSize*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AutoSizeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_AutoValidateChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoValidateChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.AutoValidate*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AutoValidateChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Closed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Closed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the form is closed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Closed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> The Closed event is obsolete in the .NET Framework version 2.0; use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosed\" data-linktype=\"relative-path\">FormClosed</a> event instead.  </p>\n</div>\n<p> This event occurs after the form has been closed by the user or by the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method of the form. To prevent a form from closing, handle the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event and set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> passed to your event handler to <code>true</code>.  </p>\n<p> You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The Closed and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">System.Windows.Forms.Form.Closing</a> events are not raised when the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method for each open form individually before calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method.  </p>\n</div>\n<p> If the form is an MDI parent form, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> events of all MDI child forms are raised before the MDI parent form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closing\" data-linktype=\"relative-path\">Closing</a> event is raised. In addition, the Closed events of all MDI child forms are raised before the Closed event of the MDI parent form is raised.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a>, Closed, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a>, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> members. To run the example, paste the following code in a form called <code>Form1</code> containing a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> called <code>Button1</code> and two <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a> controls called <code>Label1</code> and <code>Label2</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormsActivate#1\">\tstatic int x = 200;\n\tstatic int y = 200;\n\n\tprivate void Button1_Click(System.Object sender, \n\t\tSystem.EventArgs e)\n\t{\n\t\t// Create a new Form1 and set its Visible property to true.\n\t\tForm1 form2 = new Form1();\n\t\tform2.Visible = true;\n\n\t\t// Set the new form&#39;s desktop location so it  \n\t\t// appears below and to the right of the current form.\n\t\tform2.SetDesktopLocation(x, y);\n\t\tx += 30;\n\t\ty += 30;\n\n\t\t// Keep the current form active by calling the Activate\n\t\t// method.\n\t\tthis.Activate();\n\t\tthis.Button1.Enabled = false;\n\t}\n\t\n\n\n\t// Updates the label text to reflect the current values of x \n\t// and y, which was were incremented in the Button1 control&#39;s \n\t// click event.\n\tprivate void Form1_Activated(object sender, System.EventArgs e)\n\t{\n\t\tLabel1.Text = &quot;x: &quot;+x+&quot; y: &quot;+y;\n\t\tLabel2.Text = &quot;Number of forms currently open: &quot;+count;\n\t}\n\n\tstatic int count = 0;\n\n\tprivate void Form1_Closed(object sender, System.EventArgs e)\n\t{\n\t\tcount -= 1;\n\t}\n\n\tprivate void Form1_Load(object sender, System.EventArgs e)\n\t{\n\t\tcount += 1;\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormsActivate#1\">    Shared x As Integer = 200\n    Shared y As Integer = 200\n\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Create a new Form1 and set its Visible property to true.\n        Dim form2 As New Form1\n        form2.Visible = True\n\n        &#39; Set the new form&#39;s desktop location so it appears below and \n        &#39; to the right of the current form.\n        form2.SetDesktopLocation(x, y)\n        x += 30\n        y += 30\n\n        &#39; Keep the current form active by calling the Activate method.\n        Me.Activate()\n        Me.Button1.Enabled = False\n    End Sub\n\n\n\n    &#39; Updates the label text to reflect the current values of x and y, \n    &#39; which was were incremented in the Button1 control&#39;s click event.\n    Private Sub Form1_Activated(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Activated\n        Label1.Text = &quot;x: &quot; &amp; x &amp; &quot; y: &quot; &amp; y\n        Label2.Text = &quot;Number of forms currently open: &quot; &amp; count\n    End Sub\n\n    Shared count As Integer = 0\n\n    Private Sub Form1_Closed(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Closed\n        count -= 1\n    End Sub\n\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n        count += 1\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormsActivate#1\">   static int x = 200;\n   static int y = 200;\n   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      \n      // Create a new Form1 and set its Visible property to true.\n      Form1^ form2 = gcnew Form1;\n      form2-&gt;Visible = true;\n      \n      // Set the new form&#39;s desktop location so it  \n      // appears below and to the right of the current form.\n      form2-&gt;SetDesktopLocation( x, y );\n      x += 30;\n      y += 30;\n      \n      // Keep the current form active by calling the Activate\n      // method.\n      this-&gt;Activate();\n      this-&gt;Button1-&gt;Enabled = false;\n   }\n\n\n   // Updates the label text to reflect the current values of x \n   // and y, which was were incremented in the Button1 control&#39;s \n   // click event.\n   void Form1_Activated( Object^ sender, System::EventArgs^ e )\n   {\n      Label1-&gt;Text = String::Format( &quot;x: {0} y: {1}&quot;, x, y );\n      Label2-&gt;Text = String::Format( &quot;Number of forms currently open: {0}&quot;, count );\n   }\n\n   static int count = 0;\n   void Form1_Closed( Object^ sender, System::EventArgs^ e )\n   {\n      count -= 1;\n   }\n\n   void Form1_Load( Object^ sender, System::EventArgs^ e )\n   {\n      count += 1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Closing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Closing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the form is closing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.ComponentModel.CancelEventHandler Closing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"CAUTION\"><h5>Caution</h5><p> The Closing event is obsolete in the .NET Framework version 2.0; use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosing\" data-linktype=\"relative-path\">FormClosing</a> event instead.  </p>\n</div>\n<p> The Closing event occurs as the form is being closed. When a form is closed, all resources created within the object are released and the form is disposed. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> passed to your event handler to <code>true</code>.  </p>\n<p> When a form is displayed as a modal dialog box, clicking the <strong>Close</strong> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property to be set to <code>DialogResult.Cancel</code>. You can override the value assigned to the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property when the user clicks the <strong>Close</strong> button by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property in an event handler for the Closing event of the form.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method is called on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> displayed as a modeless window, you cannot call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show_\" data-linktype=\"relative-path\">Show</a> method to make the form visible, because the form&#39;s resources have already been released. To hide a form and then make it visible, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide_\" data-linktype=\"relative-path\">Hide</a> method.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">System.Windows.Forms.Form.Closed</a> and Closing events are not raised when the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method for each open form individually before calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method.  </p>\n</div>\n<p> If the form is an MDI parent form, the Closing events of all MDI child forms are raised before the MDI parent form&#39;s Closing event is raised. In addition, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a> events of all MDI child forms are raised before the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Closed\" data-linktype=\"relative-path\">Closed</a> event of the MDI parent form is raised. Canceling the Closing event of an MDI child form does not prevent the Closing event of the MDI parent form from being raised. However, canceling the event will set to <code>true</code> the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>false</code> in the MDI parent form.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses Closing to test if the text in a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> has changed. If it has, the user is asked whether to save the changes to a file.  </p>\n<pre><code class=\"lang-cs\" name=\"Form.Closing#1\">      private void Form1_Closing(object sender, System.ComponentModel.CancelEventArgs e)\n      {\n         // Determine if text has changed in the textbox by comparing to original text.\n         if (textBox1.Text != strMyOriginalText)\n         {\n            // Display a MsgBox asking the user to save changes or abort.\n            if(MessageBox.Show(&quot;Do you want to save changes to your text?&quot;, &quot;My Application&quot;,\n               MessageBoxButtons.YesNo) ==  DialogResult.Yes)\n            {\n               // Cancel the Closing event from closing the form.\n               e.Cancel = true;\n               // Call method to save file...\n            }\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"Form.Closing#1\">   Private Sub Form1_Closing(sender As Object, e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing\n      &#39; Determine if text has changed in the textbox by comparing to original text.\n      If textBox1.Text &lt;&gt; strMyOriginalText Then\n         &#39; Display a MsgBox asking the user to save changes or abort.\n         If MessageBox.Show(&quot;Do you want to save changes to your text?&quot;, &quot;My Application&quot;, MessageBoxButtons.YesNo) = DialogResult.Yes Then\n            &#39; Cancel the Closing event from closing the form.\n            e.Cancel = True\n         End If &#39; Call method to save file...\n      End If\n   End Sub &#39;Form1_Closing\nEnd Class &#39;Form1\n</code></pre><pre><code class=\"lang-cpp\" name=\"Form.Closing#1\">private:\n   void Form1_Closing( Object^ /*sender*/, System::ComponentModel::CancelEventArgs^ e )\n   {\n      // Determine if text has changed in the textbox by comparing to original text.\n      if ( textBox1-&gt;Text != strMyOriginalText )\n      {\n         // Display a MsgBox asking the user to save changes or abort.\n         if ( MessageBox::Show( &quot;Do you want to save changes to your text?&quot;, &quot;My Application&quot;, MessageBoxButtons::YesNo ) == ::DialogResult::Yes )\n         {\n            // Cancel the Closing event from closing the form.\n            e-&gt;Cancel = true;\n\n            // Call method to save file...\n         }\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Deactivate\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Deactivate</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the form loses focus and is no longer the active form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Deactivate;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Deactivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the Deactivate event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#393\">private void Form1_Deactivate(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.Deactivate event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#393\">Private Sub Form1_Deactivate(sender as Object, e as EventArgs) _ \n     Handles Form1.Deactivate\n\n   MessageBox.Show(&quot;You are in the Form.Deactivate event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_FormClosed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormClosed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the form is closed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.FormClosedEventHandler FormClosed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FormClosed event occurs after the form has been closed by the user or by the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method or the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Exit_\" data-linktype=\"relative-path\">Exit</a> method of the <a class=\"xref\" href=\"system.windows.forms.application\" data-linktype=\"relative-path\">Application</a> class. To prevent a form from closing, handle the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosing\" data-linktype=\"relative-path\">FormClosing</a> event and set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> passed to your event handler to <code>true</code>.  </p>\n<p> You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.  </p>\n<p> If the form is a multiple-document interface (MDI) parent form, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosing\" data-linktype=\"relative-path\">FormClosing</a> events of all MDI child forms are raised before the MDI parent form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosing\" data-linktype=\"relative-path\">FormClosing</a> event is raised. Likewise, the FormClosed events of all MDI child forms are raised before the FormClosed event of the MDI parent form is raised.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FormClosed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the FormClosed event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#395\">private void Form1_FormClosed(Object sender, FormClosedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CloseReason&quot;, e.CloseReason );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;FormClosed Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#395\">Private Sub Form1_FormClosed(sender as Object, e as FormClosedEventArgs) _ \n     Handles Form1.FormClosed\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CloseReason&quot;, e.CloseReason)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;FormClosed Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_FormClosing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FormClosing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before the form is closed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.FormClosingEventHandler FormClosing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FormClosing event occurs as the form is being closed. When a form is closed, it is disposed, releasing all resources associated with the form. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.windows.forms.formclosingeventargs\" data-linktype=\"relative-path\">FormClosingEventArgs</a> passed to your event handler to <code>true</code>.  </p>\n<p> When a form is displayed as a modal dialog box, clicking the <strong>Close</strong> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property to be set to <code>DialogResult.Cancel</code>. You can override the value assigned to the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property when the user clicks the <strong>Close</strong> button by setting the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_DialogResult_\" data-linktype=\"relative-path\">DialogResult</a> property in an event handler for the FormClosing event of the form.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Close_\" data-linktype=\"relative-path\">Close</a> method is called on a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> displayed as a modeless window, you cannot call the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show_\" data-linktype=\"relative-path\">Show</a> method to make the form visible, because the form&#39;s resources have already been released. To hide a form and then make it visible, use the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide_\" data-linktype=\"relative-path\">Hide</a> method.  </p>\n</div>\n<p> If the form is a multiple-document interface (MDI) parent form, the FormClosing events of all MDI child forms are raised before the MDI parent form&#39;s FormClosing event is raised. Likewise, the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosed\" data-linktype=\"relative-path\">FormClosed</a> events of all MDI child forms are raised before the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_FormClosed\" data-linktype=\"relative-path\">FormClosed</a> event of the MDI parent form is raised. Canceling the FormClosing event of an MDI child form does not prevent the FormClosing event of the MDI parent form from being raised. However, canceling the event will set to <code>true</code> the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.windows.forms.formclosingeventargs\" data-linktype=\"relative-path\">FormClosingEventArgs</a> class that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>false</code> in the MDI parent form.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FormClosing event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the FormClosing event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#394\">private void Form1_FormClosing(Object sender, FormClosingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CloseReason&quot;, e.CloseReason );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;FormClosing Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#394\">Private Sub Form1_FormClosing(sender as Object, e as FormClosingEventArgs) _ \n     Handles Form1.FormClosing\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CloseReason&quot;, e.CloseReason)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;FormClosing Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_HelpButtonClicked\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HelpButtonClicked</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <strong>Help</strong> button is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.ComponentModel.CancelEventHandler HelpButtonClicked;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The HelpButtonClicked event occurs when the <strong>Help</strong> button in the form&#39;s caption bar is clicked. The <strong>Help</strong> button is displayed when the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_HelpButton_\" data-linktype=\"relative-path\">HelpButton</a> property is set to <code>true</code>. HelpButtonClicked can be canceled.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HelpButtonClicked event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the HelpButtonClicked event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#388\">private void Form1_HelpButtonClicked(Object sender, CancelEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;HelpButtonClicked Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#388\">Private Sub Form1_HelpButtonClicked(sender as Object, e as CancelEventArgs) _ \n     Handles Form1.HelpButtonClicked\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;HelpButtonClicked Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_InputLanguageChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InputLanguageChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the input language of the form has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event to make changes to your form&#39;s appearance and text based on changes made to the input language of the form.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the InputLanguageChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the InputLanguageChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#400\">private void Form1_InputLanguageChanged(Object sender, InputLanguageChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;InputLanguage&quot;, e.InputLanguage );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Culture&quot;, e.Culture );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CharSet&quot;, e.CharSet );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;InputLanguageChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#400\">Private Sub Form1_InputLanguageChanged(sender as Object, e as InputLanguageChangedEventArgs) _ \n     Handles Form1.InputLanguageChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;InputLanguage&quot;, e.InputLanguage)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Culture&quot;, e.Culture)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CharSet&quot;, e.CharSet)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;InputLanguageChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_InputLanguageChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InputLanguageChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user attempts to change the input language for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs before the change of input language is made for the form. You can cancel the language change by setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the <a class=\"xref\" href=\"system.windows.forms.inputlanguagechangingeventargs\" data-linktype=\"relative-path\">InputLanguageChangingEventArgs</a> passed to your event handler to <code>false</code>. If the event is canceled, the input language is not changed. You can use this event to determine whether the requested input language change is appropriate for your application.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the InputLanguageChanging event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the InputLanguageChanging event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#401\">private void Form1_InputLanguageChanging(Object sender, InputLanguageChangingEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;InputLanguage&quot;, e.InputLanguage );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Culture&quot;, e.Culture );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;SysCharSet&quot;, e.SysCharSet );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;InputLanguageChanging Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#401\">Private Sub Form1_InputLanguageChanging(sender as Object, e as InputLanguageChangingEventArgs) _ \n     Handles Form1.InputLanguageChanging\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;InputLanguage&quot;, e.InputLanguage)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Culture&quot;, e.Culture)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;SysCharSet&quot;, e.SysCharSet)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;InputLanguageChanging Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Load\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Load</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before a form is displayed for the first time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Load;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event to perform tasks such as allocating resources used by the form.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_SetDesktopLocation_\" data-linktype=\"relative-path\">SetDesktopLocation</a>, Load, <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activated\" data-linktype=\"relative-path\">Activated</a>, and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Activate_\" data-linktype=\"relative-path\">Activate</a> members. To run the example, paste the following code in a form called <code>Form1</code> containing a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> called <code>Button1</code> and two <a class=\"xref\" href=\"system.windows.forms.label\" data-linktype=\"relative-path\">Label</a> controls called <code>Label1</code> and <code>Label2</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.FormsActivate#1\">\tstatic int x = 200;\n\tstatic int y = 200;\n\n\tprivate void Button1_Click(System.Object sender, \n\t\tSystem.EventArgs e)\n\t{\n\t\t// Create a new Form1 and set its Visible property to true.\n\t\tForm1 form2 = new Form1();\n\t\tform2.Visible = true;\n\n\t\t// Set the new form&#39;s desktop location so it  \n\t\t// appears below and to the right of the current form.\n\t\tform2.SetDesktopLocation(x, y);\n\t\tx += 30;\n\t\ty += 30;\n\n\t\t// Keep the current form active by calling the Activate\n\t\t// method.\n\t\tthis.Activate();\n\t\tthis.Button1.Enabled = false;\n\t}\n\t\n\n\n\t// Updates the label text to reflect the current values of x \n\t// and y, which was were incremented in the Button1 control&#39;s \n\t// click event.\n\tprivate void Form1_Activated(object sender, System.EventArgs e)\n\t{\n\t\tLabel1.Text = &quot;x: &quot;+x+&quot; y: &quot;+y;\n\t\tLabel2.Text = &quot;Number of forms currently open: &quot;+count;\n\t}\n\n\tstatic int count = 0;\n\n\tprivate void Form1_Closed(object sender, System.EventArgs e)\n\t{\n\t\tcount -= 1;\n\t}\n\n\tprivate void Form1_Load(object sender, System.EventArgs e)\n\t{\n\t\tcount += 1;\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.FormsActivate#1\">    Shared x As Integer = 200\n    Shared y As Integer = 200\n\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Create a new Form1 and set its Visible property to true.\n        Dim form2 As New Form1\n        form2.Visible = True\n\n        &#39; Set the new form&#39;s desktop location so it appears below and \n        &#39; to the right of the current form.\n        form2.SetDesktopLocation(x, y)\n        x += 30\n        y += 30\n\n        &#39; Keep the current form active by calling the Activate method.\n        Me.Activate()\n        Me.Button1.Enabled = False\n    End Sub\n\n\n\n    &#39; Updates the label text to reflect the current values of x and y, \n    &#39; which was were incremented in the Button1 control&#39;s click event.\n    Private Sub Form1_Activated(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Activated\n        Label1.Text = &quot;x: &quot; &amp; x &amp; &quot; y: &quot; &amp; y\n        Label2.Text = &quot;Number of forms currently open: &quot; &amp; count\n    End Sub\n\n    Shared count As Integer = 0\n\n    Private Sub Form1_Closed(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Closed\n        count -= 1\n    End Sub\n\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles MyBase.Load\n        count += 1\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.FormsActivate#1\">   static int x = 200;\n   static int y = 200;\n   void Button1_Click( System::Object^ sender, System::EventArgs^ e )\n   {\n      \n      // Create a new Form1 and set its Visible property to true.\n      Form1^ form2 = gcnew Form1;\n      form2-&gt;Visible = true;\n      \n      // Set the new form&#39;s desktop location so it  \n      // appears below and to the right of the current form.\n      form2-&gt;SetDesktopLocation( x, y );\n      x += 30;\n      y += 30;\n      \n      // Keep the current form active by calling the Activate\n      // method.\n      this-&gt;Activate();\n      this-&gt;Button1-&gt;Enabled = false;\n   }\n\n\n   // Updates the label text to reflect the current values of x \n   // and y, which was were incremented in the Button1 control&#39;s \n   // click event.\n   void Form1_Activated( Object^ sender, System::EventArgs^ e )\n   {\n      Label1-&gt;Text = String::Format( &quot;x: {0} y: {1}&quot;, x, y );\n      Label2-&gt;Text = String::Format( &quot;Number of forms currently open: {0}&quot;, count );\n   }\n\n   static int count = 0;\n   void Form1_Closed( Object^ sender, System::EventArgs^ e )\n   {\n      count -= 1;\n   }\n\n   void Form1_Load( Object^ sender, System::EventArgs^ e )\n   {\n      count += 1;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MarginChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MarginChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.Margin*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MarginChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MaximizedBoundsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximizedBoundsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.MaximizedBounds*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MaximizedBoundsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaximizedBoundsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the MaximizedBoundsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#389\">private void Form1_MaximizedBoundsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.MaximizedBoundsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#389\">Private Sub Form1_MaximizedBoundsChanged(sender as Object, e as EventArgs) _ \n     Handles Form1.MaximizedBoundsChanged\n\n   MessageBox.Show(&quot;You are in the Form.MaximizedBoundsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MaximumSizeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximumSizeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.MaximumSize*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MaximumSizeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MaximumSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the MaximumSizeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#390\">private void Form1_MaximumSizeChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.MaximumSizeChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#390\">Private Sub Form1_MaximumSizeChanged(sender as Object, e as EventArgs) _ \n     Handles Form1.MaximumSizeChanged\n\n   MessageBox.Show(&quot;You are in the Form.MaximumSizeChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MdiChildActivate\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MdiChildActivate</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MdiChildActivate;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MdiChildActivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the MdiChildActivate event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#397\">private void Form1_MdiChildActivate(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.MdiChildActivate event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#397\">Private Sub Form1_MdiChildActivate(sender as Object, e as EventArgs) _ \n     Handles Form1.MdiChildActivate\n\n   MessageBox.Show(&quot;You are in the Form.MdiChildActivate event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MenuComplete\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuComplete</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the menu of a form loses focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MenuComplete;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus. You can use this event to perform tasks such as updating the text of a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control or enabling and disabling buttons on a <a class=\"xref\" href=\"system.windows.forms.toolbar\" data-linktype=\"relative-path\">ToolBar</a>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MenuComplete event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the MenuComplete event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#398\">private void Form1_MenuComplete(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.MenuComplete event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#398\">Private Sub Form1_MenuComplete(sender as Object, e as EventArgs) _ \n     Handles Form1.MenuComplete\n\n   MessageBox.Show(&quot;You are in the Form.MenuComplete event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MenuStart\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuStart</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the menu of a form receives focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MenuStart;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when any menu item in the menu is clicked by the user. You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MenuStart event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the MenuStart event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#399\">private void Form1_MenuStart(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.MenuStart event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#399\">Private Sub Form1_MenuStart(sender as Object, e as EventArgs) _ \n     Handles Form1.MenuStart\n\n   MessageBox.Show(&quot;You are in the Form.MenuStart event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_MinimumSizeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinimumSizeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.MinimumSize*</span> property has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MinimumSizeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MinimumSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the MinimumSizeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#391\">private void Form1_MinimumSizeChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.MinimumSizeChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#391\">Private Sub Form1_MinimumSizeChanged(sender as Object, e as EventArgs) _ \n     Handles Form1.MinimumSizeChanged\n\n   MessageBox.Show(&quot;You are in the Form.MinimumSizeChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ResizeBegin\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResizeBegin</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a form enters resizing mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ResizeBegin;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ResizeBegin event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form. This action puts the form into a modal sizing loop until the resize operation is completed. Typically, the following set of events occurs during a resize operation:  </p>\n<ol>\n<li><p>A single ResizeBegin event occurs as the form enters resizing mode.  </p>\n</li>\n<li><p>Zero or more pairs of <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> events occur as the form&#39;s <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> is modified.  </p>\n</li>\n<li><p>A single <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> event occurs as the form exits resizing mode.  </p>\n</li>\n</ol>\n<div class=\"NOTE\"><h5>Note</h5><p> Just clicking without dragging on a border or resizing grip will generate the ResizeBegin and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> events without any intermediate <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> event pairs.  </p>\n</div>\n<p> The ResizeBegin and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar. These events are not generated by programmatic manipulation of the form, for example by changing the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> properties.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ResizeBegin event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the ResizeBegin event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#404\">private void Form1_ResizeBegin(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.ResizeBegin event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#404\">Private Sub Form1_ResizeBegin(sender as Object, e as EventArgs) _ \n     Handles Form1.ResizeBegin\n\n   MessageBox.Show(&quot;You are in the Form.ResizeBegin event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_ResizeEnd\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResizeEnd</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a form exits resizing mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ResizeEnd;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ResizeEnd event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it. For more information about the resizing operation, see the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeBegin\" data-linktype=\"relative-path\">ResizeBegin</a> event.  </p>\n<p> The ResizeEnd event is also generated after the user moves a form, typically by clicking and dragging on the caption bar. This event is not generated by programmatic manipulation of the form, for example by changing the <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Size_\" data-linktype=\"relative-path\">Size</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location_\" data-linktype=\"relative-path\">Location</a> properties.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ResizeEnd event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the ResizeEnd event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#405\">private void Form1_ResizeEnd(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.ResizeEnd event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#405\">Private Sub Form1_ResizeEnd(sender as Object, e as EventArgs) _ \n     Handles Form1.ResizeEnd\n\n   MessageBox.Show(&quot;You are in the Form.ResizeEnd event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_RightToLeftLayoutChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RightToLeftLayoutChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the value of the <span class=\"xref\">stem.Windows.Forms.Form.RightToLeftLayout*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RightToLeftLayoutChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft_\" data-linktype=\"relative-path\">RightToLeft</a> and <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_RightToLeftLayout_\" data-linktype=\"relative-path\">RightToLeftLayout</a> properties are typically used in developing World-Ready applications.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RightToLeftLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the RightToLeftLayoutChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#402\">private void Form1_RightToLeftLayoutChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.RightToLeftLayoutChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#402\">Private Sub Form1_RightToLeftLayoutChanged(sender as Object, e as EventArgs) _ \n     Handles Form1.RightToLeftLayoutChanged\n\n   MessageBox.Show(&quot;You are in the Form.RightToLeftLayoutChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_Shown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Shown</div>        \r\n          </div>\r\n    \r\n            <p>Occurs whenever the form is first displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Shown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Shown event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event. For more information about the order of events of a form, see <a href=\"../Topic/Order%20of%20Events%20in%20Windows%20Forms.md\" data-linktype=\"relative-path\">Order of Events in Windows Forms</a>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Shown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>. Then ensure that the event handler is associated with the Shown event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#403\">private void Form1_Shown(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the Form.Shown event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#403\">Private Sub Form1_Shown(sender as Object, e as EventArgs) _ \n     Handles Form1.Shown\n\n   MessageBox.Show(&quot;You are in the Form.Shown event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TabIndexChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TabIndexChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.Form.TabIndex*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler TabIndexChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_Form_TabStopChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TabStopChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.Form.TabStop*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler TabStopChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.Form.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.Form.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AcceptButton\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Activate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Activated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_Activated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_Activated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ActivateMdiChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ActiveForm\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ActiveMdiChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AddOwnedForm\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AdjustFormScrollbars\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AllowTransparency\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ApplyAutoScaling\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoScale\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoScaleBaseSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoScroll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_AutoSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoSizeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoValidate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.AutoValidateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_AutoValidateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_AutoValidateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.CancelButton\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.CenterToParent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.CenterToScreen\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ClientSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Close\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Closed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_Closed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_Closed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Closing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_Closing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_Closing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ControlBox\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.CreateControlsInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.CreateHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.CreateParams\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Deactivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_Deactivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_Deactivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.DefaultImeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.DefaultSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.DefWndProc\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.DesktopBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.DesktopLocation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.DialogResult\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.FormBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.FormClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_FormClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_FormClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.FormClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_FormClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_FormClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.GetAutoScaleSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.GetScaledBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.HelpButton\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.HelpButtonClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_HelpButtonClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_HelpButtonClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Icon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.InputLanguageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_InputLanguageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_InputLanguageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.InputLanguageChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_InputLanguageChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_InputLanguageChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.IsMdiChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.IsMdiContainer\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.IsRestrictedWindow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.KeyPreview\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.LayoutMdi\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Load\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_Load\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_Load\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Location\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MainMenuStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Margin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MarginChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MaximizeBox\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MaximizedBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MaximizedBoundsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MaximizedBoundsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MaximizedBoundsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MaximumSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MaximumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MaximumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MaximumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MdiChildActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MdiChildActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MdiChildActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MdiChildren\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MdiParent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Menu\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MenuComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MenuComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MenuComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MenuStart\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MenuStart\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MenuStart\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MergedMenu\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MinimizeBox\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MinimumSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.MinimumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_MinimumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_MinimumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Modal\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnActivated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnBackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnBackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnCreateControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnDeactivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnEnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnFormClosed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnFormClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnHandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnHandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnHelpButtonClicked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnInputLanguageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnInputLanguageChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnLoad\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnMaximizedBoundsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnMaximumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnMdiChildActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnMenuComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnMenuStart\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnMinimumSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnResize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnResizeBegin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnResizeEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnRightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnShown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OnVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Opacity\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.OwnedForms\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Owner\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ProcessCmdKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ProcessDialogChar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ProcessDialogKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ProcessKeyPreview\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ProcessMnemonic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ProcessTabKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.RemoveOwnedForm\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ResizeBegin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_ResizeBegin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_ResizeBegin\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ResizeEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_ResizeEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_ResizeEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.RestoreBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.RightToLeftLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.RightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_RightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_RightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ScaleControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ScaleCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.SetBoundsCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.SetClientSizeCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.SetDesktopBounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.SetDesktopLocation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.SetVisibleCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Show\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ShowDialog\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ShowIcon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ShowInTaskbar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Shown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_Shown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_Shown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ShowWithoutActivation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Size\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.SizeGripStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.StartPosition\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TabIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_TabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_TabIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TabStop\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.add_TabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.remove_TabStopChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TopLevel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TopMost\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.TransparencyKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.UpdateDefaultButton\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.ValidateChildren\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.WindowState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.Form.WndProc\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"799c7495-b436-707a-306e-2943b24d4f39\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\Form.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a window or dialog box that makes up an application&amp;#39;s user interface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.Form\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.Form.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.Form.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.Form","System.Windows.Forms.Form..ctor","System.Windows.Forms.Form.AcceptButton","System.Windows.Forms.Form.Activate","System.Windows.Forms.Form.Activated","System.Windows.Forms.Form.add_Activated","System.Windows.Forms.Form.remove_Activated","System.Windows.Forms.Form.ActivateMdiChild","System.Windows.Forms.Form.ActiveForm","System.Windows.Forms.Form.ActiveMdiChild","System.Windows.Forms.Form.AddOwnedForm","System.Windows.Forms.Form.AdjustFormScrollbars","System.Windows.Forms.Form.AllowTransparency","System.Windows.Forms.Form.ApplyAutoScaling","System.Windows.Forms.Form.AutoScale","System.Windows.Forms.Form.AutoScaleBaseSize","System.Windows.Forms.Form.AutoScroll","System.Windows.Forms.Form.AutoSize","System.Windows.Forms.Form.AutoSizeChanged","System.Windows.Forms.Form.add_AutoSizeChanged","System.Windows.Forms.Form.remove_AutoSizeChanged","System.Windows.Forms.Form.AutoSizeMode","System.Windows.Forms.Form.AutoValidate","System.Windows.Forms.Form.AutoValidateChanged","System.Windows.Forms.Form.add_AutoValidateChanged","System.Windows.Forms.Form.remove_AutoValidateChanged","System.Windows.Forms.Form.BackColor","System.Windows.Forms.Form.CancelButton","System.Windows.Forms.Form.CenterToParent","System.Windows.Forms.Form.CenterToScreen","System.Windows.Forms.Form.ClientSize","System.Windows.Forms.Form.Close","System.Windows.Forms.Form.Closed","System.Windows.Forms.Form.add_Closed","System.Windows.Forms.Form.remove_Closed","System.Windows.Forms.Form.Closing","System.Windows.Forms.Form.add_Closing","System.Windows.Forms.Form.remove_Closing","System.Windows.Forms.Form.ControlBox","System.Windows.Forms.Form.CreateControlsInstance","System.Windows.Forms.Form.CreateHandle","System.Windows.Forms.Form.CreateParams","System.Windows.Forms.Form.Deactivate","System.Windows.Forms.Form.add_Deactivate","System.Windows.Forms.Form.remove_Deactivate","System.Windows.Forms.Form.DefaultImeMode","System.Windows.Forms.Form.DefaultSize","System.Windows.Forms.Form.DefWndProc","System.Windows.Forms.Form.DesktopBounds","System.Windows.Forms.Form.DesktopLocation","System.Windows.Forms.Form.DialogResult","System.Windows.Forms.Form.Dispose","System.Windows.Forms.Form.FormBorderStyle","System.Windows.Forms.Form.FormClosed","System.Windows.Forms.Form.add_FormClosed","System.Windows.Forms.Form.remove_FormClosed","System.Windows.Forms.Form.FormClosing","System.Windows.Forms.Form.add_FormClosing","System.Windows.Forms.Form.remove_FormClosing","System.Windows.Forms.Form.GetAutoScaleSize","System.Windows.Forms.Form.GetScaledBounds","System.Windows.Forms.Form.HelpButton","System.Windows.Forms.Form.HelpButtonClicked","System.Windows.Forms.Form.add_HelpButtonClicked","System.Windows.Forms.Form.remove_HelpButtonClicked","System.Windows.Forms.Form.Icon","System.Windows.Forms.Form.InputLanguageChanged","System.Windows.Forms.Form.add_InputLanguageChanged","System.Windows.Forms.Form.remove_InputLanguageChanged","System.Windows.Forms.Form.InputLanguageChanging","System.Windows.Forms.Form.add_InputLanguageChanging","System.Windows.Forms.Form.remove_InputLanguageChanging","System.Windows.Forms.Form.IsMdiChild","System.Windows.Forms.Form.IsMdiContainer","System.Windows.Forms.Form.IsRestrictedWindow","System.Windows.Forms.Form.KeyPreview","System.Windows.Forms.Form.LayoutMdi","System.Windows.Forms.Form.Load","System.Windows.Forms.Form.add_Load","System.Windows.Forms.Form.remove_Load","System.Windows.Forms.Form.Location","System.Windows.Forms.Form.MainMenuStrip","System.Windows.Forms.Form.Margin","System.Windows.Forms.Form.MarginChanged","System.Windows.Forms.Form.add_MarginChanged","System.Windows.Forms.Form.remove_MarginChanged","System.Windows.Forms.Form.MaximizeBox","System.Windows.Forms.Form.MaximizedBounds","System.Windows.Forms.Form.MaximizedBoundsChanged","System.Windows.Forms.Form.add_MaximizedBoundsChanged","System.Windows.Forms.Form.remove_MaximizedBoundsChanged","System.Windows.Forms.Form.MaximumSize","System.Windows.Forms.Form.MaximumSizeChanged","System.Windows.Forms.Form.add_MaximumSizeChanged","System.Windows.Forms.Form.remove_MaximumSizeChanged","System.Windows.Forms.Form.MdiChildActivate","System.Windows.Forms.Form.add_MdiChildActivate","System.Windows.Forms.Form.remove_MdiChildActivate","System.Windows.Forms.Form.MdiChildren","System.Windows.Forms.Form.MdiParent","System.Windows.Forms.Form.Menu","System.Windows.Forms.Form.MenuComplete","System.Windows.Forms.Form.add_MenuComplete","System.Windows.Forms.Form.remove_MenuComplete","System.Windows.Forms.Form.MenuStart","System.Windows.Forms.Form.add_MenuStart","System.Windows.Forms.Form.remove_MenuStart","System.Windows.Forms.Form.MergedMenu","System.Windows.Forms.Form.MinimizeBox","System.Windows.Forms.Form.MinimumSize","System.Windows.Forms.Form.MinimumSizeChanged","System.Windows.Forms.Form.add_MinimumSizeChanged","System.Windows.Forms.Form.remove_MinimumSizeChanged","System.Windows.Forms.Form.Modal","System.Windows.Forms.Form.OnActivated","System.Windows.Forms.Form.OnBackgroundImageChanged","System.Windows.Forms.Form.OnBackgroundImageLayoutChanged","System.Windows.Forms.Form.OnClosed","System.Windows.Forms.Form.OnClosing","System.Windows.Forms.Form.OnCreateControl","System.Windows.Forms.Form.OnDeactivate","System.Windows.Forms.Form.OnEnabledChanged","System.Windows.Forms.Form.OnEnter","System.Windows.Forms.Form.OnFontChanged","System.Windows.Forms.Form.OnFormClosed","System.Windows.Forms.Form.OnFormClosing","System.Windows.Forms.Form.OnHandleCreated","System.Windows.Forms.Form.OnHandleDestroyed","System.Windows.Forms.Form.OnHelpButtonClicked","System.Windows.Forms.Form.OnInputLanguageChanged","System.Windows.Forms.Form.OnInputLanguageChanging","System.Windows.Forms.Form.OnLayout","System.Windows.Forms.Form.OnLoad","System.Windows.Forms.Form.OnMaximizedBoundsChanged","System.Windows.Forms.Form.OnMaximumSizeChanged","System.Windows.Forms.Form.OnMdiChildActivate","System.Windows.Forms.Form.OnMenuComplete","System.Windows.Forms.Form.OnMenuStart","System.Windows.Forms.Form.OnMinimumSizeChanged","System.Windows.Forms.Form.OnPaint","System.Windows.Forms.Form.OnResize","System.Windows.Forms.Form.OnResizeBegin","System.Windows.Forms.Form.OnResizeEnd","System.Windows.Forms.Form.OnRightToLeftLayoutChanged","System.Windows.Forms.Form.OnShown","System.Windows.Forms.Form.OnStyleChanged","System.Windows.Forms.Form.OnTextChanged","System.Windows.Forms.Form.OnVisibleChanged","System.Windows.Forms.Form.Opacity","System.Windows.Forms.Form.OwnedForms","System.Windows.Forms.Form.Owner","System.Windows.Forms.Form.ProcessCmdKey","System.Windows.Forms.Form.ProcessDialogChar","System.Windows.Forms.Form.ProcessDialogKey","System.Windows.Forms.Form.ProcessKeyPreview","System.Windows.Forms.Form.ProcessMnemonic","System.Windows.Forms.Form.ProcessTabKey","System.Windows.Forms.Form.RemoveOwnedForm","System.Windows.Forms.Form.ResizeBegin","System.Windows.Forms.Form.add_ResizeBegin","System.Windows.Forms.Form.remove_ResizeBegin","System.Windows.Forms.Form.ResizeEnd","System.Windows.Forms.Form.add_ResizeEnd","System.Windows.Forms.Form.remove_ResizeEnd","System.Windows.Forms.Form.RestoreBounds","System.Windows.Forms.Form.RightToLeftLayout","System.Windows.Forms.Form.RightToLeftLayoutChanged","System.Windows.Forms.Form.add_RightToLeftLayoutChanged","System.Windows.Forms.Form.remove_RightToLeftLayoutChanged","System.Windows.Forms.Form.ScaleControl","System.Windows.Forms.Form.ScaleCore","System.Windows.Forms.Form.Select","System.Windows.Forms.Form.SetBoundsCore","System.Windows.Forms.Form.SetClientSizeCore","System.Windows.Forms.Form.SetDesktopBounds","System.Windows.Forms.Form.SetDesktopLocation","System.Windows.Forms.Form.SetVisibleCore","System.Windows.Forms.Form.Show","System.Windows.Forms.Form.ShowDialog","System.Windows.Forms.Form.ShowIcon","System.Windows.Forms.Form.ShowInTaskbar","System.Windows.Forms.Form.Shown","System.Windows.Forms.Form.add_Shown","System.Windows.Forms.Form.remove_Shown","System.Windows.Forms.Form.ShowWithoutActivation","System.Windows.Forms.Form.Size","System.Windows.Forms.Form.SizeGripStyle","System.Windows.Forms.Form.StartPosition","System.Windows.Forms.Form.TabIndex","System.Windows.Forms.Form.TabIndexChanged","System.Windows.Forms.Form.add_TabIndexChanged","System.Windows.Forms.Form.remove_TabIndexChanged","System.Windows.Forms.Form.TabStop","System.Windows.Forms.Form.TabStopChanged","System.Windows.Forms.Form.add_TabStopChanged","System.Windows.Forms.Form.remove_TabStopChanged","System.Windows.Forms.Form.Text","System.Windows.Forms.Form.TopLevel","System.Windows.Forms.Form.TopMost","System.Windows.Forms.Form.ToString","System.Windows.Forms.Form.TransparencyKey","System.Windows.Forms.Form.UpdateDefaultButton","System.Windows.Forms.Form.ValidateChildren","System.Windows.Forms.Form.WindowState","System.Windows.Forms.Form.WndProc"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.Form","System::Windows::Forms::Form","System.Windows.Forms.Form.#ctor","System::Windows::Forms::Form::#ctor","System.Windows.Forms.Form.AcceptButton","System::Windows::Forms::Form::AcceptButton","System.Windows.Forms.Form.Activate","System::Windows::Forms::Form::Activate","System.Windows.Forms.Form.Activated","System::Windows::Forms::Form::Activated","System.Windows.Forms.Form.ActivateMdiChild","System::Windows::Forms::Form::ActivateMdiChild","System.Windows.Forms.Form.ActiveForm","System::Windows::Forms::Form::ActiveForm","System.Windows.Forms.Form.ActiveMdiChild","System::Windows::Forms::Form::ActiveMdiChild","System.Windows.Forms.Form.AddOwnedForm","System::Windows::Forms::Form::AddOwnedForm","System.Windows.Forms.Form.AdjustFormScrollbars","System::Windows::Forms::Form::AdjustFormScrollbars","System.Windows.Forms.Form.AllowTransparency","System::Windows::Forms::Form::AllowTransparency","System.Windows.Forms.Form.ApplyAutoScaling","System::Windows::Forms::Form::ApplyAutoScaling","System.Windows.Forms.Form.AutoScale","System::Windows::Forms::Form::AutoScale","System.Windows.Forms.Form.AutoScaleBaseSize","System::Windows::Forms::Form::AutoScaleBaseSize","System.Windows.Forms.Form.AutoScroll","System::Windows::Forms::Form::AutoScroll","System.Windows.Forms.Form.AutoSize","System::Windows::Forms::Form::AutoSize","System.Windows.Forms.Form.AutoSizeChanged","System::Windows::Forms::Form::AutoSizeChanged","System.Windows.Forms.Form.AutoSizeMode","System::Windows::Forms::Form::AutoSizeMode","System.Windows.Forms.Form.AutoValidate","System::Windows::Forms::Form::AutoValidate","System.Windows.Forms.Form.AutoValidateChanged","System::Windows::Forms::Form::AutoValidateChanged","System.Windows.Forms.Form.BackColor","System::Windows::Forms::Form::BackColor","System.Windows.Forms.Form.CancelButton","System::Windows::Forms::Form::CancelButton","System.Windows.Forms.Form.CenterToParent","System::Windows::Forms::Form::CenterToParent","System.Windows.Forms.Form.CenterToScreen","System::Windows::Forms::Form::CenterToScreen","System.Windows.Forms.Form.ClientSize","System::Windows::Forms::Form::ClientSize","System.Windows.Forms.Form.Close","System::Windows::Forms::Form::Close","System.Windows.Forms.Form.Closed","System::Windows::Forms::Form::Closed","System.Windows.Forms.Form.Closing","System::Windows::Forms::Form::Closing","System.Windows.Forms.Form.ControlBox","System::Windows::Forms::Form::ControlBox","System.Windows.Forms.Form.CreateControlsInstance","System::Windows::Forms::Form::CreateControlsInstance","System.Windows.Forms.Form.CreateHandle","System::Windows::Forms::Form::CreateHandle","System.Windows.Forms.Form.CreateParams","System::Windows::Forms::Form::CreateParams","System.Windows.Forms.Form.Deactivate","System::Windows::Forms::Form::Deactivate","System.Windows.Forms.Form.DefaultImeMode","System::Windows::Forms::Form::DefaultImeMode","System.Windows.Forms.Form.DefaultSize","System::Windows::Forms::Form::DefaultSize","System.Windows.Forms.Form.DefWndProc","System::Windows::Forms::Form::DefWndProc","System.Windows.Forms.Form.DesktopBounds","System::Windows::Forms::Form::DesktopBounds","System.Windows.Forms.Form.DesktopLocation","System::Windows::Forms::Form::DesktopLocation","System.Windows.Forms.Form.DialogResult","System::Windows::Forms::Form::DialogResult","System.Windows.Forms.Form.Dispose","System::Windows::Forms::Form::Dispose","System.Windows.Forms.Form.FormBorderStyle","System::Windows::Forms::Form::FormBorderStyle","System.Windows.Forms.Form.FormClosed","System::Windows::Forms::Form::FormClosed","System.Windows.Forms.Form.FormClosing","System::Windows::Forms::Form::FormClosing","System.Windows.Forms.Form.GetAutoScaleSize","System::Windows::Forms::Form::GetAutoScaleSize","System.Windows.Forms.Form.GetScaledBounds","System::Windows::Forms::Form::GetScaledBounds","System.Windows.Forms.Form.HelpButton","System::Windows::Forms::Form::HelpButton","System.Windows.Forms.Form.HelpButtonClicked","System::Windows::Forms::Form::HelpButtonClicked","System.Windows.Forms.Form.Icon","System::Windows::Forms::Form::Icon","System.Windows.Forms.Form.InputLanguageChanged","System::Windows::Forms::Form::InputLanguageChanged","System.Windows.Forms.Form.InputLanguageChanging","System::Windows::Forms::Form::InputLanguageChanging","System.Windows.Forms.Form.IsMdiChild","System::Windows::Forms::Form::IsMdiChild","System.Windows.Forms.Form.IsMdiContainer","System::Windows::Forms::Form::IsMdiContainer","System.Windows.Forms.Form.IsRestrictedWindow","System::Windows::Forms::Form::IsRestrictedWindow","System.Windows.Forms.Form.KeyPreview","System::Windows::Forms::Form::KeyPreview","System.Windows.Forms.Form.LayoutMdi","System::Windows::Forms::Form::LayoutMdi","System.Windows.Forms.Form.Load","System::Windows::Forms::Form::Load","System.Windows.Forms.Form.Location","System::Windows::Forms::Form::Location","System.Windows.Forms.Form.MainMenuStrip","System::Windows::Forms::Form::MainMenuStrip","System.Windows.Forms.Form.Margin","System::Windows::Forms::Form::Margin","System.Windows.Forms.Form.MarginChanged","System::Windows::Forms::Form::MarginChanged","System.Windows.Forms.Form.MaximizeBox","System::Windows::Forms::Form::MaximizeBox","System.Windows.Forms.Form.MaximizedBounds","System::Windows::Forms::Form::MaximizedBounds","System.Windows.Forms.Form.MaximizedBoundsChanged","System::Windows::Forms::Form::MaximizedBoundsChanged","System.Windows.Forms.Form.MaximumSize","System::Windows::Forms::Form::MaximumSize","System.Windows.Forms.Form.MaximumSizeChanged","System::Windows::Forms::Form::MaximumSizeChanged","System.Windows.Forms.Form.MdiChildActivate","System::Windows::Forms::Form::MdiChildActivate","System.Windows.Forms.Form.MdiChildren","System::Windows::Forms::Form::MdiChildren","System.Windows.Forms.Form.MdiParent","System::Windows::Forms::Form::MdiParent","System.Windows.Forms.Form.Menu","System::Windows::Forms::Form::Menu","System.Windows.Forms.Form.MenuComplete","System::Windows::Forms::Form::MenuComplete","System.Windows.Forms.Form.MenuStart","System::Windows::Forms::Form::MenuStart","System.Windows.Forms.Form.MergedMenu","System::Windows::Forms::Form::MergedMenu","System.Windows.Forms.Form.MinimizeBox","System::Windows::Forms::Form::MinimizeBox","System.Windows.Forms.Form.MinimumSize","System::Windows::Forms::Form::MinimumSize","System.Windows.Forms.Form.MinimumSizeChanged","System::Windows::Forms::Form::MinimumSizeChanged","System.Windows.Forms.Form.Modal","System::Windows::Forms::Form::Modal","System.Windows.Forms.Form.OnActivated","System::Windows::Forms::Form::OnActivated","System.Windows.Forms.Form.OnBackgroundImageChanged","System::Windows::Forms::Form::OnBackgroundImageChanged","System.Windows.Forms.Form.OnBackgroundImageLayoutChanged","System::Windows::Forms::Form::OnBackgroundImageLayoutChanged","System.Windows.Forms.Form.OnClosed","System::Windows::Forms::Form::OnClosed","System.Windows.Forms.Form.OnClosing","System::Windows::Forms::Form::OnClosing","System.Windows.Forms.Form.OnCreateControl","System::Windows::Forms::Form::OnCreateControl","System.Windows.Forms.Form.OnDeactivate","System::Windows::Forms::Form::OnDeactivate","System.Windows.Forms.Form.OnEnabledChanged","System::Windows::Forms::Form::OnEnabledChanged","System.Windows.Forms.Form.OnEnter","System::Windows::Forms::Form::OnEnter","System.Windows.Forms.Form.OnFontChanged","System::Windows::Forms::Form::OnFontChanged","System.Windows.Forms.Form.OnFormClosed","System::Windows::Forms::Form::OnFormClosed","System.Windows.Forms.Form.OnFormClosing","System::Windows::Forms::Form::OnFormClosing","System.Windows.Forms.Form.OnHandleCreated","System::Windows::Forms::Form::OnHandleCreated","System.Windows.Forms.Form.OnHandleDestroyed","System::Windows::Forms::Form::OnHandleDestroyed","System.Windows.Forms.Form.OnHelpButtonClicked","System::Windows::Forms::Form::OnHelpButtonClicked","System.Windows.Forms.Form.OnInputLanguageChanged","System::Windows::Forms::Form::OnInputLanguageChanged","System.Windows.Forms.Form.OnInputLanguageChanging","System::Windows::Forms::Form::OnInputLanguageChanging","System.Windows.Forms.Form.OnLayout","System::Windows::Forms::Form::OnLayout","System.Windows.Forms.Form.OnLoad","System::Windows::Forms::Form::OnLoad","System.Windows.Forms.Form.OnMaximizedBoundsChanged","System::Windows::Forms::Form::OnMaximizedBoundsChanged","System.Windows.Forms.Form.OnMaximumSizeChanged","System::Windows::Forms::Form::OnMaximumSizeChanged","System.Windows.Forms.Form.OnMdiChildActivate","System::Windows::Forms::Form::OnMdiChildActivate","System.Windows.Forms.Form.OnMenuComplete","System::Windows::Forms::Form::OnMenuComplete","System.Windows.Forms.Form.OnMenuStart","System::Windows::Forms::Form::OnMenuStart","System.Windows.Forms.Form.OnMinimumSizeChanged","System::Windows::Forms::Form::OnMinimumSizeChanged","System.Windows.Forms.Form.OnPaint","System::Windows::Forms::Form::OnPaint","System.Windows.Forms.Form.OnResize","System::Windows::Forms::Form::OnResize","System.Windows.Forms.Form.OnResizeBegin","System::Windows::Forms::Form::OnResizeBegin","System.Windows.Forms.Form.OnResizeEnd","System::Windows::Forms::Form::OnResizeEnd","System.Windows.Forms.Form.OnRightToLeftLayoutChanged","System::Windows::Forms::Form::OnRightToLeftLayoutChanged","System.Windows.Forms.Form.OnShown","System::Windows::Forms::Form::OnShown","System.Windows.Forms.Form.OnStyleChanged","System::Windows::Forms::Form::OnStyleChanged","System.Windows.Forms.Form.OnTextChanged","System::Windows::Forms::Form::OnTextChanged","System.Windows.Forms.Form.OnVisibleChanged","System::Windows::Forms::Form::OnVisibleChanged","System.Windows.Forms.Form.Opacity","System::Windows::Forms::Form::Opacity","System.Windows.Forms.Form.OwnedForms","System::Windows::Forms::Form::OwnedForms","System.Windows.Forms.Form.Owner","System::Windows::Forms::Form::Owner","System.Windows.Forms.Form.ProcessCmdKey","System::Windows::Forms::Form::ProcessCmdKey","System.Windows.Forms.Form.ProcessDialogChar","System::Windows::Forms::Form::ProcessDialogChar","System.Windows.Forms.Form.ProcessDialogKey","System::Windows::Forms::Form::ProcessDialogKey","System.Windows.Forms.Form.ProcessKeyPreview","System::Windows::Forms::Form::ProcessKeyPreview","System.Windows.Forms.Form.ProcessMnemonic","System::Windows::Forms::Form::ProcessMnemonic","System.Windows.Forms.Form.ProcessTabKey","System::Windows::Forms::Form::ProcessTabKey","System.Windows.Forms.Form.RemoveOwnedForm","System::Windows::Forms::Form::RemoveOwnedForm","System.Windows.Forms.Form.ResizeBegin","System::Windows::Forms::Form::ResizeBegin","System.Windows.Forms.Form.ResizeEnd","System::Windows::Forms::Form::ResizeEnd","System.Windows.Forms.Form.RestoreBounds","System::Windows::Forms::Form::RestoreBounds","System.Windows.Forms.Form.RightToLeftLayout","System::Windows::Forms::Form::RightToLeftLayout","System.Windows.Forms.Form.RightToLeftLayoutChanged","System::Windows::Forms::Form::RightToLeftLayoutChanged","System.Windows.Forms.Form.ScaleControl","System::Windows::Forms::Form::ScaleControl","System.Windows.Forms.Form.ScaleCore","System::Windows::Forms::Form::ScaleCore","System.Windows.Forms.Form.Select","System::Windows::Forms::Form::Select","System.Windows.Forms.Form.SetBoundsCore","System::Windows::Forms::Form::SetBoundsCore","System.Windows.Forms.Form.SetClientSizeCore","System::Windows::Forms::Form::SetClientSizeCore","System.Windows.Forms.Form.SetDesktopBounds","System::Windows::Forms::Form::SetDesktopBounds","System.Windows.Forms.Form.SetDesktopLocation","System::Windows::Forms::Form::SetDesktopLocation","System.Windows.Forms.Form.SetVisibleCore","System::Windows::Forms::Form::SetVisibleCore","System.Windows.Forms.Form.Show","System::Windows::Forms::Form::Show","System.Windows.Forms.Form.ShowDialog","System::Windows::Forms::Form::ShowDialog","System.Windows.Forms.Form.ShowIcon","System::Windows::Forms::Form::ShowIcon","System.Windows.Forms.Form.ShowInTaskbar","System::Windows::Forms::Form::ShowInTaskbar","System.Windows.Forms.Form.Shown","System::Windows::Forms::Form::Shown","System.Windows.Forms.Form.ShowWithoutActivation","System::Windows::Forms::Form::ShowWithoutActivation","System.Windows.Forms.Form.Size","System::Windows::Forms::Form::Size","System.Windows.Forms.Form.SizeGripStyle","System::Windows::Forms::Form::SizeGripStyle","System.Windows.Forms.Form.StartPosition","System::Windows::Forms::Form::StartPosition","System.Windows.Forms.Form.TabIndex","System::Windows::Forms::Form::TabIndex","System.Windows.Forms.Form.TabIndexChanged","System::Windows::Forms::Form::TabIndexChanged","System.Windows.Forms.Form.TabStop","System::Windows::Forms::Form::TabStop","System.Windows.Forms.Form.TabStopChanged","System::Windows::Forms::Form::TabStopChanged","System.Windows.Forms.Form.Text","System::Windows::Forms::Form::Text","System.Windows.Forms.Form.TopLevel","System::Windows::Forms::Form::TopLevel","System.Windows.Forms.Form.TopMost","System::Windows::Forms::Form::TopMost","System.Windows.Forms.Form.ToString","System::Windows::Forms::Form::ToString","System.Windows.Forms.Form.TransparencyKey","System::Windows::Forms::Form::TransparencyKey","System.Windows.Forms.Form.UpdateDefaultButton","System::Windows::Forms::Form::UpdateDefaultButton","System.Windows.Forms.Form.ValidateChildren","System::Windows::Forms::Form::ValidateChildren","System.Windows.Forms.Form.WindowState","System::Windows::Forms::Form::WindowState","System.Windows.Forms.Form.WndProc","System::Windows::Forms::Form::WndProc"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"799c7495-b436-707a-306e-2943b24d4f39","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\Form.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/Form.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Form class | Microsoft Docs","_op_ogTitle":"Form class","description":"Represents a window or dialog box that makes up an application&#39;s user interface.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.Form","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.form","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.form","fileRelativePath":"System.Windows.Forms.Form.html"},"themesRelativePathToOutputRoot":"_themes/"}