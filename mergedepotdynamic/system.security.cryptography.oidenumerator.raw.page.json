{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_OidEnumerator\">\r\n      <span class=\"lang-csharp\">OidEnumerator</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the ability to navigate through an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class OidEnumerator : System.Collections.IEnumerator</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">OidEnumerator</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class implements the <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> interface.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_OidEnumerator_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_OidEnumerator_MoveNext\" data-linktype=\"self-bookmark\">MoveNext()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Advances to the next <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_OidEnumerator_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets an enumerator to its initial position.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_OidEnumerator_System_Collections_IEnumerator_Current\" data-linktype=\"self-bookmark\">IEnumerator.Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_OidEnumerator_Current\">\r\n    \r\n            <a id=\"System_Security_Cryptography_OidEnumerator_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.Oid Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an enumerator is created, the <a class=\"xref\" href=\"system.security.cryptography.oidenumerator#System_Security_Cryptography_OidEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> method must be called to advance the enumerator to the first element of the collection before reading the value of the Current property; otherwise, Current returns <code>null</code> or throws an exception.  </p>\n<p> Current also returns <code>null</code> or throws an exception if the last call to <a class=\"xref\" href=\"system.security.cryptography.oidenumerator#System_Security_Cryptography_OidEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> returns <code>false</code>, which indicates that the end of the collection has been reached.  </p>\n<p> Current does not move the position of the enumerator, and consecutive calls to Current return the same object, until <a class=\"xref\" href=\"system.security.cryptography.oidenumerator#System_Security_Cryptography_OidEnumerator_MoveNext_\" data-linktype=\"relative-path\">MoveNext</a> is called.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.oidenumerator\" data-linktype=\"relative-path\">OidEnumerator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.Oid#1\">using System;\nusing System.Security.Cryptography;\npublic class OidSample\n{\n\tpublic static void Main()\n\t{\n\t\t// Assign values to strings.\n\t\tstring Value1 = &quot;1.2.840.113549.1.1.1&quot;;\n\t\tstring Name1 = &quot;3DES&quot;;\n\t\tstring Value2 = &quot;1.3.6.1.4.1.311.20.2&quot;;\n\t\tstring InvalidName = &quot;This name is not a valid name&quot;;\n\t\tstring InvalidValue = &quot;1.1.1.1.1.1.1.1&quot;;\n\n\t\t// Create new Oid objects using the specified values.\n\t\t// Note that the corresponding Value or Friendly Name property is automatically added to the object.\n\t\tOid o1 = new Oid(Value1);\n\t\tOid o2 = new Oid(Name1);\n\n\t\t// Create a new Oid object using the specified Value and Friendly Name properties.\n\t\t// Note that the two are not compared to determine if the Value is associated \n\t\t//  with the Friendly Name.\n\t\tOid o3 = new Oid(Value2, InvalidName);\n\n\t\t//Create a new Oid object using the specified Value. Note that if the value\n\t\t//  is invalid or not known, no value is assigned to the Friendly Name property.\n\t\tOid o4 = new Oid(InvalidValue);\n\n\t\t//Write out the property information of the Oid objects.\n\t\tConsole.WriteLine(&quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1.FriendlyName, o1.Value);\n\t\tConsole.WriteLine(&quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2.FriendlyName, o2.Value);\n\t\tConsole.WriteLine(&quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3.FriendlyName, o3.Value);\n\t\tConsole.WriteLine(&quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4.FriendlyName, o4.Value, Environment.NewLine);\n\n\t\t//Create an Oid collection and add several Oid objects.\n\t\tOidCollection oc = new OidCollection();\n\t\toc.Add(o1);\n\t\toc.Add(o2);\n\t\toc.Add(o3);\n\t\tConsole.WriteLine(&quot;Number of Oids in the collection: {0}&quot;, oc.Count);\n\t\tConsole.WriteLine(&quot;Is synchronized: {0} {1}&quot;, oc.IsSynchronized, Environment.NewLine);\n\n\t\t//Create an enumerator for moving through the collection.\n\t\tOidEnumerator oe = oc.GetEnumerator();\n\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\toe.MoveNext();\n\t\t// Write out Oids in the collection.\n\t\tConsole.WriteLine(&quot;First Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName,oe.Current.Value);\n\t\toe.MoveNext();\n\t\tConsole.WriteLine(&quot;Second Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value);\n\t\t//Return index in the collection to the beginning.\n\t\toe.Reset();\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.Oid#1\">Imports System\nImports System.Security.Cryptography\n\n\nPublic Class OidSample\n   Shared msg As String\n   Public Shared Sub Main()\n      &#39; Assign values to strings.\n      Dim Value1 As String = &quot;1.2.840.113549.1.1.1&quot;\n      Dim Name1 As String = &quot;3DES&quot;\n      Dim Value2 As String = &quot;1.3.6.1.4.1.311.20.2&quot;\n      Dim InvalidName As String = &quot;This name is not a valid name&quot;\n      Dim InvalidValue As String = &quot;1.1.1.1.1.1.1.1&quot;\n      \n      &#39; Create new Oid objects using the specified values.\n      &#39; Note that the corresponding Value or Friendly Name property is automatically added to the object.\n      Dim o1 As New Oid(Value1)\n      Dim o2 As New Oid(Name1)\n      \n      &#39; Create a new Oid object using the specified Value and Friendly Name properties.\n      &#39; Note that the two are not compared to determine if the Value is associated \n      &#39;  with the Friendly Name.\n      Dim o3 As New Oid(Value2, InvalidName)\n      \n      &#39;Create a new Oid object using the specified Value. Note that if the value\n      &#39;  is invalid or not known, no value is assigned to the Friendly Name property.\n      Dim o4 As New Oid(InvalidValue)\n      \n      &#39;Write out the property information of the Oid objects.\n\tmsg = &quot;Oid1: Automatically assigned Friendly Name: &quot; &amp; o1.FriendlyName &amp; &quot;, &quot; &amp; o1.Value\n\tMsgBox(msg)\n      &#39;Console.WriteLine(&quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1.FriendlyName, o1.Value)\n\n\n      &#39;Console.WriteLine(&quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2.FriendlyName, o2.Value)\n\tmsg = &quot;Oid2: Automatically assigned Value: &quot; &amp; o2.FriendlyName &amp; &quot;, &quot; &amp; o2.Value\n\tMsgBox(msg)\n\n\n      &#39;Console.WriteLine(&quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3.FriendlyName, o3.Value)\n\tmsg = &quot;Oid3: Name and Value not compared: &quot; &amp; o3.FriendlyName &amp; &quot;, &quot; &amp; o3.Value\n\tMsgBox(msg)\n\n\n\n     &#39; Console.WriteLine(&quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4.FriendlyName, o4.Value, Environment.NewLine)\n\tmsg = &quot;Oid4: Invalid Value used: &quot; &amp; o4.FriendlyName &amp; &quot;, &quot; &amp; o4.Value\n\tMsgBox(msg)\n \n\n     \n      &#39;Create an Oid collection and add several Oid objects.\n      Dim oc As New OidCollection()\n      oc.Add(o1)\n      oc.Add(o2)\n      oc.Add(o3)\n     &#39; Console.WriteLine(&quot;Number of Oids in the collection: {0}&quot;, oc.Count)\n      &#39; Console.WriteLine(&quot;Is synchronized: {0} {1}&quot;, oc.IsSynchronized, Environment.NewLine)\n\n\tmsg = &quot;Number of Oids in the collection: &quot; &amp; oc.Count\n\tMsgBox(msg)\n\tmsg = &quot;Is synchronized: &quot; &amp; oc.IsSynchronized\n\tMsgBox(msg)\n\n      \n      &#39;Create an enumerator for moving through the collection.\n      Dim oe As OidEnumerator = oc.GetEnumerator()\n      &#39;You must execute a MoveNext() to get to the first item in the collection.\n      oe.MoveNext()\n      &#39; Write out Oids in the collection.\n      &#39;Console.WriteLine(&quot;First Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value)\n\tmsg = &quot;First Oid in collection: &quot; &amp; oe.Current.FriendlyName &amp; &quot;, &quot; &amp; oe.Current.Value\n\tMsgBox(msg)\n\n      oe.MoveNext()\n     &#39; Console.WriteLine(&quot;Second Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value)\n\tmsg = &quot;Second Oid in collection: &quot; &amp; oe.Current.FriendlyName &amp; &quot;, &quot; &amp; oe.Current.Value\n\tMsgBox(msg)\n\n      &#39;Return index in the collection to the beginning.\n      oe.Reset()\n   End Sub &#39;Main\nEnd Class &#39;OidSample\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.Oid#1\">#using &lt;system.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nint main()\n{\n   \n   // Assign values to strings.\n   String^ Value1 = &quot;1.2.840.113549.1.1.1&quot;;\n   String^ Name1 = &quot;3DES&quot;;\n   String^ Value2 = &quot;1.3.6.1.4.1.311.20.2&quot;;\n   String^ InvalidName = &quot;This name is not a valid name&quot;;\n   String^ InvalidValue = &quot;1.1.1.1.1.1.1.1&quot;;\n   \n   // Create new Oid objects using the specified values.\n   // Note that the corresponding Value or Friendly Name property is automatically added to the object.\n   Oid ^ o1 = gcnew Oid( Value1 );\n   Oid ^ o2 = gcnew Oid( Name1 );\n   \n   // Create a new Oid object using the specified Value and Friendly Name properties.\n   // Note that the two are not compared to determine if the Value is associated \n   //  with the Friendly Name.\n   Oid ^ o3 = gcnew Oid( Value2,InvalidName );\n   \n   //Create a new Oid object using the specified Value. Note that if the value\n   //  is invalid or not known, no value is assigned to the Friendly Name property.\n   Oid ^ o4 = gcnew Oid( InvalidValue );\n   \n   //Write out the property information of the Oid objects.\n   Console::WriteLine( &quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1-&gt;FriendlyName, o1-&gt;Value );\n   Console::WriteLine( &quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2-&gt;FriendlyName, o2-&gt;Value );\n   Console::WriteLine( &quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3-&gt;FriendlyName, o3-&gt;Value );\n   Console::WriteLine( &quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4-&gt;FriendlyName, o4-&gt;Value, Environment::NewLine );\n   \n   //Create an Oid collection and add several Oid objects.\n   OidCollection ^ oc = gcnew OidCollection;\n   oc-&gt;Add( o1 );\n   oc-&gt;Add( o2 );\n   oc-&gt;Add( o3 );\n   Console::WriteLine( &quot;Number of Oids in the collection: {0}&quot;, oc-&gt;Count );\n   Console::WriteLine( &quot;Is synchronized: {0} {1}&quot;, oc-&gt;IsSynchronized, Environment::NewLine );\n   \n   //Create an enumerator for moving through the collection.\n   OidEnumerator ^ oe = oc-&gt;GetEnumerator();\n   \n   //You must execute a MoveNext() to get to the first item in the collection.\n   oe-&gt;MoveNext();\n   \n   // Write out Oids in the collection.\n   Console::WriteLine( &quot;First Oid in collection: {0},{1}&quot;, oe-&gt;Current-&gt;FriendlyName, oe-&gt;Current-&gt;Value );\n   oe-&gt;MoveNext();\n   Console::WriteLine( &quot;Second Oid in collection: {0},{1}&quot;, oe-&gt;Current-&gt;FriendlyName, oe-&gt;Current-&gt;Value );\n   \n   //Return index in the collection to the beginning.\n   oe-&gt;Reset();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_OidEnumerator_MoveNext\">\r\n    \r\n            <a id=\"System_Security_Cryptography_OidEnumerator_MoveNext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MoveNext()</div>        \r\n          </div>\r\n    \r\n            <p>Advances to the next <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MoveNext ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code>, if the enumerator was successfully advanced to the next element; <code>false</code>, if the enumerator has passed the end of the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The collection was modified after the enumerator was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an enumerator is created, it is positioned before the first element of the collection, and the first call to the MoveNext method moves the enumerator over the first element of the collection. Subsequent calls to MoveNext advances the enumerator past subsequent items in the collection.  </p>\n<p> After the end of the collection is passed, calls to MoveNext return <code>false</code>.  </p>\n<p> An enumerator is valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator becomes invalid and the next call to MoveNext throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.oidenumerator\" data-linktype=\"relative-path\">OidEnumerator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.Oid#1\">using System;\nusing System.Security.Cryptography;\npublic class OidSample\n{\n\tpublic static void Main()\n\t{\n\t\t// Assign values to strings.\n\t\tstring Value1 = &quot;1.2.840.113549.1.1.1&quot;;\n\t\tstring Name1 = &quot;3DES&quot;;\n\t\tstring Value2 = &quot;1.3.6.1.4.1.311.20.2&quot;;\n\t\tstring InvalidName = &quot;This name is not a valid name&quot;;\n\t\tstring InvalidValue = &quot;1.1.1.1.1.1.1.1&quot;;\n\n\t\t// Create new Oid objects using the specified values.\n\t\t// Note that the corresponding Value or Friendly Name property is automatically added to the object.\n\t\tOid o1 = new Oid(Value1);\n\t\tOid o2 = new Oid(Name1);\n\n\t\t// Create a new Oid object using the specified Value and Friendly Name properties.\n\t\t// Note that the two are not compared to determine if the Value is associated \n\t\t//  with the Friendly Name.\n\t\tOid o3 = new Oid(Value2, InvalidName);\n\n\t\t//Create a new Oid object using the specified Value. Note that if the value\n\t\t//  is invalid or not known, no value is assigned to the Friendly Name property.\n\t\tOid o4 = new Oid(InvalidValue);\n\n\t\t//Write out the property information of the Oid objects.\n\t\tConsole.WriteLine(&quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1.FriendlyName, o1.Value);\n\t\tConsole.WriteLine(&quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2.FriendlyName, o2.Value);\n\t\tConsole.WriteLine(&quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3.FriendlyName, o3.Value);\n\t\tConsole.WriteLine(&quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4.FriendlyName, o4.Value, Environment.NewLine);\n\n\t\t//Create an Oid collection and add several Oid objects.\n\t\tOidCollection oc = new OidCollection();\n\t\toc.Add(o1);\n\t\toc.Add(o2);\n\t\toc.Add(o3);\n\t\tConsole.WriteLine(&quot;Number of Oids in the collection: {0}&quot;, oc.Count);\n\t\tConsole.WriteLine(&quot;Is synchronized: {0} {1}&quot;, oc.IsSynchronized, Environment.NewLine);\n\n\t\t//Create an enumerator for moving through the collection.\n\t\tOidEnumerator oe = oc.GetEnumerator();\n\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\toe.MoveNext();\n\t\t// Write out Oids in the collection.\n\t\tConsole.WriteLine(&quot;First Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName,oe.Current.Value);\n\t\toe.MoveNext();\n\t\tConsole.WriteLine(&quot;Second Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value);\n\t\t//Return index in the collection to the beginning.\n\t\toe.Reset();\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.Oid#1\">Imports System\nImports System.Security.Cryptography\n\n\nPublic Class OidSample\n   Shared msg As String\n   Public Shared Sub Main()\n      &#39; Assign values to strings.\n      Dim Value1 As String = &quot;1.2.840.113549.1.1.1&quot;\n      Dim Name1 As String = &quot;3DES&quot;\n      Dim Value2 As String = &quot;1.3.6.1.4.1.311.20.2&quot;\n      Dim InvalidName As String = &quot;This name is not a valid name&quot;\n      Dim InvalidValue As String = &quot;1.1.1.1.1.1.1.1&quot;\n      \n      &#39; Create new Oid objects using the specified values.\n      &#39; Note that the corresponding Value or Friendly Name property is automatically added to the object.\n      Dim o1 As New Oid(Value1)\n      Dim o2 As New Oid(Name1)\n      \n      &#39; Create a new Oid object using the specified Value and Friendly Name properties.\n      &#39; Note that the two are not compared to determine if the Value is associated \n      &#39;  with the Friendly Name.\n      Dim o3 As New Oid(Value2, InvalidName)\n      \n      &#39;Create a new Oid object using the specified Value. Note that if the value\n      &#39;  is invalid or not known, no value is assigned to the Friendly Name property.\n      Dim o4 As New Oid(InvalidValue)\n      \n      &#39;Write out the property information of the Oid objects.\n\tmsg = &quot;Oid1: Automatically assigned Friendly Name: &quot; &amp; o1.FriendlyName &amp; &quot;, &quot; &amp; o1.Value\n\tMsgBox(msg)\n      &#39;Console.WriteLine(&quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1.FriendlyName, o1.Value)\n\n\n      &#39;Console.WriteLine(&quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2.FriendlyName, o2.Value)\n\tmsg = &quot;Oid2: Automatically assigned Value: &quot; &amp; o2.FriendlyName &amp; &quot;, &quot; &amp; o2.Value\n\tMsgBox(msg)\n\n\n      &#39;Console.WriteLine(&quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3.FriendlyName, o3.Value)\n\tmsg = &quot;Oid3: Name and Value not compared: &quot; &amp; o3.FriendlyName &amp; &quot;, &quot; &amp; o3.Value\n\tMsgBox(msg)\n\n\n\n     &#39; Console.WriteLine(&quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4.FriendlyName, o4.Value, Environment.NewLine)\n\tmsg = &quot;Oid4: Invalid Value used: &quot; &amp; o4.FriendlyName &amp; &quot;, &quot; &amp; o4.Value\n\tMsgBox(msg)\n \n\n     \n      &#39;Create an Oid collection and add several Oid objects.\n      Dim oc As New OidCollection()\n      oc.Add(o1)\n      oc.Add(o2)\n      oc.Add(o3)\n     &#39; Console.WriteLine(&quot;Number of Oids in the collection: {0}&quot;, oc.Count)\n      &#39; Console.WriteLine(&quot;Is synchronized: {0} {1}&quot;, oc.IsSynchronized, Environment.NewLine)\n\n\tmsg = &quot;Number of Oids in the collection: &quot; &amp; oc.Count\n\tMsgBox(msg)\n\tmsg = &quot;Is synchronized: &quot; &amp; oc.IsSynchronized\n\tMsgBox(msg)\n\n      \n      &#39;Create an enumerator for moving through the collection.\n      Dim oe As OidEnumerator = oc.GetEnumerator()\n      &#39;You must execute a MoveNext() to get to the first item in the collection.\n      oe.MoveNext()\n      &#39; Write out Oids in the collection.\n      &#39;Console.WriteLine(&quot;First Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value)\n\tmsg = &quot;First Oid in collection: &quot; &amp; oe.Current.FriendlyName &amp; &quot;, &quot; &amp; oe.Current.Value\n\tMsgBox(msg)\n\n      oe.MoveNext()\n     &#39; Console.WriteLine(&quot;Second Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value)\n\tmsg = &quot;Second Oid in collection: &quot; &amp; oe.Current.FriendlyName &amp; &quot;, &quot; &amp; oe.Current.Value\n\tMsgBox(msg)\n\n      &#39;Return index in the collection to the beginning.\n      oe.Reset()\n   End Sub &#39;Main\nEnd Class &#39;OidSample\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.Oid#1\">#using &lt;system.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nint main()\n{\n   \n   // Assign values to strings.\n   String^ Value1 = &quot;1.2.840.113549.1.1.1&quot;;\n   String^ Name1 = &quot;3DES&quot;;\n   String^ Value2 = &quot;1.3.6.1.4.1.311.20.2&quot;;\n   String^ InvalidName = &quot;This name is not a valid name&quot;;\n   String^ InvalidValue = &quot;1.1.1.1.1.1.1.1&quot;;\n   \n   // Create new Oid objects using the specified values.\n   // Note that the corresponding Value or Friendly Name property is automatically added to the object.\n   Oid ^ o1 = gcnew Oid( Value1 );\n   Oid ^ o2 = gcnew Oid( Name1 );\n   \n   // Create a new Oid object using the specified Value and Friendly Name properties.\n   // Note that the two are not compared to determine if the Value is associated \n   //  with the Friendly Name.\n   Oid ^ o3 = gcnew Oid( Value2,InvalidName );\n   \n   //Create a new Oid object using the specified Value. Note that if the value\n   //  is invalid or not known, no value is assigned to the Friendly Name property.\n   Oid ^ o4 = gcnew Oid( InvalidValue );\n   \n   //Write out the property information of the Oid objects.\n   Console::WriteLine( &quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1-&gt;FriendlyName, o1-&gt;Value );\n   Console::WriteLine( &quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2-&gt;FriendlyName, o2-&gt;Value );\n   Console::WriteLine( &quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3-&gt;FriendlyName, o3-&gt;Value );\n   Console::WriteLine( &quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4-&gt;FriendlyName, o4-&gt;Value, Environment::NewLine );\n   \n   //Create an Oid collection and add several Oid objects.\n   OidCollection ^ oc = gcnew OidCollection;\n   oc-&gt;Add( o1 );\n   oc-&gt;Add( o2 );\n   oc-&gt;Add( o3 );\n   Console::WriteLine( &quot;Number of Oids in the collection: {0}&quot;, oc-&gt;Count );\n   Console::WriteLine( &quot;Is synchronized: {0} {1}&quot;, oc-&gt;IsSynchronized, Environment::NewLine );\n   \n   //Create an enumerator for moving through the collection.\n   OidEnumerator ^ oe = oc-&gt;GetEnumerator();\n   \n   //You must execute a MoveNext() to get to the first item in the collection.\n   oe-&gt;MoveNext();\n   \n   // Write out Oids in the collection.\n   Console::WriteLine( &quot;First Oid in collection: {0},{1}&quot;, oe-&gt;Current-&gt;FriendlyName, oe-&gt;Current-&gt;Value );\n   oe-&gt;MoveNext();\n   Console::WriteLine( &quot;Second Oid in collection: {0},{1}&quot;, oe-&gt;Current-&gt;FriendlyName, oe-&gt;Current-&gt;Value );\n   \n   //Return index in the collection to the beginning.\n   oe-&gt;Reset();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_OidEnumerator_Reset\">\r\n    \r\n            <a id=\"System_Security_Cryptography_OidEnumerator_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Sets an enumerator to its initial position.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The collection was modified after the enumerator was created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The initial position of an enumerator is before the first element in the <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object. An enumerator remains valid as long as the collection remains unchanged. If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator becomes invalid and the next call to the Reset method throws an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.security.cryptography.oidenumerator\" data-linktype=\"relative-path\">OidEnumerator</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.Oid#1\">using System;\nusing System.Security.Cryptography;\npublic class OidSample\n{\n\tpublic static void Main()\n\t{\n\t\t// Assign values to strings.\n\t\tstring Value1 = &quot;1.2.840.113549.1.1.1&quot;;\n\t\tstring Name1 = &quot;3DES&quot;;\n\t\tstring Value2 = &quot;1.3.6.1.4.1.311.20.2&quot;;\n\t\tstring InvalidName = &quot;This name is not a valid name&quot;;\n\t\tstring InvalidValue = &quot;1.1.1.1.1.1.1.1&quot;;\n\n\t\t// Create new Oid objects using the specified values.\n\t\t// Note that the corresponding Value or Friendly Name property is automatically added to the object.\n\t\tOid o1 = new Oid(Value1);\n\t\tOid o2 = new Oid(Name1);\n\n\t\t// Create a new Oid object using the specified Value and Friendly Name properties.\n\t\t// Note that the two are not compared to determine if the Value is associated \n\t\t//  with the Friendly Name.\n\t\tOid o3 = new Oid(Value2, InvalidName);\n\n\t\t//Create a new Oid object using the specified Value. Note that if the value\n\t\t//  is invalid or not known, no value is assigned to the Friendly Name property.\n\t\tOid o4 = new Oid(InvalidValue);\n\n\t\t//Write out the property information of the Oid objects.\n\t\tConsole.WriteLine(&quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1.FriendlyName, o1.Value);\n\t\tConsole.WriteLine(&quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2.FriendlyName, o2.Value);\n\t\tConsole.WriteLine(&quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3.FriendlyName, o3.Value);\n\t\tConsole.WriteLine(&quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4.FriendlyName, o4.Value, Environment.NewLine);\n\n\t\t//Create an Oid collection and add several Oid objects.\n\t\tOidCollection oc = new OidCollection();\n\t\toc.Add(o1);\n\t\toc.Add(o2);\n\t\toc.Add(o3);\n\t\tConsole.WriteLine(&quot;Number of Oids in the collection: {0}&quot;, oc.Count);\n\t\tConsole.WriteLine(&quot;Is synchronized: {0} {1}&quot;, oc.IsSynchronized, Environment.NewLine);\n\n\t\t//Create an enumerator for moving through the collection.\n\t\tOidEnumerator oe = oc.GetEnumerator();\n\t\t//You must execute a MoveNext() to get to the first item in the collection.\n\t\toe.MoveNext();\n\t\t// Write out Oids in the collection.\n\t\tConsole.WriteLine(&quot;First Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName,oe.Current.Value);\n\t\toe.MoveNext();\n\t\tConsole.WriteLine(&quot;Second Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value);\n\t\t//Return index in the collection to the beginning.\n\t\toe.Reset();\n\t}\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.Oid#1\">Imports System\nImports System.Security.Cryptography\n\n\nPublic Class OidSample\n   Shared msg As String\n   Public Shared Sub Main()\n      &#39; Assign values to strings.\n      Dim Value1 As String = &quot;1.2.840.113549.1.1.1&quot;\n      Dim Name1 As String = &quot;3DES&quot;\n      Dim Value2 As String = &quot;1.3.6.1.4.1.311.20.2&quot;\n      Dim InvalidName As String = &quot;This name is not a valid name&quot;\n      Dim InvalidValue As String = &quot;1.1.1.1.1.1.1.1&quot;\n      \n      &#39; Create new Oid objects using the specified values.\n      &#39; Note that the corresponding Value or Friendly Name property is automatically added to the object.\n      Dim o1 As New Oid(Value1)\n      Dim o2 As New Oid(Name1)\n      \n      &#39; Create a new Oid object using the specified Value and Friendly Name properties.\n      &#39; Note that the two are not compared to determine if the Value is associated \n      &#39;  with the Friendly Name.\n      Dim o3 As New Oid(Value2, InvalidName)\n      \n      &#39;Create a new Oid object using the specified Value. Note that if the value\n      &#39;  is invalid or not known, no value is assigned to the Friendly Name property.\n      Dim o4 As New Oid(InvalidValue)\n      \n      &#39;Write out the property information of the Oid objects.\n\tmsg = &quot;Oid1: Automatically assigned Friendly Name: &quot; &amp; o1.FriendlyName &amp; &quot;, &quot; &amp; o1.Value\n\tMsgBox(msg)\n      &#39;Console.WriteLine(&quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1.FriendlyName, o1.Value)\n\n\n      &#39;Console.WriteLine(&quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2.FriendlyName, o2.Value)\n\tmsg = &quot;Oid2: Automatically assigned Value: &quot; &amp; o2.FriendlyName &amp; &quot;, &quot; &amp; o2.Value\n\tMsgBox(msg)\n\n\n      &#39;Console.WriteLine(&quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3.FriendlyName, o3.Value)\n\tmsg = &quot;Oid3: Name and Value not compared: &quot; &amp; o3.FriendlyName &amp; &quot;, &quot; &amp; o3.Value\n\tMsgBox(msg)\n\n\n\n     &#39; Console.WriteLine(&quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4.FriendlyName, o4.Value, Environment.NewLine)\n\tmsg = &quot;Oid4: Invalid Value used: &quot; &amp; o4.FriendlyName &amp; &quot;, &quot; &amp; o4.Value\n\tMsgBox(msg)\n \n\n     \n      &#39;Create an Oid collection and add several Oid objects.\n      Dim oc As New OidCollection()\n      oc.Add(o1)\n      oc.Add(o2)\n      oc.Add(o3)\n     &#39; Console.WriteLine(&quot;Number of Oids in the collection: {0}&quot;, oc.Count)\n      &#39; Console.WriteLine(&quot;Is synchronized: {0} {1}&quot;, oc.IsSynchronized, Environment.NewLine)\n\n\tmsg = &quot;Number of Oids in the collection: &quot; &amp; oc.Count\n\tMsgBox(msg)\n\tmsg = &quot;Is synchronized: &quot; &amp; oc.IsSynchronized\n\tMsgBox(msg)\n\n      \n      &#39;Create an enumerator for moving through the collection.\n      Dim oe As OidEnumerator = oc.GetEnumerator()\n      &#39;You must execute a MoveNext() to get to the first item in the collection.\n      oe.MoveNext()\n      &#39; Write out Oids in the collection.\n      &#39;Console.WriteLine(&quot;First Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value)\n\tmsg = &quot;First Oid in collection: &quot; &amp; oe.Current.FriendlyName &amp; &quot;, &quot; &amp; oe.Current.Value\n\tMsgBox(msg)\n\n      oe.MoveNext()\n     &#39; Console.WriteLine(&quot;Second Oid in collection: {0},{1}&quot;, oe.Current.FriendlyName, oe.Current.Value)\n\tmsg = &quot;Second Oid in collection: &quot; &amp; oe.Current.FriendlyName &amp; &quot;, &quot; &amp; oe.Current.Value\n\tMsgBox(msg)\n\n      &#39;Return index in the collection to the beginning.\n      oe.Reset()\n   End Sub &#39;Main\nEnd Class &#39;OidSample\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.Oid#1\">#using &lt;system.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\nint main()\n{\n   \n   // Assign values to strings.\n   String^ Value1 = &quot;1.2.840.113549.1.1.1&quot;;\n   String^ Name1 = &quot;3DES&quot;;\n   String^ Value2 = &quot;1.3.6.1.4.1.311.20.2&quot;;\n   String^ InvalidName = &quot;This name is not a valid name&quot;;\n   String^ InvalidValue = &quot;1.1.1.1.1.1.1.1&quot;;\n   \n   // Create new Oid objects using the specified values.\n   // Note that the corresponding Value or Friendly Name property is automatically added to the object.\n   Oid ^ o1 = gcnew Oid( Value1 );\n   Oid ^ o2 = gcnew Oid( Name1 );\n   \n   // Create a new Oid object using the specified Value and Friendly Name properties.\n   // Note that the two are not compared to determine if the Value is associated \n   //  with the Friendly Name.\n   Oid ^ o3 = gcnew Oid( Value2,InvalidName );\n   \n   //Create a new Oid object using the specified Value. Note that if the value\n   //  is invalid or not known, no value is assigned to the Friendly Name property.\n   Oid ^ o4 = gcnew Oid( InvalidValue );\n   \n   //Write out the property information of the Oid objects.\n   Console::WriteLine( &quot;Oid1: Automatically assigned Friendly Name: {0}, {1}&quot;, o1-&gt;FriendlyName, o1-&gt;Value );\n   Console::WriteLine( &quot;Oid2: Automatically assigned Value: {0}, {1}&quot;, o2-&gt;FriendlyName, o2-&gt;Value );\n   Console::WriteLine( &quot;Oid3: Name and Value not compared: {0}, {1}&quot;, o3-&gt;FriendlyName, o3-&gt;Value );\n   Console::WriteLine( &quot;Oid4: Invalid Value used: {0}, {1} {2}&quot;, o4-&gt;FriendlyName, o4-&gt;Value, Environment::NewLine );\n   \n   //Create an Oid collection and add several Oid objects.\n   OidCollection ^ oc = gcnew OidCollection;\n   oc-&gt;Add( o1 );\n   oc-&gt;Add( o2 );\n   oc-&gt;Add( o3 );\n   Console::WriteLine( &quot;Number of Oids in the collection: {0}&quot;, oc-&gt;Count );\n   Console::WriteLine( &quot;Is synchronized: {0} {1}&quot;, oc-&gt;IsSynchronized, Environment::NewLine );\n   \n   //Create an enumerator for moving through the collection.\n   OidEnumerator ^ oe = oc-&gt;GetEnumerator();\n   \n   //You must execute a MoveNext() to get to the first item in the collection.\n   oe-&gt;MoveNext();\n   \n   // Write out Oids in the collection.\n   Console::WriteLine( &quot;First Oid in collection: {0},{1}&quot;, oe-&gt;Current-&gt;FriendlyName, oe-&gt;Current-&gt;Value );\n   oe-&gt;MoveNext();\n   Console::WriteLine( &quot;Second Oid in collection: {0},{1}&quot;, oe-&gt;Current-&gt;FriendlyName, oe-&gt;Current-&gt;Value );\n   \n   //Return index in the collection to the beginning.\n   oe-&gt;Reset();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_OidEnumerator_System_Collections_IEnumerator_Current\">\r\n    \r\n            <a id=\"System_Security_Cryptography_OidEnumerator_System_Collections_IEnumerator_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerator.Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object in an <a class=\"xref\" href=\"system.security.cryptography.oidcollection\" data-linktype=\"relative-path\">OidCollection</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.IEnumerator.Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.security.cryptography.oid\" data-linktype=\"relative-path\">Oid</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.OidEnumerator.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.OidEnumerator.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.OidEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.OidEnumerator.Current\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.OidEnumerator.MoveNext\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.OidEnumerator.Reset\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.OidEnumerator.IEnumerator.Current\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ff12992b-1f16-a577-0c50-872e3be2ef49\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the ability to navigate through an  object. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.OidEnumerator\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.OidEnumerator.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.OidEnumerator.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.OidEnumerator","System.Security.Cryptography.OidEnumerator.Current","System.Security.Cryptography.OidEnumerator.MoveNext","System.Security.Cryptography.OidEnumerator.Reset","System.Security.Cryptography.OidEnumerator.IEnumerator.Current"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.OidEnumerator","System::Security::Cryptography::OidEnumerator","System.Security.Cryptography.OidEnumerator.Current","System::Security::Cryptography::OidEnumerator::Current","System.Security.Cryptography.OidEnumerator.MoveNext","System::Security::Cryptography::OidEnumerator::MoveNext","System.Security.Cryptography.OidEnumerator.Reset","System::Security::Cryptography::OidEnumerator::Reset","System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current","System::Security::Cryptography::OidEnumerator::System#Collections#IEnumerator#Current"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ff12992b-1f16-a577-0c50-872e3be2ef49","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/OidEnumerator.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OidEnumerator class | Microsoft Docs","_op_ogTitle":"OidEnumerator class","description":"Provides the ability to navigate through an  object. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.OidEnumerator","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.oidenumerator","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.oidenumerator","fileRelativePath":"System.Security.Cryptography.OidEnumerator.html"},"themesRelativePathToOutputRoot":"_themes/"}