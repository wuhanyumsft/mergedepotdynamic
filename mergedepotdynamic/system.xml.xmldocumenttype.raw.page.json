{"content":"    \r\n    <h1 id=\"System_Xml_XmlDocumentType\">\r\n      <span class=\"lang-csharp\">XmlDocumentType</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the document type declaration.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlDocumentType : System.Xml.XmlLinkedNode</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmllinkednode\" data-linktype=\"relative-path\">System.Xml.XmlLinkedNode</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlDocumentType</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmllinkednode#System_Xml_XmlLinkedNode_NextSibling\" data-linktype=\"relative-path\">NextSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmllinkednode#System_Xml_XmlLinkedNode_PreviousSibling\" data-linktype=\"relative-path\">PreviousSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_AppendChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">AppendChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_BaseURI\" data-linktype=\"relative-path\">BaseURI</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ChildNodes\" data-linktype=\"relative-path\">ChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_CreateNavigator\" data-linktype=\"relative-path\">CreateNavigator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_FirstChild\" data-linktype=\"relative-path\">FirstChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetNamespaceOfPrefix_System_String_\" data-linktype=\"relative-path\">GetNamespaceOfPrefix(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetPrefixOfNamespace_System_String_\" data-linktype=\"relative-path\">GetPrefixOfNamespace(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_HasChildNodes\" data-linktype=\"relative-path\">HasChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InnerText\" data-linktype=\"relative-path\">InnerText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InnerXml\" data-linktype=\"relative-path\">InnerXml</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertAfter_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">InsertAfter(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertBefore_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">InsertBefore(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_\" data-linktype=\"relative-path\">Item(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_System_String_\" data-linktype=\"relative-path\">Item(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_LastChild\" data-linktype=\"relative-path\">LastChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_NamespaceURI\" data-linktype=\"relative-path\">NamespaceURI</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Normalize\" data-linktype=\"relative-path\">Normalize()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_OuterXml\" data-linktype=\"relative-path\">OuterXml</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_OwnerDocument\" data-linktype=\"relative-path\">OwnerDocument</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ParentNode\" data-linktype=\"relative-path\">ParentNode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Prefix\" data-linktype=\"relative-path\">Prefix</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PrependChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">PrependChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousText\" data-linktype=\"relative-path\">PreviousText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveAll\" data-linktype=\"relative-path\">RemoveAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveChild_System_Xml_XmlNode_\" data-linktype=\"relative-path\">RemoveChild(XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ReplaceChild_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"relative-path\">ReplaceChild(XmlNode,XmlNode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SchemaInfo\" data-linktype=\"relative-path\">SchemaInfo</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_\" data-linktype=\"relative-path\">SelectNodes(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectNodes(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_\" data-linktype=\"relative-path\">SelectSingleNode(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectSingleNode(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Supports_System_String_System_String_\" data-linktype=\"relative-path\">Supports(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_ICloneable_Clone\" data-linktype=\"relative-path\">ICloneable.Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Value\" data-linktype=\"relative-path\">Value</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The XmlDocumentType class can be used to return information about a document type declaration. Use the <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateDocumentType_\" data-linktype=\"relative-path\">CreateDocumentType</a> method to create an XmlDocumentType object.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType__ctor_System_String_System_String_System_String_System_String_System_Xml_XmlDocument_\" data-linktype=\"self-bookmark\">XmlDocumentType(String,String,String,String,XmlDocument)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmldocumenttype\" data-linktype=\"relative-path\">XmlDocumentType</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_Entities\" data-linktype=\"self-bookmark\">Entities</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.xml.xmlentity\" data-linktype=\"relative-path\">XmlEntity</a> nodes declared in the document type declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_InternalSubset\" data-linktype=\"self-bookmark\">InternalSubset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_IsReadOnly\" data-linktype=\"self-bookmark\">IsReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the node is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_LocalName\" data-linktype=\"self-bookmark\">LocalName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the local name of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the qualified name of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_NodeType\" data-linktype=\"self-bookmark\">NodeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the current node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_Notations\" data-linktype=\"self-bookmark\">Notations</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.xml.xmlnotation\" data-linktype=\"relative-path\">XmlNotation</a> nodes present in the document type declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_PublicId\" data-linktype=\"self-bookmark\">PublicId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the public identifier on the DOCTYPE declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_SystemId\" data-linktype=\"self-bookmark\">SystemId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the value of the system identifier on the DOCTYPE declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_CloneNode_System_Boolean_\" data-linktype=\"self-bookmark\">CloneNode(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a duplicate of this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_WriteContentTo_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">WriteContentTo(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves all the children of the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. For <code>XmlDocumentType</code> nodes, this method has no effect.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlDocumentType_WriteTo_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">WriteTo(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType__ctor_System_String_System_String_System_String_System_String_System_Xml_XmlDocument_\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlDocumentType(String,String,String,String,XmlDocument)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmldocumenttype\" data-linktype=\"relative-path\">XmlDocumentType</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected XmlDocumentType (string name, string publicId, string systemId, string internalSubset, System.Xml.XmlDocument doc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The qualified name; see the <span class=\"xref\">stem.Xml.XmlDocumentType.Name*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>publicId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The public identifier; see the <span class=\"xref\">stem.Xml.XmlDocumentType.PublicId*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>systemId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The system identifier; see the <span class=\"xref\">stem.Xml.XmlDocumentType.SystemId*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>internalSubset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The DTD internal subset; see the <span class=\"xref\">stem.Xml.XmlDocumentType.InternalSubset*</span> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>doc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parent document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not instantiate an <a class=\"xref\" href=\"system.xml.xmldocumenttype\" data-linktype=\"relative-path\">XmlDocumentType</a> directly; instead, use members such as <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_DocumentType_\" data-linktype=\"relative-path\">DocumentType</a> to obtain one.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_Entities\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_Entities_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Entities</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.xml.xmlentity\" data-linktype=\"relative-path\">XmlEntity</a> nodes declared in the document type declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlNamedNodeMap Entities { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnamednodemap\" data-linktype=\"relative-path\">XmlNamedNodeMap</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlnamednodemap\" data-linktype=\"relative-path\">XmlNamedNodeMap</a> containing the <code>XmlEntity</code> nodes. The returned <code>XmlNamedNodeMap</code> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The order in which the entities are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information about the entities declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlEntity#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n     XmlDocument doc = new XmlDocument();\n     doc.Load(filename);\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;);     \n     XmlNamedNodeMap nMap = doc.DocumentType.Entities;\n     DisplayEntities(nMap);\n  }\n \n  public static void DisplayEntities(XmlNamedNodeMap nMap)\n  {    \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlEntity ent = (XmlEntity) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, ent.NodeType);\n        Console.Write(&quot;{0} &quot;, ent.Name);\n        Console.Write(&quot;{0} &quot;, ent.NotationName);\n        Console.Write(&quot;{0} &quot;, ent.PublicId);\n        Console.Write(&quot;{0} &quot;, ent.SystemId);\n        Console.WriteLine();\n     }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlEntity#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\npublic:\n   static void DisplayEntities( XmlNamedNodeMap^ nMap )\n   {\n      for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n      {\n         XmlEntity^ ent = dynamic_cast&lt;XmlEntity^&gt;(nMap-&gt;Item( i ));\n         Console::Write( &quot; {0} &quot;, ent-&gt;NodeType );\n         Console::Write( &quot; {0} &quot;, ent-&gt;Name );\n         Console::Write( &quot; {0} &quot;, ent-&gt;NotationName );\n         Console::Write( &quot; {0} &quot;, ent-&gt;PublicId );\n         Console::Write( &quot; {0} &quot;, ent-&gt;SystemId );\n         Console::WriteLine();\n\n      }\n   }\n\n};\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all entities...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Entities;\n   Sample^ MySample = gcnew Sample;\n   MySample-&gt;DisplayEntities( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlEntity#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n      \n     Dim doc as XmlDocument = new XmlDocument()\n     doc.Load(filename)\n \n     Console.WriteLine(&quot;Display information on all entities...&quot;)     \n     Dim nMap as XmlNamedNodeMap = doc.DocumentType.Entities\n     DisplayEntities(nMap)\n  end sub\n \n  public shared sub DisplayEntities(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim ent as XmlEntity = CType(nMap.Item(i), XmlEntity)\n        Console.Write(&quot;{0} &quot;, ent.NodeType)\n        Console.Write(&quot;{0} &quot;, ent.Name)\n        Console.Write(&quot;{0} &quot;, ent.NotationName)\n        Console.Write(&quot;{0} &quot;, ent.PublicId)\n        Console.Write(&quot;{0} &quot;, ent.SystemId)\n        Console.WriteLine()\n     next\n  end sub\nend class\n</code></pre><p> The example uses the file <code>doment.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlEntity#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_InternalSubset\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_InternalSubset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InternalSubset</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the document type definition (DTD) internal subset on the DOCTYPE declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string InternalSubset { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The DTD internal subset on the DOCTYPE. If there is no DTD internal subset, String.Empty is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information about the DocumentType node.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDocumentType.Name Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create the XmlDocument.\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot;\n   &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot;\n   &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot;\n   &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot;\n   &quot;&lt;/book&gt;&quot; );\n   \n   // Display information on the DocumentType node.\n   XmlDocumentType^ doctype = doc-&gt;DocumentType;\n   Console::WriteLine( &quot;Name of the document type:  {0}&quot;, doctype-&gt;Name );\n   Console::WriteLine( &quot;The internal subset of the document type:  {0}&quot;, doctype-&gt;InternalSubset );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlDocumentType.Name Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n    // Create the XmlDocument.\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot; +\n                &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);\n\n    // Display information on the DocumentType node.\n    XmlDocumentType doctype = doc.DocumentType;\n    Console.WriteLine(&quot;Name of the document type:  {0}&quot;, doctype.Name);\n    Console.WriteLine(&quot;The internal subset of the document type:  {0}&quot;, doctype.InternalSubset);\n\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDocumentType.Name Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n    Public Shared Sub Main()\n        &#39; Create the XmlDocument.\n        Dim doc As New XmlDocument()\n        doc.LoadXml(&quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot; &amp; _\n                    &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                    &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                    &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot; &amp; _\n                    &quot;&lt;/book&gt;&quot;)\n        \n        &#39; Display information on the DocumentType node.\n        Dim doctype As XmlDocumentType = doc.DocumentType\n        Console.WriteLine(&quot;Name of the document type:  {0}&quot;, doctype.Name)\n        Console.WriteLine(&quot;The internal subset of the document type:  {0}&quot;, doctype.InternalSubset)\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_IsReadOnly\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_IsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the node is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsReadOnly { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the node is read-only; otherwise <code>false</code>.  </p>\n<p> Because DocumentType nodes are read-only, this property always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A read-only node is one whose properties, attributes, or children cannot be changed. However, you can remove a read-only node from the tree and insert it somewhere else.  </p>\n<p> You can remove a <code>XmlDocumentType</code> from a document and reinsert it back into the document as long as the document does not have an element node. Once a document has a root element, its <code>XmlDocumentType</code> cannot be changed.  </p>\n<p> This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information about the DocumentType node.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDocumentType.IsReadOnly Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create the XmlDocument.\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot;\n   &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot;\n   &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot;\n   &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot;\n   &quot;&lt;/book&gt;&quot; );\n   \n   // Check if the node is read-only.\n   if ( doc-&gt;DocumentType-&gt;IsReadOnly )\n      Console::WriteLine( &quot;Document type nodes are always read-only&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDocumentType.IsReadOnly Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n    Public Shared Sub Main()\n        &#39; Create the XmlDocument.\n        Dim doc As New XmlDocument()\n        doc.LoadXml(&quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot; &amp; _\n                    &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                    &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                    &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot; &amp; _\n                    &quot;&lt;/book&gt;&quot;)\n        \n        Dim doctype As XmlDocumentType = doc.DocumentType\n        \n        &#39; Determine whether the node is read-only.\n        If doctype.IsReadOnly Then\n            Console.WriteLine(&quot;Document type nodes are always read-only&quot;)\n        End If \n    End Sub &#39;Main\nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlDocumentType.IsReadOnly Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n    // Create the XmlDocument.\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot; +\n                &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);\n\n    // Determine whether the node is read-only.\n    if (doc.DocumentType.IsReadOnly)\n       Console.WriteLine(&quot;Document type nodes are always read-only&quot;);\n\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_LocalName\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_LocalName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the local name of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string LocalName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>For DocumentType nodes, this property returns the name of the document type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_Name\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the qualified name of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>For DocumentType nodes, this property returns the name of the document type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information about the DocumentType node.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlDocumentType.Name Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create the XmlDocument.\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot;\n   &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot;\n   &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot;\n   &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot;\n   &quot;&lt;/book&gt;&quot; );\n   \n   // Display information on the DocumentType node.\n   XmlDocumentType^ doctype = doc-&gt;DocumentType;\n   Console::WriteLine( &quot;Name of the document type:  {0}&quot;, doctype-&gt;Name );\n   Console::WriteLine( &quot;The internal subset of the document type:  {0}&quot;, doctype-&gt;InternalSubset );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlDocumentType.Name Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n    // Create the XmlDocument.\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot; +\n                &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);\n\n    // Display information on the DocumentType node.\n    XmlDocumentType doctype = doc.DocumentType;\n    Console.WriteLine(&quot;Name of the document type:  {0}&quot;, doctype.Name);\n    Console.WriteLine(&quot;The internal subset of the document type:  {0}&quot;, doctype.InternalSubset);\n\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlDocumentType.Name Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n    Public Shared Sub Main()\n        &#39; Create the XmlDocument.\n        Dim doc As New XmlDocument()\n        doc.LoadXml(&quot;&lt;!DOCTYPE book [&lt;!ENTITY h &#39;hardcover&#39;&gt;]&gt;&quot; &amp; _\n                    &quot;&lt;book genre=&#39;novel&#39; ISBN=&#39;1-861001-57-5&#39;&gt;&quot; &amp; _\n                    &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                    &quot;&lt;style&gt;&amp;h;&lt;/style&gt;&quot; &amp; _\n                    &quot;&lt;/book&gt;&quot;)\n        \n        &#39; Display information on the DocumentType node.\n        Dim doctype As XmlDocumentType = doc.DocumentType\n        Console.WriteLine(&quot;Name of the document type:  {0}&quot;, doctype.Name)\n        Console.WriteLine(&quot;The internal subset of the document type:  {0}&quot;, doctype.InternalSubset)\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_NodeType\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_NodeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NodeType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the current node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNodeType NodeType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodetype\" data-linktype=\"relative-path\">XmlNodeType</a></div>\r\n                  </div>\r\n                  <p>For DocumentType nodes, this value is XmlNodeType.DocumentType.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_Notations\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_Notations_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Notations</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.xml.xmlnotation\" data-linktype=\"relative-path\">XmlNotation</a> nodes present in the document type declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.XmlNamedNodeMap Notations { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnamednodemap\" data-linktype=\"relative-path\">XmlNamedNodeMap</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlnamednodemap\" data-linktype=\"relative-path\">XmlNamedNodeMap</a> containing the <code>XmlNotation</code> nodes. The returned <code>XmlNamedNodeMap</code> is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The order in which the notations are returned is not based on the order in which these items may appear in the document. The order is also not guaranteed to be the same between similar documents, or between different implementations or versions of the class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information about the notations declared in the XML document.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlNotation#1\">using System;\nusing System.IO;\nusing System.Xml;\n \npublic class Sample\n{\n  private const String filename = &quot;doment.xml&quot;;\n \n  public static void Main()\n  {      \n    XmlDocument doc = new XmlDocument();\n    doc.Load(filename);\n\n    Console.WriteLine(&quot;Display information on all notations...&quot;);     \n    XmlNamedNodeMap nMap = doc.DocumentType.Notations;\n    DisplayNotations(nMap);      \n  }\n \n  public static void DisplayNotations(XmlNamedNodeMap nMap)\n  {   \n     for (int i=0; i &lt; nMap.Count; i++)\n     {\n        XmlNotation note = (XmlNotation) nMap.Item(i);\n        Console.Write(&quot;{0} &quot;, note.NodeType);\n        Console.Write(&quot;{0} &quot;, note.Name);\n        Console.Write(&quot;{0} &quot;, note.PublicId);\n        Console.Write(&quot;{0} &quot;, note.SystemId);\n        Console.WriteLine();\n    }\n  }            \n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlNotation#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nvoid DisplayNotations( XmlNamedNodeMap^ nMap )\n{\n   for ( int i = 0; i &lt; nMap-&gt;Count; i++ )\n   {\n      XmlNotation^ note = dynamic_cast&lt;XmlNotation^&gt;(nMap-&gt;Item( i ));\n      Console::Write( &quot; {0} &quot;, note-&gt;NodeType );\n      Console::Write( &quot; {0} &quot;, note-&gt;Name );\n      Console::Write( &quot; {0} &quot;, note-&gt;PublicId );\n      Console::Write( &quot; {0} &quot;, note-&gt;SystemId );\n      Console::WriteLine();\n\n   }\n}\n\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;doment.xml&quot; );\n   Console::WriteLine( &quot;Display information on all notations...&quot; );\n   XmlNamedNodeMap^ nMap = doc-&gt;DocumentType-&gt;Notations;\n   DisplayNotations( nMap );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlNotation#1\">Imports System\nImports System.IO\nImports System.Xml\n \npublic class Sample\n\n  private const filename as String = &quot;doment.xml&quot;\n \n  public shared sub Main()\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.Load(filename)\n\n    Console.WriteLine(&quot;Display information on all notations...&quot;)     \n    Dim nMap as XmlNamedNodeMap = doc.DocumentType.Notations\n    DisplayNotations(nMap)      \n  end sub\n \n  public shared sub DisplayNotations(nMap as XmlNamedNodeMap)\n     Dim i as integer   \n     for i = 0 to nMap.Count - 1\n        Dim note as XmlNotation = CType(nMap.Item(i), XmlNotation)\n        Console.Write(&quot;{0} &quot;, note.NodeType)\n        Console.Write(&quot;{0} &quot;, note.Name)\n        Console.Write(&quot;{0} &quot;, note.PublicId)\n        Console.Write(&quot;{0} &quot;, note.SystemId)\n        Console.WriteLine()\n     next\n  end sub            \nend class\n</code></pre><p> The example uses the file <code>doment.xml</code> as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlNotation#2\">&lt;!DOCTYPE doc [\n\n  &lt;!ELEMENT doc ANY&gt;\n \n  &lt;!NOTATION w SYSTEM &quot;wine.exe&quot;&gt;\n  &lt;!NOTATION v PUBLIC &quot;vine.exe&quot;&gt;\n\n  &lt;!NOTATION jpg PUBLIC &quot;Jpeg picture format&quot;&gt;\n  &lt;!NOTATION gif SYSTEM &quot;Gif picture format&quot;&gt;\n\n  &lt;!ENTITY wn PUBLIC &quot;http://www.cohowinery.com&quot; &quot;coho.exe&quot; NDATA w&gt;\n  &lt;!ENTITY vn SYSTEM &quot;http://www.cohovineyard.com&quot; NDATA v&gt;\n  &lt;!ENTITY mytxt &quot;Text Sample&quot;&gt;\n\n  &lt;!ATTLIST doc \n        src     ENTITY         #IMPLIED\n        srcs    ENTITIES       #IMPLIED\n        jpgPic  NOTATION (jpg) #IMPLIED\n        gifPic  NOTATION (gif) #REQUIRED&gt;\n]&gt;\n\n&lt;doc jpgPic=&quot;jpg&quot; gifPic=&quot;gif&quot; srcs=&quot;vn wn&quot;&gt;\n    something\n&lt;/doc&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_PublicId\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_PublicId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PublicId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the public identifier on the DOCTYPE declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PublicId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The public identifier on the DOCTYPE. If there is no public identifier, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_SystemId\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_SystemId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SystemId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the value of the system identifier on the DOCTYPE declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string SystemId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The system identifier on the DOCTYPE. If there is no system identifier, <code>null</code> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_CloneNode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_CloneNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneNode(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a duplicate of this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode CloneNode (bool deep);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>deep</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to recursively clone the subtree under the specified node; <code>false</code> to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a></div>\r\n                  </div>\r\n                  <p>The cloned node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method serves as a copy constructor for nodes. The cloned node has no parent (<a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ParentNode_\" data-linktype=\"relative-path\">ParentNode</a> returns <code>null</code>).  </p>\n<p> To see how this method behaves with other node types, see <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_CloneNode_\" data-linktype=\"relative-path\">CloneNode</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_WriteContentTo_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_WriteContentTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteContentTo(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Saves all the children of the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>. For <code>XmlDocumentType</code> nodes, this method has no effect.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteContentTo (System.Xml.XmlWriter w);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlWriter</code> to which you want to save.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlDocumentType_WriteTo_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlDocumentType_WriteTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteTo(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Saves the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteTo (System.Xml.XmlWriter w);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlWriter</code> to which you want to save.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlDocumentType.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlDocumentType.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.CloneNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.Entities\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.InternalSubset\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.IsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.LocalName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.Name\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.NodeType\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.Notations\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.PublicId\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.SystemId\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.WriteContentTo\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlDocumentType.WriteTo\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"aa62c888-afea-eae1-7b86-5e5dfa89698c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the document type declaration.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlDocumentType\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlDocumentType.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlDocumentType.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlDocumentType","System.Xml.XmlDocumentType..ctor","System.Xml.XmlDocumentType.CloneNode","System.Xml.XmlDocumentType.Entities","System.Xml.XmlDocumentType.InternalSubset","System.Xml.XmlDocumentType.IsReadOnly","System.Xml.XmlDocumentType.LocalName","System.Xml.XmlDocumentType.Name","System.Xml.XmlDocumentType.NodeType","System.Xml.XmlDocumentType.Notations","System.Xml.XmlDocumentType.PublicId","System.Xml.XmlDocumentType.SystemId","System.Xml.XmlDocumentType.WriteContentTo","System.Xml.XmlDocumentType.WriteTo"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlDocumentType","System::Xml::XmlDocumentType","System.Xml.XmlDocumentType.#ctor","System::Xml::XmlDocumentType::#ctor","System.Xml.XmlDocumentType.CloneNode","System::Xml::XmlDocumentType::CloneNode","System.Xml.XmlDocumentType.Entities","System::Xml::XmlDocumentType::Entities","System.Xml.XmlDocumentType.InternalSubset","System::Xml::XmlDocumentType::InternalSubset","System.Xml.XmlDocumentType.IsReadOnly","System::Xml::XmlDocumentType::IsReadOnly","System.Xml.XmlDocumentType.LocalName","System::Xml::XmlDocumentType::LocalName","System.Xml.XmlDocumentType.Name","System::Xml::XmlDocumentType::Name","System.Xml.XmlDocumentType.NodeType","System::Xml::XmlDocumentType::NodeType","System.Xml.XmlDocumentType.Notations","System::Xml::XmlDocumentType::Notations","System.Xml.XmlDocumentType.PublicId","System::Xml::XmlDocumentType::PublicId","System.Xml.XmlDocumentType.SystemId","System::Xml::XmlDocumentType::SystemId","System.Xml.XmlDocumentType.WriteContentTo","System::Xml::XmlDocumentType::WriteContentTo","System.Xml.XmlDocumentType.WriteTo","System::Xml::XmlDocumentType::WriteTo"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"aa62c888-afea-eae1-7b86-5e5dfa89698c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlDocumentType.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlDocumentType class | Microsoft Docs","_op_ogTitle":"XmlDocumentType class","description":"Represents the document type declaration.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlDocumentType","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmldocumenttype","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmldocumenttype","fileRelativePath":"System.Xml.XmlDocumentType.html"},"themesRelativePathToOutputRoot":"_themes/"}