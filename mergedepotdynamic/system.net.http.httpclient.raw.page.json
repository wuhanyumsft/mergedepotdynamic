{"content":"    \r\n    <h1 id=\"System_Net_Http_HttpClient\">\r\n      <span class=\"lang-csharp\">HttpClient</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class HttpClient : System.Net.Http.HttpMessageInvoker</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.http.httpmessageinvoker\" data-linktype=\"relative-path\">System.Net.Http.HttpMessageInvoker</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpClient</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.http.httpmessageinvoker#System_Net_Http_HttpMessageInvoker_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The HttpClient class instance acts as a session to send HTTP requests. An HttpClient instance is a collection of settings applied to all requests executed by that instance. In addition, every HttpClient instance uses its own connection pool, isolating its requests from requests executed by other HttpClient instances.  </p>\n<p> The HttpClient also acts as a base class for more specific HTTP clients. An example would be a FacebookHttpClient providing additional methods specific to a Facebook web service (a GetFriends method, for instance).  </p>\n<p> By default, <a class=\"xref\" href=\"system.net.httpwebrequest\" data-linktype=\"relative-path\">HttpWebRequest</a> will be used to send requests to the server. This behavior can be modified by specifying a different channel in one of the constructor overloads taking a <a class=\"xref\" href=\"system.net.http.httpmessagehandler\" data-linktype=\"relative-path\">HttpMessageHandler</a> instance as parameter. If features like authentication or caching are required, <a class=\"xref\" href=\"system.net.http.webrequesthandler\" data-linktype=\"relative-path\">WebRequestHandler</a> can be used to configure settings and the instance can be passed to the constructor. The returned handler can be passed to one of the constructor overloads taking a <a class=\"xref\" href=\"system.net.http.httpmessagehandler\" data-linktype=\"relative-path\">HttpMessageHandler</a> parameter.  </p>\n<p> If an app using HttpClient and related classes in the  <a class=\"xref\" href=\"system.net.http\" data-linktype=\"relative-path\">System.Net.Http</a> namespace intends to download large amounts of data (50 megabytes or more), then the app should stream those downloads and not use the default buffering. If the default buffering is used the client memory usage will get very large, potentially resulting in substantially reduced performance.  </p>\n<p> The following methods are thread safe:  </p>\n<ol>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_CancelPendingRequests_\" data-linktype=\"relative-path\">CancelPendingRequests</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_DeleteAsync_\" data-linktype=\"relative-path\">DeleteAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_GetAsync_\" data-linktype=\"relative-path\">GetAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_GetByteArrayAsync_\" data-linktype=\"relative-path\">GetByteArrayAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_GetStreamAsync_\" data-linktype=\"relative-path\">GetStreamAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_GetStringAsync_\" data-linktype=\"relative-path\">GetStringAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_PostAsync_\" data-linktype=\"relative-path\">PostAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_PutAsync_\" data-linktype=\"relative-path\">PutAsync</a>  \n</li>\n<li><a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_SendAsync_\" data-linktype=\"relative-path\">SendAsync</a>  \n\n<p>HttpClient is intended to be instantiated once and re-used throughout the life of an application. Instantiating an HttpClient class for every request will exhaust the number of sockets available under heavy loads. This will result in SocketException errors. Below is an example using HttpClient correctly.  </p>\n</li>\n</ol>\n<pre><code class=\"lang-c#\">public class GoodController : ApiController  \n{  \n    // OK  \n    private static readonly HttpClient HttpClient;  \n\n    static GoodController()  \n    {  \n        HttpClient = new HttpClient();  \n    }  \n}  \n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient__ctor\" data-linktype=\"self-bookmark\">HttpClient()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient__ctor_System_Net_Http_HttpMessageHandler_\" data-linktype=\"self-bookmark\">HttpClient(HttpMessageHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> class with a specific handler.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient__ctor_System_Net_Http_HttpMessageHandler_System_Boolean_\" data-linktype=\"self-bookmark\">HttpClient(HttpMessageHandler,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> class with a specific handler.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_BaseAddress\" data-linktype=\"self-bookmark\">BaseAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_DefaultRequestHeaders\" data-linktype=\"self-bookmark\">DefaultRequestHeaders</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the headers which should be sent with each request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_MaxResponseContentBufferSize\" data-linktype=\"self-bookmark\">MaxResponseContentBufferSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the maximum number of bytes to buffer when reading the response content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_Timeout\" data-linktype=\"self-bookmark\">Timeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the timespan to wait before the request times out.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_CancelPendingRequests\" data-linktype=\"self-bookmark\">CancelPendingRequests()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancel all pending requests on this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_DeleteAsync_System_String_\" data-linktype=\"self-bookmark\">DeleteAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a DELETE request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_DeleteAsync_System_Uri_\" data-linktype=\"self-bookmark\">DeleteAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a DELETE request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_DeleteAsync_System_String_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">DeleteAsync(String,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_DeleteAsync_System_Uri_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">DeleteAsync(Uri,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> and optionally disposes of the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_String_\" data-linktype=\"self-bookmark\">GetAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_Uri_\" data-linktype=\"self-bookmark\">GetAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_String_System_Net_Http_HttpCompletionOption_\" data-linktype=\"self-bookmark\">GetAsync(String,HttpCompletionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_String_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">GetAsync(String,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_Uri_System_Net_Http_HttpCompletionOption_\" data-linktype=\"self-bookmark\">GetAsync(Uri,HttpCompletionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_Uri_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">GetAsync(Uri,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_String_System_Net_Http_HttpCompletionOption_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">GetAsync(String,HttpCompletionOption,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetAsync_System_Uri_System_Net_Http_HttpCompletionOption_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">GetAsync(Uri,HttpCompletionOption,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetByteArrayAsync_System_String_\" data-linktype=\"self-bookmark\">GetByteArrayAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetByteArrayAsync_System_Uri_\" data-linktype=\"self-bookmark\">GetByteArrayAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetStreamAsync_System_String_\" data-linktype=\"self-bookmark\">GetStreamAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetStreamAsync_System_Uri_\" data-linktype=\"self-bookmark\">GetStreamAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetStringAsync_System_String_\" data-linktype=\"self-bookmark\">GetStringAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_GetStringAsync_System_Uri_\" data-linktype=\"self-bookmark\">GetStringAsync(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PostAsync_System_String_System_Net_Http_HttpContent_\" data-linktype=\"self-bookmark\">PostAsync(String,HttpContent)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a POST request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PostAsync_System_Uri_System_Net_Http_HttpContent_\" data-linktype=\"self-bookmark\">PostAsync(Uri,HttpContent)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a POST request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PostAsync_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">PostAsync(String,HttpContent,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a POST request with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PostAsync_System_Uri_System_Net_Http_HttpContent_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">PostAsync(Uri,HttpContent,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a POST request with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PutAsync_System_String_System_Net_Http_HttpContent_\" data-linktype=\"self-bookmark\">PutAsync(String,HttpContent)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a PUT request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PutAsync_System_Uri_System_Net_Http_HttpContent_\" data-linktype=\"self-bookmark\">PutAsync(Uri,HttpContent)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a PUT request to the specified Uri as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PutAsync_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">PutAsync(String,HttpContent,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a PUT request with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_PutAsync_System_Uri_System_Net_Http_HttpContent_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">PutAsync(Uri,HttpContent,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send a PUT request with a cancellation token as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_\" data-linktype=\"self-bookmark\">SendAsync(HttpRequestMessage)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_System_Net_Http_HttpCompletionOption_\" data-linktype=\"self-bookmark\">SendAsync(HttpRequestMessage,HttpCompletionOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">SendAsync(HttpRequestMessage,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_System_Net_Http_HttpCompletionOption_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient__ctor\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpClient()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HttpClient ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient__ctor_System_Net_Http_HttpMessageHandler_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpClient(HttpMessageHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> class with a specific handler.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HttpClient (System.Net.Http.HttpMessageHandler handler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpmessagehandler\" data-linktype=\"relative-path\">HttpMessageHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP handler stack to use for sending requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>null</code> is specified for <code>handler</code> parameter, the <a class=\"xref\" href=\"system.net.http.webrequesthandler\" data-linktype=\"relative-path\">WebRequestHandler</a> is used as transport handler.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient__ctor_System_Net_Http_HttpMessageHandler_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpClient(HttpMessageHandler,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> class with a specific handler.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HttpClient (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpmessagehandler\" data-linktype=\"relative-path\">HttpMessageHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.http.httpmessagehandler\" data-linktype=\"relative-path\">HttpMessageHandler</a> responsible for processing the HTTP response messages.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposeHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the inner handler should be disposed of by Dispose(), <code>false</code> if you intend to reuse the inner handler.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_BaseAddress\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_BaseAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri BaseAddress { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>The base address of Uniform Resource Identifier (URI) of the Internet resource used when sending requests.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When sending a <a class=\"xref\" href=\"system.net.http.httprequestmessage\" data-linktype=\"relative-path\">HttpRequestMessage</a> with a relative Uri, the message Uri will be added to the BaseAddress property to create an absolute Uri.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_DefaultRequestHeaders\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_DefaultRequestHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultRequestHeaders</div>        \r\n          </div>\r\n    \r\n            <p>Gets the headers which should be sent with each request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Http.Headers.HttpRequestHeaders DefaultRequestHeaders { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.headers.httprequestheaders\" data-linktype=\"relative-path\">HttpRequestHeaders</a></div>\r\n                  </div>\r\n                  <p>The headers which should be sent with each request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Headers set on this property don&#39;t need to be set on request messages again.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_MaxResponseContentBufferSize\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_MaxResponseContentBufferSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxResponseContentBufferSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the maximum number of bytes to buffer when reading the response content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long MaxResponseContentBufferSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The maximum number of bytes to buffer when reading the response content. The default value for this property is 2 gigabytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The size specified is less than or equal to zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An operation has already been started on the current instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An app can set the MaxResponseContentBufferSize property to a lower value to limit the size of the response to buffer when reading the response. If the size of the response content is greater than the  MaxResponseContentBufferSize property, an exception is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_Timeout\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_Timeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Timeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the timespan to wait before the request times out.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TimeSpan Timeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </div>\r\n                  <p>The timespan to wait before the request times out.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The timeout specified is less than or equal to zero and is not <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_InfiniteTimeSpan\" data-linktype=\"relative-path\">InfiniteTimeSpan</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An operation has already been started on the current instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The current instance has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default value is 100,000 milliseconds (100 seconds).  </p>\n<p> To set an infinite timeout, set the property value to <a class=\"xref\" href=\"system.threading.timeout#System_Threading_Timeout_InfiniteTimeSpan\" data-linktype=\"relative-path\">InfiniteTimeSpan</a>.  </p>\n<p> A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set Timeout to a value less than 15 seconds, it may take 15 seconds or more before a <a class=\"xref\" href=\"system.net.webexception\" data-linktype=\"relative-path\">WebException</a> is thrown to indicate a timeout on your request.  </p>\n<p> The same timeout will apply for all requests using this <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.  You may also set different timeouts for individual requests using a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> on a task. Note that only the shorter of the two timeouts will apply.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_CancelPendingRequests\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_CancelPendingRequests_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelPendingRequests()</div>        \r\n          </div>\r\n    \r\n            <p>Cancel all pending requests on this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CancelPendingRequests ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After calling this method, the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance can still be used to execute additional requests.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_DeleteAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_DeleteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Send a DELETE request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_DeleteAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_DeleteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Send a DELETE request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_DeleteAsync_System_String_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_DeleteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteAsync(String,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (string requestUri, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_DeleteAsync_System_Uri_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_DeleteAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeleteAsync(Uri,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a DELETE request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; DeleteAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> and optionally disposes of the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to releases only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes the protected <code>Dispose(Boolean)</code> method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes <code>Dispose</code> with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> references. This method invokes the <code>Dispose()</code> method of each referenced object.  </p>\n<p> When this method is called, the <a class=\"xref\" href=\"system.net.http.httpclient#System_Net_Http_HttpClient_CancelPendingRequests_\" data-linktype=\"relative-path\">CancelPendingRequests</a> method is called to abort all pending requests.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_String_System_Net_Http_HttpCompletionOption_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(String,HttpCompletionOption)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>completionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcompletionoption\" data-linktype=\"relative-path\">HttpCompletionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An HTTP completion option value that indicates when the operation should be considered completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete based on the <code>completionOption</code> parameter after the part or all of the response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_String_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(String,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_Uri_System_Net_Http_HttpCompletionOption_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(Uri,HttpCompletionOption)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri with an HTTP completion option as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>completionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcompletionoption\" data-linktype=\"relative-path\">HttpCompletionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An HTTP completion option value that indicates when the operation should be considered completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete based on the <code>completionOption</code> parameter after the part or all of the response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_Uri_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(Uri,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_String_System_Net_Http_HttpCompletionOption_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(String,HttpCompletionOption,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (string requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>completionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcompletionoption\" data-linktype=\"relative-path\">HttpCompletionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An HTTP  completion option value that indicates when the operation should be considered completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete based on the <code>completionOption</code> parameter after the part or all of the response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetAsync_System_Uri_System_Net_Http_HttpCompletionOption_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAsync(Uri,HttpCompletionOption,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri with an HTTP completion option and a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; GetAsync (Uri requestUri, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>completionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcompletionoption\" data-linktype=\"relative-path\">HttpCompletionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An HTTP  completion option value that indicates when the operation should be considered completed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete based on the <code>completionOption</code> parameter after the part or all of the response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetByteArrayAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetByteArrayAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetByteArrayAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (string requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response body is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetByteArrayAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetByteArrayAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetByteArrayAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri and return the response body as a byte array in an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;byte[]&gt; GetByteArrayAsync (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response body is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetStreamAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetStreamAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStreamAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (string requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response body is read. This method does not buffer the stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetStreamAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetStreamAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStreamAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri and return the response body as a stream in an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetStreamAsync (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response body is read. This method does not buffer the stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetStringAsync_System_String_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStringAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (string requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response body is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_GetStringAsync_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_GetStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStringAsync(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Send a GET request to the specified Uri and return the response body as a string in an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;string&gt; GetStringAsync (Uri requestUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response body is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PostAsync_System_String_System_Net_Http_HttpContent_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PostAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PostAsync(String,HttpContent)</div>        \r\n          </div>\r\n    \r\n            <p>Send a POST request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PostAsync_System_Uri_System_Net_Http_HttpContent_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PostAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PostAsync(Uri,HttpContent)</div>        \r\n          </div>\r\n    \r\n            <p>Send a POST request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PostAsync_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PostAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PostAsync(String,HttpContent,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a POST request with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PostAsync_System_Uri_System_Net_Http_HttpContent_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PostAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PostAsync(Uri,HttpContent,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a POST request with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PostAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PutAsync_System_String_System_Net_Http_HttpContent_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PutAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PutAsync(String,HttpContent)</div>        \r\n          </div>\r\n    \r\n            <p>Send a PUT request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PutAsync_System_Uri_System_Net_Http_HttpContent_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PutAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PutAsync(Uri,HttpContent)</div>        \r\n          </div>\r\n    \r\n            <p>Send a PUT request to the specified Uri as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PutAsync_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PutAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PutAsync(String,HttpContent,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a PUT request with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (string requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_PutAsync_System_Uri_System_Net_Http_HttpContent_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_PutAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PutAsync(Uri,HttpContent,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send a PUT request with a cancellation token as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; PutAsync (Uri requestUri, System.Net.Http.HttpContent content, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Uri the request is sent to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcontent\" data-linktype=\"relative-path\">HttpContent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request content sent to the server.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A cancellation token that can be used by other objects or threads to receive notice of cancellation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>requestUri</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete after the whole response (including content) is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(HttpRequestMessage)</div>        \r\n          </div>\r\n    \r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestmessage\" data-linktype=\"relative-path\">HttpRequestMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request message to send.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>request</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete once the entire response including content is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_System_Net_Http_HttpCompletionOption_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(HttpRequestMessage,HttpCompletionOption)</div>        \r\n          </div>\r\n    \r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestmessage\" data-linktype=\"relative-path\">HttpRequestMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request message to send.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>completionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcompletionoption\" data-linktype=\"relative-path\">HttpCompletionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When the operation should complete (as soon as a response is available or after reading the whole response content).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>request</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. Depending on the value of the <code>completionOption</code> parameter, the returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete as soon as a response is available or the entire response including content is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(HttpRequestMessage,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestmessage\" data-linktype=\"relative-path\">HttpRequestMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request message to send.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to cancel operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>request</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete once the entire response including content is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Http_HttpClient_SendAsync_System_Net_Http_HttpRequestMessage_System_Net_Http_HttpCompletionOption_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Net_Http_HttpClient_SendAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Send an HTTP request as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Net.Http.HttpCompletionOption completionOption, System.Threading.CancellationToken cancellationToken);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>request</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestmessage\" data-linktype=\"relative-path\">HttpRequestMessage</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The HTTP request message to send.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>completionOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httpcompletionoption\" data-linktype=\"relative-path\">HttpCompletionOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When the operation should complete (as soon as a response is available or after reading the whole response content).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cancellationToken</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cancellation token to cancel operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task</a>&lt;<a class=\"xref\" href=\"system.net.http.httpresponsemessage\" data-linktype=\"relative-path\">HttpResponseMessage</a>&gt;</div>\r\n                  </div>\r\n                  <p>The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>request</code> was <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The request message was already sent by the <a class=\"xref\" href=\"system.net.http.httpclient\" data-linktype=\"relative-path\">HttpClient</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.http.httprequestexception\" data-linktype=\"relative-path\">HttpRequestException</a></div>\r\n                  </div>\r\n                  <p>The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. Depending on the value of the <code>completionOption</code> parameter, the returned <a class=\"xref\" href=\"system.threading.tasks.task-1\" data-linktype=\"relative-path\">Task&lt;TResult&gt;</a> object will complete as soon as a response is available or the entire response including content is read.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Net.Http.HttpClient.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Http.HttpClient.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.BaseAddress\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.CancelPendingRequests\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.DefaultRequestHeaders\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.DeleteAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.GetAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.GetByteArrayAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.GetStreamAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.GetStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.MaxResponseContentBufferSize\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.PostAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.PutAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.SendAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Http.HttpClient.Timeout\">\r\n<meta name=\"APILocation\" content=\"System.Net.Http.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-02-28 06:06 AM\">\r\n<meta name=\"document_id\" content=\"7f63f291-27a7-c281-90e5-aaddfa72f3f1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Http/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Http.HttpClient\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/417c04fd1daf0cb211ec4909020356fc1fe69260/fulldocset/System.Net.Http.HttpClient.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Http.HttpClient.yml","open_to_public_contributors":true,"api_name":["System.Net.Http.HttpClient","System.Net.Http.HttpClient..ctor","System.Net.Http.HttpClient.BaseAddress","System.Net.Http.HttpClient.CancelPendingRequests","System.Net.Http.HttpClient.DefaultRequestHeaders","System.Net.Http.HttpClient.DeleteAsync","System.Net.Http.HttpClient.Dispose","System.Net.Http.HttpClient.GetAsync","System.Net.Http.HttpClient.GetByteArrayAsync","System.Net.Http.HttpClient.GetStreamAsync","System.Net.Http.HttpClient.GetStringAsync","System.Net.Http.HttpClient.MaxResponseContentBufferSize","System.Net.Http.HttpClient.PostAsync","System.Net.Http.HttpClient.PutAsync","System.Net.Http.HttpClient.SendAsync","System.Net.Http.HttpClient.Timeout"],"api_location":["System.Net.Http.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Http.HttpClient","System::Net::Http::HttpClient","System.Net.Http.HttpClient.#ctor","System::Net::Http::HttpClient::#ctor","System.Net.Http.HttpClient.BaseAddress","System::Net::Http::HttpClient::BaseAddress","System.Net.Http.HttpClient.CancelPendingRequests","System::Net::Http::HttpClient::CancelPendingRequests","System.Net.Http.HttpClient.DefaultRequestHeaders","System::Net::Http::HttpClient::DefaultRequestHeaders","System.Net.Http.HttpClient.DeleteAsync","System::Net::Http::HttpClient::DeleteAsync","System.Net.Http.HttpClient.Dispose","System::Net::Http::HttpClient::Dispose","System.Net.Http.HttpClient.GetAsync","System::Net::Http::HttpClient::GetAsync","System.Net.Http.HttpClient.GetByteArrayAsync","System::Net::Http::HttpClient::GetByteArrayAsync","System.Net.Http.HttpClient.GetStreamAsync","System::Net::Http::HttpClient::GetStreamAsync","System.Net.Http.HttpClient.GetStringAsync","System::Net::Http::HttpClient::GetStringAsync","System.Net.Http.HttpClient.MaxResponseContentBufferSize","System::Net::Http::HttpClient::MaxResponseContentBufferSize","System.Net.Http.HttpClient.PostAsync","System::Net::Http::HttpClient::PostAsync","System.Net.Http.HttpClient.PutAsync","System::Net::Http::HttpClient::PutAsync","System.Net.Http.HttpClient.SendAsync","System::Net::Http::HttpClient::SendAsync","System.Net.Http.HttpClient.Timeout","System::Net::Http::HttpClient::Timeout"],"dev_langs":["csharp"],"updated_at":"2017-02-28 06:06 AM","document_id":"7f63f291-27a7-c281-90e5-aaddfa72f3f1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Http/HttpClient.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpClient class | Microsoft Docs","_op_ogTitle":"HttpClient class","description":"Provides a base class for sending HTTP requests and receiving HTTP responses from a resource identified by a URI.\n","toc_asset_id":"_splitted/System.Net.Http/toc.json","toc_rel":"_splitted/System.Net.Http/toc.json","source_url":"","ms.assetid":"System.Net.Http.HttpClient","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.http.httpclient","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.http.httpclient","fileRelativePath":"System.Net.Http.HttpClient.html"},"themesRelativePathToOutputRoot":"_themes/"}