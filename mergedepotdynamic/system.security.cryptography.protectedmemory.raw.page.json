{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_ProtectedMemory\">\r\n      <span class=\"lang-csharp\">ProtectedMemory</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods for protecting and unprotecting memory. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class ProtectedMemory</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ProtectedMemory</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems. This is a service that is provided by the operating system and does not require additional libraries. It provides encryption for sensitive data in memory.  </p>\n<p> The class consists of two wrappers for the unmanaged DPAPI, [Protect(Byte&lt;xref:System.Security.Cryptography.ProtectedMemory.Protect%2A&gt; and [Unprotect(Byte&lt;xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A&gt;. These two methods can be used to encrypt and decrypt data in memory.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ProtectedMemory_Protect_System_Byte___System_Security_Cryptography_MemoryProtectionScope_\" data-linktype=\"self-bookmark\">Protect(Byte[],MemoryProtectionScope)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Protects the specified data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_ProtectedMemory_Unprotect_System_Byte___System_Security_Cryptography_MemoryProtectionScope_\" data-linktype=\"self-bookmark\">Unprotect(Byte[],MemoryProtectionScope)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Unprotects data in memory that was protected using the <span class=\"xref\">stem.Security.Cryptography.ProtectedMemory.Protect*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ProtectedMemory_Protect_System_Byte___System_Security_Cryptography_MemoryProtectionScope_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ProtectedMemory_Protect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Protect(Byte[],MemoryProtectionScope)</div>        \r\n          </div>\r\n    \r\n            <p>Protects the specified data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array containing data in memory to protect. The array must be a multiple of 16 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.memoryprotectionscope\" data-linktype=\"relative-path\">MemoryProtectionScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the scope of memory protection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p><code>userData</code> must be 16 bytes in length or in multiples of 16 bytes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>userData </code>is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to protect data in memory. Note that the method does not make a copy of the data, but encrypts the byte array in place. The <code>userData</code> parameter must be 16 bytes in length or a multiple of 16 bytes.  </p>\n<p> Support for this method is available in the Windows XP and later operating systems.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use data protection.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.MemoryProtectionSample#1\">using System;\nusing System.Security.Cryptography;\n\npublic class MemoryProtectionSample\n{\n\n\tpublic static void Main()\n\t{\n// Create the original data to be encrypted (The data length should be a multiple of 16).\n\t\t\nbyte [] secret = { 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4 };\n\n// Encrypt the data in memory. The result is stored in the same same array as the original data.\n\t\tProtectedMemory.Protect( secret, MemoryProtectionScope.SameLogon );\n\t\n// Decrypt the data in memory and store in the original array.\n\t\tProtectedMemory.Unprotect( secret, MemoryProtectionScope.SameLogon );\n\t}\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.MemoryProtectionSample#1\">Imports System\nImports System.Security.Cryptography\n\n\n\nPublic Class MemoryProtectionSample\n\n    Public Shared Sub Main()\n        &#39; Create the original data to be encrypted (The data length should be a multiple of 16).\n        Dim secret As Byte() = {1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4}\n\n        &#39; Encrypt the data in memory. The result is stored in the same same array as the original data.\n        ProtectedMemory.Protect(secret, MemoryProtectionScope.SameLogon)\n\n        &#39; Decrypt the data in memory and store in the original array.\n        ProtectedMemory.Unprotect(secret, MemoryProtectionScope.SameLogon)\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.MemoryProtectionSample#1\">#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\n\nint main()\n{\n   \n   // Create the original data to be encrypted (The data length should be a multiple of 16).\n   array&lt;Byte&gt;^secret = {1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4};\n   \n   // Encrypt the data in memory. The result is stored in the same same array as the original data.\n   ProtectedMemory::Protect( secret, MemoryProtectionScope::SameLogon );\n   \n   // Decrypt the data in memory and store in the original array.\n   ProtectedMemory::Unprotect( secret, MemoryProtectionScope::SameLogon );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_ProtectedMemory_Unprotect_System_Byte___System_Security_Cryptography_MemoryProtectionScope_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_ProtectedMemory_Unprotect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unprotect(Byte[],MemoryProtectionScope)</div>        \r\n          </div>\r\n    \r\n            <p>Unprotects data in memory that was protected using the <span class=\"xref\">stem.Security.Cryptography.ProtectedMemory.Protect*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>encryptedData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte array in memory to unencrypt.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scope</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.memoryprotectionscope\" data-linktype=\"relative-path\">MemoryProtectionScope</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the enumeration values that specifies the scope of memory protection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The operating system does not support this method. This method can be used only with the Windows 2000 or later operating systems.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>encryptedData </code>is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p><code>encryptedData </code>is empty.  </p>\n<p> -or-  </p>\n<p> This call was not implemented.  </p>\n<p> -or-  </p>\n<p> NTSTATUS contains an error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to unencrypt data in memory that was encrypted using the <a class=\"xref\" href=\"system.security.cryptography.protectedmemory#System_Security_Cryptography_ProtectedMemory_Protect_\" data-linktype=\"relative-path\">Protect</a> method.  </p>\n<p> Support for this method is available in the Windows XP and later operating systems.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use data protection.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.MemoryProtectionSample#1\">using System;\nusing System.Security.Cryptography;\n\npublic class MemoryProtectionSample\n{\n\n\tpublic static void Main()\n\t{\n// Create the original data to be encrypted (The data length should be a multiple of 16).\n\t\t\nbyte [] secret = { 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4 };\n\n// Encrypt the data in memory. The result is stored in the same same array as the original data.\n\t\tProtectedMemory.Protect( secret, MemoryProtectionScope.SameLogon );\n\t\n// Decrypt the data in memory and store in the original array.\n\t\tProtectedMemory.Unprotect( secret, MemoryProtectionScope.SameLogon );\n\t}\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.MemoryProtectionSample#1\">Imports System\nImports System.Security.Cryptography\n\n\n\nPublic Class MemoryProtectionSample\n\n    Public Shared Sub Main()\n        &#39; Create the original data to be encrypted (The data length should be a multiple of 16).\n        Dim secret As Byte() = {1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4}\n\n        &#39; Encrypt the data in memory. The result is stored in the same same array as the original data.\n        ProtectedMemory.Protect(secret, MemoryProtectionScope.SameLogon)\n\n        &#39; Decrypt the data in memory and store in the original array.\n        ProtectedMemory.Unprotect(secret, MemoryProtectionScope.SameLogon)\n\n    End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Cryptography.MemoryProtectionSample#1\">#using &lt;System.Security.dll&gt;\n\nusing namespace System;\nusing namespace System::Security::Cryptography;\n\nint main()\n{\n   \n   // Create the original data to be encrypted (The data length should be a multiple of 16).\n   array&lt;Byte&gt;^secret = {1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4};\n   \n   // Encrypt the data in memory. The result is stored in the same same array as the original data.\n   ProtectedMemory::Protect( secret, MemoryProtectionScope::SameLogon );\n   \n   // Decrypt the data in memory and store in the original array.\n   ProtectedMemory::Unprotect( secret, MemoryProtectionScope::SameLogon );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.ProtectedMemory.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ProtectedMemory.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ProtectedMemory\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ProtectedMemory.Protect\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.ProtectedMemory.Unprotect\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3b01dacc-9bff-651c-283c-d812b30d0d8b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods for protecting and unprotecting memory. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.ProtectedMemory\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.ProtectedMemory.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.ProtectedMemory.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.ProtectedMemory","System.Security.Cryptography.ProtectedMemory.Protect","System.Security.Cryptography.ProtectedMemory.Unprotect"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.ProtectedMemory","System::Security::Cryptography::ProtectedMemory","System.Security.Cryptography.ProtectedMemory.Protect","System::Security::Cryptography::ProtectedMemory::Protect","System.Security.Cryptography.ProtectedMemory.Unprotect","System::Security::Cryptography::ProtectedMemory::Unprotect"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3b01dacc-9bff-651c-283c-d812b30d0d8b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography/ProtectedMemory.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ProtectedMemory class | Microsoft Docs","_op_ogTitle":"ProtectedMemory class","description":"Provides methods for protecting and unprotecting memory. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography/toc.json","toc_rel":"_splitted/System.Security.Cryptography/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.ProtectedMemory","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.protectedmemory","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.protectedmemory","fileRelativePath":"System.Security.Cryptography.ProtectedMemory.html"},"themesRelativePathToOutputRoot":"_themes/"}