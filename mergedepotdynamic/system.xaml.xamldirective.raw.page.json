{"content":"    \r\n    <h1 id=\"System_Xaml_XamlDirective\">\r\n      <span class=\"lang-csharp\">XamlDirective</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the XamlDirective identifier during processing of member nodes. The identifier is used when the XAML reader is positioned on a <a class=\"xref\" href=\"system.xaml.xamlnodetype\" data-linktype=\"relative-path\">XamlNodeType</a> and <span class=\"xref\">stem.Xaml.XamlMember.IsDirective*</span> is <code>true</code>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XamlDirective : System.Xaml.XamlMember</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">System.Xaml.XamlMember</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XamlDirective</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType\" data-linktype=\"relative-path\">DeclaringType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeferringLoader\" data-linktype=\"relative-path\">DeferringLoader</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DependsOn\" data-linktype=\"relative-path\">DependsOn</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Equals_System_Xaml_XamlMember_\" data-linktype=\"relative-path\">Equals(XamlMember)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Invoker\" data-linktype=\"relative-path\">Invoker</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsAmbient\" data-linktype=\"relative-path\">IsAmbient</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsAttachable\" data-linktype=\"relative-path\">IsAttachable</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsDirective\" data-linktype=\"relative-path\">IsDirective</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsEvent\" data-linktype=\"relative-path\">IsEvent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsNameValid\" data-linktype=\"relative-path\">IsNameValid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadOnly\" data-linktype=\"relative-path\">IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadPublic\" data-linktype=\"relative-path\">IsReadPublic</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown\" data-linktype=\"relative-path\">IsUnknown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWriteOnly\" data-linktype=\"relative-path\">IsWriteOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWritePublic\" data-linktype=\"relative-path\">IsWritePublic</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupValueSerializer\" data-linktype=\"relative-path\">LookupValueSerializer()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_op_Equality_System_Xaml_XamlMember_System_Xaml_XamlMember_\" data-linktype=\"relative-path\">op_Equality(XamlMember,XamlMember)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_op_Inequality_System_Xaml_XamlMember_System_Xaml_XamlMember_\" data-linktype=\"relative-path\">op_Inequality(XamlMember,XamlMember)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_PreferredXamlNamespace\" data-linktype=\"relative-path\">PreferredXamlNamespace</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_SerializationVisibility\" data-linktype=\"relative-path\">SerializationVisibility</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TargetType\" data-linktype=\"relative-path\">TargetType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type\" data-linktype=\"relative-path\">Type</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TypeConverter\" data-linktype=\"relative-path\">TypeConverter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember\" data-linktype=\"relative-path\">UnderlyingMember</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_ValueSerializer\" data-linktype=\"relative-path\">ValueSerializer</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>XamlDirective provides expected values for the XAML type system when the member is a XAML directive. By definition, a XAML directive has characteristics that always return the same results for a subset of the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> properties, and the same XAML type system information is reported for all possible XAML directives. The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> <code>Lookup*</code> virtual members in the XamlDirective class.  </p>\n<p> The following list shows the returned results of a XAML directive for <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> when the member is actually a XamlDirective:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupCustomAttributeProvider_\" data-linktype=\"relative-path\">LookupCustomAttributeProvider</a> is always <code>null</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeferringLoader_\" data-linktype=\"relative-path\">DeferringLoader</a> is always <code>null</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DependsOn_\" data-linktype=\"relative-path\">DependsOn</a> is always <code>null</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsAmbient_\" data-linktype=\"relative-path\">IsAmbient</a> is always <code>false</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsAttachable_\" data-linktype=\"relative-path\">IsAttachable</a> is always <code>false</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsDirective_\" data-linktype=\"relative-path\">IsDirective</a> is always <code>true</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsEvent_\" data-linktype=\"relative-path\">IsEvent</a> is always <code>false</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadOnly_\" data-linktype=\"relative-path\">IsReadOnly</a> is always <code>false</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsReadPublic_\" data-linktype=\"relative-path\">IsReadPublic</a> is always <code>true</code>.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsWritePublic_\" data-linktype=\"relative-path\">IsWritePublic</a> is always <code>true</code>.  </p>\n<p>Also, the internal backing for <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_DeclaringType_\" data-linktype=\"relative-path\">DeclaringType</a> remains unset and returns <code>null</code>.  </p>\n</li>\n</ul>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> XamlDirective is a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> subclass. As with <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>, XamlDirective has security considerations regarding how the XAML type system reports access. See Remarks in <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">XamlDirective(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect <span class=\"xref\">stem.Xaml.XamlMember.IsUnknown*</span> to report <code>true</code> for the directive.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective__ctor_System_Collections_Generic_IEnumerable_System_String__System_String_System_Xaml_XamlType_System_Xaml_Schema_XamlValueConverter_System_ComponentModel_TypeConverter__System_Xaml_Schema_AllowedMemberLocations_\" data-linktype=\"self-bookmark\">XamlDirective(IEnumerable&lt;String&gt;,String,XamlType,XamlValueConverter&lt;TypeConverter&gt;,AllowedMemberLocations)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> class, specifying values for each per-case value of a <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_AllowedLocation\" data-linktype=\"self-bookmark\">AllowedLocation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies the XAML node types where the directive can be specified.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the hash code for this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_GetXamlNamespaces\" data-linktype=\"self-bookmark\">GetXamlNamespaces()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a list of XAML namespaces where this XAML member can exist.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupCustomAttributeProvider\" data-linktype=\"self-bookmark\">LookupCustomAttributeProvider()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a> implementation. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupDeferringLoader\" data-linktype=\"self-bookmark\">LookupDeferringLoader()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used during deferred loading of XAML-declared objects. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupDependsOn\" data-linktype=\"self-bookmark\">LookupDependsOn()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects. The list reports the members where dependency relationships for initialization order exist relative to this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupInvoker\" data-linktype=\"self-bookmark\">LookupInvoker()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> that is associated with a <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsAmbient\" data-linktype=\"self-bookmark\">LookupIsAmbient()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsEvent\" data-linktype=\"self-bookmark\">LookupIsEvent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents an event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsReadOnly\" data-linktype=\"self-bookmark\">LookupIsReadOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents an intended read-only property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsReadPublic\" data-linktype=\"self-bookmark\">LookupIsReadPublic()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a property that has a public <code>get</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsUnknown\" data-linktype=\"self-bookmark\">LookupIsUnknown()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a member that is not resolvable by the backing system that is used for type and member resolution.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsWriteOnly\" data-linktype=\"self-bookmark\">LookupIsWriteOnly()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents an intended write-only property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupIsWritePublic\" data-linktype=\"self-bookmark\">LookupIsWritePublic()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a property that has a public <code>set</code> accessor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupTargetType\" data-linktype=\"self-bookmark\">LookupTargetType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupType\" data-linktype=\"self-bookmark\">LookupType()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupTypeConverter\" data-linktype=\"self-bookmark\">LookupTypeConverter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a type converter implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupUnderlyingGetter\" data-linktype=\"self-bookmark\">LookupUnderlyingGetter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>get</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupUnderlyingMember\" data-linktype=\"self-bookmark\">LookupUnderlyingMember()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a CLR reflection <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_LookupUnderlyingSetter\" data-linktype=\"self-bookmark\">LookupUnderlyingSetter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a <code>set</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>. This implementation always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xaml_XamlDirective_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlDirective(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> class, specifying values for a name and a single XAML namespace. Use this signature only when you want or expect <span class=\"xref\">stem.Xaml.XamlMember.IsUnknown*</span> to report <code>true</code> for the directive.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlDirective (string xamlNamespace, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlNamespace</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The primary XAML namespace where this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> can exist.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifying name of the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> This signature of the constructor always generates an identifier for the directive where <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a> reports <code>true</code> for the XAML type system. If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <a class=\"xref\" href=\"system.xaml.xamldirective#System_Xaml_XamlDirective__ctor_\" data-linktype=\"relative-path\">XamlDirective</a> constructor signature instead.  </p>\n</div>\n<p> If you use this signature, the <a class=\"xref\" href=\"system.xaml.xamldirective#System_Xaml_XamlDirective_AllowedLocation_\" data-linktype=\"relative-path\">AllowedLocation</a> value for the instance is <a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">AllowedMemberLocations</a>; and the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a> value and <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_TypeConverter_\" data-linktype=\"relative-path\">TypeConverter</a> value are both <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective__ctor_System_Collections_Generic_IEnumerable_System_String__System_String_System_Xaml_XamlType_System_Xaml_Schema_XamlValueConverter_System_ComponentModel_TypeConverter__System_Xaml_Schema_AllowedMemberLocations_\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XamlDirective(IEnumerable&lt;String&gt;,String,XamlType,XamlValueConverter&lt;TypeConverter&gt;,AllowedMemberLocations)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> class, specifying values for each per-case value of a <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public XamlDirective (System.Collections.Generic.IEnumerable&lt;string&gt; xamlNamespaces, string name, System.Xaml.XamlType xamlType, System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; typeConverter, System.Xaml.Schema.AllowedMemberLocations allowedLocation);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlNamespaces</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A set of XAML namespaces where this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> can exist, passed as an enumerable set of the identifier strings.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifying name of the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>xamlType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The XAML type that backs the <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeConverter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type converter that this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> uses for text syntax conversion.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>allowedLocation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">AllowedMemberLocations</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value of the <a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">AllowedMemberLocations</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>xamlType</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must use this constructor to generate a <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> that does not report <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a> as <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_AllowedLocation\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_AllowedLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowedLocation</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies the XAML node types where the directive can be specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xaml.Schema.AllowedMemberLocations AllowedLocation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">AllowedMemberLocations</a></div>\r\n                  </div>\r\n                  <p>A value of the enumeration. The default is the enumeration default, which is <a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">AllowedMemberLocations</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can set this value in the <a class=\"xref\" href=\"system.xaml.xamldirective#System_Xaml_XamlDirective__ctor_System_Collections_Generic_IEnumerable_System_String__System_String_System_Xaml_XamlType_System_Xaml_Schema_XamlValueConverter_System_ComponentModel_TypeConverter__System_Xaml_Schema_AllowedMemberLocations_\" data-linktype=\"relative-path\">XamlDirective(IEnumerable&lt;String&gt;,String,XamlType,XamlValueConverter&lt;TypeConverter&gt;,AllowedMemberLocations)</a> constructor signature. If you construct by using the <a class=\"xref\" href=\"system.xaml.xamldirective#System_Xaml_XamlDirective__ctor_System_String_System_String_\" data-linktype=\"relative-path\">XamlDirective(String,String)</a> constructor signature, the AllowedLocation value for the instance is <a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">AllowedMemberLocations</a>. However, the instance always reports <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_IsUnknown_\" data-linktype=\"relative-path\">IsUnknown</a> as <code>true</code>. This behavior typically affects attempts to write object graphs and also affects other practical uses of a <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> value.  </p>\n<p> You typically would not construct a XAML directive case where AllowedLocation is <a class=\"xref\" href=\"system.xaml.schema.allowedmemberlocations\" data-linktype=\"relative-path\">System.Xaml.Schema.AllowedMemberLocations</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_GetHashCode\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the hash code for this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_GetXamlNamespaces\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_GetXamlNamespaces_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXamlNamespaces()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a list of XAML namespaces where this XAML member can exist.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>&gt;</div>\r\n                  </div>\r\n                  <p>A list of XAML namespace identifiers, as strings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces. If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates. <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_PreferredXamlNamespace_\" data-linktype=\"relative-path\">PreferredXamlNamespace</a> relies on this ordering.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupCustomAttributeProvider\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupCustomAttributeProvider_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupCustomAttributeProvider()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a> implementation. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.icustomattributeprovider\" data-linktype=\"relative-path\">ICustomAttributeProvider</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because a XAML directive cannot have custom attributes, this implementation always returns <code>null</code>. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupDeferringLoader\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupDeferringLoader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupDeferringLoader()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> object, which is used during deferred loading of XAML-declared objects. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.xaml.xamldeferringloader\" data-linktype=\"relative-path\">XamlDeferringLoader</a>&gt;</div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because a directive cannot have deferred loading, this implementation always returns <code>null</code>. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupDependsOn\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupDependsOn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupDependsOn()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a list of <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> objects. The list reports the members where dependency relationships for initialization order exist relative to this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>&gt;</div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because a XAML directive cannot have initialization order, this implementation always returns <code>null</code>. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupInvoker\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupInvoker_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupInvoker()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> that is associated with a <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> information for this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method may be invoked by calls to <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Invoker_\" data-linktype=\"relative-path\">Invoker</a>.  </p>\n<p> This implementation returns an internal static <a class=\"xref\" href=\"system.xaml.schema.xamlmemberinvoker\" data-linktype=\"relative-path\">XamlMemberInvoker</a> value that is specific to directives in the XAML type system. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsAmbient\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsAmbient_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsAmbient()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> is reported as an ambient property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsAmbient ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because a XAML directive cannot be an ambient type, this implementation always returns <code>false</code>. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsEvent\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsEvent()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents an event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsEvent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsReadOnly\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsReadOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents an intended read-only property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsReadOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By definition, directives are settable. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsReadPublic\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsReadPublic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsReadPublic()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a property that has a public <code>get</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsReadPublic ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsUnknown\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsUnknown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsUnknown()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a member that is not resolvable by the backing system that is used for type and member resolution.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsUnknown ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a non-resolvable member; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> implementation only calls base and does nothing more. The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a>. The <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> implementation seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsWriteOnly\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsWriteOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsWriteOnly()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents an intended write-only property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsWriteOnly ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupIsWritePublic\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupIsWritePublic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupIsWritePublic()</div>        \r\n          </div>\r\n    \r\n            <p>Returns whether this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> represents a property that has a public <code>set</code> accessor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed bool LookupIsWritePublic ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupTargetType\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupTargetType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupTargetType()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type where the <a class=\"xref\" href=\"system.xaml.xamlmember\" data-linktype=\"relative-path\">XamlMember</a> can exist. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Xaml.XamlType LookupTargetType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Target types are not relevant for directives; therefore, this implementation always returns <code>null</code>. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupType\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupType()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Xaml.XamlType LookupType ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xaml.xamltype\" data-linktype=\"relative-path\">XamlType</a> of the type that is used by the member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> implementation only calls base and does nothing more. The base implementation returns results based either on internal reflection, or checking for a null value of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_UnderlyingMember_\" data-linktype=\"relative-path\">UnderlyingMember</a>, processing in that order. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.  </p>\n<p> See Remarks in <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupType_\" data-linktype=\"relative-path\">LookupType</a> for more information about what information <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Type_\" data-linktype=\"relative-path\">Type</a> carries.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupTypeConverter\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupTypeConverter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupTypeConverter()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a type converter implementation that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xaml.schema.xamlvalueconverter-1\" data-linktype=\"relative-path\">XamlValueConverter</a>&lt;<a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a>&gt;</div>\r\n                  </div>\r\n                  <p>A <span class=\"xref\">stem.Xaml.Schema.XamlValueConverter`1</span> instance that has <a class=\"xref\" href=\"system.componentmodel.typeconverter\" data-linktype=\"relative-path\">TypeConverter</a> constraint; or <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> implementation only calls base and does nothing more. See <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_LookupTypeConverter_\" data-linktype=\"relative-path\">LookupTypeConverter</a>. <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupUnderlyingGetter\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupUnderlyingGetter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupUnderlyingGetter()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>get</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Reflection.MethodInfo LookupUnderlyingGetter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupUnderlyingMember\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupUnderlyingMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupUnderlyingMember()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a CLR reflection <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Reflection.MemberInfo LookupUnderlyingMember ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_LookupUnderlyingSetter\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_LookupUnderlyingSetter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupUnderlyingSetter()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a <code>set</code> accessor that is associated with this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>. This implementation always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override sealed System.Reflection.MethodInfo LookupUnderlyingSetter ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>Always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> seals this virtual member; therefore, all <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a> types and all predefined XAML directives must use this behavior.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xaml_XamlDirective_ToString\">\r\n    \r\n            <a id=\"System_Xaml_XamlDirective_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of this <a class=\"xref\" href=\"system.xaml.xamldirective\" data-linktype=\"relative-path\">XamlDirective</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If XAML namespace information is available, this implementation returns a string combination of <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_PreferredXamlNamespace_\" data-linktype=\"relative-path\">PreferredXamlNamespace</a> and <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Name_\" data-linktype=\"relative-path\">Name</a>. If XAML namespace information is unavailable, this implementation returns <a class=\"xref\" href=\"system.xaml.xamlmember#System_Xaml_XamlMember_Name_\" data-linktype=\"relative-path\">Name</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xaml.XamlDirective.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xaml.XamlDirective.yml\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.AllowedLocation\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.GetXamlNamespaces\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupCustomAttributeProvider\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupDeferringLoader\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupDependsOn\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupInvoker\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsAmbient\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsEvent\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsReadPublic\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsUnknown\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsWriteOnly\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupIsWritePublic\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupTargetType\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupType\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupTypeConverter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupUnderlyingGetter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupUnderlyingMember\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.LookupUnderlyingSetter\">\r\n<meta name=\"APIName\" content=\"System.Xaml.XamlDirective.ToString\">\r\n<meta name=\"APILocation\" content=\"System.Xaml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9120a6f9-3436-79c4-6c8d-7fb0728c161e\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Xaml\\XamlDirective.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the XamlDirective identifier during processing of member nodes. The ideâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xaml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xaml.XamlDirective\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xaml.XamlDirective.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xaml.XamlDirective.yml","open_to_public_contributors":true,"api_name":["System.Xaml.XamlDirective","System.Xaml.XamlDirective..ctor","System.Xaml.XamlDirective.AllowedLocation","System.Xaml.XamlDirective.GetHashCode","System.Xaml.XamlDirective.GetXamlNamespaces","System.Xaml.XamlDirective.LookupCustomAttributeProvider","System.Xaml.XamlDirective.LookupDeferringLoader","System.Xaml.XamlDirective.LookupDependsOn","System.Xaml.XamlDirective.LookupInvoker","System.Xaml.XamlDirective.LookupIsAmbient","System.Xaml.XamlDirective.LookupIsEvent","System.Xaml.XamlDirective.LookupIsReadOnly","System.Xaml.XamlDirective.LookupIsReadPublic","System.Xaml.XamlDirective.LookupIsUnknown","System.Xaml.XamlDirective.LookupIsWriteOnly","System.Xaml.XamlDirective.LookupIsWritePublic","System.Xaml.XamlDirective.LookupTargetType","System.Xaml.XamlDirective.LookupType","System.Xaml.XamlDirective.LookupTypeConverter","System.Xaml.XamlDirective.LookupUnderlyingGetter","System.Xaml.XamlDirective.LookupUnderlyingMember","System.Xaml.XamlDirective.LookupUnderlyingSetter","System.Xaml.XamlDirective.ToString"],"api_location":["System.Xaml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xaml.XamlDirective","System::Xaml::XamlDirective","System.Xaml.XamlDirective.#ctor","System::Xaml::XamlDirective::#ctor","System.Xaml.XamlDirective.AllowedLocation","System::Xaml::XamlDirective::AllowedLocation","System.Xaml.XamlDirective.GetHashCode","System::Xaml::XamlDirective::GetHashCode","System.Xaml.XamlDirective.GetXamlNamespaces","System::Xaml::XamlDirective::GetXamlNamespaces","System.Xaml.XamlDirective.LookupCustomAttributeProvider","System::Xaml::XamlDirective::LookupCustomAttributeProvider","System.Xaml.XamlDirective.LookupDeferringLoader","System::Xaml::XamlDirective::LookupDeferringLoader","System.Xaml.XamlDirective.LookupDependsOn","System::Xaml::XamlDirective::LookupDependsOn","System.Xaml.XamlDirective.LookupInvoker","System::Xaml::XamlDirective::LookupInvoker","System.Xaml.XamlDirective.LookupIsAmbient","System::Xaml::XamlDirective::LookupIsAmbient","System.Xaml.XamlDirective.LookupIsEvent","System::Xaml::XamlDirective::LookupIsEvent","System.Xaml.XamlDirective.LookupIsReadOnly","System::Xaml::XamlDirective::LookupIsReadOnly","System.Xaml.XamlDirective.LookupIsReadPublic","System::Xaml::XamlDirective::LookupIsReadPublic","System.Xaml.XamlDirective.LookupIsUnknown","System::Xaml::XamlDirective::LookupIsUnknown","System.Xaml.XamlDirective.LookupIsWriteOnly","System::Xaml::XamlDirective::LookupIsWriteOnly","System.Xaml.XamlDirective.LookupIsWritePublic","System::Xaml::XamlDirective::LookupIsWritePublic","System.Xaml.XamlDirective.LookupTargetType","System::Xaml::XamlDirective::LookupTargetType","System.Xaml.XamlDirective.LookupType","System::Xaml::XamlDirective::LookupType","System.Xaml.XamlDirective.LookupTypeConverter","System::Xaml::XamlDirective::LookupTypeConverter","System.Xaml.XamlDirective.LookupUnderlyingGetter","System::Xaml::XamlDirective::LookupUnderlyingGetter","System.Xaml.XamlDirective.LookupUnderlyingMember","System::Xaml::XamlDirective::LookupUnderlyingMember","System.Xaml.XamlDirective.LookupUnderlyingSetter","System::Xaml::XamlDirective::LookupUnderlyingSetter","System.Xaml.XamlDirective.ToString","System::Xaml::XamlDirective::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9120a6f9-3436-79c4-6c8d-7fb0728c161e","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Xaml\\XamlDirective.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xaml/XamlDirective.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XamlDirective class | Microsoft Docs","_op_ogTitle":"XamlDirective class","description":"Provides the XAML type system identifier for a member if the member is also a XAML directive. XAML readers and XAML writers use the XamlDirective identifier during processing of member nodes. The ideâ€¦","toc_asset_id":"_splitted/System.Xaml/toc.json","toc_rel":"_splitted/System.Xaml/toc.json","source_url":"","ms.assetid":"System.Xaml.XamlDirective","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xaml.xamldirective","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xaml.xamldirective","fileRelativePath":"System.Xaml.XamlDirective.html"},"themesRelativePathToOutputRoot":"_themes/"}