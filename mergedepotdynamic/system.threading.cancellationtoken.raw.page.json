{"content":"    \r\n    <h1 id=\"System_Threading_CancellationToken\">\r\n      <span class=\"lang-csharp\">CancellationToken</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Propagates notification that operations should be canceled.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;IsCancellationRequested = {IsCancellationRequested}&quot;)]\n[System.Runtime.InteropServices.ComVisible(false)]\npublic struct CancellationToken</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CancellationToken</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A CancellationToken enables cooperative cancellation between threads, thread pool work items, or <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> objects. You create a cancellation token by instantiating a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> object, which manages cancellation tokens retrieved from its <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Token_\" data-linktype=\"relative-path\">Token</a> property. You then  pass the cancellation token to any number of threads, tasks, or operations that should receive notice of cancellation. The token cannot be used to initiate cancellation. When the owning object calls <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Cancel_\" data-linktype=\"relative-path\">Cancel</a>, the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> property on every copy of the cancellation token is set to <code>true</code>. The objects that receive the notification can respond in whatever manner is appropriate.  </p>\n<p> For more information and code examples see <a href=\"../Topic/Cancellation%20in%20Managed%20Threads.md\" data-linktype=\"relative-path\">Cancellation in Managed Threads</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken__ctor_System_Boolean_\" data-linktype=\"self-bookmark\">CancellationToken(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_CanBeCanceled\" data-linktype=\"self-bookmark\">CanBeCanceled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether this token is capable of being in the canceled state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_IsCancellationRequested\" data-linktype=\"self-bookmark\">IsCancellationRequested</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether cancellation has been requested for this token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_None\" data-linktype=\"self-bookmark\">None</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an empty <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_WaitHandle\" data-linktype=\"self-bookmark\">WaitHandle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> that is signaled when the token is canceled.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instance is equal to the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_Equals_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">Equals(CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instance is equal to the specified token.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Serves as a hash function for a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_Register_System_Action_\" data-linktype=\"self-bookmark\">Register(Action)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_Register_System_Action_System_Boolean_\" data-linktype=\"self-bookmark\">Register(Action,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_Register_System_Action_System_Object__System_Object_\" data-linktype=\"self-bookmark\">Register(Action&lt;Object&gt;,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_Register_System_Action_System_Object__System_Object_System_Boolean_\" data-linktype=\"self-bookmark\">Register(Action&lt;Object&gt;,Object,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_ThrowIfCancellationRequested\" data-linktype=\"self-bookmark\">ThrowIfCancellationRequested()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Throws a <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> if this token has had cancellation requested.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_op_Equality_System_Threading_CancellationToken_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">op_Equality(CancellationToken,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instances are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Threading_CancellationToken_op_Inequality_System_Threading_CancellationToken_System_Threading_CancellationToken_\" data-linktype=\"self-bookmark\">op_Inequality(CancellationToken,CancellationToken)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instances are not equal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken__ctor_System_Boolean_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancellationToken(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CancellationToken (bool canceled);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>canceled</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The canceled state for the token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Tokens created with this constructor will remain in the canceled state specified by the <code>canceled</code> parameter. If <code>canceled</code> is <code>false</code>, both <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_CanBeCanceled_\" data-linktype=\"relative-path\">CanBeCanceled</a> and <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> will be <code>false</code>.  </p>\n<p> If <code>canceled</code> is <code>true</code>, both <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_CanBeCanceled_\" data-linktype=\"relative-path\">CanBeCanceled</a> and <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> will be <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_CanBeCanceled\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_CanBeCanceled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanBeCanceled</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether this token is capable of being in the canceled state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanBeCanceled { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this token is capable of being in the canceled state; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If CanBeCanceled returns <code>false</code>, it is guaranteed that the token will never transition into a canceled state, meaning that <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> will never return <code>true</code>. A cancellation token that cannot be canceled is returned by the static <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_None_\" data-linktype=\"relative-path\">None</a> property.  </p>\n<p> You can optionally use this property to determine whether a cancellation token can be canceled before examing the value of the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_IsCancellationRequested_\" data-linktype=\"relative-path\">IsCancellationRequested</a> property to determine whether it has been canceled.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_IsCancellationRequested\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_IsCancellationRequested_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsCancellationRequested</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether cancellation has been requested for this token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsCancellationRequested { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if cancellation has been requested for this token; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property indicates whether cancellation has been requested for this token, either through the token initially being constructed in a canceled state, or through calling <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Cancel_\" data-linktype=\"relative-path\">Cancel</a> on the token&#39;s associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a>.  </p>\n<p> If this property is <code>true</code>, it only guarantees that cancellation has been requested. It does not guarantee that every registered handler has finished executing, nor that cancellation requests have finished propagating to all registered handlers. Additional synchronization may be required, particularly in situations where related objects are being canceled concurrently.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following is a simple example that executes a server process until the IsCancellationRequested property returns <code>true</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Threading.Tasks.CancellationToken.IsCancellationRequested#12\">using System;\nusing System.Threading;\n\npublic class ServerClass\n{\n   public static void StaticMethod(object obj)\n   {\n      CancellationToken ct = (CancellationToken)obj;\n      Console.WriteLine(&quot;ServerClass.StaticMethod is running on another thread.&quot;);\n\n      // Simulate work that can be canceled.\n      while (!ct.IsCancellationRequested) {\n         Thread.SpinWait(50000);\n      }\n      Console.WriteLine(&quot;The worker thread has been canceled. Press any key to exit.&quot;);\n      Console.ReadKey(true);\n   }\n}\n\npublic class Simple\n{\n   public static void Main()\n   {\n      // The Simple class controls access to the token source.\n      CancellationTokenSource cts = new CancellationTokenSource();\n\n      Console.WriteLine(&quot;Press &#39;C&#39; to terminate the application...<br>&quot;);\n      // Allow the UI thread to capture the token source, so that it\n      // can issue the cancel command.\n      Thread t1 = new Thread(() =&gt; { if (Console.ReadKey(true).KeyChar.ToString().ToUpperInvariant() == &quot;C&quot;)\n                                     cts.Cancel(); } );\n\n      // ServerClass sees only the token, not the token source.\n      Thread t2 = new Thread(new ParameterizedThreadStart(ServerClass.StaticMethod));\n      // Start the UI thread.\n\n      t1.Start();\n\n      // Start the worker thread and pass it the token.\n      t2.Start(cts.Token);\n\n      t2.Join();\n      cts.Dispose();\n   }\n}\n// The example displays the following output:\n//       Press &#39;C&#39; to terminate the application...\n//\n//       ServerClass.StaticMethod is running on another thread.\n//       The worker thread has been canceled. Press any key to exit.\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Threading.Tasks.CancellationToken.IsCancellationRequested#12\">Imports System.Threading\n\nPublic Class ServerClass\n   Public Shared Sub StaticMethod(obj As Object)\n      Dim ct AS CancellationToken = CType(obj, CancellationToken)\n      Console.WriteLine(&quot;ServerClass.StaticMethod is running on another thread.&quot;)\n\n      &#39; Simulate work that can be canceled.\n      While Not ct.IsCancellationRequested\n         Thread.SpinWait(50000)\n      End While\n      Console.WriteLine(&quot;The worker thread has been canceled. Press any key to exit.&quot;)\n      Console.ReadKey(True)\n   End Sub\nEnd Class\n\nPublic Class Simple\n   Public Shared Sub Main()\n      &#39; The Simple class controls access to the token source.\n      Dim cts As New CancellationTokenSource()\n\n      Console.WriteLine(&quot;Press &#39;C&#39; to terminate the application...&quot; + vbCrLf)\n      &#39; Allow the UI thread to capture the token source, so that it\n      &#39; can issue the cancel command.\n      Dim t1 As New Thread( Sub()\n                               If Console.ReadKey(true).KeyChar.ToString().ToUpperInvariant() = &quot;C&quot; Then\n                                  cts.Cancel()\n                               End If\n                            End Sub)\n\n      &#39; ServerClass sees only the token, not the token source.\n      Dim t2 As New Thread(New ParameterizedThreadStart(AddressOf ServerClass.StaticMethod))\n\n      &#39; Start the UI thread.\n      t1.Start()\n\n      &#39; Start the worker thread and pass it the token.\n      t2.Start(cts.Token)\n\n      t2.Join()\n      cts.Dispose()\n   End Sub\nEnd Class\n&#39; The example displays the following output:\n&#39;       Press &#39;C&#39; to terminate the application...\n&#39;\n&#39;       ServerClass.StaticMethod is running on another thread.\n&#39;       The worker thread has been canceled. Press any key to exit.\n</code></pre><p> The example instantiates a <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> object, which controls access to the cancellation token. It then defines two thread procedures. The first is defined as a lambda expression that pools the keyboard and, when the &quot;C&quot; key is pressed, calls <a class=\"xref\" href=\"system.threading.cancellationtokensource#System_Threading_CancellationTokenSource_Cancel_\" data-linktype=\"relative-path\">Cancel</a> to set the cancellation token to the cancelled state. The second is a parameterized method, <code>ServerClass.StaticMethod</code>, that executes a loop until the IsCancellationRequested property is <code>true</code>.  </p>\n<p> The main thread then starts the two threads and blocks until the thread that executes the <code>ServerClass.StaticMethod</code> method terminates.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_None\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_None_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">None</div>        \r\n          </div>\r\n    \r\n            <p>Returns an empty <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Threading.CancellationToken None { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </div>\r\n                  <p>An empty cancellation token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The cancellation token returned by this property cannot be canceled; that is, its <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_CanBeCanceled_\" data-linktype=\"relative-path\">CanBeCanceled</a> property is <code>false</code>.  </p>\n<p> You can also use the C#  <a href=\"../Topic/default%20(C%23%20Reference).md\" data-linktype=\"relative-path\">default(CancellationToken)</a> statement to create an empty cancellation token.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_WaitHandle\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_WaitHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WaitHandle</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> that is signaled when the token is canceled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.WaitHandle WaitHandle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> that is signaled when the token is canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Accessing this property causes a <a class=\"xref\" href=\"system.threading.waithandle\" data-linktype=\"relative-path\">WaitHandle</a> to be instantiated. It is preferable to only use this property when necessary, and to then dispose the associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> instance at the earliest opportunity (disposing the source will dispose of this allocated handle). The handle should not be closed or disposed directly.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instance is equal to the specified <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The other object to which to compare this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>other</code> is a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> and if the two instances are equal; otherwise, <code>false</code>. Two tokens are equal if they are associated with the same <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> or if they were both constructed from public <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> constructors and their <span class=\"xref\">stem.Threading.CancellationToken.IsCancellationRequested*</span> values are equal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_Equals_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instance is equal to the specified token.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Equals (System.Threading.CancellationToken other);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>other</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The other <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> to which to compare this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the instances are equal; otherwise, <code>false</code>. Two tokens are equal if they are associated with the same <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> or if they were both constructed from public <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> constructors and their <span class=\"xref\">stem.Threading.CancellationToken.IsCancellationRequested*</span> values are equal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_GetHashCode\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Serves as a hash function for a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the current <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_Register_System_Action_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_Register_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Register(Action)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationTokenRegistration Register (Action callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to be executed when the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a> instance that can be used to deregister the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>callback</code> is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propagated out of this method call.  </p>\n<p> The current <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>, if one exists, will be captured along with the delegate and will be used when executing it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_Register_System_Action_System_Boolean_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_Register_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Register(Action,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationTokenRegistration Register (Action callback, bool useSynchronizationContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action\" data-linktype=\"relative-path\">Action</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to be executed when the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>useSynchronizationContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A value that indicates whether to capture the current <a class=\"xref\" href=\"system.threading.synchronizationcontext\" data-linktype=\"relative-path\">SynchronizationContext</a> and use it when invoking the <code>callback</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a> instance that can be used to deregister the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>callback</code> is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propogated out of this method call.  </p>\n<p> If <code>useSynchronizationContext</code> is <code>true</code>, the current <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>, if one exists, will be captured along with the delegate and will be used when executing it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_Register_System_Action_System_Object__System_Object_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_Register_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Register(Action&lt;Object&gt;,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationTokenRegistration Register (Action&lt;object&gt; callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to be executed when the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The state to pass to the <code>callback</code> when the delegate is invoked. This may be null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a> instance that can be used to deregister the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>callback</code> is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propogated out of this method call.  </p>\n<p> The current <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>, if one exists, will be captured along with the delegate and will be used when executing it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_Register_System_Action_System_Object__System_Object_System_Boolean_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_Register_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Register(Action&lt;Object&gt;,Object,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a delegate that will be called when this <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationTokenRegistration Register (Action&lt;object&gt; callback, object state, bool useSynchronizationContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The delegate to be executed when the <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> is canceled.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The state to pass to the <code>callback</code> when the delegate is invoked. This may be null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>useSynchronizationContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Boolean value that indicates whether to capture the current <a class=\"xref\" href=\"system.threading.synchronizationcontext\" data-linktype=\"relative-path\">SynchronizationContext</a> and use it when invoking the <code>callback</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.threading.cancellationtokenregistration\" data-linktype=\"relative-path\">CancellationTokenRegistration</a> instance that can be used to deregister the callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>callback</code> is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this token is already in the canceled state, the delegate will be run immediately and synchronously. Any exception the delegate generates will be propogated out of this method call.  </p>\n<p> The current <a class=\"xref\" href=\"system.threading.executioncontext\" data-linktype=\"relative-path\">ExecutionContext</a>, if one exists, will be captured along with the delegate and will be used when executing it.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_ThrowIfCancellationRequested\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_ThrowIfCancellationRequested_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ThrowIfCancellationRequested()</div>        \r\n          </div>\r\n    \r\n            <p>Throws a <a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a> if this token has had cancellation requested.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ThrowIfCancellationRequested ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.operationcanceledexception\" data-linktype=\"relative-path\">OperationCanceledException</a></div>\r\n                  </div>\r\n                  <p>The token has had cancellation requested.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method provides functionality equivalent to:  </p>\n<p> C#  </p>\n<pre><code>if (token.IsCancellationRequested)   \n    throw new OperationCanceledException(token);  \n</code></pre><pre><code class=\"lang-vb#\">If token.IsCancellationRequested Then  \n    Throw New OperationCanceledException(token)  \nEnd If  \n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_op_Equality_System_Threading_CancellationToken_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(CancellationToken,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instances are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (System.Threading.CancellationToken left, System.Threading.CancellationToken right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the instances are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Threading_CancellationToken_op_Inequality_System_Threading_CancellationToken_System_Threading_CancellationToken_\">\r\n    \r\n            <a id=\"System_Threading_CancellationToken_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(CancellationToken,CancellationToken)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> instances are not equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (System.Threading.CancellationToken left, System.Threading.CancellationToken right);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>left</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>right</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the instances are not equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>An associated <a class=\"xref\" href=\"system.threading.cancellationtokensource\" data-linktype=\"relative-path\">CancellationTokenSource</a> has been disposed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.CancellationToken.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.CancellationToken.yml\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken..ctor\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.CanBeCanceled\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.Equals\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.IsCancellationRequested\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.None\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.Register\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.ThrowIfCancellationRequested\">\r\n<meta name=\"APIName\" content=\"System.Threading.CancellationToken.WaitHandle\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cb056d20-da82-6dde-12c5-5f5fb81b138c\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Propagates notification that operations should be canceled.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Threading/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Threading.CancellationToken\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Threading.CancellationToken.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Threading.CancellationToken.yml","open_to_public_contributors":true,"api_name":["System.Threading.CancellationToken","System.Threading.CancellationToken..ctor","System.Threading.CancellationToken.CanBeCanceled","System.Threading.CancellationToken.Equals","System.Threading.CancellationToken.GetHashCode","System.Threading.CancellationToken.IsCancellationRequested","System.Threading.CancellationToken.None","System.Threading.CancellationToken.op_Equality","System.Threading.CancellationToken.op_op_Equality","System.Threading.CancellationToken.op_Inequality","System.Threading.CancellationToken.op_op_Inequality","System.Threading.CancellationToken.Register","System.Threading.CancellationToken.ThrowIfCancellationRequested","System.Threading.CancellationToken.WaitHandle"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Threading.CancellationToken","System::Threading::CancellationToken","System.Threading.CancellationToken.#ctor","System::Threading::CancellationToken::#ctor","System.Threading.CancellationToken.CanBeCanceled","System::Threading::CancellationToken::CanBeCanceled","System.Threading.CancellationToken.Equals","System::Threading::CancellationToken::Equals","System.Threading.CancellationToken.GetHashCode","System::Threading::CancellationToken::GetHashCode","System.Threading.CancellationToken.IsCancellationRequested","System::Threading::CancellationToken::IsCancellationRequested","System.Threading.CancellationToken.None","System::Threading::CancellationToken::None","System.Threading.CancellationToken.op_Equality","System::Threading::CancellationToken::op_Equality","System.Threading.CancellationToken.op_Inequality","System::Threading::CancellationToken::op_Inequality","System.Threading.CancellationToken.Register","System::Threading::CancellationToken::Register","System.Threading.CancellationToken.ThrowIfCancellationRequested","System::Threading::CancellationToken::ThrowIfCancellationRequested","System.Threading.CancellationToken.WaitHandle","System::Threading::CancellationToken::WaitHandle"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cb056d20-da82-6dde-12c5-5f5fb81b138c","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Threading/CancellationToken.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CancellationToken struct | Microsoft Docs","_op_ogTitle":"CancellationToken struct","description":"Propagates notification that operations should be canceled.\n","toc_asset_id":"_splitted/System.Threading/toc.json","toc_rel":"_splitted/System.Threading/toc.json","source_url":"","ms.assetid":"System.Threading.CancellationToken","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.cancellationtoken","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.threading.cancellationtoken","fileRelativePath":"System.Threading.CancellationToken.html"},"themesRelativePathToOutputRoot":"_themes/"}