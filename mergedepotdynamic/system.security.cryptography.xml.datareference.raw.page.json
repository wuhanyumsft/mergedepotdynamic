{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_Xml_DataReference\">\r\n      <span class=\"lang-csharp\">DataReference</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the <code>&lt;DataReference&gt;</code> element used in XML encryption. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class DataReference : System.Security.Cryptography.Xml.EncryptedReference</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference\" data-linktype=\"relative-path\">System.Security.Cryptography.Xml.EncryptedReference</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataReference</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_AddTransform_System_Security_Cryptography_Xml_Transform_\" data-linktype=\"relative-path\">AddTransform(Transform)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_CacheValid\" data-linktype=\"relative-path\">CacheValid</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_GetXml\" data-linktype=\"relative-path\">GetXml()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_LoadXml_System_Xml_XmlElement_\" data-linktype=\"relative-path\">LoadXml(XmlElement)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_ReferenceType\" data-linktype=\"relative-path\">ReferenceType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_TransformChain\" data-linktype=\"relative-path\">TransformChain</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.encryptedreference#System_Security_Cryptography_Xml_EncryptedReference_Uri\" data-linktype=\"relative-path\">Uri</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataReference class represents the <code>&lt;DataReference&gt;</code> element that contains the location of encrypted data used with XML encryption.  </p>\n<p> <code>&lt;DataReference&gt;</code> elements are used to refer to <code>&lt;EncryptedData&gt;</code> elements that were encrypted using the key defined in the enclosing <code>&lt;EncryptedKey&gt;</code> element. Multiple <code>&lt;DataReference&gt;</code> elements can occur if multiple <code>&lt;EncryptedData&gt;</code> elements exist that are encrypted using the same key.  </p>\n<p> For more information about XML encryption standards, see <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_DataReference__ctor\" data-linktype=\"self-bookmark\">DataReference()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_DataReference__ctor_System_String_\" data-linktype=\"self-bookmark\">DataReference(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class using the specified Uniform Resource Identifier (URI).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_DataReference__ctor_System_String_System_Security_Cryptography_Xml_TransformChain_\" data-linktype=\"self-bookmark\">DataReference(String,TransformChain)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class using the specified Uniform Resource Identifier (URI) and a <a class=\"xref\" href=\"system.security.cryptography.xml.transformchain\" data-linktype=\"relative-path\">TransformChain</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_DataReference__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_DataReference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataReference()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataReference ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class that represents the <code>&lt;DataReference&gt;</code> element. <code>&lt;DataReference&gt;</code> is a child element of the <code>&lt;ReferenceList&gt;</code> element.  </p>\n<p> For more information about XML encryption standards, see <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class to encrypt and decrypt multiple XML elements using different session keys.  </p>\n<pre><code class=\"lang-cs\" name=\"Cryptography.XML.DataReference#1\">\nusing System;\nusing System.Xml;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n\n        // Create an XmlDocument object.\n        XmlDocument xmlDoc = new XmlDocument();\n\n        // Load an XML file into the XmlDocument object.\n        try\n        {\n            xmlDoc.PreserveWhitespace = true;\n            xmlDoc.Load(&quot;test.xml&quot;);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n\n        // Create a new RSA key.  This key will encrypt a symmetric key,\n        // which will then be imbedded in the XML document.  \n        RSA rsaKey = new RSACryptoServiceProvider();\n\n\n        try\n        {\n            // Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, &quot;EncryptedElement1&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Encrypt the &quot;creditcard2&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard2&quot;, &quot;EncryptedElement2&quot;, rsaKey, &quot;rsaKey&quot;);\n\n            // Display the encrypted XML to the console.\n            Console.WriteLine(&quot;Encrypted XML:&quot;);\n            Console.WriteLine();\n            Console.WriteLine(xmlDoc.OuterXml);\n\n            // Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;);\n\n            // Display the encrypted XML to the console.\n            Console.WriteLine();\n            Console.WriteLine(&quot;Decrypted XML:&quot;);\n            Console.WriteLine();\n            Console.WriteLine(xmlDoc.OuterXml);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(e.Message);\n        }\n        finally\n        {\n            // Clear the RSA key.\n            rsaKey.Clear();\n        }\n\n        Console.ReadLine();\n\n\n    }\n\n    public static void Encrypt(XmlDocument Doc, string ElementToEncrypt, string EncryptionElementID, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (ElementToEncrypt == null)\n            throw new ArgumentNullException(&quot;ElementToEncrypt&quot;);\n        if (EncryptionElementID == null)\n            throw new ArgumentNullException(&quot;EncryptionElementID&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        ////////////////////////////////////////////////\n        // Find the specified element in the XmlDocument\n        // object and create a new XmlElemnt object.\n        ////////////////////////////////////////////////\n\n        XmlElement elementToEncrypt = Doc.GetElementsByTagName(ElementToEncrypt)[0] as XmlElement;\n\n        // Throw an XmlException if the element was not found.\n        if (elementToEncrypt == null)\n        {\n            throw new XmlException(&quot;The specified element was not found&quot;);\n\n        }\n\n        //////////////////////////////////////////////////\n        // Create a new instance of the EncryptedXml class \n        // and use it to encrypt the XmlElement with the \n        // a new random symmetric key.\n        //////////////////////////////////////////////////\n\n        // Create a 256 bit Rijndael key.\n        RijndaelManaged sessionKey = new RijndaelManaged();\n        sessionKey.KeySize = 256;\n\n        EncryptedXml eXml = new EncryptedXml();\n\n        byte[] encryptedElement = eXml.EncryptData(elementToEncrypt, sessionKey, false);\n\n        ////////////////////////////////////////////////\n        // Construct an EncryptedData object and populate\n        // it with the desired encryption information.\n        ////////////////////////////////////////////////\n\n\n        EncryptedData edElement = new EncryptedData();\n        edElement.Type = EncryptedXml.XmlEncElementUrl;\n        edElement.Id = EncryptionElementID;\n\n        // Create an EncryptionMethod element so that the \n        // receiver knows which algorithm to use for decryption.\n\n        edElement.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncAES256Url);\n\n        // Encrypt the session key and add it to an EncryptedKey element.\n        EncryptedKey ek = new EncryptedKey();\n\n        byte[] encryptedKey = EncryptedXml.EncryptKey(sessionKey.Key, Alg, false);\n\n        ek.CipherData = new CipherData(encryptedKey);\n\n        ek.EncryptionMethod = new EncryptionMethod(EncryptedXml.XmlEncRSA15Url);\n\n        // Set the KeyInfo element to specify the\n        // name of the RSA key.\n\n        // Create a new KeyInfo element.\n        edElement.KeyInfo = new KeyInfo();\n\n        // Create a new KeyInfoName element.\n        KeyInfoName kin = new KeyInfoName();\n\n        // Specify a name for the key.\n        kin.Value = KeyName;\n\n        // Add the KeyInfoName element to the \n        // EncryptedKey object.\n        ek.KeyInfo.AddClause(kin);\n\n        // Create a new DataReference element\n        // for the KeyInfo element.  This optional\n        // element specifies which EncryptedData \n        // uses this key.  An XML document can have\n        // multiple EncryptedData elements that use\n        // different keys.\n        DataReference dRef = new DataReference();\n\n        // Specify the EncryptedData URI. \n        dRef.Uri = &quot;#&quot; + EncryptionElementID;\n\n        // Add the DataReference to the EncryptedKey.\n        ek.AddReference(dRef);\n\n        // Add the encrypted key to the \n        // EncryptedData object.\n\n        edElement.KeyInfo.AddClause(new KeyInfoEncryptedKey(ek));\n\n        // Add the encrypted element data to the \n        // EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement;\n\n        ////////////////////////////////////////////////////\n        // Replace the element from the original XmlDocument\n        // object with the EncryptedData element.\n        ////////////////////////////////////////////////////\n\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, false);\n\n    }\n\n    public static void Decrypt(XmlDocument Doc, RSA Alg, string KeyName)\n    {\n        // Check the arguments.  \n        if (Doc == null)\n            throw new ArgumentNullException(&quot;Doc&quot;);\n        if (Alg == null)\n            throw new ArgumentNullException(&quot;Alg&quot;);\n        if (KeyName == null)\n            throw new ArgumentNullException(&quot;KeyName&quot;);\n\n        // Create a new EncryptedXml object.\n        EncryptedXml exml = new EncryptedXml(Doc);\n\n        // Add a key-name mapping.\n        // This method can only decrypt documents\n        // that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg);\n\n        // Decrypt the element.\n        exml.DecryptDocument();\n\n    }\n\n}\n\n// To run this sample, place the following XML\n// in a file called test.xml.  Put test.xml\n// in the same directory as your compiled program.\n// \n//  &lt;root&gt;\n//     &lt;creditcard xmlns=&quot;myNamespace&quot; Id=&quot;tag1&quot;&gt;\n//         &lt;number&gt;19834209&lt;/number&gt;\n//         &lt;expiry&gt;02/02/2002&lt;/expiry&gt;\n//     &lt;/creditcard&gt;\n//     &lt;creditcard2 xmlns=&quot;myNamespace&quot; Id=&quot;tag2&quot;&gt;\n//         &lt;number&gt;19834208&lt;/number&gt;\n//         &lt;expiry&gt;02/02/2002&lt;/expiry&gt;\n//     &lt;/creditcard2&gt;\n// &lt;/root&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Cryptography.XML.DataReference#1\">Imports System\nImports System.Xml\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\n\n\nModule Program\n\n    Sub Main(ByVal args() As String)\n\n        &#39; Create an XmlDocument object.\n        Dim xmlDoc As New XmlDocument()\n\n        &#39; Load an XML file into the XmlDocument object.\n        Try\n            xmlDoc.PreserveWhitespace = True\n            xmlDoc.Load(&quot;test.xml&quot;)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        End Try\n\n        &#39; Create a new RSA key.  This key will encrypt a symmetric key,\n        &#39; which will then be imbedded in the XML document.  \n        Dim rsaKey As New RSACryptoServiceProvider\n\n\n        Try\n            &#39; Encrypt the &quot;creditcard&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard&quot;, &quot;EncryptedElement1&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Encrypt the &quot;creditcard2&quot; element.\n            Encrypt(xmlDoc, &quot;creditcard2&quot;, &quot;EncryptedElement2&quot;, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Display the encrypted XML to the console.\n            Console.WriteLine(&quot;Encrypted XML:&quot;)\n            Console.WriteLine()\n            Console.WriteLine(xmlDoc.OuterXml)\n\n            &#39; Decrypt the &quot;creditcard&quot; element.\n            Decrypt(xmlDoc, rsaKey, &quot;rsaKey&quot;)\n\n            &#39; Display the encrypted XML to the console.\n            Console.WriteLine()\n            Console.WriteLine(&quot;Decrypted XML:&quot;)\n            Console.WriteLine()\n            Console.WriteLine(xmlDoc.OuterXml)\n        Catch e As Exception\n            Console.WriteLine(e.Message)\n        Finally\n            &#39; Clear the RSA key.\n            rsaKey.Clear()\n        End Try\n\n        Console.ReadLine()\n\n    End Sub &#39;Main\n\nEnd Module &#39;Program\n\n\nModule XMLEncryptionSubs\n\n    Sub Encrypt(ByVal Doc As XmlDocument, ByVal ElementToEncryptName As String, ByVal EncryptionElementID As String, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If ElementToEncryptName Is Nothing Then\n            Throw New ArgumentNullException(&quot;ElementToEncrypt&quot;)\n        End If\n        If EncryptionElementID Is Nothing Then\n            Throw New ArgumentNullException(&quot;EncryptionElementID&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Find the specified element in the XmlDocument\n        &#39; object and create a new XmlElemnt object.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim elementToEncrypt As XmlElement = Doc.GetElementsByTagName(ElementToEncryptName)(0)\n\n\n        &#39; Throw an XmlException if the element was not found.\n        If elementToEncrypt Is Nothing Then\n            Throw New XmlException(&quot;The specified element was not found&quot;)\n        End If\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Create a new instance of the EncryptedXml class \n        &#39; and use it to encrypt the XmlElement with the \n        &#39; a new random symmetric key.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        &#39; Create a 256 bit Rijndael key.\n        Dim sessionKey As New RijndaelManaged()\n        sessionKey.KeySize = 256\n\n        Dim eXml As New EncryptedXml()\n\n        Dim encryptedElement As Byte() = eXml.EncryptData(elementToEncrypt, sessionKey, False)\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Construct an EncryptedData object and populate\n        &#39; it with the desired encryption information.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n\n        Dim edElement As New EncryptedData()\n        edElement.Type = EncryptedXml.XmlEncElementUrl\n        edElement.Id = EncryptionElementID\n\n        &#39; Create an EncryptionMethod element so that the \n        &#39; receiver knows which algorithm to use for decryption.\n        edElement.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncAES256Url)\n\n        &#39; Encrypt the session key and add it to an EncryptedKey element.\n        Dim ek As New EncryptedKey()\n\n        Dim encryptedKey As Byte() = EncryptedXml.EncryptKey(sessionKey.Key, Alg, False)\n\n        ek.CipherData = New CipherData(encryptedKey)\n\n        ek.EncryptionMethod = New EncryptionMethod(EncryptedXml.XmlEncRSA15Url)\n\n        &#39; Set the KeyInfo element to specify the\n        &#39; name of the RSA key.\n        &#39; Create a new KeyInfo element.\n        edElement.KeyInfo = New KeyInfo()\n\n        &#39; Create a new KeyInfoName element.\n        Dim kin As New KeyInfoName()\n\n        &#39; Specify a name for the key.\n        kin.Value = KeyName\n\n        &#39; Add the KeyInfoName element to the \n        &#39; EncryptedKey object.\n        ek.KeyInfo.AddClause(kin)\n\n        &#39; Create a new DataReference element\n        &#39; for the KeyInfo element.  This optional\n        &#39; element specifies which EncryptedData \n        &#39; uses this key.  An XML document can have\n        &#39; multiple EncryptedData elements that use\n        &#39; different keys.\n        Dim dRef As New DataReference()\n\n        &#39; Specify the EncryptedData URI. \n        dRef.Uri = &quot;#&quot; + EncryptionElementID\n\n        &#39; Add the DataReference to the EncryptedKey.\n        ek.AddReference(dRef)\n\n        &#39; Add the encrypted key to the \n        &#39; EncryptedData object.\n        edElement.KeyInfo.AddClause(New KeyInfoEncryptedKey(ek))\n\n        &#39; Add the encrypted element data to the \n        &#39; EncryptedData object.\n        edElement.CipherData.CipherValue = encryptedElement\n\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        &#39; Replace the element from the original XmlDocument\n        &#39; object with the EncryptedData element.\n        &#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;&#39;\n        EncryptedXml.ReplaceElement(elementToEncrypt, edElement, False)\n\n    End Sub &#39;Encrypt\n\n\n    Sub Decrypt(ByVal Doc As XmlDocument, ByVal Alg As RSA, ByVal KeyName As String)\n        &#39; Check the arguments.  \n        If Doc Is Nothing Then\n            Throw New ArgumentNullException(&quot;Doc&quot;)\n        End If\n        If Alg Is Nothing Then\n            Throw New ArgumentNullException(&quot;Alg&quot;)\n        End If\n        If KeyName Is Nothing Then\n            Throw New ArgumentNullException(&quot;KeyName&quot;)\n        End If\n        &#39; Create a new EncryptedXml object.\n        Dim exml As New EncryptedXml(Doc)\n\n        &#39; Add a key-name mapping.\n        &#39; This method can only decrypt documents\n        &#39; that present the specified key name.\n        exml.AddKeyNameMapping(KeyName, Alg)\n\n        &#39; Decrypt the element.\n        exml.DecryptDocument()\n\n    End Sub &#39;Decrypt \nEnd Module &#39;XMLEncryptionSubs\n\n\n&#39; To run this sample, place the following XML\n&#39; in a file called test.xml.  Put test.xml\n&#39; in the same directory as your compiled program.\n&#39; \n&#39;  &lt;root&gt;\n&#39;     &lt;creditcard xmlns=&quot;myNamespace&quot; Id=&quot;tag1&quot;&gt;\n&#39;         &lt;number&gt;19834209&lt;/number&gt;\n&#39;         &lt;expiry&gt;02/02/2002&lt;/expiry&gt;\n&#39;     &lt;/creditcard&gt;\n&#39;     &lt;creditcard2 xmlns=&quot;myNamespace&quot; Id=&quot;tag2&quot;&gt;\n&#39;         &lt;number&gt;19834208&lt;/number&gt;\n&#39;         &lt;expiry&gt;02/02/2002&lt;/expiry&gt;\n&#39;     &lt;/creditcard2&gt;\n&#39; &lt;/root&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_DataReference__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_DataReference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataReference(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class using the specified Uniform Resource Identifier (URI).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataReference (string uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Uniform Resource Identifier (URI) that points to the encrypted data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor uses the specified Uniform Resource Identifier (URI) to create a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class, which represents the <code>&lt;DataReference&gt;</code> element. The URI indicates the location of encrypted data. The <code>&lt;DataReference&gt;</code> element is a child element of the <code>&lt;ReferenceList&gt;</code> element.  </p>\n<p> For more information about XML encryption standards, see <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_DataReference__ctor_System_String_System_Security_Cryptography_Xml_TransformChain_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_DataReference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataReference(String,TransformChain)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class using the specified Uniform Resource Identifier (URI) and a <a class=\"xref\" href=\"system.security.cryptography.xml.transformchain\" data-linktype=\"relative-path\">TransformChain</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A Uniform Resource Identifier (URI) that points to the encrypted data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>transformChain</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.xml.transformchain\" data-linktype=\"relative-path\">TransformChain</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.cryptography.xml.transformchain\" data-linktype=\"relative-path\">TransformChain</a> object that describes transforms to do on the encrypted data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor uses the specified Uniform Resource Identifier (URI) and transform chain to create a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.datareference\" data-linktype=\"relative-path\">DataReference</a> class, which represents the <code>&lt;DataReference&gt;</code> element. The URI indicates the location of encrypted data, and the transform chain can contain XPath transforms, decompression transforms, or information on how to retrieve the encrypted data from a document storage facility. <code>&lt;DataReference&gt;</code> is a child element of the <code>&lt;ReferenceList&gt;</code> element.  </p>\n<p> For more information about XML encryption standards, see <a href=\"http://www.w3.org/TR/xmlenc-core/\" data-linktype=\"external\">http://www.w3.org/TR/xmlenc-core/</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.DataReference.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.DataReference.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataReference\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.DataReference..ctor\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"362a00b6-0994-1ead-e07a-8ecc4847d553\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the &amp;lt;DataReference&amp;gt; element used in XML encryption. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.Xml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.DataReference\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.DataReference.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.DataReference.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.Xml.DataReference","System.Security.Cryptography.Xml.DataReference..ctor"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.DataReference","System::Security::Cryptography::Xml::DataReference","System.Security.Cryptography.Xml.DataReference.#ctor","System::Security::Cryptography::Xml::DataReference::#ctor"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"362a00b6-0994-1ead-e07a-8ecc4847d553","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.Xml/DataReference.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataReference class | Microsoft Docs","_op_ogTitle":"DataReference class","description":"Represents the &lt;DataReference&gt; element used in XML encryption. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.DataReference","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.datareference","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.datareference","fileRelativePath":"System.Security.Cryptography.Xml.DataReference.html"},"themesRelativePathToOutputRoot":"_themes/"}