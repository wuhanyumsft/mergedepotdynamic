{"content":"    \r\n    <h1 id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs\">\r\n      <span class=\"lang-csharp\">GridViewUpdateEventArgs</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides data for the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class GridViewUpdateEventArgs : System.ComponentModel.CancelEventArgs</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">System.ComponentModel.CancelEventArgs</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">GridViewUpdateEventArgs</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel\" data-linktype=\"relative-path\">Cancel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.eventargs#System_EventArgs_Empty\" data-linktype=\"relative-path\">Empty</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control raises the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_RowUpdating\" data-linktype=\"relative-path\">RowUpdating</a> event when a row&#39;s Update button is clicked, but before the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control updates the row. This allows you to provide an event-handling method that performs a custom routine, such as canceling the update operation, whenever this event occurs.  </p>\n<p> A GridViewUpdateEventArgs object is passed to the event-handling method, which allows you to determine the index of the current row and to indicate that the update operation should be canceled. To cancel the update operation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property of the GridViewUpdateEventArgs object to <code>true</code>. You can also manipulate the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a>, <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a>, and <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> collections, if necessary, before the values are passed to the data source. A common way to use these collections is to HTML-encode the values supplied by the user before they are stored in the data source. This helps to prevent script injection attacks.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<p> For a list of initial property values for an instance of GridViewUpdateEventArgs, see the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewselecteventargs#System_Web_UI_WebControls_GridViewSelectEventArgs__ctor_\" data-linktype=\"relative-path\">GridViewSelectEventArgs</a> constructor.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridViewUpdateEventArgs__ctor_System_Int32_\" data-linktype=\"self-bookmark\">GridViewUpdateEventArgs(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys\" data-linktype=\"self-bookmark\">Keys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary of field name/value pairs that represent the primary key of the row to update.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues\" data-linktype=\"self-bookmark\">NewValues</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary containing the revised values of the non-key field name/value pairs in the row to update.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues\" data-linktype=\"self-bookmark\">OldValues</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a dictionary containing the original field name/value pairs in the row to update.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_UI_WebControls_GridViewUpdateEventArgs_RowIndex\" data-linktype=\"self-bookmark\">RowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the row being updated.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs__ctor_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridViewUpdateEventArgs(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public GridViewUpdateEventArgs (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row being updated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this constructor to initialize a new instance of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a> class using the specified row index.  </p>\n<p> The following table shows the initial property value for an instance of <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs\" data-linktype=\"relative-path\">GridViewUpdateEventArgs</a>.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a></td>\n<td>The value contained in the <code>rowIndex</code> parameter.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> This constructor is used primarily by control developers when raising events.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Keys</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary of field name/value pairs that represent the primary key of the row to update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.IOrderedDictionary Keys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object containing field name/value pairs that represent the primary key of the row to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control is set, use the Keys property (dictionary) to access the value of the primary key in the row to update.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To access the values of the non-key fields, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> or <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> properties. The <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> property contains the updated values, while the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> property contains the original values.  </p>\n</div>\n<p> The Keys dictionary is automatically populated with the name/value pairs of the field or fields specified in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property. If multiple fields form the primary key, a separate entry is added to the Keys dictionary for each key field.  </p>\n<p> To determine the name of a key field, use the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Key_\" data-linktype=\"relative-path\">Key</a> property of a <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">System.Collections.DictionaryEntry</a> object contained in the Keys dictionary. To determine the value of a key field, use the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Value_\" data-linktype=\"relative-path\">Value</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewdeleteeventargs#System_Web_UI_WebControls_GridViewDeleteEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> property to access the values of the key fields in the row to update. The values are then written to a log file of updated records.  </p>\n<pre><code class=\"lang-cs\" name=\"GridViewUpdateEventArgsKeys#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;%@ import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    void EmployeesGridView_RowUpdating(Object sender, GridViewUpdateEventArgs e)\n    {\n    \n        // Record the update operation in a log file.\n        \n        // Create the log text. \n        String logText = &quot;&quot;;\n        \n        // Append the key field values to the log text.\n        foreach (DictionaryEntry keyEntry in e.Keys)\n        {\n            logText += keyEntry.Key + &quot;=&quot; + keyEntry.Value + &quot;;&quot;;\n        }\n        \n        // Append the text to a log file.\n        StreamWriter sw;\n        sw = File.AppendText(Server.MapPath(null) + &quot;\\\\updatelog.txt&quot;);\n        sw.WriteLine(logText);\n        sw.Flush();\n        sw.Close();\n    \n    }\n\n    void EmployeesGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n    {\n    \n        if (e.Exception == null)\n        {\n            // The update operation succeeded. Clear the message label.\n            Message.Text = &quot;&quot;;\n        }\n        else\n        {\n            // The update operation failed. Display an error message.\n            Message.Text = e.AffectedRows.ToString() + &quot; rows updated. &quot; + e.Exception.Message;\n            e.ExceptionHandled = true;\n        }\n        \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewUpdateEventArgs Keys Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewUpdateEventArgs Keys Example&lt;/h3&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                 forecolor=&quot;Red&quot;          \n                 runat=&quot;server&quot;/&gt;\n                \n            &lt;br/&gt;\n\n            &lt;!-- The GridView control automatically sets the columns     --&gt;\n            &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n            &lt;!-- No input controls are rendered for these columns in     --&gt;\n            &lt;!-- edit mode.                                              --&gt;\n            &lt;asp:gridview id=&quot;EmployeesGridView&quot; \n                datasourceid=&quot;EmployeesSqlDataSource&quot;\n                DataKeyNames=&quot;EmployeeID&quot;\n                autogenerateeditbutton=&quot;True&quot; \n                onrowupdating=&quot;EmployeesGridView_RowUpdating&quot;\n                onrowupdated=&quot;EmployeesGridView_RowUpdated&quot;   \n                runat=&quot;server&quot;&gt;\n            &lt;/asp:gridview&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Northwind sample database.                   --&gt;\n            &lt;asp:sqldatasource id=&quot;EmployeesSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [EmployeeID], [LastName], [FirstName], [HireDate] FROM [Employees]&quot;\n                updatecommand=&quot;UPDATE [Employees] SET [LastName] = @LastName, [FirstName] = @FirstName, [HireDate] = @HireDate WHERE [EmployeeID] = @EmployeeID&quot; \n                ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n                runat=&quot;server&quot; &gt;\n            &lt;/asp:sqldatasource&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"GridViewUpdateEventArgsKeys#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;%@ import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    \n    Sub EmployeesGridView_RowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n    \n        &#39; Record the update operation in a log file.\n        \n        &#39; Create the log text. \n        Dim logText As String = &quot;&quot;\n        \n        &#39; Append the key field values to the log text.\n        Dim keyEntry As DictionaryEntry\n        \n        For Each keyEntry In  e.Keys\n            \n            logText += keyEntry.Key &amp; &quot;=&quot; &amp; keyEntry.Value &amp; &quot;;&quot;\n            \n        Next keyEntry\n\n        &#39; Append the text to a log file.\n        Dim sw As StreamWriter\n        sw = File.AppendText(Server.MapPath(Nothing) &amp; &quot;\\updatelog.txt&quot;)\n        sw.WriteLine(logText)\n        sw.Flush()\n        sw.Close()\n    \n    End Sub\n    \n    Sub EmployeesGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n\n        If e.Exception Is Nothing Then\n            \n            &#39; The update operation succeeded. Clear the message label.\n            Message.Text = &quot;&quot;\n\n        Else\n\n            &#39; The update operation failed. Display an error message.\n            Message.Text = e.AffectedRows.ToString() &amp; &quot; rows updated. &quot; &amp; e.Exception.Message\n            e.ExceptionHandled = True\n        \n        End If\n        \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewUpdateEventArgs Keys Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewUpdateEventArgs Keys Example&lt;/h3&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                 forecolor=&quot;Red&quot;          \n                 runat=&quot;server&quot;/&gt;\n                \n            &lt;br/&gt;\n\n            &lt;!-- The GridView control automatically sets the columns     --&gt;\n            &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n            &lt;!-- No input controls are rendered for these columns in     --&gt;\n            &lt;!-- edit mode.                                              --&gt;\n            &lt;asp:gridview id=&quot;EmployeesGridView&quot; \n                datasourceid=&quot;EmployeesSqlDataSource&quot;\n                DataKeyNames=&quot;EmployeeID&quot;\n                autogenerateeditbutton=&quot;True&quot; \n                onrowupdating=&quot;EmployeesGridView_RowUpdating&quot;\n                onrowupdated=&quot;EmployeesGridView_RowUpdated&quot;   \n                runat=&quot;server&quot;&gt;\n            &lt;/asp:gridview&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Northwind sample database.                   --&gt;\n            &lt;asp:sqldatasource id=&quot;EmployeesSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [EmployeeID], [LastName], [FirstName], [HireDate] FROM [Employees]&quot;\n                updatecommand=&quot;UPDATE [Employees] SET [LastName] = @LastName, [FirstName] = @FirstName, [HireDate] = @HireDate WHERE [EmployeeID] = @EmployeeID&quot; \n                ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n                runat=&quot;server&quot; &gt;\n            &lt;/asp:sqldatasource&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewValues</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary containing the revised values of the non-key field name/value pairs in the row to update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.IOrderedDictionary NewValues { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object containing the revised values of the non-key field name/value pairs in the row to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the NewValues property (dictionary) to access the values of the revised non-key fields in the row to update.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The primary key field or fields are not included in this dictionary. To access the values of the primary key field or fields, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> property. To access the original values of the non-key fields in the row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\" data-linktype=\"relative-path\">OldValues</a> property.  </p>\n</div>\n<p> The NewValues property is automatically populated with the name/value pairs of the revised non-key fields in the row. A separate entry is added to the NewValues property for each non-key field in the row.  </p>\n<p> To determine the field name of an entry, use the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Key_\" data-linktype=\"relative-path\">Key</a> property of a <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">System.Collections.DictionaryEntry</a> object contained in the NewValues dictionary. To determine the value of an entry, use the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Value_\" data-linktype=\"relative-path\">Value</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the NewValues property to HTML-encode all values supplied by the user before updating the data source.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewRowUpdating#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  Sub CustomersGridView_RowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n    \n    &#39; Use the CopyTo method to copy the DictionaryEntry objects in the \n    &#39; NewValues collection to an array.\n    Dim records(e.NewValues.Count - 1) As DictionaryEntry\n    e.NewValues.CopyTo(records, 0)\n    \n    &#39; Iterate through the array and HTML encode all user-provided values \n    &#39; before updating the data source.\n    Dim entry As DictionaryEntry\n    For Each entry In records\n            \n      e.NewValues(entry.Key) = Server.HtmlEncode(entry.Value.ToString())\n      \n    Next\n        \n  End Sub\n       \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowUpdating Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowUpdating Example&lt;/h3&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowupdating=&quot;CustomersGridView_RowUpdating&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewRowUpdating#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n  void CustomersGridView_RowUpdating(Object sender, GridViewUpdateEventArgs e)\n  {\n     \n    // Iterate through the NewValues collection and HTML encode all \n    // user-provided values before updating the data source.\n    foreach (DictionaryEntry entry in e.NewValues)\n    {\n    \n      e.NewValues[entry.Key] = Server.HtmlEncode(entry.Value.ToString());\n    \n    }\n        \n  }\n       \n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridView RowUpdating Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        \n      &lt;h3&gt;GridView RowUpdating Example&lt;/h3&gt;\n            \n      &lt;!-- The GridView control automatically sets the columns     --&gt;\n      &lt;!-- specified in the datakeynames property as read-only.    --&gt;\n      &lt;!-- No input controls are rendered for these columns in     --&gt;\n      &lt;!-- edit mode.                                              --&gt;\n      &lt;asp:gridview id=&quot;CustomersGridView&quot; \n        datasourceid=&quot;CustomersSqlDataSource&quot; \n        autogeneratecolumns=&quot;true&quot;\n        autogenerateeditbutton=&quot;true&quot;\n        allowpaging=&quot;true&quot; \n        datakeynames=&quot;CustomerID&quot;\n        onrowupdating=&quot;CustomersGridView_RowUpdating&quot;  \n        runat=&quot;server&quot;&gt;\n      &lt;/asp:gridview&gt;\n            \n      &lt;!-- This example uses Microsoft SQL Server and connects  --&gt;\n      &lt;!-- to the Northwind sample database. Use an ASP.NET     --&gt;\n      &lt;!-- expression to retrieve the connection string value   --&gt;\n      &lt;!-- from the Web.config file.                            --&gt;\n      &lt;asp:sqldatasource id=&quot;CustomersSqlDataSource&quot;  \n        selectcommand=&quot;Select [CustomerID], [CompanyName], [Address], [City], [PostalCode], [Country] From [Customers]&quot;\n        updatecommand=&quot;Update Customers SET CompanyName=@CompanyName, Address=@Address, City=@City, PostalCode=@PostalCode, Country=@Country WHERE (CustomerID = @CustomerID)&quot;\n        connectionstring=&quot;&lt;%$ ConnectionStrings:NorthWindConnectionString%&gt;&quot;\n        runat=&quot;server&quot;&gt;\n      &lt;/asp:sqldatasource&gt;\n            \n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_OldValues_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OldValues</div>        \r\n          </div>\r\n    \r\n            <p>Gets a dictionary containing the original field name/value pairs in the row to update.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.IOrderedDictionary OldValues { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.specialized.iordereddictionary\" data-linktype=\"relative-path\">IOrderedDictionary</a> object that contains the original values of the field name/value pairs in the row to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the OldValues property (dictionary) to access the original values of the fields in the row to update. This dictionary contains all fields in the row except the key fields. The key fields are defined in the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_DataKeyNames_\" data-linktype=\"relative-path\">DataKeyNames</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can access the key fields of the row by using the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_Keys_\" data-linktype=\"relative-path\">Keys</a> property. To access the revised values of the non-key fields in the row, use the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridviewupdateeventargs#System_Web_UI_WebControls_GridViewUpdateEventArgs_NewValues_\" data-linktype=\"relative-path\">NewValues</a> property.  </p>\n</div>\n<p> The OldValues property is automatically populated with the original values of all the field name/value pairs in the row. A separate entry is added to the OldValues property for each field in the row.  </p>\n<p> To determine the field name of an entry, use the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Key_\" data-linktype=\"relative-path\">Key</a> property of a <a class=\"xref\" href=\"system.collections.dictionaryentry\" data-linktype=\"relative-path\">System.Collections.DictionaryEntry</a> object contained in the OldValues dictionary. To determine the value of an entry, use the <a class=\"xref\" href=\"system.collections.dictionaryentry#System_Collections_DictionaryEntry_Value_\" data-linktype=\"relative-path\">Value</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use the OldValues property to access the original values of the fields in the row to update. The values are then written to a log file of updated records.  </p>\n<pre><code class=\"lang-vb\" name=\"GridViewUpdateEventArgsOldValues#1\">\n&lt;%@ Page language=&quot;VB&quot; %&gt;\n&lt;%@ import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    \n    Sub EmployeesGridView_RowUpdating(ByVal sender As Object, ByVal e As GridViewUpdateEventArgs)\n    \n        &#39; Record the update operation in a log file.\n        \n        &#39; Create the log text. \n        Dim logText As String = &quot;&quot;\n        \n    &#39; Append the original field values to the log text.\n        Dim i As Integer\n        \n        For i = 0 To e.OldValues.Count - 1\n            \n            logText += e.OldValues(i) &amp; &quot;;&quot;\n            \n        Next\n\n        &#39; Append the text to a log file.\n        Dim sw As StreamWriter\n        sw = File.AppendText(Server.MapPath(Nothing) &amp; &quot;\\updatelog.txt&quot;)\n        sw.WriteLine(logText)\n        sw.Flush()\n        sw.Close()\n    \n    End Sub\n    \n    Sub EmployeesGridView_RowUpdated(ByVal sender As Object, ByVal e As GridViewUpdatedEventArgs)\n\n        If e.Exception Is Nothing Then\n            \n            &#39; The update operation succeeded. Clear the message label.\n            Message.Text = &quot;&quot;\n\n        Else\n\n            &#39; The update operation failed. Display an error message.\n            Message.Text = e.AffectedRows.ToString() &amp; &quot; rows updated. &quot; &amp; e.Exception.Message\n            e.ExceptionHandled = True\n        \n        End If\n        \n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewUpdateEventArgs OldValues Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewUpdateEventArgs OldValues Example&lt;/h3&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                 forecolor=&quot;Red&quot;          \n                 runat=&quot;server&quot;/&gt;\n                \n            &lt;br/&gt;\n\n            &lt;!-- The GridView control automatically sets the columns     --&gt;\n            &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n            &lt;!-- No input controls are rendered for these columns in     --&gt;\n            &lt;!-- edit mode.                                              --&gt;\n            &lt;asp:gridview id=&quot;EmployeesGridView&quot; \n                datasourceid=&quot;EmployeesSqlDataSource&quot;\n                DataKeyNames=&quot;EmployeeID&quot;\n                autogenerateeditbutton=&quot;True&quot; \n                onrowupdating=&quot;EmployeesGridView_RowUpdating&quot;\n                onrowupdated=&quot;EmployeesGridView_RowUpdated&quot;   \n                runat=&quot;server&quot;&gt;\n            &lt;/asp:gridview&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Northwind sample database.                   --&gt;\n            &lt;asp:sqldatasource id=&quot;EmployeesSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [EmployeeID], [LastName], [FirstName], [HireDate] FROM [Employees]&quot;\n                updatecommand=&quot;UPDATE [Employees] SET [LastName] = @LastName, [FirstName] = @FirstName, [HireDate] = @HireDate WHERE [EmployeeID] = @EmployeeID&quot; \n                ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n                runat=&quot;server&quot; &gt;\n            &lt;/asp:sqldatasource&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"GridViewUpdateEventArgsOldValues#1\">\n&lt;%@ Page language=&quot;C#&quot; %&gt;\n&lt;%@ import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    void EmployeesGridView_RowUpdating(Object sender, GridViewUpdateEventArgs e)\n    {\n    \n        // Record the update operation in a log file.\n        \n        // Create the log text. \n        String logText = &quot;&quot;;\n\n        // Append the original field values to the log text.\n        foreach (DictionaryEntry valueEntry in e.OldValues)\n        {\n            logText += valueEntry.Key + &quot;=&quot; + valueEntry.Value + &quot;;&quot;;\n        }\n        \n        // Append the text to a log file.\n        StreamWriter sw;\n        sw = File.AppendText(Server.MapPath(null) + &quot;\\\\updatelog.txt&quot;);\n        sw.WriteLine(logText);\n        sw.Flush();\n        sw.Close();\n    \n    }\n\n    void EmployeesGridView_RowUpdated(Object sender, GridViewUpdatedEventArgs e)\n    {\n    \n        if (e.Exception == null)\n        {\n            // The update operation succeeded. Clear the message label.\n            Message.Text = &quot;&quot;;\n        }\n        else\n        {\n            // The update operation failed. Display an error message.\n            Message.Text = e.AffectedRows.ToString() + &quot; rows updated. &quot; + e.Exception.Message;\n            e.ExceptionHandled = true;\n        }\n        \n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head id=&quot;Head1&quot; runat=&quot;server&quot;&gt;\n    &lt;title&gt;GridViewUpdateEventArgs OldValues Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n        &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n        \n            &lt;h3&gt;GridViewUpdateEventArgs OldValues Example&lt;/h3&gt;\n            \n            &lt;asp:label id=&quot;Message&quot;\n                 forecolor=&quot;Red&quot;          \n                 runat=&quot;server&quot;/&gt;\n                \n            &lt;br/&gt;\n\n            &lt;!-- The GridView control automatically sets the columns     --&gt;\n            &lt;!-- specified in the datakeynames attribute as read-only.   --&gt;\n            &lt;!-- No input controls are rendered for these columns in     --&gt;\n            &lt;!-- edit mode.                                              --&gt;\n            &lt;asp:gridview id=&quot;EmployeesGridView&quot; \n                datasourceid=&quot;EmployeesSqlDataSource&quot;\n                DataKeyNames=&quot;EmployeeID&quot;\n                autogenerateeditbutton=&quot;True&quot; \n                onrowupdating=&quot;EmployeesGridView_RowUpdating&quot;\n                onrowupdated=&quot;EmployeesGridView_RowUpdated&quot;   \n                runat=&quot;server&quot;&gt;\n            &lt;/asp:gridview&gt;\n            \n            &lt;!-- This example uses Microsoft SQL Server and connects --&gt;\n            &lt;!-- to the Northwind sample database.                   --&gt;\n            &lt;asp:sqldatasource id=&quot;EmployeesSqlDataSource&quot;  \n                selectcommand=&quot;SELECT [EmployeeID], [LastName], [FirstName], [HireDate] FROM [Employees]&quot;\n                updatecommand=&quot;UPDATE [Employees] SET [LastName] = @LastName, [FirstName] = @FirstName, [HireDate] = @HireDate WHERE [EmployeeID] = @EmployeeID&quot; \n                ConnectionString=&quot;&lt;%$ ConnectionStrings:NorthwindConnectionString %&gt;&quot;\n                runat=&quot;server&quot; &gt;\n            &lt;/asp:sqldatasource&gt;\n            \n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_RowIndex\">\r\n    \r\n            <a id=\"System_Web_UI_WebControls_GridViewUpdateEventArgs_RowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the row being updated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the row being updated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the RowIndex property to determine the index of the row being updated. The row index is often used to retrieve the corresponding row from the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview#System_Web_UI_WebControls_GridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection of the <a class=\"xref\" href=\"system.web.ui.webcontrols.gridview\" data-linktype=\"relative-path\">GridView</a> control, which allows you to access the row&#39;s properties.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.GridViewUpdateEventArgs.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.GridViewUpdateEventArgs.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues\">\r\n<meta name=\"APIName\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs.RowIndex\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e0e8d62f-5008-0068-3c04-3e25a471315f\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\GridViewUpdateEventArgs.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides data for the  event.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.UI.WebControls/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.UI.WebControls.GridViewUpdateEventArgs\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.UI.WebControls.GridViewUpdateEventArgs.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.UI.WebControls.GridViewUpdateEventArgs.yml","open_to_public_contributors":true,"api_name":["System.Web.UI.WebControls.GridViewUpdateEventArgs","System.Web.UI.WebControls.GridViewUpdateEventArgs..ctor","System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys","System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues","System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues","System.Web.UI.WebControls.GridViewUpdateEventArgs.RowIndex"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.UI.WebControls.GridViewUpdateEventArgs","System::Web::UI::WebControls::GridViewUpdateEventArgs","System.Web.UI.WebControls.GridViewUpdateEventArgs.#ctor","System::Web::UI::WebControls::GridViewUpdateEventArgs::#ctor","System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys","System::Web::UI::WebControls::GridViewUpdateEventArgs::Keys","System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues","System::Web::UI::WebControls::GridViewUpdateEventArgs::NewValues","System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues","System::Web::UI::WebControls::GridViewUpdateEventArgs::OldValues","System.Web.UI.WebControls.GridViewUpdateEventArgs.RowIndex","System::Web::UI::WebControls::GridViewUpdateEventArgs::RowIndex"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e0e8d62f-5008-0068-3c04-3e25a471315f","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.UI.WebControls\\GridViewUpdateEventArgs.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.UI.WebControls/GridViewUpdateEventArgs.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"GridViewUpdateEventArgs class | Microsoft Docs","_op_ogTitle":"GridViewUpdateEventArgs class","description":"Provides data for the  event.\n","toc_asset_id":"_splitted/System.Web.UI.WebControls/toc.json","toc_rel":"_splitted/System.Web.UI.WebControls/toc.json","source_url":"","ms.assetid":"System.Web.UI.WebControls.GridViewUpdateEventArgs","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.gridviewupdateeventargs","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.ui.webcontrols.gridviewupdateeventargs","fileRelativePath":"System.Web.UI.WebControls.GridViewUpdateEventArgs.html"},"themesRelativePathToOutputRoot":"_themes/"}