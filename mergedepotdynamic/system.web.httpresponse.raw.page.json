{"content":"    \r\n    <h1 id=\"System_Web_HttpResponse\">\r\n      <span class=\"lang-csharp\">HttpResponse</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates HTTP-response information from an ASP.NET operation.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class HttpResponse</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">HttpResponse</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The methods and properties of the HttpResponse class are exposed through the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_Response_\" data-linktype=\"relative-path\">Response</a> property of the <a class=\"xref\" href=\"system.web.httpapplication\" data-linktype=\"relative-path\">HttpApplication</a>, <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>, <a class=\"xref\" href=\"system.web.ui.page\" data-linktype=\"relative-path\">Page</a>, and <a class=\"xref\" href=\"system.web.ui.usercontrol\" data-linktype=\"relative-path\">UserControl</a> classes.  </p>\n<p> The following methods of the HttpResponse class are supported only in post back scenarios and not in asynchronous post back scenarios:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_BinaryWrite_\" data-linktype=\"relative-path\">BinaryWrite</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Clear_\" data-linktype=\"relative-path\">Clear</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ClearContent_\" data-linktype=\"relative-path\">ClearContent</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ClearHeaders_\" data-linktype=\"relative-path\">ClearHeaders</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Close_\" data-linktype=\"relative-path\">Close</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Flush_\" data-linktype=\"relative-path\">Flush</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_TransmitFile_\" data-linktype=\"relative-path\">TransmitFile</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Write_\" data-linktype=\"relative-path\">Write</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_WriteFile_\" data-linktype=\"relative-path\">WriteFile</a>  \n</li>\n<li><a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_WriteSubstitution_\" data-linktype=\"relative-path\">WriteSubstitution</a>  \n\n<p>Partial-page updates are enabled when you use <a class=\"xref\" href=\"system.web.ui.updatepanel\" data-linktype=\"relative-path\">UpdatePanel</a> controls to update selected regions of a page instead of updating the whole page with a post back. For more information, see <a href=\"../Topic/UpdatePanel%20Control%20Overview.md\" data-linktype=\"relative-path\">UpdatePanel Control Overview</a> and <a href=\"../Topic/Partial-Page%20Rendering%20Overview.md\" data-linktype=\"relative-path\">Partial-Page Rendering Overview</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse__ctor_System_IO_TextWriter_\" data-linktype=\"self-bookmark\">HttpResponse(TextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Buffer\" data-linktype=\"self-bookmark\">Buffer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_BufferOutput\" data-linktype=\"self-bookmark\">BufferOutput</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Cache\" data-linktype=\"self-bookmark\">Cache</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_CacheControl\" data-linktype=\"self-bookmark\">CacheControl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <code>Cache-Control</code> HTTP header that matches one of the <a class=\"xref\" href=\"system.web.httpcacheability\" data-linktype=\"relative-path\">HttpCacheability</a> enumeration values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Charset\" data-linktype=\"self-bookmark\">Charset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP character set of the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ClientDisconnectedToken\" data-linktype=\"self-bookmark\">ClientDisconnectedToken</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> object that is tripped when the client disconnects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ContentEncoding\" data-linktype=\"self-bookmark\">ContentEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP character set of the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ContentType\" data-linktype=\"self-bookmark\">ContentType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP MIME type of the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Cookies\" data-linktype=\"self-bookmark\">Cookies</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the response cookie collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Expires\" data-linktype=\"self-bookmark\">Expires</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. Expires is provided for compatibility with earlier versions of ASP.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ExpiresAbsolute\" data-linktype=\"self-bookmark\">ExpiresAbsolute</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the absolute date and time at which to remove cached information from the cache. ExpiresAbsolute is provided for compatibility with earlier versions of ASP.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Filter\" data-linktype=\"self-bookmark\">Filter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_HeaderEncoding\" data-linktype=\"self-bookmark\">HeaderEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object that represents the encoding for the current header output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Headers\" data-linktype=\"self-bookmark\">Headers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of response headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_HeadersWritten\" data-linktype=\"self-bookmark\">HeadersWritten</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Gets a value indicating whether the response headers have been written.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_IsClientConnected\" data-linktype=\"self-bookmark\">IsClientConnected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the client is still connected to the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_IsRequestBeingRedirected\" data-linktype=\"self-bookmark\">IsRequestBeingRedirected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a Boolean value indicating whether the client is being transferred to a new location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Output\" data-linktype=\"self-bookmark\">Output</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables output of text to the outgoing HTTP response stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_OutputStream\" data-linktype=\"self-bookmark\">OutputStream</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables binary output to the outgoing HTTP content body.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectLocation\" data-linktype=\"self-bookmark\">RedirectLocation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the HTTP <code>Location</code> header.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Status\" data-linktype=\"self-bookmark\">Status</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the <code>Status</code> line that is returned to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_StatusCode\" data-linktype=\"self-bookmark\">StatusCode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP status code of the output returned to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_StatusDescription\" data-linktype=\"self-bookmark\">StatusDescription</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the HTTP status string of the output returned to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_SubStatusCode\" data-linktype=\"self-bookmark\">SubStatusCode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value qualifying the status code of the response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_SupportsAsyncFlush\" data-linktype=\"self-bookmark\">SupportsAsyncFlush</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the connection supports asynchronous flush operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_SuppressContent\" data-linktype=\"self-bookmark\">SuppressContent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether to send HTTP content to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_SuppressDefaultCacheControlHeader\" data-linktype=\"self-bookmark\">SuppressDefaultCacheControlHeader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Gets or sets a value indicating whether to suppress the default <code>Cache Control: private</code> header for the current HTTP response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_SuppressFormsAuthenticationRedirect\" data-linktype=\"self-bookmark\">SuppressFormsAuthenticationRedirect</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_TrySkipIisCustomErrors\" data-linktype=\"self-bookmark\">TrySkipIisCustomErrors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that specifies whether <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> custom errors are disabled.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddCacheDependency_System_Web_Caching_CacheDependency___\" data-linktype=\"self-bookmark\">AddCacheDependency(CacheDependency[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddCacheItemDependencies_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">AddCacheItemDependencies(ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the validity of a cached response dependent on other items in the cache.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddCacheItemDependencies_System_String___\" data-linktype=\"self-bookmark\">AddCacheItemDependencies(String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the validity of a cached item dependent on another item in the cache.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddCacheItemDependency_System_String_\" data-linktype=\"self-bookmark\">AddCacheItemDependency(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes the validity of a cached response dependent on another item in the cache.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddFileDependencies_System_Collections_ArrayList_\" data-linktype=\"self-bookmark\">AddFileDependencies(ArrayList)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a group of file names to the collection of file names on which the current response is dependent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddFileDependencies_System_String___\" data-linktype=\"self-bookmark\">AddFileDependencies(String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an array of file names to the collection of file names on which the current response is dependent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddFileDependency_System_String_\" data-linktype=\"self-bookmark\">AddFileDependency(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a single file name to the collection of file names on which the current response is dependent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddHeader_System_String_System_String_\" data-linktype=\"self-bookmark\">AddHeader(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an HTTP header to the output stream. AddHeader is provided for compatibility with earlier versions of ASP.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AddOnSendingHeaders_System_Action_System_Web_HttpContext__\" data-linktype=\"self-bookmark\">AddOnSendingHeaders(Action&lt;HttpContext&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AppendCookie_System_Web_HttpCookie_\" data-linktype=\"self-bookmark\">AppendCookie(HttpCookie)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an HTTP cookie to the intrinsic cookie collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AppendHeader_System_String_System_String_\" data-linktype=\"self-bookmark\">AppendHeader(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds an HTTP header to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_AppendToLog_System_String_\" data-linktype=\"self-bookmark\">AppendToLog(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds custom log information to the Internet Information Services (IIS) log file.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ApplyAppPathModifier_System_String_\" data-linktype=\"self-bookmark\">ApplyAppPathModifier(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds a session ID to the virtual path if the session is using <span class=\"xref\">stem.Web.Configuration.SessionStateSection.Cookieless*</span> session state and returns the combined path. If <span class=\"xref\">stem.Web.Configuration.SessionStateSection.Cookieless*</span> session state is not used, ApplyAppPathModifier returns the original virtual path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_BeginFlush_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginFlush(AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends the currently buffered response to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_BinaryWrite_System_Byte___\" data-linktype=\"self-bookmark\">BinaryWrite(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a string of binary characters to the HTTP output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all content output from the buffer stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ClearContent\" data-linktype=\"self-bookmark\">ClearContent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all content output from the buffer stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_ClearHeaders\" data-linktype=\"self-bookmark\">ClearHeaders()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all headers from the buffer stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Closes the socket connection to a client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_DisableKernelCache\" data-linktype=\"self-bookmark\">DisableKernelCache()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disables kernel caching for the current response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_DisableUserCache\" data-linktype=\"self-bookmark\">DisableUserCache()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disables IIS user-mode caching for this response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_End\" data-linktype=\"self-bookmark\">End()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends all currently buffered output to the client, stops execution of the page, and raises the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_EndRequest\" data-linktype=\"relative-path\">EndRequest</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_EndFlush_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndFlush(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Completes an asynchronous flush operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sends all currently buffered output to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_FlushAsync\" data-linktype=\"self-bookmark\">FlushAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously sends all currently buffered output to the client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Pics_System_String_\" data-linktype=\"self-bookmark\">Pics(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Appends a HTTP <code>PICS-Label</code> header to the output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_PushPromise_System_String_\" data-linktype=\"self-bookmark\">PushPromise(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at <a href=\"http://http2.github.io/http2-spec/#PushResources\" data-linktype=\"external\">HTTP/2 Specification Section 8.2: Server Push</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_PushPromise_System_String_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">PushPromise(String,String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at <a href=\"http://http2.github.io/http2-spec/#PushResources\" data-linktype=\"external\">HTTP/2 Specification Section 8.2: Server Push</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Redirect_System_String_\" data-linktype=\"self-bookmark\">Redirect(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a request to a new URL and specifies the new URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">Redirect(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectPermanent_System_String_\" data-linktype=\"self-bookmark\">RedirectPermanent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from the requested URL to the specified URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectPermanent_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">RedirectPermanent(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoute_System_Object_\" data-linktype=\"self-bookmark\">RedirectToRoute(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a request to a new URL by using route parameter values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoute_System_String_\" data-linktype=\"self-bookmark\">RedirectToRoute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a request to a new URL by using a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoute_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"self-bookmark\">RedirectToRoute(RouteValueDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a request to a new URL by using route parameter values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoute_System_String_System_Object_\" data-linktype=\"self-bookmark\">RedirectToRoute(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a request to a new URL by using route parameter values and a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoute_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"self-bookmark\">RedirectToRoute(String,RouteValueDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Redirects a request to a new URL by using route parameter values and a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoutePermanent_System_Object_\" data-linktype=\"self-bookmark\">RedirectToRoutePermanent(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoutePermanent_System_String_\" data-linktype=\"self-bookmark\">RedirectToRoutePermanent(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoutePermanent_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"self-bookmark\">RedirectToRoutePermanent(RouteValueDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoutePermanent_System_String_System_Object_\" data-linktype=\"self-bookmark\">RedirectToRoutePermanent(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RedirectToRoutePermanent_System_String_System_Web_Routing_RouteValueDictionary_\" data-linktype=\"self-bookmark\">RedirectToRoutePermanent(String,RouteValueDictionary)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RemoveOutputCacheItem_System_String_\" data-linktype=\"self-bookmark\">RemoveOutputCacheItem(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes from the cache all cached items that are associated with the default output-cache provider. This method is static.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_RemoveOutputCacheItem_System_String_System_String_\" data-linktype=\"self-bookmark\">RemoveOutputCacheItem(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_SetCookie_System_Web_HttpCookie_\" data-linktype=\"self-bookmark\">SetCookie(HttpCookie)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates an existing cookie in the cookie collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_TransmitFile_System_String_\" data-linktype=\"self-bookmark\">TransmitFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_TransmitFile_System_String_System_Int64_System_Int64_\" data-linktype=\"self-bookmark\">TransmitFile(String,Int64,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Write_System_Char_\" data-linktype=\"self-bookmark\">Write(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a character to an HTTP response output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Write_System_Object_\" data-linktype=\"self-bookmark\">Write(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to an HTTP response stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Write_System_String_\" data-linktype=\"self-bookmark\">Write(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a string to an HTTP response output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_Write_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Write(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an array of characters to an HTTP response output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_WriteFile_System_String_\" data-linktype=\"self-bookmark\">WriteFile(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the contents of the specified file directly to an HTTP response output stream as a file block.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_WriteFile_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">WriteFile(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_WriteFile_System_IntPtr_System_Int64_System_Int64_\" data-linktype=\"self-bookmark\">WriteFile(IntPtr,Int64,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified file directly to an HTTP response output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_WriteFile_System_String_System_Int64_System_Int64_\" data-linktype=\"self-bookmark\">WriteFile(String,Int64,Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the specified file directly to an HTTP response output stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_HttpResponse_WriteSubstitution_System_Web_HttpResponseSubstitutionCallback_\" data-linktype=\"self-bookmark\">WriteSubstitution(HttpResponseSubstitutionCallback)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse__ctor_System_IO_TextWriter_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HttpResponse(TextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public HttpResponse (System.IO.TextWriter writer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>writer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object that enables custom HTTP output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.  </p>\n<p> The methods and properties of the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class are exposed through the intrinsic <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Response_\" data-linktype=\"relative-path\">Response</a> object in ASP.NET.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Buffer\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Buffer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Buffer</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Buffer { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the output to client is buffered; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Buffer property has been deprecated in favor of the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_BufferOutput_\" data-linktype=\"relative-path\">BufferOutput</a> property and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_BufferOutput_\" data-linktype=\"relative-path\">BufferOutput</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_BufferOutput\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_BufferOutput_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BufferOutput</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BufferOutput { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the output to client is buffered; otherwise <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ContentType_\" data-linktype=\"relative-path\">ContentType</a> property for the response to image/jpeg, calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Clear_\" data-linktype=\"relative-path\">Clear</a> method to remove other content that might be attached to the response, and then sets the BufferOutput property to true so that the entire page will be processed before any content is sent to the requesting client.  </p>\n<p> For a complete example, see the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples1#2\">        // Set the page&#39;s content type to JPEG files\n        // and clears all content output from the buffer stream.\n        Response.ContentType = &quot;image/jpeg&quot;;\n        Response.Clear();\n    \n        // Buffer response so that page is sent\n        // after processing is complete.\n        Response.BufferOutput = true;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples1#2\">      &#39; Set the page&#39;s content type to JPEG files\n      &#39; and clears all content output from the buffer stream.\n      Response.ContentType = &quot;image/jpeg&quot;\n      Response.Clear()\n      \n      &#39; Buffer response so that page is sent\n      &#39; after processing is complete.\n      Response.BufferOutput = True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Cache\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Cache_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cache</div>        \r\n          </div>\r\n    \r\n            <p>Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.HttpCachePolicy Cache { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcachepolicy\" data-linktype=\"relative-path\">HttpCachePolicy</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.httpcachepolicy\" data-linktype=\"relative-path\">HttpCachePolicy</a> object that contains information about the caching policy of the current response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes properties of the current cache policy to the HTTP output stream.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpResponse.Cache Example#1\">   Response.Cache.SetExpires(DateTime.Now.AddSeconds(60))\n   Response.Cache.SetCacheability(HttpCacheability.Public)\n   Response.Cache.SetValidUntilExpires(False)\n   Response.Cache.VaryByParams(&quot;Category&quot;) = True\n\n   If Response.Cache.VaryByParams(&quot;Category&quot;) Then\n      &#39;...\n   End If\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpResponse.Cache Example#1\">   Response.Cache.SetExpires(DateTime.Now.AddSeconds(60));\n   Response.Cache.SetCacheability(HttpCacheability.Public);\n   Response.Cache.SetValidUntilExpires(false);\n   Response.Cache.VaryByParams[&quot;Category&quot;] = true;\n\n   if (Response.Cache.VaryByParams[&quot;Category&quot;])\n   {\n      //...\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_CacheControl\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_CacheControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheControl</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <code>Cache-Control</code> HTTP header that matches one of the <a class=\"xref\" href=\"system.web.httpcacheability\" data-linktype=\"relative-path\">HttpCacheability</a> enumeration values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CacheControl { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string representation of the <a class=\"xref\" href=\"system.web.httpcacheability\" data-linktype=\"relative-path\">HttpCacheability</a> enumeration value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The string value set does not match one of the <a class=\"xref\" href=\"system.web.httpcacheability\" data-linktype=\"relative-path\">HttpCacheability</a> enumeration values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The values for <code>Private</code>, <code>Public</code>, and <code>No-Cache</code> are strings and must be enclosed in quotation marks (&quot; &quot;). If the CacheControl property is set to a value that does not match one of the <a class=\"xref\" href=\"system.web.httpcacheability\" data-linktype=\"relative-path\">HttpCacheability</a> enumeration values, then an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown. If the CacheControl property is not set, the cacheability of the response is set to <a class=\"xref\" href=\"system.web.httpcacheability\" data-linktype=\"relative-path\">HttpCacheability</a>.  </p>\n<p> The <code>CacheControl</code>, <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Expires_\" data-linktype=\"relative-path\">Expires</a>, and <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ExpiresAbsolute_\" data-linktype=\"relative-path\">ExpiresAbsolute</a> properties have been deprecated. Instead, the methods of the <a class=\"xref\" href=\"system.web.httpcachepolicy\" data-linktype=\"relative-path\">HttpCachePolicy</a> class are available through the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Cache_\" data-linktype=\"relative-path\">Cache</a> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Charset\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Charset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Charset</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP character set of the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Charset { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The HTTP character set of the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The <code>Charset</code> property was set after headers were sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Charset</code> property can be set to <code>null</code> to suppress the HTTP <code>Content-Type</code> header.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks whether the character set of the output stream is Central European (ISO).  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.Charset#1\">        If Response.Charset = &quot;iso-8859-2&quot; Then\n            &#39;...\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.Charset#1\">        if (Response.Charset == &quot;iso-8859-2&quot;)\n        {\n            // ...\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ClientDisconnectedToken\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ClientDisconnectedToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClientDisconnectedToken</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a> object that is tripped when the client disconnects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.CancellationToken ClientDisconnectedToken { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.cancellationtoken\" data-linktype=\"relative-path\">CancellationToken</a></div>\r\n                  </div>\r\n                  <p>The cancellation token.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This API is thread-safe. However, there are some restrictions on how the cancellation token should be used. Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior. Keep in mind the following guidelines:  </p>\n<ul>\n<li><p>Ensure that you don&#39;t call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request. There is no guarantee that the token will ever transition to a canceled state before it is disposed. For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.  </p>\n</li>\n<li><p>Do not wait on the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_WaitHandle_\" data-linktype=\"relative-path\">WaitHandle</a>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.  </p>\n</li>\n<li><p>Do not call the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_Register_\" data-linktype=\"relative-path\">Register</a> overloads which invoke the callback on the original <a class=\"xref\" href=\"system.threading.synchronizationcontext\" data-linktype=\"relative-path\">SynchronizationContext</a> object.  </p>\n</li>\n<li><p>Do not use the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <a class=\"xref\" href=\"system.threading.cancellationtoken#System_Threading_CancellationToken_Register_\" data-linktype=\"relative-path\">Register</a> method. The callback may be running concurrently with other ASP.NET or application code.  </p>\n</li>\n<li><p>Keep the callback methods short-running and non-blocking.  </p>\n</li>\n<li><p>Make every effort to avoid throwing exceptions from within the callback methods.  </p>\n<p>This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode. If you invoke it without the right IIS version or pipeline mode, a <a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a> is thrown. To determine the IIS version, use <a class=\"xref\" href=\"system.web.httpruntime#System_Web_HttpRuntime_IISVersion_\" data-linktype=\"relative-path\">IISVersion</a>. To determine the pipeline mode, use <a class=\"xref\" href=\"system.web.httpruntime#System_Web_HttpRuntime_UsingIntegratedPipeline_\" data-linktype=\"relative-path\">UsingIntegratedPipeline</a>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ContentEncoding\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ContentEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP character set of the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding ContentEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object that contains information about the character set of the current response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Attempted to set ContentEncoding to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Default <code>ContentEncoding</code> can be specified in an ASP.NET configuration file in the <a href=\"http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7\" data-linktype=\"external\">globalization Element (ASP.NET Settings Schema)</a> section. If ContentEncoding is specified by the client, the default configuration settings are overridden.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes a human-readable description of the character set encoding to the output stream.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.ContentEncoding Example#1\">Response.Write (Response.ContentEncoding.EncodingName);\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.ContentEncoding Example#1\">Response.Write (Response.ContentEncoding.EncodingName)\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ContentType\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ContentType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP MIME type of the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ContentType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The HTTP MIME type of the output stream. The default value is &quot;<code>text/html</code>&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The ContentType property is set to <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the ContentType property for the response to image/jpeg, calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Clear_\" data-linktype=\"relative-path\">Clear</a> method to remove other content that might be attached to the response, and then sets the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_BufferOutput_\" data-linktype=\"relative-path\">BufferOutput</a> property to true so that the complete page will be processed before any content is sent to the requesting client.  </p>\n<p> For a complete example, see the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples1#2\">        // Set the page&#39;s content type to JPEG files\n        // and clears all content output from the buffer stream.\n        Response.ContentType = &quot;image/jpeg&quot;;\n        Response.Clear();\n    \n        // Buffer response so that page is sent\n        // after processing is complete.\n        Response.BufferOutput = true;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples1#2\">      &#39; Set the page&#39;s content type to JPEG files\n      &#39; and clears all content output from the buffer stream.\n      Response.ContentType = &quot;image/jpeg&quot;\n      Response.Clear()\n      \n      &#39; Buffer response so that page is sent\n      &#39; after processing is complete.\n      Response.BufferOutput = True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Cookies\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Cookies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cookies</div>        \r\n          </div>\r\n    \r\n            <p>Gets the response cookie collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.HttpCookieCollection Cookies { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcookiecollection\" data-linktype=\"relative-path\">HttpCookieCollection</a></div>\r\n                  </div>\r\n                  <p>The response cookie collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET includes two intrinsic cookie collections. The collection accessed through the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Cookies_\" data-linktype=\"relative-path\">Cookies</a> collection of <a class=\"xref\" href=\"system.web.httprequest\" data-linktype=\"relative-path\">HttpRequest</a> contains cookies transmitted by the client to the server in the <code>Cookie</code> header. The collection accessed through the Cookies collection of <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> contains new cookies created on the server and transmitted to the client in the <code>Set-Cookie</code> header.  </p>\n<p> After you add a cookie by using the Cookies collection, the cookie is immediately available in the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_Cookies_\" data-linktype=\"relative-path\">Cookies</a> collection, even if the response has not been sent to the client.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new cookie named <code>LastVisit</code>, sets the value of the cookie to the current date and time, and adds the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the <code>Set-Cookie</code> header with the HTTP output stream.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.Cookies Example#1\">HttpCookie MyCookie = new HttpCookie(&quot;LastVisit&quot;);\nDateTime now = DateTime.Now;\n\nMyCookie.Value = now.ToString();\nMyCookie.Expires = now.AddHours(1);\n\nResponse.Cookies.Add(MyCookie);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.Cookies Example#1\">Dim MyCookie As New HttpCookie(&quot;LastVisit&quot;)\nDim now As DateTime = DateTime.Now\n\nMyCookie.Value = now.ToString()\nMyCookie.Expires = now.AddHours(1)\n\nResponse.Cookies.Add(MyCookie)\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Expires\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Expires_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Expires</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of minutes before a page cached on a browser expires. If the user returns to the same page before it expires, the cached version is displayed. Expires is provided for compatibility with earlier versions of ASP.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Expires { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of minutes before the page expires.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Expires</code>, <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ExpiresAbsolute_\" data-linktype=\"relative-path\">ExpiresAbsolute</a> and <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_CacheControl_\" data-linktype=\"relative-path\">CacheControl</a> properties have been deprecated in favor of the methods of the <a class=\"xref\" href=\"system.web.httpcachepolicy\" data-linktype=\"relative-path\">HttpCachePolicy</a> class available through the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Cache_\" data-linktype=\"relative-path\">Cache</a> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ExpiresAbsolute\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ExpiresAbsolute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExpiresAbsolute</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the absolute date and time at which to remove cached information from the cache. ExpiresAbsolute is provided for compatibility with earlier versions of ASP.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DateTime ExpiresAbsolute { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </div>\r\n                  <p>The date and time at which the page expires.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>ExpiresAbsolute</code>, <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Expires_\" data-linktype=\"relative-path\">Expires</a>, and <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_CacheControl_\" data-linktype=\"relative-path\">CacheControl</a> properties have been deprecated in favor of the methods of the <a class=\"xref\" href=\"system.web.httpcachepolicy\" data-linktype=\"relative-path\">HttpCachePolicy</a> class available through the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Cache_\" data-linktype=\"relative-path\">Cache</a> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Filter\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Filter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Filter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream Filter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> object that acts as the output filter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Filtering is not allowed with the entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you create a <code>Stream</code> object and set the Filter property to the <code>Stream</code> object, all HTTP output sent by <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Write_\" data-linktype=\"relative-path\">Write</a> passes through the filter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is an ASP.NET page that sets the Filter property to a new instance of the <code>UpperCaseFilter</code> class, a custom <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class that converts all text that passes through it to uppercase. The information about the request is saved to a text file, and then the Filter property is set. After the response filter is in place, the code calls the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_MapPath_\" data-linktype=\"relative-path\">MapPath</a> method to get the absolute path to a text file named <code>TestFile.txt</code> that serves as the source for the content of the response. The code then creates a new <a class=\"xref\" href=\"system.io.streamreader\" data-linktype=\"relative-path\">StreamReader</a> object to read the text file from beginning to end, and then calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Write_\" data-linktype=\"relative-path\">Write</a> method to display the content of the file on the page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpRequest_Samples2#1\">&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot;%&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ Import Namespace=&quot;Samples.AspNet.VB.Controls&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n     \n  Private Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs)\n      \n    &#39; Filter the text to be rendered as all uppercase.\n    Response.Filter = New UpperCaseFilterStream(Response.Filter)\n    \n    &#39; Convert a virtual path to a fully qualified physical path.\n    Dim fullpath As String = Request.MapPath(&quot;~\\&nbsp;&nbsp;&nbsp;&nbsp;estFile.txt&quot;)\n    \n    Try\n      \n      Dim sr As StreamReader = New StreamReader(fullpath)\n      \n      Do While sr.Peek() &gt;= 0\n        Response.Write(Convert.ToChar(sr.Read()))\n      Loop\n      sr.Close()\n      Message.Text = &quot;Reading the file was successful.&quot;\n      \n    Catch ex As Exception\n      \n      Message.Text = &quot;The process failed.&quot;\n\n    End Try\n\n    \n  End Sub\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;HttpResponse.MapPath Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;Form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; \n                 runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpRequest_Samples2#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.IO&quot; %&gt;\n&lt;%@ import Namespace=&quot;Samples.AspNet.CS.Controls&quot;  %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n\n      // Filter the text to be rendered as all uppercase.\n      Response.Filter = new UpperCaseFilterStream(Response.Filter);\n\n      // Convert a virtual path to a fully qualified physical path.\n      string fullpath = Request.MapPath(&quot;~\\&nbsp;&nbsp;&nbsp;&nbsp;estFile.txt&quot;);\n\n      try\n      {\n        // Read the contents of the file using a StreamReader.\n        using (StreamReader sr = new StreamReader(fullpath))\n        while (sr.Peek() &gt;= 0)\n        {\n          Response.Write((char)sr.Read());\n        }\n        Message.Text = &quot;Reading the file was successful.&quot;;\n        \n      }\n      catch (Exception ex)\n      {\n        Message.Text = &quot;The process failed.&quot;;\n      }    \n     }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;HttpResponse.MapPath Example&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n\n      &lt;asp:Label id=&quot;Message&quot; \n                 runat=&quot;server&quot;/&gt;\n\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_HeaderEncoding\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_HeaderEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object that represents the encoding for the current header output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding HeaderEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> that contains information about the character set for the current header.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The encoding value is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The encoding value is <span class=\"xref\">stem.Text.Encoding.Unicode*</span>.  </p>\n<p> - or -  </p>\n<p> The headers have already been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The HeaderEncoding property gives you the ability to disable or change the <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object on a response header by using the <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a>, <a class=\"xref\" href=\"system.text.unicodeencoding\" data-linktype=\"relative-path\">UnicodeEncoding</a>, <a class=\"xref\" href=\"system.text.utf7encoding\" data-linktype=\"relative-path\">UTF7Encoding</a>, or <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a> object. The default encoding value is the <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a> class.  </p>\n<p> By changing the type of the HeaderEncoding property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header. Header injection attacks can be avoided, in part, by leaving the HeaderEncoding property of a response to the default setting. An attack against a vulnerable application could echo back entrusted data as part of a response header. If the HeaderEncoding is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Headers\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Headers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Headers</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of response headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Specialized.NameValueCollection Headers { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> of response headers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The operation requires the integrated pipeline mode in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> and at least the .NET Framework version 3.0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Headers property is only supported with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> integrated pipeline mode and at least the .NET Framework 3.0. When you try to access the Headers property and either of these two conditions is not met, a <a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a> is thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_HeadersWritten\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_HeadersWritten_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeadersWritten</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Gets a value indicating whether the response headers have been written.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HeadersWritten { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the response headers have been written; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_IsClientConnected\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_IsClientConnected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsClientConnected</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the client is still connected to the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsClientConnected { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the client is currently connected; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsClientConnected property returns <code>false</code> when the following conditions are true:  </p>\n<ul>\n<li><p>The connection to the client was terminated. This can occur if the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Close_\" data-linktype=\"relative-path\">Close</a> method was invoked, or if the client stopped execution of the Web page or browsed to another page.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> object that is handling the request is <code>null</code> or the <a class=\"xref\" href=\"system.web.httpworkerrequest#System_Web_HttpWorkerRequest_IsClientConnected_\" data-linktype=\"relative-path\">IsClientConnected</a> method returns <code>false</code>. If a custom <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> object handles the request, then the <a class=\"xref\" href=\"system.web.httpworkerrequest#System_Web_HttpWorkerRequest_IsClientConnected_\" data-linktype=\"relative-path\">IsClientConnected</a> method might be set based on custom criteria. For example, the custom worker request might force a time-out after a period of time.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the IsClientConnected property to check whether the client that is requesting the page remains connected to the server. If IsClientConnected is true, the code calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_\" data-linktype=\"relative-path\">Redirect</a> method, and the client will view another page. If IsClientConnected is false, then the code calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a> method and all page processing is terminated.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample4#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n        // Check whether the browser remains\n        // connected to the server.\n        if (Response.IsClientConnected)\n        {\n            // If still connected, redirect\n            // to another page. \n            Response.Redirect(&quot;Page2CS.aspx&quot;, false);\n        }\n        else\n        {\n            // If the browser is not connected\n            // stop all response processing.\n            Response.End();\n        }\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample4#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n    Private Sub Page_Load(sender As Object, e As EventArgs)\n\n        &#39; Check whether the browser remains\n        &#39; connected to the server.\n        If (Response.IsClientConnected) Then\n\n            &#39; If still connected, redirect\n            &#39; to another page.             \n            Response.Redirect(&quot;Page2VB.aspx&quot;, false)\n        Else\n            &#39; If the browser is not connected\n            &#39; stop all response processing.\n            Response.End()\n        End If\n    End Sub\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_IsRequestBeingRedirected\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_IsRequestBeingRedirected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsRequestBeingRedirected</div>        \r\n          </div>\r\n    \r\n            <p>Gets a Boolean value indicating whether the client is being transferred to a new location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsRequestBeingRedirected { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the value of the location response header is different than the current location; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the IsRequestBeingRedirected property with the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_RedirectLocation_\" data-linktype=\"relative-path\">RedirectLocation</a> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP <code>Location</code> header is different than the current URI and what the new intended URI that is being transferred to will be.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Output\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Output_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Output</div>        \r\n          </div>\r\n    \r\n            <p>Enables output of text to the outgoing HTTP response stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.TextWriter Output { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> object that enables custom output to the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is an ASP.NET page that contains a <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox\" data-linktype=\"relative-path\">TextBox</a> control that has its <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox#System_Web_UI_WebControls_TextBox_TextMode_\" data-linktype=\"relative-path\">TextMode</a> property set to <a class=\"xref\" href=\"system.web.ui.webcontrols.textboxmode\" data-linktype=\"relative-path\">TextBoxMode</a>. The page&#39;s code takes the text that a user enters in the <a class=\"xref\" href=\"system.web.ui.webcontrols.textbox#System_Web_UI_WebControls_TextBox_TextMode_\" data-linktype=\"relative-path\">TextMode</a>, uses the <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method to HTML encode it, and the Output property to display the encoded string to the page.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.Output_Sample#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    &#39; When the page is posted back, the text box&#39;s \n    &#39; Text property value is HTML encoded and sent\n    &#39; sent to the current response.\n    Private Sub btnSubmit_Click(sender As Object, e As EventArgs)\n        If (IsPostBack = True)\n            Server.HtmlEncode(txtSubmitString.Text, Response.Output)\n        End If\n    End Sub\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;p style=&quot;font-family:Tahoma; font-size:12&quot;&gt;\n            Enter your comments here:\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;asp:TextBox id=&quot;txtSubmitString&quot; runat=&quot;server&quot; Width=&quot;181px&quot; TextMode=&quot;MultiLine&quot;&gt;&lt;/asp:TextBox&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;asp:Button id=&quot;btnSubmit&quot; onclick=&quot;btnSubmit_Click&quot; runat=&quot;server&quot; Text=&quot;Submit&quot;&gt;&lt;/asp:Button&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;asp:Label id=&quot;lblEncodedString&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n        &lt;/p&gt;\n\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.Output_Sample#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    // When the page is posted back, the text box&#39;s \n    // Text property value is HTML encoded and sent\n    // sent to the current Response.\n    void btnSubmit_Click(object sender, EventArgs e) {\n\n        if (IsPostBack)\n        {\n            Server.HtmlEncode(txtSubmitString.Text, Response.Output);\n        }\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;p style=&quot;font-family:Tahoma; font-size:12&quot;&gt;\n            Enter your comments here:\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;asp:TextBox id=&quot;txtSubmitString&quot; runat=&quot;server&quot; Width=&quot;181px&quot; TextMode=&quot;MultiLine&quot;&gt;&lt;/asp:TextBox&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;asp:Button id=&quot;btnSubmit&quot; onclick=&quot;btnSubmit_Click&quot; runat=&quot;server&quot; Text=&quot;Submit&quot;&gt;&lt;/asp:Button&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;asp:Label id=&quot;lblEncodedString&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n        &lt;/p&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_OutputStream\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_OutputStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OutputStream</div>        \r\n          </div>\r\n    \r\n            <p>Enables binary output to the outgoing HTTP content body.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Stream OutputStream { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </div>\r\n                  <p>An IO <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> representing the raw contents of the outgoing HTTP content body.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>OutputStream</code> is not available.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Starting with the .NET Framework version 2.0, when you use the [Stream.Write(Byte&lt;xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName&gt; method of the IO stream returned by the OutputStream property, the following exceptions might be thrown:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>, if the <code>offset</code> or <code>count</code> parameter is negative or if the <code>buffer</code> parameter&#39;s length minus the <code>offset</code> parameter is less than or equal to zero.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a>, if the <code>buffer</code> parameter is <code>null</code>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the <a class=\"xref\" href=\"system.drawing.image#System_Drawing_Image_Save_\" data-linktype=\"relative-path\">Save</a> method to save a <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> object to the OutputStream property, and converts the image to the JPEG format. The code then calls the Dispose method on the <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> object and a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object, releasing the resources that they were using. Finally, the code calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Flush_\" data-linktype=\"relative-path\">Flush</a> method to send the content of the response to the requesting client.  </p>\n<p> For a complete example, see the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples1#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Imaging&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Drawing2D&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n        // Set the page&#39;s content type to JPEG files\n        // and clears all content output from the buffer stream.\n        Response.ContentType = &quot;image/jpeg&quot;;\n        Response.Clear();\n    \n        // Buffer response so that page is sent\n        // after processing is complete.\n        Response.BufferOutput = true;\n    \n        // Create a font style.\n        Font rectangleFont = new Font(\n            &quot;Arial&quot;, 10, FontStyle.Bold);\n    \n        // Create integer variables.\n        int height = 100;\n        int width = 200;\n    \n        // Create a random number generator and create\n        // variable values based on it.\n        Random r = new Random();\n        int x = r.Next(75);\n        int a = r.Next(155);\n        int x1 = r.Next(100);\n    \n        // Create a bitmap and use it to create a\n        // Graphics object.\n        Bitmap bmp = new Bitmap(\n            width, height, PixelFormat.Format24bppRgb);\n        Graphics g = Graphics.FromImage(bmp);\n    \n        g.SmoothingMode = SmoothingMode.AntiAlias;\n        g.Clear(Color.LightGray);\n    \n        // Use the Graphics object to draw three rectangles.\n        g.DrawRectangle(Pens.White, 1, 1, width-3, height-3);\n        g.DrawRectangle(Pens.Aquamarine, 2, 2, width-3, height-3);\n        g.DrawRectangle(Pens.Black, 0, 0, width, height);\n    \n        // Use the Graphics object to write a string\n        // on the rectangles.\n        g.DrawString(\n            &quot;ASP.NET Samples&quot;, rectangleFont,\n            SystemBrushes.WindowText, new PointF(10, 40));\n    \n        // Apply color to two of the rectangles.\n        g.FillRectangle(\n            new SolidBrush(\n                Color.FromArgb(a, 255, 128, 255)),\n            x, 20, 100, 50);\n    \n        g.FillRectangle(\n            new LinearGradientBrush(\n                new Point(x, 10),\n                new Point(x1 + 75, 50 + 30),\n                Color.FromArgb(128, 0, 0, 128),\n                Color.FromArgb(255, 255, 255, 240)),\n            x1, 50, 75, 30);\n\n        // Save the bitmap to the response stream and\n        // convert it to JPEG format.\n        bmp.Save(Response.OutputStream, ImageFormat.Jpeg);\n    \n        // Release memory used by the Graphics object\n        // and the bitmap.\n        g.Dispose();\n        bmp.Dispose();\n    \n        // Send the output to the client.\n        Response.Flush();\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples1#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Imaging&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Drawing2D&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n   Private Sub Page_Load(sender As Object, e As EventArgs)\n      &#39; Set the page&#39;s content type to JPEG files\n      &#39; and clears all content output from the buffer stream.\n      Response.ContentType = &quot;image/jpeg&quot;\n      Response.Clear()\n      \n      &#39; Buffer response so that page is sent\n      &#39; after processing is complete.\n      Response.BufferOutput = True\n      \n      &#39; Create a font style.\n      Dim rectangleFont As New Font( _\n          &quot;Arial&quot;, 10, FontStyle.Bold)\n      \n      &#39; Create integer variables.\n      Dim height As Integer = 100\n      Dim width As Integer = 200\n      \n      &#39; Create a random number generator and create\n      &#39; variable values based on it.\n      Dim r As New Random()\n      Dim x As Integer = r.Next(75)\n      Dim a As Integer = r.Next(155)\n      Dim x1 As Integer = r.Next(100)\n      \n      &#39; Create a bitmap and use it to create a\n      &#39; Graphics object.\n      Dim bmp As New Bitmap( _\n          width, height, PixelFormat.Format24bppRgb)\n      Dim g As Graphics = Graphics.FromImage(bmp)\n      \n      g.SmoothingMode = SmoothingMode.AntiAlias\n      g.Clear(Color.LightGray)\n      \n      &#39; Use the Graphics object to draw three rectangles.\n      g.DrawRectangle(Pens.White, 1, 1, width - 3, height - 3)\n      g.DrawRectangle(Pens.Aquamarine, 2, 2, width - 3, height - 3)\n      g.DrawRectangle(Pens.Black, 0, 0, width, height)\n      \n      &#39; Use the Graphics object to write a string\n      &#39; on the rectangles.\n      g.DrawString(&quot;ASP.NET Samples&quot;, rectangleFont, SystemBrushes.WindowText, New PointF(10, 40))\n      \n      &#39; Apply color to two of the rectangles.\n      g.FillRectangle( _\n          New SolidBrush( _\n              Color.FromArgb(a, 255, 128, 255)), _\n          x, 20, 100, 50)\n      \n      g.FillRectangle( _\n          New LinearGradientBrush( _\n              New Point(x, 10), _\n              New Point(x1 + 75, 50 + 30), _\n              Color.FromArgb(128, 0, 0, 128), _\n              Color.FromArgb(255, 255, 255, 240)), _\n          x1, 50, 75, 30)\n\n      &#39; Save the bitmap to the response stream and\n      &#39; convert it to JPEG format.\n      bmp.Save(Response.OutputStream, ImageFormat.Jpeg)\n      \n      &#39; Release memory used by the Graphics object\n      &#39; and the bitmap.\n      g.Dispose()\n      bmp.Dispose()\n      \n      &#39; Send the output to the client.\n      Response.Flush()\n   End Sub &#39;Page_Load\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectLocation\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectLocation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the HTTP <code>Location</code> header.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string RedirectLocation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The absolute URI that is transmitted to the client in the HTTP <code>Location</code> header.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The HTTP headers have already been written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to use this property to specify the redirect URL when you code a permanent redirect by using the HTTP 301 response code.  </p>\n<pre><code class=\"lang-c#\">Response.StatusCode = 301;  \nResponse.Status = &quot;301 Moved Permanently&quot;;  \nResponse.RedirectLocation = &quot;http://www.newurl.com &quot;;  \nResponse.End();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Status\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Status_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Status</div>        \r\n          </div>\r\n    \r\n            <p>Sets the <code>Status</code> line that is returned to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Status { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Setting the status code causes a string describing the status of the HTTP output to be returned to the client. The default value is 200 (OK).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Status is set to an invalid status code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Status has been deprecated in favor of <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_StatusDescription_\" data-linktype=\"relative-path\">StatusDescription</a> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_StatusDescription_\" data-linktype=\"relative-path\">StatusDescription</a> instead.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_StatusCode\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_StatusCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StatusCode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP status code of the output returned to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int StatusCode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An Integer representing the status of the HTTP output returned to the client. The default value is 200 (OK). For a listing of valid status codes, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=73157\" data-linktype=\"external\">Http Status Codes</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>StatusCode is set after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the status code of the output stream. If the status code is not equal to 200, additional code is executed.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.StatusCode#1\">\n    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)\n\n        &#39; Show success or failure of page load.\n        If Response.StatusCode &lt;&gt; 200 Then\n            Response.Write(&quot;There was a problem accessing the web resource.&quot; &amp; _\n                &quot;&lt;br /&gt;&quot; &amp; Response.StatusDescription)\n        End If\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.StatusCode#1\">    protected void Page_Load(object sender, EventArgs e)\n    {\n        // Show success or failure of page load.\n        if (Response.StatusCode != 200)\n        {\n            Response.Write(&quot;There was a problem accessing the web resource&quot; +\n                &quot;&lt;br /&gt;&quot; + Response.StatusDescription);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_StatusDescription\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_StatusDescription_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StatusDescription</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the HTTP status string of the output returned to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StatusDescription { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that describes the status of the HTTP output returned to the client. The default value is &quot;OK&quot;. For a listing of valid status codes, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=73157\" data-linktype=\"external\">Http Status Codes</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>StatusDescription</code> is set after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The selected value has a length greater than 512.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks the status string of the output stream. If the status is not equal to &quot;OK&quot;, additional code is executed.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.StatusDescription#1\">        If Response.StatusDescription &lt;&gt; &quot;OK&quot; Then\n            &#39;...\n        End If\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.StatusDescription#1\">        if (Response.StatusDescription != &quot;OK&quot;)\n        {\n            // ...\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_SubStatusCode\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_SubStatusCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubStatusCode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value qualifying the status code of the response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int SubStatusCode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer value that represents the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> sub status code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The operation requires the integrated pipeline mode in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> and at least the .NET Framework version 3.0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The status code is set after all HTTP headers have been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SubStatusCode property is only supported with the integrated pipeline mode in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> and at least the .NET Framework version 3.0. When you set the SubStatusCode property, the status is logged on <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> if failed-request tracing is configured. Independent of whether tracing is configured, the code is never sent as part of the final response to the request. For more information, see <a href=\"http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1\" data-linktype=\"external\">Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the SubStatusCode property in an event handler for the <a class=\"xref\" href=\"system.web.httpapplication\" data-linktype=\"relative-path\">HttpApplication</a> instance of the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_PostAuthenticateRequest\" data-linktype=\"relative-path\">PostAuthenticateRequest</a> event. Put the code file in the App_Code folder of your Web application and configure the Web.config file to register the module. For more information, see <a href=\"../Topic/Walkthrough:%20Creating%20and%20Registering%20a%20Custom%20HTTP%20Module.md\" data-linktype=\"relative-path\">Walkthrough: Creating and Registering a Custom HTTP Module</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.SubStatusCode#1\">using System;\nusing System.Data;\nusing System.Web;\nusing System.Web.Security;\nusing System.Web.UI;\n\n// Module that sets Response.SubStatusCode in PostAuthenticateRequest event handler.\nnamespace Samples\n{\n    public class ModuleExampleTestCS : IHttpModule\n    {\n        public ModuleExampleTestCS()\n        {\n            // Constructor\n        }\n        public void Init(HttpApplication app)\n        {\n            app.PostAuthenticateRequest += new EventHandler(PostAuthenticateRequest_Handler);\n        }\n        public void Dispose()\n        {\n        }\n        public void PostAuthenticateRequest_Handler(object source, EventArgs e)\n        {\n            HttpApplication app = (HttpApplication)source;\n            HttpContext context = app.Context;\n\n            // Set a SubStatusCode for Failed Request Tracing in IIS7\n            context.Response.SubStatusCode = 99;\n        }\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.SubStatusCode#1\">Imports System\nImports System.Data\nImports System.Web\nImports System.Web.Security\nImports System.Web.UI\nImports Microsoft.VisualBasic\n\n&#39; Module that sets Response.SubStatusCode in PostAuthenticateRequest event handler.\nNamespace Samples\n\n    Public Class ModuleExampleTestVB\n        Implements IHttpModule\n\n        Public Sub New()\n            &#39; Constructor\n        End Sub\n\n        Public Sub Init(ByVal app As HttpApplication) Implements IHttpModule.Init\n            AddHandler app.PostAuthenticateRequest, AddressOf Me.PostAuthenticateRequest_Handler\n        End Sub\n\n        Public Sub Dispose() Implements IHttpModule.Dispose\n        End Sub\n\n        Public Sub PostAuthenticateRequest_Handler(ByVal source As Object, ByVal e As EventArgs)\n            Dim app As HttpApplication = CType(source, HttpApplication)\n            Dim context As HttpContext = app.Context\n\n            &#39; Set a SubStatusCode for Failed Request Tracing in IIS7.\n            context.Response.SubStatusCode = 99\n        End Sub\n    End Class\n\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_SupportsAsyncFlush\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_SupportsAsyncFlush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SupportsAsyncFlush</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the connection supports asynchronous flush operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SupportsAsyncFlush { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the connection supports asynchronous flush operations; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns the value of the <a class=\"xref\" href=\"system.web.httpworkerrequest#System_Web_HttpWorkerRequest_SupportsAsyncFlush_\" data-linktype=\"relative-path\">SupportsAsyncFlush</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_SuppressContent\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_SuppressContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SuppressContent</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether to send HTTP content to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SuppressContent { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to suppress output; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks whether the <a class=\"xref\" href=\"system.web.httprequest#System_Web_HttpRequest_IsSecureConnection_\" data-linktype=\"relative-path\">IsSecureConnection</a> property is set to false. If it is, the SuppressContent property is set to true to stop the response from being sent.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample5#3\">        // Check whether the request is sent\n        // over HTTPS. If not, do not send \n        // content to the client.    \n        if (!Request.IsSecureConnection)\n        {\n            Response.SuppressContent = true;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample5#3\">        &#39; Check whether the request is sent\n        &#39; over HTTPS. If not, do not return\n        &#39; content to the client.\n        If (Request.IsSecureConnection = False) Then      \n            Response.SuppressContent = True\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_SuppressDefaultCacheControlHeader\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_SuppressDefaultCacheControlHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SuppressDefaultCacheControlHeader</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Gets or sets a value indicating whether to suppress the default <code>Cache Control: private</code> header for the current HTTP response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SuppressDefaultCacheControlHeader { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to suppress the default <code>Cache Control: private</code> header for the current HTTP response; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, ASP.NET sends a <code>Cache-Control: private</code> response header unless an explicit cache policy has been specified for this response. This property allows suppressing this default response header on a per-request basis. The header can still be suppressed for the entire application by setting <a class=\"xref\" href=\"system.web.configuration.httpruntimesection#System_Web_Configuration_HttpRuntimeSection_SendCacheControlHeader_\" data-linktype=\"relative-path\">SendCacheControlHeader</a> in <a href=\"http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369\" data-linktype=\"external\">httpRuntime Element (ASP.NET Settings Schema)</a> or <a href=\"http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee\" data-linktype=\"external\">outputCache Element for caching (ASP.NET Settings Schema)</a>.  </p>\n<p> Use caution when suppressing the default <code>Cache-Control: private</code> header, as proxies and other intermediaries may treat responses without this header as cacheable by default. This treatment can lead to the inadvertent caching of sensitive information. See <a href=\"http://tools.ietf.org/html/rfc2616\" data-linktype=\"external\">RFC 2616, Sec. 13.4</a> for more information.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_SuppressFormsAuthenticationRedirect\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_SuppressFormsAuthenticationRedirect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SuppressFormsAuthenticationRedirect</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SuppressFormsAuthenticationRedirect { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if forms authentication redirection should be suppressed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page. This isn&#39;t appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request. This property provides a way to suppress the redirect behavior and send the original status code to the client.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_TrySkipIisCustomErrors\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_TrySkipIisCustomErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrySkipIisCustomErrors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that specifies whether <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/iisver-md.md&quot; -->IIS 7.0<!--END INCLUDE --> custom errors are disabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TrySkipIisCustomErrors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to disable IIS custom errors; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TrySkipIisCustomErrors property is used only when your application is hosted in IIS 7.0. When running in Classic mode in IIS 7.0 the TrySkipIisCustomErrors property default value is <code>true</code>. When running in Integrated mode, the TrySkipIisCustomErrors property default value is <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddCacheDependency_System_Web_Caching_CacheDependency___\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddCacheDependency_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCacheDependency(CacheDependency[])</div>        \r\n          </div>\r\n    \r\n            <p>Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCacheDependency (System.Web.Caching.CacheDependency[] dependencies);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dependencies</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A file, cache key, or <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> to add to the list of application dependencies.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>dependencies</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This method was called too late in the cache processing pipeline, after the cached response was already created.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AddCacheDependency method allows dependencies to be created between cached responses and a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to create a cache dependency by using the AddCacheDependency method and a <a class=\"xref\" href=\"system.web.caching.cachedependency\" data-linktype=\"relative-path\">CacheDependency</a> object.  </p>\n<pre><code class=\"lang-vb\" name=\"HttpResponse.AddCacheDependency#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ outputcache duration=&quot;30&quot; varybyparam=&quot;none&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;Server&quot;&gt;\n    Sub Page_Load()\n        &#39; Create a Cache Dependency \n        &#39; using a CacheDependency object.\n        Dim authorsDependency(&quot;authors.xml&quot;) As CacheDependency\n\n        &#39; Make the page invalid if either of the\n        &#39; cached items change or expire.        \n        Response.AddCacheDependency(authorsDependency)\n\n        &#39; Display the current time for cache reference\n        lblOutputCacheMsg.Text = DateTime.Now.ToString()\n        \n        \n    End Sub\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;Cache Dependencies&lt;/title&gt; \n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n        &lt;table&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;td style=&quot;WIDTH: 118px&quot;&gt;\n                        The page was generated at:&lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;asp:Label id=&quot;lblOutputCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"HttpResponse.AddCacheDependency#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ outputcache duration=&quot;30&quot; varybyparam=&quot;none&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;Server&quot;&gt;\n    private void Page_Load(object sender, System.EventArgs e)\n    {\n        // Create a Cache Dependency \n        // using a CacheDependency object.\n        CacheDependency authorsDependency = new CacheDependency(&quot;authors.xml&quot;);\n\n\n        // Make the page invalid if either of the\n        // cached items change or expire.        \n        Response.AddCacheDependency(authorsDependency);\n\n        // Display the current time for cache reference\n        lblOutputCacheMsg.Text = DateTime.Now.ToString();\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;Cache Dependencies&lt;/title&gt; \n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n        &lt;table&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;td style=&quot;WIDTH: 118px&quot;&gt;\n                        The page was generated at:&lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;asp:Label id=&quot;lblOutputCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddCacheItemDependencies_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddCacheItemDependencies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCacheItemDependencies(ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the validity of a cached response dependent on other items in the cache.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCacheItemDependencies (System.Collections.ArrayList cacheKeys);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cacheKeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> that contains the keys of the items that the current cached response is dependent upon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the items referred to in the <code>cacheKeys</code> parameter are removed from the cache, the cached response of the current item is not valid.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use an ASP.NET page that is output cached. The code for the page creates an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> object of keys that are associated with items that are stored in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object. Next, the code passes the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> as the parameter in a call to the AddCacheItemDependencies method. This makes the output cached response not valid, if any of the files specified in the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> change.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples2#5\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ outputcache duration=&quot;30&quot; varybyparam=&quot;none&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;Server&quot;&gt;\n    private void Page_Load(object sender, System.EventArgs e)\n    {\n\n        // Create an array list that\n        // contains the keys for two\n        // items stored in the Cache object.\n        ArrayList deps = new ArrayList();\n        deps.Add(&quot;bookData&quot;);\n        deps.Add(&quot;authorData&quot;);\n    \n        // Make the page invalid if either of the\n        // cached items change or expire.        \n        Response.AddCacheItemDependencies(deps);\n\n        // Populate the DataGrids.\n        dgAuthors.DataSource = DataHelper.GetAuthorData();\n        dgAuthors.DataBind();\n\n        dgBooks.DataSource = DataHelper.GetBookData();\n        dgBooks.DataBind();\n\n        lblOutputCacheMsg.Text = DateTime.Now.ToString();\n\n    }\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;Cache Item Dependencies&lt;/title&gt; \n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n        &lt;table&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n                        Authors&lt;/th&gt;\n                    &lt;td&gt;\n                        &lt;asp:DataGrid id=&quot;dgAuthors&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n                        Books&lt;/th&gt;\n                    &lt;td&gt;\n                        &lt;asp:DataGrid id=&quot;dgBooks&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td style=&quot;WIDTH: 118px&quot;&gt;\n                        The page was generated at:&lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;asp:Label id=&quot;lblOutputCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples2#5\">&lt;%@ Page Language=&quot;vb&quot; %&gt;\n&lt;%@ outputcache duration=&quot;30&quot; varybyparam=&quot;none&quot; %&gt;\n&lt;%@ Import namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Private Sub Page_Load(sender As Object, e As System.EventArgs)\n       &#39; Create an array list that\n       &#39; contains the keys for two\n       &#39; items stored in the Cache object.\n       Dim deps As New ArrayList()\n       deps.Add(&quot;bookData&quot;)\n       deps.Add(&quot;authorData&quot;)\n    \n       &#39; Make the page invalid if either of the\n       &#39; cached items change or expire.\n       Response.AddCacheItemDependencies(deps)\n    \n       &#39; Populate the DataGrids.\n       dgAuthors.DataSource = DataHelper.GetAuthorData()\n       dgAuthors.DataBind()\n    \n       dgBooks.DataSource = DataHelper.GetBookData()\n       dgBooks.DataBind()\n    \n       lblOutputCacheMsg.Text = DateTime.Now.ToString()\n    End Sub\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;Cache Item Dependencies&lt;/title&gt; \n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n        &lt;table&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n                        Authors&lt;/th&gt;\n                    &lt;td&gt;\n                        &lt;asp:DataGrid id=&quot;dgAuthors&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n                        Books&lt;/th&gt;\n                    &lt;td&gt;\n                        &lt;asp:DataGrid id=&quot;dgBooks&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td style=&quot;WIDTH: 118px&quot;&gt;\n                        The page was generated at:&lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;asp:Label id=&quot;lblOutputCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddCacheItemDependencies_System_String___\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddCacheItemDependencies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCacheItemDependencies(String[])</div>        \r\n          </div>\r\n    \r\n            <p>Makes the validity of a cached item dependent on another item in the cache.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCacheItemDependencies (string[] cacheKeys);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cacheKeys</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of item keys that the cached response is dependent upon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When any of the <code>cacheKey</code>s are removed from the cache, the cached response of the current item is invalid.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddCacheItemDependency_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddCacheItemDependency_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCacheItemDependency(String)</div>        \r\n          </div>\r\n    \r\n            <p>Makes the validity of a cached response dependent on another item in the cache.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCacheItemDependency (string cacheKey);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cacheKey</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the item that the cached response is dependent upon.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the item corresponding to the <code>cacheKey</code> parameter is removed from the cache, the cached response of the current item is invalid.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is an ASP.NET user control that is output cached. The code for the control calls the AddCacheItemDependency method with the key of an item stored in the <a class=\"xref\" href=\"system.web.caching.cache\" data-linktype=\"relative-path\">Cache</a> object passed as its parameter. If the item does not exist in the cache, the control&#39;s response that was stored in the output cache is invalidated. This means that on the subsequent request, a new version of the control&#39;s response will be added to the output cache.  </p>\n<p> Next, the code checks whether an item associated with a <code>bookData</code> key is stored in the <code>Cache</code> object, and displays one of two lines of text dependent upon the result. Then, the code sets the <a class=\"xref\" href=\"system.web.ui.webcontrols.basedatalist#System_Web_UI_WebControls_BaseDataList_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property of a <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control, which is named <code>dgBooks</code>, with a call to a custom <code>DataHelper</code> class&#39; shared <code>GetBookData</code> method, and populates the <a class=\"xref\" href=\"system.web.ui.webcontrols.datagrid\" data-linktype=\"relative-path\">DataGrid</a> with the <a class=\"xref\" href=\"system.web.ui.control#System_Web_UI_Control_DataBind_\" data-linktype=\"relative-path\">DataBind</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples2#3\">    &lt;%@ Control Language=&quot;c#&quot; %&gt;\n    &lt;%@ Outputcache duration=&quot;10&quot; varybyparam=&quot;none&quot; shared=&quot;True&quot; %&gt;\n    &lt;%@ Import Namespace = &quot;Samples.AspNet.CS&quot; %&gt;\n    &lt;%@ Import Namespace = &quot;System.Data&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, System.EventArgs e)\n    {\n    \n        // Make user control invalid if the\n        // cache item changes or expires.\n        Response.AddCacheItemDependency(&quot;bookData&quot;);\n\n        // Create a DataView object.\n        DataView source = (DataView)Cache[&quot;bookData&quot;];\n    \n        // Check if the view is stored in the cache\n        // and generate the right label text\n        // dependent upon what is returned.\n        if (source == null)\n        {\n            source = DataHelper.GetBookData();\n            lblCacheMsg.Text = &quot;Data generated explicitly.&quot;;\n        }\n        else\n        {\n            lblCacheMsg.Text = &quot;Data retrieved from application cache.&quot;;\n        }\n    \n        dgBooks.DataSource = source;\n        dgBooks.DataBind();\n    \n        lblOutputMessage.Text = DateTime.Now.ToString();\n    }\n\n&lt;/script&gt;\n    &lt;table&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;th&gt;\n                    Books&lt;/th&gt;\n                &lt;td&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;\n                    &lt;asp:DataGrid id=&quot;dgBooks&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                &lt;/td&gt;\n                &lt;td&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;\n                    &lt;asp:Label id=&quot;lblCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                &lt;/td&gt;\n                &lt;td&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;\n                    The control was created at: \n                &lt;/td&gt;\n                &lt;td&gt;\n                    &lt;asp:Label id=&quot;lblOutputMessage&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples2#3\">&lt;%@ Control Language=&quot;vb&quot; %&gt;\n&lt;%@ Outputcache duration=&quot;10&quot; varybyparam=&quot;none&quot; shared=&quot;True&quot; %&gt;\n&lt;%@ Import Namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;%@ Import Namespace=&quot;System.Data&quot; %&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Private Sub Page_Load(sender As Object, e As System.EventArgs)\n    \n        &#39; Make user control invalid if the \n        &#39; cache item changes or expires.\n        Response.AddCacheItemDependency(&quot;bookData&quot;)\n\n\n        &#39; Create a DataView object.\n        Dim source As DataView = Cache(&quot;bookData&quot;)\n    \n        &#39; Check if the view is stored in the cache\n        &#39; and generate the right label text\n        &#39; dependent upon what is returned.\n        If source Is Nothing Then\n\n           source = DataHelper.GetBookData()\n           lblCacheMsg.Text = &quot;Data generated explicitly.&quot;\n        Else\n           lblCacheMsg.Text = &quot;Data retrieved from application cache.&quot;\n        End If\n    \n        dgBooks.DataSource = source\n        dgBooks.DataBind()\n    \n        lblOutputMessage.Text = DateTime.Now.ToString()\n    End Sub\n\n&lt;/script&gt;\n\n    &lt;table&gt;\n        &lt;tbody&gt;\n            &lt;tr&gt;\n                &lt;th&gt;\n                    Books&lt;/th&gt;\n                &lt;td&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;\n                    &lt;asp:DataGrid id=&quot;dgBooks&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                &lt;/td&gt;\n                &lt;td&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;\n                    &lt;asp:Label id=&quot;lblCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                &lt;/td&gt;\n                &lt;td&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td&gt;\n                    The control was created at: \n                &lt;/td&gt;\n                &lt;td&gt;\n                    &lt;asp:Label id=&quot;lblOutputMessage&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                &lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/tbody&gt;\n    &lt;/table&gt;\n     \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddFileDependencies_System_Collections_ArrayList_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddFileDependencies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddFileDependencies(ArrayList)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a group of file names to the collection of file names on which the current response is dependent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddFileDependencies (System.Collections.ArrayList filenames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection of files to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is an ASP.NET page that is output cached. The code for the page creates an <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> of file paths, and then passes the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> as the parameter in a call to the AddFileDependencies method. This makes the output cached response invalid if any of the files specified in the <a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a> changes.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples2#6\">&lt;%@ Page Language=&quot;vb&quot; %&gt;\n&lt;%@ outputcache duration=&quot;30&quot; varybyparam=&quot;none&quot; %&gt;\n&lt;%@ Import Namespace=&quot;Samples.AspNet.VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    Private Sub Page_Load(sender As Object, e As System.EventArgs)\n    \n       &#39; Create variable and assign file paths to them.\n       Dim file1 As String = Server.MapPath(&quot;authors.xml&quot;)\n       Dim file2 As String = Server.MapPath(&quot;books.xml&quot;)\n    \n       &#39; Create an array list to contain the file paths.\n       Dim fileList As New ArrayList()\n       fileList.Add(file1)\n       fileList.Add(file2)\n    \n       &#39; Use the AddFileDependencies method to\n       &#39; invalidate the output cached page if \n       &#39; one of the files changes.\n       Response.AddFileDependencies(fileList)\n    \n       &#39; Populate the DataGrids.\n       dgAuthors.DataSource = DataHelper.GetAuthorData()\n       dgAuthors.DataBind()\n    \n       dgBooks.DataSource = DataHelper.GetBookData()\n       dgBooks.DataBind()\n    \n       lblOutputCacheMsg.Text = DateTime.Now.ToString()\n    End Sub\n\n&lt;/script&gt;\n\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;PageDataDisplay&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n        &lt;table&gt;\n            &lt;tbody&gt;\n                &lt;tr&gt;\n                    &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n                        Authors&lt;/th&gt;\n                    &lt;td&gt;\n                        &lt;asp:DataGrid id=&quot;dgAuthors&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n                        Books&lt;/th&gt;\n                    &lt;td&gt;\n                        &lt;asp:DataGrid id=&quot;dgBooks&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n                &lt;tr&gt;\n                    &lt;td style=&quot;WIDTH: 118px&quot;&gt;\n                        The page was generated at:&lt;/td&gt;\n                    &lt;td&gt;\n                        &lt;asp:Label id=&quot;lblOutputCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n                    &lt;/td&gt;\n                &lt;/tr&gt;\n            &lt;/tbody&gt;\n        &lt;/table&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples2#6\">&lt;%@ Page Language=&quot;c#&quot; %&gt;\n&lt;%@ outputcache duration=&quot;30&quot; varybyparam=&quot;none&quot; %&gt;\n&lt;%@ Import Namespace=&quot;Samples.AspNet.CS&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, System.EventArgs e) \n    {\n        \n        // Create variables and assign file paths to them.\n        string file1 = Server.MapPath(&quot;authors.xml&quot;);\n        string file2 = Server.MapPath(&quot;books.xml&quot;);\n\n        // Create an array list to contain the file paths.\n        ArrayList fileList = new ArrayList();\n        fileList.Add(file1);\n    fileList.Add(file2);\n            \n        // Make the page dependent upon the arrayList.\n        Response.AddFileDependencies(fileList);\n\n        // Populate the DataGrids.\n        dgAuthors.DataSource = DataHelper.GetAuthorData();\n        dgAuthors.DataBind();\n\n        dgBooks.DataSource = DataHelper.GetBookData();\n        dgBooks.DataBind();\n\n        lblOutputCacheMsg.Text = DateTime.Now.ToString();\n\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n  &lt;head&gt;\n    &lt;title&gt;PageDataDisplay&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;  \n    &lt;form id=&quot;Form1&quot; method=&quot;post&quot; runat=&quot;server&quot;&gt;\n      &lt;table&gt;\n        &lt;tr&gt;\n          &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n            Authors\n          &lt;/th&gt;\n          &lt;td&gt;\n            &lt;asp:DataGrid id=&quot;dgAuthors&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;th style=&quot;WIDTH: 118px&quot;&gt;\n            Books\n          &lt;/th&gt;\n          &lt;td&gt;\n            &lt;asp:DataGrid id=&quot;dgBooks&quot; runat=&quot;server&quot;&gt;&lt;/asp:DataGrid&gt;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n          &lt;td style=&quot;WIDTH: 118px&quot;&gt;\n            The page was generated at:\n          &lt;/td&gt;\n          &lt;td&gt;\n            &lt;asp:Label id=&quot;lblOutputCacheMsg&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;\n          &lt;/td&gt;\n        &lt;/tr&gt;\n      &lt;/table&gt;\n    &lt;/form&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddFileDependencies_System_String___\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddFileDependencies_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddFileDependencies(String[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds an array of file names to the collection of file names on which the current response is dependent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddFileDependencies (string[] filenames);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filenames</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of files to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example adds an array of file names to the AddFileDependencies file dependency list. If the files changes, the cached response is invalidated.  </p>\n<pre><code class=\"lang-cs\" name=\"Response.AddFileDependency#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ Import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n    private void Page_Load()\n    {\n        String[] FileNames = new String[3];\n        FileNames[0] = &quot;Test.txt&quot;;\n        FileNames[1] = &quot;Test2.txt&quot;;\n        FileNames[2] = &quot;Test3.txt&quot;;\n        Response.AddFileDependencies(FileNames);\n        Response.Write(&quot;File Dependencies sucessfully added!&quot;);\n    }\n          \n&lt;/script&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"Response.AddFileDependency#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ Import namespace=&quot;System.IO&quot; %&gt;\n\n&lt;script runat=&quot;server&quot;&gt;\n  \n    Sub Page_Load()\n        Dim FileNames(2) As String\n        FileNames(0) = &quot;Test.txt&quot;\n        FileNames(1) = &quot;Test2.txt&quot;\n        FileNames(2) = &quot;Test3.txt&quot;\n        Response.AddFileDependencies(FileNames)\n        Response.Write(&quot;File Dependencies sucessfully added!&quot;)\n    End Sub\n          \n&lt;/script&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddFileDependency_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddFileDependency_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddFileDependency(String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a single file name to the collection of file names on which the current response is dependent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddFileDependency (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you use the AddFileDependency method to add a file dependency, you must also specify output caching programmatically or declaratively. For example, to specify output caching declaratively, use the  directive. For more information, see <a href=\"../Topic/How%20to:%20Cache%20Page%20Output%20with%20File%20Dependencies.md\" data-linktype=\"relative-path\">How to: Cache Page Output with File Dependencies</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to add a single file name to the AddFileDependency file dependency list. If the file changes, the cached response is invalidated.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpResponse.AddFileDependency Example#1\">Dim FileName As String\n FileName = &quot;C:\\Files\\F1.txt&quot;\n Response.AddFileDependency(FileName)\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpResponse.AddFileDependency Example#1\">String FileName;\n FileName = &quot;C:\\\\Files\\\\F1.txt&quot;;\n Response.AddFileDependency(FileName);\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddHeader_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddHeader(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an HTTP header to the output stream. AddHeader is provided for compatibility with earlier versions of ASP.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddHeader (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the HTTP header to add <code>value</code> to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to add to the header.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>AddHeader is the same as <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_AppendHeader_\" data-linktype=\"relative-path\">AppendHeader</a> and is provided only for compatibility with earlier versions of ASP. With ASP.NET, use <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_AppendHeader_\" data-linktype=\"relative-path\">AppendHeader</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AddOnSendingHeaders_System_Action_System_Web_HttpContext__\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AddOnSendingHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddOnSendingHeaders(Action&lt;HttpContext&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.2 and later versions]  </p>\n<p> Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.ISubscriptionToken AddOnSendingHeaders (Action&lt;System.Web.HttpContext&gt; callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.action-1\" data-linktype=\"relative-path\">Action</a>&lt;<a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The callback method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.isubscriptiontoken\" data-linktype=\"relative-path\">ISubscriptionToken</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.isubscriptiontoken\" data-linktype=\"relative-path\">ISubscriptionToken</a> object that represents the subscription to the OnSendingHeaders pseudo-event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"IMPORTANT\"><h5>Important</h5><p> The AddOnSendingHeaders method is not invoked if the native module flushes the response first.  </p>\n</div>\n<p> The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription. The intent is that the callback may modify the response status code or may set a response cookie or header. Other usage notes and caveats:  </p>\n<ul>\n<li><p>This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven&#39;t yet been sent for the current request.  </p>\n</li>\n<li><p>The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on. For example, the callback may be invoked synchronously in a background thread if a background flush is being performed. <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Current_\" data-linktype=\"relative-path\">Current</a> is not guaranteed to be available in such a thread.  </p>\n</li>\n<li><p>The callback must not call any method that manipulates the response entity body or that results in a flush. For example, the callback must not call <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_\" data-linktype=\"relative-path\">Redirect</a>, as that method may manipulate the response entity body.  </p>\n</li>\n<li><p>The callback must contain only short-running synchronous code. Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.  </p>\n</li>\n<li><p>The callback must not throw an exception; otherwise behavior is undefined.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AppendCookie_System_Web_HttpCookie_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AppendCookie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppendCookie(HttpCookie)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an HTTP cookie to the intrinsic cookie collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AppendCookie (System.Web.HttpCookie cookie);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cookie</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcookie\" data-linktype=\"relative-path\">HttpCookie</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.httpcookie\" data-linktype=\"relative-path\">HttpCookie</a> to add to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>A cookie is appended after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new cookie named <code>LastVisit</code>, sets the value of the cookie to the current date and time, and appends the cookie to the current cookie collection. All cookies in the cookie collection are sent to the client in the <code>Set-Cookie</code> header with the HTTP output stream.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.AppendCookie Example#1\">HttpCookie MyCookie = new HttpCookie(&quot;LastVisit&quot;);\n MyCookie.Value = DateTime.Now.ToString();\n Response.AppendCookie(MyCookie);\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.AppendCookie Example#1\">Dim MyCookie As New HttpCookie(&quot;LastVisit&quot;)\n MyCookie.Value = CStr(DateTime.Now())\n Response.AppendCookie(MyCookie)\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AppendHeader_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AppendHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppendHeader(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds an HTTP header to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AppendHeader (string name, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the HTTP header to add to the output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to append to the header.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The header is appended after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you use the AppendHeader method to send cache-specific headers and at the same time use the cache object model (<a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Cache_\" data-linktype=\"relative-path\">Cache</a>) to set cache policy, HTTP response headers that pertain to caching (<code>Cache-Control</code>, <code>Expires</code>, <code>Last-Modified</code>, <code>Pragma</code>, and <code>Vary</code>) might be deleted when the cache object model is used. This behavior enables ASP.NET to maintain the most restrictive settings. For example, consider a page that includes user controls. If those controls have conflicting cache policies, the most restrictive cache policy will be used. If one user control sets the header &quot;<code>Cache-Control: Public</code>&quot; and another user control sets the more restrictive header &quot;<code>Cache-Control: Private</code>&quot; via calls to <a class=\"xref\" href=\"system.web.httpcachepolicy#System_Web_HttpCachePolicy_SetCacheability_\" data-linktype=\"relative-path\">SetCacheability</a>, then the &quot;<code>Cache-Control: Private</code>&quot; header will be sent with the response.  </p>\n<p> For a list of standard HTTP/1.1 headers, see section 14, &quot;Header Field Definitions,&quot; in the <a href=\"http://go.microsoft.com/fwlink/?LinkID=73147\" data-linktype=\"external\">Hypertext Transfer Protocol -- HTTP/1.1</a> specification on the World Wide Web Consortium (W3C) Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the AppendHeader method to add a custom header to the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> object sent to the requesting client.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.AppendHeader_Example#1\">        Response.AppendHeader(&quot;CustomAspNetHeader&quot;, &quot;Value1&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.AppendHeader_Example#1\">        Response.AppendHeader(&quot;CustomAspNetHeader&quot;, &quot;Value1&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_AppendToLog_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_AppendToLog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppendToLog(String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds custom log information to the Internet Information Services (IIS) log file.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AppendToLog (string param);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>param</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to add to the log file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To allow for the specified string to be recorded in the log file, you first must enable the <strong>URI Query</strong> option of the <strong>Extended Logging Properties</strong> dialog box for the site that you want to log activity for in IIS.  </p>\n<p> To customize extended logging in IIS 6.0, follow these steps:  </p>\n<ol>\n<li><p>In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click <strong>Properties</strong>.  </p>\n</li>\n<li><p>Click the <strong>Web or FTP Site</strong> tab, and then select the <strong>Enable logging</strong> check box (if it is not already selected).  </p>\n</li>\n<li><p>In the <strong>Active log format</strong> box, click <strong>W3C Extended Log File Format</strong>.  </p>\n</li>\n<li><p>Click <strong>Properties</strong>.  </p>\n</li>\n<li><p>Click the <strong>Advanced</strong> tab, select the properties that you want to log, and then click <strong>OK</strong>.</p>\n</li>\n</ol>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to append a string to the log.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpResponse.AppendToLog Example#1\">Response.AppendToLog(&quot;Page delivered&quot;)\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpResponse.AppendToLog Example#1\">Response.AppendToLog(&quot;Page delivered&quot;);\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ApplyAppPathModifier_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ApplyAppPathModifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplyAppPathModifier(String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds a session ID to the virtual path if the session is using <span class=\"xref\">stem.Web.Configuration.SessionStateSection.Cookieless*</span> session state and returns the combined path. If <span class=\"xref\">stem.Web.Configuration.SessionStateSection.Cookieless*</span> session state is not used, ApplyAppPathModifier returns the original virtual path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ApplyAppPathModifier (string virtualPath);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>virtualPath</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual path to a resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>virtualPath</code> with the session ID inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ApplyAppPathModifier is used only with cookieless sessions to construct absolute HREFs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example declares a string variable named <code>urlConverted</code>, and sets it to the result of an ApplyAppPathModifier method call. The code then passes the variable&#39;s value to a <a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlink\" data-linktype=\"relative-path\">HyperLink</a> control&#39;s <a class=\"xref\" href=\"system.web.ui.webcontrols.hyperlink#System_Web_UI_WebControls_HyperLink_NavigateUrl_\" data-linktype=\"relative-path\">NavigateUrl</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample5#5\">        // Declare a string variable and set it to the result\n        // of a call to the ApplyAppPathModifier method.\n        // Then set the NavigateUrl property of a Hyperlink control\n        // to the string&#39;s value.\n        string urlConverted = Response.ApplyAppPathModifier(&quot;TestPage.aspx&quot;);\n        hlTest1.NavigateUrl = urlConverted;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample5#5\">        &#39; Declare a string variable and set it to the result\n        &#39; of a call to the ApplyAppPathModifier method.\n        &#39; Then set the NavigateUrl property of a Hyperlink control\n        &#39; to the string&#39;s value.\n        Dim urlConverted As String = Response.ApplyAppPathModifier(&quot;TestPage.aspx&quot;)\n        hlTest1.NavigateUrl = urlConverted\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_BeginFlush_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_BeginFlush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginFlush(AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Sends the currently buffered response to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginFlush (AsyncCallback callback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The callback object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The response state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>The asynchronous result object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The response is already completed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the underlying <a class=\"xref\" href=\"system.web.httpworkerrequest\" data-linktype=\"relative-path\">HttpWorkerRequest</a> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously. Otherwise, the flush operation is performed synchronously. Asynchronous flush is supported for IIS 6.0 and later.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_BinaryWrite_System_Byte___\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_BinaryWrite_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BinaryWrite(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Writes a string of binary characters to the HTTP output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void BinaryWrite (byte[] buffer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The bytes to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example reads a text file into a buffer and writes the buffer to the HTTP output stream.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.BinaryWrite Example#1\">FileStream MyFileStream;\n long FileSize;\n \n MyFileStream = new FileStream(&quot;sometext.txt&quot;, FileMode.Open);\n FileSize = MyFileStream.Length;\n      \n byte[] Buffer = new byte[(int)FileSize];\n MyFileStream.Read(Buffer, 0, (int)FileSize);\n MyFileStream.Close();\n \n Response.Write(&quot;&lt;b&gt;File Contents: &lt;/b&gt;&quot;);\n Response.BinaryWrite(Buffer);\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.BinaryWrite Example#1\">Dim MyFileStream As FileStream\n Dim FileSize As Long\n \n MyFileStream = New FileStream(&quot;sometext.txt&quot;, FileMode.Open)\n FileSize = MyFileStream.Length\n \n Dim Buffer(CInt(FileSize)) As Byte\n MyFileStream.Read(Buffer, 0, CInt(FileSize))\n MyFileStream.Close()\n \n Response.Write(&quot;&lt;b&gt;File Contents: &lt;/b&gt;&quot;)\n Response.BinaryWrite(Buffer)\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Clear\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all content output from the buffer stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Clear method does not clear header information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example sets the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ContentType_\" data-linktype=\"relative-path\">ContentType</a> property for the response to image/jpeg, calls the Clear method to remove other content that might be attached to the response, and then sets the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_BufferOutput_\" data-linktype=\"relative-path\">BufferOutput</a> property to true so that the complete page will be processed before any content is sent to the requesting client.  </p>\n<p> For a complete example, see the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples1#2\">        // Set the page&#39;s content type to JPEG files\n        // and clears all content output from the buffer stream.\n        Response.ContentType = &quot;image/jpeg&quot;;\n        Response.Clear();\n    \n        // Buffer response so that page is sent\n        // after processing is complete.\n        Response.BufferOutput = true;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples1#2\">      &#39; Set the page&#39;s content type to JPEG files\n      &#39; and clears all content output from the buffer stream.\n      Response.ContentType = &quot;image/jpeg&quot;\n      Response.Clear()\n      \n      &#39; Buffer response so that page is sent\n      &#39; after processing is complete.\n      Response.BufferOutput = True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ClearContent\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ClearContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearContent()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all content output from the buffer stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearContent ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ClearContent method does not clear header information.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example clears all content from the buffer stream.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.ClearContent Example#1\">Response.ClearContent();\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.ClearContent Example#1\">Response.ClearContent()\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_ClearHeaders\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_ClearHeaders_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearHeaders()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all headers from the buffer stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearHeaders ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Headers are cleared after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the ClearHeaders method to ensure that no headers are sent with the current response. This technique can be especially important if the ASP.NET response is generating an image, such as a JPEG file. In this example the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_ContentType_\" data-linktype=\"relative-path\">ContentType</a> property is set to image/jpeg.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample5#2\">    // Clear headers to ensure none\n    // are sent to the requesting browser\n    // and set the content type.\n    Response.ClearHeaders();\n    Response.ContentType = &quot;image/jpeg&quot;;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample5#2\">      &#39; Clear headers to ensure none\n      &#39; are sent to the requesting browser\n      &#39; and set the content type.\n      Response.ClearHeaders()\n      Response.ContentType = &quot;image/jpeg&quot;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Close\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Closes the socket connection to a client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing. The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.  </p>\n<p> However, typically you should call <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a> instead if you want to jump ahead to the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_EndRequest\" data-linktype=\"relative-path\">EndRequest</a> event and send a response to the client.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_DisableKernelCache\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_DisableKernelCache_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisableKernelCache()</div>        \r\n          </div>\r\n    \r\n            <p>Disables kernel caching for the current response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DisableKernelCache ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If kernel caching is not supported, this method has no effect.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_DisableUserCache\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_DisableUserCache_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisableUserCache()</div>        \r\n          </div>\r\n    \r\n            <p>Disables IIS user-mode caching for this response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void DisableUserCache ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If IIS user-mode caching is not supported, this method returns without performing any action.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_End\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_End_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">End()</div>        \r\n          </div>\r\n    \r\n            <p>Sends all currently buffered output to the client, stops execution of the page, and raises the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_EndRequest\" data-linktype=\"relative-path\">EndRequest</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void End ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a></div>\r\n                  </div>\r\n                  <p>The call to End has terminated the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided only for compatibility with ASPâ€”that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET. If you want to jump ahead to the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_EndRequest\" data-linktype=\"relative-path\">EndRequest</a> event and send a response to the client, it is usually preferable to call <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a> instead.  </p>\n<p> To mimic the behavior of the <code>End</code> method in ASP, this method tries to raise a <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a> exception. If this attempt is successful, the calling thread will be aborted, which is detrimental to your site&#39;s performance. In that case, no code after the call to the End method is executed.  </p>\n<p> If the End method is not able to raise a <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a>, it instead flushes the response bytes to the client. It does this synchronously, which can also be detrimental to your site&#39;s performance.  </p>\n<p> In either case (whether or not a <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a> exception is successfully raised), the response pipeline jumps ahead to the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_EndRequest\" data-linktype=\"relative-path\">EndRequest</a> event.  </p>\n<p> The <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a> method does not raise an exception, and code after the call to the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a> method might be executed. If your intention is to avoid execution of subsequent code, and if the performance penalty of End is acceptable, you can call End instead of <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_EndFlush_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_EndFlush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndFlush(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Completes an asynchronous flush operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndFlush (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The asynchronous result object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>Asynchronous flush is not supported and the <code>asyncResult</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>Asynchronous flush is not supported and the <code>asyncResult</code> parameter cannot be cast to a <code>FlushAsyncResult</code> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Flush\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Sends all currently buffered output to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>The cache is flushed after the response has been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Forces all currently buffered output to be sent to the client. The Flush method can be called multiple times during request processing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example calls the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_Save_\" data-linktype=\"relative-path\">Save</a> method to save a <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> object to the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_OutputStream_\" data-linktype=\"relative-path\">OutputStream</a> property and converts the image to the JPEG format. The code then calls the <code>Dispose</code> method on the <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> object and a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object, releasing the resources that they were using. It then calls the Flush method to send the content of the response to the requesting client.  </p>\n<p> For a complete example, see the <a class=\"xref\" href=\"system.web.httpresponse\" data-linktype=\"relative-path\">HttpResponse</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Samples1#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Imaging&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Drawing2D&quot; %&gt;\n\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n        // Set the page&#39;s content type to JPEG files\n        // and clears all content output from the buffer stream.\n        Response.ContentType = &quot;image/jpeg&quot;;\n        Response.Clear();\n    \n        // Buffer response so that page is sent\n        // after processing is complete.\n        Response.BufferOutput = true;\n    \n        // Create a font style.\n        Font rectangleFont = new Font(\n            &quot;Arial&quot;, 10, FontStyle.Bold);\n    \n        // Create integer variables.\n        int height = 100;\n        int width = 200;\n    \n        // Create a random number generator and create\n        // variable values based on it.\n        Random r = new Random();\n        int x = r.Next(75);\n        int a = r.Next(155);\n        int x1 = r.Next(100);\n    \n        // Create a bitmap and use it to create a\n        // Graphics object.\n        Bitmap bmp = new Bitmap(\n            width, height, PixelFormat.Format24bppRgb);\n        Graphics g = Graphics.FromImage(bmp);\n    \n        g.SmoothingMode = SmoothingMode.AntiAlias;\n        g.Clear(Color.LightGray);\n    \n        // Use the Graphics object to draw three rectangles.\n        g.DrawRectangle(Pens.White, 1, 1, width-3, height-3);\n        g.DrawRectangle(Pens.Aquamarine, 2, 2, width-3, height-3);\n        g.DrawRectangle(Pens.Black, 0, 0, width, height);\n    \n        // Use the Graphics object to write a string\n        // on the rectangles.\n        g.DrawString(\n            &quot;ASP.NET Samples&quot;, rectangleFont,\n            SystemBrushes.WindowText, new PointF(10, 40));\n    \n        // Apply color to two of the rectangles.\n        g.FillRectangle(\n            new SolidBrush(\n                Color.FromArgb(a, 255, 128, 255)),\n            x, 20, 100, 50);\n    \n        g.FillRectangle(\n            new LinearGradientBrush(\n                new Point(x, 10),\n                new Point(x1 + 75, 50 + 30),\n                Color.FromArgb(128, 0, 0, 128),\n                Color.FromArgb(255, 255, 255, 240)),\n            x1, 50, 75, 30);\n\n        // Save the bitmap to the response stream and\n        // convert it to JPEG format.\n        bmp.Save(Response.OutputStream, ImageFormat.Jpeg);\n    \n        // Release memory used by the Graphics object\n        // and the bitmap.\n        g.Dispose();\n        bmp.Dispose();\n    \n        // Send the output to the client.\n        Response.Flush();\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Samples1#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Imaging&quot; %&gt;\n&lt;%@ import Namespace=&quot;System.Drawing.Drawing2D&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n   Private Sub Page_Load(sender As Object, e As EventArgs)\n      &#39; Set the page&#39;s content type to JPEG files\n      &#39; and clears all content output from the buffer stream.\n      Response.ContentType = &quot;image/jpeg&quot;\n      Response.Clear()\n      \n      &#39; Buffer response so that page is sent\n      &#39; after processing is complete.\n      Response.BufferOutput = True\n      \n      &#39; Create a font style.\n      Dim rectangleFont As New Font( _\n          &quot;Arial&quot;, 10, FontStyle.Bold)\n      \n      &#39; Create integer variables.\n      Dim height As Integer = 100\n      Dim width As Integer = 200\n      \n      &#39; Create a random number generator and create\n      &#39; variable values based on it.\n      Dim r As New Random()\n      Dim x As Integer = r.Next(75)\n      Dim a As Integer = r.Next(155)\n      Dim x1 As Integer = r.Next(100)\n      \n      &#39; Create a bitmap and use it to create a\n      &#39; Graphics object.\n      Dim bmp As New Bitmap( _\n          width, height, PixelFormat.Format24bppRgb)\n      Dim g As Graphics = Graphics.FromImage(bmp)\n      \n      g.SmoothingMode = SmoothingMode.AntiAlias\n      g.Clear(Color.LightGray)\n      \n      &#39; Use the Graphics object to draw three rectangles.\n      g.DrawRectangle(Pens.White, 1, 1, width - 3, height - 3)\n      g.DrawRectangle(Pens.Aquamarine, 2, 2, width - 3, height - 3)\n      g.DrawRectangle(Pens.Black, 0, 0, width, height)\n      \n      &#39; Use the Graphics object to write a string\n      &#39; on the rectangles.\n      g.DrawString(&quot;ASP.NET Samples&quot;, rectangleFont, SystemBrushes.WindowText, New PointF(10, 40))\n      \n      &#39; Apply color to two of the rectangles.\n      g.FillRectangle( _\n          New SolidBrush( _\n              Color.FromArgb(a, 255, 128, 255)), _\n          x, 20, 100, 50)\n      \n      g.FillRectangle( _\n          New LinearGradientBrush( _\n              New Point(x, 10), _\n              New Point(x1 + 75, 50 + 30), _\n              Color.FromArgb(128, 0, 0, 128), _\n              Color.FromArgb(255, 255, 255, 240)), _\n          x1, 50, 75, 30)\n\n      &#39; Save the bitmap to the response stream and\n      &#39; convert it to JPEG format.\n      bmp.Save(Response.OutputStream, ImageFormat.Jpeg)\n      \n      &#39; Release memory used by the Graphics object\n      &#39; and the bitmap.\n      g.Dispose()\n      bmp.Dispose()\n      \n      &#39; Send the output to the client.\n      Response.Flush()\n   End Sub &#39;Page_Load\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_FlushAsync\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_FlushAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlushAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously sends all currently buffered output to the client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task FlushAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> that represents the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Pics_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Pics_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pics(String)</div>        \r\n          </div>\r\n    \r\n            <p>Appends a HTTP <code>PICS-Label</code> header to the output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Pics (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to add to the <code>PICS-Label</code> header.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling. PICS is essentially a language for creating a ratings system.  </p>\n<p> Any value can be a PICS label; ASP.NET does not validate the label. The maximum length of the string is 255 characters. For more information about PICS standards and syntax, see the <a href=\"http://go.microsoft.com/fwlink/?LinkID=37125\" data-linktype=\"external\">World Wide Web Consortium</a> Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is an ASP.NET page that displays an image. The page code calls the Pics method to set the HTTP <code>PICS-Label</code> header for the response. The string that is passed as the parameter to the Pics method represents a rating label generated from the Internet Content Rating Association (ICRA) Web site.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample4#2\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    // When this page is loaded, the Pics method\n    // sets the PICS-Label header for the response.\n    private void Page_Load(object sender, EventArgs e)\n    {\n        Response.Pics( \n          &quot;(pics-1.1 &lt;http://www.icra.org/ratingsv02.html&gt; &quot; + \n          &quot;comment &lt;ICRAonline EN v2.0&gt; &quot; + \n          &quot;l r (nz 1 vz 1 lz 1 oz 1 cz 1) &quot; + \n          &quot;&lt;http://www.rsac.org/ratingsv01.html&gt; &quot; +\n          &quot; l r (n 0 s 0 v 0 l 0))&quot;);\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;img height=&quot;75%&quot; src=&quot;animated.gif&quot; width=&quot;100%&quot; alt=&quot;An animated GIF&quot;/&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample4#2\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    &#39; When this page is loaded, the Pics method\n    &#39; sets the PICS-Label header for the response.    \n    Private Sub Page_Load(sender As Object, e As EventArgs)       \n        Response.PICS( _\n          &quot;(pics-1.1 &lt;http://www.icra.org/ratingsv02.html&gt; &quot; &amp; _\n          &quot;comment &lt;ICRAonline EN v2.0&gt; &quot; &amp; _\n          &quot;l r (nz 1 vz 1 lz 1 oz 1 cz 1) &quot; &amp; _\n          &quot;&lt;http://www.rsac.org/ratingsv01.html&gt; &quot; &amp; _\n          &quot;l r (n 0 s 0 v 0 l 0))&quot;)\n    End Sub\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n        &lt;img height=&quot;75%&quot; src=&quot;animated.gif&quot; width=&quot;100%&quot; alt=&quot;An animated GIF&quot;/&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_PushPromise_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_PushPromise_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushPromise(String)</div>        \r\n          </div>\r\n    \r\n            <p>This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at <a href=\"http://http2.github.io/http2-spec/#PushResources\" data-linktype=\"external\">HTTP/2 Specification Section 8.2: Server Push</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PushPromise (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>PushPromise is non-deterministic and applications shouldn&#39;t have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_PushPromise_System_String_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_PushPromise_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushPromise(String,String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>This API is to support applications sending push promises to HTTP 2.0 clients. You can find more details regarding to Http2 server push at <a href=\"http://http2.github.io/http2-spec/#PushResources\" data-linktype=\"external\">HTTP/2 Specification Section 8.2: Server Push</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PushPromise (string path, string method, System.Collections.Specialized.NameValueCollection headers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL of the push request. It should be the virtual path of the relative resource that the server wants to push to the client.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>method</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Http request method that would be used by the push request.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>headers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Http request header that would be used by the push request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>PushPromise is non-deterministic and applications shouldn&#39;t have logic that depends on it. Its only purpose is performance advantage in some cases. There are many conditions (protocol and implementation) that may cause to ignore the push requests completely. The expectation is based on fire-and-forget.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Redirect_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Redirect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Redirect(String)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a request to a new URL and specifies the new URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Redirect (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The target location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>A redirection is attempted after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling Redirect is equivalent to calling <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_\" data-linktype=\"relative-path\">Redirect</a> with the second parameter set to <code>true</code>.  </p>\n<p> Redirect calls <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a> which throws a <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a> exception upon completion. This exception has a detrimental effect on Web application performance. Therefore, we recommend that instead of this overload you use the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">System.Web.HttpResponse.Redirect(String,Boolean)</a> overload and pass <code>false</code> for the <code>endResponse</code> parameter, and then call the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a> method. For more information, see the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data. To set a property on a mobile control with a path such as &quot;~/path&quot;, resolve the path using <a class=\"xref\" href=\"system.web.ui.mobilecontrols.mobilecontrol#System_Web_UI_MobileControls_MobileControl_ResolveUrl_\" data-linktype=\"relative-path\">ResolveUrl</a> &quot;~/path&quot; before assigning it to the property.  </p>\n</div>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code. An alternative way to transfer control to another page is the <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Transfer_\" data-linktype=\"relative-path\">Transfer</a> method. The <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Transfer_\" data-linktype=\"relative-path\">Transfer</a> method is typically more efficient because it does not cause a round trip to the client. For more information, see <a href=\"../Topic/How%20to:%20Redirect%20Users%20to%20Another%20Page.md\" data-linktype=\"relative-path\">How to: Redirect Users to Another Page</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example forces an unconditional redirection to another Web site.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.Redirect Example#1\">Response.Redirect(&quot;http://www.microsoft.com/gohere/look.htm&quot;);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.Redirect Example#1\">Response.Redirect(&quot;http://www.microsoft.com/gohere/look.htm&quot;)\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Redirect_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Redirect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Redirect(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a client to a new URL. Specifies the new URL and whether execution of the current page should terminate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Redirect (string url, bool endResponse);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the target.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endResponse</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates whether execution of the current page should terminate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>url</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>url</code> contains a newline character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>A redirection is attempted after the HTTP headers have been sent.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.applicationexception\" data-linktype=\"relative-path\">ApplicationException</a></div>\r\n                  </div>\r\n                  <p>The page request is the result of a callback.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An absolute URL (for example, <a href=\"http://www.contoso.com/default.aspx\" data-linktype=\"external\">http://www.contoso.com/default.aspx</a>) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.  </p>\n<p> When you use this method in a page handler to terminate a request for one page and start a new request for another page, set <code>endResponse</code> to <code>false</code> and then call the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_CompleteRequest_\" data-linktype=\"relative-path\">CompleteRequest</a> method. If you specify <code>true</code> for the <code>endResponse</code> parameter, this method calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a> method for the original request, which throws a <a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a> exception when it completes. This exception has a detrimental effect on Web application performance, which is why passing <code>false</code> for the <code>endResponse</code> parameter is recommended. For more information, see the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data. To set a property on a mobile control with a path such as &quot;~/path&quot;, resolve the path using <a class=\"xref\" href=\"system.web.ui.mobilecontrols.mobilecontrol#System_Web_UI_MobileControls_MobileControl_ResolveUrl_\" data-linktype=\"relative-path\">ResolveUrl</a> &quot;~/path&quot; before assigning it to the property.  </p>\n</div>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code. An alternative way to transfer control to another page is the <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Transfer_\" data-linktype=\"relative-path\">Transfer</a> method. The <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_Transfer_\" data-linktype=\"relative-path\">Transfer</a> method is typically more efficient because it does not cause a round trip to the client. For more information, see <a href=\"../Topic/How%20to:%20Redirect%20Users%20to%20Another%20Page.md\" data-linktype=\"relative-path\">How to: Redirect Users to Another Page</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_IsClientConnected_\" data-linktype=\"relative-path\">IsClientConnected</a> property to check whether the client that is requesting the page remains connected to the server. If <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_IsClientConnected_\" data-linktype=\"relative-path\">IsClientConnected</a> is true, the code calls the Redirect method, and the client will view another page. If <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_IsClientConnected_\" data-linktype=\"relative-path\">IsClientConnected</a> is false, then the code calls the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_End_\" data-linktype=\"relative-path\">End</a> method and all page processing is terminated.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample4#1\">&lt;%@ Page Language=&quot;C#&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n\n    private void Page_Load(object sender, EventArgs e)\n    {\n        // Check whether the browser remains\n        // connected to the server.\n        if (Response.IsClientConnected)\n        {\n            // If still connected, redirect\n            // to another page. \n            Response.Redirect(&quot;Page2CS.aspx&quot;, false);\n        }\n        else\n        {\n            // If the browser is not connected\n            // stop all response processing.\n            Response.End();\n        }\n    }\n\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample4#1\">&lt;%@ Page Language=&quot;VB&quot; %&gt;\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n    &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n&lt;script runat=&quot;server&quot;&gt;\n    Private Sub Page_Load(sender As Object, e As EventArgs)\n\n        &#39; Check whether the browser remains\n        &#39; connected to the server.\n        If (Response.IsClientConnected) Then\n\n            &#39; If still connected, redirect\n            &#39; to another page.             \n            Response.Redirect(&quot;Page2VB.aspx&quot;, false)\n        Else\n            &#39; If the browser is not connected\n            &#39; stop all response processing.\n            Response.End()\n        End If\n    End Sub\n&lt;/script&gt;\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\n&lt;head&gt;\n    &lt;title&gt;ASP.NET Example&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectPermanent_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectPermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectPermanent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from the requested URL to the specified URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectPermanent (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location to redirect the request to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>url</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>url</code> includes a newline character (<code>\\n</code>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.  </p>\n<p> Calling the RedirectPermanent method overload terminates the response.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectPermanent_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectPermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectPermanent(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectPermanent (string url, bool endResponse);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location to redirect the request to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endResponse</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to terminate the response; otherwise <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>url</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>url</code> includes a newline character (<code>\\n</code>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RedirectPermanent method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to. This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed. A 301 HTTP status code is a standard code in an HTTP response. It indicates that a permanent redirection exists, and it provides the redirection location.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoute_System_Object_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoute(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a request to a new URL by using route parameter values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoute (object routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method converts the object that is passed in <code>routeValues</code> to a <a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary</a> object by using the <a class=\"xref\" href=\"system.web.routing.routevaluedictionary#System_Web_Routing_RouteValueDictionary__ctor_System_Object_\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)</a> constructor. The <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method is then called to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoute(  \n  New With {.productid = &quot;1&quot;, .category = &quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoute(  \n  new { productid = &quot;1&quot;, category = &quot;widgets&quot; });\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoute_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a request to a new URL by using a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoute (string routeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method converts the route name that is passed in <code>routeName</code> to a URL by using the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method.  </p>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that is named <code>Products</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoute(&quot;Products&quot;)\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoute(&quot;Products&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoute_System_Web_Routing_RouteValueDictionary_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoute(RouteValueDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a request to a new URL by using route parameter values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoute (System.Web.Routing.RouteValueDictionary routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoute(  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoute(  \n  (new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;});\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoute_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoute(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a request to a new URL by using route parameter values and a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoute (string routeName, object routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method converts the object that is passed in <code>routeValues</code> to a <a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary</a> object by using the <a class=\"xref\" href=\"system.web.routing.routevaluedictionary#System_Web_Routing_RouteValueDictionary__ctor_System_Object_\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)</a> constructor. The <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method is then called to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that is named <code>Product</code> and that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoute(&quot;Product&quot;,  \n  New With {.productid = &quot;1&quot;, .category = &quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoute(&quot;Product&quot;,  \n  new { productid = &quot;1&quot;, category = &quot;widgets&quot; });\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoute_System_String_System_Web_Routing_RouteValueDictionary_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoute(String,RouteValueDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Redirects a request to a new URL by using route parameter values and a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoute (string routeName, System.Web.Routing.RouteValueDictionary routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method is called to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 302 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that is named <code>Product</code> and that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoute(&quot;Product&quot;,  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoute(&quot;Product&quot;,  \n  (new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;});\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoutePermanent_System_Object_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoutePermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoutePermanent(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoutePermanent (object routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_RedirectPermanent_System_String_System_Boolean_\" data-linktype=\"relative-path\">RedirectPermanent(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method converts the object that is passed in <code>routeValues</code> to a <a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary</a> object by using the <a class=\"xref\" href=\"system.web.routing.routevaluedictionary#System_Web_Routing_RouteValueDictionary__ctor_System_Object_\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)</a> constructor. The <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method is then called to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 301 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoutePermanent(  \n  New With {.productid = &quot;1&quot;, .category = &quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoutePermanent(  \n  new { productid = &quot;1&quot;, category = &quot;widgets&quot; });\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoutePermanent_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoutePermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoutePermanent(String)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoutePermanent (string routeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_RedirectPermanent_System_String_System_Boolean_\" data-linktype=\"relative-path\">RedirectPermanent(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method converts the route name that is passed in <code>routeName</code> to a URL by using the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method.  </p>\n<p> ASP.NET performs the redirection by returning a 301 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that is named <code>Products</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoutePermanent(&quot;Products&quot;)\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoutePermanent(&quot;Products&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoutePermanent_System_Web_Routing_RouteValueDictionary_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoutePermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoutePermanent(RouteValueDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoutePermanent (System.Web.Routing.RouteValueDictionary routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 301 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoutePermanent(  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;});\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoutePermanent_System_String_System_Object_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoutePermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoutePermanent(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoutePermanent (string routeName, object routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_RedirectPermanent_\" data-linktype=\"relative-path\">RedirectPermanent</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method converts the object that is passed in <code>routeValues</code> to a <a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary</a> object by using the <a class=\"xref\" href=\"system.web.routing.routevaluedictionary#System_Web_Routing_RouteValueDictionary__ctor_System_Object_\" data-linktype=\"relative-path\">System.Web.Routing.RouteValueDictionary.RouteValueDictionary(Object)</a> constructor. The <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method is then called to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 301 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that is named <code>Product</code> and that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoutePermanent(&quot;Product&quot;,  \n  New With {.productid = &quot;1&quot;, .category = &quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoutePermanent(&quot;Product&quot;,  \n  new { productid = &quot;1&quot;, category = &quot;widgets&quot; });\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RedirectToRoutePermanent_System_String_System_Web_Routing_RouteValueDictionary_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RedirectToRoutePermanent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedirectToRoutePermanent(String,RouteValueDictionary)</div>        \r\n          </div>\r\n    \r\n            <p>Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedirectToRoutePermanent (string routeName, System.Web.Routing.RouteValueDictionary routeValues);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the route.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>routeValues</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.routing.routevaluedictionary\" data-linktype=\"relative-path\">RouteValueDictionary</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The route parameter values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>No route corresponds to the specified route parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Redirection was attempted after the HTTP headers had been sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is provided for coding convenience. It is equivalent to calling the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_Redirect_System_String_System_Boolean_\" data-linktype=\"relative-path\">Redirect(String,Boolean)</a> method with the second parameter set to <code>false</code>.  </p>\n<p> This method calls the <a class=\"xref\" href=\"system.web.routing.routecollection#System_Web_Routing_RouteCollection_GetVirtualPath_\" data-linktype=\"relative-path\">GetVirtualPath</a> method to determine the URL.  </p>\n<p> ASP.NET performs the redirection by returning a 301 HTTP status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to call this method to redirect to a route that is named <code>Product</code> and that has parameters that are named <code>productid</code> and <code>category</code>.  </p>\n<pre><code class=\"lang-vb#\">Response.RedirectToRoutePermanent(&quot;Product&quot;,  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;})\n</code></pre><pre><code class=\"lang-c#\">Response.RedirectToRoutePermanent(&quot;Product&quot;,  \n  new RouteValueDictionary {productId=&quot;1&quot;, category=&quot;widgets&quot;});\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RemoveOutputCacheItem_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RemoveOutputCacheItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveOutputCacheItem(String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes from the cache all cached items that are associated with the default output-cache provider. This method is static.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveOutputCacheItem (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual absolute path to the items that are removed from the cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is not an absolute virtual path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to remove output-cache items that are associated with the default output-cache provider. Call the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_RemoveOutputCacheItem_\" data-linktype=\"relative-path\">RemoveOutputCacheItem</a> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_RemoveOutputCacheItem_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_RemoveOutputCacheItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveOutputCacheItem(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveOutputCacheItem (string path, string providerName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The virtual absolute path of the items that are removed from the cache.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>providerName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The provider that is used to remove the output-cache artifacts that are associated with the specified path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is null.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>path</code> is an invalid path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file. To remove output-cache items that are associated with the default output-cache provider, call the <a class=\"xref\" href=\"system.web.httpresponse#System_Web_HttpResponse_RemoveOutputCacheItem_System_String_\" data-linktype=\"relative-path\">RemoveOutputCacheItem(String)</a> method overload.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_SetCookie_System_Web_HttpCookie_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_SetCookie_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCookie(HttpCookie)</div>        \r\n          </div>\r\n    \r\n            <p>Updates an existing cookie in the cookie collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetCookie (System.Web.HttpCookie cookie);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cookie</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcookie\" data-linktype=\"relative-path\">HttpCookie</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The cookie in the collection to be updated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>Attempted to set the cookie after the HTTP headers were sent.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example updates the value of an existing cookie.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.SetCookie Example#1\">MyCookie.Value = DateTime.Now.ToString();\n Response.Cookies.Add(MyCookie);\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.SetCookie Example#1\">MyCookie.Value = CStr(DateTime.Now())\n Response.SetCookie(MyCookie)\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_TransmitFile_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_TransmitFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransmitFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransmitFile (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to write to the HTTP output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>filename</code> parameter is <code>null</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_TransmitFile_System_String_System_Int64_System_Int64_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_TransmitFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransmitFile(String,Int64,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransmitFile (string filename, long offset, long length);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to write to the HTTP output.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the file to begin to write to the HTTP output.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>length</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to be transmitted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> parameter is less than zero.  </p>\n<p> - or -  </p>\n<p> The <code>length</code> parameter is less than -1.  </p>\n<p> - or -  </p>\n<p> The <code>length</code> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformnotsupportedexception\" data-linktype=\"relative-path\">PlatformNotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The out-of-process worker request is not supported.  </p>\n<p> - or -  </p>\n<p> The response is not using an <a class=\"xref\" href=\"system.web.httpwriter\" data-linktype=\"relative-path\">HttpWriter</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>offset</code> parameter is less than zero or greater than the file size.  </p>\n<p> - or -  </p>\n<p> The <code>length</code> parameter is less than -1 or greater than the value of the <code>offset</code> parameter plus the file size.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you specify 0 as the <code>offset</code> parameter and -1 as the <code>length</code> parameter, the whole file is sent.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Write_System_Char_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a character to an HTTP response output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to write to the HTTP output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample5#4\">    &lt;%\n\n        // Create a character array.\n    char[] charArray = {&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39;,&#39;, &#39; &#39;, \n                           &#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n\n        // Write a character array to the client.\n        Response.Write(charArray, 0, charArray.Length);\n\n        // Write a single characher.\n        Response.Write(&#39;;&#39;);\n\n        // Write a sub-section of a character array to the client.\n        Response.Write(charArray, 0, 5);\n        // Write an object to the client.\n        object obj = (object)13;\n        Response.Write(obj);\n\n    %&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample5#4\">      &lt;%\n         Dim charArray As Char() = {&quot;H&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, &quot;,&quot;c, &quot; &quot;c, _\n                                 &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n         &#39; Write a character array to the client.\n         Response.Write(charArray, 0, charArray.Length)\n\n         &#39; Write a single character.\n         Response.Write(&quot;;&quot;c)\n\n         &#39; Write a sub-section of a character array to the client.\n         Response.Write(charArray, 0, 5)\n         &#39; Write an object to the client.\n         Dim obj As Object\n         obj = CType(13, Object)\n         Response.Write(obj)\n      %&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Write_System_Object_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to an HTTP response stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> to write to the HTTP output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Write_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a string to an HTTP response output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (string s);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>s</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to write to the HTTP output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client. Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source. This security risk is referred to as a cross-site scripting attack. You should always validate data that is received from a client when it will be transmitted from your site to client browsers.  </p>\n<p> Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> or <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_UrlEncode_\" data-linktype=\"relative-path\">UrlEncode</a> to prevent malicious script from executing. This technique is useful for data that was not validated when it was received.  </p>\n<p> When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.  </p>\n<p> For more information about cross-site scripting attacks, see article Q252985, &quot;How to Prevent Cross-Site Scripting Security Issues&quot; on the <a href=\"http://go.microsoft.com/fwlink/?LinkID=37115\" data-linktype=\"external\">Microsoft Knowledge Base</a> Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example echoes the client&#39;s name back to the client&#39;s browser. The <a class=\"xref\" href=\"system.web.httpserverutility#System_Web_HttpServerUtility_HtmlEncode_\" data-linktype=\"relative-path\">HtmlEncode</a> method strips any malicious script and invalid characters that may have been submitted in the <code>UserName</code> input field.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse.Write#1\">        Response.Write(&quot;Hello &quot; &amp; Server.HtmlEncode(Request.QueryString(&quot;UserName&quot;)) &amp; &quot;&lt;br&gt;&quot;)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse.Write#1\">Response.Write(&quot;Hello &quot; + Server.HtmlEncode(Request.QueryString[&quot;UserName&quot;]) + &quot;&lt;br&gt;&quot;);\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_Write_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_Write_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Write(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an array of characters to an HTTP response output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Write (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character array to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the character array where writing starts.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write, beginning at <code>index</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a series of constants that are written to an ASP.NET page using the Write method. The code calls this version of the Write method to write individual character constants to the page.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.HttpResponse_Sample5#4\">    &lt;%\n\n        // Create a character array.\n    char[] charArray = {&#39;H&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;, &#39;,&#39;, &#39; &#39;, \n                           &#39;w&#39;, &#39;o&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;};\n\n        // Write a character array to the client.\n        Response.Write(charArray, 0, charArray.Length);\n\n        // Write a single characher.\n        Response.Write(&#39;;&#39;);\n\n        // Write a sub-section of a character array to the client.\n        Response.Write(charArray, 0, 5);\n        // Write an object to the client.\n        object obj = (object)13;\n        Response.Write(obj);\n\n    %&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.HttpResponse_Sample5#4\">      &lt;%\n         Dim charArray As Char() = {&quot;H&quot;c, &quot;e&quot;c, &quot;l&quot;c, &quot;l&quot;c, &quot;o&quot;c, &quot;,&quot;c, &quot; &quot;c, _\n                                 &quot;w&quot;c, &quot;o&quot;c, &quot;r&quot;c, &quot;l&quot;c, &quot;d&quot;c}\n         &#39; Write a character array to the client.\n         Response.Write(charArray, 0, charArray.Length)\n\n         &#39; Write a single character.\n         Response.Write(&quot;;&quot;c)\n\n         &#39; Write a sub-section of a character array to the client.\n         Response.Write(charArray, 0, 5)\n         &#39; Write an object to the client.\n         Dim obj As Object\n         obj = CType(13, Object)\n         Response.Write(obj)\n      %&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_WriteFile_System_String_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_WriteFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFile(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the contents of the specified file directly to an HTTP response output stream as a file block.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteFile (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to write to the HTTP output.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>filename</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, &quot;PRB: Response.WriteFile Cannot Download a Large File&quot; on the <a href=\"http://go.microsoft.com/fwlink/?linkid=149903\" data-linktype=\"external\">Microsoft Knowledge Base</a> Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes all the contents of a text file named <code>Login.txt</code> (which might contain literal HTML text and input controls) directly to the output stream.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpResponse.WriteFile Example#1\">Response.Write(&quot;Please Login: &lt;br&gt;&quot;)\n Response.WriteFile(&quot;login.txt&quot;)\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpResponse.WriteFile Example#1\">Response.Write(&quot;Please Login: &lt;br&gt;&quot;);\n Response.WriteFile(&quot;login.txt&quot;);\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_WriteFile_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_WriteFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFile(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteFile (string filename, bool readIntoMemory);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to write into a memory block.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>readIntoMemory</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Indicates whether the file will be written into a memory block.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>filename</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, &quot;PRB: Response.WriteFile Cannot Download a Large File&quot; on the <a href=\"http://go.microsoft.com/fwlink/?linkid=149903\" data-linktype=\"external\">Microsoft Knowledge Base</a> Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes a file to memory.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.WriteFile1 Example#1\">Response.WriteFile(&quot;login.txt&quot;, true);\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.WriteFile1 Example#1\">Response.WriteFile(&quot;login.txt&quot;, True)\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_WriteFile_System_IntPtr_System_Int64_System_Int64_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_WriteFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFile(IntPtr,Int64,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified file directly to an HTTP response output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteFile (IntPtr fileHandle, long offset, long size);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileHandle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file handle of the file to write to the HTTP output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte position in the file where writing will start.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>size</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>fileHandler</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> is less than 0.  </p>\n<p> - or -  </p>\n<p> <code>size</code> is greater than the file size minus <code>offset</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, &quot;PRB: Response.WriteFile Cannot Download a Large File&quot; on the <a href=\"http://go.microsoft.com/fwlink/?linkid=149903\" data-linktype=\"external\">Microsoft Knowledge Base</a> Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes all the contents of a text file named <code>Login.txt</code> (which might contain literal HTML text and input controls) directly to the output stream.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic HttpResponse.WriteFile3 Example#1\"> Dim FileName As String\n Dim MyFileStream As FileStream\n Dim FileHandle As IntPtr\n Dim StartPos As Long = 0\n Dim FileSize As Long\n \n FileName = &quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;emp\\\\Login.txt&quot;\n \n MyFileStream = New FileStream(FileName, FileMode.Open)\n FileHandle = MyFileStream.Handle\n FileSize = MyFileStream.Length\n \n Response.Write(&quot;&lt;b&gt;Login: &lt;/b&gt;&quot;)\n Response.Write(&quot;&lt;input type=text id=user /&gt; &quot;)\n Response.Write(&quot;&lt;input type=submit value=Submit /&gt;&lt;br&gt;&lt;br&gt;&quot;)\n \n Response.WriteFile(FileHandle, StartPos, FileSize)\n    \n MyFileStream.Close()\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic HttpResponse.WriteFile3 Example#1\">String FileName;\n FileStream MyFileStream;\n IntPtr FileHandle;\n long StartPos = 0, FileSize;\n \n FileName = &quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;emp\\\\Login.txt&quot;;\n \n MyFileStream = new FileStream(FileName, FileMode.Open);\n FileHandle = MyFileStream.Handle;\n FileSize = MyFileStream.Length;\n \n Response.Write(&quot;&lt;b&gt;Login: &lt;/b&gt;&quot;);\n Response.Write(&quot;&lt;input type=text id=user /&gt; &quot;);\n Response.Write(&quot;&lt;input type=submit value=Submit /&gt;&lt;br&gt;&lt;br&gt;&quot;);\n \n Response.WriteFile(FileHandle, StartPos, FileSize);\n    \n MyFileStream.Close();\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_WriteFile_System_String_System_Int64_System_Int64_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_WriteFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFile(String,Int64,Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the specified file directly to an HTTP response output stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteFile (string filename, long offset, long size);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the file to write to the HTTP output stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The byte position in the file where writing will start.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>size</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write to the output stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p><code>offset</code> is less than 0.  </p>\n<p> - or -  </p>\n<p> <code>size</code> is greater than the file size minus <code>offset</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>filename</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method is used with large files, calling the method might throw an exception. The size of the file that can be used with this method depends on the hardware configuration of the Web server. For more information, see article 812406, &quot;PRB: Response.WriteFile Cannot Download a Large File&quot; on the <a href=\"http://go.microsoft.com/fwlink/?linkid=149903\" data-linktype=\"external\">Microsoft Knowledge Base</a> Web site.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes all the contents of a text file named <code>Login.txt</code> (which might contain literal text and HTML input controls) directly to the output stream.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic HttpResponse.WriteFile2 Example#1\">String FileName;\n FileInfo MyFileInfo;\n long StartPos = 0, FileSize;\n \n FileName = &quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;emp\\\\login.txt&quot;;\n MyFileInfo = new FileInfo(FileName);\n FileSize = MyFileInfo.Length;\n \n Response.Write(&quot;Please Login: &lt;br&gt;&quot;);\n Response.WriteFile(FileName, StartPos, FileSize);\n    \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic HttpResponse.WriteFile2 Example#1\">Dim FileName As String\n Dim MyFileInfo As FileInfo\n Dim StartPos, FileSize As Long\n \n FileName = &quot;c:\\&nbsp;&nbsp;&nbsp;&nbsp;emp\\\\login.txt&quot;\n MyFileInfo = New FileInfo(FileName)\n FileSize = MyFileInfo.Length \n \n Response.Write(&quot;Please Login: &lt;br&gt;&quot;)\n Response.WriteFile(FileName, StartPos, FileSize)\n    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_HttpResponse_WriteSubstitution_System_Web_HttpResponseSubstitutionCallback_\">\r\n    \r\n            <a id=\"System_Web_HttpResponse_WriteSubstitution_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteSubstitution(HttpResponseSubstitutionCallback)</div>        \r\n          </div>\r\n    \r\n            <p>Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteSubstitution (System.Web.HttpResponseSubstitutionCallback callback);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>callback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpresponsesubstitutioncallback\" data-linktype=\"relative-path\">HttpResponseSubstitutionCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The method, user control, or object to substitute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The target of the <code>callback</code> parameter is of type <a class=\"xref\" href=\"system.web.ui.control\" data-linktype=\"relative-path\">Control</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the WriteSubstitution method for post-cache substitution in your output-cached pages. By passing a <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object to a callback method with a prescribed <a class=\"xref\" href=\"system.web.httpresponsesubstitutioncallback\" data-linktype=\"relative-path\">HttpResponseSubstitutionCallback</a> signature, you can replace output cached content at any given location in the page cache. To initiate the replacement, call the WriteSubstitution method, passing it the callback method, which must be thread safe and can be either of the following:  </p>\n<ul>\n<li><p>A static method on the container page or user control.  </p>\n</li>\n<li><p>A static or instance method on another arbitrary object.  </p>\n<p>On the first request to the page, the WriteSubstitution calls the <a class=\"xref\" href=\"system.web.httpresponsesubstitutioncallback\" data-linktype=\"relative-path\">HttpResponseSubstitutionCallback</a> delegate to produce the output. Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests. Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level. This is also known as fragment caching. For more information, see <a href=\"../Topic/Caching%20Portions%20of%20an%20ASP.NET%20Page.md\" data-linktype=\"relative-path\">Caching Portions of an ASP.NET Page</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.HttpResponse.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.HttpResponse.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddCacheDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddCacheItemDependencies\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddCacheItemDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddFileDependencies\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddFileDependency\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddHeader\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AddOnSendingHeaders\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AppendCookie\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AppendHeader\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.AppendToLog\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ApplyAppPathModifier\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.BeginFlush\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.BinaryWrite\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Buffer\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.BufferOutput\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Cache\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.CacheControl\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Charset\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Clear\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ClearContent\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ClearHeaders\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ClientDisconnectedToken\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Close\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ContentEncoding\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ContentType\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Cookies\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.DisableKernelCache\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.DisableUserCache\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.End\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.EndFlush\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Expires\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.ExpiresAbsolute\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Filter\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Flush\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.FlushAsync\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.HeaderEncoding\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Headers\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.HeadersWritten\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.IsClientConnected\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.IsRequestBeingRedirected\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Output\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.OutputStream\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Pics\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.PushPromise\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Redirect\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.RedirectLocation\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.RedirectPermanent\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.RedirectToRoute\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.RedirectToRoutePermanent\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.RemoveOutputCacheItem\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.SetCookie\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Status\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.StatusCode\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.StatusDescription\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.SubStatusCode\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.SupportsAsyncFlush\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.SuppressContent\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.SuppressDefaultCacheControlHeader\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.SuppressFormsAuthenticationRedirect\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.TransmitFile\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.TrySkipIisCustomErrors\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.Write\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.WriteFile\">\r\n<meta name=\"APIName\" content=\"System.Web.HttpResponse.WriteSubstitution\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9b2e9872-97e1-7151-f2c2-fb176b005708\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web\\HttpResponse.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates HTTP-response information from an ASP.NET operation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.HttpResponse\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.HttpResponse.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.HttpResponse.yml","open_to_public_contributors":true,"api_name":["System.Web.HttpResponse","System.Web.HttpResponse..ctor","System.Web.HttpResponse.AddCacheDependency","System.Web.HttpResponse.AddCacheItemDependencies","System.Web.HttpResponse.AddCacheItemDependency","System.Web.HttpResponse.AddFileDependencies","System.Web.HttpResponse.AddFileDependency","System.Web.HttpResponse.AddHeader","System.Web.HttpResponse.AddOnSendingHeaders","System.Web.HttpResponse.AppendCookie","System.Web.HttpResponse.AppendHeader","System.Web.HttpResponse.AppendToLog","System.Web.HttpResponse.ApplyAppPathModifier","System.Web.HttpResponse.BeginFlush","System.Web.HttpResponse.BinaryWrite","System.Web.HttpResponse.Buffer","System.Web.HttpResponse.BufferOutput","System.Web.HttpResponse.Cache","System.Web.HttpResponse.CacheControl","System.Web.HttpResponse.Charset","System.Web.HttpResponse.Clear","System.Web.HttpResponse.ClearContent","System.Web.HttpResponse.ClearHeaders","System.Web.HttpResponse.ClientDisconnectedToken","System.Web.HttpResponse.Close","System.Web.HttpResponse.ContentEncoding","System.Web.HttpResponse.ContentType","System.Web.HttpResponse.Cookies","System.Web.HttpResponse.DisableKernelCache","System.Web.HttpResponse.DisableUserCache","System.Web.HttpResponse.End","System.Web.HttpResponse.EndFlush","System.Web.HttpResponse.Expires","System.Web.HttpResponse.ExpiresAbsolute","System.Web.HttpResponse.Filter","System.Web.HttpResponse.Flush","System.Web.HttpResponse.FlushAsync","System.Web.HttpResponse.HeaderEncoding","System.Web.HttpResponse.Headers","System.Web.HttpResponse.HeadersWritten","System.Web.HttpResponse.IsClientConnected","System.Web.HttpResponse.IsRequestBeingRedirected","System.Web.HttpResponse.Output","System.Web.HttpResponse.OutputStream","System.Web.HttpResponse.Pics","System.Web.HttpResponse.PushPromise","System.Web.HttpResponse.Redirect","System.Web.HttpResponse.RedirectLocation","System.Web.HttpResponse.RedirectPermanent","System.Web.HttpResponse.RedirectToRoute","System.Web.HttpResponse.RedirectToRoutePermanent","System.Web.HttpResponse.RemoveOutputCacheItem","System.Web.HttpResponse.SetCookie","System.Web.HttpResponse.Status","System.Web.HttpResponse.StatusCode","System.Web.HttpResponse.StatusDescription","System.Web.HttpResponse.SubStatusCode","System.Web.HttpResponse.SupportsAsyncFlush","System.Web.HttpResponse.SuppressContent","System.Web.HttpResponse.SuppressDefaultCacheControlHeader","System.Web.HttpResponse.SuppressFormsAuthenticationRedirect","System.Web.HttpResponse.TransmitFile","System.Web.HttpResponse.TrySkipIisCustomErrors","System.Web.HttpResponse.Write","System.Web.HttpResponse.WriteFile","System.Web.HttpResponse.WriteSubstitution"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.HttpResponse","System::Web::HttpResponse","System.Web.HttpResponse.#ctor","System::Web::HttpResponse::#ctor","System.Web.HttpResponse.AddCacheDependency","System::Web::HttpResponse::AddCacheDependency","System.Web.HttpResponse.AddCacheItemDependencies","System::Web::HttpResponse::AddCacheItemDependencies","System.Web.HttpResponse.AddCacheItemDependency","System::Web::HttpResponse::AddCacheItemDependency","System.Web.HttpResponse.AddFileDependencies","System::Web::HttpResponse::AddFileDependencies","System.Web.HttpResponse.AddFileDependency","System::Web::HttpResponse::AddFileDependency","System.Web.HttpResponse.AddHeader","System::Web::HttpResponse::AddHeader","System.Web.HttpResponse.AddOnSendingHeaders","System::Web::HttpResponse::AddOnSendingHeaders","System.Web.HttpResponse.AppendCookie","System::Web::HttpResponse::AppendCookie","System.Web.HttpResponse.AppendHeader","System::Web::HttpResponse::AppendHeader","System.Web.HttpResponse.AppendToLog","System::Web::HttpResponse::AppendToLog","System.Web.HttpResponse.ApplyAppPathModifier","System::Web::HttpResponse::ApplyAppPathModifier","System.Web.HttpResponse.BeginFlush","System::Web::HttpResponse::BeginFlush","System.Web.HttpResponse.BinaryWrite","System::Web::HttpResponse::BinaryWrite","System.Web.HttpResponse.Buffer","System::Web::HttpResponse::Buffer","System.Web.HttpResponse.BufferOutput","System::Web::HttpResponse::BufferOutput","System.Web.HttpResponse.Cache","System::Web::HttpResponse::Cache","System.Web.HttpResponse.CacheControl","System::Web::HttpResponse::CacheControl","System.Web.HttpResponse.Charset","System::Web::HttpResponse::Charset","System.Web.HttpResponse.Clear","System::Web::HttpResponse::Clear","System.Web.HttpResponse.ClearContent","System::Web::HttpResponse::ClearContent","System.Web.HttpResponse.ClearHeaders","System::Web::HttpResponse::ClearHeaders","System.Web.HttpResponse.ClientDisconnectedToken","System::Web::HttpResponse::ClientDisconnectedToken","System.Web.HttpResponse.Close","System::Web::HttpResponse::Close","System.Web.HttpResponse.ContentEncoding","System::Web::HttpResponse::ContentEncoding","System.Web.HttpResponse.ContentType","System::Web::HttpResponse::ContentType","System.Web.HttpResponse.Cookies","System::Web::HttpResponse::Cookies","System.Web.HttpResponse.DisableKernelCache","System::Web::HttpResponse::DisableKernelCache","System.Web.HttpResponse.DisableUserCache","System::Web::HttpResponse::DisableUserCache","System.Web.HttpResponse.End","System::Web::HttpResponse::End","System.Web.HttpResponse.EndFlush","System::Web::HttpResponse::EndFlush","System.Web.HttpResponse.Expires","System::Web::HttpResponse::Expires","System.Web.HttpResponse.ExpiresAbsolute","System::Web::HttpResponse::ExpiresAbsolute","System.Web.HttpResponse.Filter","System::Web::HttpResponse::Filter","System.Web.HttpResponse.Flush","System::Web::HttpResponse::Flush","System.Web.HttpResponse.FlushAsync","System::Web::HttpResponse::FlushAsync","System.Web.HttpResponse.HeaderEncoding","System::Web::HttpResponse::HeaderEncoding","System.Web.HttpResponse.Headers","System::Web::HttpResponse::Headers","System.Web.HttpResponse.HeadersWritten","System::Web::HttpResponse::HeadersWritten","System.Web.HttpResponse.IsClientConnected","System::Web::HttpResponse::IsClientConnected","System.Web.HttpResponse.IsRequestBeingRedirected","System::Web::HttpResponse::IsRequestBeingRedirected","System.Web.HttpResponse.Output","System::Web::HttpResponse::Output","System.Web.HttpResponse.OutputStream","System::Web::HttpResponse::OutputStream","System.Web.HttpResponse.Pics","System::Web::HttpResponse::Pics","System.Web.HttpResponse.PushPromise","System::Web::HttpResponse::PushPromise","System.Web.HttpResponse.Redirect","System::Web::HttpResponse::Redirect","System.Web.HttpResponse.RedirectLocation","System::Web::HttpResponse::RedirectLocation","System.Web.HttpResponse.RedirectPermanent","System::Web::HttpResponse::RedirectPermanent","System.Web.HttpResponse.RedirectToRoute","System::Web::HttpResponse::RedirectToRoute","System.Web.HttpResponse.RedirectToRoutePermanent","System::Web::HttpResponse::RedirectToRoutePermanent","System.Web.HttpResponse.RemoveOutputCacheItem","System::Web::HttpResponse::RemoveOutputCacheItem","System.Web.HttpResponse.SetCookie","System::Web::HttpResponse::SetCookie","System.Web.HttpResponse.Status","System::Web::HttpResponse::Status","System.Web.HttpResponse.StatusCode","System::Web::HttpResponse::StatusCode","System.Web.HttpResponse.StatusDescription","System::Web::HttpResponse::StatusDescription","System.Web.HttpResponse.SubStatusCode","System::Web::HttpResponse::SubStatusCode","System.Web.HttpResponse.SupportsAsyncFlush","System::Web::HttpResponse::SupportsAsyncFlush","System.Web.HttpResponse.SuppressContent","System::Web::HttpResponse::SuppressContent","System.Web.HttpResponse.SuppressDefaultCacheControlHeader","System::Web::HttpResponse::SuppressDefaultCacheControlHeader","System.Web.HttpResponse.SuppressFormsAuthenticationRedirect","System::Web::HttpResponse::SuppressFormsAuthenticationRedirect","System.Web.HttpResponse.TransmitFile","System::Web::HttpResponse::TransmitFile","System.Web.HttpResponse.TrySkipIisCustomErrors","System::Web::HttpResponse::TrySkipIisCustomErrors","System.Web.HttpResponse.Write","System::Web::HttpResponse::Write","System.Web.HttpResponse.WriteFile","System::Web::HttpResponse::WriteFile","System.Web.HttpResponse.WriteSubstitution","System::Web::HttpResponse::WriteSubstitution"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9b2e9872-97e1-7151-f2c2-fb176b005708","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web\\HttpResponse.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web/HttpResponse.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"HttpResponse class | Microsoft Docs","_op_ogTitle":"HttpResponse class","description":"Encapsulates HTTP-response information from an ASP.NET operation.\n","toc_asset_id":"_splitted/System.Web/toc.json","toc_rel":"_splitted/System.Web/toc.json","source_url":"","ms.assetid":"System.Web.HttpResponse","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.httpresponse","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.httpresponse","fileRelativePath":"System.Web.HttpResponse.html"},"themesRelativePathToOutputRoot":"_themes/"}