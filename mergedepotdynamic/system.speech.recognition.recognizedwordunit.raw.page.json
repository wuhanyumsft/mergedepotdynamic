{"content":"    \r\n    <h1 id=\"System_Speech_Recognition_RecognizedWordUnit\">\r\n      <span class=\"lang-csharp\">RecognizedWordUnit</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the atomic unit of recognized speech.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;Text: {Text}&quot;)]\npublic class RecognizedWordUnit</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RecognizedWordUnit</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>All results returned by a recognition engine are constructed of RecognizedWordUnit objects.  </p>\n<p> An array of RecognizedWordUnit objects is accessible for any recognition operation through the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Words_\" data-linktype=\"relative-path\">Words</a> property on the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> object.  </p>\n<p> In addition to providing a measure of recognition certainty (<a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Confidence_\" data-linktype=\"relative-path\">Confidence</a>) a RecognizedWordUnit instance provides:  </p>\n<ul>\n<li><p>Normalized and exact (or lexical) text representations for a recognized word. For more information, see <a class=\"xref\" href=\"system.speech.recognition.replacementtext\" data-linktype=\"relative-path\">ReplacementText</a>, <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Text_\" data-linktype=\"relative-path\">Text</a>, and <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_LexicalForm_\" data-linktype=\"relative-path\">LexicalForm</a>.  </p>\n</li>\n<li><p>Pronunciation information using characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS). For more information see <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Pronunciation_\" data-linktype=\"relative-path\">Pronunciation</a>.  </p>\n</li>\n<li><p>Formatting for printing. For more information see the <a class=\"xref\" href=\"system.speech.recognition.displayattributes\" data-linktype=\"relative-path\">DisplayAttributes</a> class and its <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_DisplayAttributes_\" data-linktype=\"relative-path\">DisplayAttributes</a> property.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_RecognizedWordUnit__ctor_System_String_System_Single_System_String_System_String_System_Speech_Recognition_DisplayAttributes_System_TimeSpan_System_TimeSpan_\" data-linktype=\"self-bookmark\">RecognizedWordUnit(String,Single,String,String,DisplayAttributes,TimeSpan,TimeSpan)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_RecognizedWordUnit_Confidence\" data-linktype=\"self-bookmark\">Confidence</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value, assigned by the recognizer, that represents the likelihood that a recognized word matches a given input.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_RecognizedWordUnit_DisplayAttributes\" data-linktype=\"self-bookmark\">DisplayAttributes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets formatting information used to create the text output from the current <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_RecognizedWordUnit_LexicalForm\" data-linktype=\"self-bookmark\">LexicalForm</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the unnormalized text of a recognized word.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_RecognizedWordUnit_Pronunciation\" data-linktype=\"self-bookmark\">Pronunciation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the phonetic spelling of a recognized word.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Speech_Recognition_RecognizedWordUnit_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the normalized text for a recognized word.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_RecognizedWordUnit__ctor_System_String_System_Single_System_String_System_String_System_Speech_Recognition_DisplayAttributes_System_TimeSpan_System_TimeSpan_\">\r\n    \r\n            <a id=\"System_Speech_Recognition_RecognizedWordUnit__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RecognizedWordUnit(String,Single,String,String,DisplayAttributes,TimeSpan,TimeSpan)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public RecognizedWordUnit (string text, float confidence, string pronunciation, string lexicalForm, System.Speech.Recognition.DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The normalized text for a recognized word.  </p>\n<p> This value can be <code>null</code>, &quot;&quot;, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>confidence</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <code>float</code> value from 0.0 through 1.0 indicating the certainty of word recognition.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pronunciation</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The phonetic spelling of a recognized word.  </p>\n<p> This value can be <code>null</code>, &quot;&quot;, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>lexicalForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The unnormalized text for a recognized word.  </p>\n<p> This argument is required and may not be <code>null</code>, &quot;&quot;, or <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.recognition.displayattributes\" data-linktype=\"relative-path\">DisplayAttributes</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Defines the use of white space to display recognized words.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>audioPosition</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location of the recognized word in the audio input stream.  </p>\n<p> This value can be <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>audioDuration</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The length of the audio input corresponding to the recognized word.  </p>\n<p> This value can be <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>text</code> or <code>pronunciation</code> are <code>null</code>, &quot;&quot;, or <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> and the <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> is used in a recognition operation, the recognition engine will generate appropriate values in any output <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> instance.  </p>\n<p> Direct construction of <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> instances is typically used only when emulating recognition operations using the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognize_\" data-linktype=\"relative-path\">EmulateRecognize</a> or <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_EmulateRecognizeAsync_\" data-linktype=\"relative-path\">EmulateRecognizeAsync</a> methods of the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine\" data-linktype=\"relative-path\">SpeechRecognitionEngine</a> class and the <a class=\"xref\" href=\"system.speech.recognition.speechrecognizer#System_Speech_Recognition_SpeechRecognizer_EmulateRecognize_\" data-linktype=\"relative-path\">EmulateRecognize</a> or <a class=\"xref\" href=\"system.speech.recognition.speechrecognizer#System_Speech_Recognition_SpeechRecognizer_EmulateRecognizeAsync_\" data-linktype=\"relative-path\">EmulateRecognizeAsync</a> methods of the <a class=\"xref\" href=\"system.speech.recognition.speechrecognizer\" data-linktype=\"relative-path\">SpeechRecognizer</a> class.  </p>\n<p> For actual applications, do not directly construct <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a>, rather obtain it through the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Words_\" data-linktype=\"relative-path\">Words</a> property on the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is a somewhat contrived test of emulation, where new words are generated from the input and passed to the emulator, and then verified.  </p>\n<pre><code class=\"lang-c#\">private void _emulateAndVerify_Click(object sender, EventArgs e)   \n{  \n  char[] delimiterChars = { &#39; &#39;, &#39;,&#39;, &#39;.&#39;, &#39;:&#39;, &#39;;&#39;, &#39;&nbsp;&nbsp;&nbsp;&nbsp;&#39; };  \n  string text = _emulateTextBox.Text;  \n  string[] words = text.Split(delimiterChars);  \n\n  RecognizedWordUnit[] InputWordUnits = new RecognizedWordUnit[words.Length];  \n  for (int i = 0; i &lt; words.Length; i++)   \n  {  \n    InputWordUnits[i] = new RecognizedWordUnit(  \n        &quot;&quot;,   \n        0,   \n        &quot;&quot;,  \n        words[i].ToLower(),   \n        DisplayAttributes.OneTrailingSpace,   \n        new TimeSpan(),   \n        new TimeSpan());  \n  }  \n\n  RecognitionResult rec = _recognizer.EmulateRecognize(  \n        InputWordUnits,   \n        System.Globalization.CompareOptions.IgnoreCase);  \n  if (rec == null)   \n  {  \n    MessageBox.Show(String.Format(&quot;Recognition emulation for {0} failed.<br>&quot;, text));  \n  }   \n  else if (InputWordUnits.Length != rec.Words.Count)   \n  {  \n    MessageBox.Show(  \n       String.Format(&quot;Length mismatch: Input was {0} words, Recognition has {1} words.<br>}&quot;));  \n  }   \n  else   \n  {  \n    for (int i = 0; i &lt; InputWordUnits.Length; i++)   \n    {  \n\n      if (rec.Words[i].LexicalForm.ToLower() != InputWordUnits[i].LexicalForm.ToLower())   \n      {  \n        MessageBox.Show(  \n          String.Format(&quot;Input word {0} \\&quot;{1}\\&quot; not found. Recognition output is {2}&quot;,  \n          i, InputWordUnits[i].LexicalForm, rec.Words[i].LexicalForm));  \n        continue;  \n      }  \n    }  \n  }  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_RecognizedWordUnit_Confidence\">\r\n    \r\n            <a id=\"System_Speech_Recognition_RecognizedWordUnit_Confidence_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Confidence</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value, assigned by the recognizer, that represents the likelihood that a recognized word matches a given input.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float Confidence { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>A relative measure of the certainty of correct recognition for a word. The value is from 0.0 to 1.0, for low to high confidence, respectively.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Confidence scores do not indicate the absolute likelihood that a word was recognized correctly. Instead, confidence scores provide a mechanism for comparing the relative accuracy of multiple recognition alternates for a given input. This facilitates returning the most accurate recognition result. For example, if a recognized word has a confidence score of 0.8, this does not mean that the word has an 80% chance of being the correct match for the input.  It means that the word is more likely to be the correct match for the input than other results that have confidence scores less than 0.8.  </p>\n<p> A confidence score on its own is not meaningful unless you have alternative results to compare against, either from the same recognition operation or from previous recognitions of the same input.  </p>\n<p> The values returned by Confidence are relative and unique to each recognition engine. There is no definition of how confidence values between two different recognition engines compare, nor how the Confidence of individual <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> objects define the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Confidence_\" data-linktype=\"relative-path\">Confidence</a> of a <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a>.  </p>\n<p> A speech recognition engine may assign a low confidence score to spoken input for various reasons, including background interference, inarticulate speech, or unanticipated words or word sequences. If your application is using a <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine\" data-linktype=\"relative-path\">SpeechRecognitionEngine</a> instance, you can modify the confidence level at which speech input is accepted or rejected with one of the <a class=\"xref\" href=\"system.speech.recognition.speechrecognitionengine#System_Speech_Recognition_SpeechRecognitionEngine_UpdateRecognizerSetting_\" data-linktype=\"relative-path\">UpdateRecognizerSetting</a> methods. Confidence thresholds for the shared recognizer, managed by <a class=\"xref\" href=\"system.speech.recognition.speechrecognizer\" data-linktype=\"relative-path\">SpeechRecognizer</a>, are associated with a user profile and stored in the Windows registry. Applications should not write changes to the registry for the properties of the shared recognizer.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_RecognizedWordUnit_DisplayAttributes\">\r\n    \r\n            <a id=\"System_Speech_Recognition_RecognizedWordUnit_DisplayAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayAttributes</div>        \r\n          </div>\r\n    \r\n            <p>Gets formatting information used to create the text output from the current <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Speech.Recognition.DisplayAttributes DisplayAttributes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.speech.recognition.displayattributes\" data-linktype=\"relative-path\">DisplayAttributes</a></div>\r\n                  </div>\r\n                  <p>Specifies the use of white space to display of the contents of a <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.speech.recognition.displayattributes\" data-linktype=\"relative-path\">DisplayAttributes</a> object returned by the DisplayAttributes property specifies the leading and trailing spaces to be used with a given word, if any.  </p>\n<p> For more information about how to use this formatting information, see the <a class=\"xref\" href=\"system.speech.recognition.displayattributes\" data-linktype=\"relative-path\">DisplayAttributes</a> enumeration.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a utility routine (<code>stringFromWordArray</code>) that generates a string that is formatted in one of three ways: lexically (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_LexicalForm_\" data-linktype=\"relative-path\">LexicalForm</a>), normalized (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Text_\" data-linktype=\"relative-path\">Text</a>), or phonetically (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Pronunciation_\" data-linktype=\"relative-path\">Pronunciation</a>). The text output is obtained from the DisplayAttributes property on a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> of <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> objects, which is obtained from the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Words_\" data-linktype=\"relative-path\">Words</a> property on a <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> object.  </p>\n<pre><code class=\"lang-c#\">\ninternal enum WordType   \n{  \n  Text,  \n  Normalized = Text,  \n  Lexical,  \n  Pronunciation  \n}  \n</code></pre><pre><code class=\"lang-c#\">internal static string stringFromWordArray(  \n        ReadOnlyCollection&lt;RecognizedWordUnit&gt; words,   \n        WordType type)   \n{  \n  string text = &quot;&quot;;  \n  foreach (RecognizedWordUnit word in words)   \n  {  \n    string wordText = &quot;&quot;;  \n    if (type == WordType.Text || type == WordType.Normalized)   \n    {  \n      wordText = word.Text;  \n    }   \n    else if (type == WordType.Lexical)   \n    {  \n      wordText = word.LexicalForm;  \n    }  \n    else if (type == WordType.Pronunciation)   \n    {  \n       wordText = word.Pronunciation;  \n    }   \n    else   \n    {  \n      throw new InvalidEnumArgumentException(  \n         String.Format(&quot;[0}: is not a valid input&quot;, type));  \n    }  \n\n    // Use display attribute  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.OneTrailingSpace) != 0)   \n    {  \n      wordText += &quot; &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.TwoTrailingSpaces) != 0)  \n    {  \n      wordText += &quot;  &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ConsumeLeadingSpaces) != 0)   \n    {  \n      wordText = wordText.TrimStart();  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ZeroTrailingSpaces) != 0)  \n    {  \n      wordText = wordText.TrimEnd();  \n    }  \n\n    text += wordText;  \n\n  }  \n  return text;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_RecognizedWordUnit_LexicalForm\">\r\n    \r\n            <a id=\"System_Speech_Recognition_RecognizedWordUnit_LexicalForm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LexicalForm</div>        \r\n          </div>\r\n    \r\n            <p>Gets the unnormalized text of a recognized word.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string LexicalForm { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the text of a recognized word, without any normalization.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In most cases the values returned by <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Text_\" data-linktype=\"relative-path\">Text</a> and LexicalForm are identical. However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.  </p>\n<p> Speech normalization is the use of special constructs or symbols to express speech in writing. For example, normalization can replace the spoken words &quot;a dollar and sixteen cents&quot; with &quot;$1.16&quot; in output text.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a utility routine that generates text in one of three formats: lexical (using LexicalForm), normalized (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Text_\" data-linktype=\"relative-path\">Text</a>), and phonetic (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Pronunciation_\" data-linktype=\"relative-path\">Pronunciation</a>). The text output is obtained from a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> of <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> objects, which is obtained from the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Words_\" data-linktype=\"relative-path\">Words</a> property on the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> object.  </p>\n<pre><code class=\"lang-c#\">\ninternal enum WordType   \n{  \n  Text,  \n  Normalized = Text,  \n  Lexical,  \n  Pronunciation  \n}  \n</code></pre><pre><code class=\"lang-c#\">internal static string stringFromWordArray(  \n         ReadOnlyCollection&lt;RecognizedWordUnit&gt; words,   \n         WordType type)   \n{  \n  string text = &quot;&quot;;  \n  foreach (RecognizedWordUnit word in words)   \n  {  \n    string wordText = &quot;&quot;;  \n    if (type == WordType.Text || type == WordType.Normalized)   \n    {  \n      wordText = word.Text;  \n    }   \n    else if (type == WordType.Lexical)   \n    {  \n      wordText = word.LexicalForm;  \n    }   \n    else if (type == WordType.Pronunciation)   \n    {  \n      wordText = word.Pronunciation;  \n    }   \n    else   \n    {  \n      throw new InvalidEnumArgumentException(  \n          String.Format(&quot;[0}: is not a valid input&quot;, type));  \n    }  \n\n    // Use display attribute  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.OneTrailingSpace) != 0)   \n    {  \n      wordText += &quot; &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.TwoTrailingSpaces) != 0)  \n    {  \n      wordText += &quot;  &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ConsumeLeadingSpaces) != 0)   \n    {  \n      wordText = wordText.TrimStart();  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ZeroTrailingSpaces) != 0)  \n    {  \n    wordText = wordText.TrimEnd();  \n    }  \n\n    text += wordText;  \n\n  }  \n  return text;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_RecognizedWordUnit_Pronunciation\">\r\n    \r\n            <a id=\"System_Speech_Recognition_RecognizedWordUnit_Pronunciation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pronunciation</div>        \r\n          </div>\r\n    \r\n            <p>Gets the phonetic spelling of a recognized word.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Pronunciation { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string of characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The contents of Pronunciation indicate which pronunciation the speech recognition engine used to match speech input to one of its loaded <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> objects. Pronunciations may be defined in the speech recognition engine&#39;s internal lexicon, in a lexicon document that is linked from a recognition grammar in a loaded <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> object, or inline in a recognition grammar in a loaded <a class=\"xref\" href=\"system.speech.recognition.grammar\" data-linktype=\"relative-path\">Grammar</a> object. A speech recognition engine may also create pronunciations for uncommon words whose pronunciations are not defined in a lexicon or grammar to which the speech recognition engine currently has access.  </p>\n<p> Many Windows-based Unicode fonts, such as Courier New, support the display of IPA strings. For more information, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=58363\" data-linktype=\"external\">International Phonetic Alphabet</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a utility routine that generates a string with one of three possible formats: lexical (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_LexicalForm_\" data-linktype=\"relative-path\">LexicalForm</a>), normalized (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Text_\" data-linktype=\"relative-path\">Text</a>), and phonetic (using Pronunciation). The text output is obtained from a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> of <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> objects, which is obtained from the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Words_\" data-linktype=\"relative-path\">Words</a> property on the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> object.  </p>\n<pre><code class=\"lang-c#\">\ninternal enum WordType   \n{  \n  Text,  \n  Normalized = Text,  \n  Lexical,  \n  Pronunciation  \n}  \n</code></pre><pre><code class=\"lang-c#\">internal static string stringFromWordArray(  \n          ReadOnlyCollection&lt;RecognizedWordUnit&gt; words,   \n          WordType type)   \n{  \n  string text = &quot;&quot;;  \n  foreach (RecognizedWordUnit word in words)   \n  {  \n    string wordText = &quot;&quot;;  \n    if (type == WordType.Text || type == WordType.Normalized)   \n    {  \n      wordText = word.Text;  \n    }   \n    else if (type == WordType.Lexical)   \n    {  \n      wordText = word.LexicalForm;  \n    }   \n    else if (type == WordType.Pronunciation)   \n    {  \n      wordText = word.Pronunciation;  \n    }   \n    else   \n    {  \n      throw new InvalidEnumArgumentException(  \n          String.Format(&quot;[0}: is not a valid input&quot;, type));  \n    }  \n    // Use display attribute  \n\n    if ((word.DisplayAttributes &amp; DisplayAttributes.OneTrailingSpace) != 0)   \n    {  \n      wordText += &quot; &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.TwoTrailingSpaces) != 0)   \n    {  \n      wordText += &quot;  &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ConsumeLeadingSpaces) != 0)   \n    {  \n      wordText = wordText.TrimStart();  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ZeroTrailingSpaces) != 0)   \n    {  \n      wordText = wordText.TrimEnd();  \n    }  \n\n    text += wordText;  \n  }  \n  return text;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Speech_Recognition_RecognizedWordUnit_Text\">\r\n    \r\n            <a id=\"System_Speech_Recognition_RecognizedWordUnit_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets the normalized text for a recognized word.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Text { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that contains the normalized text output for a given input word.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In most cases the values returned by Text and <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_LexicalForm_\" data-linktype=\"relative-path\">LexicalForm</a> will be identical. However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.  </p>\n<p> Speech normalization is the use of special constructs or symbols to express speech in writing. For example, normalization can replace the spoken words &quot;a dollar and sixteen cents&quot; with &quot;$1.16&quot; in output text.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows a utility routine that generates a string in one of three formats: lexical (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_LexicalForm_\" data-linktype=\"relative-path\">LexicalForm</a>), normalized (using Text), and phonetic (using <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit#System_Speech_Recognition_RecognizedWordUnit_Pronunciation_\" data-linktype=\"relative-path\">Pronunciation</a>). The text output is obtained from a <a class=\"xref\" href=\"system.collections.objectmodel.readonlycollection-1\" data-linktype=\"relative-path\">ReadOnlyCollection&lt;T&gt;</a> of <a class=\"xref\" href=\"system.speech.recognition.recognizedwordunit\" data-linktype=\"relative-path\">RecognizedWordUnit</a> objects, which is obtained from the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase#System_Speech_Recognition_RecognizedPhrase_Words_\" data-linktype=\"relative-path\">Words</a> property on the <a class=\"xref\" href=\"system.speech.recognition.recognizedphrase\" data-linktype=\"relative-path\">RecognizedPhrase</a> object.  </p>\n<pre><code class=\"lang-c#\">\ninternal enum WordType   \n{  \n  Text,  \n  Normalized = Text,  \n  Lexical,  \n  Pronunciation  \n}  \n</code></pre><pre><code class=\"lang-c#\">internal static string stringFromWordArray(  \n          ReadOnlyCollection&lt;RecognizedWordUnit&gt; words,   \n          WordType type)   \n{  \n  string text = &quot;&quot;;  \n  foreach (RecognizedWordUnit word in words)   \n  {  \n    string wordText = &quot;&quot;;  \n    if (type == WordType.Text || type == WordType.Normalized)   \n    {  \n      wordText = word.Text;  \n    }   \n    else if (type == WordType.Lexical)   \n    {  \n      wordText = word.LexicalForm;  \n    }   \n    else if (type == WordType.Pronunciation)   \n    {  \n      wordText = word.Pronunciation;  \n    }   \n    else   \n    {  \n      throw new InvalidEnumArgumentException(  \n           String.Format(&quot;[0}: is not a valid input&quot;, type));  \n    }  \n\n    // Use display attribute  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.OneTrailingSpace) != 0)   \n    {  \n      wordText += &quot; &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.TwoTrailingSpaces) != 0)   \n    {  \n      wordText += &quot;  &quot;;  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ConsumeLeadingSpaces) != 0)   \n    {  \n      wordText = wordText.TrimStart();  \n    }  \n    if ((word.DisplayAttributes &amp; DisplayAttributes.ZeroTrailingSpaces) != 0)   \n    {  \n      wordText = wordText.TrimEnd();  \n    }  \n\n    text += wordText;  \n\n  }  \n  return text;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Recognition.RecognizedWordUnit.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Recognition.RecognizedWordUnit.yml\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit..ctor\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit.Confidence\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit.LexicalForm\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit.Pronunciation\">\r\n<meta name=\"APIName\" content=\"System.Speech.Recognition.RecognizedWordUnit.Text\">\r\n<meta name=\"APILocation\" content=\"System.Speech.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"10a2caee-03e2-8f9c-e910-bec9d1c9912f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the atomic unit of recognized speech.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Speech.Recognition/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Speech.Recognition.RecognizedWordUnit\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Speech.Recognition.RecognizedWordUnit.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Speech.Recognition.RecognizedWordUnit.yml","open_to_public_contributors":true,"api_name":["System.Speech.Recognition.RecognizedWordUnit","System.Speech.Recognition.RecognizedWordUnit..ctor","System.Speech.Recognition.RecognizedWordUnit.Confidence","System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes","System.Speech.Recognition.RecognizedWordUnit.LexicalForm","System.Speech.Recognition.RecognizedWordUnit.Pronunciation","System.Speech.Recognition.RecognizedWordUnit.Text"],"api_location":["System.Speech.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Speech.Recognition.RecognizedWordUnit","System::Speech::Recognition::RecognizedWordUnit","System.Speech.Recognition.RecognizedWordUnit.#ctor","System::Speech::Recognition::RecognizedWordUnit::#ctor","System.Speech.Recognition.RecognizedWordUnit.Confidence","System::Speech::Recognition::RecognizedWordUnit::Confidence","System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes","System::Speech::Recognition::RecognizedWordUnit::DisplayAttributes","System.Speech.Recognition.RecognizedWordUnit.LexicalForm","System::Speech::Recognition::RecognizedWordUnit::LexicalForm","System.Speech.Recognition.RecognizedWordUnit.Pronunciation","System::Speech::Recognition::RecognizedWordUnit::Pronunciation","System.Speech.Recognition.RecognizedWordUnit.Text","System::Speech::Recognition::RecognizedWordUnit::Text"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"10a2caee-03e2-8f9c-e910-bec9d1c9912f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Speech.Recognition/RecognizedWordUnit.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RecognizedWordUnit class | Microsoft Docs","_op_ogTitle":"RecognizedWordUnit class","description":"Provides the atomic unit of recognized speech.\n","toc_asset_id":"_splitted/System.Speech.Recognition/toc.json","toc_rel":"_splitted/System.Speech.Recognition/toc.json","source_url":"","ms.assetid":"System.Speech.Recognition.RecognizedWordUnit","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.recognition.recognizedwordunit","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.speech.recognition.recognizedwordunit","fileRelativePath":"System.Speech.Recognition.RecognizedWordUnit.html"},"themesRelativePathToOutputRoot":"_themes/"}